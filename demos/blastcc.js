
var Module;

if (typeof Module === 'undefined') Module = {};

if (!Module.expectedDataFileDownloads) {
  Module.expectedDataFileDownloads = 0;
  Module.finishedDataFileDownloads = 0;
}
Module.expectedDataFileDownloads++;
(function() {
 var loadPackage = function(metadata) {

    var PACKAGE_PATH;
    if (typeof window === 'object') {
      PACKAGE_PATH = window['encodeURIComponent'](window.location.pathname.toString().substring(0, window.location.pathname.toString().lastIndexOf('/')) + '/');
    } else if (typeof location !== 'undefined') {
      // worker
      PACKAGE_PATH = encodeURIComponent(location.pathname.toString().substring(0, location.pathname.toString().lastIndexOf('/')) + '/');
    } else {
      throw 'using preloaded data can only be done on a web page or in a web worker';
    }
    var PACKAGE_NAME = bbFileName;
    var REMOTE_PACKAGE_BASE = bbFileName;
    if (typeof Module['locateFilePackage'] === 'function' && !Module['locateFile']) {
      Module['locateFile'] = Module['locateFilePackage'];
      Module.printErr('warning: you defined Module.locateFilePackage, that has been renamed to Module.locateFile (using your locateFilePackage for now)');
    }
    var REMOTE_PACKAGE_NAME = typeof Module['locateFile'] === 'function' ?
                              Module['locateFile'](REMOTE_PACKAGE_BASE) :
                              ((Module['filePackagePrefixURL'] || '') + REMOTE_PACKAGE_BASE);
  
    var REMOTE_PACKAGE_SIZE = metadata.remote_package_size;
    var PACKAGE_UUID = metadata.package_uuid;
  
    function fetchRemotePackage(packageName, packageSize, callback, errback) {
      var xhr = new XMLHttpRequest();
      xhr.open('GET', packageName, true);
      xhr.responseType = 'arraybuffer';
      xhr.onprogress = function(event) {
        var url = packageName;
        var size = packageSize;
        if (event.total) size = event.total;
        if (event.loaded) {
          if (!xhr.addedTotal) {
            xhr.addedTotal = true;
            if (!Module.dataFileDownloads) Module.dataFileDownloads = {};
            Module.dataFileDownloads[url] = {
              loaded: event.loaded,
              total: size
            };
          } else {
            Module.dataFileDownloads[url].loaded = event.loaded;
          }
          var total = 0;
          var loaded = 0;
          var num = 0;
          for (var download in Module.dataFileDownloads) {
          var data = Module.dataFileDownloads[download];
            total += data.total;
            loaded += data.loaded;
            num++;
          }
          total = Math.ceil(total * Module.expectedDataFileDownloads/num);
          if (Module['setStatus']) Module['setStatus']('Downloading data... (' + loaded + '/' + total + ')');
        } else if (!Module.dataFileDownloads) {
          if (Module['setStatus']) Module['setStatus']('Downloading data...');
        }
      };
      xhr.onload = function(event) {
        var packageData = xhr.response;
        callback(packageData);
      };
      xhr.send(null);
    };

    function handleError(error) {
      console.error('package error:', error);
    };
  
      var fetched = null, fetchedCallback = null;
      fetchRemotePackage(REMOTE_PACKAGE_NAME, REMOTE_PACKAGE_SIZE, function(data) {
        if (fetchedCallback) {
          fetchedCallback(data);
          fetchedCallback = null;
        } else {
          fetched = data;
        }
      }, handleError);
    
  function runWithFS() {

    function assert(check, msg) {
      if (!check) throw msg + new Error().stack;
    }
Module['FS_createPath']('/', 'data', true, true);

    function DataRequest(start, end, crunched, audio) {
      this.start = start;
      this.end = end;
      this.crunched = crunched;
      this.audio = audio;
    }
    DataRequest.prototype = {
      requests: {},
      open: function(mode, name) {
        this.name = name;
        this.requests[name] = this;
        Module['addRunDependency']('fp ' + this.name);
      },
      send: function() {},
      onload: function() {
        var byteArray = this.byteArray.subarray(this.start, this.end);

          this.finish(byteArray);

      },
      finish: function(byteArray) {
        var that = this;

        Module['FS_createDataFile'](this.name, null, byteArray, true, true, true); // canOwn this data in the filesystem, it is a slide into the heap that will never change
        Module['removeRunDependency']('fp ' + that.name);

        this.requests[this.name] = null;
      },
    };

        var files = metadata.files;
        for (i = 0; i < files.length; ++i) {
          new DataRequest(files[i].start, files[i].end, files[i].crunched, files[i].audio).open('GET', files[i].filename);
        }

  
    function processPackageData(arrayBuffer) {
      Module.finishedDataFileDownloads++;
      assert(arrayBuffer, 'Loading data file failed.');
      assert(arrayBuffer instanceof ArrayBuffer, 'bad input to processPackageData');
      var byteArray = new Uint8Array(arrayBuffer);
      var curr;
      
        // copy the entire loaded file into a spot in the heap. Files will refer to slices in that. They cannot be freed though
        // (we may be allocating before malloc is ready, during startup).
        if (Module['SPLIT_MEMORY']) Module.printErr('warning: you should run the file packager with --no-heap-copy when SPLIT_MEMORY is used, otherwise copying into the heap may fail due to the splitting');
        var ptr = Module['getMemory'](byteArray.length);
        Module['HEAPU8'].set(byteArray, ptr);
        DataRequest.prototype.byteArray = Module['HEAPU8'].subarray(ptr, ptr+byteArray.length);
  
          var files = metadata.files;
          for (i = 0; i < files.length; ++i) {
            DataRequest.prototype.requests[files[i].filename].onload();
          }
              Module['removeRunDependency']('datafile_test.bb');

    };
    Module['addRunDependency']('datafile_test.bb');
  
    if (!Module.preloadResults) Module.preloadResults = {};
  
      Module.preloadResults[PACKAGE_NAME] = {fromCache: false};
      if (fetched) {
        processPackageData(fetched);
        fetched = null;
      } else {
        fetchedCallback = processPackageData;
      }
    
  }
  if (Module['calledRun']) {
    runWithFS();
  } else {
    if (!Module['preRun']) Module['preRun'] = [];
    Module["preRun"].push(runWithFS); // FS is not initialized yet, wait for it
  }

 }
 loadPackage({"files": [{"audio": 0, "start": 0, "crunched": 0, "end": bbFileSize, "filename": "/data/code.bb"}], "remote_package_size": bbFileSize, "package_uuid": "f2b71f57-4c17-41f8-a41b-4c351147c0b6"});

})();

// The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..generated code.. }
// 3. pre-run appended it, var Module = {}; ..generated code..
// 4. External script tag defines var Module.
// We need to do an eval in order to handle the closure compiler
// case, where this code here is minified but Module was defined
// elsewhere (e.g. case 4 above). We also need to check if Module
// already exists (e.g. case 3 above).
// Note that if you want to run closure, and also to use Module
// after the generated code, you will need to define   var Module = {};
// before the code. Then that object will be used in the code, and you
// can continue to use Module afterwards as well.
var Module;
if (!Module) Module = (typeof Module !== 'undefined' ? Module : null) || {};

// Sometimes an existing Module object exists with properties
// meant to overwrite the default module functionality. Here
// we collect those properties and reapply _after_ we configure
// the current environment's defaults to avoid having to be so
// defensive during initialization.
var moduleOverrides = {};
for (var key in Module) {
  if (Module.hasOwnProperty(key)) {
    moduleOverrides[key] = Module[key];
  }
}

// The environment setup code below is customized to use Module.
// *** Environment setup code ***
var ENVIRONMENT_IS_WEB = typeof window === 'object';
// Three configurations we can be running in:
// 1) We could be the application main() thread running in the main JS UI thread. (ENVIRONMENT_IS_WORKER == false and ENVIRONMENT_IS_PTHREAD == false)
// 2) We could be the application main() thread proxied to worker. (with Emscripten -s PROXY_TO_WORKER=1) (ENVIRONMENT_IS_WORKER == true, ENVIRONMENT_IS_PTHREAD == false)
// 3) We could be an application pthread running in a worker. (ENVIRONMENT_IS_WORKER == true and ENVIRONMENT_IS_PTHREAD == true)
var ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
var ENVIRONMENT_IS_NODE = typeof process === 'object' && typeof require === 'function' && !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_WORKER;
var ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;

if (ENVIRONMENT_IS_NODE) {
  // Expose functionality in the same simple way that the shells work
  // Note that we pollute the global namespace here, otherwise we break in node
  if (!Module['print']) Module['print'] = function print(x) {
    process['stdout'].write(x + '\n');
  };
  if (!Module['printErr']) Module['printErr'] = function printErr(x) {
    process['stderr'].write(x + '\n');
  };

  var nodeFS = require('fs');
  var nodePath = require('path');

  Module['read'] = function read(filename, binary) {
    filename = nodePath['normalize'](filename);
    var ret = nodeFS['readFileSync'](filename);
    // The path is absolute if the normalized version is the same as the resolved.
    if (!ret && filename != nodePath['resolve'](filename)) {
      filename = path.join(__dirname, '..', 'src', filename);
      ret = nodeFS['readFileSync'](filename);
    }
    if (ret && !binary) ret = ret.toString();
    return ret;
  };

  Module['readBinary'] = function readBinary(filename) {
    var ret = Module['read'](filename, true);
    if (!ret.buffer) {
      ret = new Uint8Array(ret);
    }
    assert(ret.buffer);
    return ret;
  };

  Module['load'] = function load(f) {
    globalEval(read(f));
  };

  if (!Module['thisProgram']) {
    if (process['argv'].length > 1) {
      Module['thisProgram'] = process['argv'][1].replace(/\\/g, '/');
    } else {
      Module['thisProgram'] = 'unknown-program';
    }
  }

  Module['arguments'] = process['argv'].slice(2);

  if (typeof module !== 'undefined') {
    module['exports'] = Module;
  }

  process['on']('uncaughtException', function(ex) {
    // suppress ExitStatus exceptions from showing an error
    if (!(ex instanceof ExitStatus)) {
      throw ex;
    }
  });

  Module['inspect'] = function () { return '[Emscripten Module object]'; };
}
else if (ENVIRONMENT_IS_SHELL) {
  if (!Module['print']) Module['print'] = print;
  if (typeof printErr != 'undefined') Module['printErr'] = printErr; // not present in v8 or older sm

  if (typeof read != 'undefined') {
    Module['read'] = read;
  } else {
    Module['read'] = function read() { throw 'no read() available (jsc?)' };
  }

  Module['readBinary'] = function readBinary(f) {
    if (typeof readbuffer === 'function') {
      return new Uint8Array(readbuffer(f));
    }
    var data = read(f, 'binary');
    assert(typeof data === 'object');
    return data;
  };

  if (typeof scriptArgs != 'undefined') {
    Module['arguments'] = scriptArgs;
  } else if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

}
else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
  Module['read'] = function read(url) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, false);
    xhr.send(null);
    return xhr.responseText;
  };

  if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  if (typeof console !== 'undefined') {
    if (!Module['print']) Module['print'] = function print(x) {
      console.log(x);
    };
    if (!Module['printErr']) Module['printErr'] = function printErr(x) {
      console.log(x);
    };
  } else {
    // Probably a worker, and without console.log. We can do very little here...
    var TRY_USE_DUMP = false;
    if (!Module['print']) Module['print'] = (TRY_USE_DUMP && (typeof(dump) !== "undefined") ? (function(x) {
      dump(x);
    }) : (function(x) {
      // self.postMessage(x); // enable this if you want stdout to be sent as messages
    }));
  }

  if (ENVIRONMENT_IS_WORKER) {
    Module['load'] = importScripts;
  }

  if (typeof Module['setWindowTitle'] === 'undefined') {
    Module['setWindowTitle'] = function(title) { document.title = title };
  }
}
else {
  // Unreachable because SHELL is dependant on the others
  throw 'Unknown runtime environment. Where are we?';
}

function globalEval(x) {
  eval.call(null, x);
}
if (!Module['load'] && Module['read']) {
  Module['load'] = function load(f) {
    globalEval(Module['read'](f));
  };
}
if (!Module['print']) {
  Module['print'] = function(){};
}
if (!Module['printErr']) {
  Module['printErr'] = Module['print'];
}
if (!Module['arguments']) {
  Module['arguments'] = [];
}
if (!Module['thisProgram']) {
  Module['thisProgram'] = './this.program';
}

// *** Environment setup code ***

// Closure helpers
Module.print = Module['print'];
Module.printErr = Module['printErr'];

// Callbacks
Module['preRun'] = [];
Module['postRun'] = [];

// Merge back in the overrides
for (var key in moduleOverrides) {
  if (moduleOverrides.hasOwnProperty(key)) {
    Module[key] = moduleOverrides[key];
  }
}



// === Preamble library stuff ===

// Documentation for the public APIs defined in this file must be updated in: 
//    site/source/docs/api_reference/preamble.js.rst
// A prebuilt local version of the documentation is available at: 
//    site/build/text/docs/api_reference/preamble.js.txt
// You can also build docs locally as HTML or other formats in site/
// An online HTML version (which may be of a different version of Emscripten)
//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html

//========================================
// Runtime code shared with compiler
//========================================

var Runtime = {
  setTempRet0: function (value) {
    tempRet0 = value;
  },
  getTempRet0: function () {
    return tempRet0;
  },
  stackSave: function () {
    return STACKTOP;
  },
  stackRestore: function (stackTop) {
    STACKTOP = stackTop;
  },
  getNativeTypeSize: function (type) {
    switch (type) {
      case 'i1': case 'i8': return 1;
      case 'i16': return 2;
      case 'i32': return 4;
      case 'i64': return 8;
      case 'float': return 4;
      case 'double': return 8;
      default: {
        if (type[type.length-1] === '*') {
          return Runtime.QUANTUM_SIZE; // A pointer
        } else if (type[0] === 'i') {
          var bits = parseInt(type.substr(1));
          assert(bits % 8 === 0);
          return bits/8;
        } else {
          return 0;
        }
      }
    }
  },
  getNativeFieldSize: function (type) {
    return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
  },
  STACK_ALIGN: 16,
  prepVararg: function (ptr, type) {
    if (type === 'double' || type === 'i64') {
      // move so the load is aligned
      if (ptr & 7) {
        assert((ptr & 7) === 4);
        ptr += 4;
      }
    } else {
      assert((ptr & 3) === 0);
    }
    return ptr;
  },
  getAlignSize: function (type, size, vararg) {
    // we align i64s and doubles on 64-bit boundaries, unlike x86
    if (!vararg && (type == 'i64' || type == 'double')) return 8;
    if (!type) return Math.min(size, 8); // align structures internally to 64 bits
    return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE);
  },
  dynCall: function (sig, ptr, args) {
    if (args && args.length) {
      assert(args.length == sig.length-1);
      if (!args.splice) args = Array.prototype.slice.call(args);
      args.splice(0, 0, ptr);
      assert(('dynCall_' + sig) in Module, 'bad function pointer type - no table for sig \'' + sig + '\'');
      return Module['dynCall_' + sig].apply(null, args);
    } else {
      assert(sig.length == 1);
      assert(('dynCall_' + sig) in Module, 'bad function pointer type - no table for sig \'' + sig + '\'');
      return Module['dynCall_' + sig].call(null, ptr);
    }
  },
  functionPointers: [],
  addFunction: function (func) {
    for (var i = 0; i < Runtime.functionPointers.length; i++) {
      if (!Runtime.functionPointers[i]) {
        Runtime.functionPointers[i] = func;
        return 2*(1 + i);
      }
    }
    throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';
  },
  removeFunction: function (index) {
    Runtime.functionPointers[(index-2)/2] = null;
  },
  warnOnce: function (text) {
    if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};
    if (!Runtime.warnOnce.shown[text]) {
      Runtime.warnOnce.shown[text] = 1;
      Module.printErr(text);
    }
  },
  funcWrappers: {},
  getFuncWrapper: function (func, sig) {
    assert(sig);
    if (!Runtime.funcWrappers[sig]) {
      Runtime.funcWrappers[sig] = {};
    }
    var sigCache = Runtime.funcWrappers[sig];
    if (!sigCache[func]) {
      sigCache[func] = function dynCall_wrapper() {
        return Runtime.dynCall(sig, func, arguments);
      };
    }
    return sigCache[func];
  },
  getCompilerSetting: function (name) {
    throw 'You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work';
  },
  stackAlloc: function (size) { var ret = STACKTOP;STACKTOP = (STACKTOP + size)|0;STACKTOP = (((STACKTOP)+15)&-16);(assert((((STACKTOP|0) < (STACK_MAX|0))|0))|0); return ret; },
  staticAlloc: function (size) { var ret = STATICTOP;STATICTOP = (STATICTOP + (assert(!staticSealed),size))|0;STATICTOP = (((STATICTOP)+15)&-16); return ret; },
  dynamicAlloc: function (size) { var ret = DYNAMICTOP;DYNAMICTOP = (DYNAMICTOP + (assert(DYNAMICTOP > 0),size))|0;DYNAMICTOP = (((DYNAMICTOP)+15)&-16); if (DYNAMICTOP >= TOTAL_MEMORY) { var success = enlargeMemory(); if (!success) { DYNAMICTOP = ret;  return 0; } }; return ret; },
  alignMemory: function (size,quantum) { var ret = size = Math.ceil((size)/(quantum ? quantum : 16))*(quantum ? quantum : 16); return ret; },
  makeBigInt: function (low,high,unsigned) { var ret = (unsigned ? ((+((low>>>0)))+((+((high>>>0)))*4294967296.0)) : ((+((low>>>0)))+((+((high|0)))*4294967296.0))); return ret; },
  GLOBAL_BASE: 8,
  QUANTUM_SIZE: 4,
  __dummy__: 0
}



Module["Runtime"] = Runtime;



//========================================
// Runtime essentials
//========================================

var __THREW__ = 0; // Used in checking for thrown exceptions.

var ABORT = false; // whether we are quitting the application. no code should run after this. set in exit() and abort()
var EXITSTATUS = 0;

var undef = 0;
// tempInt is used for 32-bit signed values or smaller. tempBigInt is used
// for 32-bit unsigned values or more than 32 bits. TODO: audit all uses of tempInt
var tempValue, tempInt, tempBigInt, tempInt2, tempBigInt2, tempPair, tempBigIntI, tempBigIntR, tempBigIntS, tempBigIntP, tempBigIntD, tempDouble, tempFloat;
var tempI64, tempI64b;
var tempRet0, tempRet1, tempRet2, tempRet3, tempRet4, tempRet5, tempRet6, tempRet7, tempRet8, tempRet9;

function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}

var globalScope = this;

// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)
function getCFunc(ident) {
  var func = Module['_' + ident]; // closure exported function
  if (!func) {
    try {
      func = eval('_' + ident); // explicit lookup
    } catch(e) {}
  }
  assert(func, 'Cannot call unknown function ' + ident + ' (perhaps LLVM optimizations or closure removed it?)');
  return func;
}

var cwrap, ccall;
(function(){
  var JSfuncs = {
    // Helpers for cwrap -- it can't refer to Runtime directly because it might
    // be renamed by closure, instead it calls JSfuncs['stackSave'].body to find
    // out what the minified function name is.
    'stackSave': function() {
      Runtime.stackSave()
    },
    'stackRestore': function() {
      Runtime.stackRestore()
    },
    // type conversion from js to c
    'arrayToC' : function(arr) {
      var ret = Runtime.stackAlloc(arr.length);
      writeArrayToMemory(arr, ret);
      return ret;
    },
    'stringToC' : function(str) {
      var ret = 0;
      if (str !== null && str !== undefined && str !== 0) { // null string
        // at most 4 bytes per UTF-8 code point, +1 for the trailing '\0'
        ret = Runtime.stackAlloc((str.length << 2) + 1);
        writeStringToMemory(str, ret);
      }
      return ret;
    }
  };
  // For fast lookup of conversion functions
  var toC = {'string' : JSfuncs['stringToC'], 'array' : JSfuncs['arrayToC']};

  // C calling interface. 
  ccall = function ccallFunc(ident, returnType, argTypes, args, opts) {
    var func = getCFunc(ident);
    var cArgs = [];
    var stack = 0;
    assert(returnType !== 'array', 'Return type should not be "array".');
    if (args) {
      for (var i = 0; i < args.length; i++) {
        var converter = toC[argTypes[i]];
        if (converter) {
          if (stack === 0) stack = Runtime.stackSave();
          cArgs[i] = converter(args[i]);
        } else {
          cArgs[i] = args[i];
        }
      }
    }
    var ret = func.apply(null, cArgs);
    if ((!opts || !opts.async) && typeof EmterpreterAsync === 'object') {
      assert(!EmterpreterAsync.state, 'cannot start async op with normal JS calling ccall');
    }
    if (opts && opts.async) assert(!returnType, 'async ccalls cannot return values');
    if (returnType === 'string') ret = Pointer_stringify(ret);
    if (stack !== 0) {
      if (opts && opts.async) {
        EmterpreterAsync.asyncFinalizers.push(function() {
          Runtime.stackRestore(stack);
        });
        return;
      }
      Runtime.stackRestore(stack);
    }
    return ret;
  }

  var sourceRegex = /^function\s*\(([^)]*)\)\s*{\s*([^*]*?)[\s;]*(?:return\s*(.*?)[;\s]*)?}$/;
  function parseJSFunc(jsfunc) {
    // Match the body and the return value of a javascript function source
    var parsed = jsfunc.toString().match(sourceRegex).slice(1);
    return {arguments : parsed[0], body : parsed[1], returnValue: parsed[2]}
  }
  var JSsource = {};
  for (var fun in JSfuncs) {
    if (JSfuncs.hasOwnProperty(fun)) {
      // Elements of toCsource are arrays of three items:
      // the code, and the return value
      JSsource[fun] = parseJSFunc(JSfuncs[fun]);
    }
  }

  
  cwrap = function cwrap(ident, returnType, argTypes) {
    argTypes = argTypes || [];
    var cfunc = getCFunc(ident);
    // When the function takes numbers and returns a number, we can just return
    // the original function
    var numericArgs = argTypes.every(function(type){ return type === 'number'});
    var numericRet = (returnType !== 'string');
    if ( numericRet && numericArgs) {
      return cfunc;
    }
    // Creation of the arguments list (["$1","$2",...,"$nargs"])
    var argNames = argTypes.map(function(x,i){return '$'+i});
    var funcstr = "(function(" + argNames.join(',') + ") {";
    var nargs = argTypes.length;
    if (!numericArgs) {
      // Generate the code needed to convert the arguments from javascript
      // values to pointers
      funcstr += 'var stack = ' + JSsource['stackSave'].body + ';';
      for (var i = 0; i < nargs; i++) {
        var arg = argNames[i], type = argTypes[i];
        if (type === 'number') continue;
        var convertCode = JSsource[type + 'ToC']; // [code, return]
        funcstr += 'var ' + convertCode.arguments + ' = ' + arg + ';';
        funcstr += convertCode.body + ';';
        funcstr += arg + '=' + convertCode.returnValue + ';';
      }
    }

    // When the code is compressed, the name of cfunc is not literally 'cfunc' anymore
    var cfuncname = parseJSFunc(function(){return cfunc}).returnValue;
    // Call the function
    funcstr += 'var ret = ' + cfuncname + '(' + argNames.join(',') + ');';
    if (!numericRet) { // Return type can only by 'string' or 'number'
      // Convert the result to a string
      var strgfy = parseJSFunc(function(){return Pointer_stringify}).returnValue;
      funcstr += 'ret = ' + strgfy + '(ret);';
    }
    funcstr += "if (typeof EmterpreterAsync === 'object') { assert(!EmterpreterAsync.state, 'cannot start async op with normal JS calling cwrap') }";
    if (!numericArgs) {
      // If we had a stack, restore it
      funcstr += JSsource['stackRestore'].body.replace('()', '(stack)') + ';';
    }
    funcstr += 'return ret})';
    return eval(funcstr);
  };
})();
Module["ccall"] = ccall;
Module["cwrap"] = cwrap;

function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': HEAP8[((ptr)>>0)]=value; break;
      case 'i8': HEAP8[((ptr)>>0)]=value; break;
      case 'i16': HEAP16[((ptr)>>1)]=value; break;
      case 'i32': HEAP32[((ptr)>>2)]=value; break;
      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math_abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math_min((+(Math_floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;
      case 'float': HEAPF32[((ptr)>>2)]=value; break;
      case 'double': HEAPF64[((ptr)>>3)]=value; break;
      default: abort('invalid type for setValue: ' + type);
    }
}
Module["setValue"] = setValue;


function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': return HEAP8[((ptr)>>0)];
      case 'i8': return HEAP8[((ptr)>>0)];
      case 'i16': return HEAP16[((ptr)>>1)];
      case 'i32': return HEAP32[((ptr)>>2)];
      case 'i64': return HEAP32[((ptr)>>2)];
      case 'float': return HEAPF32[((ptr)>>2)];
      case 'double': return HEAPF64[((ptr)>>3)];
      default: abort('invalid type for setValue: ' + type);
    }
  return null;
}
Module["getValue"] = getValue;

var ALLOC_NORMAL = 0; // Tries to use _malloc()
var ALLOC_STACK = 1; // Lives for the duration of the current function call
var ALLOC_STATIC = 2; // Cannot be freed
var ALLOC_DYNAMIC = 3; // Cannot be freed except through sbrk
var ALLOC_NONE = 4; // Do not allocate
Module["ALLOC_NORMAL"] = ALLOC_NORMAL;
Module["ALLOC_STACK"] = ALLOC_STACK;
Module["ALLOC_STATIC"] = ALLOC_STATIC;
Module["ALLOC_DYNAMIC"] = ALLOC_DYNAMIC;
Module["ALLOC_NONE"] = ALLOC_NONE;

// allocate(): This is for internal use. You can use it yourself as well, but the interface
//             is a little tricky (see docs right below). The reason is that it is optimized
//             for multiple syntaxes to save space in generated code. So you should
//             normally not use allocate(), and instead allocate memory using _malloc(),
//             initialize it with setValue(), and so forth.
// @slab: An array of data, or a number. If a number, then the size of the block to allocate,
//        in *bytes* (note that this is sometimes confusing: the next parameter does not
//        affect this!)
// @types: Either an array of types, one for each byte (or 0 if no type at that position),
//         or a single type which is used for the entire block. This only matters if there
//         is initial data - if @slab is a number, then this does not matter at all and is
//         ignored.
// @allocator: How to allocate memory, see ALLOC_*
function allocate(slab, types, allocator, ptr) {
  var zeroinit, size;
  if (typeof slab === 'number') {
    zeroinit = true;
    size = slab;
  } else {
    zeroinit = false;
    size = slab.length;
  }

  var singleType = typeof types === 'string' ? types : null;

  var ret;
  if (allocator == ALLOC_NONE) {
    ret = ptr;
  } else {
    ret = [_malloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
  }

  if (zeroinit) {
    var ptr = ret, stop;
    assert((ret & 3) == 0);
    stop = ret + (size & ~3);
    for (; ptr < stop; ptr += 4) {
      HEAP32[((ptr)>>2)]=0;
    }
    stop = ret + size;
    while (ptr < stop) {
      HEAP8[((ptr++)>>0)]=0;
    }
    return ret;
  }

  if (singleType === 'i8') {
    if (slab.subarray || slab.slice) {
      HEAPU8.set(slab, ret);
    } else {
      HEAPU8.set(new Uint8Array(slab), ret);
    }
    return ret;
  }

  var i = 0, type, typeSize, previousType;
  while (i < size) {
    var curr = slab[i];

    if (typeof curr === 'function') {
      curr = Runtime.getFunctionIndex(curr);
    }

    type = singleType || types[i];
    if (type === 0) {
      i++;
      continue;
    }
    assert(type, 'Must know what type to store in allocate!');

    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later

    setValue(ret+i, curr, type);

    // no need to look up size unless type changes, so cache it
    if (previousType !== type) {
      typeSize = Runtime.getNativeTypeSize(type);
      previousType = type;
    }
    i += typeSize;
  }

  return ret;
}
Module["allocate"] = allocate;

// Allocate memory during any stage of startup - static memory early on, dynamic memory later, malloc when ready
function getMemory(size) {
  if (!staticSealed) return Runtime.staticAlloc(size);
  if ((typeof _sbrk !== 'undefined' && !_sbrk.called) || !runtimeInitialized) return Runtime.dynamicAlloc(size);
  return _malloc(size);
}
Module["getMemory"] = getMemory;

function Pointer_stringify(ptr, /* optional */ length) {
  if (length === 0 || !ptr) return '';
  // TODO: use TextDecoder
  // Find the length, and check for UTF while doing so
  var hasUtf = 0;
  var t;
  var i = 0;
  while (1) {
    assert(ptr + i < TOTAL_MEMORY);
    t = HEAPU8[(((ptr)+(i))>>0)];
    hasUtf |= t;
    if (t == 0 && !length) break;
    i++;
    if (length && i == length) break;
  }
  if (!length) length = i;

  var ret = '';

  if (hasUtf < 128) {
    var MAX_CHUNK = 1024; // split up into chunks, because .apply on a huge string can overflow the stack
    var curr;
    while (length > 0) {
      curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
      ret = ret ? ret + curr : curr;
      ptr += MAX_CHUNK;
      length -= MAX_CHUNK;
    }
    return ret;
  }
  return Module['UTF8ToString'](ptr);
}
Module["Pointer_stringify"] = Pointer_stringify;

// Given a pointer 'ptr' to a null-terminated ASCII-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function AsciiToString(ptr) {
  var str = '';
  while (1) {
    var ch = HEAP8[((ptr++)>>0)];
    if (!ch) return str;
    str += String.fromCharCode(ch);
  }
}
Module["AsciiToString"] = AsciiToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in ASCII form. The copy will require at most str.length+1 bytes of space in the HEAP.

function stringToAscii(str, outPtr) {
  return writeAsciiToMemory(str, outPtr, false);
}
Module["stringToAscii"] = stringToAscii;

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the given array that contains uint8 values, returns
// a copy of that string as a Javascript String object.

function UTF8ArrayToString(u8Array, idx) {
  var u0, u1, u2, u3, u4, u5;

  var str = '';
  while (1) {
    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
    u0 = u8Array[idx++];
    if (!u0) return str;
    if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }
    u1 = u8Array[idx++] & 63;
    if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }
    u2 = u8Array[idx++] & 63;
    if ((u0 & 0xF0) == 0xE0) {
      u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;
    } else {
      u3 = u8Array[idx++] & 63;
      if ((u0 & 0xF8) == 0xF0) {
        u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | u3;
      } else {
        u4 = u8Array[idx++] & 63;
        if ((u0 & 0xFC) == 0xF8) {
          u0 = ((u0 & 3) << 24) | (u1 << 18) | (u2 << 12) | (u3 << 6) | u4;
        } else {
          u5 = u8Array[idx++] & 63;
          u0 = ((u0 & 1) << 30) | (u1 << 24) | (u2 << 18) | (u3 << 12) | (u4 << 6) | u5;
        }
      }
    }
    if (u0 < 0x10000) {
      str += String.fromCharCode(u0);
    } else {
      var ch = u0 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    }
  }
}
Module["UTF8ArrayToString"] = UTF8ArrayToString;

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function UTF8ToString(ptr) {
  return UTF8ArrayToString(HEAPU8,ptr);
}
Module["UTF8ToString"] = UTF8ToString;

// Copies the given Javascript String object 'str' to the given byte array at address 'outIdx',
// encoded in UTF8 form and null-terminated. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outU8Array: the array to copy to. Each index in this array is assumed to be one 8-byte element.
//   outIdx: The starting offset in the array to begin the copying.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null 
//                    terminator, i.e. if maxBytesToWrite=1, only the null terminator will be written and nothing else.
//                    maxBytesToWrite=0 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8Array(str, outU8Array, outIdx, maxBytesToWrite) {
  if (!(maxBytesToWrite > 0)) // Parameter maxBytesToWrite is not optional. Negative values, 0, null, undefined and false each don't write out any bytes.
    return 0;

  var startIdx = outIdx;
  var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) {
      if (outIdx >= endIdx) break;
      outU8Array[outIdx++] = u;
    } else if (u <= 0x7FF) {
      if (outIdx + 1 >= endIdx) break;
      outU8Array[outIdx++] = 0xC0 | (u >> 6);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0xFFFF) {
      if (outIdx + 2 >= endIdx) break;
      outU8Array[outIdx++] = 0xE0 | (u >> 12);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0x1FFFFF) {
      if (outIdx + 3 >= endIdx) break;
      outU8Array[outIdx++] = 0xF0 | (u >> 18);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0x3FFFFFF) {
      if (outIdx + 4 >= endIdx) break;
      outU8Array[outIdx++] = 0xF8 | (u >> 24);
      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else {
      if (outIdx + 5 >= endIdx) break;
      outU8Array[outIdx++] = 0xFC | (u >> 30);
      outU8Array[outIdx++] = 0x80 | ((u >> 24) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    }
  }
  // Null-terminate the pointer to the buffer.
  outU8Array[outIdx] = 0;
  return outIdx - startIdx;
}
Module["stringToUTF8Array"] = stringToUTF8Array;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF8 form. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8(str, outPtr, maxBytesToWrite) {
  assert(typeof maxBytesToWrite == 'number', 'stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');
  return stringToUTF8Array(str, HEAPU8,outPtr, maxBytesToWrite);
}
Module["stringToUTF8"] = stringToUTF8;

// Returns the number of bytes the given Javascript string takes if encoded as a UTF8 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF8(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) {
      ++len;
    } else if (u <= 0x7FF) {
      len += 2;
    } else if (u <= 0xFFFF) {
      len += 3;
    } else if (u <= 0x1FFFFF) {
      len += 4;
    } else if (u <= 0x3FFFFFF) {
      len += 5;
    } else {
      len += 6;
    }
  }
  return len;
}
Module["lengthBytesUTF8"] = lengthBytesUTF8;

// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function UTF16ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];
    if (codeUnit == 0)
      return str;
    ++i;
    // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.
    str += String.fromCharCode(codeUnit);
  }
}
Module["UTF16ToString"] = UTF16ToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF16 form. The copy will require at most str.length*4+2 bytes of space in the HEAP.
// Use the function lengthBytesUTF16() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null 
//                    terminator, i.e. if maxBytesToWrite=2, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<2 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF16(str, outPtr, maxBytesToWrite) {
  assert(typeof maxBytesToWrite == 'number', 'stringToUTF16(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 2) return 0;
  maxBytesToWrite -= 2; // Null terminator.
  var startPtr = outPtr;
  var numCharsToWrite = (maxBytesToWrite < str.length*2) ? (maxBytesToWrite / 2) : str.length;
  for (var i = 0; i < numCharsToWrite; ++i) {
    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    HEAP16[((outPtr)>>1)]=codeUnit;
    outPtr += 2;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP16[((outPtr)>>1)]=0;
  return outPtr - startPtr;
}
Module["stringToUTF16"] = stringToUTF16;

// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF16(str) {
  return str.length*2;
}
Module["lengthBytesUTF16"] = lengthBytesUTF16;

function UTF32ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];
    if (utf32 == 0)
      return str;
    ++i;
    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    if (utf32 >= 0x10000) {
      var ch = utf32 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    } else {
      str += String.fromCharCode(utf32);
    }
  }
}
Module["UTF32ToString"] = UTF32ToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF32 form. The copy will require at most str.length*4+4 bytes of space in the HEAP.
// Use the function lengthBytesUTF32() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null 
//                    terminator, i.e. if maxBytesToWrite=4, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<4 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF32(str, outPtr, maxBytesToWrite) {
  assert(typeof maxBytesToWrite == 'number', 'stringToUTF32(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 4) return 0;
  var startPtr = outPtr;
  var endPtr = startPtr + maxBytesToWrite - 4;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {
      var trailSurrogate = str.charCodeAt(++i);
      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);
    }
    HEAP32[((outPtr)>>2)]=codeUnit;
    outPtr += 4;
    if (outPtr + 4 > endPtr) break;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP32[((outPtr)>>2)]=0;
  return outPtr - startPtr;
}
Module["stringToUTF32"] = stringToUTF32;

// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF32(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i);
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) ++i; // possibly a lead surrogate, so skip over the tail surrogate.
    len += 4;
  }

  return len;
}
Module["lengthBytesUTF32"] = lengthBytesUTF32;

function demangle(func) {
  var hasLibcxxabi = !!Module['___cxa_demangle'];
  if (hasLibcxxabi) {
    try {
      var buf = _malloc(func.length);
      writeStringToMemory(func.substr(1), buf);
      var status = _malloc(4);
      var ret = Module['___cxa_demangle'](buf, 0, 0, status);
      if (getValue(status, 'i32') === 0 && ret) {
        return Pointer_stringify(ret);
      }
      // otherwise, libcxxabi failed, we can try ours which may return a partial result
    } catch(e) {
      // failure when using libcxxabi, we can try ours which may return a partial result
    } finally {
      if (buf) _free(buf);
      if (status) _free(status);
      if (ret) _free(ret);
    }
  }
  var i = 3;
  // params, etc.
  var basicTypes = {
    'v': 'void',
    'b': 'bool',
    'c': 'char',
    's': 'short',
    'i': 'int',
    'l': 'long',
    'f': 'float',
    'd': 'double',
    'w': 'wchar_t',
    'a': 'signed char',
    'h': 'unsigned char',
    't': 'unsigned short',
    'j': 'unsigned int',
    'm': 'unsigned long',
    'x': 'long long',
    'y': 'unsigned long long',
    'z': '...'
  };
  var subs = [];
  var first = true;
  function dump(x) {
    //return;
    if (x) Module.print(x);
    Module.print(func);
    var pre = '';
    for (var a = 0; a < i; a++) pre += ' ';
    Module.print (pre + '^');
  }
  function parseNested() {
    i++;
    if (func[i] === 'K') i++; // ignore const
    var parts = [];
    while (func[i] !== 'E') {
      if (func[i] === 'S') { // substitution
        i++;
        var next = func.indexOf('_', i);
        var num = func.substring(i, next) || 0;
        parts.push(subs[num] || '?');
        i = next+1;
        continue;
      }
      if (func[i] === 'C') { // constructor
        parts.push(parts[parts.length-1]);
        i += 2;
        continue;
      }
      var size = parseInt(func.substr(i));
      var pre = size.toString().length;
      if (!size || !pre) { i--; break; } // counter i++ below us
      var curr = func.substr(i + pre, size);
      parts.push(curr);
      subs.push(curr);
      i += pre + size;
    }
    i++; // skip E
    return parts;
  }
  function parse(rawList, limit, allowVoid) { // main parser
    limit = limit || Infinity;
    var ret = '', list = [];
    function flushList() {
      return '(' + list.join(', ') + ')';
    }
    var name;
    if (func[i] === 'N') {
      // namespaced N-E
      name = parseNested().join('::');
      limit--;
      if (limit === 0) return rawList ? [name] : name;
    } else {
      // not namespaced
      if (func[i] === 'K' || (first && func[i] === 'L')) i++; // ignore const and first 'L'
      var size = parseInt(func.substr(i));
      if (size) {
        var pre = size.toString().length;
        name = func.substr(i + pre, size);
        i += pre + size;
      }
    }
    first = false;
    if (func[i] === 'I') {
      i++;
      var iList = parse(true);
      var iRet = parse(true, 1, true);
      ret += iRet[0] + ' ' + name + '<' + iList.join(', ') + '>';
    } else {
      ret = name;
    }
    paramLoop: while (i < func.length && limit-- > 0) {
      //dump('paramLoop');
      var c = func[i++];
      if (c in basicTypes) {
        list.push(basicTypes[c]);
      } else {
        switch (c) {
          case 'P': list.push(parse(true, 1, true)[0] + '*'); break; // pointer
          case 'R': list.push(parse(true, 1, true)[0] + '&'); break; // reference
          case 'L': { // literal
            i++; // skip basic type
            var end = func.indexOf('E', i);
            var size = end - i;
            list.push(func.substr(i, size));
            i += size + 2; // size + 'EE'
            break;
          }
          case 'A': { // array
            var size = parseInt(func.substr(i));
            i += size.toString().length;
            if (func[i] !== '_') throw '?';
            i++; // skip _
            list.push(parse(true, 1, true)[0] + ' [' + size + ']');
            break;
          }
          case 'E': break paramLoop;
          default: ret += '?' + c; break paramLoop;
        }
      }
    }
    if (!allowVoid && list.length === 1 && list[0] === 'void') list = []; // avoid (void)
    if (rawList) {
      if (ret) {
        list.push(ret + '?');
      }
      return list;
    } else {
      return ret + flushList();
    }
  }
  var parsed = func;
  try {
    // Special-case the entry point, since its name differs from other name mangling.
    if (func == 'Object._main' || func == '_main') {
      return 'main()';
    }
    if (typeof func === 'number') func = Pointer_stringify(func);
    if (func[0] !== '_') return func;
    if (func[1] !== '_') return func; // C function
    if (func[2] !== 'Z') return func;
    switch (func[3]) {
      case 'n': return 'operator new()';
      case 'd': return 'operator delete()';
    }
    parsed = parse();
  } catch(e) {
    parsed += '?';
  }
  if (parsed.indexOf('?') >= 0 && !hasLibcxxabi) {
    Runtime.warnOnce('warning: a problem occurred in builtin C++ name demangling; build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling');
  }
  return parsed;
}

function demangleAll(text) {
  return text.replace(/__Z[\w\d_]+/g, function(x) { var y = demangle(x); return x === y ? x : (x + ' [' + y + ']') });
}

function jsStackTrace() {
  var err = new Error();
  if (!err.stack) {
    // IE10+ special cases: It does have callstack info, but it is only populated if an Error object is thrown,
    // so try that as a special-case.
    try {
      throw new Error(0);
    } catch(e) {
      err = e;
    }
    if (!err.stack) {
      return '(no stack trace available)';
    }
  }
  return err.stack.toString();
}

function stackTrace() {
  return demangleAll(jsStackTrace());
}
Module["stackTrace"] = stackTrace;

// Memory management

var PAGE_SIZE = 4096;

function alignMemoryPage(x) {
  if (x % 4096 > 0) {
    x += (4096 - (x % 4096));
  }
  return x;
}

var HEAP;
var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;

var STATIC_BASE = 0, STATICTOP = 0, staticSealed = false; // static area
var STACK_BASE = 0, STACKTOP = 0, STACK_MAX = 0; // stack area
var DYNAMIC_BASE = 0, DYNAMICTOP = 0; // dynamic area handled by sbrk


function abortOnCannotGrowMemory() {
  abort('Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value ' + TOTAL_MEMORY + ', (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which adjusts the size at runtime but prevents some optimizations, (3) set Module.TOTAL_MEMORY to a higher value before the program runs, or if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 ');
}

function enlargeMemory() {
  abortOnCannotGrowMemory();
}


var TOTAL_STACK = Module['TOTAL_STACK'] || 5242880;
var TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 16777216;

var totalMemory = 64*1024;
while (totalMemory < TOTAL_MEMORY || totalMemory < 2*TOTAL_STACK) {
  if (totalMemory < 16*1024*1024) {
    totalMemory *= 2;
  } else {
    totalMemory += 16*1024*1024
  }
}
if (totalMemory !== TOTAL_MEMORY) {
  Module.printErr('increasing TOTAL_MEMORY to ' + totalMemory + ' to be compliant with the asm.js spec (and given that TOTAL_STACK=' + TOTAL_STACK + ')');
  TOTAL_MEMORY = totalMemory;
}

// Initialize the runtime's memory
// check for full engine support (use string 'subarray' to avoid closure compiler confusion)
assert(typeof Int32Array !== 'undefined' && typeof Float64Array !== 'undefined' && !!(new Int32Array(1)['subarray']) && !!(new Int32Array(1)['set']),
       'JS engine does not provide full typed array support');

var buffer;



buffer = new ArrayBuffer(TOTAL_MEMORY);
HEAP8 = new Int8Array(buffer);
HEAP16 = new Int16Array(buffer);
HEAP32 = new Int32Array(buffer);
HEAPU8 = new Uint8Array(buffer);
HEAPU16 = new Uint16Array(buffer);
HEAPU32 = new Uint32Array(buffer);
HEAPF32 = new Float32Array(buffer);
HEAPF64 = new Float64Array(buffer);


// Endianness check (note: assumes compiler arch was little-endian)
HEAP32[0] = 255;
assert(HEAPU8[0] === 255 && HEAPU8[3] === 0, 'Typed arrays 2 must be run on a little-endian system');

Module['HEAP'] = HEAP;
Module['buffer'] = buffer;
Module['HEAP8'] = HEAP8;
Module['HEAP16'] = HEAP16;
Module['HEAP32'] = HEAP32;
Module['HEAPU8'] = HEAPU8;
Module['HEAPU16'] = HEAPU16;
Module['HEAPU32'] = HEAPU32;
Module['HEAPF32'] = HEAPF32;
Module['HEAPF64'] = HEAPF64;

function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.shift();
    if (typeof callback == 'function') {
      callback();
      continue;
    }
    var func = callback.func;
    if (typeof func === 'number') {
      if (callback.arg === undefined) {
        Runtime.dynCall('v', func);
      } else {
        Runtime.dynCall('vi', func, [callback.arg]);
      }
    } else {
      func(callback.arg === undefined ? null : callback.arg);
    }
  }
}

var __ATPRERUN__  = []; // functions called before the runtime is initialized
var __ATINIT__    = []; // functions called during startup
var __ATMAIN__    = []; // functions called when main() is to be run
var __ATEXIT__    = []; // functions called during shutdown
var __ATPOSTRUN__ = []; // functions called after the runtime has exited

var runtimeInitialized = false;
var runtimeExited = false;


function preRun() {
  // compatibility - merge in anything from Module['preRun'] at this time
  if (Module['preRun']) {
    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
    while (Module['preRun'].length) {
      addOnPreRun(Module['preRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPRERUN__);
}

function ensureInitRuntime() {
  if (runtimeInitialized) return;
  runtimeInitialized = true;
  callRuntimeCallbacks(__ATINIT__);
}

function preMain() {
  callRuntimeCallbacks(__ATMAIN__);
}

function exitRuntime() {
  callRuntimeCallbacks(__ATEXIT__);
  runtimeExited = true;
}

function postRun() {
  // compatibility - merge in anything from Module['postRun'] at this time
  if (Module['postRun']) {
    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];
    while (Module['postRun'].length) {
      addOnPostRun(Module['postRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPOSTRUN__);
}

function addOnPreRun(cb) {
  __ATPRERUN__.unshift(cb);
}
Module["addOnPreRun"] = addOnPreRun;

function addOnInit(cb) {
  __ATINIT__.unshift(cb);
}
Module["addOnInit"] = addOnInit;

function addOnPreMain(cb) {
  __ATMAIN__.unshift(cb);
}
Module["addOnPreMain"] = addOnPreMain;

function addOnExit(cb) {
  __ATEXIT__.unshift(cb);
}
Module["addOnExit"] = addOnExit;

function addOnPostRun(cb) {
  __ATPOSTRUN__.unshift(cb);
}
Module["addOnPostRun"] = addOnPostRun;

// Tools


function intArrayFromString(stringy, dontAddNull, length /* optional */) {
  var len = length > 0 ? length : lengthBytesUTF8(stringy)+1;
  var u8array = new Array(len);
  var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);
  if (dontAddNull) u8array.length = numBytesWritten;
  return u8array;
}
Module["intArrayFromString"] = intArrayFromString;

function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 0xFF) {
      assert(false, 'Character code ' + chr + ' (' + String.fromCharCode(chr) + ')  at offset ' + i + ' not in 0x00-0xFF.');
      chr &= 0xFF;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}
Module["intArrayToString"] = intArrayToString;

function writeStringToMemory(string, buffer, dontAddNull) {
  var array = intArrayFromString(string, dontAddNull);
  var i = 0;
  while (i < array.length) {
    var chr = array[i];
    HEAP8[(((buffer)+(i))>>0)]=chr;
    i = i + 1;
  }
}
Module["writeStringToMemory"] = writeStringToMemory;

function writeArrayToMemory(array, buffer) {
  for (var i = 0; i < array.length; i++) {
    HEAP8[((buffer++)>>0)]=array[i];
  }
}
Module["writeArrayToMemory"] = writeArrayToMemory;

function writeAsciiToMemory(str, buffer, dontAddNull) {
  for (var i = 0; i < str.length; ++i) {
    assert(str.charCodeAt(i) === str.charCodeAt(i)&0xff);
    HEAP8[((buffer++)>>0)]=str.charCodeAt(i);
  }
  // Null-terminate the pointer to the HEAP.
  if (!dontAddNull) HEAP8[((buffer)>>0)]=0;
}
Module["writeAsciiToMemory"] = writeAsciiToMemory;

function unSign(value, bits, ignore) {
  if (value >= 0) {
    return value;
  }
  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts
                    : Math.pow(2, bits)         + value;
}
function reSign(value, bits, ignore) {
  if (value <= 0) {
    return value;
  }
  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32
                        : Math.pow(2, bits-1);
  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that
                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors
                                                       // TODO: In i64 mode 1, resign the two parts separately and safely
    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts
  }
  return value;
}


// check for imul support, and also for correctness ( https://bugs.webkit.org/show_bug.cgi?id=126345 )
if (!Math['imul'] || Math['imul'](0xffffffff, 5) !== -5) Math['imul'] = function imul(a, b) {
  var ah  = a >>> 16;
  var al = a & 0xffff;
  var bh  = b >>> 16;
  var bl = b & 0xffff;
  return (al*bl + ((ah*bl + al*bh) << 16))|0;
};
Math.imul = Math['imul'];


if (!Math['clz32']) Math['clz32'] = function(x) {
  x = x >>> 0;
  for (var i = 0; i < 32; i++) {
    if (x & (1 << (31 - i))) return i;
  }
  return 32;
};
Math.clz32 = Math['clz32']

var Math_abs = Math.abs;
var Math_cos = Math.cos;
var Math_sin = Math.sin;
var Math_tan = Math.tan;
var Math_acos = Math.acos;
var Math_asin = Math.asin;
var Math_atan = Math.atan;
var Math_atan2 = Math.atan2;
var Math_exp = Math.exp;
var Math_log = Math.log;
var Math_sqrt = Math.sqrt;
var Math_ceil = Math.ceil;
var Math_floor = Math.floor;
var Math_pow = Math.pow;
var Math_imul = Math.imul;
var Math_fround = Math.fround;
var Math_min = Math.min;
var Math_clz32 = Math.clz32;

// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// PRE_RUN_ADDITIONS (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.
var runDependencies = 0;
var runDependencyWatcher = null;
var dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled
var runDependencyTracking = {};

function getUniqueRunDependency(id) {
  var orig = id;
  while (1) {
    if (!runDependencyTracking[id]) return id;
    id = orig + Math.random();
  }
  return id;
}

function addRunDependency(id) {
  runDependencies++;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (id) {
    assert(!runDependencyTracking[id]);
    runDependencyTracking[id] = 1;
    if (runDependencyWatcher === null && typeof setInterval !== 'undefined') {
      // Check for missing dependencies every few seconds
      runDependencyWatcher = setInterval(function() {
        if (ABORT) {
          clearInterval(runDependencyWatcher);
          runDependencyWatcher = null;
          return;
        }
        var shown = false;
        for (var dep in runDependencyTracking) {
          if (!shown) {
            shown = true;
            Module.printErr('still waiting on run dependencies:');
          }
          Module.printErr('dependency: ' + dep);
        }
        if (shown) {
          Module.printErr('(end of list)');
        }
      }, 10000);
    }
  } else {
    Module.printErr('warning: run dependency added without ID');
  }
}
Module["addRunDependency"] = addRunDependency;

function removeRunDependency(id) {
  runDependencies--;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (id) {
    assert(runDependencyTracking[id]);
    delete runDependencyTracking[id];
  } else {
    Module.printErr('warning: run dependency removed without ID');
  }
  if (runDependencies == 0) {
    if (runDependencyWatcher !== null) {
      clearInterval(runDependencyWatcher);
      runDependencyWatcher = null;
    }
    if (dependenciesFulfilled) {
      var callback = dependenciesFulfilled;
      dependenciesFulfilled = null;
      callback(); // can add another dependenciesFulfilled
    }
  }
}
Module["removeRunDependency"] = removeRunDependency;

Module["preloadedImages"] = {}; // maps url to image data
Module["preloadedAudios"] = {}; // maps url to audio data



var memoryInitializer = null;



// === Body ===

var ASM_CONSTS = [];




STATIC_BASE = 8;

STATICTOP = STATIC_BASE + 20624;
  /* global initializers */  __ATINIT__.push();
  

/* memory initializer */ allocatei8", ALLOC_NONE, Runtime.GLOBAL_BASE);
/* memory initializer */ allocate([38,32,110,111,100,101,0,95,108,115,95,114,101,109,111,118,101,0,95,110,111,100,101,95,97,116,95,108,105,115,116,0,99,111,108,108,32,38,38,32,40,107,101,121,32,124,124,32,111,107,101,121,41,32,38,38,32,40,118,97,108,32,124,124,32,111,118,97,108,41,0,95,115,101,116,95,100,105,99,116,0,99,111,108,108,32,38,38,32,40,118,97,108,32,124,124,32,40,111,118,97,108,32,38,38,32,42,111,118,97,108,41,41,0,95,115,101,116,95,108,105,115,116,0,99,111,108,108,32,38,38,32,40,118,97,108,32,124,124,32,111,97,114,103,41,0,95,112,117,115,104,95,108,105,115,116,0,99,111,108,108,32,38,38,32,118,97,108,0,95,102,105,110,100,95,100,105,99,116,0,99,111,108,108,32,38,38,32,111,118,97,108,0,95,97,116,95,108,105,115,116,0,95,99,114,101,97,116,101,95,100,105,99,116,0,95,117,110,114,101,102,95,100,105,99,116,0,95,100,101,115,116,114,111,121,95,100,105,99,116,0,95,100,101,115,116,114,111,121,95,111,98,106,101,99,116,95,119,105,116,104,95,101,120,116,114,97,0,95,104,116,95,104,97,115,104,95,111,98,106,101,99,116,0,95,99,114,101,97,116,101,95,108,105,115,116,0,95,117,110,114,101,102,95,108,105,115,116,0,95,100,101,115,116,114,111,121,95,108,105,115,116,0,115,32,38,38,32,97,114,114,32,38,38,32,118,97,108,0,95,115,101,116,95,97,114,114,97,121,95,101,108,101,109,0,105,110,100,101,120,32,60,32,97,114,114,45,62,99,111,117,110,116,0,115,32,38,38,32,97,114,114,32,38,38,32,118,97,108,32,38,38,32,116,121,112,101,0,95,103,101,116,95,97,114,114,97,121,95,101,108,101,109,0,95,105,110,105,116,95,97,114,114,97,121,0,97,114,114,45,62,99,111,117,110,116,32,62,32,48,0,33,97,114,114,45,62,114,97,119,0,95,99,114,101,97,116,101,95,97,114,114,97,121,0,95,117,110,114,101,102,95,97,114,114,97,121,0,95,100,101,115,116,114,111,121,95,97,114,114,97,121,0,95,115,101,97,114,99,104,95,118,97,114,95,105,110,95,115,99,111,112,101,95,99,104,97,105,110,0,95,104,116,95,102,105,110,100,0,95,112,111,112,95,115,99,111,112,101,0,95,104,116,95,115,101,116,95,111,114,95,105,110,115,101,114,116,0,98,117,99,107,101,116,0,95,112,117,115,104,95,115,99,111,112,101,95,98,121,95,99,108,97,115,115,0,95,114,101,102,101,114,101,110,99,101,95,115,99,111,112,101,95,98,121,95,99,108,97,115,115,0,115,32,38,38,32,100,101,114,105,118,101,100,32,38,38,32,98,97,115,101,0,95,108,105,110,107,95,109,101,116,97,95,99,108,97,115,115,0,95,105,110,105,116,95,99,108,97,115,115,0,95,117,110,114,101,102,95,99,108,97,115,115,0,95,100,101,115,116,114,111,121,95,99,108,97,115,115,0,115,32,38,38,32,100,101,114,105,118,101,100,0,95,117,110,108,105,110,107,95,109,101,116,97,95,99,108,97,115,115,0,100,101,114,105,118,101,100,45,62,109,101,116,97,95,108,105,115,116,0,100,97,116,97,32,38,38,32,100,101,114,105,118,101,100,0,95,117,110,108,105,110,107,95,109,101,116,97,95,105,110,115,116,97,110,99,101,0,95,115,101,97,114,99,104,95,105,100,101,110,116,105,102,105,101,114,95,105,110,95,115,99,111,112,101,95,99,104,97,105,110,0,95,115,101,97,114,99,104,95,105,100,101,110,116,105,102,105,101,114,95,97,99,99,101,115,115,111,114,0,97,43,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,115,32,38,38,32,99,104,0,95,109,97,114,107,95,108,97,122,121,95,100,101,115,116,114,111,121,95,115,116,114,105,110,103,0,95,112,117,98,108,105,99,95,118,97,108,117,101,95,116,111,95,105,110,116,101,114,110,97,108,95,111,98,106,101,99,116,0,95,105,110,116,101,114,110,97,108,95,111,98,106,101,99,116,95,116,111,95,112,117,98,108,105,99,95,118,97,108,117,101,0,95,114,101,102,0,48,32,38,38,32,34,84,111,111,32,109,97,110,121,32,114,101,102,101,114,101,110,99,105,110,103,44,32,99,111,117,110,116,32,111,118,101,114,102,108,111,119,44,32,112,108,101,97,115,101,32,114,101,100,101,102,105,110,101,32,95,114,101,102,95,99,111,117,110,116,95,116,46,34,0,95,109,97,114,107,95,101,100,103,101,95,100,101,115,116,114,111,121,95,115,116,114,105,110,103,0,115,45,62,101,100,103,101,95,100,101,115,116,114,111,121,95,111,98,106,101,99,116,115,0,95,100,101,115,116,114,111,121,95,101,100,103,101,95,111,98,106,101,99,116,115,0,95,99,97,108,99,95,101,120,112,114,101,115,115,105,111,110,0,41,0,103,97,114,98,97,103,101,0,95,100,101,115,116,114,111,121,95,111,98,106,101,99,116,95,110,111,116,95,99,111,109,112,105,108,101,95,116,105,109,101,0,115,32,38,38,32,111,98,106,0,95,105,115,95,114,101,102,101,114,101,110,99,101,100,95,99,97,108,99,95,116,121,112,101,0,95,105,115,95,117,110,101,120,112,101,99,116,101,100,95,99,97,108,99,95,116,121,112,101,0,115,32,38,38,32,111,112,116,114,0,95,111,112,101,114,97,116,101,95,111,112,101,114,97,110,100,0,111,112,116,114,45,62,116,121,112,101,32,61,61,32,95,68,84,95,70,85,78,67,0,111,112,49,32,38,38,32,111,112,50,0,95,103,101,116,95,112,114,105,111,114,105,116,121,0,105,100,120,49,32,60,32,40,115,105,122,101,111,102,40,95,80,82,69,67,69,68,69,95,84,65,66,76,69,41,32,47,32,115,105,122,101,111,102,40,42,40,95,80,82,69,67,69,68,69,95,84,65,66,76,69,41,41,41,32,38,38,32,105,100,120,50,32,60,32,40,115,105,122,101,111,102,40,95,80,82,69,67,69,68,69,95,84,65,66,76,69,91,48,93,41,32,47,32,115,105,122,101,111,102,40,42,40,95,80,82,69,67,69,68,69,95,84,65,66,76,69,91,48,93,41,41,41,0,62,62,60,60,60,60,60,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,60,60,60,60,60,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,60,60,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,60,60,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,60,60,62,60,60,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,60,62,62,62,62,62,62,62,62,62,62,62,62,62,60,60,60,60,60,60,60,61,32,60,60,60,60,60,60,60,60,60,60,60,62,62,62,62,62,62,32,62,62,62,62,62,62,62,62,62,62,62,62,62,60,60,60,60,60,60,60,32,61,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,62,62,32,32,32,32,32,32,62,62,62,62,62,60,60,60,60,60,60,60,62,62,32,32,32,32,32,32,62,62,62,62,62,60,60,60,60,60,60,60,62,62,32,32,32,32,32,32,62,62,62,62,62,60,60,60,60,60,60,60,62,62,32,32,32,32,32,32,62,62,62,62,62,60,60,60,60,60,60,60,62,62,32,32,32,32,32,32,62,62,62,62,62,60,60,60,60,60,60,60,62,62,32,32,32,32,32,32,62,62,62,62,62,60,60,60,60,60,60,60,62,62,60,60,60,60,60,60,62,62,60,62,62,60,60,60,60,60,60,60,62,62,60,60,60,60,60,60,62,62,60,62,62,60,60,60,60,60,60,60,62,62,60,60,60,60,60,60,62,62,62,62,62,60,60,60,60,60,60,60,62,62,60,60,60,60,60,60,60,60,60,61,60,60,60,60,60,60,60,60,62,62,60,60,60,60,60,60,62,62,60,62,62,111,112,0,95,103,101,116,95,112,114,105,111,114,105,116,121,95,105,110,100,101,120,0,48,32,38,38,32,34,85,110,107,110,111,119,110,32,111,112,101,114,97,116,111,114,46,34,0,95,99,111,114,101,95,110,111,116,0,95,114,101,109,111,118,101,95,115,111,117,114,99,101,95,111,98,106,101,99,116,0,95,105,115,95,101,120,112,114,101,115,115,105,111,110,95,116,101,114,109,105,110,97,108,0,95,108,115,95,101,109,112,116,121,0,116,103,116,0,95,97,115,115,105,103,110,95,112,117,98,108,105,99,95,118,97,108,117,101,0,95,99,111,114,101,95,99,108,111,115,101,95,98,114,97,99,107,101,116,0,95,99,111,114,101,95,111,112,101,110,95,98,114,97,99,107,101,116,0,95,108,115,95,112,111,112,98,97,99,107,0,95,115,101,116,95,101,114,114,111,114,95,112,111,115,0,115,32,38,38,32,101,114,114,32,62,61,32,48,0,95,115,101,116,95,99,117,114,114,101,110,116,95,101,114,114,111,114,0,95,114,101,109,111,118,101,95,102,117,110,99,0,95,108,115,95,100,101,115,116,114,111,121,95,109,111,100,117,108,101,95,102,117,110,99,0,95,103,101,110,101,114,97,116,101,95,102,117,110,99,95,110,97,109,101,0,95,114,101,103,105,115,116,101,114,95,102,117,110,99,0,95,99,114,101,97,116,101,95,109,111,100,117,108,101,95,102,117,110,99,0,95,108,115,95,112,117,115,104,98,97,99,107,0,114,101,115,117,108,116,0,95,108,115,95,99,114,101,97,116,101,95,110,111,100,101,0,95,104,116,95,99,108,101,97,114,0,95,99,108,101,97,114,95,115,99,111,112,101,95,99,104,97,105,110,0,95,108,115,95,99,108,101,97,114,0,108,105,115,116,32,38,38,32,99,109,112,0,95,108,115,95,116,114,121,95,114,101,109,111,118,101,0,95,99,108,111,115,101,95,99,111,110,115,116,97,110,116,0,95,100,101,115,116,114,111,121,95,109,101,109,111,114,121,0,95,100,101,115,116,114,111,121,95,112,97,114,115,105,110,103,95,99,111,110,116,101,120,116,0,108,105,115,116,32,38,38,32,111,112,0,95,108,115,95,102,111,114,101,97,99,104,0,95,108,115,95,99,111,117,110,116,0,95,104,116,95,100,101,115,116,114,111,121,0,95,103,99,95,99,111,108,108,101,99,116,95,103,97,114,98,97,103,101,0,33,103,99,45,62,99,111,108,108,101,99,116,105,110,103,0,95,103,99,95,115,119,97,112,95,116,97,98,108,101,115,0,95,103,99,95,100,101,115,116,114,111,121,95,103,97,114,98,97,103,101,95,111,117,116,101,114,95,115,99,111,112,101,0,95,103,99,95,100,101,115,116,114,111,121,95,103,97,114,98,97,103,101,95,105,110,95,111,117,116,101,114,95,115,99,111,112,101,0,95,103,99,95,100,101,115,116,114,111,121,95,103,97,114,98,97,103,101,95,105,110,95,108,97,109,98,100,97,0,95,103,99,95,100,101,115,116,114,111,121,95,103,97,114,98,97,103,101,0,108,115,116,45,62,108,105,115,116,0,114,111,117,116,105,110,101,45,62,116,121,112,101,32,61,61,32,77,66,95,82,84,95,76,65,77,66,68,65,0,95,114,101,109,111,118,101,95,116,104,105,115,95,108,97,109,98,100,97,95,102,114,111,109,95,117,112,118,97,108,117,101,0,111,98,106,45,62,100,97,116,97,46,114,111,117,116,105,110,101,45,62,116,121,112,101,32,61,61,32,77,66,95,82,84,95,76,65,77,66,68,65,0,95,103,99,95,100,101,115,116,114,111,121,95,103,97,114,98,97,103,101,95,105,110,95,100,105,99,116,0,95,103,99,95,100,101,115,116,114,111,121,95,103,97,114,98,97,103,101,95,105,110,95,108,105,115,116,0,95,103,99,95,100,101,115,116,114,111,121,95,103,97,114,98,97,103,101,95,99,108,97,115,115,0,95,103,99,95,100,101,115,116,114,111,121,95,103,97,114,98,97,103,101,95,105,110,95,99,108,97,115,115,0,100,97,116,97,32,38,38,32,104,0,95,103,99,95,97,100,100,95,114,101,97,99,104,97,98,108,101,0,111,98,106,45,62,100,97,116,97,46,108,105,115,116,95,105,116,45,62,108,105,115,116,45,62,108,105,115,116,0,109,101,116,97,32,38,38,32,104,116,0,95,97,100,100,95,99,108,97,115,115,95,109,101,116,97,95,114,101,97,99,104,97,98,108,101,0,100,97,116,97,32,38,38,32,101,120,116,114,97,32,38,38,32,104,0,95,103,99,95,97,100,100,95,114,101,97,99,104,97,98,108,101,95,98,111,116,104,0,95,103,99,95,103,101,116,95,114,101,97,99,104,97,98,108,101,95,105,110,95,102,111,114,107,101,100,0,115,32,38,38,32,104,116,0,95,103,99,95,103,101,116,95,114,101,97,99,104,97,98,108,101,0,95,100,105,115,112,111,115,101,95,115,99,111,112,101,95,99,104,97,105,110,0,95,116,105,100,121,95,115,99,111,112,101,95,99,104,97,105,110,0,95,108,115,95,100,101,115,116,114,111,121,0,95,100,101,115,116,114,111,121,95,111,98,106,101,99,116,0,95,116,114,121,95,99,108,101,97,114,95,105,110,116,101,114,109,101,100,105,97,116,101,95,118,97,108,117,101,0,95,99,108,111,115,101,95,99,111,114,101,95,108,105,98,0,208,16,0,0,9,0,0,0,192,53,0,0,1,0,0,0,226,32,0,0,2,0,0,0,194,53,0,0,3,0,0,0,196,53,0,0,4,0,0,0,198,53,0,0,5,0,0,0,202,53,0,0,6,0,0,0,204,53,0,0,7,0,0,0,127,44,0,0,8,0,0,0,0,0,0,0,19,0,0,0,206,53,0,0,14,0,0,0,208,53,0,0,11,0,0,0,210,53,0,0,10,0,0,0,212,53,0,0,13,0,0,0,215,53,0,0,12,0,0,0,218,53,0,0,15,0,0,0,221,53,0,0,16,0,0,0,225,53,0,0,17,0,0,0,228,53,0,0,18,0,0,0,232,53,0,0,20,0,0,0,235,53,0,0,21,0,0,0,239,53,0,0,22,0,0,0,243,53,0,0,23,0,0,0,246,53,0,0,24,0,0,0,251,53,0,0,25,0,0,0,2,54,0,0,26,0,0,0,7,54,0,0,27,0,0,0,13,54,0,0,28,0,0,0,17,54,0,0,29,0,0,0,20,54,0,0,30,0,0,0,23,54,0,0,31,0,0,0,28,54,0,0,32,0,0,0,33,54,0,0,33,0,0,0,39,54,0,0,34,0,0,0,44,54,0,0,35,0,0,0,51,54,0,0,36,0,0,0,57,54,0,0,37,0,0,0,62,54,0,0,38,0,0,0,67,54,0,0,39,0,0,0,73,54,0,0,40,0,0,0,80,54,0,0,41,0,0,0,143,18,0,0,42,0,0,0,85,54,0,0,43,0,0,0,0,18,0,0,44,0,0,0,138,18,0,0,45,0,0,0,97,54,0,0,46,0,0,0,105,54,0,0,47,0,0,0,109,54,0,0,48,0,0,0,113,54,0,0,49,0,0,0,121,54,0,0,50,0,0,0,128,54,0,0,51,0,0,0,44,18,0,0,52,0,0,0,132,54,0,0,53,0,0,0,140,54,0,0,54,0,0,0,43,0,42,0,47,0,77,79,68,0,94,0,40,0,61,0,60,0,62,0,60,61,0,62,61,0,60,62,0,65,78,68,0,79,82,0,78,79,84,0,73,83,0,76,69,84,0,68,73,77,0,73,70,0,84,72,69,78,0,69,76,83,69,73,70,0,69,76,83,69,0,69,78,68,73,70,0,70,79,82,0,73,78,0,84,79,0,83,84,69,80,0,78,69,88,84,0,87,72,73,76,69,0,87,69,78,68,0,82,69,80,69,65,84,0,85,78,84,73,76,0,69,88,73,84,0,71,79,84,79,0,71,79,83,85,66,0,82,69,84,85,82,78,0,67,65,76,76,0,69,78,68,70,85,78,67,84,73,79,78,0,69,78,68,84,89,80,69,0,78,69,87,0,86,65,82,0,82,69,70,76,69,67,84,0,76,65,77,66,68,65,0,77,69,77,0,73,78,67,76,85,68,69,0,69,78,68,0,95,99,111,114,101,95,116,121,112,101,0,95,99,111,114,101,95,109,101,109,0,95,99,111,114,101,95,108,97,109,98,100,97,0,115,32,38,38,32,114,32,38,38,32,111,98,106,0,95,116,114,121,95,109,97,114,107,95,117,112,118,97,108,117,101,0,114,45,62,116,121,112,101,32,61,61,32,77,66,95,82,84,95,76,65,77,66,68,65,0,115,32,38,38,32,108,97,109,98,100,97,32,38,38,32,111,98,106,0,95,109,97,114,107,95,117,112,118,97,108,117,101,0,95,105,110,105,116,95,108,97,109,98,100,97,0,95,99,111,114,101,95,114,101,102,108,101,99,116,0,100,97,116,97,32,38,38,32,100,0,95,114,101,102,108,101,99,116,95,99,108,97,115,115,95,102,105,101,108,100,0,95,99,111,114,101,95,110,101,119,0,95,99,108,111,115,101,95,115,116,100,95,108,105,98,0,70,56,0,0,55,0,0,0,74,56,0,0,56,0,0,0,78,56,0,0,57,0,0,0,82,56,0,0,58,0,0,0,88,56,0,0,59,0,0,0,93,56,0,0,60,0,0,0,97,56,0,0,61,0,0,0,103,56,0,0,62,0,0,0,111,56,0,0,63,0,0,0,115,56,0,0,64,0,0,0,119,56,0,0,65,0,0,0,123,56,0,0,66,0,0,0,127,56,0,0,67,0,0,0,132,56,0,0,68,0,0,0,137,56,0,0,69,0,0,0,142,56,0,0,70,0,0,0,146,56,0,0,71,0,0,0,150,56,0,0,72,0,0,0,154,56,0,0,73,0,0,0,158,56,0,0,74,0,0,0,163,56,0,0,75,0,0,0,167,56,0,0,76,0,0,0,173,56,0,0,77,0,0,0,177,56,0,0,78,0,0,0,181,56,0,0,79,0,0,0,62,24,0,0,80,0,0,0,185,56,0,0,81,0,0,0,189,56,0,0,82,0,0,0,195,56,0,0,83,0,0,0,65,66,83,0,83,71,78,0,83,81,82,0,70,76,79,79,82,0,67,69,73,76,0,70,73,88,0,82,79,85,78,68,0,83,69,69,68,82,78,68,0,82,78,68,0,83,73,78,0,67,79,83,0,84,65,78,0,65,83,73,78,0,65,67,79,83,0,65,84,65,78,0,69,88,80,0,76,79,71,0,65,83,67,0,67,72,82,0,76,69,70,84,0,77,73,68,0,82,73,71,72,84,0,83,84,82,0,86,65,76,0,76,69,78,0,83,69,84,0,80,82,73,78,84,0,73,78,80,85,84,0,95,115,116,100,95,105,110,112,117,116,0,95,112,114,105,110,116,95,115,116,114,105,110,103,0,37,115,0,95,103,101,116,95,112,114,105,110,116,101,114,0,95,103,101,116,95,105,110,112,117,116,101,114,0,95,115,116,100,95,112,114,105,110,116,0,37,100,0,37,103,0,10,0,95,105,115,95,112,114,105,110,116,95,116,101,114,109,105,110,97,108,0,115,32,38,38,32,108,32,38,38,32,105,110,115,116,97,110,99,101,32,38,38,32,111,117,116,0,95,102,111,114,109,97,116,95,99,108,97,115,115,95,116,111,95,115,116,114,105,110,103,0,84,79,95,83,84,82,73,78,71,0,95,100,105,115,112,111,115,101,95,100,121,110,97,109,105,99,95,98,117,102,102,101,114,0,95,114,101,115,105,122,101,95,100,121,110,97,109,105,99,95,98,117,102,102,101,114,0,95,99,111,117,110,116,111,102,95,100,121,110,97,109,105,99,95,98,117,102,102,101,114,0,95,105,110,105,116,95,100,121,110,97,109,105,99,95,98,117,102,102,101,114,0,95,101,118,97,108,95,118,97,114,95,105,110,95,112,114,105,110,116,0,95,115,116,100,95,115,101,116,0,95,115,116,100,95,103,101,116,0,95,115,116,100,95,108,101,110,0,95,115,116,100,95,118,97,108,0,95,99,111,108,108,95,105,116,101,114,97,116,111,114,0,95,115,116,100,95,115,116,114,0,48,32,38,38,32,34,66,117,102,102,101,114,32,111,118,101,114,102,108,111,119,46,34,0,95,114,101,97,108,95,116,111,95,115,116,114,95,115,116,100,0,95,115,116,100,95,114,105,103,104,116,0,95,115,116,100,95,109,105,100,0,95,115,116,100,95,108,101,102,116,0,95,115,116,100,95,99,104,114,0,95,115,116,100,95,97,115,99,0,95,115,116,100,95,108,111,103,0,95,115,116,100,95,101,120,112,0,95,115,116,100,95,97,116,97,110,0,95,115,116,100,95,97,99,111,115,0,95,115,116,100,95,97,115,105,110,0,95,115,116,100,95,116,97,110,0,95,115,116,100,95,99,111,115,0,95,115,116,100,95,115,105,110,0,95,115,116,100,95,114,110,100,0,95,115,116,100,95,115,114,110,100,0,95,115,116,100,95,114,111,117,110,100,0,95,115,116,100,95,102,105,120,0,95,115,116,100,95,99,101,105,108,0,95,115,116,100,95,102,108,111,111,114,0,95,115,116,100,95,115,113,114,0,95,115,116,100,95,115,103,110,0,95,115,116,100,95,97,98,115,0,95,99,108,111,115,101,95,99,111,108,108,95,108,105,98,0,80,18,0,0,84,0,0,0,99,18,0,0,85,0,0,0,143,59,0,0,86,0,0,0,148,59,0,0,87,0,0,0,152,59,0,0,88,0,0,0,157,59,0,0,89,0,0,0,164,59,0,0,90,0,0,0,169,59,0,0,91,0,0,0,176,59,0,0,92,0,0,0,182,59,0,0,93,0,0,0,189,59,0,0,94,0,0,0,195,59,0,0,95,0,0,0,201,59,0,0,96,0,0,0,50,24,0,0,97,0,0,0,55,24,0,0,98,0,0,0,80,85,83,72,0,80,79,80,0,66,65,67,75,0,73,78,83,69,82,84,0,83,79,82,84,0,69,88,73,83,84,83,0,73,78,68,69,88,0,82,69,77,79,86,69,0,67,76,69,65,82,0,67,76,79,78,69,0,84,79,65,82,82,65,89,0,95,99,111,108,108,95,109,111,118,101,95,110,101,120,116,0,95,99,111,108,108,95,116,111,95,97,114,114,97,121,0,111,99,111,108,108,46,100,97,116,97,46,108,105,115,116,45,62,108,105,115,116,0,95,99,111,112,121,95,108,105,115,116,95,116,111,95,97,114,114,97,121,0,95,99,111,108,108,95,99,108,111,110,101,0,95,99,111,108,108,95,99,108,101,97,114,0,95,99,108,101,97,114,95,100,105,99,116,0,95,99,108,101,97,114,95,108,105,115,116,0,95,99,111,108,108,95,114,101,109,111,118,101,0,95,99,111,108,108,95,105,110,100,101,120,95,111,102,0,95,102,105,110,100,95,108,105,115,116,0,95,99,111,108,108,95,101,120,105,115,116,115,0,95,99,111,108,108,95,115,111,114,116,0,95,115,111,114,116,95,108,105,115,116,0,108,105,115,116,32,38,38,32,42,108,105,115,116,32,38,38,32,99,109,112,0,95,108,115,95,115,111,114,116,0,95,99,111,108,108,95,105,110,115,101,114,116,0,95,105,110,115,101,114,116,95,108,105,115,116,0,95,108,115,95,105,110,115,101,114,116,95,97,116,0,95,99,111,108,108,95,98,97,99,107,0,95,99,111,108,108,95,112,111,112,0,99,111,108,108,32,38,38,32,118,97,108,32,38,38,32,115,0,95,112,111,112,95,108,105,115,116,0,95,99,111,108,108,95,112,117,115,104,0,95,99,111,108,108,95,100,105,99,116,0,95,99,111,108,108,95,108,105,115,116,0,95,111,112,101,110,95,99,111,110,115,116,97,110,116,0,95,111,112,101,110,95,99,111,108,108,95,108,105,98,0,95,111,112,101,110,95,115,116,100,95,108,105,98,0,95,111,112,101,110,95,99,111,114,101,95,108,105,98,0,95,104,116,95,104,97,115,104,95,114,101,102,0,95,104,116,95,100,101,115,116,114,111,121,95,109,111,100,117,108,101,95,102,117,110,99,95,108,105,115,116,0,101,120,116,114,97,0,95,108,115,95,102,114,101,101,95,101,120,116,114,97,0,95,104,116,95,104,97,115,104,95,115,116,114,105,110,103,0,109,98,95,102,114,101,101,0,95,99,111,114,101,95,100,117,109,109,121,95,97,115,115,105,103,110,0,114,101,116,0,109,98,95,109,97,108,108,111,99,0,84,33,34,25,13,1,2,3,17,75,28,12,16,4,11,29,18,30,39,104,110,111,112,113,98,32,5,6,15,19,20,21,26,8,22,7,40,36,23,24,9,10,14,27,31,37,35,131,130,125,38,42,43,60,61,62,63,67,71,74,77,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,105,106,107,108,114,115,116,121,122,123,124,0,73,108,108,101,103,97,108,32,98,121,116,101,32,115,101,113,117,101,110,99,101,0,68,111,109,97,105,110,32,101,114,114,111,114,0,82,101,115,117,108,116,32,110,111,116,32,114,101,112,114,101,115,101,110,116,97,98,108,101,0,78,111,116,32,97,32,116,116,121,0,80,101,114,109,105,115,115,105,111,110,32,100,101,110,105,101,100,0,79,112,101,114,97,116,105,111,110,32,110,111,116,32,112,101,114,109,105,116,116,101,100,0,78,111,32,115,117,99,104,32,102,105,108,101,32,111,114,32,100,105,114,101,99,116,111,114,121,0,78,111,32,115,117,99,104,32,112,114,111,99,101,115,115,0,70,105,108,101,32,101,120,105,115,116,115,0,86,97,108,117,101,32,116,111,111,32,108,97,114,103,101,32,102,111,114,32,100,97,116,97,32,116,121,112,101,0,78,111,32,115,112,97,99,101,32,108,101,102,116,32,111,110,32,100,101,118,105,99,101,0,79,117,116,32,111,102,32,109,101,109,111,114,121,0,82,101,115,111,117,114,99,101,32,98,117,115,121,0,73,110,116,101,114,114,117,112,116,101,100,32,115,121,115,116,101,109,32,99,97,108,108,0,82,101,115,111,117,114,99,101,32,116,101,109,112,111,114,97,114,105,108,121,32,117,110,97,118,97,105,108,97,98,108,101,0,73,110,118,97,108,105,100,32,115,101,101,107,0,67,114,111,115,115,45,100,101,118,105,99,101,32,108,105,110,107,0,82,101,97,100,45,111,110,108,121,32,102,105,108,101,32,115,121,115,116,101,109,0,68,105,114,101,99,116,111,114,121,32,110,111,116,32,101,109,112,116,121,0,67,111,110,110,101,99,116,105,111,110,32,114,101,115,101,116,32,98,121,32,112,101,101,114,0,79,112,101,114,97,116,105,111,110,32,116,105,109,101,100,32,111,117,116,0,67,111,110,110,101,99,116,105,111,110,32,114,101,102,117,115,101,100,0,72,111,115,116,32,105,115,32,100,111,119,110,0,72,111,115,116,32,105,115,32,117,110,114,101,97,99,104,97,98,108,101,0,65,100,100,114,101,115,115,32,105,110,32,117,115,101,0,66,114,111,107,101,110,32,112,105,112,101,0,73,47,79,32,101,114,114,111,114,0,78,111,32,115,117,99,104,32,100,101,118,105,99,101,32,111,114,32,97,100,100,114,101,115,115,0,66,108,111,99,107,32,100,101,118,105,99,101,32,114,101,113,117,105,114,101,100,0,78,111,32,115,117,99,104,32,100,101,118,105,99,101,0,78,111,116,32,97,32,100,105,114,101,99,116,111,114,121,0,73,115,32,97,32,100,105,114,101,99,116,111,114,121,0,84,101,120,116,32,102,105,108,101,32,98,117,115,121,0,69,120,101,99,32,102,111,114,109,97,116,32,101,114,114,111,114,0,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,0,65,114,103,117,109,101,110,116,32,108,105,115,116,32,116,111,111,32,108,111,110,103,0,83,121,109,98,111,108,105,99,32,108,105,110,107,32,108,111,111,112,0,70,105,108,101,110,97,109,101,32,116,111,111,32,108,111,110,103,0,84,111,111,32,109,97,110,121,32,111,112,101,110,32,102,105,108,101,115,32,105,110,32,115,121,115,116,101,109,0,78,111,32,102,105,108,101,32,100,101,115,99,114,105,112,116,111,114,115,32,97,118,97,105,108,97,98,108,101,0,66,97,100,32,102,105,108,101,32,100,101,115,99,114,105,112,116,111,114,0,78,111,32,99,104,105,108,100,32,112,114,111,99,101,115,115,0,66,97,100,32,97,100,100,114,101,115,115,0,70,105,108,101,32,116,111,111,32,108,97,114,103,101,0,84,111,111,32,109,97,110,121,32,108,105,110,107,115,0,78,111,32,108,111,99,107,115,32,97,118,97,105,108,97,98,108,101,0,82,101,115,111,117,114,99,101,32,100,101,97,100,108,111,99,107,32,119,111,117,108,100,32,111,99,99,117,114,0,83,116,97,116,101,32,110,111,116,32,114,101,99,111,118,101,114,97,98,108,101,0,80,114,101,118,105,111,117,115,32,111,119,110,101,114,32,100,105,101,100,0,79,112,101,114,97,116,105,111,110,32,99,97,110,99,101,108,101,100,0,70,117,110,99,116,105,111,110,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,0,78,111,32,109,101,115,115,97,103,101,32,111,102,32,100,101,115,105,114,101,100,32,116,121,112,101,0,73,100,101,110,116,105,102,105,101,114,32,114,101,109,111,118,101,100,0,68,101,118,105,99,101,32,110,111,116,32,97,32,115,116,114,101,97,109,0,78,111,32,100,97,116,97,32,97,118,97,105,108,97,98,108,101,0,68,101,118,105,99,101,32,116,105,109,101,111,117,116,0,79,117,116,32,111,102,32,115,116,114,101,97,109,115,32,114,101,115,111,117,114,99,101,115,0,76,105,110,107,32,104,97,115,32,98,101,101,110,32,115,101,118,101,114,101,100,0,80,114,111,116,111,99,111,108,32,101,114,114,111,114,0,66,97,100,32,109,101,115,115,97,103,101,0,70,105,108,101,32,100,101,115,99,114,105,112,116,111,114,32,105,110,32,98,97,100,32,115,116,97,116,101,0,78,111,116,32,97,32,115,111,99,107,101,116,0,68,101,115,116,105,110,97,116,105,111,110,32,97,100,100,114,101,115,115,32,114,101,113,117,105,114,101,100,0,77,101,115,115,97,103,101,32,116,111,111,32,108,97,114,103,101,0,80,114,111,116,111,99,111,108,32,119,114,111,110,103,32,116,121,112,101,32,102,111,114,32,115,111,99,107,101,116,0,80,114,111,116,111,99,111,108,32,110,111,116,32,97,118,97,105,108,97,98,108,101,0,80,114,111,116,111,99,111,108,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,83,111,99,107,101,116,32,116,121,112,101,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,78,111,116,32,115,117,112,112,111,114,116,101,100,0,80,114,111,116,111,99,111,108,32,102,97,109,105,108,121,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,65,100,100,114,101,115,115,32,102,97,109,105,108,121,32,110,111,116,32,115,117,112,112,111,114,116,101,100,32,98,121,32,112,114,111,116,111,99,111,108,0,65,100,100,114,101,115,115,32,110,111,116,32,97,118,97,105,108,97,98,108,101,0,78,101,116,119,111,114,107,32,105,115,32,100,111,119,110,0,78,101,116,119,111,114,107,32,117,110,114,101,97,99,104,97,98,108,101,0,67,111,110,110,101,99,116,105,111,110,32,114,101,115,101,116,32,98,121,32,110,101,116,119,111,114,107,0,67,111,110,110,101,99,116,105,111,110,32,97,98,111,114,116,101,100,0,78,111,32,98,117,102,102,101,114,32,115,112,97,99,101,32,97,118,97,105,108,97,98,108,101,0,83,111,99,107,101,116,32,105,115,32,99,111,110,110,101,99,116,101,100,0,83,111,99,107,101,116,32,110,111,116,32,99,111,110,110,101,99,116,101,100,0,67,97,110,110,111,116,32,115,101,110,100,32,97,102,116,101,114,32,115,111,99,107,101,116,32,115,104,117,116,100,111,119,110,0,79,112,101,114,97,116,105,111,110,32,97,108,114,101,97,100,121,32,105,110,32,112,114,111,103,114,101,115,115,0,79,112,101,114,97,116,105,111,110,32,105,110,32,112,114,111,103,114,101,115,115,0,83,116,97,108,101,32,102,105,108,101,32,104,97,110,100,108,101,0,82,101,109,111,116,101,32,73,47,79,32,101,114,114,111,114,0,81,117,111,116,97,32,101,120,99,101,101,100,101,100,0,78,111,32,109,101,100,105,117,109,32,102,111,117,110,100,0,87,114,111,110,103,32,109,101,100,105,117,109,32,116,121,112,101,0,78,111,32,101,114,114,111,114,32,105,110,102,111,114,109,97,116,105,111,110,0,0,105,110,102,105,110,105,116,121,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,1,2,3,4,5,6,7,8,9,255,255,255,255,255,255,255,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,255,255,255,255,255,255,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,1,2,4,7,3,6,5,0,67,46,85,84,70,45,56,0,114,119,97], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+10240);
/* memory initializer */ allocate([17,0,10,0,17,17,17,0,0,0,0,5,0,0,0,0,0,0,9,0,0,0,0,11,0,0,0,0,0,0,0,0,17,0,15,10,17,17,17,3,10,7,0,1,19,9,11,11,0,0,9,6,11,0,0,11,0,6,17,0,0,0,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,17,0,10,10,17,17,17,0,10,0,0,2,0,9,11,0,0,0,9,0,11,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,9,12,0,0,0,0,0,12,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,13,0,0,0,4,13,0,0,0,0,9,14,0,0,0,0,0,14,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,15,0,0,0,0,9,16,0,0,0,0,0,16,0,0,16,0,0,18,0,0,0,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,18,18,18,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,10,0,0,0,0,9,11,0,0,0,0,0,11,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,9,12,0,0,0,0,0,12,0,0,12,0,0,48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70,45,43,32,32,32,48,88,48,120,0,40,110,117,108,108,41,0,45,48,88,43,48,88,32,48,88,45,48,120,43,48,120,32,48,120,0,105,110,102,0,73,78,70,0,110,97,110,0,78,65,78,0,46,0], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+20081);





/* no memory initializer */
var tempDoublePtr = Runtime.alignMemory(allocate(12, "i8", ALLOC_STATIC), 8);

assert(tempDoublePtr % 8 == 0);

function copyTempFloat(ptr) { // functions, because inlining this code increases code size too much

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

}

function copyTempDouble(ptr) {

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];

  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];

  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];

  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];

}

// {{PRE_LIBRARY}}


   
  Module["_i64Subtract"] = _i64Subtract;

  function ___assert_fail(condition, filename, line, func) {
      ABORT = true;
      throw 'Assertion failed: ' + Pointer_stringify(condition) + ', at: ' + [filename ? Pointer_stringify(filename) : 'unknown filename', line, func ? Pointer_stringify(func) : 'unknown function'] + ' at ' + stackTrace();
    }

  var _acos=Math_acos;

   
  Module["_memset"] = _memset;

  var _BDtoILow=true;

  function _atexit(func, arg) {
      __ATEXIT__.unshift({ func: func, arg: arg });
    }

  function _abort() {
      Module['abort']();
    }

  var _emscripten_prep_setjmp=true;

  var _tan=Math_tan;

  function ___lock() {}

  function ___unlock() {}

  var _asin=Math_asin;

   
  Module["_i64Add"] = _i64Add;

  var _emscripten_cleanup_setjmp=true;

  var _emscripten_postinvoke=true;

  var _floor=Math_floor;

  
  function ___setErrNo(value) {
      if (Module['___errno_location']) HEAP32[((Module['___errno_location']())>>2)]=value;
      else Module.printErr('failed to set errno from JS');
      return value;
    }
  
  var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};function _system(command) {
      // int system(const char *command);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/system.html
      // Can't call external programs.
      ___setErrNo(ERRNO_CODES.EAGAIN);
      return -1;
    }

  var _sqrt=Math_sqrt;

  var _emscripten_check_longjmp=true;

  
  function _realloc() { throw 'bad' }
  Module["_realloc"] = _realloc; 
  Module["_saveSetjmp"] = _saveSetjmp;

  
  function __isLeapYear(year) {
        return year%4 === 0 && (year%100 !== 0 || year%400 === 0);
    }
  
  function __arraySum(array, index) {
      var sum = 0;
      for (var i = 0; i <= index; sum += array[i++]);
      return sum;
    }
  
  
  var __MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31];
  
  var __MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];function __addDays(date, days) {
      var newDate = new Date(date.getTime());
      while(days > 0) {
        var leap = __isLeapYear(newDate.getFullYear());
        var currentMonth = newDate.getMonth();
        var daysInCurrentMonth = (leap ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[currentMonth];
  
        if (days > daysInCurrentMonth-newDate.getDate()) {
          // we spill over to next month
          days -= (daysInCurrentMonth-newDate.getDate()+1);
          newDate.setDate(1);
          if (currentMonth < 11) {
            newDate.setMonth(currentMonth+1)
          } else {
            newDate.setMonth(0);
            newDate.setFullYear(newDate.getFullYear()+1);
          }
        } else {
          // we stay in current month 
          newDate.setDate(newDate.getDate()+days);
          return newDate;
        }
      }
  
      return newDate;
    }function _strftime(s, maxsize, format, tm) {
      // size_t strftime(char *restrict s, size_t maxsize, const char *restrict format, const struct tm *restrict timeptr);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/strftime.html
  
      var tm_zone = HEAP32[(((tm)+(40))>>2)];
  
      var date = {
        tm_sec: HEAP32[((tm)>>2)],
        tm_min: HEAP32[(((tm)+(4))>>2)],
        tm_hour: HEAP32[(((tm)+(8))>>2)],
        tm_mday: HEAP32[(((tm)+(12))>>2)],
        tm_mon: HEAP32[(((tm)+(16))>>2)],
        tm_year: HEAP32[(((tm)+(20))>>2)],
        tm_wday: HEAP32[(((tm)+(24))>>2)],
        tm_yday: HEAP32[(((tm)+(28))>>2)],
        tm_isdst: HEAP32[(((tm)+(32))>>2)],
        tm_gmtoff: HEAP32[(((tm)+(36))>>2)],
        tm_zone: tm_zone ? Pointer_stringify(tm_zone) : ''
      };
  
      var pattern = Pointer_stringify(format);
  
      // expand format
      var EXPANSION_RULES_1 = {
        '%c': '%a %b %d %H:%M:%S %Y',     // Replaced by the locale's appropriate date and time representation - e.g., Mon Aug  3 14:02:01 2013
        '%D': '%m/%d/%y',                 // Equivalent to %m / %d / %y
        '%F': '%Y-%m-%d',                 // Equivalent to %Y - %m - %d
        '%h': '%b',                       // Equivalent to %b
        '%r': '%I:%M:%S %p',              // Replaced by the time in a.m. and p.m. notation
        '%R': '%H:%M',                    // Replaced by the time in 24-hour notation
        '%T': '%H:%M:%S',                 // Replaced by the time
        '%x': '%m/%d/%y',                 // Replaced by the locale's appropriate date representation
        '%X': '%H:%M:%S'                  // Replaced by the locale's appropriate date representation
      };
      for (var rule in EXPANSION_RULES_1) {
        pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_1[rule]);
      }
  
      var WEEKDAYS = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
      var MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
  
      function leadingSomething(value, digits, character) {
        var str = typeof value === 'number' ? value.toString() : (value || '');
        while (str.length < digits) {
          str = character[0]+str;
        }
        return str;
      };
  
      function leadingNulls(value, digits) {
        return leadingSomething(value, digits, '0');
      };
  
      function compareByDay(date1, date2) {
        function sgn(value) {
          return value < 0 ? -1 : (value > 0 ? 1 : 0);
        };
  
        var compare;
        if ((compare = sgn(date1.getFullYear()-date2.getFullYear())) === 0) {
          if ((compare = sgn(date1.getMonth()-date2.getMonth())) === 0) {
            compare = sgn(date1.getDate()-date2.getDate());
          }
        }
        return compare;
      };
  
      function getFirstWeekStartDate(janFourth) {
          switch (janFourth.getDay()) {
            case 0: // Sunday
              return new Date(janFourth.getFullYear()-1, 11, 29);
            case 1: // Monday
              return janFourth;
            case 2: // Tuesday
              return new Date(janFourth.getFullYear(), 0, 3);
            case 3: // Wednesday
              return new Date(janFourth.getFullYear(), 0, 2);
            case 4: // Thursday
              return new Date(janFourth.getFullYear(), 0, 1);
            case 5: // Friday
              return new Date(janFourth.getFullYear()-1, 11, 31);
            case 6: // Saturday
              return new Date(janFourth.getFullYear()-1, 11, 30);
          }
      };
  
      function getWeekBasedYear(date) {
          var thisDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);
  
          var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);
          var janFourthNextYear = new Date(thisDate.getFullYear()+1, 0, 4);
  
          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
  
          if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {
            // this date is after the start of the first week of this year
            if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {
              return thisDate.getFullYear()+1;
            } else {
              return thisDate.getFullYear();
            }
          } else { 
            return thisDate.getFullYear()-1;
          }
      };
  
      var EXPANSION_RULES_2 = {
        '%a': function(date) {
          return WEEKDAYS[date.tm_wday].substring(0,3);
        },
        '%A': function(date) {
          return WEEKDAYS[date.tm_wday];
        },
        '%b': function(date) {
          return MONTHS[date.tm_mon].substring(0,3);
        },
        '%B': function(date) {
          return MONTHS[date.tm_mon];
        },
        '%C': function(date) {
          var year = date.tm_year+1900;
          return leadingNulls((year/100)|0,2);
        },
        '%d': function(date) {
          return leadingNulls(date.tm_mday, 2);
        },
        '%e': function(date) {
          return leadingSomething(date.tm_mday, 2, ' ');
        },
        '%g': function(date) {
          // %g, %G, and %V give values according to the ISO 8601:2000 standard week-based year. 
          // In this system, weeks begin on a Monday and week 1 of the year is the week that includes 
          // January 4th, which is also the week that includes the first Thursday of the year, and 
          // is also the first week that contains at least four days in the year. 
          // If the first Monday of January is the 2nd, 3rd, or 4th, the preceding days are part of 
          // the last week of the preceding year; thus, for Saturday 2nd January 1999, 
          // %G is replaced by 1998 and %V is replaced by 53. If December 29th, 30th, 
          // or 31st is a Monday, it and any following days are part of week 1 of the following year. 
          // Thus, for Tuesday 30th December 1997, %G is replaced by 1998 and %V is replaced by 01.
          
          return getWeekBasedYear(date).toString().substring(2);
        },
        '%G': function(date) {
          return getWeekBasedYear(date);
        },
        '%H': function(date) {
          return leadingNulls(date.tm_hour, 2);
        },
        '%I': function(date) {
          return leadingNulls(date.tm_hour < 13 ? date.tm_hour : date.tm_hour-12, 2);
        },
        '%j': function(date) {
          // Day of the year (001-366)
          return leadingNulls(date.tm_mday+__arraySum(__isLeapYear(date.tm_year+1900) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, date.tm_mon-1), 3);
        },
        '%m': function(date) {
          return leadingNulls(date.tm_mon+1, 2);
        },
        '%M': function(date) {
          return leadingNulls(date.tm_min, 2);
        },
        '%n': function() {
          return '\n';
        },
        '%p': function(date) {
          if (date.tm_hour > 0 && date.tm_hour < 13) {
            return 'AM';
          } else {
            return 'PM';
          }
        },
        '%S': function(date) {
          return leadingNulls(date.tm_sec, 2);
        },
        '%t': function() {
          return '\t';
        },
        '%u': function(date) {
          var day = new Date(date.tm_year+1900, date.tm_mon+1, date.tm_mday, 0, 0, 0, 0);
          return day.getDay() || 7;
        },
        '%U': function(date) {
          // Replaced by the week number of the year as a decimal number [00,53]. 
          // The first Sunday of January is the first day of week 1; 
          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]
          var janFirst = new Date(date.tm_year+1900, 0, 1);
          var firstSunday = janFirst.getDay() === 0 ? janFirst : __addDays(janFirst, 7-janFirst.getDay());
          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);
          
          // is target date after the first Sunday?
          if (compareByDay(firstSunday, endDate) < 0) {
            // calculate difference in days between first Sunday and endDate
            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;
            var firstSundayUntilEndJanuary = 31-firstSunday.getDate();
            var days = firstSundayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();
            return leadingNulls(Math.ceil(days/7), 2);
          }
  
          return compareByDay(firstSunday, janFirst) === 0 ? '01': '00';
        },
        '%V': function(date) {
          // Replaced by the week number of the year (Monday as the first day of the week) 
          // as a decimal number [01,53]. If the week containing 1 January has four 
          // or more days in the new year, then it is considered week 1. 
          // Otherwise, it is the last week of the previous year, and the next week is week 1. 
          // Both January 4th and the first Thursday of January are always in week 1. [ tm_year, tm_wday, tm_yday]
          var janFourthThisYear = new Date(date.tm_year+1900, 0, 4);
          var janFourthNextYear = new Date(date.tm_year+1901, 0, 4);
  
          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
  
          var endDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);
  
          if (compareByDay(endDate, firstWeekStartThisYear) < 0) {
            // if given date is before this years first week, then it belongs to the 53rd week of last year
            return '53';
          } 
  
          if (compareByDay(firstWeekStartNextYear, endDate) <= 0) {
            // if given date is after next years first week, then it belongs to the 01th week of next year
            return '01';
          }
  
          // given date is in between CW 01..53 of this calendar year
          var daysDifference;
          if (firstWeekStartThisYear.getFullYear() < date.tm_year+1900) {
            // first CW of this year starts last year
            daysDifference = date.tm_yday+32-firstWeekStartThisYear.getDate()
          } else {
            // first CW of this year starts this year
            daysDifference = date.tm_yday+1-firstWeekStartThisYear.getDate();
          }
          return leadingNulls(Math.ceil(daysDifference/7), 2);
        },
        '%w': function(date) {
          var day = new Date(date.tm_year+1900, date.tm_mon+1, date.tm_mday, 0, 0, 0, 0);
          return day.getDay();
        },
        '%W': function(date) {
          // Replaced by the week number of the year as a decimal number [00,53]. 
          // The first Monday of January is the first day of week 1; 
          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]
          var janFirst = new Date(date.tm_year, 0, 1);
          var firstMonday = janFirst.getDay() === 1 ? janFirst : __addDays(janFirst, janFirst.getDay() === 0 ? 1 : 7-janFirst.getDay()+1);
          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);
  
          // is target date after the first Monday?
          if (compareByDay(firstMonday, endDate) < 0) {
            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;
            var firstMondayUntilEndJanuary = 31-firstMonday.getDate();
            var days = firstMondayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();
            return leadingNulls(Math.ceil(days/7), 2);
          }
          return compareByDay(firstMonday, janFirst) === 0 ? '01': '00';
        },
        '%y': function(date) {
          // Replaced by the last two digits of the year as a decimal number [00,99]. [ tm_year]
          return (date.tm_year+1900).toString().substring(2);
        },
        '%Y': function(date) {
          // Replaced by the year as a decimal number (for example, 1997). [ tm_year]
          return date.tm_year+1900;
        },
        '%z': function(date) {
          // Replaced by the offset from UTC in the ISO 8601:2000 standard format ( +hhmm or -hhmm ).
          // For example, "-0430" means 4 hours 30 minutes behind UTC (west of Greenwich).
          var off = date.tm_gmtoff;
          var ahead = off >= 0;
          off = Math.abs(off) / 60;
          // convert from minutes into hhmm format (which means 60 minutes = 100 units)
          off = (off / 60)*100 + (off % 60);
          return (ahead ? '+' : '-') + String("0000" + off).slice(-4);
        },
        '%Z': function(date) {
          return date.tm_zone;
        },
        '%%': function() {
          return '%';
        }
      };
      for (var rule in EXPANSION_RULES_2) {
        if (pattern.indexOf(rule) >= 0) {
          pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_2[rule](date));
        }
      }
  
      var bytes = intArrayFromString(pattern, false);
      if (bytes.length > maxsize) {
        return 0;
      } 
  
      writeArrayToMemory(bytes, s);
      return bytes.length-1;
    }

  var _abs=Math_abs;

  
  
  
  var ERRNO_MESSAGES={0:"Success",1:"Not super-user",2:"No such file or directory",3:"No such process",4:"Interrupted system call",5:"I/O error",6:"No such device or address",7:"Arg list too long",8:"Exec format error",9:"Bad file number",10:"No children",11:"No more processes",12:"Not enough core",13:"Permission denied",14:"Bad address",15:"Block device required",16:"Mount device busy",17:"File exists",18:"Cross-device link",19:"No such device",20:"Not a directory",21:"Is a directory",22:"Invalid argument",23:"Too many open files in system",24:"Too many open files",25:"Not a typewriter",26:"Text file busy",27:"File too large",28:"No space left on device",29:"Illegal seek",30:"Read only file system",31:"Too many links",32:"Broken pipe",33:"Math arg out of domain of func",34:"Math result not representable",35:"File locking deadlock error",36:"File or path name too long",37:"No record locks available",38:"Function not implemented",39:"Directory not empty",40:"Too many symbolic links",42:"No message of desired type",43:"Identifier removed",44:"Channel number out of range",45:"Level 2 not synchronized",46:"Level 3 halted",47:"Level 3 reset",48:"Link number out of range",49:"Protocol driver not attached",50:"No CSI structure available",51:"Level 2 halted",52:"Invalid exchange",53:"Invalid request descriptor",54:"Exchange full",55:"No anode",56:"Invalid request code",57:"Invalid slot",59:"Bad font file fmt",60:"Device not a stream",61:"No data (for no delay io)",62:"Timer expired",63:"Out of streams resources",64:"Machine is not on the network",65:"Package not installed",66:"The object is remote",67:"The link has been severed",68:"Advertise error",69:"Srmount error",70:"Communication error on send",71:"Protocol error",72:"Multihop attempted",73:"Cross mount point (not really error)",74:"Trying to read unreadable message",75:"Value too large for defined data type",76:"Given log. name not unique",77:"f.d. invalid for this operation",78:"Remote address changed",79:"Can   access a needed shared lib",80:"Accessing a corrupted shared lib",81:".lib section in a.out corrupted",82:"Attempting to link in too many libs",83:"Attempting to exec a shared library",84:"Illegal byte sequence",86:"Streams pipe error",87:"Too many users",88:"Socket operation on non-socket",89:"Destination address required",90:"Message too long",91:"Protocol wrong type for socket",92:"Protocol not available",93:"Unknown protocol",94:"Socket type not supported",95:"Not supported",96:"Protocol family not supported",97:"Address family not supported by protocol family",98:"Address already in use",99:"Address not available",100:"Network interface is not configured",101:"Network is unreachable",102:"Connection reset by network",103:"Connection aborted",104:"Connection reset by peer",105:"No buffer space available",106:"Socket is already connected",107:"Socket is not connected",108:"Can't send after socket shutdown",109:"Too many references",110:"Connection timed out",111:"Connection refused",112:"Host is down",113:"Host is unreachable",114:"Socket already connected",115:"Connection already in progress",116:"Stale file handle",122:"Quota exceeded",123:"No medium (in tape drive)",125:"Operation canceled",130:"Previous owner died",131:"State not recoverable"};
  
  var TTY={ttys:[],init:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // currently, FS.init does not distinguish if process.stdin is a file or TTY
        //   // device, it always assumes it's a TTY device. because of this, we're forcing
        //   // process.stdin to UTF8 encoding to at least make stdin reading compatible
        //   // with text files until FS.init can be refactored.
        //   process['stdin']['setEncoding']('utf8');
        // }
      },shutdown:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // inolen: any idea as to why node -e 'process.stdin.read()' wouldn't exit immediately (with process.stdin being a tty)?
        //   // isaacs: because now it's reading from the stream, you've expressed interest in it, so that read() kicks off a _read() which creates a ReadReq operation
        //   // inolen: I thought read() in that case was a synchronous operation that just grabbed some amount of buffered data if it exists?
        //   // isaacs: it is. but it also triggers a _read() call, which calls readStart() on the handle
        //   // isaacs: do process.stdin.pause() and i'd think it'd probably close the pending call
        //   process['stdin']['pause']();
        // }
      },register:function (dev, ops) {
        TTY.ttys[dev] = { input: [], output: [], ops: ops };
        FS.registerDevice(dev, TTY.stream_ops);
      },stream_ops:{open:function (stream) {
          var tty = TTY.ttys[stream.node.rdev];
          if (!tty) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          stream.tty = tty;
          stream.seekable = false;
        },close:function (stream) {
          // flush any pending line data
          stream.tty.ops.flush(stream.tty);
        },flush:function (stream) {
          stream.tty.ops.flush(stream.tty);
        },read:function (stream, buffer, offset, length, pos /* ignored */) {
          if (!stream.tty || !stream.tty.ops.get_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          var bytesRead = 0;
          for (var i = 0; i < length; i++) {
            var result;
            try {
              result = stream.tty.ops.get_char(stream.tty);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            if (result === undefined && bytesRead === 0) {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
            if (result === null || result === undefined) break;
            bytesRead++;
            buffer[offset+i] = result;
          }
          if (bytesRead) {
            stream.node.timestamp = Date.now();
          }
          return bytesRead;
        },write:function (stream, buffer, offset, length, pos) {
          if (!stream.tty || !stream.tty.ops.put_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          for (var i = 0; i < length; i++) {
            try {
              stream.tty.ops.put_char(stream.tty, buffer[offset+i]);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
          }
          if (length) {
            stream.node.timestamp = Date.now();
          }
          return i;
        }},default_tty_ops:{get_char:function (tty) {
          if (!tty.input.length) {
            var result = null;
            if (ENVIRONMENT_IS_NODE) {
              // we will read data by chunks of BUFSIZE
              var BUFSIZE = 256;
              var buf = new Buffer(BUFSIZE);
              var bytesRead = 0;
  
              var fd = process.stdin.fd;
              // Linux and Mac cannot use process.stdin.fd (which isn't set up as sync)
              var usingDevice = false;
              try {
                fd = fs.openSync('/dev/stdin', 'r');
                usingDevice = true;
              } catch (e) {}
  
              bytesRead = fs.readSync(fd, buf, 0, BUFSIZE, null);
  
              if (usingDevice) { fs.closeSync(fd); }
              if (bytesRead > 0) {
                result = buf.slice(0, bytesRead).toString('utf-8');
              } else {
                result = null;
              }
  
            } else if (typeof window != 'undefined' &&
              typeof window.prompt == 'function') {
              // Browser.
              result = window.prompt('Input: ');  // returns null on cancel
              if (result !== null) {
                result += '\n';
              }
            } else if (typeof readline == 'function') {
              // Command line.
              result = readline();
              if (result !== null) {
                result += '\n';
              }
            }
            if (!result) {
              return null;
            }
            tty.input = intArrayFromString(result, true);
          }
          return tty.input.shift();
        },put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['print'](UTF8ArrayToString(tty.output, 0));
            tty.output = [];
          } else {
            if (val != 0) tty.output.push(val); // val == 0 would cut text output off in the middle.
          }
        },flush:function (tty) {
          if (tty.output && tty.output.length > 0) {
            Module['print'](UTF8ArrayToString(tty.output, 0));
            tty.output = [];
          }
        }},default_tty1_ops:{put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['printErr'](UTF8ArrayToString(tty.output, 0));
            tty.output = [];
          } else {
            if (val != 0) tty.output.push(val);
          }
        },flush:function (tty) {
          if (tty.output && tty.output.length > 0) {
            Module['printErr'](UTF8ArrayToString(tty.output, 0));
            tty.output = [];
          }
        }}};
  
  var MEMFS={ops_table:null,mount:function (mount) {
        return MEMFS.createNode(null, '/', 16384 | 511 /* 0777 */, 0);
      },createNode:function (parent, name, mode, dev) {
        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {
          // no supported
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (!MEMFS.ops_table) {
          MEMFS.ops_table = {
            dir: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                lookup: MEMFS.node_ops.lookup,
                mknod: MEMFS.node_ops.mknod,
                rename: MEMFS.node_ops.rename,
                unlink: MEMFS.node_ops.unlink,
                rmdir: MEMFS.node_ops.rmdir,
                readdir: MEMFS.node_ops.readdir,
                symlink: MEMFS.node_ops.symlink
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek
              }
            },
            file: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek,
                read: MEMFS.stream_ops.read,
                write: MEMFS.stream_ops.write,
                allocate: MEMFS.stream_ops.allocate,
                mmap: MEMFS.stream_ops.mmap,
                msync: MEMFS.stream_ops.msync
              }
            },
            link: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                readlink: MEMFS.node_ops.readlink
              },
              stream: {}
            },
            chrdev: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: FS.chrdev_stream_ops
            }
          };
        }
        var node = FS.createNode(parent, name, mode, dev);
        if (FS.isDir(node.mode)) {
          node.node_ops = MEMFS.ops_table.dir.node;
          node.stream_ops = MEMFS.ops_table.dir.stream;
          node.contents = {};
        } else if (FS.isFile(node.mode)) {
          node.node_ops = MEMFS.ops_table.file.node;
          node.stream_ops = MEMFS.ops_table.file.stream;
          node.usedBytes = 0; // The actual number of bytes used in the typed array, as opposed to contents.buffer.byteLength which gives the whole capacity.
          // When the byte data of the file is populated, this will point to either a typed array, or a normal JS array. Typed arrays are preferred
          // for performance, and used by default. However, typed arrays are not resizable like normal JS arrays are, so there is a small disk size
          // penalty involved for appending file writes that continuously grow a file similar to std::vector capacity vs used -scheme.
          node.contents = null; 
        } else if (FS.isLink(node.mode)) {
          node.node_ops = MEMFS.ops_table.link.node;
          node.stream_ops = MEMFS.ops_table.link.stream;
        } else if (FS.isChrdev(node.mode)) {
          node.node_ops = MEMFS.ops_table.chrdev.node;
          node.stream_ops = MEMFS.ops_table.chrdev.stream;
        }
        node.timestamp = Date.now();
        // add the new node to the parent
        if (parent) {
          parent.contents[name] = node;
        }
        return node;
      },getFileDataAsRegularArray:function (node) {
        if (node.contents && node.contents.subarray) {
          var arr = [];
          for (var i = 0; i < node.usedBytes; ++i) arr.push(node.contents[i]);
          return arr; // Returns a copy of the original data.
        }
        return node.contents; // No-op, the file contents are already in a JS array. Return as-is.
      },getFileDataAsTypedArray:function (node) {
        if (!node.contents) return new Uint8Array;
        if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes); // Make sure to not return excess unused bytes.
        return new Uint8Array(node.contents);
      },expandFileStorage:function (node, newCapacity) {
        // If we are asked to expand the size of a file that already exists, revert to using a standard JS array to store the file
        // instead of a typed array. This makes resizing the array more flexible because we can just .push() elements at the back to
        // increase the size.
        if (node.contents && node.contents.subarray && newCapacity > node.contents.length) {
          node.contents = MEMFS.getFileDataAsRegularArray(node);
          node.usedBytes = node.contents.length; // We might be writing to a lazy-loaded file which had overridden this property, so force-reset it.
        }
  
        if (!node.contents || node.contents.subarray) { // Keep using a typed array if creating a new storage, or if old one was a typed array as well.
          var prevCapacity = node.contents ? node.contents.buffer.byteLength : 0;
          if (prevCapacity >= newCapacity) return; // No need to expand, the storage was already large enough.
          // Don't expand strictly to the given requested limit if it's only a very small increase, but instead geometrically grow capacity.
          // For small filesizes (<1MB), perform size*2 geometric increase, but for large sizes, do a much more conservative size*1.125 increase to
          // avoid overshooting the allocation cap by a very large margin.
          var CAPACITY_DOUBLING_MAX = 1024 * 1024;
          newCapacity = Math.max(newCapacity, (prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2.0 : 1.125)) | 0);
          if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256); // At minimum allocate 256b for each file when expanding.
          var oldContents = node.contents;
          node.contents = new Uint8Array(newCapacity); // Allocate new storage.
          if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0); // Copy old data over to the new storage.
          return;
        }
        // Not using a typed array to back the file storage. Use a standard JS array instead.
        if (!node.contents && newCapacity > 0) node.contents = [];
        while (node.contents.length < newCapacity) node.contents.push(0);
      },resizeFileStorage:function (node, newSize) {
        if (node.usedBytes == newSize) return;
        if (newSize == 0) {
          node.contents = null; // Fully decommit when requesting a resize to zero.
          node.usedBytes = 0;
          return;
        }
        if (!node.contents || node.contents.subarray) { // Resize a typed array if that is being used as the backing store.
          var oldContents = node.contents;
          node.contents = new Uint8Array(new ArrayBuffer(newSize)); // Allocate new storage.
          if (oldContents) {
            node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes))); // Copy old data over to the new storage.
          }
          node.usedBytes = newSize;
          return;
        }
        // Backing with a JS array.
        if (!node.contents) node.contents = [];
        if (node.contents.length > newSize) node.contents.length = newSize;
        else while (node.contents.length < newSize) node.contents.push(0);
        node.usedBytes = newSize;
      },node_ops:{getattr:function (node) {
          var attr = {};
          // device numbers reuse inode numbers.
          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;
          attr.ino = node.id;
          attr.mode = node.mode;
          attr.nlink = 1;
          attr.uid = 0;
          attr.gid = 0;
          attr.rdev = node.rdev;
          if (FS.isDir(node.mode)) {
            attr.size = 4096;
          } else if (FS.isFile(node.mode)) {
            attr.size = node.usedBytes;
          } else if (FS.isLink(node.mode)) {
            attr.size = node.link.length;
          } else {
            attr.size = 0;
          }
          attr.atime = new Date(node.timestamp);
          attr.mtime = new Date(node.timestamp);
          attr.ctime = new Date(node.timestamp);
          // NOTE: In our implementation, st_blocks = Math.ceil(st_size/st_blksize),
          //       but this is not required by the standard.
          attr.blksize = 4096;
          attr.blocks = Math.ceil(attr.size / attr.blksize);
          return attr;
        },setattr:function (node, attr) {
          if (attr.mode !== undefined) {
            node.mode = attr.mode;
          }
          if (attr.timestamp !== undefined) {
            node.timestamp = attr.timestamp;
          }
          if (attr.size !== undefined) {
            MEMFS.resizeFileStorage(node, attr.size);
          }
        },lookup:function (parent, name) {
          throw FS.genericErrors[ERRNO_CODES.ENOENT];
        },mknod:function (parent, name, mode, dev) {
          return MEMFS.createNode(parent, name, mode, dev);
        },rename:function (old_node, new_dir, new_name) {
          // if we're overwriting a directory at new_name, make sure it's empty.
          if (FS.isDir(old_node.mode)) {
            var new_node;
            try {
              new_node = FS.lookupNode(new_dir, new_name);
            } catch (e) {
            }
            if (new_node) {
              for (var i in new_node.contents) {
                throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
              }
            }
          }
          // do the internal rewiring
          delete old_node.parent.contents[old_node.name];
          old_node.name = new_name;
          new_dir.contents[new_name] = old_node;
          old_node.parent = new_dir;
        },unlink:function (parent, name) {
          delete parent.contents[name];
        },rmdir:function (parent, name) {
          var node = FS.lookupNode(parent, name);
          for (var i in node.contents) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
          }
          delete parent.contents[name];
        },readdir:function (node) {
          var entries = ['.', '..']
          for (var key in node.contents) {
            if (!node.contents.hasOwnProperty(key)) {
              continue;
            }
            entries.push(key);
          }
          return entries;
        },symlink:function (parent, newname, oldpath) {
          var node = MEMFS.createNode(parent, newname, 511 /* 0777 */ | 40960, 0);
          node.link = oldpath;
          return node;
        },readlink:function (node) {
          if (!FS.isLink(node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          return node.link;
        }},stream_ops:{read:function (stream, buffer, offset, length, position) {
          var contents = stream.node.contents;
          if (position >= stream.node.usedBytes) return 0;
          var size = Math.min(stream.node.usedBytes - position, length);
          assert(size >= 0);
          if (size > 8 && contents.subarray) { // non-trivial, and typed array
            buffer.set(contents.subarray(position, position + size), offset);
          } else {
            for (var i = 0; i < size; i++) buffer[offset + i] = contents[position + i];
          }
          return size;
        },write:function (stream, buffer, offset, length, position, canOwn) {
          if (!length) return 0;
          var node = stream.node;
          node.timestamp = Date.now();
  
          if (buffer.subarray && (!node.contents || node.contents.subarray)) { // This write is from a typed array to a typed array?
            if (canOwn) { // Can we just reuse the buffer we are given?
              assert(position === 0, 'canOwn must imply no weird position inside the file');
              node.contents = buffer.subarray(offset, offset + length);
              node.usedBytes = length;
              return length;
            } else if (node.usedBytes === 0 && position === 0) { // If this is a simple first write to an empty file, do a fast set since we don't need to care about old data.
              node.contents = new Uint8Array(buffer.subarray(offset, offset + length));
              node.usedBytes = length;
              return length;
            } else if (position + length <= node.usedBytes) { // Writing to an already allocated and used subrange of the file?
              node.contents.set(buffer.subarray(offset, offset + length), position);
              return length;
            }
          }
  
          // Appending to an existing file and we need to reallocate, or source data did not come as a typed array.
          MEMFS.expandFileStorage(node, position+length);
          if (node.contents.subarray && buffer.subarray) node.contents.set(buffer.subarray(offset, offset + length), position); // Use typed array write if available.
          else {
            for (var i = 0; i < length; i++) {
             node.contents[position + i] = buffer[offset + i]; // Or fall back to manual write if not.
            }
          }
          node.usedBytes = Math.max(node.usedBytes, position+length);
          return length;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              position += stream.node.usedBytes;
            }
          }
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          return position;
        },allocate:function (stream, offset, length) {
          MEMFS.expandFileStorage(stream.node, offset + length);
          stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);
        },mmap:function (stream, buffer, offset, length, position, prot, flags) {
          if (!FS.isFile(stream.node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          var ptr;
          var allocated;
          var contents = stream.node.contents;
          // Only make a new copy when MAP_PRIVATE is specified.
          if ( !(flags & 2) &&
                (contents.buffer === buffer || contents.buffer === buffer.buffer) ) {
            // We can't emulate MAP_SHARED when the file is not backed by the buffer
            // we're mapping to (e.g. the HEAP buffer).
            allocated = false;
            ptr = contents.byteOffset;
          } else {
            // Try to avoid unnecessary slices.
            if (position > 0 || position + length < stream.node.usedBytes) {
              if (contents.subarray) {
                contents = contents.subarray(position, position + length);
              } else {
                contents = Array.prototype.slice.call(contents, position, position + length);
              }
            }
            allocated = true;
            ptr = _malloc(length);
            if (!ptr) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOMEM);
            }
            buffer.set(contents, ptr);
          }
          return { ptr: ptr, allocated: allocated };
        },msync:function (stream, buffer, offset, length, mmapFlags) {
          if (!FS.isFile(stream.node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          if (mmapFlags & 2) {
            // MAP_PRIVATE calls need not to be synced back to underlying fs
            return 0;
          }
  
          var bytesWritten = MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);
          // should we check if bytesWritten and length are the same?
          return 0;
        }}};
  
  var IDBFS={dbs:{},indexedDB:function () {
        if (typeof indexedDB !== 'undefined') return indexedDB;
        var ret = null;
        if (typeof window === 'object') ret = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
        assert(ret, 'IDBFS used, but indexedDB not supported');
        return ret;
      },DB_VERSION:21,DB_STORE_NAME:"FILE_DATA",mount:function (mount) {
        // reuse all of the core MEMFS functionality
        return MEMFS.mount.apply(null, arguments);
      },syncfs:function (mount, populate, callback) {
        IDBFS.getLocalSet(mount, function(err, local) {
          if (err) return callback(err);
  
          IDBFS.getRemoteSet(mount, function(err, remote) {
            if (err) return callback(err);
  
            var src = populate ? remote : local;
            var dst = populate ? local : remote;
  
            IDBFS.reconcile(src, dst, callback);
          });
        });
      },getDB:function (name, callback) {
        // check the cache first
        var db = IDBFS.dbs[name];
        if (db) {
          return callback(null, db);
        }
  
        var req;
        try {
          req = IDBFS.indexedDB().open(name, IDBFS.DB_VERSION);
        } catch (e) {
          return callback(e);
        }
        req.onupgradeneeded = function(e) {
          var db = e.target.result;
          var transaction = e.target.transaction;
  
          var fileStore;
  
          if (db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)) {
            fileStore = transaction.objectStore(IDBFS.DB_STORE_NAME);
          } else {
            fileStore = db.createObjectStore(IDBFS.DB_STORE_NAME);
          }
  
          if (!fileStore.indexNames.contains('timestamp')) {
            fileStore.createIndex('timestamp', 'timestamp', { unique: false });
          }
        };
        req.onsuccess = function() {
          db = req.result;
  
          // add to the cache
          IDBFS.dbs[name] = db;
          callback(null, db);
        };
        req.onerror = function(e) {
          callback(this.error);
          e.preventDefault();
        };
      },getLocalSet:function (mount, callback) {
        var entries = {};
  
        function isRealDir(p) {
          return p !== '.' && p !== '..';
        };
        function toAbsolute(root) {
          return function(p) {
            return PATH.join2(root, p);
          }
        };
  
        var check = FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));
  
        while (check.length) {
          var path = check.pop();
          var stat;
  
          try {
            stat = FS.stat(path);
          } catch (e) {
            return callback(e);
          }
  
          if (FS.isDir(stat.mode)) {
            check.push.apply(check, FS.readdir(path).filter(isRealDir).map(toAbsolute(path)));
          }
  
          entries[path] = { timestamp: stat.mtime };
        }
  
        return callback(null, { type: 'local', entries: entries });
      },getRemoteSet:function (mount, callback) {
        var entries = {};
  
        IDBFS.getDB(mount.mountpoint, function(err, db) {
          if (err) return callback(err);
  
          var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readonly');
          transaction.onerror = function(e) {
            callback(this.error);
            e.preventDefault();
          };
  
          var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
          var index = store.index('timestamp');
  
          index.openKeyCursor().onsuccess = function(event) {
            var cursor = event.target.result;
  
            if (!cursor) {
              return callback(null, { type: 'remote', db: db, entries: entries });
            }
  
            entries[cursor.primaryKey] = { timestamp: cursor.key };
  
            cursor.continue();
          };
        });
      },loadLocalEntry:function (path, callback) {
        var stat, node;
  
        try {
          var lookup = FS.lookupPath(path);
          node = lookup.node;
          stat = FS.stat(path);
        } catch (e) {
          return callback(e);
        }
  
        if (FS.isDir(stat.mode)) {
          return callback(null, { timestamp: stat.mtime, mode: stat.mode });
        } else if (FS.isFile(stat.mode)) {
          // Performance consideration: storing a normal JavaScript array to a IndexedDB is much slower than storing a typed array.
          // Therefore always convert the file contents to a typed array first before writing the data to IndexedDB.
          node.contents = MEMFS.getFileDataAsTypedArray(node);
          return callback(null, { timestamp: stat.mtime, mode: stat.mode, contents: node.contents });
        } else {
          return callback(new Error('node type not supported'));
        }
      },storeLocalEntry:function (path, entry, callback) {
        try {
          if (FS.isDir(entry.mode)) {
            FS.mkdir(path, entry.mode);
          } else if (FS.isFile(entry.mode)) {
            FS.writeFile(path, entry.contents, { encoding: 'binary', canOwn: true });
          } else {
            return callback(new Error('node type not supported'));
          }
  
          FS.chmod(path, entry.mode);
          FS.utime(path, entry.timestamp, entry.timestamp);
        } catch (e) {
          return callback(e);
        }
  
        callback(null);
      },removeLocalEntry:function (path, callback) {
        try {
          var lookup = FS.lookupPath(path);
          var stat = FS.stat(path);
  
          if (FS.isDir(stat.mode)) {
            FS.rmdir(path);
          } else if (FS.isFile(stat.mode)) {
            FS.unlink(path);
          }
        } catch (e) {
          return callback(e);
        }
  
        callback(null);
      },loadRemoteEntry:function (store, path, callback) {
        var req = store.get(path);
        req.onsuccess = function(event) { callback(null, event.target.result); };
        req.onerror = function(e) {
          callback(this.error);
          e.preventDefault();
        };
      },storeRemoteEntry:function (store, path, entry, callback) {
        var req = store.put(entry, path);
        req.onsuccess = function() { callback(null); };
        req.onerror = function(e) {
          callback(this.error);
          e.preventDefault();
        };
      },removeRemoteEntry:function (store, path, callback) {
        var req = store.delete(path);
        req.onsuccess = function() { callback(null); };
        req.onerror = function(e) {
          callback(this.error);
          e.preventDefault();
        };
      },reconcile:function (src, dst, callback) {
        var total = 0;
  
        var create = [];
        Object.keys(src.entries).forEach(function (key) {
          var e = src.entries[key];
          var e2 = dst.entries[key];
          if (!e2 || e.timestamp > e2.timestamp) {
            create.push(key);
            total++;
          }
        });
  
        var remove = [];
        Object.keys(dst.entries).forEach(function (key) {
          var e = dst.entries[key];
          var e2 = src.entries[key];
          if (!e2) {
            remove.push(key);
            total++;
          }
        });
  
        if (!total) {
          return callback(null);
        }
  
        var errored = false;
        var completed = 0;
        var db = src.type === 'remote' ? src.db : dst.db;
        var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readwrite');
        var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
  
        function done(err) {
          if (err) {
            if (!done.errored) {
              done.errored = true;
              return callback(err);
            }
            return;
          }
          if (++completed >= total) {
            return callback(null);
          }
        };
  
        transaction.onerror = function(e) {
          done(this.error);
          e.preventDefault();
        };
  
        // sort paths in ascending order so directory entries are created
        // before the files inside them
        create.sort().forEach(function (path) {
          if (dst.type === 'local') {
            IDBFS.loadRemoteEntry(store, path, function (err, entry) {
              if (err) return done(err);
              IDBFS.storeLocalEntry(path, entry, done);
            });
          } else {
            IDBFS.loadLocalEntry(path, function (err, entry) {
              if (err) return done(err);
              IDBFS.storeRemoteEntry(store, path, entry, done);
            });
          }
        });
  
        // sort paths in descending order so files are deleted before their
        // parent directories
        remove.sort().reverse().forEach(function(path) {
          if (dst.type === 'local') {
            IDBFS.removeLocalEntry(path, done);
          } else {
            IDBFS.removeRemoteEntry(store, path, done);
          }
        });
      }};
  
  var NODEFS={isWindows:false,staticInit:function () {
        NODEFS.isWindows = !!process.platform.match(/^win/);
      },mount:function (mount) {
        assert(ENVIRONMENT_IS_NODE);
        return NODEFS.createNode(null, '/', NODEFS.getMode(mount.opts.root), 0);
      },createNode:function (parent, name, mode, dev) {
        if (!FS.isDir(mode) && !FS.isFile(mode) && !FS.isLink(mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node = FS.createNode(parent, name, mode);
        node.node_ops = NODEFS.node_ops;
        node.stream_ops = NODEFS.stream_ops;
        return node;
      },getMode:function (path) {
        var stat;
        try {
          stat = fs.lstatSync(path);
          if (NODEFS.isWindows) {
            // On Windows, directories return permission bits 'rw-rw-rw-', even though they have 'rwxrwxrwx', so
            // propagate write bits to execute bits.
            stat.mode = stat.mode | ((stat.mode & 146) >> 1);
          }
        } catch (e) {
          if (!e.code) throw e;
          throw new FS.ErrnoError(ERRNO_CODES[e.code]);
        }
        return stat.mode;
      },realPath:function (node) {
        var parts = [];
        while (node.parent !== node) {
          parts.push(node.name);
          node = node.parent;
        }
        parts.push(node.mount.opts.root);
        parts.reverse();
        return PATH.join.apply(null, parts);
      },flagsToPermissionStringMap:{0:"r",1:"r+",2:"r+",64:"r",65:"r+",66:"r+",129:"rx+",193:"rx+",514:"w+",577:"w",578:"w+",705:"wx",706:"wx+",1024:"a",1025:"a",1026:"a+",1089:"a",1090:"a+",1153:"ax",1154:"ax+",1217:"ax",1218:"ax+",4096:"rs",4098:"rs+"},flagsToPermissionString:function (flags) {
        flags &= ~0100000 /*O_LARGEFILE*/; // Ignore this flag from musl, otherwise node.js fails to open the file.
        if (flags in NODEFS.flagsToPermissionStringMap) {
          return NODEFS.flagsToPermissionStringMap[flags];
        } else {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
      },node_ops:{getattr:function (node) {
          var path = NODEFS.realPath(node);
          var stat;
          try {
            stat = fs.lstatSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          // node.js v0.10.20 doesn't report blksize and blocks on Windows. Fake them with default blksize of 4096.
          // See http://support.microsoft.com/kb/140365
          if (NODEFS.isWindows && !stat.blksize) {
            stat.blksize = 4096;
          }
          if (NODEFS.isWindows && !stat.blocks) {
            stat.blocks = (stat.size+stat.blksize-1)/stat.blksize|0;
          }
          return {
            dev: stat.dev,
            ino: stat.ino,
            mode: stat.mode,
            nlink: stat.nlink,
            uid: stat.uid,
            gid: stat.gid,
            rdev: stat.rdev,
            size: stat.size,
            atime: stat.atime,
            mtime: stat.mtime,
            ctime: stat.ctime,
            blksize: stat.blksize,
            blocks: stat.blocks
          };
        },setattr:function (node, attr) {
          var path = NODEFS.realPath(node);
          try {
            if (attr.mode !== undefined) {
              fs.chmodSync(path, attr.mode);
              // update the common node structure mode as well
              node.mode = attr.mode;
            }
            if (attr.timestamp !== undefined) {
              var date = new Date(attr.timestamp);
              fs.utimesSync(path, date, date);
            }
            if (attr.size !== undefined) {
              fs.truncateSync(path, attr.size);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },lookup:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          var mode = NODEFS.getMode(path);
          return NODEFS.createNode(parent, name, mode);
        },mknod:function (parent, name, mode, dev) {
          var node = NODEFS.createNode(parent, name, mode, dev);
          // create the backing node for this in the fs root as well
          var path = NODEFS.realPath(node);
          try {
            if (FS.isDir(node.mode)) {
              fs.mkdirSync(path, node.mode);
            } else {
              fs.writeFileSync(path, '', { mode: node.mode });
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return node;
        },rename:function (oldNode, newDir, newName) {
          var oldPath = NODEFS.realPath(oldNode);
          var newPath = PATH.join2(NODEFS.realPath(newDir), newName);
          try {
            fs.renameSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },unlink:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.unlinkSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },rmdir:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.rmdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readdir:function (node) {
          var path = NODEFS.realPath(node);
          try {
            return fs.readdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },symlink:function (parent, newName, oldPath) {
          var newPath = PATH.join2(NODEFS.realPath(parent), newName);
          try {
            fs.symlinkSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readlink:function (node) {
          var path = NODEFS.realPath(node);
          try {
            path = fs.readlinkSync(path);
            path = NODEJS_PATH.relative(NODEJS_PATH.resolve(node.mount.opts.root), path);
            return path;
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        }},stream_ops:{open:function (stream) {
          var path = NODEFS.realPath(stream.node);
          try {
            if (FS.isFile(stream.node.mode)) {
              stream.nfd = fs.openSync(path, NODEFS.flagsToPermissionString(stream.flags));
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },close:function (stream) {
          try {
            if (FS.isFile(stream.node.mode) && stream.nfd) {
              fs.closeSync(stream.nfd);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },read:function (stream, buffer, offset, length, position) {
          if (length === 0) return 0; // node errors on 0 length reads
          // FIXME this is terrible.
          var nbuffer = new Buffer(length);
          var res;
          try {
            res = fs.readSync(stream.nfd, nbuffer, 0, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          if (res > 0) {
            for (var i = 0; i < res; i++) {
              buffer[offset + i] = nbuffer[i];
            }
          }
          return res;
        },write:function (stream, buffer, offset, length, position) {
          // FIXME this is terrible.
          var nbuffer = new Buffer(buffer.subarray(offset, offset + length));
          var res;
          try {
            res = fs.writeSync(stream.nfd, nbuffer, 0, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return res;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              try {
                var stat = fs.fstatSync(stream.nfd);
                position += stat.size;
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES[e.code]);
              }
            }
          }
  
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
  
          return position;
        }}};
  
  var WORKERFS={DIR_MODE:16895,FILE_MODE:33279,reader:null,mount:function (mount) {
        assert(ENVIRONMENT_IS_WORKER);
        if (!WORKERFS.reader) WORKERFS.reader = new FileReaderSync();
        var root = WORKERFS.createNode(null, '/', WORKERFS.DIR_MODE, 0);
        var createdParents = {};
        function ensureParent(path) {
          // return the parent node, creating subdirs as necessary
          var parts = path.split('/');
          var parent = root;
          for (var i = 0; i < parts.length-1; i++) {
            var curr = parts.slice(0, i+1).join('/');
            if (!createdParents[curr]) {
              createdParents[curr] = WORKERFS.createNode(parent, curr, WORKERFS.DIR_MODE, 0);
            }
            parent = createdParents[curr];
          }
          return parent;
        }
        function base(path) {
          var parts = path.split('/');
          return parts[parts.length-1];
        }
        // We also accept FileList here, by using Array.prototype
        Array.prototype.forEach.call(mount.opts["files"] || [], function(file) {
          WORKERFS.createNode(ensureParent(file.name), base(file.name), WORKERFS.FILE_MODE, 0, file, file.lastModifiedDate);
        });
        (mount.opts["blobs"] || []).forEach(function(obj) {
          WORKERFS.createNode(ensureParent(obj["name"]), base(obj["name"]), WORKERFS.FILE_MODE, 0, obj["data"]);
        });
        (mount.opts["packages"] || []).forEach(function(pack) {
          pack['metadata'].files.forEach(function(file) {
            var name = file.filename.substr(1); // remove initial slash
            WORKERFS.createNode(ensureParent(name), base(name), WORKERFS.FILE_MODE, 0, pack['blob'].slice(file.start, file.end));
          });
        });
        return root;
      },createNode:function (parent, name, mode, dev, contents, mtime) {
        var node = FS.createNode(parent, name, mode);
        node.mode = mode;
        node.node_ops = WORKERFS.node_ops;
        node.stream_ops = WORKERFS.stream_ops;
        node.timestamp = (mtime || new Date).getTime();
        assert(WORKERFS.FILE_MODE !== WORKERFS.DIR_MODE);
        if (mode === WORKERFS.FILE_MODE) {
          node.size = contents.size;
          node.contents = contents;
        } else {
          node.size = 4096;
          node.contents = {};
        }
        if (parent) {
          parent.contents[name] = node;
        }
        return node;
      },node_ops:{getattr:function (node) {
          return {
            dev: 1,
            ino: undefined,
            mode: node.mode,
            nlink: 1,
            uid: 0,
            gid: 0,
            rdev: undefined,
            size: node.size,
            atime: new Date(node.timestamp),
            mtime: new Date(node.timestamp),
            ctime: new Date(node.timestamp),
            blksize: 4096,
            blocks: Math.ceil(node.size / 4096),
          };
        },setattr:function (node, attr) {
          if (attr.mode !== undefined) {
            node.mode = attr.mode;
          }
          if (attr.timestamp !== undefined) {
            node.timestamp = attr.timestamp;
          }
        },lookup:function (parent, name) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        },mknod:function (parent, name, mode, dev) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        },rename:function (oldNode, newDir, newName) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        },unlink:function (parent, name) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        },rmdir:function (parent, name) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        },readdir:function (node) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        },symlink:function (parent, newName, oldPath) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        },readlink:function (node) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }},stream_ops:{read:function (stream, buffer, offset, length, position) {
          if (position >= stream.node.size) return 0;
          var chunk = stream.node.contents.slice(position, position + length);
          var ab = WORKERFS.reader.readAsArrayBuffer(chunk);
          buffer.set(new Uint8Array(ab), offset);
          return chunk.size;
        },write:function (stream, buffer, offset, length, position) {
          throw new FS.ErrnoError(ERRNO_CODES.EIO);
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              position += stream.node.size;
            }
          }
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          return position;
        }}};
  
  var _stdin=allocate(1, "i32*", ALLOC_STATIC);
  
  var _stdout=allocate(1, "i32*", ALLOC_STATIC);
  
  var _stderr=allocate(1, "i32*", ALLOC_STATIC);var FS={root:null,mounts:[],devices:[null],streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:false,ignorePermissions:true,trackingDelegate:{},tracking:{openFlags:{READ:1,WRITE:2}},ErrnoError:null,genericErrors:{},filesystems:null,handleFSError:function (e) {
        if (!(e instanceof FS.ErrnoError)) throw e + ' : ' + stackTrace();
        return ___setErrNo(e.errno);
      },lookupPath:function (path, opts) {
        path = PATH.resolve(FS.cwd(), path);
        opts = opts || {};
  
        if (!path) return { path: '', node: null };
  
        var defaults = {
          follow_mount: true,
          recurse_count: 0
        };
        for (var key in defaults) {
          if (opts[key] === undefined) {
            opts[key] = defaults[key];
          }
        }
  
        if (opts.recurse_count > 8) {  // max recursive lookup of 8
          throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
        }
  
        // split the path
        var parts = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), false);
  
        // start at the root
        var current = FS.root;
        var current_path = '/';
  
        for (var i = 0; i < parts.length; i++) {
          var islast = (i === parts.length-1);
          if (islast && opts.parent) {
            // stop resolving
            break;
          }
  
          current = FS.lookupNode(current, parts[i]);
          current_path = PATH.join2(current_path, parts[i]);
  
          // jump to the mount's root node if this is a mountpoint
          if (FS.isMountpoint(current)) {
            if (!islast || (islast && opts.follow_mount)) {
              current = current.mounted.root;
            }
          }
  
          // by default, lookupPath will not follow a symlink if it is the final path component.
          // setting opts.follow = true will override this behavior.
          if (!islast || opts.follow) {
            var count = 0;
            while (FS.isLink(current.mode)) {
              var link = FS.readlink(current_path);
              current_path = PATH.resolve(PATH.dirname(current_path), link);
  
              var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count });
              current = lookup.node;
  
              if (count++ > 40) {  // limit max consecutive symlinks to 40 (SYMLOOP_MAX).
                throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
              }
            }
          }
        }
  
        return { path: current_path, node: current };
      },getPath:function (node) {
        var path;
        while (true) {
          if (FS.isRoot(node)) {
            var mount = node.mount.mountpoint;
            if (!path) return mount;
            return mount[mount.length-1] !== '/' ? mount + '/' + path : mount + path;
          }
          path = path ? node.name + '/' + path : node.name;
          node = node.parent;
        }
      },hashName:function (parentid, name) {
        var hash = 0;
  
  
        for (var i = 0; i < name.length; i++) {
          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;
        }
        return ((parentid + hash) >>> 0) % FS.nameTable.length;
      },hashAddNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        node.name_next = FS.nameTable[hash];
        FS.nameTable[hash] = node;
      },hashRemoveNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        if (FS.nameTable[hash] === node) {
          FS.nameTable[hash] = node.name_next;
        } else {
          var current = FS.nameTable[hash];
          while (current) {
            if (current.name_next === node) {
              current.name_next = node.name_next;
              break;
            }
            current = current.name_next;
          }
        }
      },lookupNode:function (parent, name) {
        var err = FS.mayLookup(parent);
        if (err) {
          throw new FS.ErrnoError(err, parent);
        }
        var hash = FS.hashName(parent.id, name);
        for (var node = FS.nameTable[hash]; node; node = node.name_next) {
          var nodeName = node.name;
          if (node.parent.id === parent.id && nodeName === name) {
            return node;
          }
        }
        // if we failed to find it in the cache, call into the VFS
        return FS.lookup(parent, name);
      },createNode:function (parent, name, mode, rdev) {
        if (!FS.FSNode) {
          FS.FSNode = function(parent, name, mode, rdev) {
            if (!parent) {
              parent = this;  // root node sets parent to itself
            }
            this.parent = parent;
            this.mount = parent.mount;
            this.mounted = null;
            this.id = FS.nextInode++;
            this.name = name;
            this.mode = mode;
            this.node_ops = {};
            this.stream_ops = {};
            this.rdev = rdev;
          };
  
          FS.FSNode.prototype = {};
  
          // compatibility
          var readMode = 292 | 73;
          var writeMode = 146;
  
          // NOTE we must use Object.defineProperties instead of individual calls to
          // Object.defineProperty in order to make closure compiler happy
          Object.defineProperties(FS.FSNode.prototype, {
            read: {
              get: function() { return (this.mode & readMode) === readMode; },
              set: function(val) { val ? this.mode |= readMode : this.mode &= ~readMode; }
            },
            write: {
              get: function() { return (this.mode & writeMode) === writeMode; },
              set: function(val) { val ? this.mode |= writeMode : this.mode &= ~writeMode; }
            },
            isFolder: {
              get: function() { return FS.isDir(this.mode); }
            },
            isDevice: {
              get: function() { return FS.isChrdev(this.mode); }
            }
          });
        }
  
        var node = new FS.FSNode(parent, name, mode, rdev);
  
        FS.hashAddNode(node);
  
        return node;
      },destroyNode:function (node) {
        FS.hashRemoveNode(node);
      },isRoot:function (node) {
        return node === node.parent;
      },isMountpoint:function (node) {
        return !!node.mounted;
      },isFile:function (mode) {
        return (mode & 61440) === 32768;
      },isDir:function (mode) {
        return (mode & 61440) === 16384;
      },isLink:function (mode) {
        return (mode & 61440) === 40960;
      },isChrdev:function (mode) {
        return (mode & 61440) === 8192;
      },isBlkdev:function (mode) {
        return (mode & 61440) === 24576;
      },isFIFO:function (mode) {
        return (mode & 61440) === 4096;
      },isSocket:function (mode) {
        return (mode & 49152) === 49152;
      },flagModes:{"r":0,"rs":1052672,"r+":2,"w":577,"wx":705,"xw":705,"w+":578,"wx+":706,"xw+":706,"a":1089,"ax":1217,"xa":1217,"a+":1090,"ax+":1218,"xa+":1218},modeStringToFlags:function (str) {
        var flags = FS.flagModes[str];
        if (typeof flags === 'undefined') {
          throw new Error('Unknown file open mode: ' + str);
        }
        return flags;
      },flagsToPermissionString:function (flag) {
        var perms = ['r', 'w', 'rw'][flag & 3];
        if ((flag & 512)) {
          perms += 'w';
        }
        return perms;
      },nodePermissions:function (node, perms) {
        if (FS.ignorePermissions) {
          return 0;
        }
        // return 0 if any user, group or owner bits are set.
        if (perms.indexOf('r') !== -1 && !(node.mode & 292)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('w') !== -1 && !(node.mode & 146)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('x') !== -1 && !(node.mode & 73)) {
          return ERRNO_CODES.EACCES;
        }
        return 0;
      },mayLookup:function (dir) {
        var err = FS.nodePermissions(dir, 'x');
        if (err) return err;
        if (!dir.node_ops.lookup) return ERRNO_CODES.EACCES;
        return 0;
      },mayCreate:function (dir, name) {
        try {
          var node = FS.lookupNode(dir, name);
          return ERRNO_CODES.EEXIST;
        } catch (e) {
        }
        return FS.nodePermissions(dir, 'wx');
      },mayDelete:function (dir, name, isdir) {
        var node;
        try {
          node = FS.lookupNode(dir, name);
        } catch (e) {
          return e.errno;
        }
        var err = FS.nodePermissions(dir, 'wx');
        if (err) {
          return err;
        }
        if (isdir) {
          if (!FS.isDir(node.mode)) {
            return ERRNO_CODES.ENOTDIR;
          }
          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {
            return ERRNO_CODES.EBUSY;
          }
        } else {
          if (FS.isDir(node.mode)) {
            return ERRNO_CODES.EISDIR;
          }
        }
        return 0;
      },mayOpen:function (node, flags) {
        if (!node) {
          return ERRNO_CODES.ENOENT;
        }
        if (FS.isLink(node.mode)) {
          return ERRNO_CODES.ELOOP;
        } else if (FS.isDir(node.mode)) {
          if ((flags & 2097155) !== 0 ||  // opening for write
              (flags & 512)) {
            return ERRNO_CODES.EISDIR;
          }
        }
        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));
      },MAX_OPEN_FDS:4096,nextfd:function (fd_start, fd_end) {
        fd_start = fd_start || 0;
        fd_end = fd_end || FS.MAX_OPEN_FDS;
        for (var fd = fd_start; fd <= fd_end; fd++) {
          if (!FS.streams[fd]) {
            return fd;
          }
        }
        throw new FS.ErrnoError(ERRNO_CODES.EMFILE);
      },getStream:function (fd) {
        return FS.streams[fd];
      },createStream:function (stream, fd_start, fd_end) {
        if (!FS.FSStream) {
          FS.FSStream = function(){};
          FS.FSStream.prototype = {};
          // compatibility
          Object.defineProperties(FS.FSStream.prototype, {
            object: {
              get: function() { return this.node; },
              set: function(val) { this.node = val; }
            },
            isRead: {
              get: function() { return (this.flags & 2097155) !== 1; }
            },
            isWrite: {
              get: function() { return (this.flags & 2097155) !== 0; }
            },
            isAppend: {
              get: function() { return (this.flags & 1024); }
            }
          });
        }
        // clone it, so we can return an instance of FSStream
        var newStream = new FS.FSStream();
        for (var p in stream) {
          newStream[p] = stream[p];
        }
        stream = newStream;
        var fd = FS.nextfd(fd_start, fd_end);
        stream.fd = fd;
        FS.streams[fd] = stream;
        return stream;
      },closeStream:function (fd) {
        FS.streams[fd] = null;
      },chrdev_stream_ops:{open:function (stream) {
          var device = FS.getDevice(stream.node.rdev);
          // override node's stream ops with the device's
          stream.stream_ops = device.stream_ops;
          // forward the open call
          if (stream.stream_ops.open) {
            stream.stream_ops.open(stream);
          }
        },llseek:function () {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }},major:function (dev) {
        return ((dev) >> 8);
      },minor:function (dev) {
        return ((dev) & 0xff);
      },makedev:function (ma, mi) {
        return ((ma) << 8 | (mi));
      },registerDevice:function (dev, ops) {
        FS.devices[dev] = { stream_ops: ops };
      },getDevice:function (dev) {
        return FS.devices[dev];
      },getMounts:function (mount) {
        var mounts = [];
        var check = [mount];
  
        while (check.length) {
          var m = check.pop();
  
          mounts.push(m);
  
          check.push.apply(check, m.mounts);
        }
  
        return mounts;
      },syncfs:function (populate, callback) {
        if (typeof(populate) === 'function') {
          callback = populate;
          populate = false;
        }
  
        var mounts = FS.getMounts(FS.root.mount);
        var completed = 0;
  
        function done(err) {
          if (err) {
            if (!done.errored) {
              done.errored = true;
              return callback(err);
            }
            return;
          }
          if (++completed >= mounts.length) {
            callback(null);
          }
        };
  
        // sync all mounts
        mounts.forEach(function (mount) {
          if (!mount.type.syncfs) {
            return done(null);
          }
          mount.type.syncfs(mount, populate, done);
        });
      },mount:function (type, opts, mountpoint) {
        var root = mountpoint === '/';
        var pseudo = !mountpoint;
        var node;
  
        if (root && FS.root) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        } else if (!root && !pseudo) {
          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });
  
          mountpoint = lookup.path;  // use the absolute path
          node = lookup.node;
  
          if (FS.isMountpoint(node)) {
            throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
          }
  
          if (!FS.isDir(node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
          }
        }
  
        var mount = {
          type: type,
          opts: opts,
          mountpoint: mountpoint,
          mounts: []
        };
  
        // create a root node for the fs
        var mountRoot = type.mount(mount);
        mountRoot.mount = mount;
        mount.root = mountRoot;
  
        if (root) {
          FS.root = mountRoot;
        } else if (node) {
          // set as a mountpoint
          node.mounted = mount;
  
          // add the new mount to the current mount's children
          if (node.mount) {
            node.mount.mounts.push(mount);
          }
        }
  
        return mountRoot;
      },unmount:function (mountpoint) {
        var lookup = FS.lookupPath(mountpoint, { follow_mount: false });
  
        if (!FS.isMountpoint(lookup.node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
  
        // destroy the nodes for this mount, and all its child mounts
        var node = lookup.node;
        var mount = node.mounted;
        var mounts = FS.getMounts(mount);
  
        Object.keys(FS.nameTable).forEach(function (hash) {
          var current = FS.nameTable[hash];
  
          while (current) {
            var next = current.name_next;
  
            if (mounts.indexOf(current.mount) !== -1) {
              FS.destroyNode(current);
            }
  
            current = next;
          }
        });
  
        // no longer a mountpoint
        node.mounted = null;
  
        // remove this mount from the child mounts
        var idx = node.mount.mounts.indexOf(mount);
        assert(idx !== -1);
        node.mount.mounts.splice(idx, 1);
      },lookup:function (parent, name) {
        return parent.node_ops.lookup(parent, name);
      },mknod:function (path, mode, dev) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        if (!name || name === '.' || name === '..') {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var err = FS.mayCreate(parent, name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.mknod) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.mknod(parent, name, mode, dev);
      },create:function (path, mode) {
        mode = mode !== undefined ? mode : 438 /* 0666 */;
        mode &= 4095;
        mode |= 32768;
        return FS.mknod(path, mode, 0);
      },mkdir:function (path, mode) {
        mode = mode !== undefined ? mode : 511 /* 0777 */;
        mode &= 511 | 512;
        mode |= 16384;
        return FS.mknod(path, mode, 0);
      },mkdev:function (path, mode, dev) {
        if (typeof(dev) === 'undefined') {
          dev = mode;
          mode = 438 /* 0666 */;
        }
        mode |= 8192;
        return FS.mknod(path, mode, dev);
      },symlink:function (oldpath, newpath) {
        if (!PATH.resolve(oldpath)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        var lookup = FS.lookupPath(newpath, { parent: true });
        var parent = lookup.node;
        if (!parent) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        var newname = PATH.basename(newpath);
        var err = FS.mayCreate(parent, newname);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.symlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.symlink(parent, newname, oldpath);
      },rename:function (old_path, new_path) {
        var old_dirname = PATH.dirname(old_path);
        var new_dirname = PATH.dirname(new_path);
        var old_name = PATH.basename(old_path);
        var new_name = PATH.basename(new_path);
        // parents must exist
        var lookup, old_dir, new_dir;
        try {
          lookup = FS.lookupPath(old_path, { parent: true });
          old_dir = lookup.node;
          lookup = FS.lookupPath(new_path, { parent: true });
          new_dir = lookup.node;
        } catch (e) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        if (!old_dir || !new_dir) throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        // need to be part of the same mount
        if (old_dir.mount !== new_dir.mount) {
          throw new FS.ErrnoError(ERRNO_CODES.EXDEV);
        }
        // source must exist
        var old_node = FS.lookupNode(old_dir, old_name);
        // old path should not be an ancestor of the new path
        var relative = PATH.relative(old_path, new_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        // new path should not be an ancestor of the old path
        relative = PATH.relative(new_path, old_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
        }
        // see if the new path already exists
        var new_node;
        try {
          new_node = FS.lookupNode(new_dir, new_name);
        } catch (e) {
          // not fatal
        }
        // early out if nothing needs to change
        if (old_node === new_node) {
          return;
        }
        // we'll need to delete the old entry
        var isdir = FS.isDir(old_node.mode);
        var err = FS.mayDelete(old_dir, old_name, isdir);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        // need delete permissions if we'll be overwriting.
        // need create permissions if new doesn't already exist.
        err = new_node ?
          FS.mayDelete(new_dir, new_name, isdir) :
          FS.mayCreate(new_dir, new_name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!old_dir.node_ops.rename) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(old_node) || (new_node && FS.isMountpoint(new_node))) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        // if we are going to change the parent, check write permissions
        if (new_dir !== old_dir) {
          err = FS.nodePermissions(old_dir, 'w');
          if (err) {
            throw new FS.ErrnoError(err);
          }
        }
        try {
          if (FS.trackingDelegate['willMovePath']) {
            FS.trackingDelegate['willMovePath'](old_path, new_path);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['willMovePath']('"+old_path+"', '"+new_path+"') threw an exception: " + e.message);
        }
        // remove the node from the lookup hash
        FS.hashRemoveNode(old_node);
        // do the underlying fs rename
        try {
          old_dir.node_ops.rename(old_node, new_dir, new_name);
        } catch (e) {
          throw e;
        } finally {
          // add the node back to the hash (in case node_ops.rename
          // changed its name)
          FS.hashAddNode(old_node);
        }
        try {
          if (FS.trackingDelegate['onMovePath']) FS.trackingDelegate['onMovePath'](old_path, new_path);
        } catch(e) {
          console.log("FS.trackingDelegate['onMovePath']('"+old_path+"', '"+new_path+"') threw an exception: " + e.message);
        }
      },rmdir:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, true);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.rmdir) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        try {
          if (FS.trackingDelegate['willDeletePath']) {
            FS.trackingDelegate['willDeletePath'](path);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: " + e.message);
        }
        parent.node_ops.rmdir(parent, name);
        FS.destroyNode(node);
        try {
          if (FS.trackingDelegate['onDeletePath']) FS.trackingDelegate['onDeletePath'](path);
        } catch(e) {
          console.log("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: " + e.message);
        }
      },readdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        if (!node.node_ops.readdir) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        return node.node_ops.readdir(node);
      },unlink:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, false);
        if (err) {
          // POSIX says unlink should set EPERM, not EISDIR
          if (err === ERRNO_CODES.EISDIR) err = ERRNO_CODES.EPERM;
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.unlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        try {
          if (FS.trackingDelegate['willDeletePath']) {
            FS.trackingDelegate['willDeletePath'](path);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: " + e.message);
        }
        parent.node_ops.unlink(parent, name);
        FS.destroyNode(node);
        try {
          if (FS.trackingDelegate['onDeletePath']) FS.trackingDelegate['onDeletePath'](path);
        } catch(e) {
          console.log("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: " + e.message);
        }
      },readlink:function (path) {
        var lookup = FS.lookupPath(path);
        var link = lookup.node;
        if (!link) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        if (!link.node_ops.readlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        return PATH.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));
      },stat:function (path, dontFollow) {
        var lookup = FS.lookupPath(path, { follow: !dontFollow });
        var node = lookup.node;
        if (!node) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        if (!node.node_ops.getattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return node.node_ops.getattr(node);
      },lstat:function (path) {
        return FS.stat(path, true);
      },chmod:function (path, mode, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          mode: (mode & 4095) | (node.mode & ~4095),
          timestamp: Date.now()
        });
      },lchmod:function (path, mode) {
        FS.chmod(path, mode, true);
      },fchmod:function (fd, mode) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chmod(stream.node, mode);
      },chown:function (path, uid, gid, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          timestamp: Date.now()
          // we ignore the uid / gid for now
        });
      },lchown:function (path, uid, gid) {
        FS.chown(path, uid, gid, true);
      },fchown:function (fd, uid, gid) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chown(stream.node, uid, gid);
      },truncate:function (path, len) {
        if (len < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: true });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!FS.isFile(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var err = FS.nodePermissions(node, 'w');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        node.node_ops.setattr(node, {
          size: len,
          timestamp: Date.now()
        });
      },ftruncate:function (fd, len) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        FS.truncate(stream.node, len);
      },utime:function (path, atime, mtime) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        node.node_ops.setattr(node, {
          timestamp: Math.max(atime, mtime)
        });
      },open:function (path, flags, mode, fd_start, fd_end) {
        if (path === "") {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        flags = typeof flags === 'string' ? FS.modeStringToFlags(flags) : flags;
        mode = typeof mode === 'undefined' ? 438 /* 0666 */ : mode;
        if ((flags & 64)) {
          mode = (mode & 4095) | 32768;
        } else {
          mode = 0;
        }
        var node;
        if (typeof path === 'object') {
          node = path;
        } else {
          path = PATH.normalize(path);
          try {
            var lookup = FS.lookupPath(path, {
              follow: !(flags & 131072)
            });
            node = lookup.node;
          } catch (e) {
            // ignore
          }
        }
        // perhaps we need to create the node
        var created = false;
        if ((flags & 64)) {
          if (node) {
            // if O_CREAT and O_EXCL are set, error out if the node already exists
            if ((flags & 128)) {
              throw new FS.ErrnoError(ERRNO_CODES.EEXIST);
            }
          } else {
            // node doesn't exist, try to create it
            node = FS.mknod(path, mode, 0);
            created = true;
          }
        }
        if (!node) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        // can't truncate a device
        if (FS.isChrdev(node.mode)) {
          flags &= ~512;
        }
        // if asked only for a directory, then this must be one
        if ((flags & 65536) && !FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        // check permissions, if this is not a file we just created now (it is ok to
        // create and write to a file with read-only permissions; it is read-only
        // for later use)
        if (!created) {
          var err = FS.mayOpen(node, flags);
          if (err) {
            throw new FS.ErrnoError(err);
          }
        }
        // do truncation if necessary
        if ((flags & 512)) {
          FS.truncate(node, 0);
        }
        // we've already handled these, don't pass down to the underlying vfs
        flags &= ~(128 | 512);
  
        // register the stream with the filesystem
        var stream = FS.createStream({
          node: node,
          path: FS.getPath(node),  // we want the absolute path to the node
          flags: flags,
          seekable: true,
          position: 0,
          stream_ops: node.stream_ops,
          // used by the file family libc calls (fopen, fwrite, ferror, etc.)
          ungotten: [],
          error: false
        }, fd_start, fd_end);
        // call the new stream's open function
        if (stream.stream_ops.open) {
          stream.stream_ops.open(stream);
        }
        if (Module['logReadFiles'] && !(flags & 1)) {
          if (!FS.readFiles) FS.readFiles = {};
          if (!(path in FS.readFiles)) {
            FS.readFiles[path] = 1;
            Module['printErr']('read file: ' + path);
          }
        }
        try {
          if (FS.trackingDelegate['onOpenFile']) {
            var trackingFlags = 0;
            if ((flags & 2097155) !== 1) {
              trackingFlags |= FS.tracking.openFlags.READ;
            }
            if ((flags & 2097155) !== 0) {
              trackingFlags |= FS.tracking.openFlags.WRITE;
            }
            FS.trackingDelegate['onOpenFile'](path, trackingFlags);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['onOpenFile']('"+path+"', flags) threw an exception: " + e.message);
        }
        return stream;
      },close:function (stream) {
        if (stream.getdents) stream.getdents = null; // free readdir state
        try {
          if (stream.stream_ops.close) {
            stream.stream_ops.close(stream);
          }
        } catch (e) {
          throw e;
        } finally {
          FS.closeStream(stream.fd);
        }
      },llseek:function (stream, offset, whence) {
        if (!stream.seekable || !stream.stream_ops.llseek) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        stream.position = stream.stream_ops.llseek(stream, offset, whence);
        stream.ungotten = [];
        return stream.position;
      },read:function (stream, buffer, offset, length, position) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.read) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);
        if (!seeking) stream.position += bytesRead;
        return bytesRead;
      },write:function (stream, buffer, offset, length, position, canOwn) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.write) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if (stream.flags & 1024) {
          // seek to the end before writing in append mode
          FS.llseek(stream, 0, 2);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);
        if (!seeking) stream.position += bytesWritten;
        try {
          if (stream.path && FS.trackingDelegate['onWriteToFile']) FS.trackingDelegate['onWriteToFile'](stream.path);
        } catch(e) {
          console.log("FS.trackingDelegate['onWriteToFile']('"+path+"') threw an exception: " + e.message);
        }
        return bytesWritten;
      },allocate:function (stream, offset, length) {
        if (offset < 0 || length <= 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (!FS.isFile(stream.node.mode) && !FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        if (!stream.stream_ops.allocate) {
          throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
        }
        stream.stream_ops.allocate(stream, offset, length);
      },mmap:function (stream, buffer, offset, length, position, prot, flags) {
        // TODO if PROT is PROT_WRITE, make sure we have write access
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EACCES);
        }
        if (!stream.stream_ops.mmap) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        return stream.stream_ops.mmap(stream, buffer, offset, length, position, prot, flags);
      },msync:function (stream, buffer, offset, length, mmapFlags) {
        if (!stream || !stream.stream_ops.msync) {
          return 0;
        }
        return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags);
      },munmap:function (stream) {
        return 0;
      },ioctl:function (stream, cmd, arg) {
        if (!stream.stream_ops.ioctl) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTTY);
        }
        return stream.stream_ops.ioctl(stream, cmd, arg);
      },readFile:function (path, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'r';
        opts.encoding = opts.encoding || 'binary';
        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        var ret;
        var stream = FS.open(path, opts.flags);
        var stat = FS.stat(path);
        var length = stat.size;
        var buf = new Uint8Array(length);
        FS.read(stream, buf, 0, length, 0);
        if (opts.encoding === 'utf8') {
          ret = UTF8ArrayToString(buf, 0);
        } else if (opts.encoding === 'binary') {
          ret = buf;
        }
        FS.close(stream);
        return ret;
      },writeFile:function (path, data, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'w';
        opts.encoding = opts.encoding || 'utf8';
        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        var stream = FS.open(path, opts.flags, opts.mode);
        if (opts.encoding === 'utf8') {
          var buf = new Uint8Array(lengthBytesUTF8(data)+1);
          var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);
          FS.write(stream, buf, 0, actualNumBytes, 0, opts.canOwn);
        } else if (opts.encoding === 'binary') {
          FS.write(stream, data, 0, data.length, 0, opts.canOwn);
        }
        FS.close(stream);
      },cwd:function () {
        return FS.currentPath;
      },chdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        if (!FS.isDir(lookup.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        var err = FS.nodePermissions(lookup.node, 'x');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        FS.currentPath = lookup.path;
      },createDefaultDirectories:function () {
        FS.mkdir('/tmp');
        FS.mkdir('/home');
        FS.mkdir('/home/web_user');
      },createDefaultDevices:function () {
        // create /dev
        FS.mkdir('/dev');
        // setup /dev/null
        FS.registerDevice(FS.makedev(1, 3), {
          read: function() { return 0; },
          write: function(stream, buffer, offset, length, pos) { return length; }
        });
        FS.mkdev('/dev/null', FS.makedev(1, 3));
        // setup /dev/tty and /dev/tty1
        // stderr needs to print output using Module['printErr']
        // so we register a second tty just for it.
        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);
        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);
        FS.mkdev('/dev/tty', FS.makedev(5, 0));
        FS.mkdev('/dev/tty1', FS.makedev(6, 0));
        // setup /dev/[u]random
        var random_device;
        if (typeof crypto !== 'undefined') {
          // for modern web browsers
          var randomBuffer = new Uint8Array(1);
          random_device = function() { crypto.getRandomValues(randomBuffer); return randomBuffer[0]; };
        } else if (ENVIRONMENT_IS_NODE) {
          // for nodejs
          random_device = function() { return require('crypto').randomBytes(1)[0]; };
        } else {
          // default for ES5 platforms
          random_device = function() { return (Math.random()*256)|0; };
        }
        FS.createDevice('/dev', 'random', random_device);
        FS.createDevice('/dev', 'urandom', random_device);
        // we're not going to emulate the actual shm device,
        // just create the tmp dirs that reside in it commonly
        FS.mkdir('/dev/shm');
        FS.mkdir('/dev/shm/tmp');
      },createSpecialDirectories:function () {
        // create /proc/self/fd which allows /proc/self/fd/6 => readlink gives the name of the stream for fd 6 (see test_unistd_ttyname)
        FS.mkdir('/proc');
        FS.mkdir('/proc/self');
        FS.mkdir('/proc/self/fd');
        FS.mount({
          mount: function() {
            var node = FS.createNode('/proc/self', 'fd', 16384 | 0777, 73);
            node.node_ops = {
              lookup: function(parent, name) {
                var fd = +name;
                var stream = FS.getStream(fd);
                if (!stream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
                var ret = {
                  parent: null,
                  mount: { mountpoint: 'fake' },
                  node_ops: { readlink: function() { return stream.path } }
                };
                ret.parent = ret; // make it look like a simple root node
                return ret;
              }
            };
            return node;
          }
        }, {}, '/proc/self/fd');
      },createStandardStreams:function () {
        // TODO deprecate the old functionality of a single
        // input / output callback and that utilizes FS.createDevice
        // and instead require a unique set of stream ops
  
        // by default, we symlink the standard streams to the
        // default tty devices. however, if the standard streams
        // have been overwritten we create a unique device for
        // them instead.
        if (Module['stdin']) {
          FS.createDevice('/dev', 'stdin', Module['stdin']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdin');
        }
        if (Module['stdout']) {
          FS.createDevice('/dev', 'stdout', null, Module['stdout']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdout');
        }
        if (Module['stderr']) {
          FS.createDevice('/dev', 'stderr', null, Module['stderr']);
        } else {
          FS.symlink('/dev/tty1', '/dev/stderr');
        }
  
        // open default streams for the stdin, stdout and stderr devices
        var stdin = FS.open('/dev/stdin', 'r');
        assert(stdin.fd === 0, 'invalid handle for stdin (' + stdin.fd + ')');
  
        var stdout = FS.open('/dev/stdout', 'w');
        assert(stdout.fd === 1, 'invalid handle for stdout (' + stdout.fd + ')');
  
        var stderr = FS.open('/dev/stderr', 'w');
        assert(stderr.fd === 2, 'invalid handle for stderr (' + stderr.fd + ')');
      },ensureErrnoError:function () {
        if (FS.ErrnoError) return;
        FS.ErrnoError = function ErrnoError(errno, node) {
          //Module.printErr(stackTrace()); // useful for debugging
          this.node = node;
          this.setErrno = function(errno) {
            this.errno = errno;
            for (var key in ERRNO_CODES) {
              if (ERRNO_CODES[key] === errno) {
                this.code = key;
                break;
              }
            }
          };
          this.setErrno(errno);
          this.message = ERRNO_MESSAGES[errno];
          if (this.stack) this.stack = demangleAll(this.stack);
        };
        FS.ErrnoError.prototype = new Error();
        FS.ErrnoError.prototype.constructor = FS.ErrnoError;
        // Some errors may happen quite a bit, to avoid overhead we reuse them (and suffer a lack of stack info)
        [ERRNO_CODES.ENOENT].forEach(function(code) {
          FS.genericErrors[code] = new FS.ErrnoError(code);
          FS.genericErrors[code].stack = '<generic error, no stack>';
        });
      },staticInit:function () {
        FS.ensureErrnoError();
  
        FS.nameTable = new Array(4096);
  
        FS.mount(MEMFS, {}, '/');
  
        FS.createDefaultDirectories();
        FS.createDefaultDevices();
        FS.createSpecialDirectories();
  
        FS.filesystems = {
          'MEMFS': MEMFS,
          'IDBFS': IDBFS,
          'NODEFS': NODEFS,
          'WORKERFS': WORKERFS,
        };
      },init:function (input, output, error) {
        assert(!FS.init.initialized, 'FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)');
        FS.init.initialized = true;
  
        FS.ensureErrnoError();
  
        // Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here
        Module['stdin'] = input || Module['stdin'];
        Module['stdout'] = output || Module['stdout'];
        Module['stderr'] = error || Module['stderr'];
  
        FS.createStandardStreams();
      },quit:function () {
        FS.init.initialized = false;
        // force-flush all streams, so we get musl std streams printed out
        var fflush = Module['_fflush'];
        if (fflush) fflush(0);
        // close all of our streams
        for (var i = 0; i < FS.streams.length; i++) {
          var stream = FS.streams[i];
          if (!stream) {
            continue;
          }
          FS.close(stream);
        }
      },getMode:function (canRead, canWrite) {
        var mode = 0;
        if (canRead) mode |= 292 | 73;
        if (canWrite) mode |= 146;
        return mode;
      },joinPath:function (parts, forceRelative) {
        var path = PATH.join.apply(null, parts);
        if (forceRelative && path[0] == '/') path = path.substr(1);
        return path;
      },absolutePath:function (relative, base) {
        return PATH.resolve(base, relative);
      },standardizePath:function (path) {
        return PATH.normalize(path);
      },findObject:function (path, dontResolveLastLink) {
        var ret = FS.analyzePath(path, dontResolveLastLink);
        if (ret.exists) {
          return ret.object;
        } else {
          ___setErrNo(ret.error);
          return null;
        }
      },analyzePath:function (path, dontResolveLastLink) {
        // operate from within the context of the symlink's target
        try {
          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          path = lookup.path;
        } catch (e) {
        }
        var ret = {
          isRoot: false, exists: false, error: 0, name: null, path: null, object: null,
          parentExists: false, parentPath: null, parentObject: null
        };
        try {
          var lookup = FS.lookupPath(path, { parent: true });
          ret.parentExists = true;
          ret.parentPath = lookup.path;
          ret.parentObject = lookup.node;
          ret.name = PATH.basename(path);
          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          ret.exists = true;
          ret.path = lookup.path;
          ret.object = lookup.node;
          ret.name = lookup.node.name;
          ret.isRoot = lookup.path === '/';
        } catch (e) {
          ret.error = e.errno;
        };
        return ret;
      },createFolder:function (parent, name, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.mkdir(path, mode);
      },createPath:function (parent, path, canRead, canWrite) {
        parent = typeof parent === 'string' ? parent : FS.getPath(parent);
        var parts = path.split('/').reverse();
        while (parts.length) {
          var part = parts.pop();
          if (!part) continue;
          var current = PATH.join2(parent, part);
          try {
            FS.mkdir(current);
          } catch (e) {
            // ignore EEXIST
          }
          parent = current;
        }
        return current;
      },createFile:function (parent, name, properties, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.create(path, mode);
      },createDataFile:function (parent, name, data, canRead, canWrite, canOwn) {
        var path = name ? PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name) : parent;
        var mode = FS.getMode(canRead, canWrite);
        var node = FS.create(path, mode);
        if (data) {
          if (typeof data === 'string') {
            var arr = new Array(data.length);
            for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);
            data = arr;
          }
          // make sure we can write to the file
          FS.chmod(node, mode | 146);
          var stream = FS.open(node, 'w');
          FS.write(stream, data, 0, data.length, 0, canOwn);
          FS.close(stream);
          FS.chmod(node, mode);
        }
        return node;
      },createDevice:function (parent, name, input, output) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(!!input, !!output);
        if (!FS.createDevice.major) FS.createDevice.major = 64;
        var dev = FS.makedev(FS.createDevice.major++, 0);
        // Create a fake device that a set of stream ops to emulate
        // the old behavior.
        FS.registerDevice(dev, {
          open: function(stream) {
            stream.seekable = false;
          },
          close: function(stream) {
            // flush any pending line data
            if (output && output.buffer && output.buffer.length) {
              output(10);
            }
          },
          read: function(stream, buffer, offset, length, pos /* ignored */) {
            var bytesRead = 0;
            for (var i = 0; i < length; i++) {
              var result;
              try {
                result = input();
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
              if (result === undefined && bytesRead === 0) {
                throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
              }
              if (result === null || result === undefined) break;
              bytesRead++;
              buffer[offset+i] = result;
            }
            if (bytesRead) {
              stream.node.timestamp = Date.now();
            }
            return bytesRead;
          },
          write: function(stream, buffer, offset, length, pos) {
            for (var i = 0; i < length; i++) {
              try {
                output(buffer[offset+i]);
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
            }
            if (length) {
              stream.node.timestamp = Date.now();
            }
            return i;
          }
        });
        return FS.mkdev(path, mode, dev);
      },createLink:function (parent, name, target, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        return FS.symlink(target, path);
      },forceLoadFile:function (obj) {
        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;
        var success = true;
        if (typeof XMLHttpRequest !== 'undefined') {
          throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");
        } else if (Module['read']) {
          // Command-line.
          try {
            // WARNING: Can't read binary files in V8's d8 or tracemonkey's js, as
            //          read() will try to parse UTF8.
            obj.contents = intArrayFromString(Module['read'](obj.url), true);
            obj.usedBytes = obj.contents.length;
          } catch (e) {
            success = false;
          }
        } else {
          throw new Error('Cannot load without read() or XMLHttpRequest.');
        }
        if (!success) ___setErrNo(ERRNO_CODES.EIO);
        return success;
      },createLazyFile:function (parent, name, url, canRead, canWrite) {
        // Lazy chunked Uint8Array (implements get and length from Uint8Array). Actual getting is abstracted away for eventual reuse.
        function LazyUint8Array() {
          this.lengthKnown = false;
          this.chunks = []; // Loaded chunks. Index is the chunk number
        }
        LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {
          if (idx > this.length-1 || idx < 0) {
            return undefined;
          }
          var chunkOffset = idx % this.chunkSize;
          var chunkNum = (idx / this.chunkSize)|0;
          return this.getter(chunkNum)[chunkOffset];
        }
        LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {
          this.getter = getter;
        }
        LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {
          // Find length
          var xhr = new XMLHttpRequest();
          xhr.open('HEAD', url, false);
          xhr.send(null);
          if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
          var datalength = Number(xhr.getResponseHeader("Content-length"));
          var header;
          var hasByteServing = (header = xhr.getResponseHeader("Accept-Ranges")) && header === "bytes";
          var chunkSize = 1024*1024; // Chunk size in bytes
  
          if (!hasByteServing) chunkSize = datalength;
  
          // Function to get a range from the remote URL.
          var doXHR = (function(from, to) {
            if (from > to) throw new Error("invalid range (" + from + ", " + to + ") or no bytes requested!");
            if (to > datalength-1) throw new Error("only " + datalength + " bytes available! programmer error!");
  
            // TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.
            var xhr = new XMLHttpRequest();
            xhr.open('GET', url, false);
            if (datalength !== chunkSize) xhr.setRequestHeader("Range", "bytes=" + from + "-" + to);
  
            // Some hints to the browser that we want binary data.
            if (typeof Uint8Array != 'undefined') xhr.responseType = 'arraybuffer';
            if (xhr.overrideMimeType) {
              xhr.overrideMimeType('text/plain; charset=x-user-defined');
            }
  
            xhr.send(null);
            if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
            if (xhr.response !== undefined) {
              return new Uint8Array(xhr.response || []);
            } else {
              return intArrayFromString(xhr.responseText || '', true);
            }
          });
          var lazyArray = this;
          lazyArray.setDataGetter(function(chunkNum) {
            var start = chunkNum * chunkSize;
            var end = (chunkNum+1) * chunkSize - 1; // including this byte
            end = Math.min(end, datalength-1); // if datalength-1 is selected, this is the last block
            if (typeof(lazyArray.chunks[chunkNum]) === "undefined") {
              lazyArray.chunks[chunkNum] = doXHR(start, end);
            }
            if (typeof(lazyArray.chunks[chunkNum]) === "undefined") throw new Error("doXHR failed!");
            return lazyArray.chunks[chunkNum];
          });
  
          this._length = datalength;
          this._chunkSize = chunkSize;
          this.lengthKnown = true;
        }
        if (typeof XMLHttpRequest !== 'undefined') {
          if (!ENVIRONMENT_IS_WORKER) throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';
          var lazyArray = new LazyUint8Array();
          Object.defineProperty(lazyArray, "length", {
              get: function() {
                  if(!this.lengthKnown) {
                      this.cacheLength();
                  }
                  return this._length;
              }
          });
          Object.defineProperty(lazyArray, "chunkSize", {
              get: function() {
                  if(!this.lengthKnown) {
                      this.cacheLength();
                  }
                  return this._chunkSize;
              }
          });
  
          var properties = { isDevice: false, contents: lazyArray };
        } else {
          var properties = { isDevice: false, url: url };
        }
  
        var node = FS.createFile(parent, name, properties, canRead, canWrite);
        // This is a total hack, but I want to get this lazy file code out of the
        // core of MEMFS. If we want to keep this lazy file concept I feel it should
        // be its own thin LAZYFS proxying calls to MEMFS.
        if (properties.contents) {
          node.contents = properties.contents;
        } else if (properties.url) {
          node.contents = null;
          node.url = properties.url;
        }
        // Add a function that defers querying the file size until it is asked the first time.
        Object.defineProperty(node, "usedBytes", {
            get: function() { return this.contents.length; }
        });
        // override each stream op with one that tries to force load the lazy file first
        var stream_ops = {};
        var keys = Object.keys(node.stream_ops);
        keys.forEach(function(key) {
          var fn = node.stream_ops[key];
          stream_ops[key] = function forceLoadLazyFile() {
            if (!FS.forceLoadFile(node)) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            return fn.apply(null, arguments);
          };
        });
        // use a custom read function
        stream_ops.read = function stream_ops_read(stream, buffer, offset, length, position) {
          if (!FS.forceLoadFile(node)) {
            throw new FS.ErrnoError(ERRNO_CODES.EIO);
          }
          var contents = stream.node.contents;
          if (position >= contents.length)
            return 0;
          var size = Math.min(contents.length - position, length);
          assert(size >= 0);
          if (contents.slice) { // normal array
            for (var i = 0; i < size; i++) {
              buffer[offset + i] = contents[position + i];
            }
          } else {
            for (var i = 0; i < size; i++) { // LazyUint8Array from sync binary XHR
              buffer[offset + i] = contents.get(position + i);
            }
          }
          return size;
        };
        node.stream_ops = stream_ops;
        return node;
      },createPreloadedFile:function (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) {
        Browser.init();
        // TODO we should allow people to just pass in a complete filename instead
        // of parent and name being that we just join them anyways
        var fullname = name ? PATH.resolve(PATH.join2(parent, name)) : parent;
        var dep = getUniqueRunDependency('cp ' + fullname); // might have several active requests for the same fullname
        function processData(byteArray) {
          function finish(byteArray) {
            if (preFinish) preFinish();
            if (!dontCreateFile) {
              FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);
            }
            if (onload) onload();
            removeRunDependency(dep);
          }
          var handled = false;
          Module['preloadPlugins'].forEach(function(plugin) {
            if (handled) return;
            if (plugin['canHandle'](fullname)) {
              plugin['handle'](byteArray, fullname, finish, function() {
                if (onerror) onerror();
                removeRunDependency(dep);
              });
              handled = true;
            }
          });
          if (!handled) finish(byteArray);
        }
        addRunDependency(dep);
        if (typeof url == 'string') {
          Browser.asyncLoad(url, function(byteArray) {
            processData(byteArray);
          }, onerror);
        } else {
          processData(url);
        }
      },indexedDB:function () {
        return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
      },DB_NAME:function () {
        return 'EM_FS_' + window.location.pathname;
      },DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {
          console.log('creating db');
          var db = openRequest.result;
          db.createObjectStore(FS.DB_STORE_NAME);
        };
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          var transaction = db.transaction([FS.DB_STORE_NAME], 'readwrite');
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var putRequest = files.put(FS.analyzePath(path).object.contents, path);
            putRequest.onsuccess = function putRequest_onsuccess() { ok++; if (ok + fail == total) finish() };
            putRequest.onerror = function putRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      },loadFilesFromDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = onerror; // no database to load from
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          try {
            var transaction = db.transaction([FS.DB_STORE_NAME], 'readonly');
          } catch(e) {
            onerror(e);
            return;
          }
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var getRequest = files.get(path);
            getRequest.onsuccess = function getRequest_onsuccess() {
              if (FS.analyzePath(path).exists) {
                FS.unlink(path);
              }
              FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);
              ok++;
              if (ok + fail == total) finish();
            };
            getRequest.onerror = function getRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      }};var PATH={splitPath:function (filename) {
        var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
        return splitPathRe.exec(filename).slice(1);
      },normalizeArray:function (parts, allowAboveRoot) {
        // if the path tries to go above the root, `up` ends up > 0
        var up = 0;
        for (var i = parts.length - 1; i >= 0; i--) {
          var last = parts[i];
          if (last === '.') {
            parts.splice(i, 1);
          } else if (last === '..') {
            parts.splice(i, 1);
            up++;
          } else if (up) {
            parts.splice(i, 1);
            up--;
          }
        }
        // if the path is allowed to go above the root, restore leading ..s
        if (allowAboveRoot) {
          for (; up--; up) {
            parts.unshift('..');
          }
        }
        return parts;
      },normalize:function (path) {
        var isAbsolute = path.charAt(0) === '/',
            trailingSlash = path.substr(-1) === '/';
        // Normalize the path
        path = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), !isAbsolute).join('/');
        if (!path && !isAbsolute) {
          path = '.';
        }
        if (path && trailingSlash) {
          path += '/';
        }
        return (isAbsolute ? '/' : '') + path;
      },dirname:function (path) {
        var result = PATH.splitPath(path),
            root = result[0],
            dir = result[1];
        if (!root && !dir) {
          // No dirname whatsoever
          return '.';
        }
        if (dir) {
          // It has a dirname, strip trailing slash
          dir = dir.substr(0, dir.length - 1);
        }
        return root + dir;
      },basename:function (path) {
        // EMSCRIPTEN return '/'' for '/', not an empty string
        if (path === '/') return '/';
        var lastSlash = path.lastIndexOf('/');
        if (lastSlash === -1) return path;
        return path.substr(lastSlash+1);
      },extname:function (path) {
        return PATH.splitPath(path)[3];
      },join:function () {
        var paths = Array.prototype.slice.call(arguments, 0);
        return PATH.normalize(paths.join('/'));
      },join2:function (l, r) {
        return PATH.normalize(l + '/' + r);
      },resolve:function () {
        var resolvedPath = '',
          resolvedAbsolute = false;
        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
          var path = (i >= 0) ? arguments[i] : FS.cwd();
          // Skip empty and invalid entries
          if (typeof path !== 'string') {
            throw new TypeError('Arguments to path.resolve must be strings');
          } else if (!path) {
            return ''; // an invalid portion invalidates the whole thing
          }
          resolvedPath = path + '/' + resolvedPath;
          resolvedAbsolute = path.charAt(0) === '/';
        }
        // At this point the path should be resolved to a full absolute path, but
        // handle relative paths to be safe (might happen when process.cwd() fails)
        resolvedPath = PATH.normalizeArray(resolvedPath.split('/').filter(function(p) {
          return !!p;
        }), !resolvedAbsolute).join('/');
        return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
      },relative:function (from, to) {
        from = PATH.resolve(from).substr(1);
        to = PATH.resolve(to).substr(1);
        function trim(arr) {
          var start = 0;
          for (; start < arr.length; start++) {
            if (arr[start] !== '') break;
          }
          var end = arr.length - 1;
          for (; end >= 0; end--) {
            if (arr[end] !== '') break;
          }
          if (start > end) return [];
          return arr.slice(start, end - start + 1);
        }
        var fromParts = trim(from.split('/'));
        var toParts = trim(to.split('/'));
        var length = Math.min(fromParts.length, toParts.length);
        var samePartsLength = length;
        for (var i = 0; i < length; i++) {
          if (fromParts[i] !== toParts[i]) {
            samePartsLength = i;
            break;
          }
        }
        var outputParts = [];
        for (var i = samePartsLength; i < fromParts.length; i++) {
          outputParts.push('..');
        }
        outputParts = outputParts.concat(toParts.slice(samePartsLength));
        return outputParts.join('/');
      }};
  
  
  function _emscripten_set_main_loop_timing(mode, value) {
      Browser.mainLoop.timingMode = mode;
      Browser.mainLoop.timingValue = value;
  
      if (!Browser.mainLoop.func) {
        console.error('emscripten_set_main_loop_timing: Cannot set timing mode for main loop since a main loop does not exist! Call emscripten_set_main_loop first to set one up.');
        return 1; // Return non-zero on failure, can't set timing mode when there is no main loop.
      }
  
      if (mode == 0 /*EM_TIMING_SETTIMEOUT*/) {
        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler_setTimeout() {
          setTimeout(Browser.mainLoop.runner, value); // doing this each time means that on exception, we stop
        };
        Browser.mainLoop.method = 'timeout';
      } else if (mode == 1 /*EM_TIMING_RAF*/) {
        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler_rAF() {
          Browser.requestAnimationFrame(Browser.mainLoop.runner);
        };
        Browser.mainLoop.method = 'rAF';
      } else if (mode == 2 /*EM_TIMING_SETIMMEDIATE*/) {
        if (!window['setImmediate']) {
          // Emulate setImmediate. (note: not a complete polyfill, we don't emulate clearImmediate() to keep code size to minimum, since not needed)
          var setImmediates = [];
          var emscriptenMainLoopMessageId = '__emcc';
          function Browser_setImmediate_messageHandler(event) {
            if (event.source === window && event.data === emscriptenMainLoopMessageId) {
              event.stopPropagation();
              setImmediates.shift()();
            }
          }
          window.addEventListener("message", Browser_setImmediate_messageHandler, true);
          window['setImmediate'] = function Browser_emulated_setImmediate(func) {
            setImmediates.push(func);
            window.postMessage(emscriptenMainLoopMessageId, "*");
          }
        }
        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler_setImmediate() {
          window['setImmediate'](Browser.mainLoop.runner);
        };
        Browser.mainLoop.method = 'immediate';
      }
      return 0;
    }function _emscripten_set_main_loop(func, fps, simulateInfiniteLoop, arg, noSetTiming) {
      Module['noExitRuntime'] = true;
  
      assert(!Browser.mainLoop.func, 'emscripten_set_main_loop: there can only be one main loop function at once: call emscripten_cancel_main_loop to cancel the previous one before setting a new one with different parameters.');
  
      Browser.mainLoop.func = func;
      Browser.mainLoop.arg = arg;
  
      var thisMainLoopId = Browser.mainLoop.currentlyRunningMainloop;
  
      Browser.mainLoop.runner = function Browser_mainLoop_runner() {
        if (ABORT) return;
        if (Browser.mainLoop.queue.length > 0) {
          var start = Date.now();
          var blocker = Browser.mainLoop.queue.shift();
          blocker.func(blocker.arg);
          if (Browser.mainLoop.remainingBlockers) {
            var remaining = Browser.mainLoop.remainingBlockers;
            var next = remaining%1 == 0 ? remaining-1 : Math.floor(remaining);
            if (blocker.counted) {
              Browser.mainLoop.remainingBlockers = next;
            } else {
              // not counted, but move the progress along a tiny bit
              next = next + 0.5; // do not steal all the next one's progress
              Browser.mainLoop.remainingBlockers = (8*remaining + next)/9;
            }
          }
          console.log('main loop blocker "' + blocker.name + '" took ' + (Date.now() - start) + ' ms'); //, left: ' + Browser.mainLoop.remainingBlockers);
          Browser.mainLoop.updateStatus();
          setTimeout(Browser.mainLoop.runner, 0);
          return;
        }
  
        // catch pauses from non-main loop sources
        if (thisMainLoopId < Browser.mainLoop.currentlyRunningMainloop) return;
  
        // Implement very basic swap interval control
        Browser.mainLoop.currentFrameNumber = Browser.mainLoop.currentFrameNumber + 1 | 0;
        if (Browser.mainLoop.timingMode == 1/*EM_TIMING_RAF*/ && Browser.mainLoop.timingValue > 1 && Browser.mainLoop.currentFrameNumber % Browser.mainLoop.timingValue != 0) {
          // Not the scheduled time to render this frame - skip.
          Browser.mainLoop.scheduler();
          return;
        }
  
        // Signal GL rendering layer that processing of a new frame is about to start. This helps it optimize
        // VBO double-buffering and reduce GPU stalls.
  
        if (Browser.mainLoop.method === 'timeout' && Module.ctx) {
          Module.printErr('Looks like you are rendering without using requestAnimationFrame for the main loop. You should use 0 for the frame rate in emscripten_set_main_loop in order to use requestAnimationFrame, as that can greatly improve your frame rates!');
          Browser.mainLoop.method = ''; // just warn once per call to set main loop
        }
  
        Browser.mainLoop.runIter(function() {
          if (typeof arg !== 'undefined') {
            Runtime.dynCall('vi', func, [arg]);
          } else {
            Runtime.dynCall('v', func);
          }
        });
  
        // catch pauses from the main loop itself
        if (thisMainLoopId < Browser.mainLoop.currentlyRunningMainloop) return;
  
        // Queue new audio data. This is important to be right after the main loop invocation, so that we will immediately be able
        // to queue the newest produced audio samples.
        // TODO: Consider adding pre- and post- rAF callbacks so that GL.newRenderingFrameStarted() and SDL.audio.queueNewAudioData()
        //       do not need to be hardcoded into this function, but can be more generic.
        if (typeof SDL === 'object' && SDL.audio && SDL.audio.queueNewAudioData) SDL.audio.queueNewAudioData();
  
        Browser.mainLoop.scheduler();
      }
  
      if (!noSetTiming) {
        if (fps && fps > 0) _emscripten_set_main_loop_timing(0/*EM_TIMING_SETTIMEOUT*/, 1000.0 / fps);
        else _emscripten_set_main_loop_timing(1/*EM_TIMING_RAF*/, 1); // Do rAF by rendering each frame (no decimating)
  
        Browser.mainLoop.scheduler();
      }
  
      if (simulateInfiniteLoop) {
        throw 'SimulateInfiniteLoop';
      }
    }var Browser={mainLoop:{scheduler:null,method:"",currentlyRunningMainloop:0,func:null,arg:0,timingMode:0,timingValue:0,currentFrameNumber:0,queue:[],pause:function () {
          Browser.mainLoop.scheduler = null;
          Browser.mainLoop.currentlyRunningMainloop++; // Incrementing this signals the previous main loop that it's now become old, and it must return.
        },resume:function () {
          Browser.mainLoop.currentlyRunningMainloop++;
          var timingMode = Browser.mainLoop.timingMode;
          var timingValue = Browser.mainLoop.timingValue;
          var func = Browser.mainLoop.func;
          Browser.mainLoop.func = null;
          _emscripten_set_main_loop(func, 0, false, Browser.mainLoop.arg, true /* do not set timing and call scheduler, we will do it on the next lines */);
          _emscripten_set_main_loop_timing(timingMode, timingValue);
          Browser.mainLoop.scheduler();
        },updateStatus:function () {
          if (Module['setStatus']) {
            var message = Module['statusMessage'] || 'Please wait...';
            var remaining = Browser.mainLoop.remainingBlockers;
            var expected = Browser.mainLoop.expectedBlockers;
            if (remaining) {
              if (remaining < expected) {
                Module['setStatus'](message + ' (' + (expected - remaining) + '/' + expected + ')');
              } else {
                Module['setStatus'](message);
              }
            } else {
              Module['setStatus']('');
            }
          }
        },runIter:function (func) {
          if (ABORT) return;
          if (Module['preMainLoop']) {
            var preRet = Module['preMainLoop']();
            if (preRet === false) {
              return; // |return false| skips a frame
            }
          }
          try {
            func();
          } catch (e) {
            if (e instanceof ExitStatus) {
              return;
            } else {
              if (e && typeof e === 'object' && e.stack) Module.printErr('exception thrown: ' + [e, e.stack]);
              throw e;
            }
          }
          if (Module['postMainLoop']) Module['postMainLoop']();
        }},isFullScreen:false,pointerLock:false,moduleContextCreatedCallbacks:[],workers:[],init:function () {
        if (!Module["preloadPlugins"]) Module["preloadPlugins"] = []; // needs to exist even in workers
  
        if (Browser.initted) return;
        Browser.initted = true;
  
        try {
          new Blob();
          Browser.hasBlobConstructor = true;
        } catch(e) {
          Browser.hasBlobConstructor = false;
          console.log("warning: no blob constructor, cannot create blobs with mimetypes");
        }
        Browser.BlobBuilder = typeof MozBlobBuilder != "undefined" ? MozBlobBuilder : (typeof WebKitBlobBuilder != "undefined" ? WebKitBlobBuilder : (!Browser.hasBlobConstructor ? console.log("warning: no BlobBuilder") : null));
        Browser.URLObject = typeof window != "undefined" ? (window.URL ? window.URL : window.webkitURL) : undefined;
        if (!Module.noImageDecoding && typeof Browser.URLObject === 'undefined') {
          console.log("warning: Browser does not support creating object URLs. Built-in browser image decoding will not be available.");
          Module.noImageDecoding = true;
        }
  
        // Support for plugins that can process preloaded files. You can add more of these to
        // your app by creating and appending to Module.preloadPlugins.
        //
        // Each plugin is asked if it can handle a file based on the file's name. If it can,
        // it is given the file's raw data. When it is done, it calls a callback with the file's
        // (possibly modified) data. For example, a plugin might decompress a file, or it
        // might create some side data structure for use later (like an Image element, etc.).
  
        var imagePlugin = {};
        imagePlugin['canHandle'] = function imagePlugin_canHandle(name) {
          return !Module.noImageDecoding && /\.(jpg|jpeg|png|bmp)$/i.test(name);
        };
        imagePlugin['handle'] = function imagePlugin_handle(byteArray, name, onload, onerror) {
          var b = null;
          if (Browser.hasBlobConstructor) {
            try {
              b = new Blob([byteArray], { type: Browser.getMimetype(name) });
              if (b.size !== byteArray.length) { // Safari bug #118630
                // Safari's Blob can only take an ArrayBuffer
                b = new Blob([(new Uint8Array(byteArray)).buffer], { type: Browser.getMimetype(name) });
              }
            } catch(e) {
              Runtime.warnOnce('Blob constructor present but fails: ' + e + '; falling back to blob builder');
            }
          }
          if (!b) {
            var bb = new Browser.BlobBuilder();
            bb.append((new Uint8Array(byteArray)).buffer); // we need to pass a buffer, and must copy the array to get the right data range
            b = bb.getBlob();
          }
          var url = Browser.URLObject.createObjectURL(b);
          assert(typeof url == 'string', 'createObjectURL must return a url as a string');
          var img = new Image();
          img.onload = function img_onload() {
            assert(img.complete, 'Image ' + name + ' could not be decoded');
            var canvas = document.createElement('canvas');
            canvas.width = img.width;
            canvas.height = img.height;
            var ctx = canvas.getContext('2d');
            ctx.drawImage(img, 0, 0);
            Module["preloadedImages"][name] = canvas;
            Browser.URLObject.revokeObjectURL(url);
            if (onload) onload(byteArray);
          };
          img.onerror = function img_onerror(event) {
            console.log('Image ' + url + ' could not be decoded');
            if (onerror) onerror();
          };
          img.src = url;
        };
        Module['preloadPlugins'].push(imagePlugin);
  
        var audioPlugin = {};
        audioPlugin['canHandle'] = function audioPlugin_canHandle(name) {
          return !Module.noAudioDecoding && name.substr(-4) in { '.ogg': 1, '.wav': 1, '.mp3': 1 };
        };
        audioPlugin['handle'] = function audioPlugin_handle(byteArray, name, onload, onerror) {
          var done = false;
          function finish(audio) {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = audio;
            if (onload) onload(byteArray);
          }
          function fail() {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = new Audio(); // empty shim
            if (onerror) onerror();
          }
          if (Browser.hasBlobConstructor) {
            try {
              var b = new Blob([byteArray], { type: Browser.getMimetype(name) });
            } catch(e) {
              return fail();
            }
            var url = Browser.URLObject.createObjectURL(b); // XXX we never revoke this!
            assert(typeof url == 'string', 'createObjectURL must return a url as a string');
            var audio = new Audio();
            audio.addEventListener('canplaythrough', function() { finish(audio) }, false); // use addEventListener due to chromium bug 124926
            audio.onerror = function audio_onerror(event) {
              if (done) return;
              console.log('warning: browser could not fully decode audio ' + name + ', trying slower base64 approach');
              function encode64(data) {
                var BASE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
                var PAD = '=';
                var ret = '';
                var leftchar = 0;
                var leftbits = 0;
                for (var i = 0; i < data.length; i++) {
                  leftchar = (leftchar << 8) | data[i];
                  leftbits += 8;
                  while (leftbits >= 6) {
                    var curr = (leftchar >> (leftbits-6)) & 0x3f;
                    leftbits -= 6;
                    ret += BASE[curr];
                  }
                }
                if (leftbits == 2) {
                  ret += BASE[(leftchar&3) << 4];
                  ret += PAD + PAD;
                } else if (leftbits == 4) {
                  ret += BASE[(leftchar&0xf) << 2];
                  ret += PAD;
                }
                return ret;
              }
              audio.src = 'data:audio/x-' + name.substr(-3) + ';base64,' + encode64(byteArray);
              finish(audio); // we don't wait for confirmation this worked - but it's worth trying
            };
            audio.src = url;
            // workaround for chrome bug 124926 - we do not always get oncanplaythrough or onerror
            Browser.safeSetTimeout(function() {
              finish(audio); // try to use it even though it is not necessarily ready to play
            }, 10000);
          } else {
            return fail();
          }
        };
        Module['preloadPlugins'].push(audioPlugin);
  
        // Canvas event setup
  
        var canvas = Module['canvas'];
        function pointerLockChange() {
          Browser.pointerLock = document['pointerLockElement'] === canvas ||
                                document['mozPointerLockElement'] === canvas ||
                                document['webkitPointerLockElement'] === canvas ||
                                document['msPointerLockElement'] === canvas;
        }
        if (canvas) {
          // forced aspect ratio can be enabled by defining 'forcedAspectRatio' on Module
          // Module['forcedAspectRatio'] = 4 / 3;
          
          canvas.requestPointerLock = canvas['requestPointerLock'] ||
                                      canvas['mozRequestPointerLock'] ||
                                      canvas['webkitRequestPointerLock'] ||
                                      canvas['msRequestPointerLock'] ||
                                      function(){};
          canvas.exitPointerLock = document['exitPointerLock'] ||
                                   document['mozExitPointerLock'] ||
                                   document['webkitExitPointerLock'] ||
                                   document['msExitPointerLock'] ||
                                   function(){}; // no-op if function does not exist
          canvas.exitPointerLock = canvas.exitPointerLock.bind(document);
  
  
          document.addEventListener('pointerlockchange', pointerLockChange, false);
          document.addEventListener('mozpointerlockchange', pointerLockChange, false);
          document.addEventListener('webkitpointerlockchange', pointerLockChange, false);
          document.addEventListener('mspointerlockchange', pointerLockChange, false);
  
          if (Module['elementPointerLock']) {
            canvas.addEventListener("click", function(ev) {
              if (!Browser.pointerLock && canvas.requestPointerLock) {
                canvas.requestPointerLock();
                ev.preventDefault();
              }
            }, false);
          }
        }
      },createContext:function (canvas, useWebGL, setInModule, webGLContextAttributes) {
        if (useWebGL && Module.ctx && canvas == Module.canvas) return Module.ctx; // no need to recreate GL context if it's already been created for this canvas.
  
        var ctx;
        var contextHandle;
        if (useWebGL) {
          // For GLES2/desktop GL compatibility, adjust a few defaults to be different to WebGL defaults, so that they align better with the desktop defaults.
          var contextAttributes = {
            antialias: false,
            alpha: false
          };
  
          if (webGLContextAttributes) {
            for (var attribute in webGLContextAttributes) {
              contextAttributes[attribute] = webGLContextAttributes[attribute];
            }
          }
  
          contextHandle = GL.createContext(canvas, contextAttributes);
          if (contextHandle) {
            ctx = GL.getContext(contextHandle).GLctx;
          }
          // Set the background of the WebGL canvas to black
          canvas.style.backgroundColor = "black";
        } else {
          ctx = canvas.getContext('2d');
        }
  
        if (!ctx) return null;
  
        if (setInModule) {
          if (!useWebGL) assert(typeof GLctx === 'undefined', 'cannot set in module if GLctx is used, but we are a non-GL context that would replace it');
  
          Module.ctx = ctx;
          if (useWebGL) GL.makeContextCurrent(contextHandle);
          Module.useWebGL = useWebGL;
          Browser.moduleContextCreatedCallbacks.forEach(function(callback) { callback() });
          Browser.init();
        }
        return ctx;
      },destroyContext:function (canvas, useWebGL, setInModule) {},fullScreenHandlersInstalled:false,lockPointer:undefined,resizeCanvas:undefined,requestFullScreen:function (lockPointer, resizeCanvas, vrDevice) {
        Browser.lockPointer = lockPointer;
        Browser.resizeCanvas = resizeCanvas;
        Browser.vrDevice = vrDevice;
        if (typeof Browser.lockPointer === 'undefined') Browser.lockPointer = true;
        if (typeof Browser.resizeCanvas === 'undefined') Browser.resizeCanvas = false;
        if (typeof Browser.vrDevice === 'undefined') Browser.vrDevice = null;
  
        var canvas = Module['canvas'];
        function fullScreenChange() {
          Browser.isFullScreen = false;
          var canvasContainer = canvas.parentNode;
          if ((document['webkitFullScreenElement'] || document['webkitFullscreenElement'] ||
               document['mozFullScreenElement'] || document['mozFullscreenElement'] ||
               document['fullScreenElement'] || document['fullscreenElement'] ||
               document['msFullScreenElement'] || document['msFullscreenElement'] ||
               document['webkitCurrentFullScreenElement']) === canvasContainer) {
            canvas.cancelFullScreen = document['cancelFullScreen'] ||
                                      document['mozCancelFullScreen'] ||
                                      document['webkitCancelFullScreen'] ||
                                      document['msExitFullscreen'] ||
                                      document['exitFullscreen'] ||
                                      function() {};
            canvas.cancelFullScreen = canvas.cancelFullScreen.bind(document);
            if (Browser.lockPointer) canvas.requestPointerLock();
            Browser.isFullScreen = true;
            if (Browser.resizeCanvas) Browser.setFullScreenCanvasSize();
          } else {
            
            // remove the full screen specific parent of the canvas again to restore the HTML structure from before going full screen
            canvasContainer.parentNode.insertBefore(canvas, canvasContainer);
            canvasContainer.parentNode.removeChild(canvasContainer);
            
            if (Browser.resizeCanvas) Browser.setWindowedCanvasSize();
          }
          if (Module['onFullScreen']) Module['onFullScreen'](Browser.isFullScreen);
          Browser.updateCanvasDimensions(canvas);
        }
  
        if (!Browser.fullScreenHandlersInstalled) {
          Browser.fullScreenHandlersInstalled = true;
          document.addEventListener('fullscreenchange', fullScreenChange, false);
          document.addEventListener('mozfullscreenchange', fullScreenChange, false);
          document.addEventListener('webkitfullscreenchange', fullScreenChange, false);
          document.addEventListener('MSFullscreenChange', fullScreenChange, false);
        }
  
        // create a new parent to ensure the canvas has no siblings. this allows browsers to optimize full screen performance when its parent is the full screen root
        var canvasContainer = document.createElement("div");
        canvas.parentNode.insertBefore(canvasContainer, canvas);
        canvasContainer.appendChild(canvas);
  
        // use parent of canvas as full screen root to allow aspect ratio correction (Firefox stretches the root to screen size)
        canvasContainer.requestFullScreen = canvasContainer['requestFullScreen'] ||
                                            canvasContainer['mozRequestFullScreen'] ||
                                            canvasContainer['msRequestFullscreen'] ||
                                           (canvasContainer['webkitRequestFullScreen'] ? function() { canvasContainer['webkitRequestFullScreen'](Element['ALLOW_KEYBOARD_INPUT']) } : null);
  
        if (vrDevice) {
          canvasContainer.requestFullScreen({ vrDisplay: vrDevice });
        } else {
          canvasContainer.requestFullScreen();
        }
      },nextRAF:0,fakeRequestAnimationFrame:function (func) {
        // try to keep 60fps between calls to here
        var now = Date.now();
        if (Browser.nextRAF === 0) {
          Browser.nextRAF = now + 1000/60;
        } else {
          while (now + 2 >= Browser.nextRAF) { // fudge a little, to avoid timer jitter causing us to do lots of delay:0
            Browser.nextRAF += 1000/60;
          }
        }
        var delay = Math.max(Browser.nextRAF - now, 0);
        setTimeout(func, delay);
      },requestAnimationFrame:function requestAnimationFrame(func) {
        if (typeof window === 'undefined') { // Provide fallback to setTimeout if window is undefined (e.g. in Node.js)
          Browser.fakeRequestAnimationFrame(func);
        } else {
          if (!window.requestAnimationFrame) {
            window.requestAnimationFrame = window['requestAnimationFrame'] ||
                                           window['mozRequestAnimationFrame'] ||
                                           window['webkitRequestAnimationFrame'] ||
                                           window['msRequestAnimationFrame'] ||
                                           window['oRequestAnimationFrame'] ||
                                           Browser.fakeRequestAnimationFrame;
          }
          window.requestAnimationFrame(func);
        }
      },safeCallback:function (func) {
        return function() {
          if (!ABORT) return func.apply(null, arguments);
        };
      },allowAsyncCallbacks:true,queuedAsyncCallbacks:[],pauseAsyncCallbacks:function () {
        Browser.allowAsyncCallbacks = false;
      },resumeAsyncCallbacks:function () { // marks future callbacks as ok to execute, and synchronously runs any remaining ones right now
        Browser.allowAsyncCallbacks = true;
        if (Browser.queuedAsyncCallbacks.length > 0) {
          var callbacks = Browser.queuedAsyncCallbacks;
          Browser.queuedAsyncCallbacks = [];
          callbacks.forEach(function(func) {
            func();
          });
        }
      },safeRequestAnimationFrame:function (func) {
        return Browser.requestAnimationFrame(function() {
          if (ABORT) return;
          if (Browser.allowAsyncCallbacks) {
            func();
          } else {
            Browser.queuedAsyncCallbacks.push(func);
          }
        });
      },safeSetTimeout:function (func, timeout) {
        Module['noExitRuntime'] = true;
        return setTimeout(function() {
          if (ABORT) return;
          if (Browser.allowAsyncCallbacks) {
            func();
          } else {
            Browser.queuedAsyncCallbacks.push(func);
          }
        }, timeout);
      },safeSetInterval:function (func, timeout) {
        Module['noExitRuntime'] = true;
        return setInterval(function() {
          if (ABORT) return;
          if (Browser.allowAsyncCallbacks) {
            func();
          } // drop it on the floor otherwise, next interval will kick in
        }, timeout);
      },getMimetype:function (name) {
        return {
          'jpg': 'image/jpeg',
          'jpeg': 'image/jpeg',
          'png': 'image/png',
          'bmp': 'image/bmp',
          'ogg': 'audio/ogg',
          'wav': 'audio/wav',
          'mp3': 'audio/mpeg'
        }[name.substr(name.lastIndexOf('.')+1)];
      },getUserMedia:function (func) {
        if(!window.getUserMedia) {
          window.getUserMedia = navigator['getUserMedia'] ||
                                navigator['mozGetUserMedia'];
        }
        window.getUserMedia(func);
      },getMovementX:function (event) {
        return event['movementX'] ||
               event['mozMovementX'] ||
               event['webkitMovementX'] ||
               0;
      },getMovementY:function (event) {
        return event['movementY'] ||
               event['mozMovementY'] ||
               event['webkitMovementY'] ||
               0;
      },getMouseWheelDelta:function (event) {
        var delta = 0;
        switch (event.type) {
          case 'DOMMouseScroll': 
            delta = event.detail;
            break;
          case 'mousewheel': 
            delta = event.wheelDelta;
            break;
          case 'wheel': 
            delta = event['deltaY'];
            break;
          default:
            throw 'unrecognized mouse wheel event: ' + event.type;
        }
        return delta;
      },mouseX:0,mouseY:0,mouseMovementX:0,mouseMovementY:0,touches:{},lastTouches:{},calculateMouseEvent:function (event) { // event should be mousemove, mousedown or mouseup
        if (Browser.pointerLock) {
          // When the pointer is locked, calculate the coordinates
          // based on the movement of the mouse.
          // Workaround for Firefox bug 764498
          if (event.type != 'mousemove' &&
              ('mozMovementX' in event)) {
            Browser.mouseMovementX = Browser.mouseMovementY = 0;
          } else {
            Browser.mouseMovementX = Browser.getMovementX(event);
            Browser.mouseMovementY = Browser.getMovementY(event);
          }
          
          // check if SDL is available
          if (typeof SDL != "undefined") {
          	Browser.mouseX = SDL.mouseX + Browser.mouseMovementX;
          	Browser.mouseY = SDL.mouseY + Browser.mouseMovementY;
          } else {
          	// just add the mouse delta to the current absolut mouse position
          	// FIXME: ideally this should be clamped against the canvas size and zero
          	Browser.mouseX += Browser.mouseMovementX;
          	Browser.mouseY += Browser.mouseMovementY;
          }        
        } else {
          // Otherwise, calculate the movement based on the changes
          // in the coordinates.
          var rect = Module["canvas"].getBoundingClientRect();
          var cw = Module["canvas"].width;
          var ch = Module["canvas"].height;
  
          // Neither .scrollX or .pageXOffset are defined in a spec, but
          // we prefer .scrollX because it is currently in a spec draft.
          // (see: http://www.w3.org/TR/2013/WD-cssom-view-20131217/)
          var scrollX = ((typeof window.scrollX !== 'undefined') ? window.scrollX : window.pageXOffset);
          var scrollY = ((typeof window.scrollY !== 'undefined') ? window.scrollY : window.pageYOffset);
          // If this assert lands, it's likely because the browser doesn't support scrollX or pageXOffset
          // and we have no viable fallback.
          assert((typeof scrollX !== 'undefined') && (typeof scrollY !== 'undefined'), 'Unable to retrieve scroll position, mouse positions likely broken.');
  
          if (event.type === 'touchstart' || event.type === 'touchend' || event.type === 'touchmove') {
            var touch = event.touch;
            if (touch === undefined) {
              return; // the "touch" property is only defined in SDL
  
            }
            var adjustedX = touch.pageX - (scrollX + rect.left);
            var adjustedY = touch.pageY - (scrollY + rect.top);
  
            adjustedX = adjustedX * (cw / rect.width);
            adjustedY = adjustedY * (ch / rect.height);
  
            var coords = { x: adjustedX, y: adjustedY };
            
            if (event.type === 'touchstart') {
              Browser.lastTouches[touch.identifier] = coords;
              Browser.touches[touch.identifier] = coords;
            } else if (event.type === 'touchend' || event.type === 'touchmove') {
              var last = Browser.touches[touch.identifier];
              if (!last) last = coords;
              Browser.lastTouches[touch.identifier] = last;
              Browser.touches[touch.identifier] = coords;
            } 
            return;
          }
  
          var x = event.pageX - (scrollX + rect.left);
          var y = event.pageY - (scrollY + rect.top);
  
          // the canvas might be CSS-scaled compared to its backbuffer;
          // SDL-using content will want mouse coordinates in terms
          // of backbuffer units.
          x = x * (cw / rect.width);
          y = y * (ch / rect.height);
  
          Browser.mouseMovementX = x - Browser.mouseX;
          Browser.mouseMovementY = y - Browser.mouseY;
          Browser.mouseX = x;
          Browser.mouseY = y;
        }
      },xhrLoad:function (url, onload, onerror) {
        var xhr = new XMLHttpRequest();
        xhr.open('GET', url, true);
        xhr.responseType = 'arraybuffer';
        xhr.onload = function xhr_onload() {
          if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0
            onload(xhr.response);
          } else {
            onerror();
          }
        };
        xhr.onerror = onerror;
        xhr.send(null);
      },asyncLoad:function (url, onload, onerror, noRunDep) {
        Browser.xhrLoad(url, function(arrayBuffer) {
          assert(arrayBuffer, 'Loading data file "' + url + '" failed (no arrayBuffer).');
          onload(new Uint8Array(arrayBuffer));
          if (!noRunDep) removeRunDependency('al ' + url);
        }, function(event) {
          if (onerror) {
            onerror();
          } else {
            throw 'Loading data file "' + url + '" failed.';
          }
        });
        if (!noRunDep) addRunDependency('al ' + url);
      },resizeListeners:[],updateResizeListeners:function () {
        var canvas = Module['canvas'];
        Browser.resizeListeners.forEach(function(listener) {
          listener(canvas.width, canvas.height);
        });
      },setCanvasSize:function (width, height, noUpdates) {
        var canvas = Module['canvas'];
        Browser.updateCanvasDimensions(canvas, width, height);
        if (!noUpdates) Browser.updateResizeListeners();
      },windowedWidth:0,windowedHeight:0,setFullScreenCanvasSize:function () {
        // check if SDL is available   
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags | 0x00800000; // set SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      },setWindowedCanvasSize:function () {
        // check if SDL is available       
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags & ~0x00800000; // clear SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      },updateCanvasDimensions:function (canvas, wNative, hNative) {
        if (wNative && hNative) {
          canvas.widthNative = wNative;
          canvas.heightNative = hNative;
        } else {
          wNative = canvas.widthNative;
          hNative = canvas.heightNative;
        }
        var w = wNative;
        var h = hNative;
        if (Module['forcedAspectRatio'] && Module['forcedAspectRatio'] > 0) {
          if (w/h < Module['forcedAspectRatio']) {
            w = Math.round(h * Module['forcedAspectRatio']);
          } else {
            h = Math.round(w / Module['forcedAspectRatio']);
          }
        }
        if (((document['webkitFullScreenElement'] || document['webkitFullscreenElement'] ||
             document['mozFullScreenElement'] || document['mozFullscreenElement'] ||
             document['fullScreenElement'] || document['fullscreenElement'] ||
             document['msFullScreenElement'] || document['msFullscreenElement'] ||
             document['webkitCurrentFullScreenElement']) === canvas.parentNode) && (typeof screen != 'undefined')) {
           var factor = Math.min(screen.width / w, screen.height / h);
           w = Math.round(w * factor);
           h = Math.round(h * factor);
        }
        if (Browser.resizeCanvas) {
          if (canvas.width  != w) canvas.width  = w;
          if (canvas.height != h) canvas.height = h;
          if (typeof canvas.style != 'undefined') {
            canvas.style.removeProperty( "width");
            canvas.style.removeProperty("height");
          }
        } else {
          if (canvas.width  != wNative) canvas.width  = wNative;
          if (canvas.height != hNative) canvas.height = hNative;
          if (typeof canvas.style != 'undefined') {
            if (w != wNative || h != hNative) {
              canvas.style.setProperty( "width", w + "px", "important");
              canvas.style.setProperty("height", h + "px", "important");
            } else {
              canvas.style.removeProperty( "width");
              canvas.style.removeProperty("height");
            }
          }
        }
      },wgetRequests:{},nextWgetRequestHandle:0,getNextWgetRequestHandle:function () {
        var handle = Browser.nextWgetRequestHandle;
        Browser.nextWgetRequestHandle++;
        return handle;
      }};

  var _emscripten_get_longjmp_result=true;

  
  var ___tm_formatted=allocate(44, "i8", ALLOC_STATIC);
  
  
  
  
  var _tzname=allocate(8, "i32*", ALLOC_STATIC);
  
  var _daylight=allocate(1, "i32*", ALLOC_STATIC);
  
  var _timezone=allocate(1, "i32*", ALLOC_STATIC);function _tzset() {
      // TODO: Use (malleable) environment variables instead of system settings.
      if (_tzset.called) return;
      _tzset.called = true;
  
      HEAP32[((_timezone)>>2)]=-(new Date()).getTimezoneOffset() * 60;
  
      var winter = new Date(2000, 0, 1);
      var summer = new Date(2000, 6, 1);
      HEAP32[((_daylight)>>2)]=Number(winter.getTimezoneOffset() != summer.getTimezoneOffset());
  
      function extractZone(date) {
        var match = date.toTimeString().match(/\(([A-Za-z ]+)\)$/);
        return match ? match[1] : "GMT";
      };
      var winterName = extractZone(winter);
      var summerName = extractZone(summer);
      var winterNamePtr = allocate(intArrayFromString(winterName), 'i8', ALLOC_NORMAL);
      var summerNamePtr = allocate(intArrayFromString(summerName), 'i8', ALLOC_NORMAL);
      if (summer.getTimezoneOffset() < winter.getTimezoneOffset()) {
        // Northern hemisphere
        HEAP32[((_tzname)>>2)]=winterNamePtr;
        HEAP32[(((_tzname)+(4))>>2)]=summerNamePtr;
      } else {
        HEAP32[((_tzname)>>2)]=summerNamePtr;
        HEAP32[(((_tzname)+(4))>>2)]=winterNamePtr;
      }
    }function _mktime(tmPtr) {
      _tzset();
      var date = new Date(HEAP32[(((tmPtr)+(20))>>2)] + 1900,
                          HEAP32[(((tmPtr)+(16))>>2)],
                          HEAP32[(((tmPtr)+(12))>>2)],
                          HEAP32[(((tmPtr)+(8))>>2)],
                          HEAP32[(((tmPtr)+(4))>>2)],
                          HEAP32[((tmPtr)>>2)],
                          0);
  
      // There's an ambiguous hour when the time goes back; the tm_isdst field is
      // used to disambiguate it.  Date() basically guesses, so we fix it up if it
      // guessed wrong, or fill in tm_isdst with the guess if it's -1.
      var dst = HEAP32[(((tmPtr)+(32))>>2)];
      var guessedOffset = date.getTimezoneOffset();
      var start = new Date(date.getFullYear(), 0, 1);
      var summerOffset = new Date(2000, 6, 1).getTimezoneOffset();
      var winterOffset = start.getTimezoneOffset();
      var dstOffset = Math.min(winterOffset, summerOffset); // DST is in December in South
      if (dst < 0) {
        HEAP32[(((tmPtr)+(32))>>2)]=Number(winterOffset != guessedOffset);
      } else if ((dst > 0) != (winterOffset != guessedOffset)) {
        var summerOffset = new Date(date.getFullYear(), 6, 1).getTimezoneOffset();
        var trueOffset = dst > 0 ? summerOffset : winterOffset;
        // Don't try setMinutes(date.getMinutes() + ...) -- it's messed up.
        date.setTime(date.getTime() + (trueOffset - guessedOffset)*60000);
      }
  
      HEAP32[(((tmPtr)+(24))>>2)]=date.getDay();
      var yday = ((date.getTime() - start.getTime()) / (1000 * 60 * 60 * 24))|0;
      HEAP32[(((tmPtr)+(28))>>2)]=yday;
  
      return (date.getTime() / 1000)|0;
    }function _asctime_r(tmPtr, buf) {
      var date = {
        tm_sec: HEAP32[((tmPtr)>>2)],
        tm_min: HEAP32[(((tmPtr)+(4))>>2)],
        tm_hour: HEAP32[(((tmPtr)+(8))>>2)],
        tm_mday: HEAP32[(((tmPtr)+(12))>>2)],
        tm_mon: HEAP32[(((tmPtr)+(16))>>2)],
        tm_year: HEAP32[(((tmPtr)+(20))>>2)],
        tm_wday: HEAP32[(((tmPtr)+(24))>>2)]
      };
      var days = [ "Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat" ];
      var months = [ "Jan", "Feb", "Mar", "Apr", "May", "Jun",
                     "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" ];
      var s = days[date.tm_wday] + ' ' + months[date.tm_mon] +
          (date.tm_mday < 10 ? '  ' : ' ') + date.tm_mday +
          (date.tm_hour < 10 ? ' 0' : ' ') + date.tm_hour +
          (date.tm_min < 10 ? ':0' : ':') + date.tm_min +
          (date.tm_sec < 10 ? ':0' : ':') + date.tm_sec +
          ' ' + (1900 + date.tm_year) + "\n";
      writeStringToMemory(s, buf);
      return buf;
    }function _asctime(tmPtr) {
      return _asctime_r(tmPtr, ___tm_formatted);
    }

  
  function __exit(status) {
      // void _exit(int status);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/exit.html
      Module['exit'](status);
    }function _exit(status) {
      __exit(status);
    }

  
  var SYSCALLS={DEFAULT_POLLMASK:5,mappings:{},umask:511,calculateAt:function (dirfd, path) {
        if (path[0] !== '/') {
          // relative path
          var dir;
          if (dirfd === -100) {
            dir = FS.cwd();
          } else {
            var dirstream = FS.getStream(dirfd);
            if (!dirstream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
            dir = dirstream.path;
          }
          path = PATH.join2(dir, path);
        }
        return path;
      },doStat:function (func, path, buf) {
        try {
          var stat = func(path);
        } catch (e) {
          if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {
            // an error occurred while trying to look up the path; we should just report ENOTDIR
            return -ERRNO_CODES.ENOTDIR;
          }
          throw e;
        }
        HEAP32[((buf)>>2)]=stat.dev;
        HEAP32[(((buf)+(4))>>2)]=0;
        HEAP32[(((buf)+(8))>>2)]=stat.ino;
        HEAP32[(((buf)+(12))>>2)]=stat.mode;
        HEAP32[(((buf)+(16))>>2)]=stat.nlink;
        HEAP32[(((buf)+(20))>>2)]=stat.uid;
        HEAP32[(((buf)+(24))>>2)]=stat.gid;
        HEAP32[(((buf)+(28))>>2)]=stat.rdev;
        HEAP32[(((buf)+(32))>>2)]=0;
        HEAP32[(((buf)+(36))>>2)]=stat.size;
        HEAP32[(((buf)+(40))>>2)]=4096;
        HEAP32[(((buf)+(44))>>2)]=stat.blocks;
        HEAP32[(((buf)+(48))>>2)]=(stat.atime.getTime() / 1000)|0;
        HEAP32[(((buf)+(52))>>2)]=0;
        HEAP32[(((buf)+(56))>>2)]=(stat.mtime.getTime() / 1000)|0;
        HEAP32[(((buf)+(60))>>2)]=0;
        HEAP32[(((buf)+(64))>>2)]=(stat.ctime.getTime() / 1000)|0;
        HEAP32[(((buf)+(68))>>2)]=0;
        HEAP32[(((buf)+(72))>>2)]=stat.ino;
        return 0;
      },doMsync:function (addr, stream, len, flags) {
        var buffer = new Uint8Array(HEAPU8.subarray(addr, addr + len));
        FS.msync(stream, buffer, 0, len, flags);
      },doMkdir:function (path, mode) {
        // remove a trailing slash, if one - /a/b/ has basename of '', but
        // we want to create b in the context of this function
        path = PATH.normalize(path);
        if (path[path.length-1] === '/') path = path.substr(0, path.length-1);
        FS.mkdir(path, mode, 0);
        return 0;
      },doMknod:function (path, mode, dev) {
        // we don't want this in the JS API as it uses mknod to create all nodes.
        switch (mode & 61440) {
          case 32768:
          case 8192:
          case 24576:
          case 4096:
          case 49152:
            break;
          default: return -ERRNO_CODES.EINVAL;
        }
        FS.mknod(path, mode, dev);
        return 0;
      },doReadlink:function (path, buf, bufsize) {
        if (bufsize <= 0) return -ERRNO_CODES.EINVAL;
        var ret = FS.readlink(path);
        ret = ret.slice(0, Math.max(0, bufsize));
        writeStringToMemory(ret, buf, true);
        return ret.length;
      },doAccess:function (path, amode) {
        if (amode & ~7) {
          // need a valid mode
          return -ERRNO_CODES.EINVAL;
        }
        var node;
        var lookup = FS.lookupPath(path, { follow: true });
        node = lookup.node;
        var perms = '';
        if (amode & 4) perms += 'r';
        if (amode & 2) perms += 'w';
        if (amode & 1) perms += 'x';
        if (perms /* otherwise, they've just passed F_OK */ && FS.nodePermissions(node, perms)) {
          return -ERRNO_CODES.EACCES;
        }
        return 0;
      },doDup:function (path, flags, suggestFD) {
        var suggest = FS.getStream(suggestFD);
        if (suggest) FS.close(suggest);
        return FS.open(path, flags, 0, suggestFD, suggestFD).fd;
      },doReadv:function (stream, iov, iovcnt, offset) {
        var ret = 0;
        for (var i = 0; i < iovcnt; i++) {
          var ptr = HEAP32[(((iov)+(i*8))>>2)];
          var len = HEAP32[(((iov)+(i*8 + 4))>>2)];
          var curr = FS.read(stream, HEAP8,ptr, len, offset);
          if (curr < 0) return -1;
          ret += curr;
          if (curr < len) break; // nothing more to read
        }
        return ret;
      },doWritev:function (stream, iov, iovcnt, offset) {
        var ret = 0;
        for (var i = 0; i < iovcnt; i++) {
          var ptr = HEAP32[(((iov)+(i*8))>>2)];
          var len = HEAP32[(((iov)+(i*8 + 4))>>2)];
          var curr = FS.write(stream, HEAP8,ptr, len, offset);
          if (curr < 0) return -1;
          ret += curr;
        }
        return ret;
      },varargs:0,get:function (varargs) {
        SYSCALLS.varargs += 4;
        var ret = HEAP32[(((SYSCALLS.varargs)-(4))>>2)];
        return ret;
      },getStr:function () {
        var ret = Pointer_stringify(SYSCALLS.get());
        return ret;
      },getStreamFromFD:function () {
        var stream = FS.getStream(SYSCALLS.get());
        if (!stream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        return stream;
      },getSocketFromFD:function () {
        var socket = SOCKFS.getSocket(SYSCALLS.get());
        if (!socket) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        return socket;
      },getSocketAddress:function (allowNull) {
        var addrp = SYSCALLS.get(), addrlen = SYSCALLS.get();
        if (allowNull && addrp === 0) return null;
        var info = __read_sockaddr(addrp, addrlen);
        if (info.errno) throw new FS.ErrnoError(info.errno);
        info.addr = DNS.lookup_addr(info.addr) || info.addr;
        return info;
      },get64:function () {
        var low = SYSCALLS.get(), high = SYSCALLS.get();
        if (low >= 0) assert(high === 0);
        else assert(high === -1);
        return low;
      },getZero:function () {
        assert(SYSCALLS.get() === 0);
      }};function ___syscall6(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // close
      var stream = SYSCALLS.getStreamFromFD();
      FS.close(stream);
      return 0;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  var _sin=Math_sin;

  
  var ___tm_current=allocate(44, "i8", ALLOC_STATIC);
  
  
  var ___tm_timezone=allocate(intArrayFromString("GMT"), "i8", ALLOC_STATIC);function _localtime_r(time, tmPtr) {
      _tzset();
      var date = new Date(HEAP32[((time)>>2)]*1000);
      HEAP32[((tmPtr)>>2)]=date.getSeconds();
      HEAP32[(((tmPtr)+(4))>>2)]=date.getMinutes();
      HEAP32[(((tmPtr)+(8))>>2)]=date.getHours();
      HEAP32[(((tmPtr)+(12))>>2)]=date.getDate();
      HEAP32[(((tmPtr)+(16))>>2)]=date.getMonth();
      HEAP32[(((tmPtr)+(20))>>2)]=date.getFullYear()-1900;
      HEAP32[(((tmPtr)+(24))>>2)]=date.getDay();
  
      var start = new Date(date.getFullYear(), 0, 1);
      var yday = ((date.getTime() - start.getTime()) / (1000 * 60 * 60 * 24))|0;
      HEAP32[(((tmPtr)+(28))>>2)]=yday;
      HEAP32[(((tmPtr)+(36))>>2)]=-(date.getTimezoneOffset() * 60);
  
      // DST is in December in South
      var summerOffset = new Date(2000, 6, 1).getTimezoneOffset();
      var winterOffset = start.getTimezoneOffset();
      var dst = (date.getTimezoneOffset() == Math.min(winterOffset, summerOffset))|0;
      HEAP32[(((tmPtr)+(32))>>2)]=dst;
  
      var zonePtr = HEAP32[(((_tzname)+(dst ? Runtime.QUANTUM_SIZE : 0))>>2)];
      HEAP32[(((tmPtr)+(40))>>2)]=zonePtr;
  
      return tmPtr;
    }function _localtime(time) {
      return _localtime_r(time, ___tm_current);
    }

  function _sysconf(name) {
      // long sysconf(int name);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/sysconf.html
      switch(name) {
        case 30: return PAGE_SIZE;
        case 85: return totalMemory / PAGE_SIZE;
        case 132:
        case 133:
        case 12:
        case 137:
        case 138:
        case 15:
        case 235:
        case 16:
        case 17:
        case 18:
        case 19:
        case 20:
        case 149:
        case 13:
        case 10:
        case 236:
        case 153:
        case 9:
        case 21:
        case 22:
        case 159:
        case 154:
        case 14:
        case 77:
        case 78:
        case 139:
        case 80:
        case 81:
        case 82:
        case 68:
        case 67:
        case 164:
        case 11:
        case 29:
        case 47:
        case 48:
        case 95:
        case 52:
        case 51:
        case 46:
          return 200809;
        case 79:
          return 0;
        case 27:
        case 246:
        case 127:
        case 128:
        case 23:
        case 24:
        case 160:
        case 161:
        case 181:
        case 182:
        case 242:
        case 183:
        case 184:
        case 243:
        case 244:
        case 245:
        case 165:
        case 178:
        case 179:
        case 49:
        case 50:
        case 168:
        case 169:
        case 175:
        case 170:
        case 171:
        case 172:
        case 97:
        case 76:
        case 32:
        case 173:
        case 35:
          return -1;
        case 176:
        case 177:
        case 7:
        case 155:
        case 8:
        case 157:
        case 125:
        case 126:
        case 92:
        case 93:
        case 129:
        case 130:
        case 131:
        case 94:
        case 91:
          return 1;
        case 74:
        case 60:
        case 69:
        case 70:
        case 4:
          return 1024;
        case 31:
        case 42:
        case 72:
          return 32;
        case 87:
        case 26:
        case 33:
          return 2147483647;
        case 34:
        case 1:
          return 47839;
        case 38:
        case 36:
          return 99;
        case 43:
        case 37:
          return 2048;
        case 0: return 2097152;
        case 3: return 65536;
        case 28: return 32768;
        case 44: return 32767;
        case 75: return 16384;
        case 39: return 1000;
        case 89: return 700;
        case 71: return 256;
        case 40: return 255;
        case 2: return 100;
        case 180: return 64;
        case 25: return 20;
        case 5: return 16;
        case 6: return 6;
        case 73: return 4;
        case 84: {
          if (typeof navigator === 'object') return navigator['hardwareConcurrency'] || 1;
          return 1;
        }
      }
      ___setErrNo(ERRNO_CODES.EINVAL);
      return -1;
    }

   
  Module["_bitshift64Lshr"] = _bitshift64Lshr;

  
   
  Module["_testSetjmp"] = _testSetjmp;function _longjmp(env, value) {
      asm['setThrew'](env, value || 1);
      throw 'longjmp';
    }

  var _atan=Math_atan;

  var _BDtoIHigh=true;

  function _pthread_cleanup_push(routine, arg) {
      __ATEXIT__.push(function() { Runtime.dynCall('vi', routine, [arg]) })
      _pthread_cleanup_push.level = __ATEXIT__.length;
    }

  function ___syscall10(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // unlink
      var path = SYSCALLS.getStr();
      FS.unlink(path);
      return 0;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  var _ceil=Math_ceil;

  function _pthread_cleanup_pop() {
      assert(_pthread_cleanup_push.level == __ATEXIT__.length, 'cannot pop if something else added meanwhile!');
      __ATEXIT__.pop();
      _pthread_cleanup_push.level = __ATEXIT__.length;
    }

  function _emscripten_longjmp(env, value) {
      _longjmp(env, value);
    }

  function ___syscall5(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // open
      var pathname = SYSCALLS.getStr(), flags = SYSCALLS.get(), mode = SYSCALLS.get() // optional TODO
      var stream = FS.open(pathname, flags, mode);
      return stream.fd;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  
  function _emscripten_memcpy_big(dest, src, num) {
      HEAPU8.set(HEAPU8.subarray(src, src+num), dest);
      return dest;
    } 
  Module["_memcpy"] = _memcpy;

  var _log=Math_log;

  var _emscripten_setjmp=true;

  var _cos=Math_cos;

  var _fabs=Math_abs;

  function _sbrk(bytes) {
      // Implement a Linux-like 'memory area' for our 'process'.
      // Changes the size of the memory area by |bytes|; returns the
      // address of the previous top ('break') of the memory area
      // We control the "dynamic" memory - DYNAMIC_BASE to DYNAMICTOP
      var self = _sbrk;
      if (!self.called) {
        DYNAMICTOP = alignMemoryPage(DYNAMICTOP); // make sure we start out aligned
        self.called = true;
        assert(Runtime.dynamicAlloc);
        self.alloc = Runtime.dynamicAlloc;
        Runtime.dynamicAlloc = function() { abort('cannot dynamically allocate, sbrk now has control') };
      }
      var ret = DYNAMICTOP;
      if (bytes != 0) {
        var success = self.alloc(bytes);
        if (!success) return -1 >>> 0; // sbrk failure code
      }
      return ret;  // Previous break location.
    }

   
  Module["_bitshift64Shl"] = _bitshift64Shl;

   
  Module["_memmove"] = _memmove;

  var _emscripten_preinvoke=true;

  var _BItoD=true;

  function ___syscall54(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // ioctl
      var stream = SYSCALLS.getStreamFromFD(), op = SYSCALLS.get();
      switch (op) {
        case 21505: {
          if (!stream.tty) return -ERRNO_CODES.ENOTTY;
          return 0;
        }
        case 21506: {
          if (!stream.tty) return -ERRNO_CODES.ENOTTY;
          return 0; // no-op, not actually adjusting terminal settings
        }
        case 21519: {
          if (!stream.tty) return -ERRNO_CODES.ENOTTY;
          var argp = SYSCALLS.get();
          HEAP32[((argp)>>2)]=0;
          return 0;
        }
        case 21520: {
          if (!stream.tty) return -ERRNO_CODES.ENOTTY;
          return -ERRNO_CODES.EINVAL; // not supported
        }
        case 21531: {
          var argp = SYSCALLS.get();
          return FS.ioctl(stream, op, argp);
        }
        default: abort('bad ioctl syscall ' + op);
      }
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function _time(ptr) {
      var ret = (Date.now()/1000)|0;
      if (ptr) {
        HEAP32[((ptr)>>2)]=ret;
      }
      return ret;
    }

  var _exp=Math_exp;

  var _llvm_pow_f64=Math_pow;

  function _pthread_self() {
      //FIXME: assumes only a single thread
      return 0;
    }

  function ___syscall140(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // llseek
      var stream = SYSCALLS.getStreamFromFD(), offset_high = SYSCALLS.get(), offset_low = SYSCALLS.get(), result = SYSCALLS.get(), whence = SYSCALLS.get();
      var offset = offset_low;
      assert(offset_high === 0);
      FS.llseek(stream, offset, whence);
      HEAP32[((result)>>2)]=stream.position;
      if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null; // reset readdir state
      return 0;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall146(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // writev
      var stream = SYSCALLS.getStreamFromFD(), iov = SYSCALLS.get(), iovcnt = SYSCALLS.get();
      return SYSCALLS.doWritev(stream, iov, iovcnt);
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall221(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // fcntl64
      var stream = SYSCALLS.getStreamFromFD(), cmd = SYSCALLS.get();
      switch (cmd) {
        case 0: {
          var arg = SYSCALLS.get();
          if (arg < 0) {
            return -ERRNO_CODES.EINVAL;
          }
          var newStream;
          newStream = FS.open(stream.path, stream.flags, 0, arg);
          return newStream.fd;
        }
        case 1:
        case 2:
          return 0;  // FD_CLOEXEC makes no sense for a single process.
        case 3:
          return stream.flags;
        case 4: {
          var arg = SYSCALLS.get();
          stream.flags |= arg;
          return 0;
        }
        case 12:
        case 12: {
          var arg = SYSCALLS.get();
          var offset = 0;
          // We're always unlocked.
          HEAP16[(((arg)+(offset))>>1)]=2;
          return 0;
        }
        case 13:
        case 14:
        case 13:
        case 14:
          return 0; // Pretend that the locking is successful.
        case 16:
        case 8:
          return -ERRNO_CODES.EINVAL; // These are for sockets. We don't have them fully implemented yet.
        case 9:
          // musl trusts getown return values, due to a bug where they must be, as they overlap with errors. just return -1 here, so fnctl() returns that, and we set errno ourselves.
          ___setErrNo(ERRNO_CODES.EINVAL);
          return -1;
        default: {
          return -ERRNO_CODES.EINVAL;
        }
      }
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall145(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // readv
      var stream = SYSCALLS.getStreamFromFD(), iov = SYSCALLS.get(), iovcnt = SYSCALLS.get();
      return SYSCALLS.doReadv(stream, iov, iovcnt);
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }
Module["requestFullScreen"] = function Module_requestFullScreen(lockPointer, resizeCanvas, vrDevice) { Browser.requestFullScreen(lockPointer, resizeCanvas, vrDevice) };
  Module["requestAnimationFrame"] = function Module_requestAnimationFrame(func) { Browser.requestAnimationFrame(func) };
  Module["setCanvasSize"] = function Module_setCanvasSize(width, height, noUpdates) { Browser.setCanvasSize(width, height, noUpdates) };
  Module["pauseMainLoop"] = function Module_pauseMainLoop() { Browser.mainLoop.pause() };
  Module["resumeMainLoop"] = function Module_resumeMainLoop() { Browser.mainLoop.resume() };
  Module["getUserMedia"] = function Module_getUserMedia() { Browser.getUserMedia() }
  Module["createContext"] = function Module_createContext(canvas, useWebGL, setInModule, webGLContextAttributes) { return Browser.createContext(canvas, useWebGL, setInModule, webGLContextAttributes) }
FS.staticInit();__ATINIT__.unshift(function() { if (!Module["noFSInit"] && !FS.init.initialized) FS.init() });__ATMAIN__.push(function() { FS.ignorePermissions = false });__ATEXIT__.push(function() { FS.quit() });Module["FS_createFolder"] = FS.createFolder;Module["FS_createPath"] = FS.createPath;Module["FS_createDataFile"] = FS.createDataFile;Module["FS_createPreloadedFile"] = FS.createPreloadedFile;Module["FS_createLazyFile"] = FS.createLazyFile;Module["FS_createLink"] = FS.createLink;Module["FS_createDevice"] = FS.createDevice;Module["FS_unlink"] = FS.unlink;
__ATINIT__.unshift(function() { TTY.init() });__ATEXIT__.push(function() { TTY.shutdown() });
if (ENVIRONMENT_IS_NODE) { var fs = require("fs"); var NODEJS_PATH = require("path"); NODEFS.staticInit(); }
STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);

staticSealed = true; // seal the static portion of memory

STACK_MAX = STACK_BASE + TOTAL_STACK;

DYNAMIC_BASE = DYNAMICTOP = Runtime.alignMemory(STACK_MAX);

assert(DYNAMIC_BASE < TOTAL_MEMORY, "TOTAL_MEMORY not big enough for stack");

 var cttz_i8 = allocate([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0], "i8", ALLOC_DYNAMIC);


function nullFunc_iiiiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_i(x) { Module["printErr"]("Invalid function pointer called with signature 'i'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_vi(x) { Module["printErr"]("Invalid function pointer called with signature 'vi'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_vii(x) { Module["printErr"]("Invalid function pointer called with signature 'vii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iiiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_ii(x) { Module["printErr"]("Invalid function pointer called with signature 'ii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viii(x) { Module["printErr"]("Invalid function pointer called with signature 'viii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiiiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_v(x) { Module["printErr"]("Invalid function pointer called with signature 'v'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iii(x) { Module["printErr"]("Invalid function pointer called with signature 'iii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiii(x) { Module["printErr"]("Invalid function pointer called with signature 'viiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function invoke_iiiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    return Module["dynCall_iiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiii(index,a1,a2,a3) {
  try {
    return Module["dynCall_iiii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_i(index) {
  try {
    return Module["dynCall_i"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vi(index,a1) {
  try {
    Module["dynCall_vi"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vii(index,a1,a2) {
  try {
    Module["dynCall_vii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiiii(index,a1,a2,a3,a4,a5,a6) {
  try {
    return Module["dynCall_iiiiiii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_ii(index,a1) {
  try {
    return Module["dynCall_ii"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viii(index,a1,a2,a3) {
  try {
    Module["dynCall_viii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  try {
    Module["dynCall_viiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_v(index) {
  try {
    Module["dynCall_v"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiii(index,a1,a2,a3,a4) {
  try {
    return Module["dynCall_iiiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iii(index,a1,a2) {
  try {
    return Module["dynCall_iii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiii(index,a1,a2,a3,a4,a5) {
  try {
    return Module["dynCall_iiiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiii(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_viiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

Module.asmGlobalArg = { "Math": Math, "Int8Array": Int8Array, "Int16Array": Int16Array, "Int32Array": Int32Array, "Uint8Array": Uint8Array, "Uint16Array": Uint16Array, "Uint32Array": Uint32Array, "Float32Array": Float32Array, "Float64Array": Float64Array, "NaN": NaN, "Infinity": Infinity };

Module.asmLibraryArg = { "abort": abort, "assert": assert, "nullFunc_iiiiiiii": nullFunc_iiiiiiii, "nullFunc_iiii": nullFunc_iiii, "nullFunc_i": nullFunc_i, "nullFunc_vi": nullFunc_vi, "nullFunc_vii": nullFunc_vii, "nullFunc_iiiiiii": nullFunc_iiiiiii, "nullFunc_ii": nullFunc_ii, "nullFunc_viii": nullFunc_viii, "nullFunc_viiiiiiii": nullFunc_viiiiiiii, "nullFunc_v": nullFunc_v, "nullFunc_iiiii": nullFunc_iiiii, "nullFunc_iii": nullFunc_iii, "nullFunc_iiiiii": nullFunc_iiiiii, "nullFunc_viiii": nullFunc_viiii, "invoke_iiiiiiii": invoke_iiiiiiii, "invoke_iiii": invoke_iiii, "invoke_i": invoke_i, "invoke_vi": invoke_vi, "invoke_vii": invoke_vii, "invoke_iiiiiii": invoke_iiiiiii, "invoke_ii": invoke_ii, "invoke_viii": invoke_viii, "invoke_viiiiiiii": invoke_viiiiiiii, "invoke_v": invoke_v, "invoke_iiiii": invoke_iiiii, "invoke_iii": invoke_iii, "invoke_iiiiii": invoke_iiiiii, "invoke_viiii": invoke_viiii, "_pthread_cleanup_pop": _pthread_cleanup_pop, "_fabs": _fabs, "_sin": _sin, "_exp": _exp, "_llvm_pow_f64": _llvm_pow_f64, "_acos": _acos, "_log": _log, "_abort": _abort, "_emscripten_set_main_loop_timing": _emscripten_set_main_loop_timing, "_abs": _abs, "_system": _system, "___assert_fail": ___assert_fail, "_asin": _asin, "_floor": _floor, "_longjmp": _longjmp, "__addDays": __addDays, "_localtime_r": _localtime_r, "_tzset": _tzset, "___setErrNo": ___setErrNo, "_sbrk": _sbrk, "_atan": _atan, "_emscripten_memcpy_big": _emscripten_memcpy_big, "__exit": __exit, "_mktime": _mktime, "_strftime": _strftime, "__arraySum": __arraySum, "___syscall221": ___syscall221, "_cos": _cos, "_pthread_self": _pthread_self, "_asctime_r": _asctime_r, "_sqrt": _sqrt, "___syscall54": ___syscall54, "___unlock": ___unlock, "__isLeapYear": __isLeapYear, "_emscripten_set_main_loop": _emscripten_set_main_loop, "___syscall10": ___syscall10, "___syscall5": ___syscall5, "_tan": _tan, "_asctime": _asctime, "___lock": ___lock, "___syscall6": ___syscall6, "_pthread_cleanup_push": _pthread_cleanup_push, "_sysconf": _sysconf, "_time": _time, "_emscripten_longjmp": _emscripten_longjmp, "_ceil": _ceil, "_atexit": _atexit, "___syscall140": ___syscall140, "_localtime": _localtime, "_exit": _exit, "___syscall145": ___syscall145, "___syscall146": ___syscall146, "STACKTOP": STACKTOP, "STACK_MAX": STACK_MAX, "tempDoublePtr": tempDoublePtr, "ABORT": ABORT, "cttz_i8": cttz_i8 };
// EMSCRIPTEN_START_ASM
var asm = (function(global, env, buffer) {
  'almost asm';
  
  
  var HEAP8 = new global.Int8Array(buffer);
  var HEAP16 = new global.Int16Array(buffer);
  var HEAP32 = new global.Int32Array(buffer);
  var HEAPU8 = new global.Uint8Array(buffer);
  var HEAPU16 = new global.Uint16Array(buffer);
  var HEAPU32 = new global.Uint32Array(buffer);
  var HEAPF32 = new global.Float32Array(buffer);
  var HEAPF64 = new global.Float64Array(buffer);


  var STACKTOP=env.STACKTOP|0;
  var STACK_MAX=env.STACK_MAX|0;
  var tempDoublePtr=env.tempDoublePtr|0;
  var ABORT=env.ABORT|0;
  var cttz_i8=env.cttz_i8|0;

  var __THREW__ = 0;
  var threwValue = 0;
  var setjmpId = 0;
  var undef = 0;
  var nan = global.NaN, inf = global.Infinity;
  var tempInt = 0, tempBigInt = 0, tempBigIntP = 0, tempBigIntS = 0, tempBigIntR = 0.0, tempBigIntI = 0, tempBigIntD = 0, tempValue = 0, tempDouble = 0.0;

  var tempRet0 = 0;
  var tempRet1 = 0;
  var tempRet2 = 0;
  var tempRet3 = 0;
  var tempRet4 = 0;
  var tempRet5 = 0;
  var tempRet6 = 0;
  var tempRet7 = 0;
  var tempRet8 = 0;
  var tempRet9 = 0;
  var Math_floor=global.Math.floor;
  var Math_abs=global.Math.abs;
  var Math_sqrt=global.Math.sqrt;
  var Math_pow=global.Math.pow;
  var Math_cos=global.Math.cos;
  var Math_sin=global.Math.sin;
  var Math_tan=global.Math.tan;
  var Math_acos=global.Math.acos;
  var Math_asin=global.Math.asin;
  var Math_atan=global.Math.atan;
  var Math_atan2=global.Math.atan2;
  var Math_exp=global.Math.exp;
  var Math_log=global.Math.log;
  var Math_ceil=global.Math.ceil;
  var Math_imul=global.Math.imul;
  var Math_min=global.Math.min;
  var Math_clz32=global.Math.clz32;
  var abort=env.abort;
  var assert=env.assert;
  var nullFunc_iiiiiiii=env.nullFunc_iiiiiiii;
  var nullFunc_iiii=env.nullFunc_iiii;
  var nullFunc_i=env.nullFunc_i;
  var nullFunc_vi=env.nullFunc_vi;
  var nullFunc_vii=env.nullFunc_vii;
  var nullFunc_iiiiiii=env.nullFunc_iiiiiii;
  var nullFunc_ii=env.nullFunc_ii;
  var nullFunc_viii=env.nullFunc_viii;
  var nullFunc_viiiiiiii=env.nullFunc_viiiiiiii;
  var nullFunc_v=env.nullFunc_v;
  var nullFunc_iiiii=env.nullFunc_iiiii;
  var nullFunc_iii=env.nullFunc_iii;
  var nullFunc_iiiiii=env.nullFunc_iiiiii;
  var nullFunc_viiii=env.nullFunc_viiii;
  var invoke_iiiiiiii=env.invoke_iiiiiiii;
  var invoke_iiii=env.invoke_iiii;
  var invoke_i=env.invoke_i;
  var invoke_vi=env.invoke_vi;
  var invoke_vii=env.invoke_vii;
  var invoke_iiiiiii=env.invoke_iiiiiii;
  var invoke_ii=env.invoke_ii;
  var invoke_viii=env.invoke_viii;
  var invoke_viiiiiiii=env.invoke_viiiiiiii;
  var invoke_v=env.invoke_v;
  var invoke_iiiii=env.invoke_iiiii;
  var invoke_iii=env.invoke_iii;
  var invoke_iiiiii=env.invoke_iiiiii;
  var invoke_viiii=env.invoke_viiii;
  var _pthread_cleanup_pop=env._pthread_cleanup_pop;
  var _fabs=env._fabs;
  var _sin=env._sin;
  var _exp=env._exp;
  var _llvm_pow_f64=env._llvm_pow_f64;
  var _acos=env._acos;
  var _log=env._log;
  var _abort=env._abort;
  var _emscripten_set_main_loop_timing=env._emscripten_set_main_loop_timing;
  var _abs=env._abs;
  var _system=env._system;
  var ___assert_fail=env.___assert_fail;
  var _asin=env._asin;
  var _floor=env._floor;
  var _longjmp=env._longjmp;
  var __addDays=env.__addDays;
  var _localtime_r=env._localtime_r;
  var _tzset=env._tzset;
  var ___setErrNo=env.___setErrNo;
  var _sbrk=env._sbrk;
  var _atan=env._atan;
  var _emscripten_memcpy_big=env._emscripten_memcpy_big;
  var __exit=env.__exit;
  var _mktime=env._mktime;
  var _strftime=env._strftime;
  var __arraySum=env.__arraySum;
  var ___syscall221=env.___syscall221;
  var _cos=env._cos;
  var _pthread_self=env._pthread_self;
  var _asctime_r=env._asctime_r;
  var _sqrt=env._sqrt;
  var ___syscall54=env.___syscall54;
  var ___unlock=env.___unlock;
  var __isLeapYear=env.__isLeapYear;
  var _emscripten_set_main_loop=env._emscripten_set_main_loop;
  var ___syscall10=env.___syscall10;
  var ___syscall5=env.___syscall5;
  var _tan=env._tan;
  var _asctime=env._asctime;
  var ___lock=env.___lock;
  var ___syscall6=env.___syscall6;
  var _pthread_cleanup_push=env._pthread_cleanup_push;
  var _sysconf=env._sysconf;
  var _time=env._time;
  var _emscripten_longjmp=env._emscripten_longjmp;
  var _ceil=env._ceil;
  var _atexit=env._atexit;
  var ___syscall140=env.___syscall140;
  var _localtime=env._localtime;
  var _exit=env._exit;
  var ___syscall145=env.___syscall145;
  var ___syscall146=env.___syscall146;
  var tempFloat = 0.0;

// EMSCRIPTEN_START_FUNCS
function stackAlloc(size) {
  size = size|0;
  var ret = 0;
  ret = STACKTOP;
  STACKTOP = (STACKTOP + size)|0;
  STACKTOP = (STACKTOP + 15)&-16;
if ((STACKTOP|0) >= (STACK_MAX|0)) abort();

  return ret|0;
}
function stackSave() {
  return STACKTOP|0;
}
function stackRestore(top) {
  top = top|0;
  STACKTOP = top;
}
function establishStackSpace(stackBase, stackMax) {
  stackBase = stackBase|0;
  stackMax = stackMax|0;
  STACKTOP = stackBase;
  STACK_MAX = stackMax;
}

function setThrew(threw, value) {
  threw = threw|0;
  value = value|0;
  if ((__THREW__|0) == 0) {
    __THREW__ = threw;
    threwValue = value;
  }
}
function copyTempFloat(ptr) {
  ptr = ptr|0;
  HEAP8[tempDoublePtr>>0] = HEAP8[ptr>>0];
  HEAP8[tempDoublePtr+1>>0] = HEAP8[ptr+1>>0];
  HEAP8[tempDoublePtr+2>>0] = HEAP8[ptr+2>>0];
  HEAP8[tempDoublePtr+3>>0] = HEAP8[ptr+3>>0];
}
function copyTempDouble(ptr) {
  ptr = ptr|0;
  HEAP8[tempDoublePtr>>0] = HEAP8[ptr>>0];
  HEAP8[tempDoublePtr+1>>0] = HEAP8[ptr+1>>0];
  HEAP8[tempDoublePtr+2>>0] = HEAP8[ptr+2>>0];
  HEAP8[tempDoublePtr+3>>0] = HEAP8[ptr+3>>0];
  HEAP8[tempDoublePtr+4>>0] = HEAP8[ptr+4>>0];
  HEAP8[tempDoublePtr+5>>0] = HEAP8[ptr+5>>0];
  HEAP8[tempDoublePtr+6>>0] = HEAP8[ptr+6>>0];
  HEAP8[tempDoublePtr+7>>0] = HEAP8[ptr+7>>0];
}

function setTempRet0(value) {
  value = value|0;
  tempRet0 = value;
}
function getTempRet0() {
  return tempRet0|0;
}

function _main($argc,$argv) {
 $argc = $argc|0;
 $argv = $argv|0;
 var $$0 = 0, $$reg2mem33$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $cond = 0, $cond1 = 0, $cond2 = 0, $cond3 = 0, $cond4 = 0, $cond5 = 0, $cond6 = 0, $cond7 = 0, $or$cond = 0, $or$cond3 = 0, $or$cond5 = 0, $or$cond7 = 0, $vararg_buffer = 0, $vararg_buffer35 = 0, _setjmpTable = 0, _setjmpTableSize = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer35 = sp + 8|0;
 $vararg_buffer = sp;
 _setjmpTableSize = 4;_setjmpTable = _malloc(40) | 0;HEAP32[_setjmpTable>>2]=0;
 __THREW__ = 0;
 (invoke_ii(105,(106|0))|0);
 $0 = __THREW__; __THREW__ = 0;
 if ((($0|0) != 0) & ((threwValue|0) != 0)) { $1 = _testSetjmp(HEAP32[$0>>2]|0, _setjmpTable|0, _setjmpTableSize|0)|0; if (($1|0) == 0) { _longjmp($0|0, threwValue|0); } tempRet0 = (threwValue); } else { $1 = -1; };
 $2 = tempRet0;
 $cond = ($1|0)==(1);
 if ($cond) {
  $$reg2mem33$0 = $2;
 } else {
  _setjmpTable = _saveSetjmp(16,1,_setjmpTable|0,_setjmpTableSize|0)|0;_setjmpTableSize = tempRet0;
  __THREW__ = 0;
  $3 = __THREW__; __THREW__ = 0;
  if ((($3|0) != 0) & ((threwValue|0) != 0)) { $4 = _testSetjmp(HEAP32[$3>>2]|0, _setjmpTable|0, _setjmpTableSize|0)|0; if (($4|0) == 0) { _longjmp($3|0, threwValue|0); } tempRet0 = (threwValue); } else { $4 = -1; };
  $5 = tempRet0;
  $cond1 = ($4|0)==(1);
  if ($cond1) {
   $$reg2mem33$0 = $5;
  } else {
   $$reg2mem33$0 = 0;
  }
 }
 L4: while(1) {
  $6 = ($$reg2mem33$0|0)!=(0);
  if ($6) {
   __THREW__ = 0;
   (invoke_iii(107,(1800|0),($vararg_buffer|0))|0);
   $7 = __THREW__; __THREW__ = 0;
   if ((($7|0) != 0) & ((threwValue|0) != 0)) { $8 = _testSetjmp(HEAP32[$7>>2]|0, _setjmpTable|0, _setjmpTableSize|0)|0; if (($8|0) == 0) { _longjmp($7|0, threwValue|0); } tempRet0 = (threwValue); } else { $8 = -1; };
   $9 = tempRet0;
   $cond7 = ($8|0)==(1);
   if ($cond7) {
    $$reg2mem33$0 = $9;
    continue;
   }
   __THREW__ = 0;
   invoke_vi(108,1);
   $10 = __THREW__; __THREW__ = 0;
   if ((($10|0) != 0) & ((threwValue|0) != 0)) { $11 = _testSetjmp(HEAP32[$10>>2]|0, _setjmpTable|0, _setjmpTableSize|0)|0; if (($11|0) == 0) { _longjmp($10|0, threwValue|0); } tempRet0 = (threwValue); } else { $11 = -1; };
   $12 = tempRet0;
   $$reg2mem33$0 = $12;
   continue;
  }
  __THREW__ = 0;
  invoke_v(109);
  $13 = __THREW__; __THREW__ = 0;
  if ((($13|0) != 0) & ((threwValue|0) != 0)) { $14 = _testSetjmp(HEAP32[$13>>2]|0, _setjmpTable|0, _setjmpTableSize|0)|0; if (($14|0) == 0) { _longjmp($13|0, threwValue|0); } tempRet0 = (threwValue); } else { $14 = -1; };
  $15 = tempRet0;
  $cond2 = ($14|0)==(1);
  if ($cond2) {
   $$reg2mem33$0 = $15;
   continue;
  }
  $16 = ((($argv)) + 4|0);
  HEAP32[$16>>2] = 1823;
  __THREW__ = 0;
  (invoke_iii(107,(1836|0),($vararg_buffer35|0))|0);
  $17 = __THREW__; __THREW__ = 0;
  if ((($17|0) != 0) & ((threwValue|0) != 0)) { $18 = _testSetjmp(HEAP32[$17>>2]|0, _setjmpTable|0, _setjmpTableSize|0)|0; if (($18|0) == 0) { _longjmp($17|0, threwValue|0); } tempRet0 = (threwValue); } else { $18 = -1; };
  $19 = tempRet0;
  $cond3 = ($18|0)==(1);
  if ($cond3) {
   $$reg2mem33$0 = $19;
   continue;
  }
  $20 = (2)>=(2);
  if ($20) {
   __THREW__ = 0;
   $21 = (invoke_iii(110,2,($argv|0))|0);
   $22 = __THREW__; __THREW__ = 0;
   if ((($22|0) != 0) & ((threwValue|0) != 0)) { $23 = _testSetjmp(HEAP32[$22>>2]|0, _setjmpTable|0, _setjmpTableSize|0)|0; if (($23|0) == 0) { _longjmp($22|0, threwValue|0); } tempRet0 = (threwValue); } else { $23 = -1; };
   $24 = tempRet0;
   $cond6 = ($23|0)==(1);
   if ($cond6) {
    $$reg2mem33$0 = $24;
    continue;
   }
   $25 = ($21<<24>>24)!=(0);
   if ($25) {
    $$0 = 2;
   } else {
    $$0 = 1;
   }
  } else {
   $$0 = 2;
  }
  $26 = ($$0|0)==(1);
  if (!($26)) {
   label = 18;
   break;
  }
  __THREW__ = 0;
  invoke_v(111);
  $27 = __THREW__; __THREW__ = 0;
  if ((($27|0) != 0) & ((threwValue|0) != 0)) { $28 = _testSetjmp(HEAP32[$27>>2]|0, _setjmpTable|0, _setjmpTableSize|0)|0; if (($28|0) == 0) { _longjmp($27|0, threwValue|0); } tempRet0 = (threwValue); } else { $28 = -1; };
  $29 = tempRet0;
  $cond4 = ($28|0)==(1);
  if ($cond4) {
   $$reg2mem33$0 = $29;
   continue;
  }
  while(1) {
   __THREW__ = 0;
   $30 = (invoke_i(112)|0);
   $31 = __THREW__; __THREW__ = 0;
   if ((($31|0) != 0) & ((threwValue|0) != 0)) { $32 = _testSetjmp(HEAP32[$31>>2]|0, _setjmpTable|0, _setjmpTableSize|0)|0; if (($32|0) == 0) { _longjmp($31|0, threwValue|0); } tempRet0 = (threwValue); } else { $32 = -1; };
   $33 = tempRet0;
   $cond5 = ($32|0)==(1);
   if ($cond5) {
    $$reg2mem33$0 = $33;
    continue L4;
   }
   $34 = ($30|0)==(0);
   $35 = ($30|0)==(5);
   $or$cond = $34 | $35;
   $36 = ($30|0)==(2);
   $or$cond3 = $or$cond | $36;
   $37 = ($30|0)==(3);
   $or$cond5 = $or$cond3 | $37;
   $38 = ($30|0)==(6);
   $or$cond7 = $or$cond5 | $38;
   if (!($or$cond7)) {
    label = 18;
    break L4;
   }
  }
 }
 if ((label|0) == 18) {
  _free(_setjmpTable|0);
  STACKTOP = sp;return 0;
 }
 return (0)|0;
}
function __on_exit() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __destroy_importing_directories();
 $0 = HEAP32[172>>2]|0;
 $1 = ($0|0)!=(0|0);
 if ($1) {
  (_mb_close(172)|0);
 }
 (_mb_dispose()|0);
 __destroy_code();
 __close_mem_pool();
 $2 = HEAP32[176>>2]|0;
 $3 = ($2|0)>(0);
 $4 = HEAP32[180>>2]|0;
 $5 = ($4|0)>(0);
 $or$cond = $3 | $5;
 if ($or$cond) {
  ___assert_fail((1864|0),(1884|0),1544,(1891|0));
  // unreachable;
 } else {
  return;
 }
}
function __on_startup() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 __open_mem_pool();
 (_mb_set_memory_manager(113,114)|0);
 (__create_code()|0);
 (_mb_init()|0);
 (_mb_open(172)|0);
 $0 = HEAP32[172>>2]|0;
 (_mb_debug_set_stepped_handler($0,115,116)|0);
 $1 = HEAP32[172>>2]|0;
 (_mb_set_error_handler($1,117)|0);
 $2 = HEAP32[172>>2]|0;
 (_mb_set_import_handler($2,118)|0);
 $3 = HEAP32[172>>2]|0;
 (_mb_register_func($3,1921,119)|0);
 $4 = HEAP32[172>>2]|0;
 (_mb_register_func($4,1925,120)|0);
 $5 = HEAP32[172>>2]|0;
 (_mb_register_func($5,1928,121)|0);
 $6 = HEAP32[172>>2]|0;
 (_mb_register_func($6,1932,122)|0);
 $7 = HEAP32[172>>2]|0;
 (_mb_register_func($7,1938,123)|0);
 $8 = HEAP32[172>>2]|0;
 (_mb_register_func($8,1944,124)|0);
 $9 = HEAP32[172>>2]|0;
 (_mb_register_func($9,1947,125)|0);
 return;
}
function __process_parameters($argc,$argv) {
 $argc = $argc|0;
 $argv = $argv|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $diri = 0, $eval = 0, $help = 0;
 var $i = 0, $memp = 0, $prog = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer3 = 0, $vararg_buffer5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer5 = sp + 24|0;
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $1 = $argc;
 $2 = $argv;
 $i = 1;
 $prog = 0;
 $eval = 0;
 $help = 0;
 $memp = 0;
 $diri = 0;
 L1: while(1) {
  $3 = $i;
  $4 = $1;
  $5 = ($3|0)<($4|0);
  if (!($5)) {
   label = 22;
   break;
  }
  $6 = $i;
  $7 = $2;
  $8 = (($7) + ($6<<2)|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = (_memcmp($9,8418,1)|0);
  $11 = ($10|0)!=(0);
  $12 = $i;
  $13 = $2;
  $14 = (($13) + ($12<<2)|0);
  $15 = HEAP32[$14>>2]|0;
  do {
   if ($11) {
    $prog = $15;
   } else {
    $16 = ((($15)) + 1|0);
    $17 = (_memcmp($16,2273,1)|0);
    $18 = ($17|0)!=(0);
    if (!($18)) {
     $eval = 1;
     $19 = $1;
     $20 = $i;
     $21 = (($20) + 1)|0;
     $22 = ($19|0)<=($21|0);
     if ($22) {
      label = 6;
      break L1;
     }
     $23 = $i;
     $24 = (($23) + 1)|0;
     $i = $24;
     $25 = $2;
     $26 = (($25) + ($24<<2)|0);
     $27 = HEAP32[$26>>2]|0;
     $prog = $27;
     break;
    }
    $28 = $i;
    $29 = $2;
    $30 = (($29) + ($28<<2)|0);
    $31 = HEAP32[$30>>2]|0;
    $32 = ((($31)) + 1|0);
    $33 = (_memcmp($32,2301,1)|0);
    $34 = ($33|0)!=(0);
    if (!($34)) {
     $help = 1;
     break;
    }
    $35 = $i;
    $36 = $2;
    $37 = (($36) + ($35<<2)|0);
    $38 = HEAP32[$37>>2]|0;
    $39 = ((($38)) + 1|0);
    $40 = (_memcmp($39,9768,1)|0);
    $41 = ($40|0)!=(0);
    if (!($41)) {
     $42 = $1;
     $43 = $i;
     $44 = (($43) + 1)|0;
     $45 = ($42|0)<=($44|0);
     if ($45) {
      label = 12;
      break L1;
     }
     $46 = $i;
     $47 = (($46) + 1)|0;
     $i = $47;
     $48 = $2;
     $49 = (($48) + ($47<<2)|0);
     $50 = HEAP32[$49>>2]|0;
     $memp = $50;
     $51 = $1;
     $52 = $i;
     $53 = (($52) + 1)|0;
     $54 = ($51|0)>($53|0);
     if (!($54)) {
      break;
     }
     $55 = $i;
     $56 = (($55) + 1)|0;
     $i = $56;
     $57 = $2;
     $58 = (($57) + ($56<<2)|0);
     $59 = HEAP32[$58>>2]|0;
     $prog = $59;
     break;
    }
    $60 = $i;
    $61 = $2;
    $62 = (($61) + ($60<<2)|0);
    $63 = HEAP32[$62>>2]|0;
    $64 = ((($63)) + 1|0);
    $65 = (_memcmp($64,2341,1)|0);
    $66 = ($65|0)!=(0);
    if ($66) {
     $76 = $i;
     $77 = $2;
     $78 = (($77) + ($76<<2)|0);
     $79 = HEAP32[$78>>2]|0;
     HEAP32[$vararg_buffer5>>2] = $79;
     (_printf(2380,$vararg_buffer5)|0);
     break;
    }
    $67 = $1;
    $68 = $i;
    $69 = (($68) + 1)|0;
    $70 = ($67|0)<=($69|0);
    if ($70) {
     label = 17;
     break L1;
    }
    $71 = $i;
    $72 = (($71) + 1)|0;
    $i = $72;
    $73 = $2;
    $74 = (($73) + ($72<<2)|0);
    $75 = HEAP32[$74>>2]|0;
    $diri = $75;
   }
  } while(0);
  $80 = $i;
  $81 = (($80) + 1)|0;
  $i = $81;
 }
 if ((label|0) == 6) {
  (_printf(2275,$vararg_buffer)|0);
  $0 = 1;
  $96 = $0;
  STACKTOP = sp;return ($96|0);
 }
 else if ((label|0) == 12) {
  (_printf(2303,$vararg_buffer1)|0);
  $0 = 1;
  $96 = $0;
  STACKTOP = sp;return ($96|0);
 }
 else if ((label|0) == 17) {
  (_printf(2343,$vararg_buffer3)|0);
  $0 = 1;
  $96 = $0;
  STACKTOP = sp;return ($96|0);
 }
 else if ((label|0) == 22) {
  $82 = $memp;
  $83 = ($82|0)!=(0|0);
  if ($83) {
   $84 = $memp;
   $85 = (_atoi($84)|0);
   HEAP32[212>>2] = $85;
  }
  $86 = $diri;
  $87 = ($86|0)!=(0|0);
  if ($87) {
   $88 = $diri;
   (__set_importing_directories($88)|0);
  }
  $89 = $eval;
  $90 = ($89<<24>>24)!=(0);
  $91 = $prog;
  do {
   if ($90) {
    __evaluate_expression($91);
   } else {
    $92 = ($91|0)!=(0|0);
    if ($92) {
     $93 = $prog;
     __run_file($93);
     break;
    }
    $94 = $help;
    $95 = ($94<<24>>24)!=(0);
    if ($95) {
     __show_help();
     break;
    }
    $0 = 0;
    $96 = $0;
    STACKTOP = sp;return ($96|0);
   }
  } while(0);
  $0 = 1;
  $96 = $0;
  STACKTOP = sp;return ($96|0);
 }
 return (0)|0;
}
function __show_tip() {
 var $0 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $0 = (_mb_ver_string()|0);
 HEAP32[$vararg_buffer>>2] = $0;
 (_printf(3649,$vararg_buffer)|0);
 (_printf(3672,$vararg_buffer1)|0);
 STACKTOP = sp;return;
}
function __do_line() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $cn = 0;
 var $dup = 0, $i = 0, $line = 0, $ne = 0, $no = 0, $or$cond = 0, $path = 0, $path1 = 0, $path2 = 0, $path3 = 0, $result = 0, $sn = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 576|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer2 = sp + 8|0;
 $vararg_buffer = sp;
 $line = sp + 312|0;
 $dup = sp + 56|0;
 $result = 0;
 $0 = HEAP32[172>>2]|0;
 $1 = ($0|0)!=(0|0);
 if (!($1)) {
  ___assert_fail((3729|0),(1884|0),1000,(3733|0));
  // unreachable;
 }
 _memset(($line|0),0,256)|0;
 (_printf(3742,$vararg_buffer)|0);
 $2 = HEAP32[172>>2]|0;
 (_mb_gets($2,0,$line,256)|0);
 _memcpy(($dup|0),($line|0),256)|0;
 (_strtok($line,3744)|0);
 $3 = (_strcasecmp($line,4760)|0);
 $4 = ($3|0)==(0);
 do {
  if (!($4)) {
   $5 = (_strcasecmp($line,3746)|0);
   $6 = ($5|0)==(0);
   if ($6) {
    __show_help();
    break;
   }
   $7 = (_strcasecmp($line,3751)|0);
   $8 = ($7|0)==(0);
   if ($8) {
    __clear_screen();
    break;
   }
   $9 = (_strcasecmp($line,13929)|0);
   $10 = ($9|0)==(0);
   if ($10) {
    $11 = (__new_program()|0);
    $result = $11;
    break;
   }
   $12 = (_strcasecmp($line,3755)|0);
   $13 = ($12|0)==(0);
   if ($13) {
    $i = 0;
    (__code()|0);
    $14 = (__code()|0);
    $15 = ($14|0)!=(0|0);
    if (!($15)) {
     ___assert_fail((3759|0),(1884|0),1019,(3733|0));
     // unreachable;
    }
    $16 = (_mb_reset(172,0,0)|0);
    $result = $16;
    $i = 0;
    while(1) {
     $17 = $i;
     $18 = (__code()|0);
     $19 = ((($18)) + 4|0);
     $20 = HEAP32[$19>>2]|0;
     $21 = ($17|0)>=($20|0);
     $22 = $result;
     $23 = ($22|0)!=(0);
     $or$cond = $21 | $23;
     if ($or$cond) {
      break;
     }
     $24 = HEAP32[172>>2]|0;
     $25 = $i;
     $26 = (__code()|0);
     $27 = HEAP32[$26>>2]|0;
     $28 = (($27) + ($25<<2)|0);
     $29 = HEAP32[$28>>2]|0;
     $30 = (_mb_load_string($24,$29,0)|0);
     $result = $30;
     $31 = $i;
     $32 = (($31) + 1)|0;
     $i = $32;
    }
    $33 = $result;
    $34 = ($33|0)==(0);
    if ($34) {
     $35 = HEAP32[172>>2]|0;
     $36 = (_mb_run($35,1)|0);
     $result = $36;
    }
    (_printf(14608,$vararg_buffer2)|0);
    break;
   }
   $37 = (_strcasecmp($line,3767)|0);
   $38 = ($37|0)==(0);
   if ($38) {
    $result = 4;
    break;
   }
   $39 = (_strcasecmp($line,4688)|0);
   $40 = ($39|0)==(0);
   if ($40) {
    $41 = (_strlen($line)|0);
    $42 = (($line) + ($41)|0);
    $43 = ((($42)) + 1|0);
    $sn = $43;
    $cn = 0;
    $44 = $sn;
    (_strtok($44,3744)|0);
    $45 = $sn;
    $46 = $sn;
    $47 = (_strlen($46)|0);
    $48 = (($45) + ($47)|0);
    $49 = ((($48)) + 1|0);
    $cn = $49;
    $50 = $sn;
    $51 = $cn;
    __list_program($50,$51);
    break;
   }
   $52 = (_strcasecmp($line,3771)|0);
   $53 = ($52|0)==(0);
   if ($53) {
    $54 = (_strlen($line)|0);
    $55 = (($line) + ($54)|0);
    $56 = ((($55)) + 1|0);
    $no = $56;
    $ne = 0;
    $57 = $no;
    (_strtok($57,3744)|0);
    $58 = $no;
    $59 = $no;
    $60 = (_strlen($59)|0);
    $61 = (($58) + ($60)|0);
    $62 = ((($61)) + 1|0);
    $ne = $62;
    $63 = $ne;
    $64 = HEAP8[$63>>0]|0;
    $65 = ($64<<24>>24)!=(0);
    $66 = $no;
    if (!($65)) {
     __edit_program($66);
     break;
    }
    $67 = (_strcasecmp($66,3776)|0);
    $68 = ($67|0)==(0);
    if ($68) {
     $69 = $ne;
     __insert_program($69);
     break;
    }
    $70 = $no;
    $71 = (_strcasecmp($70,3779)|0);
    $72 = ($71|0)==(0);
    if (!($72)) {
     break;
    }
    $73 = $ne;
    __alter_program($73);
    break;
   }
   $74 = (_strcasecmp($line,3782)|0);
   $75 = ($74|0)==(0);
   if ($75) {
    $76 = (_strlen($line)|0);
    $77 = (($line) + ($76)|0);
    $78 = ((($77)) + 1|0);
    $path = $78;
    $79 = $path;
    __load_program($79);
    break;
   }
   $80 = (_strcasecmp($line,3787)|0);
   $81 = ($80|0)==(0);
   if ($81) {
    $82 = (_strlen($line)|0);
    $83 = (($line) + ($82)|0);
    $84 = ((($83)) + 1|0);
    $path1 = $84;
    $85 = $path1;
    __save_program($85);
    break;
   }
   $86 = (_strcasecmp($line,3792)|0);
   $87 = ($86|0)==(0);
   if ($87) {
    $88 = (_strlen($line)|0);
    $89 = (($line) + ($88)|0);
    $90 = ((($89)) + 1|0);
    $path2 = $90;
    $91 = $path2;
    __kill_program($91);
    break;
   }
   $92 = (_strcasecmp($line,3797)|0);
   $93 = ($92|0)==(0);
   if ($93) {
    $94 = (_strlen($line)|0);
    $95 = (($line) + ($94)|0);
    $96 = ((($95)) + 1|0);
    $path3 = $96;
    $97 = $path3;
    __list_directory($97);
    break;
   } else {
    (__append_one_line($dup)|0);
    break;
   }
  }
 } while(0);
 $98 = $result;
 STACKTOP = sp;return ($98|0);
}
function __destroy_importing_directories() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $i = 0;
 $0 = HEAP32[184>>2]|0;
 $1 = ($0|0)!=(0|0);
 if (!($1)) {
  STACKTOP = sp;return;
 }
 $i = 0;
 while(1) {
  $2 = $i;
  $3 = HEAP32[184>>2]|0;
  $4 = ((($3)) + 4|0);
  $5 = HEAP32[$4>>2]|0;
  $6 = ($2|0)<($5|0);
  if (!($6)) {
   break;
  }
  $7 = $i;
  $8 = HEAP32[184>>2]|0;
  $9 = HEAP32[$8>>2]|0;
  $10 = (($9) + ($7<<2)|0);
  $11 = HEAP32[$10>>2]|0;
  _free($11);
  $12 = $i;
  $13 = (($12) + 1)|0;
  $i = $13;
 }
 $14 = HEAP32[184>>2]|0;
 $15 = HEAP32[$14>>2]|0;
 _free($15);
 $16 = HEAP32[184>>2]|0;
 _free($16);
 HEAP32[184>>2] = 0;
 STACKTOP = sp;return;
}
function __destroy_code() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $i = 0;
 $0 = HEAP32[188>>2]|0;
 $1 = ($0|0)!=(0|0);
 if (!($1)) {
  ___assert_fail((1900|0),(1884|0),416,(1905|0));
  // unreachable;
 }
 $i = 0;
 while(1) {
  $2 = $i;
  $3 = HEAP32[188>>2]|0;
  $4 = ((($3)) + 4|0);
  $5 = HEAP32[$4>>2]|0;
  $6 = ($2|0)<($5|0);
  if (!($6)) {
   break;
  }
  $7 = $i;
  $8 = HEAP32[188>>2]|0;
  $9 = HEAP32[$8>>2]|0;
  $10 = (($9) + ($7<<2)|0);
  $11 = HEAP32[$10>>2]|0;
  _free($11);
  $12 = $i;
  $13 = (($12) + 1)|0;
  $i = $13;
 }
 $14 = HEAP32[188>>2]|0;
 $15 = HEAP32[$14>>2]|0;
 _free($15);
 $16 = HEAP32[188>>2]|0;
 _free($16);
 HEAP32[188>>2] = 0;
 STACKTOP = sp;return;
}
function __close_mem_pool() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $i = 0, $s = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $i = 0;
 $s = 0;
 $0 = HEAP32[192>>2]|0;
 $1 = ($0|0)!=(0);
 if (!($1)) {
  STACKTOP = sp;return;
 }
 $i = 0;
 while(1) {
  $2 = $i;
  $3 = HEAP32[192>>2]|0;
  $4 = ($2|0)<($3|0);
  if (!($4)) {
   break;
  }
  while(1) {
   $5 = $i;
   $6 = HEAP32[196>>2]|0;
   $7 = (($6) + ($5<<3)|0);
   $8 = ((($7)) + 4|0);
   $9 = HEAP32[$8>>2]|0;
   $s = $9;
   $10 = ($9|0)!=(0|0);
   if (!($10)) {
    break;
   }
   $11 = $s;
   $12 = ((($11)) + -4|0);
   $13 = HEAP32[$12>>2]|0;
   $14 = $i;
   $15 = HEAP32[196>>2]|0;
   $16 = (($15) + ($14<<3)|0);
   $17 = ((($16)) + 4|0);
   HEAP32[$17>>2] = $13;
   $18 = $s;
   $19 = ((($18)) + -4|0);
   _free($19);
  }
  $20 = $i;
  $21 = (($20) + 1)|0;
  $i = $21;
 }
 $22 = HEAP32[196>>2]|0;
 _free($22);
 HEAP32[196>>2] = 0;
 HEAP32[192>>2] = 0;
 STACKTOP = sp;return;
}
function __open_mem_pool() {
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $i = 0, $j = 0, $lst = 0, $s = 0;
 var $szs = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $szs = sp + 104|0;
 $lst = sp + 16|0;
 $i = 0;
 $j = 0;
 $s = 0;
 HEAP32[192>>2] = 0;
 $0 = HEAP32[216>>2]|0;
 $1 = $i;
 $2 = (($1) + 1)|0;
 $i = $2;
 $3 = (($szs) + ($1<<2)|0);
 HEAP32[$3>>2] = $0;
 $4 = HEAP32[220>>2]|0;
 $5 = $i;
 $6 = (($5) + 1)|0;
 $i = $6;
 $7 = (($szs) + ($5<<2)|0);
 HEAP32[$7>>2] = $4;
 $8 = HEAP32[224>>2]|0;
 $9 = $i;
 $10 = (($9) + 1)|0;
 $i = $10;
 $11 = (($szs) + ($9<<2)|0);
 HEAP32[$11>>2] = $8;
 $12 = HEAP32[228>>2]|0;
 $13 = $i;
 $14 = (($13) + 1)|0;
 $i = $14;
 $15 = (($szs) + ($13<<2)|0);
 HEAP32[$15>>2] = $12;
 $16 = HEAP32[232>>2]|0;
 $17 = $i;
 $18 = (($17) + 1)|0;
 $i = $18;
 $19 = (($szs) + ($17<<2)|0);
 HEAP32[$19>>2] = $16;
 $20 = HEAP32[236>>2]|0;
 $21 = $i;
 $22 = (($21) + 1)|0;
 $i = $22;
 $23 = (($szs) + ($21<<2)|0);
 HEAP32[$23>>2] = $20;
 $24 = HEAP32[240>>2]|0;
 $25 = $i;
 $26 = (($25) + 1)|0;
 $i = $26;
 $27 = (($szs) + ($25<<2)|0);
 HEAP32[$27>>2] = $24;
 $28 = HEAP32[244>>2]|0;
 $29 = $i;
 $30 = (($29) + 1)|0;
 $i = $30;
 $31 = (($szs) + ($29<<2)|0);
 HEAP32[$31>>2] = $28;
 $32 = HEAP32[248>>2]|0;
 $33 = $i;
 $34 = (($33) + 1)|0;
 $i = $34;
 $35 = (($szs) + ($33<<2)|0);
 HEAP32[$35>>2] = $32;
 $36 = HEAP32[252>>2]|0;
 $37 = $i;
 $38 = (($37) + 1)|0;
 $i = $38;
 $39 = (($szs) + ($37<<2)|0);
 HEAP32[$39>>2] = $36;
 $40 = HEAP32[256>>2]|0;
 $41 = $i;
 $42 = (($41) + 1)|0;
 $i = $42;
 $43 = (($szs) + ($41<<2)|0);
 HEAP32[$43>>2] = $40;
 $44 = HEAP32[260>>2]|0;
 $45 = $i;
 $46 = (($45) + 1)|0;
 $i = $46;
 $47 = (($szs) + ($45<<2)|0);
 HEAP32[$47>>2] = $44;
 $48 = HEAP32[264>>2]|0;
 $49 = $i;
 $50 = (($49) + 1)|0;
 $i = $50;
 $51 = (($szs) + ($49<<2)|0);
 HEAP32[$51>>2] = $48;
 $52 = HEAP32[268>>2]|0;
 $53 = $i;
 $54 = (($53) + 1)|0;
 $i = $54;
 $55 = (($szs) + ($53<<2)|0);
 HEAP32[$55>>2] = $52;
 $56 = HEAP32[272>>2]|0;
 $57 = $i;
 $58 = (($57) + 1)|0;
 $i = $58;
 $59 = (($szs) + ($57<<2)|0);
 HEAP32[$59>>2] = $56;
 $60 = HEAP32[276>>2]|0;
 $61 = $i;
 $62 = (($61) + 1)|0;
 $i = $62;
 $63 = (($szs) + ($61<<2)|0);
 HEAP32[$63>>2] = $60;
 $64 = HEAP32[280>>2]|0;
 $65 = $i;
 $66 = (($65) + 1)|0;
 $i = $66;
 $67 = (($szs) + ($65<<2)|0);
 HEAP32[$67>>2] = $64;
 $68 = HEAP32[284>>2]|0;
 $69 = $i;
 $70 = (($69) + 1)|0;
 $i = $70;
 $71 = (($szs) + ($69<<2)|0);
 HEAP32[$71>>2] = $68;
 $72 = HEAP32[288>>2]|0;
 $73 = $i;
 $74 = (($73) + 1)|0;
 $i = $74;
 $75 = (($szs) + ($73<<2)|0);
 HEAP32[$75>>2] = $72;
 $76 = HEAP32[292>>2]|0;
 $77 = $i;
 $78 = (($77) + 1)|0;
 $i = $78;
 $79 = (($szs) + ($77<<2)|0);
 HEAP32[$79>>2] = $76;
 $80 = HEAP32[296>>2]|0;
 $81 = $i;
 $82 = (($81) + 1)|0;
 $i = $82;
 $83 = (($szs) + ($81<<2)|0);
 HEAP32[$83>>2] = $80;
 $84 = HEAP32[300>>2]|0;
 $85 = $i;
 $86 = (($85) + 1)|0;
 $i = $86;
 $87 = (($szs) + ($85<<2)|0);
 HEAP32[$87>>2] = $84;
 $88 = $i;
 $89 = ($88|0)==(22);
 if (!($89)) {
  ___assert_fail((1952|0),(1884|0),246,(1960|0));
  // unreachable;
 }
 dest=$lst; stop=dest+88|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $i = 0;
 while(1) {
  $90 = $i;
  $91 = ($90|0)<(22);
  if (!($91)) {
   break;
  }
  $92 = $i;
  $93 = (($szs) + ($92<<2)|0);
  $94 = HEAP32[$93>>2]|0;
  $s = $94;
  $j = 0;
  while(1) {
   $95 = $j;
   $96 = ($95|0)<(22);
   if (!($96)) {
    break;
   }
   $97 = $j;
   $98 = (($lst) + ($97<<2)|0);
   $99 = HEAP32[$98>>2]|0;
   $100 = ($99|0)!=(0);
   if (!($100)) {
    label = 8;
    break;
   }
   $106 = $j;
   $107 = (($lst) + ($106<<2)|0);
   $108 = HEAP32[$107>>2]|0;
   $109 = $s;
   $110 = ($108|0)==($109|0);
   if ($110) {
    break;
   }
   $111 = $j;
   $112 = (($111) + 1)|0;
   $j = $112;
  }
  if ((label|0) == 8) {
   label = 0;
   $101 = $s;
   $102 = $j;
   $103 = (($lst) + ($102<<2)|0);
   HEAP32[$103>>2] = $101;
   $104 = HEAP32[192>>2]|0;
   $105 = (($104) + 1)|0;
   HEAP32[192>>2] = $105;
  }
  $113 = $i;
  $114 = (($113) + 1)|0;
  $i = $114;
 }
 $115 = HEAP32[192>>2]|0;
 _qsort($lst,$115,4,126);
 $116 = HEAP32[192>>2]|0;
 $117 = $116<<3;
 $118 = (_malloc($117)|0);
 HEAP32[196>>2] = $118;
 $119 = HEAP32[196>>2]|0;
 $120 = ($119|0)!=(0|0);
 if (!($120)) {
  _longjmp((16|0),1);
  // unreachable;
 }
 $i = 0;
 while(1) {
  $121 = $i;
  $122 = HEAP32[192>>2]|0;
  $123 = ($121|0)<($122|0);
  if (!($123)) {
   break;
  }
  $124 = $i;
  $125 = (($lst) + ($124<<2)|0);
  $126 = HEAP32[$125>>2]|0;
  $127 = $i;
  $128 = HEAP32[196>>2]|0;
  $129 = (($128) + ($127<<3)|0);
  HEAP32[$129>>2] = $126;
  $130 = $i;
  $131 = HEAP32[196>>2]|0;
  $132 = (($131) + ($130<<3)|0);
  $133 = ((($132)) + 4|0);
  HEAP32[$133>>2] = 0;
  $134 = $i;
  $135 = (($134) + 1)|0;
  $i = $135;
 }
 STACKTOP = sp;return;
}
function __pop_mem($s) {
 $s = $s|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $8 = 0, $9 = 0, $i = 0, $pl = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $s;
 $i = 0;
 $pl = 0;
 $result = 0;
 $2 = HEAP32[176>>2]|0;
 $3 = (($2) + 1)|0;
 HEAP32[176>>2] = $3;
 $4 = $1;
 $5 = HEAP32[180>>2]|0;
 $6 = (($5) + ($4))|0;
 HEAP32[180>>2] = $6;
 $7 = HEAP32[192>>2]|0;
 $8 = ($7|0)!=(0);
 L1: do {
  if ($8) {
   $i = 0;
   while(1) {
    $9 = $i;
    $10 = HEAP32[192>>2]|0;
    $11 = ($9|0)<($10|0);
    if (!($11)) {
     break L1;
    }
    $12 = $i;
    $13 = HEAP32[196>>2]|0;
    $14 = (($13) + ($12<<3)|0);
    $pl = $14;
    $15 = $1;
    $16 = $pl;
    $17 = HEAP32[$16>>2]|0;
    $18 = ($15>>>0)<=($17>>>0);
    if ($18) {
     break;
    }
    $54 = $i;
    $55 = (($54) + 1)|0;
    $i = $55;
   }
   $19 = $pl;
   $20 = ((($19)) + 4|0);
   $21 = HEAP32[$20>>2]|0;
   $22 = ($21|0)!=(0|0);
   if ($22) {
    $23 = HEAP32[200>>2]|0;
    $24 = (($23) + -1)|0;
    HEAP32[200>>2] = $24;
    $25 = $1;
    $26 = HEAP32[204>>2]|0;
    $27 = (($26) - ($25))|0;
    HEAP32[204>>2] = $27;
    $28 = $pl;
    $29 = ((($28)) + 4|0);
    $30 = HEAP32[$29>>2]|0;
    $result = $30;
    $31 = $result;
    $32 = ((($31)) + -4|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = $pl;
    $35 = ((($34)) + 4|0);
    HEAP32[$35>>2] = $33;
    $36 = $1;
    $37 = $result;
    $38 = ((($37)) + -4|0);
    HEAP32[$38>>2] = $36;
    $39 = $result;
    $0 = $39;
    $69 = $0;
    STACKTOP = sp;return ($69|0);
   }
   $40 = $pl;
   $41 = HEAP32[$40>>2]|0;
   $42 = (4 + ($41))|0;
   $43 = (_malloc($42)|0);
   $44 = ((($43)) + 4|0);
   $result = $44;
   $45 = $result;
   $46 = ($45|0)!=(0|0);
   if (!($46)) {
    _longjmp((16|0),1);
    // unreachable;
   }
   $47 = $result;
   $48 = $47;
   $49 = ($48|0)==(4);
   if ($49) {
    $result = 0;
   } else {
    $50 = $1;
    $51 = $result;
    $52 = ((($51)) + -4|0);
    HEAP32[$52>>2] = $50;
   }
   $53 = $result;
   $0 = $53;
   $69 = $0;
   STACKTOP = sp;return ($69|0);
  }
 } while(0);
 $56 = $1;
 $57 = (4 + ($56))|0;
 $58 = (_malloc($57)|0);
 $59 = ((($58)) + 4|0);
 $result = $59;
 $60 = $result;
 $61 = ($60|0)!=(0|0);
 if (!($61)) {
  _longjmp((16|0),1);
  // unreachable;
 }
 $62 = $result;
 $63 = $62;
 $64 = ($63|0)==(4);
 if ($64) {
  $result = 0;
 } else {
  $65 = $1;
  $66 = $result;
  $67 = ((($66)) + -4|0);
  HEAP32[$67>>2] = $65;
 }
 $68 = $result;
 $0 = $68;
 $69 = $0;
 STACKTOP = sp;return ($69|0);
}
function __push_mem($p) {
 $p = $p|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i = 0, $pl = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $p;
 $i = 0;
 $pl = 0;
 $1 = HEAP32[176>>2]|0;
 $2 = (($1) + -1)|0;
 HEAP32[176>>2] = $2;
 $3 = ($2|0)<(0);
 if ($3) {
  ___assert_fail((1975|0),(1884|0),349,(1997|0));
  // unreachable;
 }
 $4 = $0;
 $5 = ((($4)) + -4|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = HEAP32[180>>2]|0;
 $8 = (($7) - ($6))|0;
 HEAP32[180>>2] = $8;
 $9 = $0;
 $10 = $0;
 $11 = ((($10)) + -4|0);
 $12 = HEAP32[$11>>2]|0;
 _memset(($9|0),0,($12|0))|0;
 $13 = HEAP32[192>>2]|0;
 $14 = ($13|0)!=(0);
 L4: do {
  if ($14) {
   $i = 0;
   while(1) {
    $15 = $i;
    $16 = HEAP32[192>>2]|0;
    $17 = ($15|0)<($16|0);
    if (!($17)) {
     break L4;
    }
    $18 = $i;
    $19 = HEAP32[196>>2]|0;
    $20 = (($19) + ($18<<3)|0);
    $pl = $20;
    $21 = $0;
    $22 = ((($21)) + -4|0);
    $23 = HEAP32[$22>>2]|0;
    $24 = $pl;
    $25 = HEAP32[$24>>2]|0;
    $26 = ($23>>>0)<=($25>>>0);
    if ($26) {
     break;
    }
    $42 = $i;
    $43 = (($42) + 1)|0;
    $i = $43;
   }
   $27 = HEAP32[200>>2]|0;
   $28 = (($27) + 1)|0;
   HEAP32[200>>2] = $28;
   $29 = $0;
   $30 = ((($29)) + -4|0);
   $31 = HEAP32[$30>>2]|0;
   $32 = HEAP32[204>>2]|0;
   $33 = (($32) + ($31))|0;
   HEAP32[204>>2] = $33;
   $34 = $pl;
   $35 = ((($34)) + 4|0);
   $36 = HEAP32[$35>>2]|0;
   $37 = $0;
   $38 = ((($37)) + -4|0);
   HEAP32[$38>>2] = $36;
   $39 = $0;
   $40 = $pl;
   $41 = ((($40)) + 4|0);
   HEAP32[$41>>2] = $39;
   __tidy_mem_pool(0);
   STACKTOP = sp;return;
  }
 } while(0);
 $44 = $0;
 $45 = ((($44)) + -4|0);
 _free($45);
 STACKTOP = sp;return;
}
function __create_code() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $result = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $result = 0;
 $0 = (_malloc(12)|0);
 $result = $0;
 $1 = $result;
 $2 = ($1|0)!=(0|0);
 if (!($2)) {
  _longjmp((16|0),1);
  // unreachable;
 }
 $3 = $result;
 $4 = ((($3)) + 4|0);
 HEAP32[$4>>2] = 0;
 $5 = $result;
 $6 = ((($5)) + 8|0);
 HEAP32[$6>>2] = 16;
 $7 = $result;
 $8 = ((($7)) + 8|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = $9<<2;
 $11 = (_malloc($10)|0);
 $12 = $result;
 HEAP32[$12>>2] = $11;
 $13 = $result;
 $14 = HEAP32[$13>>2]|0;
 $15 = ($14|0)!=(0|0);
 if ($15) {
  $16 = $result;
  HEAP32[188>>2] = $16;
  $17 = $result;
  STACKTOP = sp;return ($17|0);
 } else {
  _longjmp((16|0),1);
  // unreachable;
 }
 return (0)|0;
}
function __on_prev_stepped($s,$l,$f,$p,$row,$col) {
 $s = $s|0;
 $l = $l|0;
 $f = $f|0;
 $p = $p|0;
 $row = $row|0;
 $col = $col|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $l;
 $2 = $f;
 $3 = $p;
 $4 = $row;
 $5 = $col;
 STACKTOP = sp;return 0;
}
function __on_post_stepped($s,$l,$f,$p,$row,$col) {
 $s = $s|0;
 $l = $l|0;
 $f = $f|0;
 $p = $p|0;
 $row = $row|0;
 $col = $col|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $l;
 $2 = $f;
 $3 = $p;
 $4 = $row;
 $5 = $col;
 STACKTOP = sp;return 0;
}
function __on_error($s,$e,$m,$f,$p,$row,$col,$abort_code) {
 $s = $s|0;
 $e = $e|0;
 $m = $m|0;
 $f = $f|0;
 $p = $p|0;
 $row = $row|0;
 $col = $col|0;
 $abort_code = $abort_code|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $type = 0, $vararg_buffer = 0, $vararg_buffer16 = 0, $vararg_buffer7 = 0, $vararg_ptr1 = 0, $vararg_ptr10 = 0, $vararg_ptr11 = 0, $vararg_ptr12 = 0, $vararg_ptr13 = 0, $vararg_ptr14 = 0, $vararg_ptr15 = 0, $vararg_ptr19 = 0, $vararg_ptr2 = 0, $vararg_ptr20 = 0, $vararg_ptr21 = 0, $vararg_ptr22 = 0;
 var $vararg_ptr23 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer16 = sp + 64|0;
 $vararg_buffer7 = sp + 32|0;
 $vararg_buffer = sp;
 $0 = $s;
 $1 = $e;
 $2 = $m;
 $3 = $f;
 $4 = $p;
 $5 = $row;
 $6 = $col;
 $7 = $abort_code;
 $8 = $7;
 $9 = ($8|0)==(2);
 $10 = $9 ? 2007 : 2015;
 $type = $10;
 $11 = $1;
 $12 = ($11|0)==(0);
 if ($12) {
  STACKTOP = sp;return;
 }
 $13 = $3;
 $14 = ($13|0)!=(0|0);
 if (!($14)) {
  $32 = $type;
  $33 = $5;
  $34 = $33&65535;
  $35 = $6;
  $36 = $35&65535;
  $37 = $1;
  $38 = $1;
  $39 = ($38|0)==(68);
  $40 = $7;
  $41 = (($40) - 201)|0;
  $42 = $39 ? $41 : $40;
  $43 = $2;
  HEAP32[$vararg_buffer16>>2] = $32;
  $vararg_ptr19 = ((($vararg_buffer16)) + 4|0);
  HEAP32[$vararg_ptr19>>2] = $34;
  $vararg_ptr20 = ((($vararg_buffer16)) + 8|0);
  HEAP32[$vararg_ptr20>>2] = $36;
  $vararg_ptr21 = ((($vararg_buffer16)) + 12|0);
  HEAP32[$vararg_ptr21>>2] = $37;
  $vararg_ptr22 = ((($vararg_buffer16)) + 16|0);
  HEAP32[$vararg_ptr22>>2] = $42;
  $vararg_ptr23 = ((($vararg_buffer16)) + 20|0);
  HEAP32[$vararg_ptr23>>2] = $43;
  (_printf(2179,$vararg_buffer16)|0);
  STACKTOP = sp;return;
 }
 $15 = $1;
 $16 = ($15|0)==(50);
 $17 = $type;
 $18 = $5;
 $19 = $18&65535;
 $20 = $6;
 $21 = $20&65535;
 $22 = $3;
 $23 = $1;
 if ($16) {
  $24 = $7;
  $25 = $2;
  HEAP32[$vararg_buffer>>2] = $17;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = $19;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = $21;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $22;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $23;
  $vararg_ptr5 = ((($vararg_buffer)) + 20|0);
  HEAP32[$vararg_ptr5>>2] = $24;
  $vararg_ptr6 = ((($vararg_buffer)) + 24|0);
  HEAP32[$vararg_ptr6>>2] = $25;
  (_printf(2021,$vararg_buffer)|0);
  STACKTOP = sp;return;
 } else {
  $26 = $1;
  $27 = ($26|0)==(68);
  $28 = $7;
  $29 = (($28) - 201)|0;
  $30 = $27 ? $29 : $28;
  $31 = $2;
  HEAP32[$vararg_buffer7>>2] = $17;
  $vararg_ptr10 = ((($vararg_buffer7)) + 4|0);
  HEAP32[$vararg_ptr10>>2] = $19;
  $vararg_ptr11 = ((($vararg_buffer7)) + 8|0);
  HEAP32[$vararg_ptr11>>2] = $21;
  $vararg_ptr12 = ((($vararg_buffer7)) + 12|0);
  HEAP32[$vararg_ptr12>>2] = $22;
  $vararg_ptr13 = ((($vararg_buffer7)) + 16|0);
  HEAP32[$vararg_ptr13>>2] = $23;
  $vararg_ptr14 = ((($vararg_buffer7)) + 20|0);
  HEAP32[$vararg_ptr14>>2] = $30;
  $vararg_ptr15 = ((($vararg_buffer7)) + 24|0);
  HEAP32[$vararg_ptr15>>2] = $31;
  (_printf(2100,$vararg_buffer7)|0);
  STACKTOP = sp;return;
 }
}
function __on_import($s,$p) {
 $s = $s|0;
 $p = $p|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $s;
 $2 = $p;
 $3 = HEAP32[184>>2]|0;
 $4 = ($3|0)!=(0|0);
 do {
  if ($4) {
   $5 = $1;
   $6 = $2;
   $7 = (__try_import($5,$6)|0);
   $8 = ($7<<24>>24)!=(0);
   if ($8) {
    $0 = 0;
    break;
   } else {
    $0 = 3;
    break;
   }
  } else {
   $0 = 3;
  }
 } while(0);
 $9 = $0;
 STACKTOP = sp;return ($9|0);
}
function _now($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__hr = 0, $__hr1 = 0;
 var $__hr2 = 0, $__hr3 = 0, $__hr4 = 0, $arg = 0, $buf = 0, $ct = 0, $or$cond = 0, $result = 0, $timeinfo = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ct = sp + 28|0;
 $buf = sp + 48|0;
 $arg = sp + 20|0;
 $1 = $s;
 $2 = $l;
 $result = 0;
 $timeinfo = 0;
 HEAP32[$arg>>2] = 0;
 $3 = $1;
 $4 = ($3|0)!=(0|0);
 $5 = $2;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(1884|0),1276,(1921|0));
  // unreachable;
 }
 $7 = $1;
 $8 = $2;
 $9 = (_mb_attempt_open_bracket($7,$8)|0);
 $__hr = $9;
 $10 = $__hr;
 $11 = ($10|0)!=(0);
 if ($11) {
  $12 = $__hr;
  $0 = $12;
  $57 = $0;
  STACKTOP = sp;return ($57|0);
 }
 $13 = $1;
 $14 = $2;
 $15 = (_mb_has_arg($13,$14)|0);
 $16 = ($15|0)!=(0);
 if ($16) {
  $17 = $1;
  $18 = $2;
  $19 = (_mb_pop_string($17,$18,$arg)|0);
  $__hr1 = $19;
  $20 = $__hr1;
  $21 = ($20|0)!=(0);
  if ($21) {
   $22 = $__hr1;
   $0 = $22;
   $57 = $0;
   STACKTOP = sp;return ($57|0);
  }
 }
 $23 = $1;
 $24 = $2;
 $25 = (_mb_attempt_close_bracket($23,$24)|0);
 $__hr2 = $25;
 $26 = $__hr2;
 $27 = ($26|0)!=(0);
 if ($27) {
  $28 = $__hr2;
  $0 = $28;
  $57 = $0;
  STACKTOP = sp;return ($57|0);
 }
 (_time(($ct|0))|0);
 $29 = (_localtime(($ct|0))|0);
 $timeinfo = $29;
 $30 = HEAP32[$arg>>2]|0;
 $31 = ($30|0)!=(0|0);
 if ($31) {
  $32 = HEAP32[$arg>>2]|0;
  $33 = $timeinfo;
  (_strftime(($buf|0),80,($32|0),($33|0))|0);
  $34 = $1;
  $35 = $2;
  $36 = (_strlen($buf)|0);
  $37 = (($36) + 1)|0;
  $38 = (_mb_memdup($buf,$37)|0);
  $39 = (_mb_push_string($34,$35,$38)|0);
  $__hr3 = $39;
  $40 = $__hr3;
  $41 = ($40|0)!=(0);
  if ($41) {
   $42 = $__hr3;
   $0 = $42;
   $57 = $0;
   STACKTOP = sp;return ($57|0);
  }
 } else {
  $43 = $timeinfo;
  $44 = (_asctime(($43|0))|0);
  HEAP32[$arg>>2] = $44;
  $45 = $1;
  $46 = $2;
  $47 = HEAP32[$arg>>2]|0;
  $48 = HEAP32[$arg>>2]|0;
  $49 = (_strlen($48)|0);
  $50 = (($49) + 1)|0;
  $51 = (_mb_memdup($47,$50)|0);
  $52 = (_mb_push_string($45,$46,$51)|0);
  $__hr4 = $52;
  $53 = $__hr4;
  $54 = ($53|0)!=(0);
  if ($54) {
   $55 = $__hr4;
   $0 = $55;
   $57 = $0;
   STACKTOP = sp;return ($57|0);
  }
 }
 $56 = $result;
 $0 = $56;
 $57 = $0;
 STACKTOP = sp;return ($57|0);
}
function _os($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__hr = 0, $__hr1 = 0, $__hr2 = 0, $or$cond = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $s;
 $2 = $l;
 $result = 0;
 $3 = $1;
 $4 = ($3|0)!=(0|0);
 $5 = $2;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(1884|0),1302,(1925|0));
  // unreachable;
 }
 $7 = $1;
 $8 = $2;
 $9 = (_mb_attempt_open_bracket($7,$8)|0);
 $__hr = $9;
 $10 = $__hr;
 $11 = ($10|0)!=(0);
 if ($11) {
  $12 = $__hr;
  $0 = $12;
  $27 = $0;
  STACKTOP = sp;return ($27|0);
 }
 $13 = $1;
 $14 = $2;
 $15 = (_mb_attempt_close_bracket($13,$14)|0);
 $__hr1 = $15;
 $16 = $__hr1;
 $17 = ($16|0)!=(0);
 if ($17) {
  $18 = $__hr1;
  $0 = $18;
  $27 = $0;
  STACKTOP = sp;return ($27|0);
 }
 $19 = $1;
 $20 = $2;
 $21 = (_mb_memdup(2263,5)|0);
 $22 = (_mb_push_string($19,$20,$21)|0);
 $__hr2 = $22;
 $23 = $__hr2;
 $24 = ($23|0)!=(0);
 if ($24) {
  $25 = $__hr2;
  $0 = $25;
  $27 = $0;
  STACKTOP = sp;return ($27|0);
 } else {
  $26 = $result;
  $0 = $26;
  $27 = $0;
  STACKTOP = sp;return ($27|0);
 }
 return (0)|0;
}
function _sys($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__hr = 0, $__hr1 = 0, $__hr2 = 0, $arg = 0, $or$cond = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $arg = sp + 12|0;
 $1 = $s;
 $2 = $l;
 $result = 0;
 HEAP32[$arg>>2] = 0;
 $3 = $1;
 $4 = ($3|0)!=(0|0);
 $5 = $2;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(1884|0),1317,(1928|0));
  // unreachable;
 }
 $7 = $1;
 $8 = $2;
 $9 = (_mb_attempt_open_bracket($7,$8)|0);
 $__hr = $9;
 $10 = $__hr;
 $11 = ($10|0)!=(0);
 if ($11) {
  $12 = $__hr;
  $0 = $12;
  $29 = $0;
  STACKTOP = sp;return ($29|0);
 }
 $13 = $1;
 $14 = $2;
 $15 = (_mb_pop_string($13,$14,$arg)|0);
 $__hr1 = $15;
 $16 = $__hr1;
 $17 = ($16|0)!=(0);
 if ($17) {
  $18 = $__hr1;
  $0 = $18;
  $29 = $0;
  STACKTOP = sp;return ($29|0);
 }
 $19 = $1;
 $20 = $2;
 $21 = (_mb_attempt_close_bracket($19,$20)|0);
 $__hr2 = $21;
 $22 = $__hr2;
 $23 = ($22|0)!=(0);
 if ($23) {
  $24 = $__hr2;
  $0 = $24;
  $29 = $0;
  STACKTOP = sp;return ($29|0);
 }
 $25 = HEAP32[$arg>>2]|0;
 $26 = ($25|0)!=(0|0);
 if ($26) {
  $27 = HEAP32[$arg>>2]|0;
  (_system(($27|0))|0);
 }
 $28 = $result;
 $0 = $28;
 $29 = $0;
 STACKTOP = sp;return ($29|0);
}
function _trace($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $__hr = 0, $__hr1 = 0, $__hr2 = 0, $frames = 0, $i = 0, $or$cond = 0, $result = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer2 = sp + 8|0;
 $vararg_buffer = sp;
 $frames = sp + 32|0;
 $1 = $s;
 $2 = $l;
 $result = 0;
 $i = 0;
 $3 = $1;
 $4 = ($3|0)!=(0|0);
 $5 = $2;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(1884|0),1336,(1932|0));
  // unreachable;
 }
 dest=$frames; stop=dest+64|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $7 = $1;
 $8 = $2;
 $9 = (_mb_attempt_open_bracket($7,$8)|0);
 $__hr = $9;
 $10 = $__hr;
 $11 = ($10|0)!=(0);
 if ($11) {
  $12 = $__hr;
  $0 = $12;
  $41 = $0;
  STACKTOP = sp;return ($41|0);
 }
 $13 = $1;
 $14 = $2;
 $15 = (_mb_attempt_close_bracket($13,$14)|0);
 $__hr1 = $15;
 $16 = $__hr1;
 $17 = ($16|0)!=(0);
 if ($17) {
  $18 = $__hr1;
  $0 = $18;
  $41 = $0;
  STACKTOP = sp;return ($41|0);
 }
 $19 = $1;
 $20 = (_mb_debug_get_stack_trace($19,$frames,16)|0);
 $__hr2 = $20;
 $21 = $__hr2;
 $22 = ($21|0)!=(0);
 if ($22) {
  $23 = $__hr2;
  $0 = $23;
  $41 = $0;
  STACKTOP = sp;return ($41|0);
 }
 $i = 1;
 while(1) {
  $24 = $i;
  $25 = ($24>>>0)<(16);
  if (!($25)) {
   break;
  }
  $26 = $i;
  $27 = (($frames) + ($26<<2)|0);
  $28 = HEAP32[$27>>2]|0;
  $29 = ($28|0)!=(0|0);
  if ($29) {
   $30 = $i;
   $31 = (($frames) + ($30<<2)|0);
   $32 = HEAP32[$31>>2]|0;
   HEAP32[$vararg_buffer>>2] = $32;
   (_printf(14562,$vararg_buffer)|0);
  }
  $33 = $i;
  $34 = (($33) + 1)|0;
  $i = $34;
  $35 = ($34>>>0)<(16);
  if (!($35)) {
   continue;
  }
  $36 = $i;
  $37 = (($frames) + ($36<<2)|0);
  $38 = HEAP32[$37>>2]|0;
  $39 = ($38|0)!=(0|0);
  if (!($39)) {
   continue;
  }
  (_printf(2268,$vararg_buffer2)|0);
 }
 $40 = $result;
 $0 = $40;
 $41 = $0;
 STACKTOP = sp;return ($41|0);
}
function _raise($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $__hr = 0, $__hr1 = 0, $__hr2 = 0, $__hr3 = 0, $err = 0, $or$cond = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $err = sp + 16|0;
 $1 = $s;
 $2 = $l;
 $result = 201;
 HEAP32[$err>>2] = 0;
 $3 = $1;
 $4 = ($3|0)!=(0|0);
 $5 = $2;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(1884|0),1362,(1938|0));
  // unreachable;
 }
 $7 = $1;
 $8 = $2;
 $9 = (_mb_attempt_open_bracket($7,$8)|0);
 $__hr = $9;
 $10 = $__hr;
 $11 = ($10|0)!=(0);
 if ($11) {
  $12 = $__hr;
  $0 = $12;
  $42 = $0;
  STACKTOP = sp;return ($42|0);
 }
 $13 = $1;
 $14 = $2;
 $15 = (_mb_has_arg($13,$14)|0);
 $16 = ($15|0)!=(0);
 if ($16) {
  $17 = $1;
  $18 = $2;
  $19 = (_mb_pop_int($17,$18,$err)|0);
  $__hr1 = $19;
  $20 = $__hr1;
  $21 = ($20|0)!=(0);
  if ($21) {
   $22 = $__hr1;
   $0 = $22;
   $42 = $0;
   STACKTOP = sp;return ($42|0);
  }
 }
 $23 = $1;
 $24 = $2;
 $25 = (_mb_attempt_close_bracket($23,$24)|0);
 $__hr2 = $25;
 $26 = $__hr2;
 $27 = ($26|0)!=(0);
 if ($27) {
  $28 = $__hr2;
  $0 = $28;
  $42 = $0;
  STACKTOP = sp;return ($42|0);
 }
 $29 = $1;
 $30 = $2;
 $31 = HEAP32[$err>>2]|0;
 $32 = (_mb_push_int($29,$30,$31)|0);
 $__hr3 = $32;
 $33 = $__hr3;
 $34 = ($33|0)!=(0);
 if ($34) {
  $35 = $__hr3;
  $0 = $35;
  $42 = $0;
  STACKTOP = sp;return ($42|0);
 } else {
  $36 = $1;
  $37 = $2;
  $38 = HEAP32[$err>>2]|0;
  $39 = (201 + ($38))|0;
  $40 = (_mb_raise_error($36,$37,68,$39)|0);
  $result = $40;
  $41 = $result;
  $0 = $41;
  $42 = $0;
  STACKTOP = sp;return ($42|0);
 }
 return (0)|0;
}
function _gc($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__hr = 0, $__hr1 = 0, $__hr2 = 0, $__hr3 = 0, $collected = 0, $or$cond = 0, $result = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $collected = sp + 16|0;
 $1 = $s;
 $2 = $l;
 $result = 0;
 HEAP32[$collected>>2] = 0;
 $3 = $1;
 $4 = ($3|0)!=(0|0);
 $5 = $2;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(1884|0),1383,(1944|0));
  // unreachable;
 }
 $7 = $1;
 $8 = $2;
 $9 = (_mb_attempt_open_bracket($7,$8)|0);
 $__hr = $9;
 $10 = $__hr;
 $11 = ($10|0)!=(0);
 if ($11) {
  $12 = $__hr;
  $0 = $12;
  $32 = $0;
  STACKTOP = sp;return ($32|0);
 }
 $13 = $1;
 $14 = $2;
 $15 = (_mb_attempt_close_bracket($13,$14)|0);
 $__hr1 = $15;
 $16 = $__hr1;
 $17 = ($16|0)!=(0);
 if ($17) {
  $18 = $__hr1;
  $0 = $18;
  $32 = $0;
  STACKTOP = sp;return ($32|0);
 }
 $19 = $1;
 $20 = (_mb_gc($19,$collected)|0);
 $__hr2 = $20;
 $21 = $__hr2;
 $22 = ($21|0)!=(0);
 if ($22) {
  $23 = $__hr2;
  $0 = $23;
  $32 = $0;
  STACKTOP = sp;return ($32|0);
 }
 $24 = $1;
 $25 = $2;
 $26 = HEAP32[$collected>>2]|0;
 $27 = (_mb_push_int($24,$25,$26)|0);
 $__hr3 = $27;
 $28 = $__hr3;
 $29 = ($28|0)!=(0);
 if ($29) {
  $30 = $__hr3;
  $0 = $30;
  $32 = $0;
  STACKTOP = sp;return ($32|0);
 } else {
  $31 = $result;
  $0 = $31;
  $32 = $0;
  STACKTOP = sp;return ($32|0);
 }
 return (0)|0;
}
function _beep($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $__hr = 0, $__hr1 = 0, $or$cond = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $s;
 $2 = $l;
 $result = 0;
 $3 = $1;
 $4 = ($3|0)!=(0|0);
 $5 = $2;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(1884|0),1399,(1947|0));
  // unreachable;
 }
 $7 = $1;
 $8 = $2;
 $9 = (_mb_attempt_func_begin($7,$8)|0);
 $__hr = $9;
 $10 = $__hr;
 $11 = ($10|0)!=(0);
 if ($11) {
  $12 = $__hr;
  $0 = $12;
  $20 = $0;
  STACKTOP = sp;return ($20|0);
 }
 $13 = $1;
 $14 = $2;
 $15 = (_mb_attempt_func_end($13,$14)|0);
 $__hr1 = $15;
 $16 = $__hr1;
 $17 = ($16|0)!=(0);
 if ($17) {
  $18 = $__hr1;
  $0 = $18;
  $20 = $0;
  STACKTOP = sp;return ($20|0);
 } else {
  (_putchar(7)|0);
  $19 = $result;
  $0 = $19;
  $20 = $0;
  STACKTOP = sp;return ($20|0);
 }
 return (0)|0;
}
function __cmp_size_t($l,$r) {
 $l = $l|0;
 $r = $r|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $pl = 0, $pr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $l;
 $2 = $r;
 $3 = $1;
 $pl = $3;
 $4 = $2;
 $pr = $4;
 $5 = $pl;
 $6 = HEAP32[$5>>2]|0;
 $7 = $pr;
 $8 = HEAP32[$7>>2]|0;
 $9 = ($6>>>0)>($8>>>0);
 do {
  if ($9) {
   $0 = 1;
  } else {
   $10 = $pl;
   $11 = HEAP32[$10>>2]|0;
   $12 = $pr;
   $13 = HEAP32[$12>>2]|0;
   $14 = ($11>>>0)<($13>>>0);
   if ($14) {
    $0 = -1;
    break;
   } else {
    $0 = 0;
    break;
   }
  }
 } while(0);
 $15 = $0;
 STACKTOP = sp;return ($15|0);
}
function __tidy_mem_pool($force) {
 $force = $force|0;
 var $$old = 0, $$old1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i = 0, $or$cond = 0, $s = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $force;
 $i = 0;
 $s = 0;
 $1 = $0;
 $2 = ($1<<24>>24)!=(0);
 if ($2) {
  label = 6;
 } else {
  $3 = HEAP32[208>>2]|0;
  $4 = ($3|0)>(0);
  if ($4) {
   $5 = HEAP32[200>>2]|0;
   $6 = HEAP32[208>>2]|0;
   $7 = ($5|0)<($6|0);
   if ($7) {
    STACKTOP = sp;return;
   }
  }
  $8 = HEAP32[212>>2]|0;
  $9 = ($8|0)>(0);
  if ($9) {
   $10 = HEAP32[204>>2]|0;
   $11 = HEAP32[212>>2]|0;
   $12 = ($10|0)>=($11|0);
   $13 = HEAP32[192>>2]|0;
   $14 = ($13|0)!=(0);
   $or$cond = $12 & $14;
   if (!($or$cond)) {
    STACKTOP = sp;return;
   }
  } else {
   label = 6;
  }
 }
 if ((label|0) == 6) {
  $$old = HEAP32[192>>2]|0;
  $$old1 = ($$old|0)!=(0);
  if (!($$old1)) {
   STACKTOP = sp;return;
  }
 }
 $i = 0;
 while(1) {
  $15 = $i;
  $16 = HEAP32[192>>2]|0;
  $17 = ($15|0)<($16|0);
  if (!($17)) {
   break;
  }
  while(1) {
   $18 = $i;
   $19 = HEAP32[196>>2]|0;
   $20 = (($19) + ($18<<3)|0);
   $21 = ((($20)) + 4|0);
   $22 = HEAP32[$21>>2]|0;
   $s = $22;
   $23 = ($22|0)!=(0|0);
   if (!($23)) {
    break;
   }
   $24 = $s;
   $25 = ((($24)) + -4|0);
   $26 = HEAP32[$25>>2]|0;
   $27 = $i;
   $28 = HEAP32[196>>2]|0;
   $29 = (($28) + ($27<<3)|0);
   $30 = ((($29)) + 4|0);
   HEAP32[$30>>2] = $26;
   $31 = $s;
   $32 = ((($31)) + -4|0);
   _free($32);
  }
  $33 = $i;
  $34 = (($33) + 1)|0;
  $i = $34;
 }
 HEAP32[200>>2] = 0;
 HEAP32[204>>2] = 0;
 STACKTOP = sp;return;
}
function __try_import($s,$p) {
 $s = $s|0;
 $p = $p|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $buf = 0, $d = 0, $i = 0, $m = 0, $n = 0, $result = 0, $t = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $p;
 $result = 0;
 $i = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 if (!($3)) {
  ___assert_fail((4803|0),(1884|0),622,(2246|0));
  // unreachable;
 }
 $i = 0;
 while(1) {
  $4 = $i;
  $5 = HEAP32[184>>2]|0;
  $6 = ((($5)) + 4|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = ($4|0)<($7|0);
  if (!($8)) {
   label = 11;
   break;
  }
  $t = 0;
  $9 = $i;
  $10 = HEAP32[184>>2]|0;
  $11 = HEAP32[$10>>2]|0;
  $12 = (($11) + ($9<<2)|0);
  $13 = HEAP32[$12>>2]|0;
  $d = $13;
  $14 = $d;
  $15 = (_strlen($14)|0);
  $m = $15;
  $16 = $1;
  $17 = (_strlen($16)|0);
  $n = $17;
  $18 = $m;
  $19 = $n;
  $20 = (($18) + ($19))|0;
  $21 = (($20) + 1)|0;
  $22 = (__pop_mem($21)|0);
  $buf = $22;
  $23 = $buf;
  $24 = $d;
  $25 = $m;
  _memcpy(($23|0),($24|0),($25|0))|0;
  $26 = $buf;
  $27 = $m;
  $28 = (($26) + ($27)|0);
  $29 = $1;
  $30 = $n;
  _memcpy(($28|0),($29|0),($30|0))|0;
  $31 = $m;
  $32 = $n;
  $33 = (($31) + ($32))|0;
  $34 = $buf;
  $35 = (($34) + ($33)|0);
  HEAP8[$35>>0] = 0;
  $36 = $buf;
  $37 = (__load_file($36)|0);
  $t = $37;
  $38 = $t;
  $39 = ($38|0)!=(0|0);
  if ($39) {
   $40 = $0;
   $41 = $t;
   $42 = (_mb_load_string($40,$41,1)|0);
   $43 = ($42|0)==(0);
   if ($43) {
    $result = 1;
   }
   $44 = $t;
   _free($44);
  }
  $45 = $buf;
  __push_mem($45);
  $46 = $result;
  $47 = ($46<<24>>24)!=(0);
  if ($47) {
   label = 11;
   break;
  }
  $48 = $i;
  $49 = (($48) + 1)|0;
  $i = $49;
 }
 if ((label|0) == 11) {
  $50 = $result;
  STACKTOP = sp;return ($50|0);
 }
 return (0)|0;
}
function __load_file($path) {
 $path = $path|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $curpos = 0, $fp = 0, $l = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $path;
 $fp = 0;
 $result = 0;
 $curpos = 0;
 $l = 0;
 $1 = $0;
 $2 = ($1|0)!=(0|0);
 if (!($2)) {
  ___assert_fail((2258|0),(1884|0),504,(6461|0));
  // unreachable;
 }
 $3 = $0;
 $4 = (_fopen($3,6472)|0);
 $fp = $4;
 $5 = $fp;
 $6 = ($5|0)!=(0|0);
 if (!($6)) {
  $26 = $result;
  STACKTOP = sp;return ($26|0);
 }
 $7 = $fp;
 $8 = (_ftell($7)|0);
 $curpos = $8;
 $9 = $fp;
 (_fseek($9,0,2)|0);
 $10 = $fp;
 $11 = (_ftell($10)|0);
 $l = $11;
 $12 = $fp;
 $13 = $curpos;
 (_fseek($12,$13,0)|0);
 $14 = $l;
 $15 = (($14) + 1)|0;
 $16 = (_malloc($15)|0);
 $result = $16;
 $17 = $result;
 $18 = ($17|0)!=(0|0);
 if (!($18)) {
  _longjmp((16|0),1);
  // unreachable;
 }
 $19 = $result;
 $20 = $l;
 $21 = $fp;
 (_fread($19,1,$20,$21)|0);
 $22 = $fp;
 (_fclose($22)|0);
 $23 = $l;
 $24 = $result;
 $25 = (($24) + ($23)|0);
 HEAP8[$25>>0] = 0;
 $26 = $result;
 STACKTOP = sp;return ($26|0);
}
function __set_importing_directories($dirs) {
 $dirs = $dirs|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $as = 0, $buf = 0, $l = 0, $p = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $dirs;
 $result = 0;
 $2 = $1;
 $3 = ($2|0)!=(0|0);
 if (!($3)) {
  $4 = $result;
  $0 = $4;
  $123 = $0;
  STACKTOP = sp;return ($123|0);
 }
 $5 = (_malloc(12)|0);
 $result = $5;
 $6 = $result;
 $7 = ($6|0)!=(0|0);
 if (!($7)) {
  _longjmp((16|0),1);
  // unreachable;
 }
 $8 = $result;
 $9 = ((($8)) + 4|0);
 HEAP32[$9>>2] = 0;
 $10 = $result;
 $11 = ((($10)) + 8|0);
 HEAP32[$11>>2] = 16;
 $12 = $result;
 $13 = ((($12)) + 8|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = $14<<2;
 $16 = (_malloc($15)|0);
 $17 = $result;
 HEAP32[$17>>2] = $16;
 $18 = $result;
 $19 = HEAP32[$18>>2]|0;
 $20 = ($19|0)!=(0|0);
 if (!($20)) {
  _longjmp((16|0),1);
  // unreachable;
 }
 L10: while(1) {
  $21 = $1;
  $22 = ($21|0)!=(0|0);
  if (!($22)) {
   break;
  }
  $23 = $1;
  $24 = HEAP8[$23>>0]|0;
  $25 = $24 << 24 >> 24;
  $26 = ($25|0)!=(0);
  if (!($26)) {
   break;
  }
  $l = 0;
  $buf = 0;
  $as = 0;
  $27 = $1;
  $p = $27;
  $28 = $1;
  $29 = (_strchr($28,59)|0);
  $1 = $29;
  $30 = $1;
  $31 = ($30|0)!=(0|0);
  if ($31) {
   $32 = $1;
   $33 = $p;
   $34 = $32;
   $35 = $33;
   $36 = (($34) - ($35))|0;
   $l = $36;
   $37 = $1;
   $38 = HEAP8[$37>>0]|0;
   $39 = $38 << 24 >> 24;
   $40 = ($39|0)==(59);
   if ($40) {
    $41 = $1;
    $42 = ((($41)) + 1|0);
    $1 = $42;
   }
  } else {
   $43 = $p;
   $44 = (_strlen($43)|0);
   $l = $44;
  }
  $45 = $result;
  $46 = ((($45)) + 4|0);
  $47 = HEAP32[$46>>2]|0;
  $48 = (($47) + 1)|0;
  $49 = $result;
  $50 = ((($49)) + 8|0);
  $51 = HEAP32[$50>>2]|0;
  $52 = ($48|0)==($51|0);
  if ($52) {
   $53 = $result;
   $54 = ((($53)) + 8|0);
   $55 = HEAP32[$54>>2]|0;
   $56 = (($55) + 16)|0;
   HEAP32[$54>>2] = $56;
   $57 = $result;
   $58 = HEAP32[$57>>2]|0;
   $59 = $result;
   $60 = ((($59)) + 8|0);
   $61 = HEAP32[$60>>2]|0;
   $62 = $61<<2;
   $63 = (_realloc($58,$62)|0);
   $64 = $result;
   HEAP32[$64>>2] = $63;
  }
  $65 = $l;
  $66 = (($65) - 1)|0;
  $67 = $p;
  $68 = (($67) + ($66)|0);
  $69 = HEAP8[$68>>0]|0;
  $70 = $69 << 24 >> 24;
  $71 = ($70|0)!=(47);
  if ($71) {
   $72 = $l;
   $73 = (($72) - 1)|0;
   $74 = $p;
   $75 = (($74) + ($73)|0);
   $76 = HEAP8[$75>>0]|0;
   $77 = $76 << 24 >> 24;
   $78 = ($77|0)!=(92);
   $80 = $78;
  } else {
   $80 = 0;
  }
  $79 = $80&1;
  $81 = $79&255;
  $as = $81;
  $82 = $l;
  $83 = $as;
  $84 = $83&255;
  $85 = ($84|0)!=(0);
  $86 = $85 ? 2 : 1;
  $87 = (($82) + ($86))|0;
  $88 = (_malloc($87)|0);
  $buf = $88;
  $89 = $buf;
  $90 = ($89|0)!=(0|0);
  if (!($90)) {
   label = 18;
   break;
  }
  $91 = $buf;
  $92 = $p;
  $93 = $l;
  _memcpy(($91|0),($92|0),($93|0))|0;
  $94 = $as;
  $95 = ($94<<24>>24)!=(0);
  $96 = $l;
  $97 = $buf;
  $98 = (($97) + ($96)|0);
  if ($95) {
   HEAP8[$98>>0] = 47;
   $99 = $l;
   $100 = (($99) + 1)|0;
   $101 = $buf;
   $102 = (($101) + ($100)|0);
   HEAP8[$102>>0] = 0;
  } else {
   HEAP8[$98>>0] = 0;
  }
  $103 = $buf;
  $104 = $result;
  $105 = ((($104)) + 4|0);
  $106 = HEAP32[$105>>2]|0;
  $107 = (($106) + 1)|0;
  HEAP32[$105>>2] = $107;
  $108 = $result;
  $109 = HEAP32[$108>>2]|0;
  $110 = (($109) + ($106<<2)|0);
  HEAP32[$110>>2] = $103;
  while(1) {
   $111 = $buf;
   $112 = HEAP8[$111>>0]|0;
   $113 = ($112<<24>>24)!=(0);
   if (!($113)) {
    continue L10;
   }
   $114 = $buf;
   $115 = HEAP8[$114>>0]|0;
   $116 = $115 << 24 >> 24;
   $117 = ($116|0)==(92);
   if ($117) {
    $118 = $buf;
    HEAP8[$118>>0] = 47;
   }
   $119 = $buf;
   $120 = ((($119)) + 1|0);
   $buf = $120;
  }
 }
 if ((label|0) == 18) {
  _longjmp((16|0),1);
  // unreachable;
 }
 __destroy_importing_directories();
 $121 = $result;
 HEAP32[184>>2] = $121;
 $122 = $result;
 $0 = $122;
 $123 = $0;
 STACKTOP = sp;return ($123|0);
}
function __evaluate_expression($p) {
 $p = $p|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $a = 0, $e = 0, $k = 0, $l = 0, $pr = 0, $print = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $pr = sp + 40|0;
 $0 = $p;
 $l = 0;
 $k = 0;
 $a = 1;
 $e = 0;
 $print = 2403;
 $1 = $0;
 $2 = ($1|0)!=(0|0);
 if (!($2)) {
  (_printf(2410,$vararg_buffer)|0);
  STACKTOP = sp;return;
 }
 $3 = $0;
 $4 = (_strlen($3)|0);
 $l = $4;
 $5 = $print;
 $6 = (_strlen($5)|0);
 $k = $6;
 $7 = $l;
 $8 = $k;
 $9 = ($7|0)>=($8|0);
 if ($9) {
  $10 = $0;
  $11 = $k;
  _memcpy(($pr|0),($10|0),($11|0))|0;
  $12 = $k;
  $13 = (($pr) + ($12)|0);
  HEAP8[$13>>0] = 0;
  $14 = $print;
  $15 = (_strcasecmp($pr,$14)|0);
  $16 = ($15|0)==(0);
  if ($16) {
   $a = 0;
  }
 }
 $17 = $a;
 $18 = ($17<<24>>24)!=(0);
 do {
  if ($18) {
   $19 = $l;
   $20 = $k;
   $21 = (($19) + ($20))|0;
   $22 = (($21) + 1)|0;
   $23 = (_malloc($22)|0);
   $e = $23;
   $24 = $e;
   $25 = ($24|0)!=(0|0);
   if ($25) {
    $26 = $e;
    $27 = $print;
    $28 = $k;
    _memcpy(($26|0),($27|0),($28|0))|0;
    $29 = $e;
    $30 = $k;
    $31 = (($29) + ($30)|0);
    $32 = $0;
    $33 = $l;
    _memcpy(($31|0),($32|0),($33|0))|0;
    $34 = $l;
    $35 = $k;
    $36 = (($34) + ($35))|0;
    $37 = $e;
    $38 = (($37) + ($36)|0);
    HEAP8[$38>>0] = 0;
    $39 = $e;
    $0 = $39;
    break;
   } else {
    _longjmp((16|0),1);
    // unreachable;
   }
  }
 } while(0);
 $40 = HEAP32[172>>2]|0;
 $41 = $0;
 $42 = (_mb_load_string($40,$41,1)|0);
 $43 = ($42|0)==(0);
 if ($43) {
  $44 = HEAP32[172>>2]|0;
  (_mb_run($44,1)|0);
 } else {
  (_printf(2410,$vararg_buffer1)|0);
 }
 $45 = $a;
 $46 = ($45<<24>>24)!=(0);
 if (!($46)) {
  STACKTOP = sp;return;
 }
 $47 = $e;
 _free($47);
 STACKTOP = sp;return;
}
function __run_file($path) {
 $path = $path|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer = sp;
 $0 = $path;
 $1 = HEAP32[172>>2]|0;
 $2 = $0;
 $3 = (_mb_load_file($1,$2)|0);
 $4 = ($3|0)==(0);
 if ($4) {
  $5 = HEAP32[172>>2]|0;
  (_mb_run($5,1)|0);
  STACKTOP = sp;return;
 } else {
  (_printf(2431,$vararg_buffer)|0);
  STACKTOP = sp;return;
 }
}
function __show_help() {
 var $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer11 = 0, $vararg_buffer13 = 0, $vararg_buffer15 = 0, $vararg_buffer17 = 0, $vararg_buffer19 = 0, $vararg_buffer21 = 0, $vararg_buffer23 = 0, $vararg_buffer25 = 0, $vararg_buffer27 = 0, $vararg_buffer29 = 0, $vararg_buffer3 = 0, $vararg_buffer31 = 0, $vararg_buffer33 = 0, $vararg_buffer35 = 0, $vararg_buffer37 = 0, $vararg_buffer39 = 0, $vararg_buffer41 = 0, $vararg_buffer43 = 0;
 var $vararg_buffer45 = 0, $vararg_buffer47 = 0, $vararg_buffer49 = 0, $vararg_buffer51 = 0, $vararg_buffer53 = 0, $vararg_buffer55 = 0, $vararg_buffer57 = 0, $vararg_buffer59 = 0, $vararg_buffer6 = 0, $vararg_buffer9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer59 = sp + 232|0;
 $vararg_buffer57 = sp + 224|0;
 $vararg_buffer55 = sp + 216|0;
 $vararg_buffer53 = sp + 208|0;
 $vararg_buffer51 = sp + 200|0;
 $vararg_buffer49 = sp + 192|0;
 $vararg_buffer47 = sp + 184|0;
 $vararg_buffer45 = sp + 176|0;
 $vararg_buffer43 = sp + 168|0;
 $vararg_buffer41 = sp + 160|0;
 $vararg_buffer39 = sp + 152|0;
 $vararg_buffer37 = sp + 144|0;
 $vararg_buffer35 = sp + 136|0;
 $vararg_buffer33 = sp + 128|0;
 $vararg_buffer31 = sp + 120|0;
 $vararg_buffer29 = sp + 112|0;
 $vararg_buffer27 = sp + 104|0;
 $vararg_buffer25 = sp + 96|0;
 $vararg_buffer23 = sp + 88|0;
 $vararg_buffer21 = sp + 80|0;
 $vararg_buffer19 = sp + 72|0;
 $vararg_buffer17 = sp + 64|0;
 $vararg_buffer15 = sp + 56|0;
 $vararg_buffer13 = sp + 48|0;
 $vararg_buffer11 = sp + 40|0;
 $vararg_buffer9 = sp + 32|0;
 $vararg_buffer6 = sp + 24|0;
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 (_printf(2463,$vararg_buffer)|0);
 HEAP32[$vararg_buffer1>>2] = 2520;
 (_printf(2471,$vararg_buffer1)|0);
 HEAP32[$vararg_buffer3>>2] = 2520;
 (_printf(2532,$vararg_buffer3)|0);
 HEAP32[$vararg_buffer6>>2] = 2520;
 (_printf(2570,$vararg_buffer6)|0);
 (_printf(14608,$vararg_buffer9)|0);
 (_printf(2611,$vararg_buffer11)|0);
 (_printf(2621,$vararg_buffer13)|0);
 (_printf(2663,$vararg_buffer15)|0);
 (_printf(2722,$vararg_buffer17)|0);
 (_printf(14608,$vararg_buffer19)|0);
 (_printf(2799,$vararg_buffer21)|0);
 (_printf(2822,$vararg_buffer23)|0);
 (_printf(2859,$vararg_buffer25)|0);
 (_printf(2887,$vararg_buffer27)|0);
 (_printf(2924,$vararg_buffer29)|0);
 (_printf(2959,$vararg_buffer31)|0);
 (_printf(2991,$vararg_buffer33)|0);
 (_printf(3027,$vararg_buffer35)|0);
 (_printf(3105,$vararg_buffer37)|0);
 (_printf(3174,$vararg_buffer39)|0);
 (_printf(3220,$vararg_buffer41)|0);
 (_printf(3292,$vararg_buffer43)|0);
 (_printf(3360,$vararg_buffer45)|0);
 (_printf(3406,$vararg_buffer47)|0);
 (_printf(3433,$vararg_buffer49)|0);
 (_printf(3479,$vararg_buffer51)|0);
 (_printf(3506,$vararg_buffer53)|0);
 (_printf(3531,$vararg_buffer55)|0);
 (_printf(3558,$vararg_buffer57)|0);
 (_printf(3599,$vararg_buffer59)|0);
 STACKTOP = sp;return;
}
function __clear_screen() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 (_system((3801|0))|0);
 return;
}
function __new_program() {
 var $0 = 0, $1 = 0, $2 = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $result = 0;
 __clear_code();
 $0 = (_mb_reset(172,0,0)|0);
 $result = $0;
 $1 = HEAP32[172>>2]|0;
 (_mb_gc($1,0)|0);
 __tidy_mem_pool(1);
 $2 = $result;
 STACKTOP = sp;return ($2|0);
}
function __code() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[188>>2]|0;
 return ($0|0);
}
function __list_program($sn,$cn) {
 $sn = $sn|0;
 $cn = $cn|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $8 = 0, $9 = 0, $e = 0, $i = 0, $i1 = 0, $lcn = 0, $lsn = 0, $or$cond = 0, $or$cond3 = 0, $p = 0, $vararg_buffer = 0, $vararg_buffer4 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer4 = sp + 8|0;
 $vararg_buffer = sp;
 $p = sp + 24|0;
 $0 = $sn;
 $1 = $cn;
 $lsn = 0;
 $lcn = 0;
 HEAP32[$p>>2] = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 if (!($or$cond)) {
  ___assert_fail((3819|0),(1884|0),778,(3828|0));
  // unreachable;
 }
 $6 = $0;
 $7 = (_atoi($6)|0);
 $lsn = $7;
 $8 = $1;
 $9 = (_atoi($8)|0);
 $lcn = $9;
 $10 = $lsn;
 $11 = ($10|0)==(0);
 $12 = $lcn;
 $13 = ($12|0)==(0);
 $or$cond3 = $11 & $13;
 if ($or$cond3) {
  $i = 0;
  $i = 0;
  while(1) {
   $14 = $i;
   $15 = (__code()|0);
   $16 = ((($15)) + 4|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = ($14|0)<($17|0);
   if (!($18)) {
    break;
   }
   $19 = $i;
   $20 = (__code()|0);
   $21 = HEAP32[$20>>2]|0;
   $22 = (($21) + ($19<<2)|0);
   $23 = HEAP32[$22>>2]|0;
   HEAP32[$p>>2] = $23;
   (__get_unicode_bom($p)|0);
   $24 = $i;
   $25 = (($24) + 1)|0;
   $26 = HEAP32[$p>>2]|0;
   __list_one_line(0,$25,$26);
   $27 = $i;
   $28 = (($27) + 1)|0;
   $i = $28;
  }
  STACKTOP = sp;return;
 }
 $i1 = 0;
 $e = 0;
 $29 = $lsn;
 $30 = ($29|0)<(1);
 if (!($30)) {
  $31 = $lsn;
  $32 = (__code()|0);
  $33 = ((($32)) + 4|0);
  $34 = HEAP32[$33>>2]|0;
  $35 = ($31|0)>($34|0);
  if (!($35)) {
   $37 = $lcn;
   $38 = ($37|0)<(0);
   if ($38) {
    $39 = $lcn;
    HEAP32[$vararg_buffer4>>2] = $39;
    (_printf(3873,$vararg_buffer4)|0);
    STACKTOP = sp;return;
   }
   $40 = $lsn;
   $41 = (($40) + -1)|0;
   $lsn = $41;
   $42 = $lcn;
   $43 = ($42|0)!=(0);
   if ($43) {
    $44 = $lsn;
    $45 = $lcn;
    $46 = (($44) + ($45))|0;
    $50 = $46;
   } else {
    $47 = (__code()|0);
    $48 = ((($47)) + 4|0);
    $49 = HEAP32[$48>>2]|0;
    $50 = $49;
   }
   $e = $50;
   $51 = $lsn;
   $i1 = $51;
   while(1) {
    $52 = $i1;
    $53 = $e;
    $54 = ($52|0)<($53|0);
    if (!($54)) {
     label = 19;
     break;
    }
    $55 = $i1;
    $56 = (__code()|0);
    $57 = ((($56)) + 4|0);
    $58 = HEAP32[$57>>2]|0;
    $59 = ($55|0)>=($58|0);
    if ($59) {
     label = 19;
     break;
    }
    $60 = $i1;
    $61 = (__code()|0);
    $62 = HEAP32[$61>>2]|0;
    $63 = (($62) + ($60<<2)|0);
    $64 = HEAP32[$63>>2]|0;
    HEAP32[$p>>2] = $64;
    (__get_unicode_bom($p)|0);
    $65 = $i1;
    $66 = (($65) + 1)|0;
    $67 = HEAP32[$p>>2]|0;
    __list_one_line(1,$66,$67);
    $68 = $i1;
    $69 = (($68) + 1)|0;
    $i1 = $69;
   }
   if ((label|0) == 19) {
    STACKTOP = sp;return;
   }
  }
 }
 $36 = $lsn;
 HEAP32[$vararg_buffer>>2] = $36;
 (_printf(3842,$vararg_buffer)|0);
 STACKTOP = sp;return;
}
function __edit_program($no) {
 $no = $no|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $l = 0, $line = 0, $lno = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 288|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $line = sp + 24|0;
 $0 = $no;
 $lno = 0;
 $l = 0;
 $1 = $0;
 $2 = ($1|0)!=(0|0);
 if (!($2)) {
  ___assert_fail((3913|0),(1884|0),820,(3916|0));
  // unreachable;
 }
 $3 = $0;
 $4 = (_atoi($3)|0);
 $lno = $4;
 $5 = $lno;
 $6 = ($5|0)<(1);
 if (!($6)) {
  $7 = $lno;
  $8 = (__code()|0);
  $9 = ((($8)) + 4|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = ($7|0)>($10|0);
  if (!($11)) {
   $13 = $lno;
   $14 = (($13) + -1)|0;
   $lno = $14;
   _memset(($line|0),0,256)|0;
   $15 = $lno;
   $16 = (($15) + 1)|0;
   HEAP32[$vararg_buffer1>>2] = $16;
   (_printf(3930,$vararg_buffer1)|0);
   $17 = HEAP32[172>>2]|0;
   (_mb_gets($17,0,$line,256)|0);
   $18 = (_strlen($line)|0);
   $l = $18;
   $19 = $lno;
   $20 = (__code()|0);
   $21 = HEAP32[$20>>2]|0;
   $22 = (($21) + ($19<<2)|0);
   $23 = HEAP32[$22>>2]|0;
   $24 = $l;
   $25 = (($24) + 2)|0;
   $26 = (_realloc($23,$25)|0);
   $27 = $lno;
   $28 = (__code()|0);
   $29 = HEAP32[$28>>2]|0;
   $30 = (($29) + ($27<<2)|0);
   HEAP32[$30>>2] = $26;
   $31 = $lno;
   $32 = (__code()|0);
   $33 = HEAP32[$32>>2]|0;
   $34 = (($33) + ($31<<2)|0);
   $35 = HEAP32[$34>>2]|0;
   (_strcpy($35,$line)|0);
   $36 = $l;
   $37 = $lno;
   $38 = (__code()|0);
   $39 = HEAP32[$38>>2]|0;
   $40 = (($39) + ($37<<2)|0);
   $41 = HEAP32[$40>>2]|0;
   $42 = (($41) + ($36)|0);
   HEAP8[$42>>0] = 10;
   $43 = $l;
   $44 = (($43) + 1)|0;
   $45 = $lno;
   $46 = (__code()|0);
   $47 = HEAP32[$46>>2]|0;
   $48 = (($47) + ($45<<2)|0);
   $49 = HEAP32[$48>>2]|0;
   $50 = (($49) + ($44)|0);
   HEAP8[$50>>0] = 0;
   STACKTOP = sp;return;
  }
 }
 $12 = $lno;
 HEAP32[$vararg_buffer>>2] = $12;
 (_printf(3842,$vararg_buffer)|0);
 STACKTOP = sp;return;
}
function __insert_program($no) {
 $no = $no|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $9 = 0, $i = 0, $l = 0, $line = 0, $lno = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 288|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $line = sp + 32|0;
 $0 = $no;
 $lno = 0;
 $l = 0;
 $i = 0;
 $1 = $0;
 $2 = ($1|0)!=(0|0);
 if (!($2)) {
  ___assert_fail((3913|0),(1884|0),845,(3935|0));
  // unreachable;
 }
 $3 = $0;
 $4 = (_atoi($3)|0);
 $lno = $4;
 $5 = $lno;
 $6 = ($5|0)<(1);
 if (!($6)) {
  $7 = $lno;
  $8 = (__code()|0);
  $9 = ((($8)) + 4|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = ($7|0)>($10|0);
  if (!($11)) {
   $13 = $lno;
   $14 = (($13) + -1)|0;
   $lno = $14;
   _memset(($line|0),0,256)|0;
   $15 = $lno;
   $16 = (($15) + 1)|0;
   HEAP32[$vararg_buffer1>>2] = $16;
   (_printf(3930,$vararg_buffer1)|0);
   $17 = HEAP32[172>>2]|0;
   (_mb_gets($17,0,$line,256)|0);
   $18 = (__code()|0);
   $19 = ((($18)) + 4|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = (($20) + 1)|0;
   $22 = (__code()|0);
   $23 = ((($22)) + 8|0);
   $24 = HEAP32[$23>>2]|0;
   $25 = ($21|0)==($24|0);
   if ($25) {
    $26 = (__code()|0);
    $27 = ((($26)) + 8|0);
    $28 = HEAP32[$27>>2]|0;
    $29 = (($28) + 16)|0;
    HEAP32[$27>>2] = $29;
    $30 = (__code()|0);
    $31 = HEAP32[$30>>2]|0;
    $32 = (__code()|0);
    $33 = ((($32)) + 8|0);
    $34 = HEAP32[$33>>2]|0;
    $35 = $34<<2;
    $36 = (_realloc($31,$35)|0);
    $37 = (__code()|0);
    HEAP32[$37>>2] = $36;
   }
   $38 = (__code()|0);
   $39 = ((($38)) + 4|0);
   $40 = HEAP32[$39>>2]|0;
   $i = $40;
   while(1) {
    $41 = $i;
    $42 = $lno;
    $43 = ($41|0)>($42|0);
    if (!($43)) {
     break;
    }
    $44 = $i;
    $45 = (($44) - 1)|0;
    $46 = (__code()|0);
    $47 = HEAP32[$46>>2]|0;
    $48 = (($47) + ($45<<2)|0);
    $49 = HEAP32[$48>>2]|0;
    $50 = $i;
    $51 = (__code()|0);
    $52 = HEAP32[$51>>2]|0;
    $53 = (($52) + ($50<<2)|0);
    HEAP32[$53>>2] = $49;
    $54 = $i;
    $55 = (($54) + -1)|0;
    $i = $55;
   }
   $56 = (_strlen($line)|0);
   $l = $56;
   $57 = $l;
   $58 = (($57) + 2)|0;
   $59 = (_realloc(0,$58)|0);
   $60 = $lno;
   $61 = (__code()|0);
   $62 = HEAP32[$61>>2]|0;
   $63 = (($62) + ($60<<2)|0);
   HEAP32[$63>>2] = $59;
   $64 = $lno;
   $65 = (__code()|0);
   $66 = HEAP32[$65>>2]|0;
   $67 = (($66) + ($64<<2)|0);
   $68 = HEAP32[$67>>2]|0;
   (_strcpy($68,$line)|0);
   $69 = $l;
   $70 = $lno;
   $71 = (__code()|0);
   $72 = HEAP32[$71>>2]|0;
   $73 = (($72) + ($70<<2)|0);
   $74 = HEAP32[$73>>2]|0;
   $75 = (($74) + ($69)|0);
   HEAP8[$75>>0] = 10;
   $76 = $l;
   $77 = (($76) + 1)|0;
   $78 = $lno;
   $79 = (__code()|0);
   $80 = HEAP32[$79>>2]|0;
   $81 = (($80) + ($78<<2)|0);
   $82 = HEAP32[$81>>2]|0;
   $83 = (($82) + ($77)|0);
   HEAP8[$83>>0] = 0;
   $84 = (__code()|0);
   $85 = ((($84)) + 4|0);
   $86 = HEAP32[$85>>2]|0;
   $87 = (($86) + 1)|0;
   HEAP32[$85>>2] = $87;
   STACKTOP = sp;return;
  }
 }
 $12 = $lno;
 HEAP32[$vararg_buffer>>2] = $12;
 (_printf(3842,$vararg_buffer)|0);
 STACKTOP = sp;return;
}
function __alter_program($no) {
 $no = $no|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $i = 0, $lno = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer = sp;
 $0 = $no;
 $lno = 0;
 $i = 0;
 $1 = $0;
 $2 = ($1|0)!=(0|0);
 if (!($2)) {
  ___assert_fail((3913|0),(1884|0),875,(3951|0));
  // unreachable;
 }
 $3 = $0;
 $4 = (_atoi($3)|0);
 $lno = $4;
 $5 = $lno;
 $6 = ($5|0)<(1);
 if (!($6)) {
  $7 = $lno;
  $8 = (__code()|0);
  $9 = ((($8)) + 4|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = ($7|0)>($10|0);
  if (!($11)) {
   $13 = $lno;
   $14 = (($13) + -1)|0;
   $lno = $14;
   $15 = $lno;
   $16 = (__code()|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = (($17) + ($15<<2)|0);
   $19 = HEAP32[$18>>2]|0;
   _free($19);
   $20 = $lno;
   $i = $20;
   while(1) {
    $21 = $i;
    $22 = (__code()|0);
    $23 = ((($22)) + 4|0);
    $24 = HEAP32[$23>>2]|0;
    $25 = (($24) - 1)|0;
    $26 = ($21|0)<($25|0);
    if (!($26)) {
     break;
    }
    $27 = $i;
    $28 = (($27) + 1)|0;
    $29 = (__code()|0);
    $30 = HEAP32[$29>>2]|0;
    $31 = (($30) + ($28<<2)|0);
    $32 = HEAP32[$31>>2]|0;
    $33 = $i;
    $34 = (__code()|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = (($35) + ($33<<2)|0);
    HEAP32[$36>>2] = $32;
    $37 = $i;
    $38 = (($37) + 1)|0;
    $i = $38;
   }
   $39 = (__code()|0);
   $40 = ((($39)) + 4|0);
   $41 = HEAP32[$40>>2]|0;
   $42 = (($41) + -1)|0;
   HEAP32[$40>>2] = $42;
   STACKTOP = sp;return;
  }
 }
 $12 = $lno;
 HEAP32[$vararg_buffer>>2] = $12;
 (_printf(3842,$vararg_buffer)|0);
 STACKTOP = sp;return;
}
function __load_program($path) {
 $path = $path|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $txt = 0, $vararg_buffer = 0, $vararg_buffer1 = 0;
 var $vararg_buffer4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer4 = sp + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $0 = $path;
 $txt = 0;
 $1 = $0;
 $2 = ($1|0)!=(0|0);
 if (!($2)) {
  ___assert_fail((2258|0),(1884|0),893,(3966|0));
  // unreachable;
 }
 $3 = $0;
 $4 = (__load_file($3)|0);
 $txt = $4;
 $5 = $txt;
 $6 = ($5|0)!=(0|0);
 if (!($6)) {
  $16 = $0;
  HEAP32[$vararg_buffer4>>2] = $16;
  (_printf(4027,$vararg_buffer4)|0);
  STACKTOP = sp;return;
 }
 (__new_program()|0);
 $7 = $txt;
 __set_code($7);
 $8 = $txt;
 _free($8);
 $9 = (__code()|0);
 $10 = ((($9)) + 4|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ($11|0)==(1);
 $13 = (__code()|0);
 $14 = ((($13)) + 4|0);
 $15 = HEAP32[$14>>2]|0;
 if ($12) {
  HEAP32[$vararg_buffer>>2] = $15;
  (_printf(3980,$vararg_buffer)|0);
  STACKTOP = sp;return;
 } else {
  HEAP32[$vararg_buffer1>>2] = $15;
  (_printf(4003,$vararg_buffer1)|0);
  STACKTOP = sp;return;
 }
}
function __save_program($path) {
 $path = $path|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $txt = 0, $vararg_buffer = 0, $vararg_buffer1 = 0;
 var $vararg_buffer4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer4 = sp + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $0 = $path;
 $txt = 0;
 $1 = $0;
 $2 = ($1|0)!=(0|0);
 if (!($2)) {
  ___assert_fail((2258|0),(1884|0),913,(4086|0));
  // unreachable;
 }
 $3 = (__get_code()|0);
 $txt = $3;
 $4 = $0;
 $5 = $txt;
 $6 = (__save_file($4,$5)|0);
 $7 = ($6|0)!=(0);
 if (!($7)) {
  $8 = $0;
  HEAP32[$vararg_buffer>>2] = $8;
  (_printf(4100,$vararg_buffer)|0);
  $16 = $txt;
  _free($16);
  STACKTOP = sp;return;
 }
 $9 = (__code()|0);
 $10 = ((($9)) + 4|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ($11|0)==(1);
 $13 = (__code()|0);
 $14 = ((($13)) + 4|0);
 $15 = HEAP32[$14>>2]|0;
 if ($12) {
  HEAP32[$vararg_buffer1>>2] = $15;
  (_printf(4124,$vararg_buffer1)|0);
  $16 = $txt;
  _free($16);
  STACKTOP = sp;return;
 } else {
  HEAP32[$vararg_buffer4>>2] = $15;
  (_printf(4146,$vararg_buffer4)|0);
  $16 = $txt;
  _free($16);
  STACKTOP = sp;return;
 }
}
function __kill_program($path) {
 $path = $path|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $fp = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer4 = sp + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $0 = $path;
 $1 = $0;
 $2 = (_unlink($1)|0);
 $3 = ($2|0)!=(0);
 $4 = $0;
 if (!($3)) {
  HEAP32[$vararg_buffer>>2] = $4;
  (_printf(4205,$vararg_buffer)|0);
  STACKTOP = sp;return;
 }
 $5 = (_fopen($4,6472)|0);
 $fp = $5;
 $6 = $fp;
 $7 = ($6|0)!=(0|0);
 if ($7) {
  $8 = $fp;
  (_fclose($8)|0);
  $9 = $0;
  HEAP32[$vararg_buffer1>>2] = $9;
  (_printf(4238,$vararg_buffer1)|0);
  STACKTOP = sp;return;
 } else {
  $10 = $0;
  HEAP32[$vararg_buffer4>>2] = $10;
  (_printf(4267,$vararg_buffer4)|0);
  STACKTOP = sp;return;
 }
}
function __list_directory($path) {
 $path = $path|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $line = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 272|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $line = sp + 16|0;
 $0 = $path;
 $1 = $0;
 $2 = ($1|0)!=(0|0);
 if ($2) {
  $3 = $0;
  $4 = HEAP8[$3>>0]|0;
  $5 = $4 << 24 >> 24;
  $6 = ($5|0)!=(0);
  if ($6) {
   $7 = $0;
   HEAP32[$vararg_buffer>>2] = $7;
   (_sprintf($line,4289,$vararg_buffer)|0);
   (_system(($line|0))|0);
   STACKTOP = sp;return;
  }
 }
 (_sprintf($line,4295,$vararg_buffer1)|0);
 (_system(($line|0))|0);
 STACKTOP = sp;return;
}
function __append_one_line($line) {
 $line = $line|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $line;
 $result = 0;
 $1 = $0;
 $2 = (__append_line($1)|0);
 $result = $2;
 $3 = $result;
 STACKTOP = sp;return ($3|0);
}
function __clear_code() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $i = 0;
 $0 = HEAP32[188>>2]|0;
 $1 = ($0|0)!=(0|0);
 if (!($1)) {
  ___assert_fail((1900|0),(1884|0),428,(3807|0));
  // unreachable;
 }
 $i = 0;
 while(1) {
  $2 = $i;
  $3 = HEAP32[188>>2]|0;
  $4 = ((($3)) + 4|0);
  $5 = HEAP32[$4>>2]|0;
  $6 = ($2|0)<($5|0);
  if (!($6)) {
   break;
  }
  $7 = $i;
  $8 = HEAP32[188>>2]|0;
  $9 = HEAP32[$8>>2]|0;
  $10 = (($9) + ($7<<2)|0);
  $11 = HEAP32[$10>>2]|0;
  _free($11);
  $12 = $i;
  $13 = (($12) + 1)|0;
  $i = $13;
 }
 $14 = HEAP32[188>>2]|0;
 $15 = ((($14)) + 4|0);
 HEAP32[$15>>2] = 0;
 STACKTOP = sp;return;
}
function __get_unicode_bom($ch) {
 $ch = $ch|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $ch;
 $2 = $1;
 $3 = ($2|0)!=(0|0);
 if (!($3)) {
  $4 = $1;
  $5 = HEAP32[$4>>2]|0;
  $6 = ($5|0)!=(0|0);
  if (!($6)) {
   $0 = 0;
   $41 = $0;
   STACKTOP = sp;return ($41|0);
  }
 }
 $7 = $1;
 $8 = HEAP32[$7>>2]|0;
 $9 = HEAP8[$8>>0]|0;
 $10 = $9 << 24 >> 24;
 $11 = ($10|0)==(-17);
 if ($11) {
  $12 = $1;
  $13 = HEAP32[$12>>2]|0;
  $14 = ((($13)) + 1|0);
  $15 = HEAP8[$14>>0]|0;
  $16 = $15 << 24 >> 24;
  $17 = ($16|0)==(-69);
  if ($17) {
   $18 = $1;
   $19 = HEAP32[$18>>2]|0;
   $20 = ((($19)) + 2|0);
   $21 = HEAP8[$20>>0]|0;
   $22 = $21 << 24 >> 24;
   $23 = ($22|0)==(-65);
   if ($23) {
    $24 = $1;
    $25 = HEAP32[$24>>2]|0;
    $26 = ((($25)) + 3|0);
    HEAP32[$24>>2] = $26;
    $0 = 3;
    $41 = $0;
    STACKTOP = sp;return ($41|0);
   }
  }
 }
 $27 = $1;
 $28 = HEAP32[$27>>2]|0;
 $29 = HEAP8[$28>>0]|0;
 $30 = $29 << 24 >> 24;
 $31 = ($30|0)==(-2);
 if ($31) {
  $32 = $1;
  $33 = HEAP32[$32>>2]|0;
  $34 = ((($33)) + 1|0);
  $35 = HEAP8[$34>>0]|0;
  $36 = $35 << 24 >> 24;
  $37 = ($36|0)==(-1);
  if ($37) {
   $38 = $1;
   $39 = HEAP32[$38>>2]|0;
   $40 = ((($39)) + 2|0);
   HEAP32[$38>>2] = $40;
   $0 = 2;
   $41 = $0;
   STACKTOP = sp;return ($41|0);
  }
 }
 $0 = 0;
 $41 = $0;
 STACKTOP = sp;return ($41|0);
}
function __list_one_line($nl,$l,$ln) {
 $nl = $nl|0;
 $l = $l|0;
 $ln = $ln|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer = sp;
 $0 = $nl;
 $1 = $l;
 $2 = $ln;
 $3 = $0;
 $4 = $3&255;
 $5 = ($4|0)!=(0);
 $6 = $5 ? 3898 : 3906;
 $7 = $1;
 $8 = $2;
 HEAP32[$vararg_buffer>>2] = $7;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = $8;
 (_printf($6,$vararg_buffer)|0);
 STACKTOP = sp;return;
}
function __set_code($txt) {
 $txt = $txt|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_c = 0, $cursor = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $txt;
 $cursor = 0;
 $_c = 0;
 $1 = HEAP32[188>>2]|0;
 $2 = ($1|0)!=(0|0);
 if (!($2)) {
  ___assert_fail((1900|0),(1884|0),478,(4051|0));
  // unreachable;
 }
 $3 = $0;
 $4 = ($3|0)!=(0|0);
 if (!($4)) {
  STACKTOP = sp;return;
 }
 __clear_code();
 $5 = $0;
 $cursor = $5;
 while(1) {
  $6 = $cursor;
  $7 = HEAP8[$6>>0]|0;
  $_c = $7;
  $8 = $_c;
  $9 = $8 << 24 >> 24;
  $10 = ($9|0)==(13);
  if ($10) {
   label = 8;
  } else {
   $11 = $_c;
   $12 = $11 << 24 >> 24;
   $13 = ($12|0)==(10);
   if ($13) {
    label = 8;
   } else {
    $14 = $_c;
    $15 = $14 << 24 >> 24;
    $16 = ($15|0)==(0);
    if ($16) {
     label = 8;
    }
   }
  }
  if ((label|0) == 8) {
   label = 0;
   $17 = $cursor;
   HEAP8[$17>>0] = 0;
   $18 = $_c;
   $19 = $18 << 24 >> 24;
   $20 = ($19|0)==(13);
   if ($20) {
    $21 = $cursor;
    $22 = ((($21)) + 1|0);
    $23 = HEAP8[$22>>0]|0;
    $24 = $23 << 24 >> 24;
    $25 = ($24|0)==(10);
    if ($25) {
     $26 = $cursor;
     $27 = ((($26)) + 1|0);
     $cursor = $27;
    }
   }
   $28 = $0;
   (__append_line($28)|0);
   $29 = $cursor;
   $30 = ((($29)) + 1|0);
   $0 = $30;
  }
  $31 = $cursor;
  $32 = ((($31)) + 1|0);
  $cursor = $32;
  $33 = $_c;
  $34 = ($33<<24>>24)!=(0);
  if (!($34)) {
   break;
  }
 }
 STACKTOP = sp;return;
}
function __append_line($txt) {
 $txt = $txt|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $buf = 0, $l = 0, $or$cond = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $txt;
 $result = 0;
 $l = 0;
 $buf = 0;
 $1 = HEAP32[188>>2]|0;
 $2 = ($1|0)!=(0|0);
 $3 = $0;
 $4 = ($3|0)!=(0|0);
 $or$cond = $2 & $4;
 if (!($or$cond)) {
  ___assert_fail((4061|0),(1884|0),440,(4073|0));
  // unreachable;
 }
 $5 = HEAP32[188>>2]|0;
 $6 = ((($5)) + 4|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (($7) + 1)|0;
 $9 = HEAP32[188>>2]|0;
 $10 = ((($9)) + 8|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ($8|0)==($11|0);
 if ($12) {
  $13 = HEAP32[188>>2]|0;
  $14 = ((($13)) + 8|0);
  $15 = HEAP32[$14>>2]|0;
  $16 = (($15) + 16)|0;
  HEAP32[$14>>2] = $16;
  $17 = HEAP32[188>>2]|0;
  $18 = HEAP32[$17>>2]|0;
  $19 = HEAP32[188>>2]|0;
  $20 = ((($19)) + 8|0);
  $21 = HEAP32[$20>>2]|0;
  $22 = $21<<2;
  $23 = (_realloc($18,$22)|0);
  $24 = HEAP32[188>>2]|0;
  HEAP32[$24>>2] = $23;
 }
 $25 = $0;
 $26 = (_strlen($25)|0);
 $l = $26;
 $result = $26;
 $27 = $l;
 $28 = (($27) + 1)|0;
 $29 = (_malloc($28)|0);
 $buf = $29;
 $30 = $buf;
 $31 = ($30|0)!=(0|0);
 if ($31) {
  $32 = $buf;
  $33 = $0;
  $34 = $l;
  _memcpy(($32|0),($33|0),($34|0))|0;
  $35 = $l;
  $36 = $buf;
  $37 = (($36) + ($35)|0);
  HEAP8[$37>>0] = 0;
  $38 = $buf;
  $39 = HEAP32[188>>2]|0;
  $40 = ((($39)) + 4|0);
  $41 = HEAP32[$40>>2]|0;
  $42 = (($41) + 1)|0;
  HEAP32[$40>>2] = $42;
  $43 = HEAP32[188>>2]|0;
  $44 = HEAP32[$43>>2]|0;
  $45 = (($44) + ($41<<2)|0);
  HEAP32[$45>>2] = $38;
  $46 = $result;
  STACKTOP = sp;return ($46|0);
 } else {
  _longjmp((16|0),1);
  // unreachable;
 }
 return (0)|0;
}
function __get_code() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $result = 0;
 $i = 0;
 $0 = HEAP32[188>>2]|0;
 $1 = ($0|0)!=(0|0);
 if (!($1)) {
  ___assert_fail((1900|0),(1884|0),460,(4169|0));
  // unreachable;
 }
 $2 = HEAP32[188>>2]|0;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4*258)|0;
 $6 = (($5) + 1)|0;
 $7 = (_malloc($6)|0);
 $result = $7;
 $8 = $result;
 $9 = ($8|0)!=(0|0);
 if (!($9)) {
  _longjmp((16|0),1);
  // unreachable;
 }
 $10 = $result;
 HEAP8[$10>>0] = 0;
 $i = 0;
 while(1) {
  $11 = $i;
  $12 = HEAP32[188>>2]|0;
  $13 = ((($12)) + 4|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = ($11|0)<($14|0);
  $16 = $result;
  if (!($15)) {
   break;
  }
  $17 = $i;
  $18 = HEAP32[188>>2]|0;
  $19 = HEAP32[$18>>2]|0;
  $20 = (($19) + ($17<<2)|0);
  $21 = HEAP32[$20>>2]|0;
  $22 = (_strcat($16,$21)|0);
  $result = $22;
  $23 = $i;
  $24 = HEAP32[188>>2]|0;
  $25 = ((($24)) + 4|0);
  $26 = HEAP32[$25>>2]|0;
  $27 = (($26) - 1)|0;
  $28 = ($23|0)!=($27|0);
  if ($28) {
   $29 = $result;
   $30 = (_strcat($29,14608)|0);
   $result = $30;
  }
  $31 = $i;
  $32 = (($31) + 1)|0;
  $i = $32;
 }
 STACKTOP = sp;return ($16|0);
}
function __save_file($path,$txt) {
 $path = $path|0;
 $txt = $txt|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $fp = 0, $or$cond = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $path;
 $2 = $txt;
 $fp = 0;
 $3 = $1;
 $4 = ($3|0)!=(0|0);
 $5 = $2;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if (!($or$cond)) {
  ___assert_fail((4179|0),(1884|0),525,(4191|0));
  // unreachable;
 }
 $7 = $1;
 $8 = (_fopen($7,4202)|0);
 $fp = $8;
 $9 = $fp;
 $10 = ($9|0)!=(0|0);
 if ($10) {
  $11 = $2;
  $12 = $2;
  $13 = (_strlen($12)|0);
  $14 = $fp;
  (_fwrite($11,1,$13,$14)|0);
  $15 = $fp;
  (_fclose($15)|0);
  $0 = 1;
  $16 = $0;
  STACKTOP = sp;return ($16|0);
 } else {
  $0 = 0;
  $16 = $0;
  STACKTOP = sp;return ($16|0);
 }
 return (0)|0;
}
function _mb_ver_string() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (4298|0);
}
function _mb_init() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $bvar = 0, $bvar1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = HEAP32[304>>2]|0;
 $2 = ($1|0)!=(0|0);
 if ($2) {
  $0 = 3;
  $47 = $0;
  STACKTOP = sp;return ($47|0);
 }
 $3 = (__create_object()|0);
 HEAP32[304>>2] = $3;
 $4 = HEAP32[304>>2]|0;
 HEAP8[$4>>0]=8&255;HEAP8[$4+1>>0]=(8>>8)&255;HEAP8[$4+2>>0]=(8>>16)&255;HEAP8[$4+3>>0]=8>>24;
 $5 = (_mb_malloc(8)|0);
 $6 = HEAP32[304>>2]|0;
 $7 = ((($6)) + 4|0);
 HEAP8[$7>>0]=$5&255;HEAP8[$7+1>>0]=($5>>8)&255;HEAP8[$7+2>>0]=($5>>16)&255;HEAP8[$7+3>>0]=$5>>24;
 $8 = HEAP32[304>>2]|0;
 $9 = ((($8)) + 4|0);
 $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
 ;HEAP8[$10>>0]=0|0;HEAP8[$10+1>>0]=0|0;HEAP8[$10+2>>0]=0|0;HEAP8[$10+3>>0]=0|0;HEAP8[$10+4>>0]=0|0;HEAP8[$10+5>>0]=0|0;HEAP8[$10+6>>0]=0|0;HEAP8[$10+7>>0]=0|0;
 $11 = (_mb_malloc(2)|0);
 $12 = HEAP32[304>>2]|0;
 $13 = ((($12)) + 4|0);
 $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
 HEAP8[$14>>0]=$11&255;HEAP8[$14+1>>0]=($11>>8)&255;HEAP8[$14+2>>0]=($11>>16)&255;HEAP8[$14+3>>0]=$11>>24;
 $15 = HEAP32[304>>2]|0;
 $16 = ((($15)) + 4|0);
 $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
 $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
 ;HEAP8[$18>>0]=HEAP8[4304>>0]|0;HEAP8[$18+1>>0]=HEAP8[4304+1>>0]|0;
 $19 = HEAP32[304>>2]|0;
 $20 = ((($19)) + 4|0);
 $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
 $22 = ((($21)) + 4|0);
 HEAP8[$22>>0]=9&255;HEAP8[$22+1>>0]=(9>>8)&255;HEAP8[$22+2>>0]=(9>>16)&255;HEAP8[$22+3>>0]=9>>24;
 $23 = HEAP32[308>>2]|0;
 $24 = ($23|0)!=(0|0);
 if ($24) {
  ___assert_fail((4306|0),(4322|0),12151,(4333|0));
  // unreachable;
 }
 $25 = HEAP32[308>>2]|0;
 $26 = ($25|0)!=(0|0);
 if (!($26)) {
  $27 = (__create_var(308,4341,5,1)|0);
  $bvar = $27;
  $28 = $bvar;
  $29 = ((($28)) + 4|0);
  $30 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8)|(HEAPU8[$29+2>>0]<<16)|(HEAPU8[$29+3>>0]<<24);
  HEAP8[$30>>0]=2&255;HEAP8[$30+1>>0]=(2>>8)&255;HEAP8[$30+2>>0]=(2>>16)&255;HEAP8[$30+3>>0]=2>>24;
  $31 = $bvar;
  $32 = ((($31)) + 4|0);
  $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
  $34 = ((($33)) + 4|0);
  HEAP8[$34>>0]=1&255;HEAP8[$34+1>>0]=(1>>8)&255;HEAP8[$34+2>>0]=(1>>16)&255;HEAP8[$34+3>>0]=1>>24;
 }
 $35 = HEAP32[312>>2]|0;
 $36 = ($35|0)!=(0|0);
 if ($36) {
  ___assert_fail((4346|0),(4322|0),12157,(4333|0));
  // unreachable;
 }
 $37 = HEAP32[312>>2]|0;
 $38 = ($37|0)!=(0|0);
 if (!($38)) {
  $39 = (__create_var(312,4363,6,1)|0);
  $bvar1 = $39;
  $40 = $bvar1;
  $41 = ((($40)) + 4|0);
  $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
  HEAP8[$42>>0]=2&255;HEAP8[$42+1>>0]=(2>>8)&255;HEAP8[$42+2>>0]=(2>>16)&255;HEAP8[$42+3>>0]=2>>24;
  $43 = $bvar1;
  $44 = ((($43)) + 4|0);
  $45 = HEAPU8[$44>>0]|(HEAPU8[$44+1>>0]<<8)|(HEAPU8[$44+2>>0]<<16)|(HEAPU8[$44+3>>0]<<24);
  $46 = ((($45)) + 4|0);
  HEAP8[$46>>0]=0&255;HEAP8[$46+1>>0]=(0>>8)&255;HEAP8[$46+2>>0]=(0>>16)&255;HEAP8[$46+3>>0]=0>>24;
 }
 $0 = 0;
 $47 = $0;
 STACKTOP = sp;return ($47|0);
}
function _mb_dispose() {
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $12 = 0, $13 = 0;
 var $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = HEAP32[304>>2]|0;
 $2 = ($1|0)!=(0|0);
 if (!($2)) {
  $0 = 3;
  $113 = $0;
  STACKTOP = sp;return ($113|0);
 }
 $3 = HEAP32[304>>2]|0;
 $4 = ((($3)) + 4|0);
 $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
 $6 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
 $7 = ($6|0)!=(0|0);
 if (!($7)) {
  ___assert_fail((4369|0),(4322|0),12172,(4401|0));
  // unreachable;
 }
 $8 = HEAP32[304>>2]|0;
 $9 = ((($8)) + 4|0);
 $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
 $11 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
 _mb_free($11);
 $12 = HEAP32[304>>2]|0;
 $13 = ((($12)) + 4|0);
 $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
 HEAP8[$14>>0]=0&255;HEAP8[$14+1>>0]=(0>>8)&255;HEAP8[$14+2>>0]=(0>>16)&255;HEAP8[$14+3>>0]=0>>24;
 $15 = HEAP32[304>>2]|0;
 $16 = ((($15)) + 4|0);
 $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
 $18 = ($17|0)!=(0|0);
 if (!($18)) {
  ___assert_fail((4369|0),(4322|0),12173,(4401|0));
  // unreachable;
 }
 $19 = HEAP32[304>>2]|0;
 $20 = ((($19)) + 4|0);
 $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
 _mb_free($21);
 $22 = HEAP32[304>>2]|0;
 $23 = ((($22)) + 4|0);
 HEAP8[$23>>0]=0&255;HEAP8[$23+1>>0]=(0>>8)&255;HEAP8[$23+2>>0]=(0>>16)&255;HEAP8[$23+3>>0]=0>>24;
 $24 = HEAP32[304>>2]|0;
 $25 = ($24|0)!=(0|0);
 if (!($25)) {
  ___assert_fail((4369|0),(4322|0),12174,(4401|0));
  // unreachable;
 }
 $26 = HEAP32[304>>2]|0;
 _mb_free($26);
 HEAP32[304>>2] = 0;
 HEAP32[304>>2] = 0;
 $27 = HEAP32[308>>2]|0;
 $28 = ($27|0)!=(0|0);
 if (!($28)) {
  ___assert_fail((4412|0),(4322|0),12177,(4401|0));
  // unreachable;
 }
 $29 = HEAP32[308>>2]|0;
 $30 = ($29|0)!=(0|0);
 do {
  if ($30) {
   $31 = HEAP32[308>>2]|0;
   $32 = ((($31)) + 4|0);
   $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
   $34 = ((($33)) + 4|0);
   $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
   $36 = ($35|0)!=(0|0);
   if (!($36)) {
    ___assert_fail((4369|0),(4322|0),12179,(4401|0));
    // unreachable;
   }
   $37 = HEAP32[308>>2]|0;
   $38 = ((($37)) + 4|0);
   $39 = HEAPU8[$38>>0]|(HEAPU8[$38+1>>0]<<8)|(HEAPU8[$38+2>>0]<<16)|(HEAPU8[$38+3>>0]<<24);
   $40 = ((($39)) + 4|0);
   $41 = HEAPU8[$40>>0]|(HEAPU8[$40+1>>0]<<8)|(HEAPU8[$40+2>>0]<<16)|(HEAPU8[$40+3>>0]<<24);
   _mb_free($41);
   $42 = HEAP32[308>>2]|0;
   $43 = ((($42)) + 4|0);
   $44 = HEAPU8[$43>>0]|(HEAPU8[$43+1>>0]<<8)|(HEAPU8[$43+2>>0]<<16)|(HEAPU8[$43+3>>0]<<24);
   $45 = ((($44)) + 4|0);
   HEAP8[$45>>0]=0&255;HEAP8[$45+1>>0]=(0>>8)&255;HEAP8[$45+2>>0]=(0>>16)&255;HEAP8[$45+3>>0]=0>>24;
   $46 = HEAP32[308>>2]|0;
   $47 = ((($46)) + 4|0);
   $48 = HEAPU8[$47>>0]|(HEAPU8[$47+1>>0]<<8)|(HEAPU8[$47+2>>0]<<16)|(HEAPU8[$47+3>>0]<<24);
   $49 = HEAPU8[$48>>0]|(HEAPU8[$48+1>>0]<<8)|(HEAPU8[$48+2>>0]<<16)|(HEAPU8[$48+3>>0]<<24);
   $50 = ($49|0)!=(0|0);
   if (!($50)) {
    ___assert_fail((4369|0),(4322|0),12180,(4401|0));
    // unreachable;
   }
   $51 = HEAP32[308>>2]|0;
   $52 = ((($51)) + 4|0);
   $53 = HEAPU8[$52>>0]|(HEAPU8[$52+1>>0]<<8)|(HEAPU8[$52+2>>0]<<16)|(HEAPU8[$52+3>>0]<<24);
   $54 = HEAPU8[$53>>0]|(HEAPU8[$53+1>>0]<<8)|(HEAPU8[$53+2>>0]<<16)|(HEAPU8[$53+3>>0]<<24);
   _mb_free($54);
   $55 = HEAP32[308>>2]|0;
   $56 = ((($55)) + 4|0);
   $57 = HEAPU8[$56>>0]|(HEAPU8[$56+1>>0]<<8)|(HEAPU8[$56+2>>0]<<16)|(HEAPU8[$56+3>>0]<<24);
   HEAP8[$57>>0]=0&255;HEAP8[$57+1>>0]=(0>>8)&255;HEAP8[$57+2>>0]=(0>>16)&255;HEAP8[$57+3>>0]=0>>24;
   $58 = HEAP32[308>>2]|0;
   $59 = ((($58)) + 4|0);
   $60 = HEAPU8[$59>>0]|(HEAPU8[$59+1>>0]<<8)|(HEAPU8[$59+2>>0]<<16)|(HEAPU8[$59+3>>0]<<24);
   $61 = ($60|0)!=(0|0);
   if (!($61)) {
    ___assert_fail((4369|0),(4322|0),12181,(4401|0));
    // unreachable;
   }
   $62 = HEAP32[308>>2]|0;
   $63 = ((($62)) + 4|0);
   $64 = HEAPU8[$63>>0]|(HEAPU8[$63+1>>0]<<8)|(HEAPU8[$63+2>>0]<<16)|(HEAPU8[$63+3>>0]<<24);
   _mb_free($64);
   $65 = HEAP32[308>>2]|0;
   $66 = ((($65)) + 4|0);
   HEAP8[$66>>0]=0&255;HEAP8[$66+1>>0]=(0>>8)&255;HEAP8[$66+2>>0]=(0>>16)&255;HEAP8[$66+3>>0]=0>>24;
   $67 = HEAP32[308>>2]|0;
   $68 = ($67|0)!=(0|0);
   if ($68) {
    $69 = HEAP32[308>>2]|0;
    _mb_free($69);
    HEAP32[308>>2] = 0;
    HEAP32[308>>2] = 0;
    break;
   } else {
    ___assert_fail((4369|0),(4322|0),12182,(4401|0));
    // unreachable;
   }
  }
 } while(0);
 $70 = HEAP32[312>>2]|0;
 $71 = ($70|0)!=(0|0);
 if (!($71)) {
  ___assert_fail((4427|0),(4322|0),12185,(4401|0));
  // unreachable;
 }
 $72 = HEAP32[312>>2]|0;
 $73 = ($72|0)!=(0|0);
 do {
  if ($73) {
   $74 = HEAP32[312>>2]|0;
   $75 = ((($74)) + 4|0);
   $76 = HEAPU8[$75>>0]|(HEAPU8[$75+1>>0]<<8)|(HEAPU8[$75+2>>0]<<16)|(HEAPU8[$75+3>>0]<<24);
   $77 = ((($76)) + 4|0);
   $78 = HEAPU8[$77>>0]|(HEAPU8[$77+1>>0]<<8)|(HEAPU8[$77+2>>0]<<16)|(HEAPU8[$77+3>>0]<<24);
   $79 = ($78|0)!=(0|0);
   if (!($79)) {
    ___assert_fail((4369|0),(4322|0),12187,(4401|0));
    // unreachable;
   }
   $80 = HEAP32[312>>2]|0;
   $81 = ((($80)) + 4|0);
   $82 = HEAPU8[$81>>0]|(HEAPU8[$81+1>>0]<<8)|(HEAPU8[$81+2>>0]<<16)|(HEAPU8[$81+3>>0]<<24);
   $83 = ((($82)) + 4|0);
   $84 = HEAPU8[$83>>0]|(HEAPU8[$83+1>>0]<<8)|(HEAPU8[$83+2>>0]<<16)|(HEAPU8[$83+3>>0]<<24);
   _mb_free($84);
   $85 = HEAP32[312>>2]|0;
   $86 = ((($85)) + 4|0);
   $87 = HEAPU8[$86>>0]|(HEAPU8[$86+1>>0]<<8)|(HEAPU8[$86+2>>0]<<16)|(HEAPU8[$86+3>>0]<<24);
   $88 = ((($87)) + 4|0);
   HEAP8[$88>>0]=0&255;HEAP8[$88+1>>0]=(0>>8)&255;HEAP8[$88+2>>0]=(0>>16)&255;HEAP8[$88+3>>0]=0>>24;
   $89 = HEAP32[312>>2]|0;
   $90 = ((($89)) + 4|0);
   $91 = HEAPU8[$90>>0]|(HEAPU8[$90+1>>0]<<8)|(HEAPU8[$90+2>>0]<<16)|(HEAPU8[$90+3>>0]<<24);
   $92 = HEAPU8[$91>>0]|(HEAPU8[$91+1>>0]<<8)|(HEAPU8[$91+2>>0]<<16)|(HEAPU8[$91+3>>0]<<24);
   $93 = ($92|0)!=(0|0);
   if (!($93)) {
    ___assert_fail((4369|0),(4322|0),12188,(4401|0));
    // unreachable;
   }
   $94 = HEAP32[312>>2]|0;
   $95 = ((($94)) + 4|0);
   $96 = HEAPU8[$95>>0]|(HEAPU8[$95+1>>0]<<8)|(HEAPU8[$95+2>>0]<<16)|(HEAPU8[$95+3>>0]<<24);
   $97 = HEAPU8[$96>>0]|(HEAPU8[$96+1>>0]<<8)|(HEAPU8[$96+2>>0]<<16)|(HEAPU8[$96+3>>0]<<24);
   _mb_free($97);
   $98 = HEAP32[312>>2]|0;
   $99 = ((($98)) + 4|0);
   $100 = HEAPU8[$99>>0]|(HEAPU8[$99+1>>0]<<8)|(HEAPU8[$99+2>>0]<<16)|(HEAPU8[$99+3>>0]<<24);
   HEAP8[$100>>0]=0&255;HEAP8[$100+1>>0]=(0>>8)&255;HEAP8[$100+2>>0]=(0>>16)&255;HEAP8[$100+3>>0]=0>>24;
   $101 = HEAP32[312>>2]|0;
   $102 = ((($101)) + 4|0);
   $103 = HEAPU8[$102>>0]|(HEAPU8[$102+1>>0]<<8)|(HEAPU8[$102+2>>0]<<16)|(HEAPU8[$102+3>>0]<<24);
   $104 = ($103|0)!=(0|0);
   if (!($104)) {
    ___assert_fail((4369|0),(4322|0),12189,(4401|0));
    // unreachable;
   }
   $105 = HEAP32[312>>2]|0;
   $106 = ((($105)) + 4|0);
   $107 = HEAPU8[$106>>0]|(HEAPU8[$106+1>>0]<<8)|(HEAPU8[$106+2>>0]<<16)|(HEAPU8[$106+3>>0]<<24);
   _mb_free($107);
   $108 = HEAP32[312>>2]|0;
   $109 = ((($108)) + 4|0);
   HEAP8[$109>>0]=0&255;HEAP8[$109+1>>0]=(0>>8)&255;HEAP8[$109+2>>0]=(0>>16)&255;HEAP8[$109+3>>0]=0>>24;
   $110 = HEAP32[312>>2]|0;
   $111 = ($110|0)!=(0|0);
   if ($111) {
    $112 = HEAP32[312>>2]|0;
    _mb_free($112);
    HEAP32[312>>2] = 0;
    HEAP32[312>>2] = 0;
    break;
   } else {
    ___assert_fail((4369|0),(4322|0),12190,(4401|0));
    // unreachable;
   }
  }
 } while(0);
 $0 = 0;
 $113 = $0;
 STACKTOP = sp;return ($113|0);
}
function _mb_open($s) {
 $s = $s|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $global_scope = 0, $local_scope = 0, $result = 0, $running = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $s;
 $result = 0;
 $local_scope = 0;
 $global_scope = 0;
 $running = 0;
 $2 = $1;
 $3 = ($2|0)!=(0|0);
 if (!($3)) {
  $0 = 3;
  $110 = $0;
  STACKTOP = sp;return ($110|0);
 }
 $4 = (_mb_malloc(179)|0);
 $5 = $1;
 HEAP32[$5>>2] = $4;
 $6 = $1;
 $7 = HEAP32[$6>>2]|0;
 _memset(($7|0),0,179)|0;
 $8 = $1;
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($9)) + 12|0);
 $11 = HEAP8[$10>>0]|0;
 $12 = $11 & -2;
 $13 = $12 | 1;
 HEAP8[$10>>0] = $13;
 $14 = (__ht_create(0,127,128,129)|0);
 $local_scope = $14;
 $15 = $local_scope;
 $16 = $1;
 $17 = HEAP32[$16>>2]|0;
 $18 = ((($17)) + 47|0);
 HEAP8[$18>>0]=$15&255;HEAP8[$18+1>>0]=($15>>8)&255;HEAP8[$18+2>>0]=($15>>16)&255;HEAP8[$18+3>>0]=$15>>24;
 $19 = (__ht_create(0,127,128,129)|0);
 $global_scope = $19;
 $20 = $global_scope;
 $21 = $1;
 $22 = HEAP32[$21>>2]|0;
 $23 = ((($22)) + 51|0);
 HEAP8[$23>>0]=$20&255;HEAP8[$23+1>>0]=($20>>8)&255;HEAP8[$23+2>>0]=($20>>16)&255;HEAP8[$23+3>>0]=$20>>24;
 $24 = (__ht_create(0,127,128,130)|0);
 $global_scope = $24;
 $25 = $global_scope;
 $26 = $1;
 $27 = HEAP32[$26>>2]|0;
 $28 = ((($27)) + 55|0);
 HEAP8[$28>>0]=$25&255;HEAP8[$28+1>>0]=($25>>8)&255;HEAP8[$28+2>>0]=($25>>16)&255;HEAP8[$28+3>>0]=$25>>24;
 $29 = (__ls_create()|0);
 $30 = $1;
 $31 = HEAP32[$30>>2]|0;
 $32 = ((($31)) + 63|0);
 HEAP8[$32>>0]=$29&255;HEAP8[$32+1>>0]=($29>>8)&255;HEAP8[$32+2>>0]=($29>>16)&255;HEAP8[$32+3>>0]=$29>>24;
 $33 = $1;
 $34 = HEAP32[$33>>2]|0;
 $35 = ((($34)) + 71|0);
 $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
 $37 = (__reset_parsing_context($36)|0);
 $38 = $1;
 $39 = HEAP32[$38>>2]|0;
 $40 = ((($39)) + 71|0);
 HEAP8[$40>>0]=$37&255;HEAP8[$40+1>>0]=($37>>8)&255;HEAP8[$40+2>>0]=($37>>16)&255;HEAP8[$40+3>>0]=$37>>24;
 $41 = (__ls_create()|0);
 $42 = $1;
 $43 = HEAP32[$42>>2]|0;
 $44 = ((($43)) + 39|0);
 HEAP8[$44>>0]=$41&255;HEAP8[$44+1>>0]=($41>>8)&255;HEAP8[$44+2>>0]=($41>>16)&255;HEAP8[$44+3>>0]=$41>>24;
 $45 = (__ls_create()|0);
 $46 = $1;
 $47 = HEAP32[$46>>2]|0;
 $48 = ((($47)) + 43|0);
 HEAP8[$48>>0]=$45&255;HEAP8[$48+1>>0]=($45>>8)&255;HEAP8[$48+2>>0]=($45>>16)&255;HEAP8[$48+3>>0]=$45>>24;
 $49 = (__ht_create(0,131,132,133)|0);
 $50 = $1;
 $51 = HEAP32[$50>>2]|0;
 $52 = ((($51)) + 21|0);
 HEAP8[$52>>0]=$49&255;HEAP8[$52+1>>0]=($49>>8)&255;HEAP8[$52+2>>0]=($49>>16)&255;HEAP8[$52+3>>0]=$49>>24;
 $53 = (__ht_create(0,131,132,133)|0);
 $54 = $1;
 $55 = HEAP32[$54>>2]|0;
 $56 = ((($55)) + 21|0);
 $57 = ((($56)) + 4|0);
 HEAP8[$57>>0]=$53&255;HEAP8[$57+1>>0]=($53>>8)&255;HEAP8[$57+2>>0]=($53>>16)&255;HEAP8[$57+3>>0]=$53>>24;
 $58 = (__ht_create(0,131,132,133)|0);
 $59 = $1;
 $60 = HEAP32[$59>>2]|0;
 $61 = ((($60)) + 21|0);
 $62 = ((($61)) + 8|0);
 HEAP8[$62>>0]=$58&255;HEAP8[$62+1>>0]=($58>>8)&255;HEAP8[$62+2>>0]=($58>>16)&255;HEAP8[$62+3>>0]=$58>>24;
 $63 = $1;
 $64 = HEAP32[$63>>2]|0;
 $65 = ((($64)) + 21|0);
 $66 = ((($65)) + 12|0);
 HEAP8[$66>>0]=0&255;HEAP8[$66+1>>0]=(0>>8)&255;HEAP8[$66+2>>0]=(0>>16)&255;HEAP8[$66+3>>0]=0>>24;
 $67 = $1;
 $68 = HEAP32[$67>>2]|0;
 $69 = ((($68)) + 21|0);
 $70 = ((($69)) + 16|0);
 HEAP8[$70>>0] = 0;
 $71 = (__create_running_context(1)|0);
 $running = $71;
 $72 = $running;
 $73 = ((($72)) + 4|0);
 HEAP8[$73>>0]=1&255;HEAP8[$73+1>>0]=(1>>8)&255;HEAP8[$73+2>>0]=(1>>16)&255;HEAP8[$73+3>>0]=1>>24;
 $74 = $running;
 $75 = $1;
 $76 = HEAP32[$75>>2]|0;
 $77 = ((($76)) + 75|0);
 HEAP8[$77>>0]=$74&255;HEAP8[$77+1>>0]=($74>>8)&255;HEAP8[$77+2>>0]=($74>>16)&255;HEAP8[$77+3>>0]=$74>>24;
 $78 = (__ls_create()|0);
 $79 = $1;
 $80 = HEAP32[$79>>2]|0;
 $81 = ((($80)) + 102|0);
 HEAP8[$81>>0]=$78&255;HEAP8[$81+1>>0]=($78>>8)&255;HEAP8[$81+2>>0]=($78>>16)&255;HEAP8[$81+3>>0]=$78>>24;
 $82 = (__ls_create()|0);
 $83 = $1;
 $84 = HEAP32[$83>>2]|0;
 $85 = ((($84)) + 122|0);
 HEAP8[$85>>0]=$82&255;HEAP8[$85+1>>0]=($82>>8)&255;HEAP8[$85+2>>0]=($82>>16)&255;HEAP8[$85+3>>0]=$82>>24;
 $86 = (__ls_create()|0);
 $87 = $1;
 $88 = HEAP32[$87>>2]|0;
 $89 = ((($88)) + 126|0);
 HEAP8[$89>>0]=$86&255;HEAP8[$89+1>>0]=($86>>8)&255;HEAP8[$89+2>>0]=($86>>16)&255;HEAP8[$89+3>>0]=$86>>24;
 $90 = (__ls_create()|0);
 $91 = $1;
 $92 = HEAP32[$91>>2]|0;
 $93 = ((($92)) + 130|0);
 HEAP8[$93>>0]=$90&255;HEAP8[$93+1>>0]=($90>>8)&255;HEAP8[$93+2>>0]=($90>>16)&255;HEAP8[$93+3>>0]=$90>>24;
 $94 = (__ls_create()|0);
 $95 = $1;
 $96 = HEAP32[$95>>2]|0;
 $97 = ((($96)) + 17|0);
 HEAP8[$97>>0]=$94&255;HEAP8[$97+1>>0]=($94>>8)&255;HEAP8[$97+2>>0]=($94>>16)&255;HEAP8[$97+3>>0]=$94>>24;
 $98 = $1;
 $99 = HEAP32[$98>>2]|0;
 (__open_core_lib($99)|0);
 $100 = $1;
 $101 = HEAP32[$100>>2]|0;
 (__open_std_lib($101)|0);
 $102 = $1;
 $103 = HEAP32[$102>>2]|0;
 (__open_coll_lib($103)|0);
 $104 = $1;
 $105 = HEAP32[$104>>2]|0;
 $106 = (__open_constant($105)|0);
 $result = $106;
 $107 = $result;
 $108 = (0)==($107|0);
 if (!($108)) {
  ___assert_fail((4443|0),(4322|0),12258,(4455|0));
  // unreachable;
 }
 $109 = $result;
 $0 = $109;
 $110 = $0;
 STACKTOP = sp;return ($110|0);
}
function _mb_close($s) {
 $s = $s|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0;
 var $__lst = 0, $__opresult = 0, $__tmp = 0, $ast = 0, $global_scope = 0, $local_scope = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $s;
 $local_scope = 0;
 $global_scope = 0;
 $ast = 0;
 $2 = $1;
 $3 = ($2|0)!=(0|0);
 if ($3) {
  $4 = $1;
  $5 = HEAP32[$4>>2]|0;
  $6 = ($5|0)!=(0|0);
  if ($6) {
   $7 = $1;
   $8 = HEAP32[$7>>2]|0;
   $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
   $10 = ($9|0)!=(0|0);
   $11 = $1;
   if ($10) {
    $12 = (_mb_join($11)|0);
    $0 = $12;
    $199 = $0;
    STACKTOP = sp;return ($199|0);
   }
   $13 = HEAP32[$11>>2]|0;
   $14 = ((($13)) + 12|0);
   $15 = HEAP8[$14>>0]|0;
   $16 = $15 & -2;
   HEAP8[$14>>0] = $16;
   $17 = $1;
   $18 = HEAP32[$17>>2]|0;
   (__close_coll_lib($18)|0);
   $19 = $1;
   $20 = HEAP32[$19>>2]|0;
   (__close_std_lib($20)|0);
   $21 = $1;
   $22 = HEAP32[$21>>2]|0;
   (__close_core_lib($22)|0);
   $23 = $1;
   $24 = HEAP32[$23>>2]|0;
   $25 = ((($24)) + 17|0);
   $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
   $ast = $26;
   $27 = $ast;
   $__lst = $27;
   $__opresult = 0;
   $__tmp = 0;
   $28 = $ast;
   $29 = ($28|0)!=(0|0);
   if (!($29)) {
    ___assert_fail((4463|0),(4322|0),12286,(4467|0));
    // unreachable;
   }
   $30 = $__lst;
   $31 = ((($30)) + 8|0);
   $32 = HEAPU8[$31>>0]|(HEAPU8[$31+1>>0]<<8)|(HEAPU8[$31+2>>0]<<16)|(HEAPU8[$31+3>>0]<<24);
   $__lst = $32;
   while(1) {
    $33 = $__lst;
    $34 = ($33|0)!=(0|0);
    if (!($34)) {
     break;
    }
    $35 = $__lst;
    $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
    $37 = $__lst;
    $38 = ((($37)) + 12|0);
    $39 = HEAPU8[$38>>0]|(HEAPU8[$38+1>>0]<<8)|(HEAPU8[$38+2>>0]<<16)|(HEAPU8[$38+3>>0]<<24);
    $40 = $1;
    $41 = HEAP32[$40>>2]|0;
    __try_clear_intermediate_value($36,$39,$41);
    $42 = $__lst;
    $43 = HEAPU8[$42>>0]|(HEAPU8[$42+1>>0]<<8)|(HEAPU8[$42+2>>0]<<16)|(HEAPU8[$42+3>>0]<<24);
    $44 = $__lst;
    $45 = ((($44)) + 12|0);
    $46 = HEAPU8[$45>>0]|(HEAPU8[$45+1>>0]<<8)|(HEAPU8[$45+2>>0]<<16)|(HEAPU8[$45+3>>0]<<24);
    $47 = (__destroy_object($43,$46)|0);
    $__opresult = $47;
    $48 = $__lst;
    $__tmp = $48;
    $49 = $__lst;
    $50 = ((($49)) + 8|0);
    $51 = HEAPU8[$50>>0]|(HEAPU8[$50+1>>0]<<8)|(HEAPU8[$50+2>>0]<<16)|(HEAPU8[$50+3>>0]<<24);
    $__lst = $51;
    $52 = $__opresult;
    $53 = (-1)==($52|0);
    if (!($53)) {
     continue;
    }
    $54 = $__lst;
    $55 = $__tmp;
    $56 = ((($55)) + 4|0);
    $57 = HEAPU8[$56>>0]|(HEAPU8[$56+1>>0]<<8)|(HEAPU8[$56+2>>0]<<16)|(HEAPU8[$56+3>>0]<<24);
    $58 = ((($57)) + 8|0);
    HEAP8[$58>>0]=$54&255;HEAP8[$58+1>>0]=($54>>8)&255;HEAP8[$58+2>>0]=($54>>16)&255;HEAP8[$58+3>>0]=$54>>24;
    $59 = $__lst;
    $60 = ($59|0)!=(0|0);
    if ($60) {
     $61 = $__tmp;
     $62 = ((($61)) + 4|0);
     $63 = HEAPU8[$62>>0]|(HEAPU8[$62+1>>0]<<8)|(HEAPU8[$62+2>>0]<<16)|(HEAPU8[$62+3>>0]<<24);
     $64 = $__lst;
     $65 = ((($64)) + 4|0);
     HEAP8[$65>>0]=$63&255;HEAP8[$65+1>>0]=($63>>8)&255;HEAP8[$65+2>>0]=($63>>16)&255;HEAP8[$65+3>>0]=$63>>24;
    }
    $66 = $__tmp;
    $67 = ($66|0)!=(0|0);
    if (!($67)) {
     label = 15;
     break;
    }
    $68 = $__tmp;
    _mb_free($68);
    $__tmp = 0;
    $69 = $ast;
    $70 = HEAPU8[$69>>0]|(HEAPU8[$69+1>>0]<<8)|(HEAPU8[$69+2>>0]<<16)|(HEAPU8[$69+3>>0]<<24);
    $71 = ((($70)) + -1|0);
    $72 = $ast;
    HEAP8[$72>>0]=$71&255;HEAP8[$72+1>>0]=($71>>8)&255;HEAP8[$72+2>>0]=($71>>16)&255;HEAP8[$72+3>>0]=$71>>24;
   }
   if ((label|0) == 15) {
    ___assert_fail((4369|0),(4322|0),12286,(4467|0));
    // unreachable;
   }
   $73 = $ast;
   __ls_destroy($73);
   $74 = $1;
   $75 = HEAP32[$74>>2]|0;
   $76 = ((($75)) + 102|0);
   $77 = HEAPU8[$76>>0]|(HEAPU8[$76+1>>0]<<8)|(HEAPU8[$76+2>>0]<<16)|(HEAPU8[$76+3>>0]<<24);
   __ls_destroy($77);
   $78 = $1;
   $79 = HEAP32[$78>>2]|0;
   $80 = ((($79)) + 122|0);
   $81 = HEAPU8[$80>>0]|(HEAPU8[$80+1>>0]<<8)|(HEAPU8[$80+2>>0]<<16)|(HEAPU8[$80+3>>0]<<24);
   __ls_destroy($81);
   $82 = $1;
   $83 = HEAP32[$82>>2]|0;
   $84 = ((($83)) + 126|0);
   $85 = HEAPU8[$84>>0]|(HEAPU8[$84+1>>0]<<8)|(HEAPU8[$84+2>>0]<<16)|(HEAPU8[$84+3>>0]<<24);
   __ls_destroy($85);
   $86 = $1;
   $87 = HEAP32[$86>>2]|0;
   $88 = ((($87)) + 130|0);
   $89 = HEAPU8[$88>>0]|(HEAPU8[$88+1>>0]<<8)|(HEAPU8[$88+2>>0]<<16)|(HEAPU8[$88+3>>0]<<24);
   __ls_destroy($89);
   $90 = $1;
   $91 = HEAP32[$90>>2]|0;
   __tidy_scope_chain($91);
   $92 = $1;
   $93 = HEAP32[$92>>2]|0;
   (__dispose_scope_chain($93)|0);
   $94 = $1;
   $95 = HEAP32[$94>>2]|0;
   $96 = ((($95)) + 21|0);
   $97 = ((($96)) + 17|0);
   $98 = HEAP8[$97>>0]|0;
   $99 = $98 & -2;
   HEAP8[$97>>0] = $99;
   $100 = $1;
   $101 = HEAP32[$100>>2]|0;
   __gc_collect_garbage($101,-1);
   $102 = $1;
   $103 = HEAP32[$102>>2]|0;
   $104 = ((($103)) + 21|0);
   $105 = HEAPU8[$104>>0]|(HEAPU8[$104+1>>0]<<8)|(HEAPU8[$104+2>>0]<<16)|(HEAPU8[$104+3>>0]<<24);
   __ht_destroy($105);
   $106 = $1;
   $107 = HEAP32[$106>>2]|0;
   $108 = ((($107)) + 21|0);
   $109 = ((($108)) + 4|0);
   $110 = HEAPU8[$109>>0]|(HEAPU8[$109+1>>0]<<8)|(HEAPU8[$109+2>>0]<<16)|(HEAPU8[$109+3>>0]<<24);
   __ht_destroy($110);
   $111 = $1;
   $112 = HEAP32[$111>>2]|0;
   $113 = ((($112)) + 21|0);
   $114 = ((($113)) + 8|0);
   $115 = HEAPU8[$114>>0]|(HEAPU8[$114+1>>0]<<8)|(HEAPU8[$114+2>>0]<<16)|(HEAPU8[$114+3>>0]<<24);
   __ht_destroy($115);
   $116 = $1;
   $117 = HEAP32[$116>>2]|0;
   $118 = ((($117)) + 21|0);
   HEAP8[$118>>0]=0&255;HEAP8[$118+1>>0]=(0>>8)&255;HEAP8[$118+2>>0]=(0>>16)&255;HEAP8[$118+3>>0]=0>>24;
   $119 = $1;
   $120 = HEAP32[$119>>2]|0;
   $121 = ((($120)) + 21|0);
   $122 = ((($121)) + 4|0);
   HEAP8[$122>>0]=0&255;HEAP8[$122+1>>0]=(0>>8)&255;HEAP8[$122+2>>0]=(0>>16)&255;HEAP8[$122+3>>0]=0>>24;
   $123 = $1;
   $124 = HEAP32[$123>>2]|0;
   $125 = ((($124)) + 21|0);
   $126 = ((($125)) + 8|0);
   HEAP8[$126>>0]=0&255;HEAP8[$126+1>>0]=(0>>8)&255;HEAP8[$126+2>>0]=(0>>16)&255;HEAP8[$126+3>>0]=0>>24;
   $127 = $1;
   $128 = HEAP32[$127>>2]|0;
   $129 = ((($128)) + 8|0);
   $130 = HEAPU8[$129>>0]|(HEAPU8[$129+1>>0]<<8)|(HEAPU8[$129+2>>0]<<16)|(HEAPU8[$129+3>>0]<<24);
   $131 = ($130|0)!=(0|0);
   do {
    if ($131) {
     $132 = $1;
     $133 = HEAP32[$132>>2]|0;
     $134 = ((($133)) + 8|0);
     $135 = HEAPU8[$134>>0]|(HEAPU8[$134+1>>0]<<8)|(HEAPU8[$134+2>>0]<<16)|(HEAPU8[$134+3>>0]<<24);
     (__ls_count($135)|0);
     $136 = $1;
     $137 = HEAP32[$136>>2]|0;
     $138 = ((($137)) + 8|0);
     $139 = HEAPU8[$138>>0]|(HEAPU8[$138+1>>0]<<8)|(HEAPU8[$138+2>>0]<<16)|(HEAPU8[$138+3>>0]<<24);
     $140 = (__ls_count($139)|0);
     $141 = ($140|0)==(0);
     if ($141) {
      $142 = $1;
      $143 = HEAP32[$142>>2]|0;
      $144 = ((($143)) + 8|0);
      $145 = HEAPU8[$144>>0]|(HEAPU8[$144+1>>0]<<8)|(HEAPU8[$144+2>>0]<<16)|(HEAPU8[$144+3>>0]<<24);
      __ls_destroy($145);
      break;
     } else {
      ___assert_fail((4476|0),(4322|0),12314,(4467|0));
      // unreachable;
     }
    }
   } while(0);
   $146 = $1;
   $147 = HEAP32[$146>>2]|0;
   $148 = ((($147)) + 39|0);
   $149 = HEAPU8[$148>>0]|(HEAPU8[$148+1>>0]<<8)|(HEAPU8[$148+2>>0]<<16)|(HEAPU8[$148+3>>0]<<24);
   (__ls_foreach($149,134)|0);
   $150 = $1;
   $151 = HEAP32[$150>>2]|0;
   $152 = ((($151)) + 39|0);
   $153 = HEAPU8[$152>>0]|(HEAPU8[$152+1>>0]<<8)|(HEAPU8[$152+2>>0]<<16)|(HEAPU8[$152+3>>0]<<24);
   __ls_destroy($153);
   $154 = $1;
   $155 = HEAP32[$154>>2]|0;
   $156 = ((($155)) + 43|0);
   $157 = HEAPU8[$156>>0]|(HEAPU8[$156+1>>0]<<8)|(HEAPU8[$156+2>>0]<<16)|(HEAPU8[$156+3>>0]<<24);
   (__ls_foreach($157,134)|0);
   $158 = $1;
   $159 = HEAP32[$158>>2]|0;
   $160 = ((($159)) + 43|0);
   $161 = HEAPU8[$160>>0]|(HEAPU8[$160+1>>0]<<8)|(HEAPU8[$160+2>>0]<<16)|(HEAPU8[$160+3>>0]<<24);
   __ls_destroy($161);
   $162 = $1;
   $163 = HEAP32[$162>>2]|0;
   $164 = ((($163)) + 71|0);
   __destroy_parsing_context($164);
   $165 = $1;
   $166 = HEAP32[$165>>2]|0;
   $167 = ((($166)) + 55|0);
   $168 = HEAPU8[$167>>0]|(HEAPU8[$167+1>>0]<<8)|(HEAPU8[$167+2>>0]<<16)|(HEAPU8[$167+3>>0]<<24);
   $global_scope = $168;
   $169 = $global_scope;
   (__ht_foreach($169,130)|0);
   $170 = $global_scope;
   __ht_destroy($170);
   $171 = $1;
   $172 = HEAP32[$171>>2]|0;
   $173 = ((($172)) + 63|0);
   $174 = HEAPU8[$173>>0]|(HEAPU8[$173+1>>0]<<8)|(HEAPU8[$173+2>>0]<<16)|(HEAPU8[$173+3>>0]<<24);
   (__ls_foreach($174,135)|0);
   $175 = $1;
   $176 = HEAP32[$175>>2]|0;
   $177 = ((($176)) + 63|0);
   $178 = HEAPU8[$177>>0]|(HEAPU8[$177+1>>0]<<8)|(HEAPU8[$177+2>>0]<<16)|(HEAPU8[$177+3>>0]<<24);
   __ls_destroy($178);
   $179 = $1;
   $180 = HEAP32[$179>>2]|0;
   $181 = ((($180)) + 51|0);
   $182 = HEAPU8[$181>>0]|(HEAPU8[$181+1>>0]<<8)|(HEAPU8[$181+2>>0]<<16)|(HEAPU8[$181+3>>0]<<24);
   $global_scope = $182;
   $183 = $global_scope;
   (__ht_foreach($183,129)|0);
   $184 = $global_scope;
   __ht_destroy($184);
   $185 = $1;
   $186 = HEAP32[$185>>2]|0;
   $187 = ((($186)) + 47|0);
   $188 = HEAPU8[$187>>0]|(HEAPU8[$187+1>>0]<<8)|(HEAPU8[$187+2>>0]<<16)|(HEAPU8[$187+3>>0]<<24);
   $local_scope = $188;
   $189 = $local_scope;
   (__ht_foreach($189,129)|0);
   $190 = $local_scope;
   __ht_destroy($190);
   $191 = $1;
   $192 = HEAP32[$191>>2]|0;
   (__close_constant($192)|0);
   $193 = $1;
   $194 = HEAP32[$193>>2]|0;
   $195 = ($194|0)!=(0|0);
   if (!($195)) {
    ___assert_fail((4369|0),(4322|0),12344,(4467|0));
    // unreachable;
   }
   $196 = $1;
   $197 = HEAP32[$196>>2]|0;
   _mb_free($197);
   $198 = $1;
   HEAP32[$198>>2] = 0;
   $0 = 0;
   $199 = $0;
   STACKTOP = sp;return ($199|0);
  }
 }
 $0 = 3;
 $199 = $0;
 STACKTOP = sp;return ($199|0);
}
function _mb_join($s) {
 $s = $s|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $9 = 0, $result = 0, $src = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $src = sp;
 $1 = $s;
 $result = 0;
 HEAP32[$src>>2] = 0;
 $2 = $1;
 $3 = ($2|0)!=(0|0);
 if ($3) {
  $4 = $1;
  $5 = HEAP32[$4>>2]|0;
  $6 = ($5|0)!=(0|0);
  if ($6) {
   $7 = $1;
   $8 = HEAP32[$7>>2]|0;
   $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
   $10 = ($9|0)!=(0|0);
   if ($10) {
    $11 = $1;
    $12 = HEAP32[$11>>2]|0;
    HEAP32[$src>>2] = $12;
    while(1) {
     $13 = HEAP32[$src>>2]|0;
     $14 = (_mb_get_forked_from($13,$src)|0);
     $15 = ($14|0)==(0);
     if (!($15)) {
      break;
     }
    }
    $16 = $1;
    $17 = HEAP32[$16>>2]|0;
    $18 = ((($17)) + 12|0);
    $19 = HEAP8[$18>>0]|0;
    $20 = $19 & -2;
    HEAP8[$18>>0] = $20;
    $21 = $1;
    $22 = HEAP32[$21>>2]|0;
    $23 = ((($22)) + 102|0);
    $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
    __ls_destroy($24);
    $25 = $1;
    $26 = HEAP32[$25>>2]|0;
    $27 = ((($26)) + 122|0);
    $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
    __ls_destroy($28);
    $29 = $1;
    $30 = HEAP32[$29>>2]|0;
    $31 = ((($30)) + 126|0);
    $32 = HEAPU8[$31>>0]|(HEAPU8[$31+1>>0]<<8)|(HEAPU8[$31+2>>0]<<16)|(HEAPU8[$31+3>>0]<<24);
    __ls_destroy($32);
    $33 = $1;
    $34 = HEAP32[$33>>2]|0;
    $35 = ((($34)) + 130|0);
    $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
    __ls_destroy($36);
    $37 = $1;
    $38 = HEAP32[$37>>2]|0;
    $39 = ((($38)) + 4|0);
    $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8)|(HEAPU8[$39+2>>0]<<16)|(HEAPU8[$39+3>>0]<<24);
    HEAP8[$40>>0]=0&255;HEAP8[$40+1>>0]=(0>>8)&255;HEAP8[$40+2>>0]=(0>>16)&255;HEAP8[$40+3>>0]=0>>24;
    $41 = $1;
    $42 = HEAP32[$41>>2]|0;
    $43 = ((($42)) + 4|0);
    $44 = HEAPU8[$43>>0]|(HEAPU8[$43+1>>0]<<8)|(HEAPU8[$43+2>>0]<<16)|(HEAPU8[$43+3>>0]<<24);
    $45 = $1;
    $46 = HEAP32[$45>>2]|0;
    $47 = ((($46)) + 75|0);
    HEAP8[$47>>0]=$44&255;HEAP8[$47+1>>0]=($44>>8)&255;HEAP8[$47+2>>0]=($44>>16)&255;HEAP8[$47+3>>0]=$44>>24;
    $48 = $1;
    $49 = HEAP32[$48>>2]|0;
    (__dispose_scope_chain($49)|0);
    $50 = $1;
    $51 = HEAP32[$50>>2]|0;
    $52 = ((($51)) + 39|0);
    $53 = HEAPU8[$52>>0]|(HEAPU8[$52+1>>0]<<8)|(HEAPU8[$52+2>>0]<<16)|(HEAPU8[$52+3>>0]<<24);
    (__ls_foreach($53,134)|0);
    $54 = $1;
    $55 = HEAP32[$54>>2]|0;
    $56 = ((($55)) + 39|0);
    $57 = HEAPU8[$56>>0]|(HEAPU8[$56+1>>0]<<8)|(HEAPU8[$56+2>>0]<<16)|(HEAPU8[$56+3>>0]<<24);
    __ls_destroy($57);
    $58 = $1;
    $59 = HEAP32[$58>>2]|0;
    $60 = ((($59)) + 43|0);
    $61 = HEAPU8[$60>>0]|(HEAPU8[$60+1>>0]<<8)|(HEAPU8[$60+2>>0]<<16)|(HEAPU8[$60+3>>0]<<24);
    (__ls_foreach($61,134)|0);
    $62 = $1;
    $63 = HEAP32[$62>>2]|0;
    $64 = ((($63)) + 43|0);
    $65 = HEAPU8[$64>>0]|(HEAPU8[$64+1>>0]<<8)|(HEAPU8[$64+2>>0]<<16)|(HEAPU8[$64+3>>0]<<24);
    __ls_destroy($65);
    $66 = HEAP32[$src>>2]|0;
    $67 = ((($66)) + 8|0);
    $68 = HEAPU8[$67>>0]|(HEAPU8[$67+1>>0]<<8)|(HEAPU8[$67+2>>0]<<16)|(HEAPU8[$67+3>>0]<<24);
    $69 = ($68|0)!=(0|0);
    if ($69) {
     $70 = HEAP32[$src>>2]|0;
     $71 = ((($70)) + 8|0);
     $72 = HEAPU8[$71>>0]|(HEAPU8[$71+1>>0]<<8)|(HEAPU8[$71+2>>0]<<16)|(HEAPU8[$71+3>>0]<<24);
     $73 = $1;
     $74 = HEAP32[$73>>2]|0;
     (__ls_try_remove($72,$74,136,0)|0);
    }
    $75 = $1;
    $76 = HEAP32[$75>>2]|0;
    $77 = ($76|0)!=(0|0);
    if (!($77)) {
     ___assert_fail((4369|0),(4322|0),12520,(4509|0));
     // unreachable;
    }
    $78 = $1;
    $79 = HEAP32[$78>>2]|0;
    _mb_free($79);
    $80 = $1;
    HEAP32[$80>>2] = 0;
    $81 = $result;
    $0 = $81;
    $82 = $0;
    STACKTOP = sp;return ($82|0);
   }
  }
 }
 $0 = 3;
 $82 = $0;
 STACKTOP = sp;return ($82|0);
}
function _mb_reset($s,$clear_funcs,$clear_vars) {
 $s = $s|0;
 $clear_funcs = $clear_funcs|0;
 $clear_vars = $clear_vars|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__lst = 0, $__opresult = 0, $__tmp = 0, $ast = 0, $global_scope = 0, $result = 0, $running = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $s;
 $2 = $clear_funcs;
 $3 = $clear_vars;
 $result = 0;
 $global_scope = 0;
 $running = 0;
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 if ($5) {
  $6 = $1;
  $7 = HEAP32[$6>>2]|0;
  $8 = ($7|0)!=(0|0);
  if ($8) {
   $9 = $1;
   $10 = HEAP32[$9>>2]|0;
   $11 = ((($10)) + 12|0);
   $12 = HEAP8[$11>>0]|0;
   $13 = $12 & -2;
   HEAP8[$11>>0] = $13;
   $14 = $1;
   $15 = HEAP32[$14>>2]|0;
   $16 = ((($15)) + 79|0);
   HEAP8[$16>>0]=0&255;HEAP8[$16+1>>0]=(0>>8)&255;HEAP8[$16+2>>0]=(0>>16)&255;HEAP8[$16+3>>0]=0>>24;
   $17 = $1;
   $18 = HEAP32[$17>>2]|0;
   $19 = ((($18)) + 83|0);
   $20 = HEAP8[$19>>0]|0;
   $21 = $20 & -2;
   HEAP8[$19>>0] = $21;
   $22 = $1;
   $23 = HEAP32[$22>>2]|0;
   $24 = ((($23)) + 92|0);
   HEAP8[$24>>0] = 0;
   $25 = $1;
   $26 = HEAP32[$25>>2]|0;
   $27 = ((($26)) + 93|0);
   HEAP8[$27>>0]=0&255;HEAP8[$27+1>>0]=(0>>8)&255;HEAP8[$27+2>>0]=(0>>16)&255;HEAP8[$27+3>>0]=0>>24;
   $28 = $1;
   $29 = HEAP32[$28>>2]|0;
   $30 = ((($29)) + 97|0);
   $31 = HEAP8[$30>>0]|0;
   $32 = $31 & -2;
   HEAP8[$30>>0] = $32;
   $33 = $1;
   $34 = HEAP32[$33>>2]|0;
   $35 = ((($34)) + 98|0);
   HEAP8[$35>>0]=0&255;HEAP8[$35+1>>0]=(0>>8)&255;HEAP8[$35+2>>0]=(0>>16)&255;HEAP8[$35+3>>0]=0>>24;
   $36 = $1;
   $37 = HEAP32[$36>>2]|0;
   $38 = ((($37)) + 114|0);
   HEAP8[$38>>0]=0&255;HEAP8[$38+1>>0]=(0>>8)&255;HEAP8[$38+2>>0]=(0>>16)&255;HEAP8[$38+3>>0]=0>>24;
   $39 = $1;
   $40 = HEAP32[$39>>2]|0;
   $41 = ((($40)) + 134|0);
   $42 = HEAP8[$41>>0]|0;
   $43 = $42 & -2;
   HEAP8[$41>>0] = $43;
   $44 = $1;
   $45 = HEAP32[$44>>2]|0;
   $46 = ((($45)) + 135|0);
   HEAP8[$46>>0]=0&255;HEAP8[$46+1>>0]=(0>>8)&255;HEAP8[$46+2>>0]=(0>>16)&255;HEAP8[$46+3>>0]=0>>24;
   $47 = $1;
   $48 = HEAP32[$47>>2]|0;
   $49 = ((($48)) + 139|0);
   HEAP8[$49>>0]=0&255;HEAP8[$49+1>>0]=(0>>8)&255;HEAP8[$49+2>>0]=(0>>16)&255;HEAP8[$49+3>>0]=0>>24;
   $50 = $1;
   $51 = HEAP32[$50>>2]|0;
   $52 = ((($51)) + 75|0);
   $53 = HEAPU8[$52>>0]|(HEAPU8[$52+1>>0]<<8)|(HEAPU8[$52+2>>0]<<16)|(HEAPU8[$52+3>>0]<<24);
   $running = $53;
   $54 = $1;
   $55 = HEAP32[$54>>2]|0;
   $56 = ((($55)) + 106|0);
   HEAP8[$56>>0]=0&255;HEAP8[$56+1>>0]=(0>>8)&255;HEAP8[$56+2>>0]=(0>>16)&255;HEAP8[$56+3>>0]=0>>24;
   $57 = $running;
   $58 = ((($57)) + 16|0);
   HEAP8[$58>>0]=0&255;HEAP8[$58+1>>0]=(0>>8)&255;HEAP8[$58+2>>0]=(0>>16)&255;HEAP8[$58+3>>0]=0>>24;
   $59 = $running;
   $60 = ((($59)) + 20|0);
   ;HEAP8[$60>>0]=0|0;HEAP8[$60+1>>0]=0|0;HEAP8[$60+2>>0]=0|0;HEAP8[$60+3>>0]=0|0;HEAP8[$60+4>>0]=0|0;HEAP8[$60+5>>0]=0|0;HEAP8[$60+6>>0]=0|0;HEAP8[$60+7>>0]=0|0;
   $61 = $1;
   $62 = HEAP32[$61>>2]|0;
   $63 = ((($62)) + 17|0);
   $64 = HEAPU8[$63>>0]|(HEAPU8[$63+1>>0]<<8)|(HEAPU8[$63+2>>0]<<16)|(HEAPU8[$63+3>>0]<<24);
   $ast = $64;
   $65 = $ast;
   $__lst = $65;
   $__opresult = 0;
   $__tmp = 0;
   $66 = $ast;
   $67 = ($66|0)!=(0|0);
   if (!($67)) {
    ___assert_fail((4463|0),(4322|0),12380,(4517|0));
    // unreachable;
   }
   $68 = $__lst;
   $69 = ((($68)) + 8|0);
   $70 = HEAPU8[$69>>0]|(HEAPU8[$69+1>>0]<<8)|(HEAPU8[$69+2>>0]<<16)|(HEAPU8[$69+3>>0]<<24);
   $__lst = $70;
   while(1) {
    $71 = $__lst;
    $72 = ($71|0)!=(0|0);
    if (!($72)) {
     break;
    }
    $73 = $__lst;
    $74 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
    $75 = $__lst;
    $76 = ((($75)) + 12|0);
    $77 = HEAPU8[$76>>0]|(HEAPU8[$76+1>>0]<<8)|(HEAPU8[$76+2>>0]<<16)|(HEAPU8[$76+3>>0]<<24);
    $78 = $1;
    $79 = HEAP32[$78>>2]|0;
    __try_clear_intermediate_value($74,$77,$79);
    $80 = $__lst;
    $81 = HEAPU8[$80>>0]|(HEAPU8[$80+1>>0]<<8)|(HEAPU8[$80+2>>0]<<16)|(HEAPU8[$80+3>>0]<<24);
    $82 = $__lst;
    $83 = ((($82)) + 12|0);
    $84 = HEAPU8[$83>>0]|(HEAPU8[$83+1>>0]<<8)|(HEAPU8[$83+2>>0]<<16)|(HEAPU8[$83+3>>0]<<24);
    $85 = (__destroy_object($81,$84)|0);
    $__opresult = $85;
    $86 = $__lst;
    $__tmp = $86;
    $87 = $__lst;
    $88 = ((($87)) + 8|0);
    $89 = HEAPU8[$88>>0]|(HEAPU8[$88+1>>0]<<8)|(HEAPU8[$88+2>>0]<<16)|(HEAPU8[$88+3>>0]<<24);
    $__lst = $89;
    $90 = $__opresult;
    $91 = (-1)==($90|0);
    if (!($91)) {
     continue;
    }
    $92 = $__lst;
    $93 = $__tmp;
    $94 = ((($93)) + 4|0);
    $95 = HEAPU8[$94>>0]|(HEAPU8[$94+1>>0]<<8)|(HEAPU8[$94+2>>0]<<16)|(HEAPU8[$94+3>>0]<<24);
    $96 = ((($95)) + 8|0);
    HEAP8[$96>>0]=$92&255;HEAP8[$96+1>>0]=($92>>8)&255;HEAP8[$96+2>>0]=($92>>16)&255;HEAP8[$96+3>>0]=$92>>24;
    $97 = $__lst;
    $98 = ($97|0)!=(0|0);
    if ($98) {
     $99 = $__tmp;
     $100 = ((($99)) + 4|0);
     $101 = HEAPU8[$100>>0]|(HEAPU8[$100+1>>0]<<8)|(HEAPU8[$100+2>>0]<<16)|(HEAPU8[$100+3>>0]<<24);
     $102 = $__lst;
     $103 = ((($102)) + 4|0);
     HEAP8[$103>>0]=$101&255;HEAP8[$103+1>>0]=($101>>8)&255;HEAP8[$103+2>>0]=($101>>16)&255;HEAP8[$103+3>>0]=$101>>24;
    }
    $104 = $__tmp;
    $105 = ($104|0)!=(0|0);
    if (!($105)) {
     label = 13;
     break;
    }
    $106 = $__tmp;
    _mb_free($106);
    $__tmp = 0;
    $107 = $ast;
    $108 = HEAPU8[$107>>0]|(HEAPU8[$107+1>>0]<<8)|(HEAPU8[$107+2>>0]<<16)|(HEAPU8[$107+3>>0]<<24);
    $109 = ((($108)) + -1|0);
    $110 = $ast;
    HEAP8[$110>>0]=$109&255;HEAP8[$110+1>>0]=($109>>8)&255;HEAP8[$110+2>>0]=($109>>16)&255;HEAP8[$110+3>>0]=$109>>24;
   }
   if ((label|0) == 13) {
    ___assert_fail((4369|0),(4322|0),12380,(4517|0));
    // unreachable;
   }
   $111 = $ast;
   __ls_clear($111);
   $112 = $1;
   $113 = HEAP32[$112>>2]|0;
   $114 = ((($113)) + 102|0);
   $115 = HEAPU8[$114>>0]|(HEAPU8[$114+1>>0]<<8)|(HEAPU8[$114+2>>0]<<16)|(HEAPU8[$114+3>>0]<<24);
   __ls_clear($115);
   $116 = $1;
   $117 = HEAP32[$116>>2]|0;
   $118 = ((($117)) + 126|0);
   $119 = HEAPU8[$118>>0]|(HEAPU8[$118+1>>0]<<8)|(HEAPU8[$118+2>>0]<<16)|(HEAPU8[$118+3>>0]<<24);
   __ls_clear($119);
   $120 = $1;
   $121 = HEAP32[$120>>2]|0;
   $122 = ((($121)) + 130|0);
   $123 = HEAPU8[$122>>0]|(HEAPU8[$122+1>>0]<<8)|(HEAPU8[$122+2>>0]<<16)|(HEAPU8[$122+3>>0]<<24);
   __ls_clear($123);
   $124 = $3;
   $125 = ($124<<24>>24)!=(0);
   if ($125) {
    $126 = $1;
    $127 = HEAP32[$126>>2]|0;
    __tidy_scope_chain($127);
    $128 = $1;
    $129 = HEAP32[$128>>2]|0;
    (__clear_scope_chain($129)|0);
   }
   $130 = $1;
   $131 = HEAP32[$130>>2]|0;
   $132 = ((($131)) + 8|0);
   $133 = HEAPU8[$132>>0]|(HEAPU8[$132+1>>0]<<8)|(HEAPU8[$132+2>>0]<<16)|(HEAPU8[$132+3>>0]<<24);
   $134 = ($133|0)!=(0|0);
   do {
    if ($134) {
     $135 = $1;
     $136 = HEAP32[$135>>2]|0;
     $137 = ((($136)) + 8|0);
     $138 = HEAPU8[$137>>0]|(HEAPU8[$137+1>>0]<<8)|(HEAPU8[$137+2>>0]<<16)|(HEAPU8[$137+3>>0]<<24);
     (__ls_count($138)|0);
     $139 = $1;
     $140 = HEAP32[$139>>2]|0;
     $141 = ((($140)) + 8|0);
     $142 = HEAPU8[$141>>0]|(HEAPU8[$141+1>>0]<<8)|(HEAPU8[$141+2>>0]<<16)|(HEAPU8[$141+3>>0]<<24);
     $143 = (__ls_count($142)|0);
     $144 = ($143|0)==(0);
     if ($144) {
      $145 = $1;
      $146 = HEAP32[$145>>2]|0;
      $147 = ((($146)) + 8|0);
      $148 = HEAPU8[$147>>0]|(HEAPU8[$147+1>>0]<<8)|(HEAPU8[$147+2>>0]<<16)|(HEAPU8[$147+3>>0]<<24);
      __ls_clear($148);
      break;
     } else {
      ___assert_fail((4476|0),(4322|0),12399,(4517|0));
      // unreachable;
     }
    }
   } while(0);
   $149 = $1;
   $150 = HEAP32[$149>>2]|0;
   $151 = ((($150)) + 71|0);
   $152 = HEAPU8[$151>>0]|(HEAPU8[$151+1>>0]<<8)|(HEAPU8[$151+2>>0]<<16)|(HEAPU8[$151+3>>0]<<24);
   $153 = (__reset_parsing_context($152)|0);
   $154 = $1;
   $155 = HEAP32[$154>>2]|0;
   $156 = ((($155)) + 71|0);
   HEAP8[$156>>0]=$153&255;HEAP8[$156+1>>0]=($153>>8)&255;HEAP8[$156+2>>0]=($153>>16)&255;HEAP8[$156+3>>0]=$153>>24;
   $157 = $2;
   $158 = ($157<<24>>24)!=(0);
   if ($158) {
    $159 = $1;
    $160 = HEAP32[$159>>2]|0;
    $161 = ((($160)) + 55|0);
    $162 = HEAPU8[$161>>0]|(HEAPU8[$161+1>>0]<<8)|(HEAPU8[$161+2>>0]<<16)|(HEAPU8[$161+3>>0]<<24);
    $global_scope = $162;
    $163 = $global_scope;
    (__ht_foreach($163,130)|0);
    $164 = $global_scope;
    __ht_clear($164);
    $165 = $1;
    $166 = HEAP32[$165>>2]|0;
    $167 = ((($166)) + 63|0);
    $168 = HEAPU8[$167>>0]|(HEAPU8[$167+1>>0]<<8)|(HEAPU8[$167+2>>0]<<16)|(HEAPU8[$167+3>>0]<<24);
    (__ls_foreach($168,135)|0);
    $169 = $1;
    $170 = HEAP32[$169>>2]|0;
    $171 = ((($170)) + 63|0);
    $172 = HEAPU8[$171>>0]|(HEAPU8[$171+1>>0]<<8)|(HEAPU8[$171+2>>0]<<16)|(HEAPU8[$171+3>>0]<<24);
    __ls_clear($172);
    $173 = $1;
    $174 = HEAP32[$173>>2]|0;
    $175 = ((($174)) + 51|0);
    $176 = HEAPU8[$175>>0]|(HEAPU8[$175+1>>0]<<8)|(HEAPU8[$175+2>>0]<<16)|(HEAPU8[$175+3>>0]<<24);
    $global_scope = $176;
    $177 = $global_scope;
    (__ht_foreach($177,129)|0);
    $178 = $global_scope;
    __ht_clear($178);
   }
   $179 = $1;
   $180 = HEAP32[$179>>2]|0;
   $181 = (__open_constant($180)|0);
   $result = $181;
   $182 = $result;
   $183 = (0)==($182|0);
   if (!($183)) {
    ___assert_fail((4443|0),(4322|0),12421,(4517|0));
    // unreachable;
   }
   $184 = $1;
   $185 = HEAP32[$184>>2]|0;
   $186 = ((($185)) + 12|0);
   $187 = HEAP8[$186>>0]|0;
   $188 = $187 & -2;
   $189 = $188 | 1;
   HEAP8[$186>>0] = $189;
   $190 = $result;
   $0 = $190;
   $191 = $0;
   STACKTOP = sp;return ($191|0);
  }
 }
 $0 = 3;
 $191 = $0;
 STACKTOP = sp;return ($191|0);
}
function _mb_get_forked_from($s,$src) {
 $s = $s|0;
 $src = $src|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $src;
 $result = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 do {
  if ($or$cond) {
   $6 = $0;
   $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
   $8 = ($7|0)==(0|0);
   if ($8) {
    $result = 3;
    break;
   } else {
    $9 = $0;
    $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
    $11 = $1;
    HEAP32[$11>>2] = $10;
    break;
   }
  } else {
   $result = 3;
  }
 } while(0);
 $12 = $result;
 STACKTOP = sp;return ($12|0);
}
function _mb_register_func($s,$n,$f) {
 $s = $s|0;
 $n = $n|0;
 $f = $f|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $s;
 $2 = $n;
 $3 = $f;
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $6 = $2;
 $7 = ($6|0)!=(0|0);
 $or$cond = $5 & $7;
 $8 = $3;
 $9 = ($8|0)!=(0|0);
 $or$cond3 = $or$cond & $9;
 if ($or$cond3) {
  $10 = $1;
  $11 = $2;
  $12 = $3;
  $13 = (__register_func($10,$11,$12,0)|0);
  $0 = $13;
  $14 = $0;
  STACKTOP = sp;return ($14|0);
 } else {
  $0 = 0;
  $14 = $0;
  STACKTOP = sp;return ($14|0);
 }
 return (0)|0;
}
function _mb_attempt_func_begin($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $ast = 0, $obj = 0, $or$cond = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $l;
 $result = 0;
 $ast = 0;
 $obj = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 do {
  if ($or$cond) {
   $6 = $0;
   $7 = ((($6)) + 130|0);
   $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
   (__ls_pushback($8,0)|0);
   $9 = $1;
   $10 = HEAP32[$9>>2]|0;
   $ast = $10;
   $11 = $ast;
   $12 = ($11|0)!=(0|0);
   if (!($12)) {
    $result = 3;
    break;
   }
   $13 = $ast;
   $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
   $obj = $14;
   $15 = $obj;
   $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
   $17 = ($16|0)==(8);
   if ($17) {
    $52 = $ast;
    $53 = ((($52)) + 8|0);
    $54 = HEAPU8[$53>>0]|(HEAPU8[$53+1>>0]<<8)|(HEAPU8[$53+2>>0]<<16)|(HEAPU8[$53+3>>0]<<24);
    $ast = $54;
    $55 = $0;
    $56 = ((($55)) + 114|0);
    $57 = HEAPU8[$56>>0]|(HEAPU8[$56+1>>0]<<8)|(HEAPU8[$56+2>>0]<<16)|(HEAPU8[$56+3>>0]<<24);
    $58 = (($57) + 1)|0;
    HEAP8[$56>>0]=$58&255;HEAP8[$56+1>>0]=($58>>8)&255;HEAP8[$56+2>>0]=($58>>16)&255;HEAP8[$56+3>>0]=$58>>24;
    break;
   }
   $18 = $0;
   $19 = ((($18)) + 130|0);
   $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8)|(HEAPU8[$19+2>>0]<<16)|(HEAPU8[$19+3>>0]<<24);
   (__ls_popback($20)|0);
   $21 = $ast;
   $22 = ($21|0)!=(0|0);
   if ($22) {
    $23 = $ast;
    $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
    $25 = ($24|0)!=(0|0);
    if ($25) {
     $26 = $0;
     $27 = $0;
     $28 = ((($27)) + 67|0);
     $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
     $30 = (__set_current_error($26,27,$29)|0);
     $31 = ($30<<24>>24)!=(0);
     if (!($31)) {
      break;
     }
     $32 = $0;
     $33 = $ast;
     $34 = HEAPU8[$33>>0]|(HEAPU8[$33+1>>0]<<8)|(HEAPU8[$33+2>>0]<<16)|(HEAPU8[$33+3>>0]<<24);
     $35 = ((($34)) + 9|0);
     $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
     $37 = $ast;
     $38 = HEAPU8[$37>>0]|(HEAPU8[$37+1>>0]<<8)|(HEAPU8[$37+2>>0]<<16)|(HEAPU8[$37+3>>0]<<24);
     $39 = ((($38)) + 13|0);
     $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8);
     $41 = $ast;
     $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
     $43 = ((($42)) + 15|0);
     $44 = HEAPU8[$43>>0]|(HEAPU8[$43+1>>0]<<8);
     __set_error_pos($32,$36,$40,$44);
     $result = 3;
     break;
    }
   }
   $45 = $0;
   $46 = $0;
   $47 = ((($46)) + 67|0);
   $48 = HEAPU8[$47>>0]|(HEAPU8[$47+1>>0]<<8)|(HEAPU8[$47+2>>0]<<16)|(HEAPU8[$47+3>>0]<<24);
   $49 = (__set_current_error($45,27,$48)|0);
   $50 = ($49<<24>>24)!=(0);
   if ($50) {
    $51 = $0;
    __set_error_pos($51,0,0,0);
    $result = 3;
   }
  } else {
   $result = 3;
  }
 } while(0);
 $59 = $ast;
 $60 = $1;
 HEAP32[$60>>2] = $59;
 $61 = $result;
 STACKTOP = sp;return ($61|0);
}
function _mb_attempt_func_end($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $l;
 $result = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 if ($or$cond) {
  $6 = $0;
  $7 = ((($6)) + 130|0);
  $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
  (__ls_popback($8)|0);
  $9 = $0;
  $10 = ((($9)) + 114|0);
  $11 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
  $12 = (($11) + -1)|0;
  HEAP8[$10>>0]=$12&255;HEAP8[$10+1>>0]=($12>>8)&255;HEAP8[$10+2>>0]=($12>>16)&255;HEAP8[$10+3>>0]=$12>>24;
  $13 = $result;
  STACKTOP = sp;return ($13|0);
 } else {
  $result = 3;
  $13 = $result;
  STACKTOP = sp;return ($13|0);
 }
 return (0)|0;
}
function _mb_attempt_open_bracket($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $$sink = 0, $$sink2 = 0, $$sink3 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $ast = 0, $obj = 0, $or$cond = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $l;
 $result = 0;
 $ast = 0;
 $obj = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 if (!($or$cond)) {
  $result = 3;
  $100 = $ast;
  $101 = $1;
  HEAP32[$101>>2] = $100;
  $102 = $result;
  STACKTOP = sp;return ($102|0);
 }
 $6 = $1;
 $7 = HEAP32[$6>>2]|0;
 $ast = $7;
 $8 = $0;
 $9 = ((($8)) + 130|0);
 $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
 (__ls_pushback($10,(1))|0);
 while(1) {
  $11 = $ast;
  $12 = ((($11)) + 8|0);
  $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
  $ast = $13;
  $14 = $ast;
  $15 = ($14|0)!=(0|0);
  if ($15) {
   $16 = $ast;
   $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
   $18 = $17;
  } else {
   $18 = 0;
  }
  $obj = $18;
  $19 = $obj;
  $20 = ($19|0)!=(0|0);
  if (!($20)) {
   break;
  }
  $21 = $obj;
  $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
  $23 = ($22|0)==(22);
  if (!($23)) {
   break;
  }
 }
 $24 = $obj;
 $25 = ($24|0)!=(0|0);
 if ($25) {
  $26 = $obj;
  $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
  $28 = ($27|0)==(8);
  if ($28) {
   $29 = $obj;
   $30 = ((($29)) + 4|0);
   $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8)|(HEAPU8[$30+2>>0]<<16)|(HEAPU8[$30+3>>0]<<24);
   $32 = ((($31)) + 4|0);
   $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
   $34 = ($33|0)==(7|0);
   if ($34) {
    $95 = $ast;
    $96 = ($95|0)!=(0|0);
    if (!($96)) {
     $100 = $ast;
     $101 = $1;
     HEAP32[$101>>2] = $100;
     $102 = $result;
     STACKTOP = sp;return ($102|0);
    }
    $97 = $ast;
    $98 = ((($97)) + 8|0);
    $99 = HEAPU8[$98>>0]|(HEAPU8[$98+1>>0]<<8)|(HEAPU8[$98+2>>0]<<16)|(HEAPU8[$98+3>>0]<<24);
    $ast = $99;
    $100 = $ast;
    $101 = $1;
    HEAP32[$101>>2] = $100;
    $102 = $result;
    STACKTOP = sp;return ($102|0);
   }
  }
 }
 $35 = $0;
 $36 = ((($35)) + 130|0);
 $37 = HEAPU8[$36>>0]|(HEAPU8[$36+1>>0]<<8)|(HEAPU8[$36+2>>0]<<16)|(HEAPU8[$36+3>>0]<<24);
 (__ls_popback($37)|0);
 $38 = $ast;
 $39 = ($38|0)!=(0|0);
 if ($39) {
  $40 = $ast;
  $41 = ($40|0)!=(0|0);
  if ($41) {
   $42 = $ast;
   $43 = HEAPU8[$42>>0]|(HEAPU8[$42+1>>0]<<8)|(HEAPU8[$42+2>>0]<<16)|(HEAPU8[$42+3>>0]<<24);
   $44 = ($43|0)!=(0|0);
   if (!($44)) {
    label = 28;
   }
  } else {
   label = 28;
  }
 } else {
  $45 = $1;
  $46 = ($45|0)!=(0|0);
  if ($46) {
   $47 = $1;
   $48 = HEAP32[$47>>2]|0;
   $49 = ($48|0)!=(0|0);
   if ($49) {
    $50 = $1;
    $51 = HEAP32[$50>>2]|0;
    $52 = HEAPU8[$51>>0]|(HEAPU8[$51+1>>0]<<8)|(HEAPU8[$51+2>>0]<<16)|(HEAPU8[$51+3>>0]<<24);
    $53 = ($52|0)!=(0|0);
    if (!($53)) {
     label = 28;
    }
   } else {
    label = 28;
   }
  } else {
   label = 28;
  }
 }
 if ((label|0) == 28) {
  $88 = $0;
  $89 = $0;
  $90 = ((($89)) + 67|0);
  $91 = HEAPU8[$90>>0]|(HEAPU8[$90+1>>0]<<8)|(HEAPU8[$90+2>>0]<<16)|(HEAPU8[$90+3>>0]<<24);
  $92 = (__set_current_error($88,33,$91)|0);
  $93 = ($92<<24>>24)!=(0);
  if (!($93)) {
   $100 = $ast;
   $101 = $1;
   HEAP32[$101>>2] = $100;
   $102 = $result;
   STACKTOP = sp;return ($102|0);
  }
  $94 = $0;
  __set_error_pos($94,0,0,0);
  $result = 3;
  $100 = $ast;
  $101 = $1;
  HEAP32[$101>>2] = $100;
  $102 = $result;
  STACKTOP = sp;return ($102|0);
 }
 $54 = $0;
 $55 = $0;
 $56 = ((($55)) + 67|0);
 $57 = HEAPU8[$56>>0]|(HEAPU8[$56+1>>0]<<8)|(HEAPU8[$56+2>>0]<<16)|(HEAPU8[$56+3>>0]<<24);
 $58 = (__set_current_error($54,33,$57)|0);
 $59 = ($58<<24>>24)!=(0);
 if (!($59)) {
  $100 = $ast;
  $101 = $1;
  HEAP32[$101>>2] = $100;
  $102 = $result;
  STACKTOP = sp;return ($102|0);
 }
 $60 = $0;
 $61 = $ast;
 $62 = ($61|0)!=(0|0);
 if ($62) {
  $63 = $ast;
  $64 = HEAPU8[$63>>0]|(HEAPU8[$63+1>>0]<<8)|(HEAPU8[$63+2>>0]<<16)|(HEAPU8[$63+3>>0]<<24);
  $$sink = $64;
 } else {
  $65 = $1;
  $66 = HEAP32[$65>>2]|0;
  $67 = HEAPU8[$66>>0]|(HEAPU8[$66+1>>0]<<8)|(HEAPU8[$66+2>>0]<<16)|(HEAPU8[$66+3>>0]<<24);
  $$sink = $67;
 }
 $68 = ((($$sink)) + 9|0);
 $69 = HEAPU8[$68>>0]|(HEAPU8[$68+1>>0]<<8)|(HEAPU8[$68+2>>0]<<16)|(HEAPU8[$68+3>>0]<<24);
 $70 = $ast;
 $71 = ($70|0)!=(0|0);
 if ($71) {
  $72 = $ast;
  $73 = HEAPU8[$72>>0]|(HEAPU8[$72+1>>0]<<8)|(HEAPU8[$72+2>>0]<<16)|(HEAPU8[$72+3>>0]<<24);
  $$sink2 = $73;
 } else {
  $74 = $1;
  $75 = HEAP32[$74>>2]|0;
  $76 = HEAPU8[$75>>0]|(HEAPU8[$75+1>>0]<<8)|(HEAPU8[$75+2>>0]<<16)|(HEAPU8[$75+3>>0]<<24);
  $$sink2 = $76;
 }
 $77 = ((($$sink2)) + 13|0);
 $78 = HEAPU8[$77>>0]|(HEAPU8[$77+1>>0]<<8);
 $79 = $ast;
 $80 = ($79|0)!=(0|0);
 if ($80) {
  $81 = $ast;
  $82 = HEAPU8[$81>>0]|(HEAPU8[$81+1>>0]<<8)|(HEAPU8[$81+2>>0]<<16)|(HEAPU8[$81+3>>0]<<24);
  $$sink3 = $82;
 } else {
  $83 = $1;
  $84 = HEAP32[$83>>2]|0;
  $85 = HEAPU8[$84>>0]|(HEAPU8[$84+1>>0]<<8)|(HEAPU8[$84+2>>0]<<16)|(HEAPU8[$84+3>>0]<<24);
  $$sink3 = $85;
 }
 $86 = ((($$sink3)) + 15|0);
 $87 = HEAPU8[$86>>0]|(HEAPU8[$86+1>>0]<<8);
 __set_error_pos($60,$69,$78,$87);
 $result = 3;
 $100 = $ast;
 $101 = $1;
 HEAP32[$101>>2] = $100;
 $102 = $result;
 STACKTOP = sp;return ($102|0);
}
function _mb_attempt_close_bracket($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $$sink = 0, $$sink2 = 0, $$sink3 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;
 var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0;
 var $131 = 0, $132 = 0, $133 = 0, $134 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $ast = 0, $obj = 0;
 var $or$cond = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $l;
 $result = 0;
 $ast = 0;
 $obj = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 if (!($or$cond)) {
  $result = 3;
  $132 = $ast;
  $133 = $1;
  HEAP32[$133>>2] = $132;
  $134 = $result;
  STACKTOP = sp;return ($134|0);
 }
 $6 = $1;
 $7 = HEAP32[$6>>2]|0;
 $ast = $7;
 $8 = $ast;
 $9 = ($8|0)!=(0|0);
 if (!($9)) {
  $10 = $ast;
  $11 = ($10|0)!=(0|0);
  if ($11) {
   $12 = $ast;
   $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
   $14 = ($13|0)!=(0|0);
   if ($14) {
    $15 = $0;
    $16 = $0;
    $17 = ((($16)) + 67|0);
    $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
    $19 = (__set_current_error($15,34,$18)|0);
    $20 = ($19<<24>>24)!=(0);
    if (!($20)) {
     $132 = $ast;
     $133 = $1;
     HEAP32[$133>>2] = $132;
     $134 = $result;
     STACKTOP = sp;return ($134|0);
    }
    $21 = $0;
    $22 = $ast;
    $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
    $24 = ((($23)) + 9|0);
    $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
    $26 = $ast;
    $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
    $28 = ((($27)) + 13|0);
    $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8);
    $30 = $ast;
    $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8)|(HEAPU8[$30+2>>0]<<16)|(HEAPU8[$30+3>>0]<<24);
    $32 = ((($31)) + 15|0);
    $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8);
    __set_error_pos($21,$25,$29,$33);
    $result = 3;
    $132 = $ast;
    $133 = $1;
    HEAP32[$133>>2] = $132;
    $134 = $result;
    STACKTOP = sp;return ($134|0);
   }
  }
  $34 = $0;
  $35 = $0;
  $36 = ((($35)) + 67|0);
  $37 = HEAPU8[$36>>0]|(HEAPU8[$36+1>>0]<<8)|(HEAPU8[$36+2>>0]<<16)|(HEAPU8[$36+3>>0]<<24);
  $38 = (__set_current_error($34,34,$37)|0);
  $39 = ($38<<24>>24)!=(0);
  if (!($39)) {
   $132 = $ast;
   $133 = $1;
   HEAP32[$133>>2] = $132;
   $134 = $result;
   STACKTOP = sp;return ($134|0);
  }
  $40 = $0;
  __set_error_pos($40,0,0,0);
  $result = 3;
  $132 = $ast;
  $133 = $1;
  HEAP32[$133>>2] = $132;
  $134 = $result;
  STACKTOP = sp;return ($134|0);
 }
 $41 = $0;
 $42 = ((($41)) + 130|0);
 $43 = HEAPU8[$42>>0]|(HEAPU8[$42+1>>0]<<8)|(HEAPU8[$42+2>>0]<<16)|(HEAPU8[$42+3>>0]<<24);
 (__ls_popback($43)|0);
 $44 = $ast;
 $45 = HEAPU8[$44>>0]|(HEAPU8[$44+1>>0]<<8)|(HEAPU8[$44+2>>0]<<16)|(HEAPU8[$44+3>>0]<<24);
 $obj = $45;
 while(1) {
  $46 = $obj;
  $47 = ($46|0)!=(0|0);
  if (!($47)) {
   break;
  }
  $48 = $obj;
  $49 = HEAPU8[$48>>0]|(HEAPU8[$48+1>>0]<<8)|(HEAPU8[$48+2>>0]<<16)|(HEAPU8[$48+3>>0]<<24);
  $50 = ($49|0)==(22);
  if (!($50)) {
   break;
  }
  $51 = $ast;
  $52 = ((($51)) + 8|0);
  $53 = HEAPU8[$52>>0]|(HEAPU8[$52+1>>0]<<8)|(HEAPU8[$52+2>>0]<<16)|(HEAPU8[$52+3>>0]<<24);
  $ast = $53;
  $54 = $ast;
  $55 = ($54|0)!=(0|0);
  if ($55) {
   $56 = $ast;
   $57 = HEAPU8[$56>>0]|(HEAPU8[$56+1>>0]<<8)|(HEAPU8[$56+2>>0]<<16)|(HEAPU8[$56+3>>0]<<24);
   $58 = $57;
  } else {
   $58 = 0;
  }
  $obj = $58;
 }
 $59 = $obj;
 $60 = ($59|0)!=(0|0);
 if ($60) {
  $61 = $obj;
  $62 = HEAPU8[$61>>0]|(HEAPU8[$61+1>>0]<<8)|(HEAPU8[$61+2>>0]<<16)|(HEAPU8[$61+3>>0]<<24);
  $63 = ($62|0)==(8);
  if ($63) {
   $64 = $obj;
   $65 = ((($64)) + 4|0);
   $66 = HEAPU8[$65>>0]|(HEAPU8[$65+1>>0]<<8)|(HEAPU8[$65+2>>0]<<16)|(HEAPU8[$65+3>>0]<<24);
   $67 = ((($66)) + 4|0);
   $68 = HEAPU8[$67>>0]|(HEAPU8[$67+1>>0]<<8)|(HEAPU8[$67+2>>0]<<16)|(HEAPU8[$67+3>>0]<<24);
   $69 = ($68|0)==(8|0);
   if ($69) {
    $127 = $ast;
    $128 = ($127|0)!=(0|0);
    if (!($128)) {
     $132 = $ast;
     $133 = $1;
     HEAP32[$133>>2] = $132;
     $134 = $result;
     STACKTOP = sp;return ($134|0);
    }
    $129 = $ast;
    $130 = ((($129)) + 8|0);
    $131 = HEAPU8[$130>>0]|(HEAPU8[$130+1>>0]<<8)|(HEAPU8[$130+2>>0]<<16)|(HEAPU8[$130+3>>0]<<24);
    $ast = $131;
    $132 = $ast;
    $133 = $1;
    HEAP32[$133>>2] = $132;
    $134 = $result;
    STACKTOP = sp;return ($134|0);
   }
  }
 }
 $70 = $ast;
 $71 = ($70|0)!=(0|0);
 if ($71) {
  $72 = $ast;
  $73 = ($72|0)!=(0|0);
  if ($73) {
   $74 = $ast;
   $75 = HEAPU8[$74>>0]|(HEAPU8[$74+1>>0]<<8)|(HEAPU8[$74+2>>0]<<16)|(HEAPU8[$74+3>>0]<<24);
   $76 = ($75|0)!=(0|0);
   if (!($76)) {
    label = 36;
   }
  } else {
   label = 36;
  }
 } else {
  $77 = $1;
  $78 = ($77|0)!=(0|0);
  if ($78) {
   $79 = $1;
   $80 = HEAP32[$79>>2]|0;
   $81 = ($80|0)!=(0|0);
   if ($81) {
    $82 = $1;
    $83 = HEAP32[$82>>2]|0;
    $84 = HEAPU8[$83>>0]|(HEAPU8[$83+1>>0]<<8)|(HEAPU8[$83+2>>0]<<16)|(HEAPU8[$83+3>>0]<<24);
    $85 = ($84|0)!=(0|0);
    if (!($85)) {
     label = 36;
    }
   } else {
    label = 36;
   }
  } else {
   label = 36;
  }
 }
 if ((label|0) == 36) {
  $120 = $0;
  $121 = $0;
  $122 = ((($121)) + 67|0);
  $123 = HEAPU8[$122>>0]|(HEAPU8[$122+1>>0]<<8)|(HEAPU8[$122+2>>0]<<16)|(HEAPU8[$122+3>>0]<<24);
  $124 = (__set_current_error($120,34,$123)|0);
  $125 = ($124<<24>>24)!=(0);
  if (!($125)) {
   $132 = $ast;
   $133 = $1;
   HEAP32[$133>>2] = $132;
   $134 = $result;
   STACKTOP = sp;return ($134|0);
  }
  $126 = $0;
  __set_error_pos($126,0,0,0);
  $result = 3;
  $132 = $ast;
  $133 = $1;
  HEAP32[$133>>2] = $132;
  $134 = $result;
  STACKTOP = sp;return ($134|0);
 }
 $86 = $0;
 $87 = $0;
 $88 = ((($87)) + 67|0);
 $89 = HEAPU8[$88>>0]|(HEAPU8[$88+1>>0]<<8)|(HEAPU8[$88+2>>0]<<16)|(HEAPU8[$88+3>>0]<<24);
 $90 = (__set_current_error($86,34,$89)|0);
 $91 = ($90<<24>>24)!=(0);
 if (!($91)) {
  $132 = $ast;
  $133 = $1;
  HEAP32[$133>>2] = $132;
  $134 = $result;
  STACKTOP = sp;return ($134|0);
 }
 $92 = $0;
 $93 = $ast;
 $94 = ($93|0)!=(0|0);
 if ($94) {
  $95 = $ast;
  $96 = HEAPU8[$95>>0]|(HEAPU8[$95+1>>0]<<8)|(HEAPU8[$95+2>>0]<<16)|(HEAPU8[$95+3>>0]<<24);
  $$sink = $96;
 } else {
  $97 = $1;
  $98 = HEAP32[$97>>2]|0;
  $99 = HEAPU8[$98>>0]|(HEAPU8[$98+1>>0]<<8)|(HEAPU8[$98+2>>0]<<16)|(HEAPU8[$98+3>>0]<<24);
  $$sink = $99;
 }
 $100 = ((($$sink)) + 9|0);
 $101 = HEAPU8[$100>>0]|(HEAPU8[$100+1>>0]<<8)|(HEAPU8[$100+2>>0]<<16)|(HEAPU8[$100+3>>0]<<24);
 $102 = $ast;
 $103 = ($102|0)!=(0|0);
 if ($103) {
  $104 = $ast;
  $105 = HEAPU8[$104>>0]|(HEAPU8[$104+1>>0]<<8)|(HEAPU8[$104+2>>0]<<16)|(HEAPU8[$104+3>>0]<<24);
  $$sink2 = $105;
 } else {
  $106 = $1;
  $107 = HEAP32[$106>>2]|0;
  $108 = HEAPU8[$107>>0]|(HEAPU8[$107+1>>0]<<8)|(HEAPU8[$107+2>>0]<<16)|(HEAPU8[$107+3>>0]<<24);
  $$sink2 = $108;
 }
 $109 = ((($$sink2)) + 13|0);
 $110 = HEAPU8[$109>>0]|(HEAPU8[$109+1>>0]<<8);
 $111 = $ast;
 $112 = ($111|0)!=(0|0);
 if ($112) {
  $113 = $ast;
  $114 = HEAPU8[$113>>0]|(HEAPU8[$113+1>>0]<<8)|(HEAPU8[$113+2>>0]<<16)|(HEAPU8[$113+3>>0]<<24);
  $$sink3 = $114;
 } else {
  $115 = $1;
  $116 = HEAP32[$115>>2]|0;
  $117 = HEAPU8[$116>>0]|(HEAPU8[$116+1>>0]<<8)|(HEAPU8[$116+2>>0]<<16)|(HEAPU8[$116+3>>0]<<24);
  $$sink3 = $117;
 }
 $118 = ((($$sink3)) + 15|0);
 $119 = HEAPU8[$118>>0]|(HEAPU8[$118+1>>0]<<8);
 __set_error_pos($92,$101,$110,$119);
 $result = 3;
 $132 = $ast;
 $133 = $1;
 HEAP32[$133>>2] = $132;
 $134 = $result;
 STACKTOP = sp;return ($134|0);
}
function _mb_has_arg($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $$old = 0, $$old2 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $ast = 0, $obj = 0, $or$cond = 0, $or$cond3 = 0, $result = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $l;
 $result = 0;
 $ast = 0;
 $obj = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 if (!($or$cond)) {
  $52 = $result;
  STACKTOP = sp;return ($52|0);
 }
 $6 = $1;
 $7 = HEAP32[$6>>2]|0;
 $ast = $7;
 $8 = $ast;
 $9 = ($8|0)!=(0|0);
 if (!($9)) {
  $52 = $result;
  STACKTOP = sp;return ($52|0);
 }
 $10 = $0;
 $11 = (__multiline_statement($10)|0);
 $12 = ($11<<24>>24)!=(0);
 $13 = $ast;
 $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
 $obj = $14;
 $15 = $obj;
 $16 = ($15|0)!=(0|0);
 $or$cond3 = $12 & $16;
 L7: do {
  if ($or$cond3) {
   while(1) {
    $17 = $obj;
    $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
    $19 = ($18|0)==(22);
    if (!($19)) {
     break L7;
    }
    $20 = $ast;
    $21 = ((($20)) + 8|0);
    $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
    $ast = $22;
    $23 = $ast;
    $24 = ($23|0)!=(0|0);
    if ($24) {
     $25 = $ast;
     $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
     $27 = $26;
    } else {
     $27 = 0;
    }
    $obj = $27;
    $$old = $obj;
    $$old2 = ($$old|0)!=(0|0);
    if (!($$old2)) {
     break;
    }
   }
  }
 } while(0);
 $28 = $obj;
 $29 = ($28|0)!=(0|0);
 if (!($29)) {
  $52 = $result;
  STACKTOP = sp;return ($52|0);
 }
 $30 = $obj;
 $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8)|(HEAPU8[$30+2>>0]<<16)|(HEAPU8[$30+3>>0]<<24);
 $32 = ($31|0)==(8);
 if ($32) {
  $33 = $obj;
  $34 = ((($33)) + 4|0);
  $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
  $36 = ((($35)) + 4|0);
  $37 = HEAPU8[$36>>0]|(HEAPU8[$36+1>>0]<<8)|(HEAPU8[$36+2>>0]<<16)|(HEAPU8[$36+3>>0]<<24);
  $38 = ($37|0)==(8|0);
  if ($38) {
   $52 = $result;
   STACKTOP = sp;return ($52|0);
  }
 }
 $39 = $obj;
 $40 = ($39|0)!=(0|0);
 if ($40) {
  $41 = $obj;
  $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
  $43 = ($42|0)==(22);
  if ($43) {
   $52 = $result;
   STACKTOP = sp;return ($52|0);
  }
 }
 $44 = $obj;
 $45 = HEAPU8[$44>>0]|(HEAPU8[$44+1>>0]<<8)|(HEAPU8[$44+2>>0]<<16)|(HEAPU8[$44+3>>0]<<24);
 $46 = ($45|0)!=(19);
 if ($46) {
  $47 = $obj;
  $48 = HEAPU8[$47>>0]|(HEAPU8[$47+1>>0]<<8)|(HEAPU8[$47+2>>0]<<16)|(HEAPU8[$47+3>>0]<<24);
  $49 = ($48|0)!=(22);
  $51 = $49;
 } else {
  $51 = 0;
 }
 $50 = $51&1;
 $result = $50;
 $52 = $result;
 STACKTOP = sp;return ($52|0);
}
function _mb_pop_int($s,$l,$val) {
 $s = $s|0;
 $l = $l|0;
 $val = $val|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0.0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__hr = 0, $arg = 0, $or$cond = 0, $or$cond3 = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $arg = sp + 24|0;
 $1 = $s;
 $2 = $l;
 $3 = $val;
 $result = 0;
 $4 = $3;
 $5 = ($4|0)!=(0|0);
 if ($5) {
  $6 = $3;
  HEAP32[$6>>2] = 0;
 }
 $7 = $1;
 $8 = ($7|0)!=(0|0);
 $9 = $2;
 $10 = ($9|0)!=(0|0);
 $or$cond = $8 & $10;
 $11 = $3;
 $12 = ($11|0)!=(0|0);
 $or$cond3 = $or$cond & $12;
 L4: do {
  if ($or$cond3) {
   $13 = ((($arg)) + 4|0);
   ;HEAP8[$13>>0]=0|0;HEAP8[$13+1>>0]=0|0;HEAP8[$13+2>>0]=0|0;HEAP8[$13+3>>0]=0|0;
   HEAP8[$arg>>0]=0&255;HEAP8[$arg+1>>0]=(0>>8)&255;HEAP8[$arg+2>>0]=(0>>16)&255;HEAP8[$arg+3>>0]=0>>24;
   $14 = $1;
   $15 = $2;
   $16 = (_mb_pop_value($14,$15,$arg)|0);
   $__hr = $16;
   $17 = $__hr;
   $18 = ($17|0)!=(0);
   if ($18) {
    $19 = $__hr;
    $0 = $19;
    $30 = $0;
    STACKTOP = sp;return ($30|0);
   }
   $20 = HEAPU8[$arg>>0]|(HEAPU8[$arg+1>>0]<<8)|(HEAPU8[$arg+2>>0]<<16)|(HEAPU8[$arg+3>>0]<<24);
   switch ($20|0) {
   case 2:  {
    $21 = ((($arg)) + 4|0);
    $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
    $23 = $3;
    HEAP32[$23>>2] = $22;
    break L4;
    break;
   }
   case 4:  {
    $24 = ((($arg)) + 4|0);
    HEAP8[tempDoublePtr>>0]=HEAP8[$24>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$24+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$24+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$24+3>>0];$25 = +HEAPF32[tempDoublePtr>>2];
    $26 = (~~(($25)));
    $27 = $3;
    HEAP32[$27>>2] = $26;
    break L4;
    break;
   }
   default: {
    $28 = $1;
    __assign_public_value($28,$arg,0,0);
    $result = 3;
    break L4;
   }
   }
  } else {
   $result = 3;
  }
 } while(0);
 $29 = $result;
 $0 = $29;
 $30 = $0;
 STACKTOP = sp;return ($30|0);
}
function _mb_pop_value($s,$l,$val) {
 $s = $s|0;
 $l = $l|0;
 $val = $val|0;
 var $$old = 0, $$old4 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0;
 var $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0;
 var $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0;
 var $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $ast = 0, $inep = 0, $obj = 0, $or$cond = 0, $or$cond3 = 0, $or$cond5 = 0, $result = 0, $running = 0, $val_obj = 0, $val_ptr = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ast = sp + 16|0;
 $val_obj = sp + 36|0;
 $val_ptr = sp + 12|0;
 $0 = $s;
 $1 = $l;
 $2 = $val;
 $result = 0;
 HEAP32[$ast>>2] = 0;
 HEAP32[$val_ptr>>2] = 0;
 $running = 0;
 $inep = 0;
 $3 = $0;
 $4 = ($3|0)!=(0|0);
 $5 = $1;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 $7 = $2;
 $8 = ($7|0)!=(0|0);
 $or$cond3 = $or$cond & $8;
 if (!($or$cond3)) {
  $result = 3;
  $156 = HEAP32[$ast>>2]|0;
  $157 = $1;
  HEAP32[$157>>2] = $156;
  $158 = $result;
  STACKTOP = sp;return ($158|0);
 }
 $9 = $0;
 $10 = ((($9)) + 75|0);
 $11 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
 $running = $11;
 $12 = $0;
 $13 = ((($12)) + 122|0);
 $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
 $15 = (__ls_empty($14)|0);
 $16 = ($15<<24>>24)!=(0);
 if (!($16)) {
  $17 = $0;
  $18 = ((($17)) + 122|0);
  $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
  $20 = (__ls_back($19)|0);
  $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
  $inep = $21;
 }
 HEAP32[$val_ptr>>2] = $val_obj;
 $22 = HEAP32[$val_ptr>>2]|0;
 dest=$22; stop=dest+17|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
 $23 = HEAP32[$val_ptr>>2]|0;
 HEAP8[$23>>0]=0&255;HEAP8[$23+1>>0]=(0>>8)&255;HEAP8[$23+2>>0]=(0>>16)&255;HEAP8[$23+3>>0]=0>>24;
 $24 = $0;
 $25 = ((($24)) + 88|0);
 $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
 $27 = ($26|0)!=(0|0);
 $28 = $1;
 $29 = HEAP32[$28>>2]|0;
 HEAP32[$ast>>2] = $29;
 if ($27) {
  $30 = HEAP32[$val_ptr>>2]|0;
  $31 = $0;
  $32 = ((($31)) + 88|0);
  $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
  dest=$30; src=$33; stop=dest+17|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
  $34 = $0;
  $35 = ((($34)) + 88|0);
  HEAP8[$35>>0]=0&255;HEAP8[$35+1>>0]=(0>>8)&255;HEAP8[$35+2>>0]=(0>>16)&255;HEAP8[$35+3>>0]=0>>24;
 } else {
  $36 = HEAP32[$ast>>2]|0;
  $37 = ($36|0)!=(0|0);
  if (!($37)) {
   $156 = HEAP32[$ast>>2]|0;
   $157 = $1;
   HEAP32[$157>>2] = $156;
   $158 = $result;
   STACKTOP = sp;return ($158|0);
  }
  $38 = $0;
  $39 = (__multiline_statement($38)|0);
  $40 = ($39<<24>>24)!=(0);
  L14: do {
   if ($40) {
    $obj = 0;
    $41 = HEAP32[$ast>>2]|0;
    $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
    $obj = $42;
    while(1) {
     $43 = $obj;
     $44 = ($43|0)!=(0|0);
     if (!($44)) {
      break L14;
     }
     $45 = $obj;
     $46 = HEAPU8[$45>>0]|(HEAPU8[$45+1>>0]<<8)|(HEAPU8[$45+2>>0]<<16)|(HEAPU8[$45+3>>0]<<24);
     $47 = ($46|0)==(22);
     if (!($47)) {
      break L14;
     }
     $48 = HEAP32[$ast>>2]|0;
     $49 = ((($48)) + 8|0);
     $50 = HEAPU8[$49>>0]|(HEAPU8[$49+1>>0]<<8)|(HEAPU8[$49+2>>0]<<16)|(HEAPU8[$49+3>>0]<<24);
     HEAP32[$ast>>2] = $50;
     $51 = HEAP32[$ast>>2]|0;
     $52 = ($51|0)!=(0|0);
     if ($52) {
      $53 = HEAP32[$ast>>2]|0;
      $54 = HEAPU8[$53>>0]|(HEAPU8[$53+1>>0]<<8)|(HEAPU8[$53+2>>0]<<16)|(HEAPU8[$53+3>>0]<<24);
      $55 = $54;
     } else {
      $55 = 0;
     }
     $obj = $55;
    }
   }
  } while(0);
  $56 = $0;
  $57 = (__calc_expression($56,$ast,$val_ptr)|0);
  $result = $57;
  $58 = $result;
  $59 = ($58|0)!=(0);
  if ($59) {
   $156 = HEAP32[$ast>>2]|0;
   $157 = $1;
   HEAP32[$157>>2] = $156;
   $158 = $result;
   STACKTOP = sp;return ($158|0);
  }
 }
 $60 = HEAP32[$val_ptr>>2]|0;
 $61 = HEAPU8[$60>>0]|(HEAPU8[$60+1>>0]<<8)|(HEAPU8[$60+2>>0]<<16)|(HEAPU8[$60+3>>0]<<24);
 $62 = ($61|0)==(4);
 if ($62) {
  $63 = HEAP32[$val_ptr>>2]|0;
  $64 = ((($63)) + 8|0);
  $65 = HEAP8[$64>>0]|0;
  $66 = $65 & 1;
  $67 = ($66<<24>>24)!=(0);
  if (!($67)) {
   $68 = $0;
   __destroy_edge_objects($68);
   $69 = $0;
   $70 = HEAP32[$val_ptr>>2]|0;
   $71 = ((($70)) + 4|0);
   $72 = HEAPU8[$71>>0]|(HEAPU8[$71+1>>0]<<8)|(HEAPU8[$71+2>>0]<<16)|(HEAPU8[$71+3>>0]<<24);
   __mark_edge_destroy_string($69,$72);
  }
 }
 $73 = HEAP32[$val_ptr>>2]|0;
 $74 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
 switch ($74|0) {
 case 7:  {
  $75 = HEAP32[$val_ptr>>2]|0;
  $76 = ((($75)) + 4|0);
  $77 = HEAPU8[$76>>0]|(HEAPU8[$76+1>>0]<<8)|(HEAPU8[$76+2>>0]<<16)|(HEAPU8[$76+3>>0]<<24);
  $78 = HEAP32[$val_ptr>>2]|0;
  $79 = ((($78)) + 4|0);
  $80 = HEAPU8[$79>>0]|(HEAPU8[$79+1>>0]<<8)|(HEAPU8[$79+2>>0]<<16)|(HEAPU8[$79+3>>0]<<24);
  (__ref($77,$80)|0);
  break;
 }
 case 10:  {
  $81 = HEAP32[$val_ptr>>2]|0;
  $82 = ((($81)) + 8|0);
  $83 = HEAP8[$82>>0]|0;
  $84 = $83 & 1;
  $85 = ($84<<24>>24)!=(0);
  if (!($85)) {
   $86 = HEAP32[$val_ptr>>2]|0;
   $87 = ((($86)) + 4|0);
   $88 = HEAPU8[$87>>0]|(HEAPU8[$87+1>>0]<<8)|(HEAPU8[$87+2>>0]<<16)|(HEAPU8[$87+3>>0]<<24);
   $89 = HEAP32[$val_ptr>>2]|0;
   $90 = ((($89)) + 4|0);
   $91 = HEAPU8[$90>>0]|(HEAPU8[$90+1>>0]<<8)|(HEAPU8[$90+2>>0]<<16)|(HEAPU8[$90+3>>0]<<24);
   (__ref($88,$91)|0);
  }
  break;
 }
 case 11:  {
  $92 = HEAP32[$val_ptr>>2]|0;
  $93 = ((($92)) + 4|0);
  $94 = HEAPU8[$93>>0]|(HEAPU8[$93+1>>0]<<8)|(HEAPU8[$93+2>>0]<<16)|(HEAPU8[$93+3>>0]<<24);
  $95 = HEAP32[$val_ptr>>2]|0;
  $96 = ((($95)) + 4|0);
  $97 = HEAPU8[$96>>0]|(HEAPU8[$96+1>>0]<<8)|(HEAPU8[$96+2>>0]<<16)|(HEAPU8[$96+3>>0]<<24);
  (__ref($94,$97)|0);
  break;
 }
 case 13:  {
  $98 = HEAP32[$val_ptr>>2]|0;
  $99 = ((($98)) + 4|0);
  $100 = HEAPU8[$99>>0]|(HEAPU8[$99+1>>0]<<8)|(HEAPU8[$99+2>>0]<<16)|(HEAPU8[$99+3>>0]<<24);
  $101 = HEAP32[$val_ptr>>2]|0;
  $102 = ((($101)) + 4|0);
  $103 = HEAPU8[$102>>0]|(HEAPU8[$102+1>>0]<<8)|(HEAPU8[$102+2>>0]<<16)|(HEAPU8[$102+3>>0]<<24);
  (__ref($100,$103)|0);
  break;
 }
 case 16:  {
  $104 = HEAP32[$val_ptr>>2]|0;
  $105 = ((($104)) + 4|0);
  $106 = HEAPU8[$105>>0]|(HEAPU8[$105+1>>0]<<8)|(HEAPU8[$105+2>>0]<<16)|(HEAPU8[$105+3>>0]<<24);
  $107 = HEAP32[$val_ptr>>2]|0;
  $108 = ((($107)) + 4|0);
  $109 = HEAPU8[$108>>0]|(HEAPU8[$108+1>>0]<<8)|(HEAPU8[$108+2>>0]<<16)|(HEAPU8[$108+3>>0]<<24);
  (__ref($106,$109)|0);
  break;
 }
 case 17:  {
  $110 = HEAP32[$val_ptr>>2]|0;
  $111 = ((($110)) + 8|0);
  $112 = HEAP8[$111>>0]|0;
  $113 = $112 & 1;
  $114 = ($113<<24>>24)!=(0);
  if (!($114)) {
   $115 = HEAP32[$val_ptr>>2]|0;
   $116 = ((($115)) + 4|0);
   $117 = HEAPU8[$116>>0]|(HEAPU8[$116+1>>0]<<8)|(HEAPU8[$116+2>>0]<<16)|(HEAPU8[$116+3>>0]<<24);
   $118 = ((($117)) + 58|0);
   $119 = HEAPU8[$118>>0]|(HEAPU8[$118+1>>0]<<8)|(HEAPU8[$118+2>>0]<<16)|(HEAPU8[$118+3>>0]<<24);
   $120 = ($119|0)==(2);
   if ($120) {
    $121 = HEAP32[$val_ptr>>2]|0;
    $122 = ((($121)) + 4|0);
    $123 = HEAPU8[$122>>0]|(HEAPU8[$122+1>>0]<<8)|(HEAPU8[$122+2>>0]<<16)|(HEAPU8[$122+3>>0]<<24);
    $124 = HEAP32[$val_ptr>>2]|0;
    $125 = ((($124)) + 4|0);
    $126 = HEAPU8[$125>>0]|(HEAPU8[$125+1>>0]<<8)|(HEAPU8[$125+2>>0]<<16)|(HEAPU8[$125+3>>0]<<24);
    (__ref($123,$126)|0);
   }
  }
  break;
 }
 default: {
 }
 }
 $127 = $0;
 $128 = ((($127)) + 114|0);
 $129 = HEAPU8[$128>>0]|(HEAPU8[$128+1>>0]<<8)|(HEAPU8[$128+2>>0]<<16)|(HEAPU8[$128+3>>0]<<24);
 $130 = ($129|0)<(2);
 do {
  if ($130) {
   $131 = $inep;
   $132 = ($131|0)!=(0|0);
   if ($132) {
    $133 = $inep;
    $134 = ($133|0)!=(0|0);
    if (!($134)) {
     break;
    }
    $135 = $inep;
    $136 = HEAP32[$135>>2]|0;
    $137 = ($136|0)==(0);
    $138 = HEAP32[$ast>>2]|0;
    $139 = ($138|0)!=(0|0);
    $or$cond5 = $137 & $139;
    if (!($or$cond5)) {
     break;
    }
   } else {
    $$old = HEAP32[$ast>>2]|0;
    $$old4 = ($$old|0)!=(0|0);
    if (!($$old4)) {
     break;
    }
   }
   $140 = HEAP32[$ast>>2]|0;
   $141 = HEAPU8[$140>>0]|(HEAPU8[$140+1>>0]<<8)|(HEAPU8[$140+2>>0]<<16)|(HEAPU8[$140+3>>0]<<24);
   $142 = HEAPU8[$141>>0]|(HEAPU8[$141+1>>0]<<8)|(HEAPU8[$141+2>>0]<<16)|(HEAPU8[$141+3>>0]<<24);
   $143 = ($142|0)==(19);
   if ($143) {
    $144 = HEAP32[$ast>>2]|0;
    $145 = HEAPU8[$144>>0]|(HEAPU8[$144+1>>0]<<8)|(HEAPU8[$144+2>>0]<<16)|(HEAPU8[$144+3>>0]<<24);
    $146 = ((($145)) + 4|0);
    $147 = HEAP8[$146>>0]|0;
    $148 = $147 << 24 >> 24;
    $149 = ($148|0)==(44);
    if ($149) {
     $150 = HEAP32[$ast>>2]|0;
     $151 = ((($150)) + 8|0);
     $152 = HEAPU8[$151>>0]|(HEAPU8[$151+1>>0]<<8)|(HEAPU8[$151+2>>0]<<16)|(HEAPU8[$151+3>>0]<<24);
     HEAP32[$ast>>2] = $152;
    }
   }
  }
 } while(0);
 $153 = HEAP32[$val_ptr>>2]|0;
 $154 = $2;
 $155 = (__internal_object_to_public_value($153,$154)|0);
 $result = $155;
 $156 = HEAP32[$ast>>2]|0;
 $157 = $1;
 HEAP32[$157>>2] = $156;
 $158 = $result;
 STACKTOP = sp;return ($158|0);
}
function _mb_pop_string($s,$l,$val) {
 $s = $s|0;
 $l = $l|0;
 $val = $val|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__hr = 0, $arg = 0, $cond = 0, $or$cond = 0, $or$cond3 = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $arg = sp + 24|0;
 $1 = $s;
 $2 = $l;
 $3 = $val;
 $result = 0;
 $4 = $3;
 $5 = ($4|0)!=(0|0);
 if ($5) {
  $6 = $3;
  HEAP32[$6>>2] = 0;
 }
 $7 = $1;
 $8 = ($7|0)!=(0|0);
 $9 = $2;
 $10 = ($9|0)!=(0|0);
 $or$cond = $8 & $10;
 $11 = $3;
 $12 = ($11|0)!=(0|0);
 $or$cond3 = $or$cond & $12;
 do {
  if ($or$cond3) {
   $13 = ((($arg)) + 4|0);
   ;HEAP8[$13>>0]=0|0;HEAP8[$13+1>>0]=0|0;HEAP8[$13+2>>0]=0|0;HEAP8[$13+3>>0]=0|0;
   HEAP8[$arg>>0]=0&255;HEAP8[$arg+1>>0]=(0>>8)&255;HEAP8[$arg+2>>0]=(0>>16)&255;HEAP8[$arg+3>>0]=0>>24;
   $14 = $1;
   $15 = $2;
   $16 = (_mb_pop_value($14,$15,$arg)|0);
   $__hr = $16;
   $17 = $__hr;
   $18 = ($17|0)!=(0);
   if ($18) {
    $19 = $__hr;
    $0 = $19;
    $26 = $0;
    STACKTOP = sp;return ($26|0);
   }
   $20 = HEAPU8[$arg>>0]|(HEAPU8[$arg+1>>0]<<8)|(HEAPU8[$arg+2>>0]<<16)|(HEAPU8[$arg+3>>0]<<24);
   $cond = ($20|0)==(8);
   if ($cond) {
    $21 = ((($arg)) + 4|0);
    $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
    $23 = $3;
    HEAP32[$23>>2] = $22;
    break;
   } else {
    $24 = $1;
    __assign_public_value($24,$arg,0,0);
    $result = 3;
    break;
   }
  } else {
   $result = 3;
  }
 } while(0);
 $25 = $result;
 $0 = $25;
 $26 = $0;
 STACKTOP = sp;return ($26|0);
}
function _mb_push_int($s,$l,$val) {
 $s = $s|0;
 $l = $l|0;
 $val = $val|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__hr = 0, $arg = 0;
 var $arg$byval_copy = 0, $or$cond = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $arg$byval_copy = sp + 24|0;
 $arg = sp + 32|0;
 $1 = $s;
 $2 = $l;
 $3 = $val;
 $result = 0;
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $6 = $2;
 $7 = ($6|0)!=(0|0);
 $or$cond = $5 & $7;
 if ($or$cond) {
  $8 = $3;
  $9 = ((($arg)) + 4|0);
  HEAP8[$9>>0]=$8&255;HEAP8[$9+1>>0]=($8>>8)&255;HEAP8[$9+2>>0]=($8>>16)&255;HEAP8[$9+3>>0]=$8>>24;
  HEAP8[$arg>>0]=2&255;HEAP8[$arg+1>>0]=(2>>8)&255;HEAP8[$arg+2>>0]=(2>>16)&255;HEAP8[$arg+3>>0]=2>>24;
  $10 = $1;
  $11 = $2;
  ;HEAP32[$arg$byval_copy>>2]=HEAP32[$arg>>2]|0;HEAP32[$arg$byval_copy+4>>2]=HEAP32[$arg+4>>2]|0;
  $12 = (_mb_push_value($10,$11,$arg$byval_copy)|0);
  $__hr = $12;
  $13 = $__hr;
  $14 = ($13|0)!=(0);
  if ($14) {
   $15 = $__hr;
   $0 = $15;
   $17 = $0;
   STACKTOP = sp;return ($17|0);
  }
 } else {
  $result = 3;
 }
 $16 = $result;
 $0 = $16;
 $17 = $0;
 STACKTOP = sp;return ($17|0);
}
function _mb_push_value($s,$l,$val) {
 $s = $s|0;
 $l = $l|0;
 $val = $val|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $obj = 0, $or$cond = 0, $result = 0, $running = 0, dest = 0, label = 0;
 var sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $obj = sp + 16|0;
 $0 = $s;
 $1 = $l;
 $result = 0;
 $running = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 if (!($or$cond)) {
  $result = 3;
  $53 = $result;
  STACKTOP = sp;return ($53|0);
 }
 $6 = $0;
 $7 = ((($6)) + 75|0);
 $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
 $running = $8;
 $9 = $0;
 $10 = $running;
 $11 = ((($10)) + 20|0);
 __assign_public_value($9,$11,$val,0);
 dest=$obj; stop=dest+17|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
 HEAP8[$obj>>0]=0&255;HEAP8[$obj+1>>0]=(0>>8)&255;HEAP8[$obj+2>>0]=(0>>16)&255;HEAP8[$obj+3>>0]=0>>24;
 $12 = $running;
 $13 = ((($12)) + 20|0);
 (__public_value_to_internal_object($13,$obj)|0);
 $14 = HEAPU8[$obj>>0]|(HEAPU8[$obj+1>>0]<<8)|(HEAPU8[$obj+2>>0]<<16)|(HEAPU8[$obj+3>>0]<<24);
 switch ($14|0) {
 case 7:  {
  $15 = ((($obj)) + 4|0);
  $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
  $17 = ((($obj)) + 4|0);
  $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
  (__ref($16,$18)|0);
  break;
 }
 case 10:  {
  $19 = ((($obj)) + 8|0);
  $20 = HEAP8[$19>>0]|0;
  $21 = $20 & 1;
  $22 = ($21<<24>>24)!=(0);
  if (!($22)) {
   $23 = ((($obj)) + 4|0);
   $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
   $25 = ((($obj)) + 4|0);
   $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
   (__ref($24,$26)|0);
  }
  break;
 }
 case 11:  {
  $27 = ((($obj)) + 4|0);
  $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
  $29 = ((($obj)) + 4|0);
  $30 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8)|(HEAPU8[$29+2>>0]<<16)|(HEAPU8[$29+3>>0]<<24);
  (__ref($28,$30)|0);
  break;
 }
 case 13:  {
  $31 = ((($obj)) + 4|0);
  $32 = HEAPU8[$31>>0]|(HEAPU8[$31+1>>0]<<8)|(HEAPU8[$31+2>>0]<<16)|(HEAPU8[$31+3>>0]<<24);
  $33 = ((($obj)) + 4|0);
  $34 = HEAPU8[$33>>0]|(HEAPU8[$33+1>>0]<<8)|(HEAPU8[$33+2>>0]<<16)|(HEAPU8[$33+3>>0]<<24);
  (__ref($32,$34)|0);
  break;
 }
 case 16:  {
  $35 = ((($obj)) + 4|0);
  $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
  $37 = ((($obj)) + 4|0);
  $38 = HEAPU8[$37>>0]|(HEAPU8[$37+1>>0]<<8)|(HEAPU8[$37+2>>0]<<16)|(HEAPU8[$37+3>>0]<<24);
  (__ref($36,$38)|0);
  break;
 }
 case 17:  {
  $39 = ((($obj)) + 8|0);
  $40 = HEAP8[$39>>0]|0;
  $41 = $40 & 1;
  $42 = ($41<<24>>24)!=(0);
  if (!($42)) {
   $43 = ((($obj)) + 4|0);
   $44 = HEAPU8[$43>>0]|(HEAPU8[$43+1>>0]<<8)|(HEAPU8[$43+2>>0]<<16)|(HEAPU8[$43+3>>0]<<24);
   $45 = ((($44)) + 58|0);
   $46 = HEAPU8[$45>>0]|(HEAPU8[$45+1>>0]<<8)|(HEAPU8[$45+2>>0]<<16)|(HEAPU8[$45+3>>0]<<24);
   $47 = ($46|0)==(2);
   if ($47) {
    $48 = ((($obj)) + 4|0);
    $49 = HEAPU8[$48>>0]|(HEAPU8[$48+1>>0]<<8)|(HEAPU8[$48+2>>0]<<16)|(HEAPU8[$48+3>>0]<<24);
    $50 = ((($obj)) + 4|0);
    $51 = HEAPU8[$50>>0]|(HEAPU8[$50+1>>0]<<8)|(HEAPU8[$50+2>>0]<<16)|(HEAPU8[$50+3>>0]<<24);
    (__ref($49,$51)|0);
   }
  }
  break;
 }
 default: {
 }
 }
 $52 = $0;
 __gc_try_trigger($52);
 $53 = $result;
 STACKTOP = sp;return ($53|0);
}
function _mb_push_real($s,$l,$val) {
 $s = $s|0;
 $l = $l|0;
 $val = +$val;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0.0, $14 = 0, $15 = 0.0, $16 = 0, $17 = 0.0, $18 = 0, $19 = 0, $2 = 0, $20 = 0.0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0.0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0.0, $9 = 0, $__hr = 0, $arg = 0, $arg$byval_copy = 0, $or$cond = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $arg$byval_copy = sp + 24|0;
 $arg = sp + 32|0;
 $1 = $s;
 $2 = $l;
 $3 = $val;
 $result = 0;
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $6 = $2;
 $7 = ($6|0)!=(0|0);
 $or$cond = $5 & $7;
 if ($or$cond) {
  $8 = $3;
  $9 = ((($arg)) + 4|0);
  HEAPF32[tempDoublePtr>>2]=$8;HEAP8[$9>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$9+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$9+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$9+3>>0]=HEAP8[tempDoublePtr+3>>0];
  HEAP8[$arg>>0]=4&255;HEAP8[$arg+1>>0]=(4>>8)&255;HEAP8[$arg+2>>0]=(4>>16)&255;HEAP8[$arg+3>>0]=4>>24;
  $10 = HEAPU8[$arg>>0]|(HEAPU8[$arg+1>>0]<<8)|(HEAPU8[$arg+2>>0]<<16)|(HEAPU8[$arg+3>>0]<<24);
  $11 = ($10|0)==(4);
  if ($11) {
   $12 = ((($arg)) + 4|0);
   HEAP8[tempDoublePtr>>0]=HEAP8[$12>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$12+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$12+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$12+3>>0];$13 = +HEAPF32[tempDoublePtr>>2];
   $14 = (~~(($13)));
   $15 = (+($14|0));
   $16 = ((($arg)) + 4|0);
   HEAP8[tempDoublePtr>>0]=HEAP8[$16>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$16+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$16+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$16+3>>0];$17 = +HEAPF32[tempDoublePtr>>2];
   $18 = $15 == $17;
   if ($18) {
    HEAP8[$arg>>0]=2&255;HEAP8[$arg+1>>0]=(2>>8)&255;HEAP8[$arg+2>>0]=(2>>16)&255;HEAP8[$arg+3>>0]=2>>24;
    $19 = ((($arg)) + 4|0);
    HEAP8[tempDoublePtr>>0]=HEAP8[$19>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$19+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$19+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$19+3>>0];$20 = +HEAPF32[tempDoublePtr>>2];
    $21 = (~~(($20)));
    $22 = ((($arg)) + 4|0);
    HEAP8[$22>>0]=$21&255;HEAP8[$22+1>>0]=($21>>8)&255;HEAP8[$22+2>>0]=($21>>16)&255;HEAP8[$22+3>>0]=$21>>24;
   }
  }
  $23 = $1;
  $24 = $2;
  ;HEAP32[$arg$byval_copy>>2]=HEAP32[$arg>>2]|0;HEAP32[$arg$byval_copy+4>>2]=HEAP32[$arg+4>>2]|0;
  $25 = (_mb_push_value($23,$24,$arg$byval_copy)|0);
  $__hr = $25;
  $26 = $__hr;
  $27 = ($26|0)!=(0);
  if ($27) {
   $28 = $__hr;
   $0 = $28;
   $30 = $0;
   STACKTOP = sp;return ($30|0);
  }
 } else {
  $result = 3;
 }
 $29 = $result;
 $0 = $29;
 $30 = $0;
 STACKTOP = sp;return ($30|0);
}
function _mb_push_string($s,$l,$val) {
 $s = $s|0;
 $l = $l|0;
 $val = $val|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $__hr = 0, $arg = 0, $arg$byval_copy = 0, $or$cond = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $arg$byval_copy = sp + 24|0;
 $arg = sp + 32|0;
 $1 = $s;
 $2 = $l;
 $3 = $val;
 $result = 0;
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $6 = $2;
 $7 = ($6|0)!=(0|0);
 $or$cond = $5 & $7;
 do {
  if ($or$cond) {
   $8 = $3;
   $9 = ((($arg)) + 4|0);
   HEAP8[$9>>0]=$8&255;HEAP8[$9+1>>0]=($8>>8)&255;HEAP8[$9+2>>0]=($8>>16)&255;HEAP8[$9+3>>0]=$8>>24;
   HEAP8[$arg>>0]=8&255;HEAP8[$arg+1>>0]=(8>>8)&255;HEAP8[$arg+2>>0]=(8>>16)&255;HEAP8[$arg+3>>0]=8>>24;
   $10 = $1;
   $11 = $2;
   ;HEAP32[$arg$byval_copy>>2]=HEAP32[$arg>>2]|0;HEAP32[$arg$byval_copy+4>>2]=HEAP32[$arg+4>>2]|0;
   $12 = (_mb_push_value($10,$11,$arg$byval_copy)|0);
   $__hr = $12;
   $13 = $__hr;
   $14 = ($13|0)!=(0);
   if (!($14)) {
    $16 = $1;
    $17 = $3;
    __mark_lazy_destroy_string($16,$17);
    break;
   }
   $15 = $__hr;
   $0 = $15;
   $19 = $0;
   STACKTOP = sp;return ($19|0);
  } else {
   $result = 3;
  }
 } while(0);
 $18 = $result;
 $0 = $18;
 $19 = $0;
 STACKTOP = sp;return ($19|0);
}
function _mb_get_var($s,$l,$v,$redir) {
 $s = $s|0;
 $l = $l|0;
 $v = $v|0;
 $redir = $redir|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $9 = 0;
 var $ast = 0, $obj = 0, $or$cond = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $obj = sp;
 $0 = $s;
 $1 = $l;
 $2 = $v;
 $3 = $redir;
 $result = 0;
 $ast = 0;
 HEAP32[$obj>>2] = 0;
 $4 = $0;
 $5 = ($4|0)!=(0|0);
 $6 = $1;
 $7 = ($6|0)!=(0|0);
 $or$cond = $5 & $7;
 if (!($or$cond)) {
  $result = 3;
  $79 = $result;
  STACKTOP = sp;return ($79|0);
 }
 $8 = $2;
 $9 = ($8|0)!=(0|0);
 if ($9) {
  $10 = $2;
  HEAP32[$10>>2] = 0;
 }
 $11 = $1;
 $12 = HEAP32[$11>>2]|0;
 $ast = $12;
 $13 = $ast;
 $14 = ($13|0)!=(0|0);
 if ($14) {
  $15 = $ast;
  $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
  HEAP32[$obj>>2] = $16;
  $17 = HEAP32[$obj>>2]|0;
  $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
  $19 = ($18|0)==(19);
  if ($19) {
   $20 = HEAP32[$obj>>2]|0;
   $21 = ((($20)) + 4|0);
   $22 = HEAP8[$21>>0]|0;
   $23 = $22 << 24 >> 24;
   $24 = ($23|0)==(44);
   if ($24) {
    $25 = $ast;
    $26 = ((($25)) + 8|0);
    $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
    $ast = $27;
    $28 = $ast;
    $29 = ($28|0)!=(0|0);
    if ($29) {
     $30 = $ast;
     $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8)|(HEAPU8[$30+2>>0]<<16)|(HEAPU8[$30+3>>0]<<24);
     $32 = $31;
    } else {
     $32 = 0;
    }
    HEAP32[$obj>>2] = $32;
   }
  }
  $33 = $ast;
  $34 = ($33|0)!=(0|0);
  if ($34) {
   $35 = $ast;
   $36 = ((($35)) + 8|0);
   $37 = HEAPU8[$36>>0]|(HEAPU8[$36+1>>0]<<8)|(HEAPU8[$36+2>>0]<<16)|(HEAPU8[$36+3>>0]<<24);
   $ast = $37;
  }
 }
 $38 = HEAP32[$obj>>2]|0;
 $39 = ($38|0)!=(0|0);
 if ($39) {
  $40 = HEAP32[$obj>>2]|0;
  $41 = HEAPU8[$40>>0]|(HEAPU8[$40+1>>0]<<8)|(HEAPU8[$40+2>>0]<<16)|(HEAPU8[$40+3>>0]<<24);
  $42 = ($41|0)==(9);
  if ($42) {
   $43 = $3;
   $44 = $43&255;
   $45 = ($44|0)!=(0);
   if ($45) {
    $46 = HEAP32[$obj>>2]|0;
    $47 = ((($46)) + 4|0);
    $48 = HEAPU8[$47>>0]|(HEAPU8[$47+1>>0]<<8)|(HEAPU8[$47+2>>0]<<16)|(HEAPU8[$47+3>>0]<<24);
    $49 = ((($48)) + 8|0);
    $50 = HEAP8[$49>>0]|0;
    $51 = $50 & 3;
    $52 = $51&255;
    $53 = ($52|0)!=(0);
    if ($53) {
     $54 = $0;
     $55 = HEAP32[$obj>>2]|0;
     $56 = ((($55)) + 4|0);
     $57 = HEAPU8[$56>>0]|(HEAPU8[$56+1>>0]<<8)|(HEAPU8[$56+2>>0]<<16)|(HEAPU8[$56+3>>0]<<24);
     (__search_var_in_scope_chain($54,$57,$obj)|0);
    }
   }
   $58 = $2;
   $59 = ($58|0)!=(0|0);
   if ($59) {
    $60 = HEAP32[$obj>>2]|0;
    $61 = $2;
    HEAP32[$61>>2] = $60;
   }
  }
 }
 $62 = $ast;
 $63 = ($62|0)!=(0|0);
 if ($63) {
  $64 = $ast;
  $65 = HEAPU8[$64>>0]|(HEAPU8[$64+1>>0]<<8)|(HEAPU8[$64+2>>0]<<16)|(HEAPU8[$64+3>>0]<<24);
  $66 = HEAPU8[$65>>0]|(HEAPU8[$65+1>>0]<<8)|(HEAPU8[$65+2>>0]<<16)|(HEAPU8[$65+3>>0]<<24);
  $67 = ($66|0)==(19);
  if ($67) {
   $68 = $ast;
   $69 = HEAPU8[$68>>0]|(HEAPU8[$68+1>>0]<<8)|(HEAPU8[$68+2>>0]<<16)|(HEAPU8[$68+3>>0]<<24);
   $70 = ((($69)) + 4|0);
   $71 = HEAP8[$70>>0]|0;
   $72 = $71 << 24 >> 24;
   $73 = ($72|0)==(44);
   if ($73) {
    $74 = $ast;
    $75 = ((($74)) + 8|0);
    $76 = HEAPU8[$75>>0]|(HEAPU8[$75+1>>0]<<8)|(HEAPU8[$75+2>>0]<<16)|(HEAPU8[$75+3>>0]<<24);
    $ast = $76;
   }
  }
 }
 $77 = $ast;
 $78 = $1;
 HEAP32[$78>>2] = $77;
 $79 = $result;
 STACKTOP = sp;return ($79|0);
}
function _mb_ref_value($s,$l,$val) {
 $s = $s|0;
 $l = $l|0;
 $val = $val|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $obj = 0, $result = 0, dest = 0;
 var label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $obj = sp + 12|0;
 $0 = $s;
 $1 = $l;
 $result = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 if (!($3)) {
  $result = 3;
  $96 = $result;
  STACKTOP = sp;return ($96|0);
 }
 $4 = HEAPU8[$val>>0]|(HEAPU8[$val+1>>0]<<8)|(HEAPU8[$val+2>>0]<<16)|(HEAPU8[$val+3>>0]<<24);
 $5 = ($4|0)==(512);
 if ($5) {
  $96 = $result;
  STACKTOP = sp;return ($96|0);
 }
 $6 = HEAPU8[$val>>0]|(HEAPU8[$val+1>>0]<<8)|(HEAPU8[$val+2>>0]<<16)|(HEAPU8[$val+3>>0]<<24);
 $7 = ($6|0)==(2048);
 if ($7) {
  $96 = $result;
  STACKTOP = sp;return ($96|0);
 }
 dest=$obj; stop=dest+17|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
 HEAP8[$obj>>0]=0&255;HEAP8[$obj+1>>0]=(0>>8)&255;HEAP8[$obj+2>>0]=(0>>16)&255;HEAP8[$obj+3>>0]=0>>24;
 (__public_value_to_internal_object($val,$obj)|0);
 $8 = HEAPU8[$obj>>0]|(HEAPU8[$obj+1>>0]<<8)|(HEAPU8[$obj+2>>0]<<16)|(HEAPU8[$obj+3>>0]<<24);
 $9 = ($8|0)!=(7);
 if ($9) {
  $10 = HEAPU8[$obj>>0]|(HEAPU8[$obj+1>>0]<<8)|(HEAPU8[$obj+2>>0]<<16)|(HEAPU8[$obj+3>>0]<<24);
  $11 = ($10|0)!=(10);
  if ($11) {
   $12 = HEAPU8[$obj>>0]|(HEAPU8[$obj+1>>0]<<8)|(HEAPU8[$obj+2>>0]<<16)|(HEAPU8[$obj+3>>0]<<24);
   $13 = ($12|0)!=(11);
   if ($13) {
    $14 = HEAPU8[$obj>>0]|(HEAPU8[$obj+1>>0]<<8)|(HEAPU8[$obj+2>>0]<<16)|(HEAPU8[$obj+3>>0]<<24);
    $15 = ($14|0)!=(13);
    if ($15) {
     $16 = HEAPU8[$obj>>0]|(HEAPU8[$obj+1>>0]<<8)|(HEAPU8[$obj+2>>0]<<16)|(HEAPU8[$obj+3>>0]<<24);
     $17 = ($16|0)!=(16);
     if ($17) {
      $18 = HEAPU8[$obj>>0]|(HEAPU8[$obj+1>>0]<<8)|(HEAPU8[$obj+2>>0]<<16)|(HEAPU8[$obj+3>>0]<<24);
      $19 = ($18|0)!=(17);
      if ($19) {
       $20 = $1;
       $21 = ($20|0)!=(0|0);
       if ($21) {
        $22 = $1;
        $23 = HEAP32[$22>>2]|0;
        $24 = ($23|0)!=(0|0);
        if ($24) {
         $25 = $1;
         $26 = HEAP32[$25>>2]|0;
         $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
         $28 = ($27|0)!=(0|0);
         if ($28) {
          $29 = $0;
          $30 = $0;
          $31 = ((($30)) + 67|0);
          $32 = HEAPU8[$31>>0]|(HEAPU8[$31+1>>0]<<8)|(HEAPU8[$31+2>>0]<<16)|(HEAPU8[$31+3>>0]<<24);
          $33 = (__set_current_error($29,67,$32)|0);
          $34 = ($33<<24>>24)!=(0);
          if (!($34)) {
           $96 = $result;
           STACKTOP = sp;return ($96|0);
          }
          $35 = $0;
          $36 = $1;
          $37 = HEAP32[$36>>2]|0;
          $38 = HEAPU8[$37>>0]|(HEAPU8[$37+1>>0]<<8)|(HEAPU8[$37+2>>0]<<16)|(HEAPU8[$37+3>>0]<<24);
          $39 = ((($38)) + 9|0);
          $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8)|(HEAPU8[$39+2>>0]<<16)|(HEAPU8[$39+3>>0]<<24);
          $41 = $1;
          $42 = HEAP32[$41>>2]|0;
          $43 = HEAPU8[$42>>0]|(HEAPU8[$42+1>>0]<<8)|(HEAPU8[$42+2>>0]<<16)|(HEAPU8[$42+3>>0]<<24);
          $44 = ((($43)) + 13|0);
          $45 = HEAPU8[$44>>0]|(HEAPU8[$44+1>>0]<<8);
          $46 = $1;
          $47 = HEAP32[$46>>2]|0;
          $48 = HEAPU8[$47>>0]|(HEAPU8[$47+1>>0]<<8)|(HEAPU8[$47+2>>0]<<16)|(HEAPU8[$47+3>>0]<<24);
          $49 = ((($48)) + 15|0);
          $50 = HEAPU8[$49>>0]|(HEAPU8[$49+1>>0]<<8);
          __set_error_pos($35,$40,$45,$50);
          $result = 3;
          $96 = $result;
          STACKTOP = sp;return ($96|0);
         }
        }
       }
       $51 = $0;
       $52 = $0;
       $53 = ((($52)) + 67|0);
       $54 = HEAPU8[$53>>0]|(HEAPU8[$53+1>>0]<<8)|(HEAPU8[$53+2>>0]<<16)|(HEAPU8[$53+3>>0]<<24);
       $55 = (__set_current_error($51,67,$54)|0);
       $56 = ($55<<24>>24)!=(0);
       if (!($56)) {
        $96 = $result;
        STACKTOP = sp;return ($96|0);
       }
       $57 = $0;
       __set_error_pos($57,0,0,0);
       $result = 3;
       $96 = $result;
       STACKTOP = sp;return ($96|0);
      }
     }
    }
   }
  }
 }
 $58 = HEAPU8[$obj>>0]|(HEAPU8[$obj+1>>0]<<8)|(HEAPU8[$obj+2>>0]<<16)|(HEAPU8[$obj+3>>0]<<24);
 switch ($58|0) {
 case 7:  {
  $59 = ((($obj)) + 4|0);
  $60 = HEAPU8[$59>>0]|(HEAPU8[$59+1>>0]<<8)|(HEAPU8[$59+2>>0]<<16)|(HEAPU8[$59+3>>0]<<24);
  $61 = ((($obj)) + 4|0);
  $62 = HEAPU8[$61>>0]|(HEAPU8[$61+1>>0]<<8)|(HEAPU8[$61+2>>0]<<16)|(HEAPU8[$61+3>>0]<<24);
  (__ref($60,$62)|0);
  $96 = $result;
  STACKTOP = sp;return ($96|0);
  break;
 }
 case 10:  {
  $63 = ((($obj)) + 8|0);
  $64 = HEAP8[$63>>0]|0;
  $65 = $64 & 1;
  $66 = ($65<<24>>24)!=(0);
  if ($66) {
   $96 = $result;
   STACKTOP = sp;return ($96|0);
  }
  $67 = ((($obj)) + 4|0);
  $68 = HEAPU8[$67>>0]|(HEAPU8[$67+1>>0]<<8)|(HEAPU8[$67+2>>0]<<16)|(HEAPU8[$67+3>>0]<<24);
  $69 = ((($obj)) + 4|0);
  $70 = HEAPU8[$69>>0]|(HEAPU8[$69+1>>0]<<8)|(HEAPU8[$69+2>>0]<<16)|(HEAPU8[$69+3>>0]<<24);
  (__ref($68,$70)|0);
  $96 = $result;
  STACKTOP = sp;return ($96|0);
  break;
 }
 case 11:  {
  $71 = ((($obj)) + 4|0);
  $72 = HEAPU8[$71>>0]|(HEAPU8[$71+1>>0]<<8)|(HEAPU8[$71+2>>0]<<16)|(HEAPU8[$71+3>>0]<<24);
  $73 = ((($obj)) + 4|0);
  $74 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
  (__ref($72,$74)|0);
  $96 = $result;
  STACKTOP = sp;return ($96|0);
  break;
 }
 case 13:  {
  $75 = ((($obj)) + 4|0);
  $76 = HEAPU8[$75>>0]|(HEAPU8[$75+1>>0]<<8)|(HEAPU8[$75+2>>0]<<16)|(HEAPU8[$75+3>>0]<<24);
  $77 = ((($obj)) + 4|0);
  $78 = HEAPU8[$77>>0]|(HEAPU8[$77+1>>0]<<8)|(HEAPU8[$77+2>>0]<<16)|(HEAPU8[$77+3>>0]<<24);
  (__ref($76,$78)|0);
  $96 = $result;
  STACKTOP = sp;return ($96|0);
  break;
 }
 case 16:  {
  $79 = ((($obj)) + 4|0);
  $80 = HEAPU8[$79>>0]|(HEAPU8[$79+1>>0]<<8)|(HEAPU8[$79+2>>0]<<16)|(HEAPU8[$79+3>>0]<<24);
  $81 = ((($obj)) + 4|0);
  $82 = HEAPU8[$81>>0]|(HEAPU8[$81+1>>0]<<8)|(HEAPU8[$81+2>>0]<<16)|(HEAPU8[$81+3>>0]<<24);
  (__ref($80,$82)|0);
  $96 = $result;
  STACKTOP = sp;return ($96|0);
  break;
 }
 case 17:  {
  $83 = ((($obj)) + 8|0);
  $84 = HEAP8[$83>>0]|0;
  $85 = $84 & 1;
  $86 = ($85<<24>>24)!=(0);
  if ($86) {
   $96 = $result;
   STACKTOP = sp;return ($96|0);
  }
  $87 = ((($obj)) + 4|0);
  $88 = HEAPU8[$87>>0]|(HEAPU8[$87+1>>0]<<8)|(HEAPU8[$87+2>>0]<<16)|(HEAPU8[$87+3>>0]<<24);
  $89 = ((($88)) + 58|0);
  $90 = HEAPU8[$89>>0]|(HEAPU8[$89+1>>0]<<8)|(HEAPU8[$89+2>>0]<<16)|(HEAPU8[$89+3>>0]<<24);
  $91 = ($90|0)==(2);
  if (!($91)) {
   $96 = $result;
   STACKTOP = sp;return ($96|0);
  }
  $92 = ((($obj)) + 4|0);
  $93 = HEAPU8[$92>>0]|(HEAPU8[$92+1>>0]<<8)|(HEAPU8[$92+2>>0]<<16)|(HEAPU8[$92+3>>0]<<24);
  $94 = ((($obj)) + 4|0);
  $95 = HEAPU8[$94>>0]|(HEAPU8[$94+1>>0]<<8)|(HEAPU8[$94+2>>0]<<16)|(HEAPU8[$94+3>>0]<<24);
  (__ref($93,$95)|0);
  $96 = $result;
  STACKTOP = sp;return ($96|0);
  break;
 }
 default: {
  $96 = $result;
  STACKTOP = sp;return ($96|0);
 }
 }
 return (0)|0;
}
function _mb_unref_value($s,$l,$val) {
 $s = $s|0;
 $l = $l|0;
 $val = $val|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $obj = 0, $result = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $obj = sp + 12|0;
 $0 = $s;
 $1 = $l;
 $result = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 if (!($3)) {
  $result = 3;
  $110 = $result;
  STACKTOP = sp;return ($110|0);
 }
 $4 = $0;
 $5 = (__try_purge_it($4,$val,0)|0);
 $6 = ($5<<24>>24)!=(0);
 if ($6) {
  $110 = $result;
  STACKTOP = sp;return ($110|0);
 }
 dest=$obj; stop=dest+17|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
 HEAP8[$obj>>0]=0&255;HEAP8[$obj+1>>0]=(0>>8)&255;HEAP8[$obj+2>>0]=(0>>16)&255;HEAP8[$obj+3>>0]=0>>24;
 (__public_value_to_internal_object($val,$obj)|0);
 $7 = HEAPU8[$obj>>0]|(HEAPU8[$obj+1>>0]<<8)|(HEAPU8[$obj+2>>0]<<16)|(HEAPU8[$obj+3>>0]<<24);
 $8 = ($7|0)!=(7);
 if ($8) {
  $9 = HEAPU8[$obj>>0]|(HEAPU8[$obj+1>>0]<<8)|(HEAPU8[$obj+2>>0]<<16)|(HEAPU8[$obj+3>>0]<<24);
  $10 = ($9|0)!=(10);
  if ($10) {
   $11 = HEAPU8[$obj>>0]|(HEAPU8[$obj+1>>0]<<8)|(HEAPU8[$obj+2>>0]<<16)|(HEAPU8[$obj+3>>0]<<24);
   $12 = ($11|0)!=(11);
   if ($12) {
    $13 = HEAPU8[$obj>>0]|(HEAPU8[$obj+1>>0]<<8)|(HEAPU8[$obj+2>>0]<<16)|(HEAPU8[$obj+3>>0]<<24);
    $14 = ($13|0)!=(13);
    if ($14) {
     $15 = HEAPU8[$obj>>0]|(HEAPU8[$obj+1>>0]<<8)|(HEAPU8[$obj+2>>0]<<16)|(HEAPU8[$obj+3>>0]<<24);
     $16 = ($15|0)!=(16);
     if ($16) {
      $17 = HEAPU8[$obj>>0]|(HEAPU8[$obj+1>>0]<<8)|(HEAPU8[$obj+2>>0]<<16)|(HEAPU8[$obj+3>>0]<<24);
      $18 = ($17|0)!=(17);
      if ($18) {
       $19 = $1;
       $20 = ($19|0)!=(0|0);
       if ($20) {
        $21 = $1;
        $22 = HEAP32[$21>>2]|0;
        $23 = ($22|0)!=(0|0);
        if ($23) {
         $24 = $1;
         $25 = HEAP32[$24>>2]|0;
         $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
         $27 = ($26|0)!=(0|0);
         if ($27) {
          $28 = $0;
          $29 = $0;
          $30 = ((($29)) + 67|0);
          $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8)|(HEAPU8[$30+2>>0]<<16)|(HEAPU8[$30+3>>0]<<24);
          $32 = (__set_current_error($28,67,$31)|0);
          $33 = ($32<<24>>24)!=(0);
          if (!($33)) {
           $110 = $result;
           STACKTOP = sp;return ($110|0);
          }
          $34 = $0;
          $35 = $1;
          $36 = HEAP32[$35>>2]|0;
          $37 = HEAPU8[$36>>0]|(HEAPU8[$36+1>>0]<<8)|(HEAPU8[$36+2>>0]<<16)|(HEAPU8[$36+3>>0]<<24);
          $38 = ((($37)) + 9|0);
          $39 = HEAPU8[$38>>0]|(HEAPU8[$38+1>>0]<<8)|(HEAPU8[$38+2>>0]<<16)|(HEAPU8[$38+3>>0]<<24);
          $40 = $1;
          $41 = HEAP32[$40>>2]|0;
          $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
          $43 = ((($42)) + 13|0);
          $44 = HEAPU8[$43>>0]|(HEAPU8[$43+1>>0]<<8);
          $45 = $1;
          $46 = HEAP32[$45>>2]|0;
          $47 = HEAPU8[$46>>0]|(HEAPU8[$46+1>>0]<<8)|(HEAPU8[$46+2>>0]<<16)|(HEAPU8[$46+3>>0]<<24);
          $48 = ((($47)) + 15|0);
          $49 = HEAPU8[$48>>0]|(HEAPU8[$48+1>>0]<<8);
          __set_error_pos($34,$39,$44,$49);
          $result = 3;
          $110 = $result;
          STACKTOP = sp;return ($110|0);
         }
        }
       }
       $50 = $0;
       $51 = $0;
       $52 = ((($51)) + 67|0);
       $53 = HEAPU8[$52>>0]|(HEAPU8[$52+1>>0]<<8)|(HEAPU8[$52+2>>0]<<16)|(HEAPU8[$52+3>>0]<<24);
       $54 = (__set_current_error($50,67,$53)|0);
       $55 = ($54<<24>>24)!=(0);
       if (!($55)) {
        $110 = $result;
        STACKTOP = sp;return ($110|0);
       }
       $56 = $0;
       __set_error_pos($56,0,0,0);
       $result = 3;
       $110 = $result;
       STACKTOP = sp;return ($110|0);
      }
     }
    }
   }
  }
 }
 $57 = HEAPU8[$obj>>0]|(HEAPU8[$obj+1>>0]<<8)|(HEAPU8[$obj+2>>0]<<16)|(HEAPU8[$obj+3>>0]<<24);
 switch ($57|0) {
 case 7:  {
  $58 = ((($obj)) + 4|0);
  $59 = HEAPU8[$58>>0]|(HEAPU8[$58+1>>0]<<8)|(HEAPU8[$58+2>>0]<<16)|(HEAPU8[$58+3>>0]<<24);
  $60 = ((($obj)) + 4|0);
  $61 = HEAPU8[$60>>0]|(HEAPU8[$60+1>>0]<<8)|(HEAPU8[$60+2>>0]<<16)|(HEAPU8[$60+3>>0]<<24);
  (__unref($59,$61)|0);
  $110 = $result;
  STACKTOP = sp;return ($110|0);
  break;
 }
 case 10:  {
  $62 = ((($obj)) + 8|0);
  $63 = HEAP8[$62>>0]|0;
  $64 = $63 & 1;
  $65 = ($64<<24>>24)!=(0);
  if ($65) {
   $110 = $result;
   STACKTOP = sp;return ($110|0);
  }
  $66 = ((($obj)) + 4|0);
  $67 = HEAPU8[$66>>0]|(HEAPU8[$66+1>>0]<<8)|(HEAPU8[$66+2>>0]<<16)|(HEAPU8[$66+3>>0]<<24);
  $68 = ((($obj)) + 4|0);
  $69 = HEAPU8[$68>>0]|(HEAPU8[$68+1>>0]<<8)|(HEAPU8[$68+2>>0]<<16)|(HEAPU8[$68+3>>0]<<24);
  (__unref($67,$69)|0);
  $110 = $result;
  STACKTOP = sp;return ($110|0);
  break;
 }
 case 11:  {
  $70 = ((($obj)) + 4|0);
  $71 = HEAPU8[$70>>0]|(HEAPU8[$70+1>>0]<<8)|(HEAPU8[$70+2>>0]<<16)|(HEAPU8[$70+3>>0]<<24);
  $72 = ((($obj)) + 4|0);
  $73 = HEAPU8[$72>>0]|(HEAPU8[$72+1>>0]<<8)|(HEAPU8[$72+2>>0]<<16)|(HEAPU8[$72+3>>0]<<24);
  (__unref($71,$73)|0);
  $110 = $result;
  STACKTOP = sp;return ($110|0);
  break;
 }
 case 13:  {
  $74 = ((($obj)) + 4|0);
  $75 = HEAPU8[$74>>0]|(HEAPU8[$74+1>>0]<<8)|(HEAPU8[$74+2>>0]<<16)|(HEAPU8[$74+3>>0]<<24);
  $76 = ((($obj)) + 4|0);
  $77 = HEAPU8[$76>>0]|(HEAPU8[$76+1>>0]<<8)|(HEAPU8[$76+2>>0]<<16)|(HEAPU8[$76+3>>0]<<24);
  (__unref($75,$77)|0);
  $110 = $result;
  STACKTOP = sp;return ($110|0);
  break;
 }
 case 16:  {
  $78 = ((($obj)) + 8|0);
  $79 = HEAP8[$78>>0]|0;
  $80 = $79 & 1;
  $81 = ($80<<24>>24)!=(0);
  if ($81) {
   $110 = $result;
   STACKTOP = sp;return ($110|0);
  }
  $82 = ((($obj)) + 4|0);
  $83 = HEAPU8[$82>>0]|(HEAPU8[$82+1>>0]<<8)|(HEAPU8[$82+2>>0]<<16)|(HEAPU8[$82+3>>0]<<24);
  $84 = ((($obj)) + 4|0);
  $85 = HEAPU8[$84>>0]|(HEAPU8[$84+1>>0]<<8)|(HEAPU8[$84+2>>0]<<16)|(HEAPU8[$84+3>>0]<<24);
  (__unref($83,$85)|0);
  $110 = $result;
  STACKTOP = sp;return ($110|0);
  break;
 }
 case 17:  {
  $86 = ((($obj)) + 8|0);
  $87 = HEAP8[$86>>0]|0;
  $88 = $87 & 1;
  $89 = ($88<<24>>24)!=(0);
  if (!($89)) {
   $90 = ((($obj)) + 4|0);
   $91 = HEAPU8[$90>>0]|(HEAPU8[$90+1>>0]<<8)|(HEAPU8[$90+2>>0]<<16)|(HEAPU8[$90+3>>0]<<24);
   $92 = ((($91)) + 58|0);
   $93 = HEAPU8[$92>>0]|(HEAPU8[$92+1>>0]<<8)|(HEAPU8[$92+2>>0]<<16)|(HEAPU8[$92+3>>0]<<24);
   $94 = ($93|0)==(2);
   if ($94) {
    $95 = ((($obj)) + 4|0);
    $96 = HEAPU8[$95>>0]|(HEAPU8[$95+1>>0]<<8)|(HEAPU8[$95+2>>0]<<16)|(HEAPU8[$95+3>>0]<<24);
    $97 = ((($obj)) + 4|0);
    $98 = HEAPU8[$97>>0]|(HEAPU8[$97+1>>0]<<8)|(HEAPU8[$97+2>>0]<<16)|(HEAPU8[$97+3>>0]<<24);
    (__unref($96,$98)|0);
    $110 = $result;
    STACKTOP = sp;return ($110|0);
   }
  }
  $99 = ((($obj)) + 8|0);
  $100 = HEAP8[$99>>0]|0;
  $101 = $100 & 1;
  $102 = ($101<<24>>24)!=(0);
  if ($102) {
   $110 = $result;
   STACKTOP = sp;return ($110|0);
  }
  $103 = ((($obj)) + 4|0);
  $104 = HEAPU8[$103>>0]|(HEAPU8[$103+1>>0]<<8)|(HEAPU8[$103+2>>0]<<16)|(HEAPU8[$103+3>>0]<<24);
  $105 = ((($104)) + 58|0);
  $106 = HEAPU8[$105>>0]|(HEAPU8[$105+1>>0]<<8)|(HEAPU8[$105+2>>0]<<16)|(HEAPU8[$105+3>>0]<<24);
  $107 = ($106|0)!=(2);
  if (!($107)) {
   $110 = $result;
   STACKTOP = sp;return ($110|0);
  }
  $108 = ((($obj)) + 4|0);
  $109 = HEAPU8[$108>>0]|(HEAPU8[$108+1>>0]<<8)|(HEAPU8[$108+2>>0]<<16)|(HEAPU8[$108+3>>0]<<24);
  __destroy_routine(0,$109);
  $110 = $result;
  STACKTOP = sp;return ($110|0);
  break;
 }
 default: {
  $110 = $result;
  STACKTOP = sp;return ($110|0);
 }
 }
 return (0)|0;
}
function _mb_dispose_value($s,$val) {
 $s = $s|0;
 $val = $val|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $result = 0;
 $1 = $0;
 $2 = ($1|0)!=(0|0);
 if (!($2)) {
  $result = 3;
  $12 = $result;
  STACKTOP = sp;return ($12|0);
 }
 $3 = HEAPU8[$val>>0]|(HEAPU8[$val+1>>0]<<8)|(HEAPU8[$val+2>>0]<<16)|(HEAPU8[$val+3>>0]<<24);
 $4 = ($3|0)==(8);
 do {
  if ($4) {
   $5 = ((($val)) + 4|0);
   $6 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
   $7 = ($6|0)!=(0|0);
   if ($7) {
    $8 = ((($val)) + 4|0);
    $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
    _mb_free($9);
    $10 = ((($val)) + 4|0);
    HEAP8[$10>>0]=0&255;HEAP8[$10+1>>0]=(0>>8)&255;HEAP8[$10+2>>0]=(0>>16)&255;HEAP8[$10+3>>0]=0>>24;
    break;
   } else {
    ___assert_fail((4369|0),(4322|0),14187,(4535|0));
    // unreachable;
   }
  }
 } while(0);
 $11 = $0;
 __assign_public_value($11,$val,0,0);
 $12 = $result;
 STACKTOP = sp;return ($12|0);
}
function _mb_load_string($s,$l,$reset) {
 $s = $s|0;
 $l = $l|0;
 $reset = $reset|0;
 var $$sink = 0, $$sink2 = 0, $$sink3 = 0, $$sink4 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0;
 var $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0;
 var $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0;
 var $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0;
 var $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0;
 var $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0;
 var $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0;
 var $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0;
 var $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0;
 var $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0;
 var $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0;
 var $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $_col = 0, $_row = 0, $before = 0, $ch = 0, $context = 0, $n = 0, $or$cond = 0, $result = 0, $wrapped = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp + 12|0;
 $0 = $s;
 HEAP32[$1>>2] = $l;
 $2 = $reset;
 $result = 0;
 $_row = 0;
 $_col = 0;
 $wrapped = 0;
 $context = 0;
 $3 = $0;
 $4 = ($3|0)!=(0|0);
 $5 = HEAP32[$1>>2]|0;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 do {
  if ($or$cond) {
   $7 = $0;
   $8 = ((($7)) + 79|0);
   HEAP8[$8>>0]=0&255;HEAP8[$8+1>>0]=(0>>8)&255;HEAP8[$8+2>>0]=(0>>16)&255;HEAP8[$8+3>>0]=0>>24;
   $9 = $0;
   $10 = ((($9)) + 135|0);
   HEAP8[$10>>0]=0&255;HEAP8[$10+1>>0]=(0>>8)&255;HEAP8[$10+2>>0]=(0>>16)&255;HEAP8[$10+3>>0]=0>>24;
   $11 = $0;
   $12 = ((($11)) + 139|0);
   HEAP8[$12>>0]=0&255;HEAP8[$12+1>>0]=(0>>8)&255;HEAP8[$12+2>>0]=(0>>16)&255;HEAP8[$12+3>>0]=0>>24;
   $13 = $0;
   $14 = ((($13)) + 71|0);
   $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
   $16 = ($15|0)!=(0|0);
   if (!($16)) {
    $17 = $0;
    $18 = ((($17)) + 71|0);
    $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
    $20 = (__reset_parsing_context($19)|0);
    $21 = $0;
    $22 = ((($21)) + 71|0);
    HEAP8[$22>>0]=$20&255;HEAP8[$22+1>>0]=($20>>8)&255;HEAP8[$22+2>>0]=($20>>16)&255;HEAP8[$22+3>>0]=$20>>24;
   }
   $23 = $0;
   $24 = ((($23)) + 71|0);
   $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
   $context = $25;
   (_mb_uu_getbom($1)|0);
   L6: while(1) {
    $26 = HEAP32[$1>>2]|0;
    $27 = HEAP8[$26>>0]|0;
    $28 = ($27<<24>>24)!=(0);
    if (!($28)) {
     label = 50;
     break;
    }
    $n = 1;
    $29 = $context;
    $30 = ((($29)) + 150|0);
    $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8)|(HEAPU8[$30+2>>0]<<16)|(HEAPU8[$30+3>>0]<<24);
    $32 = ($31|0)==(0);
    if ($32) {
     $33 = HEAP32[$1>>2]|0;
     $34 = (_mb_uu_ischar($33)|0);
     $n = $34;
    }
    $35 = $n;
    $36 = ($35|0)==(1);
    do {
     if ($36) {
      $37 = HEAP32[$1>>2]|0;
      $38 = HEAP8[$37>>0]|0;
      $ch = $38;
      $39 = $ch;
      $40 = $39 << 24 >> 24;
      $41 = ($40|0)==(10);
      if (!($41)) {
       $42 = $ch;
       $43 = $42 << 24 >> 24;
       $44 = ($43|0)==(13);
       if (!($44)) {
        label = 30;
        break;
       }
      }
      $45 = $wrapped;
      $46 = ($45<<24>>24)!=(0);
      if ($46) {
       $47 = $wrapped;
       $48 = $47 << 24 >> 24;
       $49 = $ch;
       $50 = $49 << 24 >> 24;
       $51 = ($48|0)==($50|0);
       if (!($51)) {
        label = 30;
        break;
       }
      }
      $before = 0;
      $52 = $ch;
      $wrapped = $52;
      $53 = $context;
      $54 = ((($53)) + 168|0);
      $55 = HEAPU8[$54>>0]|(HEAPU8[$54+1>>0]<<8);
      $56 = (($55) + 1)<<16>>16;
      HEAP8[$54>>0]=$56&255;HEAP8[$54+1>>0]=$56>>8;
      $before = $55;
      $57 = $context;
      $58 = ((($57)) + 170|0);
      HEAP8[$58>>0]=0&255;HEAP8[$58+1>>0]=0>>8;
      $59 = $before;
      $60 = $59&65535;
      $61 = $context;
      $62 = ((($61)) + 168|0);
      $63 = HEAPU8[$62>>0]|(HEAPU8[$62+1>>0]<<8);
      $64 = $63&65535;
      $65 = ($60|0)>($64|0);
      if ($65) {
       label = 15;
       break L6;
      }
     } else {
      label = 30;
     }
    } while(0);
    if ((label|0) == 30) {
     label = 0;
     $wrapped = 0;
     $153 = $context;
     $154 = ((($153)) + 170|0);
     $155 = HEAPU8[$154>>0]|(HEAPU8[$154+1>>0]<<8);
     $156 = (($155) + 1)<<16>>16;
     HEAP8[$154>>0]=$156&255;HEAP8[$154+1>>0]=$156>>8;
    }
    $157 = $0;
    $158 = HEAP32[$1>>2]|0;
    $159 = $n;
    $160 = $context;
    $161 = ((($160)) + 164|0);
    $162 = HEAPU8[$161>>0]|(HEAPU8[$161+1>>0]<<8)|(HEAPU8[$161+2>>0]<<16)|(HEAPU8[$161+3>>0]<<24);
    $163 = $_row;
    $164 = $_col;
    $165 = (__parse_char($157,$158,$159,$162,$163,$164)|0);
    $result = $165;
    $166 = $result;
    $167 = ($166|0)!=(0);
    if ($167) {
     label = 32;
     break;
    }
    $273 = $context;
    $274 = ((($273)) + 168|0);
    $275 = HEAPU8[$274>>0]|(HEAPU8[$274+1>>0]<<8);
    $_row = $275;
    $276 = $context;
    $277 = ((($276)) + 170|0);
    $278 = HEAPU8[$277>>0]|(HEAPU8[$277+1>>0]<<8);
    $_col = $278;
    $279 = $context;
    $280 = ((($279)) + 164|0);
    $281 = HEAPU8[$280>>0]|(HEAPU8[$280+1>>0]<<8)|(HEAPU8[$280+2>>0]<<16)|(HEAPU8[$280+3>>0]<<24);
    $282 = (($281) + 1)|0;
    HEAP8[$280>>0]=$282&255;HEAP8[$280+1>>0]=($282>>8)&255;HEAP8[$280+2>>0]=($282>>16)&255;HEAP8[$280+3>>0]=$282>>24;
    $283 = $n;
    $284 = HEAP32[$1>>2]|0;
    $285 = (($284) + ($283)|0);
    HEAP32[$1>>2] = $285;
   }
   if ((label|0) == 15) {
    $66 = $context;
    $67 = ((($66)) + 170|0);
    HEAP8[$67>>0]=1&255;HEAP8[$67+1>>0]=1>>8;
    $68 = $0;
    $69 = $0;
    $70 = ((($69)) + 139|0);
    $71 = HEAPU8[$70>>0]|(HEAPU8[$70+1>>0]<<8)|(HEAPU8[$70+2>>0]<<16)|(HEAPU8[$70+3>>0]<<24);
    (__set_current_error($68,10,$71)|0);
    $72 = $0;
    $73 = ((($72)) + 163|0);
    $74 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
    $75 = ($74|0)!=(0|0);
    if (!($75)) {
     break;
    }
    $76 = $0;
    $77 = ((($76)) + 134|0);
    $78 = HEAP8[$77>>0]|0;
    $79 = $78 & 1;
    $80 = ($79<<24>>24)!=(0);
    if ($80) {
     break;
    }
    $81 = $0;
    $82 = ((($81)) + 134|0);
    $83 = HEAP8[$82>>0]|0;
    $84 = $83 & -2;
    $85 = $84 | 1;
    HEAP8[$82>>0] = $85;
    $86 = $0;
    $87 = ((($86)) + 163|0);
    $88 = HEAPU8[$87>>0]|(HEAPU8[$87+1>>0]<<8)|(HEAPU8[$87+2>>0]<<16)|(HEAPU8[$87+3>>0]<<24);
    $89 = $0;
    $90 = $0;
    $91 = ((($90)) + 135|0);
    $92 = HEAPU8[$91>>0]|(HEAPU8[$91+1>>0]<<8)|(HEAPU8[$91+2>>0]<<16)|(HEAPU8[$91+3>>0]<<24);
    $93 = $0;
    $94 = ((($93)) + 135|0);
    $95 = HEAPU8[$94>>0]|(HEAPU8[$94+1>>0]<<8)|(HEAPU8[$94+2>>0]<<16)|(HEAPU8[$94+3>>0]<<24);
    $96 = (_mb_get_error_desc($95)|0);
    $97 = $0;
    $98 = ((($97)) + 139|0);
    $99 = HEAPU8[$98>>0]|(HEAPU8[$98+1>>0]<<8)|(HEAPU8[$98+2>>0]<<16)|(HEAPU8[$98+3>>0]<<24);
    $100 = $0;
    $101 = ((($100)) + 71|0);
    $102 = HEAPU8[$101>>0]|(HEAPU8[$101+1>>0]<<8)|(HEAPU8[$101+2>>0]<<16)|(HEAPU8[$101+3>>0]<<24);
    $103 = ($102|0)!=(0|0);
    if ($103) {
     $104 = $0;
     $105 = ((($104)) + 79|0);
     $106 = HEAPU8[$105>>0]|(HEAPU8[$105+1>>0]<<8)|(HEAPU8[$105+2>>0]<<16)|(HEAPU8[$105+3>>0]<<24);
     $107 = ($106|0)!=(0);
     if ($107) {
      label = 20;
     } else {
      $108 = $0;
      $109 = ((($108)) + 71|0);
      $110 = HEAPU8[$109>>0]|(HEAPU8[$109+1>>0]<<8)|(HEAPU8[$109+2>>0]<<16)|(HEAPU8[$109+3>>0]<<24);
      $111 = ((($110)) + 164|0);
      $112 = HEAPU8[$111>>0]|(HEAPU8[$111+1>>0]<<8)|(HEAPU8[$111+2>>0]<<16)|(HEAPU8[$111+3>>0]<<24);
      $152 = $112;
     }
    } else {
     label = 20;
    }
    if ((label|0) == 20) {
     $113 = $0;
     $114 = ((($113)) + 143|0);
     $115 = HEAPU8[$114>>0]|(HEAPU8[$114+1>>0]<<8)|(HEAPU8[$114+2>>0]<<16)|(HEAPU8[$114+3>>0]<<24);
     $152 = $115;
    }
    $116 = $0;
    $117 = ((($116)) + 71|0);
    $118 = HEAPU8[$117>>0]|(HEAPU8[$117+1>>0]<<8)|(HEAPU8[$117+2>>0]<<16)|(HEAPU8[$117+3>>0]<<24);
    $119 = ($118|0)!=(0|0);
    if ($119) {
     $120 = $0;
     $121 = ((($120)) + 79|0);
     $122 = HEAPU8[$121>>0]|(HEAPU8[$121+1>>0]<<8)|(HEAPU8[$121+2>>0]<<16)|(HEAPU8[$121+3>>0]<<24);
     $123 = ($122|0)!=(0);
     if ($123) {
      label = 24;
     } else {
      $124 = $0;
      $125 = ((($124)) + 71|0);
      $126 = HEAPU8[$125>>0]|(HEAPU8[$125+1>>0]<<8)|(HEAPU8[$125+2>>0]<<16)|(HEAPU8[$125+3>>0]<<24);
      $127 = ((($126)) + 168|0);
      $128 = HEAPU8[$127>>0]|(HEAPU8[$127+1>>0]<<8);
      $$sink = $128;
     }
    } else {
     label = 24;
    }
    if ((label|0) == 24) {
     $129 = $0;
     $130 = ((($129)) + 147|0);
     $131 = HEAPU8[$130>>0]|(HEAPU8[$130+1>>0]<<8);
     $$sink = $131;
    }
    $132 = $$sink&65535;
    $133 = $132&65535;
    $134 = $0;
    $135 = ((($134)) + 71|0);
    $136 = HEAPU8[$135>>0]|(HEAPU8[$135+1>>0]<<8)|(HEAPU8[$135+2>>0]<<16)|(HEAPU8[$135+3>>0]<<24);
    $137 = ($136|0)!=(0|0);
    if ($137) {
     $138 = $0;
     $139 = ((($138)) + 79|0);
     $140 = HEAPU8[$139>>0]|(HEAPU8[$139+1>>0]<<8)|(HEAPU8[$139+2>>0]<<16)|(HEAPU8[$139+3>>0]<<24);
     $141 = ($140|0)!=(0);
     if ($141) {
      label = 28;
     } else {
      $142 = $0;
      $143 = ((($142)) + 71|0);
      $144 = HEAPU8[$143>>0]|(HEAPU8[$143+1>>0]<<8)|(HEAPU8[$143+2>>0]<<16)|(HEAPU8[$143+3>>0]<<24);
      $145 = ((($144)) + 170|0);
      $146 = HEAPU8[$145>>0]|(HEAPU8[$145+1>>0]<<8);
      $$sink2 = $146;
     }
    } else {
     label = 28;
    }
    if ((label|0) == 28) {
     $147 = $0;
     $148 = ((($147)) + 149|0);
     $149 = HEAPU8[$148>>0]|(HEAPU8[$148+1>>0]<<8);
     $$sink2 = $149;
    }
    $150 = $$sink2&65535;
    $151 = $150&65535;
    FUNCTION_TABLE_viiiiiiii[$88 & 127]($89,$92,$96,$99,$152,$133,$151,3);
    break;
   }
   else if ((label|0) == 32) {
    $168 = $0;
    $169 = $context;
    $170 = ((($169)) + 164|0);
    $171 = HEAPU8[$170>>0]|(HEAPU8[$170+1>>0]<<8)|(HEAPU8[$170+2>>0]<<16)|(HEAPU8[$170+3>>0]<<24);
    $172 = $_row;
    $173 = $_col;
    __set_error_pos($168,$171,$172,$173);
    $174 = $0;
    $175 = $0;
    $176 = ((($175)) + 135|0);
    $177 = HEAPU8[$176>>0]|(HEAPU8[$176+1>>0]<<8)|(HEAPU8[$176+2>>0]<<16)|(HEAPU8[$176+3>>0]<<24);
    $178 = $0;
    $179 = ((($178)) + 139|0);
    $180 = HEAPU8[$179>>0]|(HEAPU8[$179+1>>0]<<8)|(HEAPU8[$179+2>>0]<<16)|(HEAPU8[$179+3>>0]<<24);
    (__set_current_error($174,$177,$180)|0);
    $181 = $0;
    $182 = ((($181)) + 163|0);
    $183 = HEAPU8[$182>>0]|(HEAPU8[$182+1>>0]<<8)|(HEAPU8[$182+2>>0]<<16)|(HEAPU8[$182+3>>0]<<24);
    $184 = ($183|0)!=(0|0);
    if ($184) {
     $185 = $0;
     $186 = ((($185)) + 134|0);
     $187 = HEAP8[$186>>0]|0;
     $188 = $187 & 1;
     $189 = ($188<<24>>24)!=(0);
     if ($189) {
      break;
     }
     $190 = $0;
     $191 = ((($190)) + 134|0);
     $192 = HEAP8[$191>>0]|0;
     $193 = $192 & -2;
     $194 = $193 | 1;
     HEAP8[$191>>0] = $194;
     $195 = $0;
     $196 = ((($195)) + 163|0);
     $197 = HEAPU8[$196>>0]|(HEAPU8[$196+1>>0]<<8)|(HEAPU8[$196+2>>0]<<16)|(HEAPU8[$196+3>>0]<<24);
     $198 = $0;
     $199 = $0;
     $200 = ((($199)) + 135|0);
     $201 = HEAPU8[$200>>0]|(HEAPU8[$200+1>>0]<<8)|(HEAPU8[$200+2>>0]<<16)|(HEAPU8[$200+3>>0]<<24);
     $202 = $0;
     $203 = ((($202)) + 135|0);
     $204 = HEAPU8[$203>>0]|(HEAPU8[$203+1>>0]<<8)|(HEAPU8[$203+2>>0]<<16)|(HEAPU8[$203+3>>0]<<24);
     $205 = (_mb_get_error_desc($204)|0);
     $206 = $0;
     $207 = ((($206)) + 139|0);
     $208 = HEAPU8[$207>>0]|(HEAPU8[$207+1>>0]<<8)|(HEAPU8[$207+2>>0]<<16)|(HEAPU8[$207+3>>0]<<24);
     $209 = $0;
     $210 = ((($209)) + 71|0);
     $211 = HEAPU8[$210>>0]|(HEAPU8[$210+1>>0]<<8)|(HEAPU8[$210+2>>0]<<16)|(HEAPU8[$210+3>>0]<<24);
     $212 = ($211|0)!=(0|0);
     if ($212) {
      $213 = $0;
      $214 = ((($213)) + 79|0);
      $215 = HEAPU8[$214>>0]|(HEAPU8[$214+1>>0]<<8)|(HEAPU8[$214+2>>0]<<16)|(HEAPU8[$214+3>>0]<<24);
      $216 = ($215|0)!=(0);
      if ($216) {
       label = 37;
      } else {
       $217 = $0;
       $218 = ((($217)) + 71|0);
       $219 = HEAPU8[$218>>0]|(HEAPU8[$218+1>>0]<<8)|(HEAPU8[$218+2>>0]<<16)|(HEAPU8[$218+3>>0]<<24);
       $220 = ((($219)) + 164|0);
       $221 = HEAPU8[$220>>0]|(HEAPU8[$220+1>>0]<<8)|(HEAPU8[$220+2>>0]<<16)|(HEAPU8[$220+3>>0]<<24);
       $262 = $221;
      }
     } else {
      label = 37;
     }
     if ((label|0) == 37) {
      $222 = $0;
      $223 = ((($222)) + 143|0);
      $224 = HEAPU8[$223>>0]|(HEAPU8[$223+1>>0]<<8)|(HEAPU8[$223+2>>0]<<16)|(HEAPU8[$223+3>>0]<<24);
      $262 = $224;
     }
     $225 = $0;
     $226 = ((($225)) + 71|0);
     $227 = HEAPU8[$226>>0]|(HEAPU8[$226+1>>0]<<8)|(HEAPU8[$226+2>>0]<<16)|(HEAPU8[$226+3>>0]<<24);
     $228 = ($227|0)!=(0|0);
     if ($228) {
      $229 = $0;
      $230 = ((($229)) + 79|0);
      $231 = HEAPU8[$230>>0]|(HEAPU8[$230+1>>0]<<8)|(HEAPU8[$230+2>>0]<<16)|(HEAPU8[$230+3>>0]<<24);
      $232 = ($231|0)!=(0);
      if ($232) {
       label = 41;
      } else {
       $233 = $0;
       $234 = ((($233)) + 71|0);
       $235 = HEAPU8[$234>>0]|(HEAPU8[$234+1>>0]<<8)|(HEAPU8[$234+2>>0]<<16)|(HEAPU8[$234+3>>0]<<24);
       $236 = ((($235)) + 168|0);
       $237 = HEAPU8[$236>>0]|(HEAPU8[$236+1>>0]<<8);
       $$sink3 = $237;
      }
     } else {
      label = 41;
     }
     if ((label|0) == 41) {
      $238 = $0;
      $239 = ((($238)) + 147|0);
      $240 = HEAPU8[$239>>0]|(HEAPU8[$239+1>>0]<<8);
      $$sink3 = $240;
     }
     $241 = $$sink3&65535;
     $242 = $241&65535;
     $243 = $0;
     $244 = ((($243)) + 71|0);
     $245 = HEAPU8[$244>>0]|(HEAPU8[$244+1>>0]<<8)|(HEAPU8[$244+2>>0]<<16)|(HEAPU8[$244+3>>0]<<24);
     $246 = ($245|0)!=(0|0);
     if ($246) {
      $247 = $0;
      $248 = ((($247)) + 79|0);
      $249 = HEAPU8[$248>>0]|(HEAPU8[$248+1>>0]<<8)|(HEAPU8[$248+2>>0]<<16)|(HEAPU8[$248+3>>0]<<24);
      $250 = ($249|0)!=(0);
      if ($250) {
       label = 45;
      } else {
       $251 = $0;
       $252 = ((($251)) + 71|0);
       $253 = HEAPU8[$252>>0]|(HEAPU8[$252+1>>0]<<8)|(HEAPU8[$252+2>>0]<<16)|(HEAPU8[$252+3>>0]<<24);
       $254 = ((($253)) + 170|0);
       $255 = HEAPU8[$254>>0]|(HEAPU8[$254+1>>0]<<8);
       $$sink4 = $255;
      }
     } else {
      label = 45;
     }
     if ((label|0) == 45) {
      $256 = $0;
      $257 = ((($256)) + 149|0);
      $258 = HEAPU8[$257>>0]|(HEAPU8[$257+1>>0]<<8);
      $$sink4 = $258;
     }
     $259 = $$sink4&65535;
     $260 = $259&65535;
     $261 = $result;
     FUNCTION_TABLE_viiiiiiii[$197 & 127]($198,$201,$205,$208,$262,$242,$260,$261);
    }
    $263 = $result;
    $264 = ($263|0)==(2);
    if (!($264)) {
     break;
    }
    $265 = $0;
    $266 = ((($265)) + 135|0);
    HEAP8[$266>>0]=0&255;HEAP8[$266+1>>0]=(0>>8)&255;HEAP8[$266+2>>0]=(0>>16)&255;HEAP8[$266+3>>0]=0>>24;
    $267 = $0;
    $268 = ((($267)) + 139|0);
    HEAP8[$268>>0]=0&255;HEAP8[$268+1>>0]=(0>>8)&255;HEAP8[$268+2>>0]=(0>>16)&255;HEAP8[$268+3>>0]=0>>24;
    $269 = $0;
    $270 = ((($269)) + 134|0);
    $271 = HEAP8[$270>>0]|0;
    $272 = $271 & -2;
    HEAP8[$270>>0] = $272;
    break;
   }
   else if ((label|0) == 50) {
    $286 = $0;
    $287 = $context;
    $288 = ((($287)) + 164|0);
    $289 = HEAPU8[$288>>0]|(HEAPU8[$288+1>>0]<<8)|(HEAPU8[$288+2>>0]<<16)|(HEAPU8[$288+3>>0]<<24);
    $290 = $context;
    $291 = ((($290)) + 168|0);
    $292 = HEAPU8[$291>>0]|(HEAPU8[$291+1>>0]<<8);
    $293 = $context;
    $294 = ((($293)) + 170|0);
    $295 = HEAPU8[$294>>0]|(HEAPU8[$294+1>>0]<<8);
    $296 = (__parse_char($286,0,1,$289,$292,$295)|0);
    $result = $296;
    break;
   }
  } else {
   $result = 3;
  }
 } while(0);
 $297 = $2;
 $298 = ($297<<24>>24)!=(0);
 if (!($298)) {
  $300 = $result;
  STACKTOP = sp;return ($300|0);
 }
 $299 = $context;
 __end_of_file($299);
 $300 = $result;
 STACKTOP = sp;return ($300|0);
}
function _mb_get_error_desc($err) {
 $err = $err|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $err;
 $2 = $1;
 $3 = ($2>>>0)<(69);
 if ($3) {
  $4 = $1;
  $5 = (316 + ($4<<2)|0);
  $6 = HEAP32[$5>>2]|0;
  $0 = $6;
 } else {
  $0 = 4552;
 }
 $7 = $0;
 STACKTOP = sp;return ($7|0);
}
function _mb_load_file($s,$f) {
 $s = $s|0;
 $f = $f|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $buf = 0, $context = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $f;
 $result = 0;
 $buf = 0;
 $context = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 do {
  if ($3) {
   $4 = $0;
   $5 = ((($4)) + 71|0);
   $6 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
   $7 = (__reset_parsing_context($6)|0);
   $context = $7;
   $8 = $0;
   $9 = ((($8)) + 71|0);
   HEAP8[$9>>0]=$7&255;HEAP8[$9+1>>0]=($7>>8)&255;HEAP8[$9+2>>0]=($7>>16)&255;HEAP8[$9+3>>0]=$7>>24;
   $10 = $0;
   $11 = $1;
   $12 = (__load_file127($10,$11,0,0)|0);
   $buf = $12;
   $13 = $buf;
   $14 = ($13|0)!=(0|0);
   $15 = $0;
   if (!($14)) {
    (__set_current_error($15,4,0)|0);
    $result = 3;
    break;
   }
   $16 = $buf;
   $17 = (_mb_load_string($15,$16,1)|0);
   $result = $17;
   $18 = $buf;
   $19 = ($18|0)!=(0|0);
   if ($19) {
    $20 = $buf;
    _mb_free($20);
    $buf = 0;
    break;
   } else {
    ___assert_fail((4369|0),(4322|0),14428,(4566|0));
    // unreachable;
   }
  } else {
   $result = 3;
  }
 } while(0);
 $21 = $context;
 $22 = ($21|0)!=(0|0);
 if (!($22)) {
  $25 = $result;
  STACKTOP = sp;return ($25|0);
 }
 $23 = $context;
 $24 = ((($23)) + 150|0);
 HEAP8[$24>>0]=0&255;HEAP8[$24+1>>0]=(0>>8)&255;HEAP8[$24+2>>0]=(0>>16)&255;HEAP8[$24+3>>0]=0>>24;
 $25 = $result;
 STACKTOP = sp;return ($25|0);
}
function _mb_run($s,$clear_parser) {
 $s = $s|0;
 $clear_parser = $clear_parser|0;
 var $$sink = 0, $$sink1 = 0, $$sink10 = 0, $$sink2 = 0, $$sink3 = 0, $$sink4 = 0, $$sink5 = 0, $$sink6 = 0, $$sink7 = 0, $$sink9 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0;
 var $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0;
 var $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0;
 var $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0;
 var $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0;
 var $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0;
 var $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0;
 var $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0;
 var $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0;
 var $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0;
 var $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0;
 var $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0;
 var $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0;
 var $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0;
 var $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0;
 var $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0;
 var $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0;
 var $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0;
 var $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0;
 var $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0;
 var $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0;
 var $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0;
 var $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0;
 var $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0;
 var $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0;
 var $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0;
 var $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $ast = 0, $or$cond = 0, $p = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ast = sp + 4|0;
 $0 = $s;
 $1 = $clear_parser;
 $result = 0;
 HEAP32[$ast>>2] = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 L1: do {
  if ($3) {
   $4 = $0;
   $5 = ((($4)) + 79|0);
   $6 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
   $7 = (($6) + 1)|0;
   HEAP8[$5>>0]=$7&255;HEAP8[$5+1>>0]=($7>>8)&255;HEAP8[$5+2>>0]=($7>>16)&255;HEAP8[$5+3>>0]=$7>>24;
   $8 = $0;
   $9 = ((($8)) + 71|0);
   $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
   $11 = ($10|0)!=(0|0);
   if ($11) {
    $12 = $0;
    $13 = ((($12)) + 71|0);
    $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
    $15 = ((($14)) + 160|0);
    $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8);
    $17 = ($16<<16>>16)!=(0);
    $18 = $0;
    $19 = ((($18)) + 71|0);
    $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8)|(HEAPU8[$19+2>>0]<<16)|(HEAPU8[$19+3>>0]<<24);
    if ($17) {
     $21 = ((($20)) + 160|0);
     HEAP8[$21>>0]=0&255;HEAP8[$21+1>>0]=0>>8;
     $result = 3;
     $22 = $0;
     $23 = $0;
     $24 = ((($23)) + 67|0);
     $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
     (__set_current_error($22,27,$25)|0);
     $26 = $0;
     $27 = ((($26)) + 163|0);
     $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
     $29 = ($28|0)!=(0|0);
     if ($29) {
      $30 = $0;
      $31 = ((($30)) + 134|0);
      $32 = HEAP8[$31>>0]|0;
      $33 = $32 & 1;
      $34 = ($33<<24>>24)!=(0);
      if (!($34)) {
       $35 = $0;
       $36 = ((($35)) + 134|0);
       $37 = HEAP8[$36>>0]|0;
       $38 = $37 & -2;
       $39 = $38 | 1;
       HEAP8[$36>>0] = $39;
       $40 = $0;
       $41 = ((($40)) + 163|0);
       $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
       $43 = $0;
       $44 = $0;
       $45 = ((($44)) + 135|0);
       $46 = HEAPU8[$45>>0]|(HEAPU8[$45+1>>0]<<8)|(HEAPU8[$45+2>>0]<<16)|(HEAPU8[$45+3>>0]<<24);
       $47 = $0;
       $48 = ((($47)) + 135|0);
       $49 = HEAPU8[$48>>0]|(HEAPU8[$48+1>>0]<<8)|(HEAPU8[$48+2>>0]<<16)|(HEAPU8[$48+3>>0]<<24);
       $50 = (_mb_get_error_desc($49)|0);
       $51 = $0;
       $52 = ((($51)) + 139|0);
       $53 = HEAPU8[$52>>0]|(HEAPU8[$52+1>>0]<<8)|(HEAPU8[$52+2>>0]<<16)|(HEAPU8[$52+3>>0]<<24);
       $54 = $0;
       $55 = ((($54)) + 71|0);
       $56 = HEAPU8[$55>>0]|(HEAPU8[$55+1>>0]<<8)|(HEAPU8[$55+2>>0]<<16)|(HEAPU8[$55+3>>0]<<24);
       $57 = ($56|0)!=(0|0);
       if ($57) {
        $58 = $0;
        $59 = ((($58)) + 79|0);
        $60 = HEAPU8[$59>>0]|(HEAPU8[$59+1>>0]<<8)|(HEAPU8[$59+2>>0]<<16)|(HEAPU8[$59+3>>0]<<24);
        $61 = ($60|0)!=(0);
        if ($61) {
         label = 10;
        } else {
         $62 = $0;
         $63 = ((($62)) + 71|0);
         $64 = HEAPU8[$63>>0]|(HEAPU8[$63+1>>0]<<8)|(HEAPU8[$63+2>>0]<<16)|(HEAPU8[$63+3>>0]<<24);
         $65 = ((($64)) + 164|0);
         $66 = HEAPU8[$65>>0]|(HEAPU8[$65+1>>0]<<8)|(HEAPU8[$65+2>>0]<<16)|(HEAPU8[$65+3>>0]<<24);
         $107 = $66;
        }
       } else {
        label = 10;
       }
       if ((label|0) == 10) {
        $67 = $0;
        $68 = ((($67)) + 143|0);
        $69 = HEAPU8[$68>>0]|(HEAPU8[$68+1>>0]<<8)|(HEAPU8[$68+2>>0]<<16)|(HEAPU8[$68+3>>0]<<24);
        $107 = $69;
       }
       $70 = $0;
       $71 = ((($70)) + 71|0);
       $72 = HEAPU8[$71>>0]|(HEAPU8[$71+1>>0]<<8)|(HEAPU8[$71+2>>0]<<16)|(HEAPU8[$71+3>>0]<<24);
       $73 = ($72|0)!=(0|0);
       if ($73) {
        $74 = $0;
        $75 = ((($74)) + 79|0);
        $76 = HEAPU8[$75>>0]|(HEAPU8[$75+1>>0]<<8)|(HEAPU8[$75+2>>0]<<16)|(HEAPU8[$75+3>>0]<<24);
        $77 = ($76|0)!=(0);
        if ($77) {
         label = 14;
        } else {
         $78 = $0;
         $79 = ((($78)) + 71|0);
         $80 = HEAPU8[$79>>0]|(HEAPU8[$79+1>>0]<<8)|(HEAPU8[$79+2>>0]<<16)|(HEAPU8[$79+3>>0]<<24);
         $81 = ((($80)) + 168|0);
         $82 = HEAPU8[$81>>0]|(HEAPU8[$81+1>>0]<<8);
         $$sink = $82;
        }
       } else {
        label = 14;
       }
       if ((label|0) == 14) {
        $83 = $0;
        $84 = ((($83)) + 147|0);
        $85 = HEAPU8[$84>>0]|(HEAPU8[$84+1>>0]<<8);
        $$sink = $85;
       }
       $86 = $$sink&65535;
       $87 = $86&65535;
       $88 = $0;
       $89 = ((($88)) + 71|0);
       $90 = HEAPU8[$89>>0]|(HEAPU8[$89+1>>0]<<8)|(HEAPU8[$89+2>>0]<<16)|(HEAPU8[$89+3>>0]<<24);
       $91 = ($90|0)!=(0|0);
       if ($91) {
        $92 = $0;
        $93 = ((($92)) + 79|0);
        $94 = HEAPU8[$93>>0]|(HEAPU8[$93+1>>0]<<8)|(HEAPU8[$93+2>>0]<<16)|(HEAPU8[$93+3>>0]<<24);
        $95 = ($94|0)!=(0);
        if ($95) {
         label = 18;
        } else {
         $96 = $0;
         $97 = ((($96)) + 71|0);
         $98 = HEAPU8[$97>>0]|(HEAPU8[$97+1>>0]<<8)|(HEAPU8[$97+2>>0]<<16)|(HEAPU8[$97+3>>0]<<24);
         $99 = ((($98)) + 170|0);
         $100 = HEAPU8[$99>>0]|(HEAPU8[$99+1>>0]<<8);
         $$sink1 = $100;
        }
       } else {
        label = 18;
       }
       if ((label|0) == 18) {
        $101 = $0;
        $102 = ((($101)) + 149|0);
        $103 = HEAPU8[$102>>0]|(HEAPU8[$102+1>>0]<<8);
        $$sink1 = $103;
       }
       $104 = $$sink1&65535;
       $105 = $104&65535;
       $106 = $result;
       FUNCTION_TABLE_viiiiiiii[$42 & 127]($43,$46,$50,$53,$107,$87,$105,$106);
       label = 20;
      }
     } else {
      label = 20;
     }
     if ((label|0) == 20) {
      $108 = $result;
      $109 = ($108|0)==(2);
      if ($109) {
       $110 = $0;
       $111 = ((($110)) + 135|0);
       HEAP8[$111>>0]=0&255;HEAP8[$111+1>>0]=(0>>8)&255;HEAP8[$111+2>>0]=(0>>16)&255;HEAP8[$111+3>>0]=0>>24;
       $112 = $0;
       $113 = ((($112)) + 139|0);
       HEAP8[$113>>0]=0&255;HEAP8[$113+1>>0]=(0>>8)&255;HEAP8[$113+2>>0]=(0>>16)&255;HEAP8[$113+3>>0]=0>>24;
       $114 = $0;
       $115 = ((($114)) + 134|0);
       $116 = HEAP8[$115>>0]|0;
       $117 = $116 & -2;
       HEAP8[$115>>0] = $117;
      }
     }
     $118 = $0;
     __tidy_scope_chain($118);
     break;
    }
    $119 = ((($20)) + 158|0);
    $120 = HEAPU8[$119>>0]|(HEAPU8[$119+1>>0]<<8);
    $121 = $120&65535;
    $122 = ($121|0)!=(0);
    if ($122) {
     $123 = $0;
     $124 = ((($123)) + 71|0);
     $125 = HEAPU8[$124>>0]|(HEAPU8[$124+1>>0]<<8)|(HEAPU8[$124+2>>0]<<16)|(HEAPU8[$124+3>>0]<<24);
     $126 = ((($125)) + 158|0);
     HEAP8[$126>>0]=0&255;HEAP8[$126+1>>0]=0>>8;
     $result = 3;
     $127 = $0;
     $128 = $0;
     $129 = ((($128)) + 67|0);
     $130 = HEAPU8[$129>>0]|(HEAPU8[$129+1>>0]<<8)|(HEAPU8[$129+2>>0]<<16)|(HEAPU8[$129+3>>0]<<24);
     (__set_current_error($127,27,$130)|0);
     $131 = $0;
     $132 = ((($131)) + 163|0);
     $133 = HEAPU8[$132>>0]|(HEAPU8[$132+1>>0]<<8)|(HEAPU8[$132+2>>0]<<16)|(HEAPU8[$132+3>>0]<<24);
     $134 = ($133|0)!=(0|0);
     if ($134) {
      $135 = $0;
      $136 = ((($135)) + 134|0);
      $137 = HEAP8[$136>>0]|0;
      $138 = $137 & 1;
      $139 = ($138<<24>>24)!=(0);
      if (!($139)) {
       $140 = $0;
       $141 = ((($140)) + 134|0);
       $142 = HEAP8[$141>>0]|0;
       $143 = $142 & -2;
       $144 = $143 | 1;
       HEAP8[$141>>0] = $144;
       $145 = $0;
       $146 = ((($145)) + 163|0);
       $147 = HEAPU8[$146>>0]|(HEAPU8[$146+1>>0]<<8)|(HEAPU8[$146+2>>0]<<16)|(HEAPU8[$146+3>>0]<<24);
       $148 = $0;
       $149 = $0;
       $150 = ((($149)) + 135|0);
       $151 = HEAPU8[$150>>0]|(HEAPU8[$150+1>>0]<<8)|(HEAPU8[$150+2>>0]<<16)|(HEAPU8[$150+3>>0]<<24);
       $152 = $0;
       $153 = ((($152)) + 135|0);
       $154 = HEAPU8[$153>>0]|(HEAPU8[$153+1>>0]<<8)|(HEAPU8[$153+2>>0]<<16)|(HEAPU8[$153+3>>0]<<24);
       $155 = (_mb_get_error_desc($154)|0);
       $156 = $0;
       $157 = ((($156)) + 139|0);
       $158 = HEAPU8[$157>>0]|(HEAPU8[$157+1>>0]<<8)|(HEAPU8[$157+2>>0]<<16)|(HEAPU8[$157+3>>0]<<24);
       $159 = $0;
       $160 = ((($159)) + 71|0);
       $161 = HEAPU8[$160>>0]|(HEAPU8[$160+1>>0]<<8)|(HEAPU8[$160+2>>0]<<16)|(HEAPU8[$160+3>>0]<<24);
       $162 = ($161|0)!=(0|0);
       if ($162) {
        $163 = $0;
        $164 = ((($163)) + 79|0);
        $165 = HEAPU8[$164>>0]|(HEAPU8[$164+1>>0]<<8)|(HEAPU8[$164+2>>0]<<16)|(HEAPU8[$164+3>>0]<<24);
        $166 = ($165|0)!=(0);
        if ($166) {
         label = 29;
        } else {
         $167 = $0;
         $168 = ((($167)) + 71|0);
         $169 = HEAPU8[$168>>0]|(HEAPU8[$168+1>>0]<<8)|(HEAPU8[$168+2>>0]<<16)|(HEAPU8[$168+3>>0]<<24);
         $170 = ((($169)) + 164|0);
         $171 = HEAPU8[$170>>0]|(HEAPU8[$170+1>>0]<<8)|(HEAPU8[$170+2>>0]<<16)|(HEAPU8[$170+3>>0]<<24);
         $212 = $171;
        }
       } else {
        label = 29;
       }
       if ((label|0) == 29) {
        $172 = $0;
        $173 = ((($172)) + 143|0);
        $174 = HEAPU8[$173>>0]|(HEAPU8[$173+1>>0]<<8)|(HEAPU8[$173+2>>0]<<16)|(HEAPU8[$173+3>>0]<<24);
        $212 = $174;
       }
       $175 = $0;
       $176 = ((($175)) + 71|0);
       $177 = HEAPU8[$176>>0]|(HEAPU8[$176+1>>0]<<8)|(HEAPU8[$176+2>>0]<<16)|(HEAPU8[$176+3>>0]<<24);
       $178 = ($177|0)!=(0|0);
       if ($178) {
        $179 = $0;
        $180 = ((($179)) + 79|0);
        $181 = HEAPU8[$180>>0]|(HEAPU8[$180+1>>0]<<8)|(HEAPU8[$180+2>>0]<<16)|(HEAPU8[$180+3>>0]<<24);
        $182 = ($181|0)!=(0);
        if ($182) {
         label = 33;
        } else {
         $183 = $0;
         $184 = ((($183)) + 71|0);
         $185 = HEAPU8[$184>>0]|(HEAPU8[$184+1>>0]<<8)|(HEAPU8[$184+2>>0]<<16)|(HEAPU8[$184+3>>0]<<24);
         $186 = ((($185)) + 168|0);
         $187 = HEAPU8[$186>>0]|(HEAPU8[$186+1>>0]<<8);
         $$sink2 = $187;
        }
       } else {
        label = 33;
       }
       if ((label|0) == 33) {
        $188 = $0;
        $189 = ((($188)) + 147|0);
        $190 = HEAPU8[$189>>0]|(HEAPU8[$189+1>>0]<<8);
        $$sink2 = $190;
       }
       $191 = $$sink2&65535;
       $192 = $191&65535;
       $193 = $0;
       $194 = ((($193)) + 71|0);
       $195 = HEAPU8[$194>>0]|(HEAPU8[$194+1>>0]<<8)|(HEAPU8[$194+2>>0]<<16)|(HEAPU8[$194+3>>0]<<24);
       $196 = ($195|0)!=(0|0);
       if ($196) {
        $197 = $0;
        $198 = ((($197)) + 79|0);
        $199 = HEAPU8[$198>>0]|(HEAPU8[$198+1>>0]<<8)|(HEAPU8[$198+2>>0]<<16)|(HEAPU8[$198+3>>0]<<24);
        $200 = ($199|0)!=(0);
        if ($200) {
         label = 37;
        } else {
         $201 = $0;
         $202 = ((($201)) + 71|0);
         $203 = HEAPU8[$202>>0]|(HEAPU8[$202+1>>0]<<8)|(HEAPU8[$202+2>>0]<<16)|(HEAPU8[$202+3>>0]<<24);
         $204 = ((($203)) + 170|0);
         $205 = HEAPU8[$204>>0]|(HEAPU8[$204+1>>0]<<8);
         $$sink3 = $205;
        }
       } else {
        label = 37;
       }
       if ((label|0) == 37) {
        $206 = $0;
        $207 = ((($206)) + 149|0);
        $208 = HEAPU8[$207>>0]|(HEAPU8[$207+1>>0]<<8);
        $$sink3 = $208;
       }
       $209 = $$sink3&65535;
       $210 = $209&65535;
       $211 = $result;
       FUNCTION_TABLE_viiiiiiii[$147 & 127]($148,$151,$155,$158,$212,$192,$210,$211);
       label = 39;
      }
     } else {
      label = 39;
     }
     if ((label|0) == 39) {
      $213 = $result;
      $214 = ($213|0)==(2);
      if ($214) {
       $215 = $0;
       $216 = ((($215)) + 135|0);
       HEAP8[$216>>0]=0&255;HEAP8[$216+1>>0]=(0>>8)&255;HEAP8[$216+2>>0]=(0>>16)&255;HEAP8[$216+3>>0]=0>>24;
       $217 = $0;
       $218 = ((($217)) + 139|0);
       HEAP8[$218>>0]=0&255;HEAP8[$218+1>>0]=(0>>8)&255;HEAP8[$218+2>>0]=(0>>16)&255;HEAP8[$218+3>>0]=0>>24;
       $219 = $0;
       $220 = ((($219)) + 134|0);
       $221 = HEAP8[$220>>0]|0;
       $222 = $221 & -2;
       HEAP8[$220>>0] = $222;
      }
     }
     $223 = $0;
     __tidy_scope_chain($223);
     break;
    }
   }
   $224 = $1;
   $225 = ($224<<24>>24)!=(0);
   if ($225) {
    $226 = $0;
    $227 = ((($226)) + 71|0);
    __destroy_parsing_context($227);
   }
   $228 = $0;
   $229 = ((($228)) + 134|0);
   $230 = HEAP8[$229>>0]|0;
   $231 = $230 & -2;
   HEAP8[$229>>0] = $231;
   $232 = $0;
   $233 = ((($232)) + 106|0);
   $234 = HEAPU8[$233>>0]|(HEAPU8[$233+1>>0]<<8)|(HEAPU8[$233+2>>0]<<16)|(HEAPU8[$233+3>>0]<<24);
   $235 = ($234|0)!=(0|0);
   $236 = $0;
   if ($235) {
    $237 = ((($236)) + 106|0);
    $238 = HEAPU8[$237>>0]|(HEAPU8[$237+1>>0]<<8)|(HEAPU8[$237+2>>0]<<16)|(HEAPU8[$237+3>>0]<<24);
    HEAP32[$ast>>2] = $238;
    $239 = HEAP32[$ast>>2]|0;
    $240 = ((($239)) + 8|0);
    $241 = HEAPU8[$240>>0]|(HEAPU8[$240+1>>0]<<8)|(HEAPU8[$240+2>>0]<<16)|(HEAPU8[$240+3>>0]<<24);
    HEAP32[$ast>>2] = $241;
    $242 = $0;
    $243 = ((($242)) + 106|0);
    HEAP8[$243>>0]=0&255;HEAP8[$243+1>>0]=(0>>8)&255;HEAP8[$243+2>>0]=(0>>16)&255;HEAP8[$243+3>>0]=0>>24;
   } else {
    $244 = ((($236)) + 67|0);
    HEAP8[$244>>0]=0&255;HEAP8[$244+1>>0]=(0>>8)&255;HEAP8[$244+2>>0]=(0>>16)&255;HEAP8[$244+3>>0]=0>>24;
    $245 = $0;
    $246 = ((($245)) + 93|0);
    HEAP8[$246>>0]=0&255;HEAP8[$246+1>>0]=(0>>8)&255;HEAP8[$246+2>>0]=(0>>16)&255;HEAP8[$246+3>>0]=0>>24;
    $247 = $0;
    $248 = ((($247)) + 97|0);
    $249 = HEAP8[$248>>0]|0;
    $250 = $249 & -2;
    HEAP8[$248>>0] = $250;
    $251 = $0;
    $252 = ((($251)) + 98|0);
    HEAP8[$252>>0]=0&255;HEAP8[$252+1>>0]=(0>>8)&255;HEAP8[$252+2>>0]=(0>>16)&255;HEAP8[$252+3>>0]=0>>24;
    $253 = $0;
    $254 = ((($253)) + 135|0);
    HEAP8[$254>>0]=0&255;HEAP8[$254+1>>0]=(0>>8)&255;HEAP8[$254+2>>0]=(0>>16)&255;HEAP8[$254+3>>0]=0>>24;
    $255 = $0;
    $256 = ((($255)) + 139|0);
    HEAP8[$256>>0]=0&255;HEAP8[$256+1>>0]=(0>>8)&255;HEAP8[$256+2>>0]=(0>>16)&255;HEAP8[$256+3>>0]=0>>24;
    $257 = $0;
    $258 = ((($257)) + 130|0);
    $259 = HEAPU8[$258>>0]|(HEAPU8[$258+1>>0]<<8)|(HEAPU8[$258+2>>0]<<16)|(HEAPU8[$258+3>>0]<<24);
    __ls_clear($259);
    $260 = $0;
    $261 = ((($260)) + 114|0);
    $262 = HEAPU8[$261>>0]|(HEAPU8[$261+1>>0]<<8)|(HEAPU8[$261+2>>0]<<16)|(HEAPU8[$261+3>>0]<<24);
    $263 = ($262|0)!=(0);
    if ($263) {
     ___assert_fail((4579|0),(4322|0),14502,(4601|0));
     // unreachable;
    }
    while(1) {
     $264 = $0;
     $265 = ((($264)) + 75|0);
     $266 = HEAPU8[$265>>0]|(HEAPU8[$265+1>>0]<<8)|(HEAPU8[$265+2>>0]<<16)|(HEAPU8[$265+3>>0]<<24);
     $267 = HEAPU8[$266>>0]|(HEAPU8[$266+1>>0]<<8)|(HEAPU8[$266+2>>0]<<16)|(HEAPU8[$266+3>>0]<<24);
     $268 = ($267|0)!=(0|0);
     $269 = $0;
     if (!($268)) {
      break;
     }
     $270 = ((($269)) + 75|0);
     $271 = HEAPU8[$270>>0]|(HEAPU8[$270+1>>0]<<8)|(HEAPU8[$270+2>>0]<<16)|(HEAPU8[$270+3>>0]<<24);
     $272 = HEAPU8[$271>>0]|(HEAPU8[$271+1>>0]<<8)|(HEAPU8[$271+2>>0]<<16)|(HEAPU8[$271+3>>0]<<24);
     $273 = $0;
     $274 = ((($273)) + 75|0);
     HEAP8[$274>>0]=$272&255;HEAP8[$274+1>>0]=($272>>8)&255;HEAP8[$274+2>>0]=($272>>16)&255;HEAP8[$274+3>>0]=$272>>24;
    }
    $275 = ((($269)) + 17|0);
    $276 = HEAPU8[$275>>0]|(HEAPU8[$275+1>>0]<<8)|(HEAPU8[$275+2>>0]<<16)|(HEAPU8[$275+3>>0]<<24);
    HEAP32[$ast>>2] = $276;
    $277 = HEAP32[$ast>>2]|0;
    $278 = ((($277)) + 8|0);
    $279 = HEAPU8[$278>>0]|(HEAPU8[$278+1>>0]<<8)|(HEAPU8[$278+2>>0]<<16)|(HEAPU8[$278+3>>0]<<24);
    HEAP32[$ast>>2] = $279;
    $280 = HEAP32[$ast>>2]|0;
    $281 = ($280|0)!=(0|0);
    if (!($281)) {
     $result = 3;
     $282 = $0;
     __set_error_pos($282,0,0,0);
     $283 = $0;
     $284 = $0;
     $285 = ((($284)) + 67|0);
     $286 = HEAPU8[$285>>0]|(HEAPU8[$285+1>>0]<<8)|(HEAPU8[$285+2>>0]<<16)|(HEAPU8[$285+3>>0]<<24);
     (__set_current_error($283,9,$286)|0);
     $287 = $0;
     $288 = ((($287)) + 163|0);
     $289 = HEAPU8[$288>>0]|(HEAPU8[$288+1>>0]<<8)|(HEAPU8[$288+2>>0]<<16)|(HEAPU8[$288+3>>0]<<24);
     $290 = ($289|0)!=(0|0);
     if ($290) {
      $291 = $0;
      $292 = ((($291)) + 134|0);
      $293 = HEAP8[$292>>0]|0;
      $294 = $293 & 1;
      $295 = ($294<<24>>24)!=(0);
      if ($295) {
       break;
      }
      $296 = $0;
      $297 = ((($296)) + 134|0);
      $298 = HEAP8[$297>>0]|0;
      $299 = $298 & -2;
      $300 = $299 | 1;
      HEAP8[$297>>0] = $300;
      $301 = $0;
      $302 = ((($301)) + 163|0);
      $303 = HEAPU8[$302>>0]|(HEAPU8[$302+1>>0]<<8)|(HEAPU8[$302+2>>0]<<16)|(HEAPU8[$302+3>>0]<<24);
      $304 = $0;
      $305 = $0;
      $306 = ((($305)) + 135|0);
      $307 = HEAPU8[$306>>0]|(HEAPU8[$306+1>>0]<<8)|(HEAPU8[$306+2>>0]<<16)|(HEAPU8[$306+3>>0]<<24);
      $308 = $0;
      $309 = ((($308)) + 135|0);
      $310 = HEAPU8[$309>>0]|(HEAPU8[$309+1>>0]<<8)|(HEAPU8[$309+2>>0]<<16)|(HEAPU8[$309+3>>0]<<24);
      $311 = (_mb_get_error_desc($310)|0);
      $312 = $0;
      $313 = ((($312)) + 139|0);
      $314 = HEAPU8[$313>>0]|(HEAPU8[$313+1>>0]<<8)|(HEAPU8[$313+2>>0]<<16)|(HEAPU8[$313+3>>0]<<24);
      $315 = $0;
      $316 = ((($315)) + 71|0);
      $317 = HEAPU8[$316>>0]|(HEAPU8[$316+1>>0]<<8)|(HEAPU8[$316+2>>0]<<16)|(HEAPU8[$316+3>>0]<<24);
      $318 = ($317|0)!=(0|0);
      if ($318) {
       $319 = $0;
       $320 = ((($319)) + 79|0);
       $321 = HEAPU8[$320>>0]|(HEAPU8[$320+1>>0]<<8)|(HEAPU8[$320+2>>0]<<16)|(HEAPU8[$320+3>>0]<<24);
       $322 = ($321|0)!=(0);
       if ($322) {
        label = 57;
       } else {
        $323 = $0;
        $324 = ((($323)) + 71|0);
        $325 = HEAPU8[$324>>0]|(HEAPU8[$324+1>>0]<<8)|(HEAPU8[$324+2>>0]<<16)|(HEAPU8[$324+3>>0]<<24);
        $326 = ((($325)) + 164|0);
        $327 = HEAPU8[$326>>0]|(HEAPU8[$326+1>>0]<<8)|(HEAPU8[$326+2>>0]<<16)|(HEAPU8[$326+3>>0]<<24);
        $368 = $327;
       }
      } else {
       label = 57;
      }
      if ((label|0) == 57) {
       $328 = $0;
       $329 = ((($328)) + 143|0);
       $330 = HEAPU8[$329>>0]|(HEAPU8[$329+1>>0]<<8)|(HEAPU8[$329+2>>0]<<16)|(HEAPU8[$329+3>>0]<<24);
       $368 = $330;
      }
      $331 = $0;
      $332 = ((($331)) + 71|0);
      $333 = HEAPU8[$332>>0]|(HEAPU8[$332+1>>0]<<8)|(HEAPU8[$332+2>>0]<<16)|(HEAPU8[$332+3>>0]<<24);
      $334 = ($333|0)!=(0|0);
      if ($334) {
       $335 = $0;
       $336 = ((($335)) + 79|0);
       $337 = HEAPU8[$336>>0]|(HEAPU8[$336+1>>0]<<8)|(HEAPU8[$336+2>>0]<<16)|(HEAPU8[$336+3>>0]<<24);
       $338 = ($337|0)!=(0);
       if ($338) {
        label = 61;
       } else {
        $339 = $0;
        $340 = ((($339)) + 71|0);
        $341 = HEAPU8[$340>>0]|(HEAPU8[$340+1>>0]<<8)|(HEAPU8[$340+2>>0]<<16)|(HEAPU8[$340+3>>0]<<24);
        $342 = ((($341)) + 168|0);
        $343 = HEAPU8[$342>>0]|(HEAPU8[$342+1>>0]<<8);
        $$sink4 = $343;
       }
      } else {
       label = 61;
      }
      if ((label|0) == 61) {
       $344 = $0;
       $345 = ((($344)) + 147|0);
       $346 = HEAPU8[$345>>0]|(HEAPU8[$345+1>>0]<<8);
       $$sink4 = $346;
      }
      $347 = $$sink4&65535;
      $348 = $347&65535;
      $349 = $0;
      $350 = ((($349)) + 71|0);
      $351 = HEAPU8[$350>>0]|(HEAPU8[$350+1>>0]<<8)|(HEAPU8[$350+2>>0]<<16)|(HEAPU8[$350+3>>0]<<24);
      $352 = ($351|0)!=(0|0);
      if ($352) {
       $353 = $0;
       $354 = ((($353)) + 79|0);
       $355 = HEAPU8[$354>>0]|(HEAPU8[$354+1>>0]<<8)|(HEAPU8[$354+2>>0]<<16)|(HEAPU8[$354+3>>0]<<24);
       $356 = ($355|0)!=(0);
       if ($356) {
        label = 65;
       } else {
        $357 = $0;
        $358 = ((($357)) + 71|0);
        $359 = HEAPU8[$358>>0]|(HEAPU8[$358+1>>0]<<8)|(HEAPU8[$358+2>>0]<<16)|(HEAPU8[$358+3>>0]<<24);
        $360 = ((($359)) + 170|0);
        $361 = HEAPU8[$360>>0]|(HEAPU8[$360+1>>0]<<8);
        $$sink5 = $361;
       }
      } else {
       label = 65;
      }
      if ((label|0) == 65) {
       $362 = $0;
       $363 = ((($362)) + 149|0);
       $364 = HEAPU8[$363>>0]|(HEAPU8[$363+1>>0]<<8);
       $$sink5 = $364;
      }
      $365 = $$sink5&65535;
      $366 = $365&65535;
      $367 = $result;
      FUNCTION_TABLE_viiiiiiii[$303 & 127]($304,$307,$311,$314,$368,$348,$366,$367);
     }
     $369 = $result;
     $370 = ($369|0)==(2);
     if (!($370)) {
      break;
     }
     $371 = $0;
     $372 = ((($371)) + 135|0);
     HEAP8[$372>>0]=0&255;HEAP8[$372+1>>0]=(0>>8)&255;HEAP8[$372+2>>0]=(0>>16)&255;HEAP8[$372+3>>0]=0>>24;
     $373 = $0;
     $374 = ((($373)) + 139|0);
     HEAP8[$374>>0]=0&255;HEAP8[$374+1>>0]=(0>>8)&255;HEAP8[$374+2>>0]=(0>>16)&255;HEAP8[$374+3>>0]=0>>24;
     $375 = $0;
     $376 = ((($375)) + 134|0);
     $377 = HEAP8[$376>>0]|0;
     $378 = $377 & -2;
     HEAP8[$376>>0] = $378;
     break;
    }
   }
   while(1) {
    $379 = HEAP32[$ast>>2]|0;
    $p = $379;
    $380 = $0;
    $381 = (__execute_statement($380,$ast,1)|0);
    $result = $381;
    $382 = HEAP32[$ast>>2]|0;
    $383 = $p;
    $384 = ($382|0)==($383|0);
    if ($384) {
     label = 70;
     break;
    }
    $481 = $result;
    $482 = ($481|0)!=(0);
    $483 = $result;
    $484 = ($483|0)!=(103);
    $or$cond = $482 & $484;
    if ($or$cond) {
     break;
    }
    $590 = HEAP32[$ast>>2]|0;
    $591 = ($590|0)!=(0|0);
    if (!($591)) {
     break L1;
    }
   }
   if ((label|0) == 70) {
    $385 = $0;
    $386 = $0;
    $387 = ((($386)) + 139|0);
    $388 = HEAPU8[$387>>0]|(HEAPU8[$387+1>>0]<<8)|(HEAPU8[$387+2>>0]<<16)|(HEAPU8[$387+3>>0]<<24);
    (__set_current_error($385,48,$388)|0);
    $389 = $0;
    $390 = ((($389)) + 163|0);
    $391 = HEAPU8[$390>>0]|(HEAPU8[$390+1>>0]<<8)|(HEAPU8[$390+2>>0]<<16)|(HEAPU8[$390+3>>0]<<24);
    $392 = ($391|0)!=(0|0);
    if ($392) {
     $393 = $0;
     $394 = ((($393)) + 134|0);
     $395 = HEAP8[$394>>0]|0;
     $396 = $395 & 1;
     $397 = ($396<<24>>24)!=(0);
     if ($397) {
      break;
     }
     $398 = $0;
     $399 = ((($398)) + 134|0);
     $400 = HEAP8[$399>>0]|0;
     $401 = $400 & -2;
     $402 = $401 | 1;
     HEAP8[$399>>0] = $402;
     $403 = $0;
     $404 = ((($403)) + 163|0);
     $405 = HEAPU8[$404>>0]|(HEAPU8[$404+1>>0]<<8)|(HEAPU8[$404+2>>0]<<16)|(HEAPU8[$404+3>>0]<<24);
     $406 = $0;
     $407 = $0;
     $408 = ((($407)) + 135|0);
     $409 = HEAPU8[$408>>0]|(HEAPU8[$408+1>>0]<<8)|(HEAPU8[$408+2>>0]<<16)|(HEAPU8[$408+3>>0]<<24);
     $410 = $0;
     $411 = ((($410)) + 135|0);
     $412 = HEAPU8[$411>>0]|(HEAPU8[$411+1>>0]<<8)|(HEAPU8[$411+2>>0]<<16)|(HEAPU8[$411+3>>0]<<24);
     $413 = (_mb_get_error_desc($412)|0);
     $414 = $0;
     $415 = ((($414)) + 139|0);
     $416 = HEAPU8[$415>>0]|(HEAPU8[$415+1>>0]<<8)|(HEAPU8[$415+2>>0]<<16)|(HEAPU8[$415+3>>0]<<24);
     $417 = $0;
     $418 = ((($417)) + 71|0);
     $419 = HEAPU8[$418>>0]|(HEAPU8[$418+1>>0]<<8)|(HEAPU8[$418+2>>0]<<16)|(HEAPU8[$418+3>>0]<<24);
     $420 = ($419|0)!=(0|0);
     if ($420) {
      $421 = $0;
      $422 = ((($421)) + 79|0);
      $423 = HEAPU8[$422>>0]|(HEAPU8[$422+1>>0]<<8)|(HEAPU8[$422+2>>0]<<16)|(HEAPU8[$422+3>>0]<<24);
      $424 = ($423|0)!=(0);
      if ($424) {
       label = 75;
      } else {
       $425 = $0;
       $426 = ((($425)) + 71|0);
       $427 = HEAPU8[$426>>0]|(HEAPU8[$426+1>>0]<<8)|(HEAPU8[$426+2>>0]<<16)|(HEAPU8[$426+3>>0]<<24);
       $428 = ((($427)) + 164|0);
       $429 = HEAPU8[$428>>0]|(HEAPU8[$428+1>>0]<<8)|(HEAPU8[$428+2>>0]<<16)|(HEAPU8[$428+3>>0]<<24);
       $470 = $429;
      }
     } else {
      label = 75;
     }
     if ((label|0) == 75) {
      $430 = $0;
      $431 = ((($430)) + 143|0);
      $432 = HEAPU8[$431>>0]|(HEAPU8[$431+1>>0]<<8)|(HEAPU8[$431+2>>0]<<16)|(HEAPU8[$431+3>>0]<<24);
      $470 = $432;
     }
     $433 = $0;
     $434 = ((($433)) + 71|0);
     $435 = HEAPU8[$434>>0]|(HEAPU8[$434+1>>0]<<8)|(HEAPU8[$434+2>>0]<<16)|(HEAPU8[$434+3>>0]<<24);
     $436 = ($435|0)!=(0|0);
     if ($436) {
      $437 = $0;
      $438 = ((($437)) + 79|0);
      $439 = HEAPU8[$438>>0]|(HEAPU8[$438+1>>0]<<8)|(HEAPU8[$438+2>>0]<<16)|(HEAPU8[$438+3>>0]<<24);
      $440 = ($439|0)!=(0);
      if ($440) {
       label = 79;
      } else {
       $441 = $0;
       $442 = ((($441)) + 71|0);
       $443 = HEAPU8[$442>>0]|(HEAPU8[$442+1>>0]<<8)|(HEAPU8[$442+2>>0]<<16)|(HEAPU8[$442+3>>0]<<24);
       $444 = ((($443)) + 168|0);
       $445 = HEAPU8[$444>>0]|(HEAPU8[$444+1>>0]<<8);
       $$sink6 = $445;
      }
     } else {
      label = 79;
     }
     if ((label|0) == 79) {
      $446 = $0;
      $447 = ((($446)) + 147|0);
      $448 = HEAPU8[$447>>0]|(HEAPU8[$447+1>>0]<<8);
      $$sink6 = $448;
     }
     $449 = $$sink6&65535;
     $450 = $449&65535;
     $451 = $0;
     $452 = ((($451)) + 71|0);
     $453 = HEAPU8[$452>>0]|(HEAPU8[$452+1>>0]<<8)|(HEAPU8[$452+2>>0]<<16)|(HEAPU8[$452+3>>0]<<24);
     $454 = ($453|0)!=(0|0);
     if ($454) {
      $455 = $0;
      $456 = ((($455)) + 79|0);
      $457 = HEAPU8[$456>>0]|(HEAPU8[$456+1>>0]<<8)|(HEAPU8[$456+2>>0]<<16)|(HEAPU8[$456+3>>0]<<24);
      $458 = ($457|0)!=(0);
      if ($458) {
       label = 83;
      } else {
       $459 = $0;
       $460 = ((($459)) + 71|0);
       $461 = HEAPU8[$460>>0]|(HEAPU8[$460+1>>0]<<8)|(HEAPU8[$460+2>>0]<<16)|(HEAPU8[$460+3>>0]<<24);
       $462 = ((($461)) + 170|0);
       $463 = HEAPU8[$462>>0]|(HEAPU8[$462+1>>0]<<8);
       $$sink7 = $463;
      }
     } else {
      label = 83;
     }
     if ((label|0) == 83) {
      $464 = $0;
      $465 = ((($464)) + 149|0);
      $466 = HEAPU8[$465>>0]|(HEAPU8[$465+1>>0]<<8);
      $$sink7 = $466;
     }
     $467 = $$sink7&65535;
     $468 = $467&65535;
     $469 = $result;
     FUNCTION_TABLE_viiiiiiii[$405 & 127]($406,$409,$413,$416,$470,$450,$468,$469);
    }
    $471 = $result;
    $472 = ($471|0)==(2);
    if (!($472)) {
     break;
    }
    $473 = $0;
    $474 = ((($473)) + 135|0);
    HEAP8[$474>>0]=0&255;HEAP8[$474+1>>0]=(0>>8)&255;HEAP8[$474+2>>0]=(0>>16)&255;HEAP8[$474+3>>0]=0>>24;
    $475 = $0;
    $476 = ((($475)) + 139|0);
    HEAP8[$476>>0]=0&255;HEAP8[$476+1>>0]=(0>>8)&255;HEAP8[$476+2>>0]=(0>>16)&255;HEAP8[$476+3>>0]=0>>24;
    $477 = $0;
    $478 = ((($477)) + 134|0);
    $479 = HEAP8[$478>>0]|0;
    $480 = $479 & -2;
    HEAP8[$478>>0] = $480;
    break;
   }
   $485 = $result;
   $486 = ($485|0)!=(5);
   if ($486) {
    $487 = $result;
    $488 = ($487|0)>=(201);
    if ($488) {
     $489 = $0;
     $490 = ((($489)) + 135|0);
     HEAP8[$490>>0]=68&255;HEAP8[$490+1>>0]=(68>>8)&255;HEAP8[$490+2>>0]=(68>>16)&255;HEAP8[$490+3>>0]=68>>24;
    }
    $491 = $0;
    $492 = $0;
    $493 = ((($492)) + 135|0);
    $494 = HEAPU8[$493>>0]|(HEAPU8[$493+1>>0]<<8)|(HEAPU8[$493+2>>0]<<16)|(HEAPU8[$493+3>>0]<<24);
    $495 = $0;
    $496 = ((($495)) + 139|0);
    $497 = HEAPU8[$496>>0]|(HEAPU8[$496+1>>0]<<8)|(HEAPU8[$496+2>>0]<<16)|(HEAPU8[$496+3>>0]<<24);
    (__set_current_error($491,$494,$497)|0);
    $498 = $0;
    $499 = ((($498)) + 163|0);
    $500 = HEAPU8[$499>>0]|(HEAPU8[$499+1>>0]<<8)|(HEAPU8[$499+2>>0]<<16)|(HEAPU8[$499+3>>0]<<24);
    $501 = ($500|0)!=(0|0);
    if ($501) {
     $502 = $0;
     $503 = ((($502)) + 134|0);
     $504 = HEAP8[$503>>0]|0;
     $505 = $504 & 1;
     $506 = ($505<<24>>24)!=(0);
     if ($506) {
      break;
     }
     $507 = $0;
     $508 = ((($507)) + 134|0);
     $509 = HEAP8[$508>>0]|0;
     $510 = $509 & -2;
     $511 = $510 | 1;
     HEAP8[$508>>0] = $511;
     $512 = $0;
     $513 = ((($512)) + 163|0);
     $514 = HEAPU8[$513>>0]|(HEAPU8[$513+1>>0]<<8)|(HEAPU8[$513+2>>0]<<16)|(HEAPU8[$513+3>>0]<<24);
     $515 = $0;
     $516 = $0;
     $517 = ((($516)) + 135|0);
     $518 = HEAPU8[$517>>0]|(HEAPU8[$517+1>>0]<<8)|(HEAPU8[$517+2>>0]<<16)|(HEAPU8[$517+3>>0]<<24);
     $519 = $0;
     $520 = ((($519)) + 135|0);
     $521 = HEAPU8[$520>>0]|(HEAPU8[$520+1>>0]<<8)|(HEAPU8[$520+2>>0]<<16)|(HEAPU8[$520+3>>0]<<24);
     $522 = (_mb_get_error_desc($521)|0);
     $523 = $0;
     $524 = ((($523)) + 139|0);
     $525 = HEAPU8[$524>>0]|(HEAPU8[$524+1>>0]<<8)|(HEAPU8[$524+2>>0]<<16)|(HEAPU8[$524+3>>0]<<24);
     $526 = $0;
     $527 = ((($526)) + 71|0);
     $528 = HEAPU8[$527>>0]|(HEAPU8[$527+1>>0]<<8)|(HEAPU8[$527+2>>0]<<16)|(HEAPU8[$527+3>>0]<<24);
     $529 = ($528|0)!=(0|0);
     if ($529) {
      $530 = $0;
      $531 = ((($530)) + 79|0);
      $532 = HEAPU8[$531>>0]|(HEAPU8[$531+1>>0]<<8)|(HEAPU8[$531+2>>0]<<16)|(HEAPU8[$531+3>>0]<<24);
      $533 = ($532|0)!=(0);
      if ($533) {
       label = 96;
      } else {
       $534 = $0;
       $535 = ((($534)) + 71|0);
       $536 = HEAPU8[$535>>0]|(HEAPU8[$535+1>>0]<<8)|(HEAPU8[$535+2>>0]<<16)|(HEAPU8[$535+3>>0]<<24);
       $537 = ((($536)) + 164|0);
       $538 = HEAPU8[$537>>0]|(HEAPU8[$537+1>>0]<<8)|(HEAPU8[$537+2>>0]<<16)|(HEAPU8[$537+3>>0]<<24);
       $579 = $538;
      }
     } else {
      label = 96;
     }
     if ((label|0) == 96) {
      $539 = $0;
      $540 = ((($539)) + 143|0);
      $541 = HEAPU8[$540>>0]|(HEAPU8[$540+1>>0]<<8)|(HEAPU8[$540+2>>0]<<16)|(HEAPU8[$540+3>>0]<<24);
      $579 = $541;
     }
     $542 = $0;
     $543 = ((($542)) + 71|0);
     $544 = HEAPU8[$543>>0]|(HEAPU8[$543+1>>0]<<8)|(HEAPU8[$543+2>>0]<<16)|(HEAPU8[$543+3>>0]<<24);
     $545 = ($544|0)!=(0|0);
     if ($545) {
      $546 = $0;
      $547 = ((($546)) + 79|0);
      $548 = HEAPU8[$547>>0]|(HEAPU8[$547+1>>0]<<8)|(HEAPU8[$547+2>>0]<<16)|(HEAPU8[$547+3>>0]<<24);
      $549 = ($548|0)!=(0);
      if ($549) {
       label = 100;
      } else {
       $550 = $0;
       $551 = ((($550)) + 71|0);
       $552 = HEAPU8[$551>>0]|(HEAPU8[$551+1>>0]<<8)|(HEAPU8[$551+2>>0]<<16)|(HEAPU8[$551+3>>0]<<24);
       $553 = ((($552)) + 168|0);
       $554 = HEAPU8[$553>>0]|(HEAPU8[$553+1>>0]<<8);
       $$sink9 = $554;
      }
     } else {
      label = 100;
     }
     if ((label|0) == 100) {
      $555 = $0;
      $556 = ((($555)) + 147|0);
      $557 = HEAPU8[$556>>0]|(HEAPU8[$556+1>>0]<<8);
      $$sink9 = $557;
     }
     $558 = $$sink9&65535;
     $559 = $558&65535;
     $560 = $0;
     $561 = ((($560)) + 71|0);
     $562 = HEAPU8[$561>>0]|(HEAPU8[$561+1>>0]<<8)|(HEAPU8[$561+2>>0]<<16)|(HEAPU8[$561+3>>0]<<24);
     $563 = ($562|0)!=(0|0);
     if ($563) {
      $564 = $0;
      $565 = ((($564)) + 79|0);
      $566 = HEAPU8[$565>>0]|(HEAPU8[$565+1>>0]<<8)|(HEAPU8[$565+2>>0]<<16)|(HEAPU8[$565+3>>0]<<24);
      $567 = ($566|0)!=(0);
      if ($567) {
       label = 104;
      } else {
       $568 = $0;
       $569 = ((($568)) + 71|0);
       $570 = HEAPU8[$569>>0]|(HEAPU8[$569+1>>0]<<8)|(HEAPU8[$569+2>>0]<<16)|(HEAPU8[$569+3>>0]<<24);
       $571 = ((($570)) + 170|0);
       $572 = HEAPU8[$571>>0]|(HEAPU8[$571+1>>0]<<8);
       $$sink10 = $572;
      }
     } else {
      label = 104;
     }
     if ((label|0) == 104) {
      $573 = $0;
      $574 = ((($573)) + 149|0);
      $575 = HEAPU8[$574>>0]|(HEAPU8[$574+1>>0]<<8);
      $$sink10 = $575;
     }
     $576 = $$sink10&65535;
     $577 = $576&65535;
     $578 = $result;
     FUNCTION_TABLE_viiiiiiii[$514 & 127]($515,$518,$522,$525,$579,$559,$577,$578);
    }
    $580 = $result;
    $581 = ($580|0)==(2);
    if ($581) {
     $582 = $0;
     $583 = ((($582)) + 135|0);
     HEAP8[$583>>0]=0&255;HEAP8[$583+1>>0]=(0>>8)&255;HEAP8[$583+2>>0]=(0>>16)&255;HEAP8[$583+3>>0]=0>>24;
     $584 = $0;
     $585 = ((($584)) + 139|0);
     HEAP8[$585>>0]=0&255;HEAP8[$585+1>>0]=(0>>8)&255;HEAP8[$585+2>>0]=(0>>16)&255;HEAP8[$585+3>>0]=0>>24;
     $586 = $0;
     $587 = ((($586)) + 134|0);
     $588 = HEAP8[$587>>0]|0;
     $589 = $588 & -2;
     HEAP8[$587>>0] = $589;
    }
   }
  } else {
   $result = 3;
  }
 } while(0);
 $592 = $0;
 $593 = ($592|0)!=(0|0);
 if (!($593)) {
  $610 = $result;
  STACKTOP = sp;return ($610|0);
 }
 $594 = $0;
 $595 = ((($594)) + 106|0);
 $596 = HEAPU8[$595>>0]|(HEAPU8[$595+1>>0]<<8)|(HEAPU8[$595+2>>0]<<16)|(HEAPU8[$595+3>>0]<<24);
 $597 = ($596|0)!=(0|0);
 if (!($597)) {
  $598 = $0;
  $599 = ((($598)) + 67|0);
  HEAP8[$599>>0]=0&255;HEAP8[$599+1>>0]=(0>>8)&255;HEAP8[$599+2>>0]=(0>>16)&255;HEAP8[$599+3>>0]=0>>24;
 }
 $600 = $1;
 $601 = ($600<<24>>24)!=(0);
 if ($601) {
  $602 = $0;
  $603 = ((($602)) + 71|0);
  __destroy_parsing_context($603);
 }
 $604 = $0;
 __destroy_edge_objects($604);
 $605 = $0;
 $606 = ((($605)) + 83|0);
 $607 = HEAP8[$606>>0]|0;
 $608 = $607 & -2;
 $609 = $608 | 1;
 HEAP8[$606>>0] = $609;
 $610 = $result;
 STACKTOP = sp;return ($610|0);
}
function _mb_suspend($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $ast = 0, $or$cond = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $l;
 $result = 0;
 $ast = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 if ($or$cond) {
  $6 = $1;
  $7 = HEAP32[$6>>2]|0;
  $8 = ($7|0)!=(0|0);
  if ($8) {
   $9 = $1;
   $10 = HEAP32[$9>>2]|0;
   $ast = $10;
   $11 = $ast;
   $12 = $0;
   $13 = ((($12)) + 106|0);
   HEAP8[$13>>0]=$11&255;HEAP8[$13+1>>0]=($11>>8)&255;HEAP8[$13+2>>0]=($11>>16)&255;HEAP8[$13+3>>0]=$11>>24;
   $14 = $result;
   STACKTOP = sp;return ($14|0);
  }
 }
 $result = 3;
 $14 = $result;
 STACKTOP = sp;return ($14|0);
}
function _mb_debug_get_stack_trace($s,$fs,$fc) {
 $s = $s|0;
 $fs = $fs|0;
 $fc = $fc|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $f = 0, $i = 0, $or$cond = 0, $or$cond3 = 0, $result = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $fs;
 $2 = $fc;
 $result = 0;
 $f = 0;
 $i = 0;
 $3 = $0;
 $4 = ($3|0)!=(0|0);
 if (!($4)) {
  $result = 3;
  $53 = $result;
  STACKTOP = sp;return ($53|0);
 }
 $5 = $1;
 $6 = ($5|0)!=(0|0);
 $7 = $2;
 $8 = ($7|0)!=(0);
 $or$cond = $6 & $8;
 L5: do {
  if ($or$cond) {
   $9 = $0;
   $10 = ((($9)) + 126|0);
   $11 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
   $12 = (__ls_count($11)|0);
   $13 = $2;
   $14 = ($12>>>0)>($13>>>0);
   if ($14) {
    $15 = $2;
    $16 = (($15) + -1)|0;
    $2 = $16;
    $17 = $1;
    $18 = (($17) + ($16<<2)|0);
    HEAP32[$18>>2] = 4608;
   }
   $19 = $0;
   $20 = ((($19)) + 126|0);
   $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
   $22 = ((($21)) + 4|0);
   $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
   $f = $23;
   while(1) {
    $24 = $f;
    $25 = $0;
    $26 = ((($25)) + 126|0);
    $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
    $28 = ($24|0)!=($27|0);
    $29 = $f;
    $30 = ($29|0)!=(0|0);
    $or$cond3 = $28 & $30;
    if (!($or$cond3)) {
     break L5;
    }
    $31 = $f;
    $32 = HEAPU8[$31>>0]|(HEAPU8[$31+1>>0]<<8)|(HEAPU8[$31+2>>0]<<16)|(HEAPU8[$31+3>>0]<<24);
    $33 = ($32|0)!=(0|0);
    if (!($33)) {
     break L5;
    }
    $34 = $i;
    $35 = $2;
    $36 = ($34>>>0)<($35>>>0);
    if (!($36)) {
     break L5;
    }
    $37 = $f;
    $38 = HEAPU8[$37>>0]|(HEAPU8[$37+1>>0]<<8)|(HEAPU8[$37+2>>0]<<16)|(HEAPU8[$37+3>>0]<<24);
    $39 = $i;
    $40 = (($39) + 1)|0;
    $i = $40;
    $41 = $1;
    $42 = (($41) + ($39<<2)|0);
    HEAP32[$42>>2] = $38;
    $43 = $f;
    $44 = ((($43)) + 4|0);
    $45 = HEAPU8[$44>>0]|(HEAPU8[$44+1>>0]<<8)|(HEAPU8[$44+2>>0]<<16)|(HEAPU8[$44+3>>0]<<24);
    $f = $45;
   }
  }
 } while(0);
 while(1) {
  $46 = $i;
  $47 = $2;
  $48 = ($46>>>0)<($47>>>0);
  if (!($48)) {
   break;
  }
  $49 = $i;
  $50 = (($49) + 1)|0;
  $i = $50;
  $51 = $1;
  $52 = (($51) + ($49<<2)|0);
  HEAP32[$52>>2] = 0;
 }
 $53 = $result;
 STACKTOP = sp;return ($53|0);
}
function _mb_debug_set_stepped_handler($s,$prev,$post) {
 $s = $s|0;
 $prev = $prev|0;
 $post = $post|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $prev;
 $2 = $post;
 $result = 0;
 $3 = $0;
 $4 = ($3|0)!=(0|0);
 if ($4) {
  $5 = $1;
  $6 = $0;
  $7 = ((($6)) + 155|0);
  HEAP8[$7>>0]=$5&255;HEAP8[$7+1>>0]=($5>>8)&255;HEAP8[$7+2>>0]=($5>>16)&255;HEAP8[$7+3>>0]=$5>>24;
  $8 = $2;
  $9 = $0;
  $10 = ((($9)) + 159|0);
  HEAP8[$10>>0]=$8&255;HEAP8[$10+1>>0]=($8>>8)&255;HEAP8[$10+2>>0]=($8>>16)&255;HEAP8[$10+3>>0]=$8>>24;
  $11 = $result;
  STACKTOP = sp;return ($11|0);
 } else {
  $result = 3;
  $11 = $result;
  STACKTOP = sp;return ($11|0);
 }
 return (0)|0;
}
function _mb_get_type_string($t) {
 $t = $t|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $t;
 $2 = $1;
 do {
  switch ($2|0) {
  case 0:  {
   $0 = 4612;
   break;
  }
  case 1:  {
   $0 = 4617;
   break;
  }
  case 2:  {
   $0 = 4625;
   break;
  }
  case 4:  {
   $0 = 4633;
   break;
  }
  case 6:  {
   $0 = 4638;
   break;
  }
  case 8:  {
   $0 = 4645;
   break;
  }
  case 16:  {
   $0 = 4652;
   break;
  }
  case 32:  {
   $0 = 4660;
   break;
  }
  case 64:  {
   $0 = 4669;
   break;
  }
  case 128:  {
   $0 = 4682;
   break;
  }
  case 256:  {
   $0 = 4688;
   break;
  }
  case 512:  {
   $0 = 4693;
   break;
  }
  case 1024:  {
   $0 = 4707;
   break;
  }
  case 2048:  {
   $0 = 4712;
   break;
  }
  case 1280:  {
   $0 = 4726;
   break;
  }
  case 2560:  {
   $0 = 4737;
   break;
  }
  case 4096:  {
   $0 = 4746;
   break;
  }
  case 8192:  {
   $0 = 4751;
   break;
  }
  default: {
   $0 = 4760;
  }
  }
 } while(0);
 $3 = $0;
 STACKTOP = sp;return ($3|0);
}
function _mb_raise_error($s,$l,$err,$ret) {
 $s = $s|0;
 $l = $l|0;
 $err = $err|0;
 $ret = $ret|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $l;
 $2 = $err;
 $3 = $ret;
 $result = 3;
 $4 = $0;
 $5 = ($4|0)!=(0|0);
 if (!($5)) {
  $result = 3;
  $52 = $result;
  STACKTOP = sp;return ($52|0);
 }
 $6 = $1;
 $7 = ($6|0)!=(0|0);
 if ($7) {
  $8 = $1;
  $9 = HEAP32[$8>>2]|0;
  $10 = ($9|0)!=(0|0);
  if ($10) {
   $11 = $1;
   $12 = HEAP32[$11>>2]|0;
   $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
   $14 = ($13|0)!=(0|0);
   if ($14) {
    $15 = $0;
    $16 = $2;
    $17 = $0;
    $18 = ((($17)) + 67|0);
    $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
    $20 = (__set_current_error($15,$16,$19)|0);
    $21 = ($20<<24>>24)!=(0);
    if (!($21)) {
     $52 = $result;
     STACKTOP = sp;return ($52|0);
    }
    $22 = $0;
    $23 = $1;
    $24 = HEAP32[$23>>2]|0;
    $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
    $26 = ((($25)) + 9|0);
    $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
    $28 = $1;
    $29 = HEAP32[$28>>2]|0;
    $30 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8)|(HEAPU8[$29+2>>0]<<16)|(HEAPU8[$29+3>>0]<<24);
    $31 = ((($30)) + 13|0);
    $32 = HEAPU8[$31>>0]|(HEAPU8[$31+1>>0]<<8);
    $33 = $1;
    $34 = HEAP32[$33>>2]|0;
    $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
    $36 = ((($35)) + 15|0);
    $37 = HEAPU8[$36>>0]|(HEAPU8[$36+1>>0]<<8);
    __set_error_pos($22,$27,$32,$37);
    $38 = $3;
    $39 = ($38|0)!=(2);
    if (!($39)) {
     $52 = $result;
     STACKTOP = sp;return ($52|0);
    }
    $40 = $3;
    $result = $40;
    $52 = $result;
    STACKTOP = sp;return ($52|0);
   }
  }
 }
 $41 = $0;
 $42 = $2;
 $43 = $0;
 $44 = ((($43)) + 67|0);
 $45 = HEAPU8[$44>>0]|(HEAPU8[$44+1>>0]<<8)|(HEAPU8[$44+2>>0]<<16)|(HEAPU8[$44+3>>0]<<24);
 $46 = (__set_current_error($41,$42,$45)|0);
 $47 = ($46<<24>>24)!=(0);
 if (!($47)) {
  $52 = $result;
  STACKTOP = sp;return ($52|0);
 }
 $48 = $0;
 __set_error_pos($48,0,0,0);
 $49 = $3;
 $50 = ($49|0)!=(2);
 if (!($50)) {
  $52 = $result;
  STACKTOP = sp;return ($52|0);
 }
 $51 = $3;
 $result = $51;
 $52 = $result;
 STACKTOP = sp;return ($52|0);
}
function _mb_get_last_error($s,$file,$pos,$row,$col) {
 $s = $s|0;
 $file = $file|0;
 $pos = $pos|0;
 $row = $row|0;
 $col = $col|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $result = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $file;
 $2 = $pos;
 $3 = $row;
 $4 = $col;
 $result = 0;
 $5 = $0;
 $6 = ($5|0)!=(0|0);
 if (!($6)) {
  $38 = $result;
  STACKTOP = sp;return ($38|0);
 }
 $7 = $0;
 $8 = ((($7)) + 135|0);
 $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
 $result = $9;
 $10 = $0;
 $11 = ((($10)) + 135|0);
 HEAP8[$11>>0]=0&255;HEAP8[$11+1>>0]=(0>>8)&255;HEAP8[$11+2>>0]=(0>>16)&255;HEAP8[$11+3>>0]=0>>24;
 $12 = $1;
 $13 = ($12|0)!=(0|0);
 if ($13) {
  $14 = $0;
  $15 = ((($14)) + 139|0);
  $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
  $17 = $1;
  HEAP32[$17>>2] = $16;
 }
 $18 = $2;
 $19 = ($18|0)!=(0|0);
 if ($19) {
  $20 = $0;
  $21 = ((($20)) + 143|0);
  $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
  $23 = $2;
  HEAP32[$23>>2] = $22;
 }
 $24 = $3;
 $25 = ($24|0)!=(0|0);
 if ($25) {
  $26 = $0;
  $27 = ((($26)) + 147|0);
  $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8);
  $29 = $3;
  HEAP16[$29>>1] = $28;
 }
 $30 = $4;
 $31 = ($30|0)!=(0|0);
 if ($31) {
  $32 = $0;
  $33 = ((($32)) + 149|0);
  $34 = HEAPU8[$33>>0]|(HEAPU8[$33+1>>0]<<8);
  $35 = $4;
  HEAP16[$35>>1] = $34;
 }
 $36 = $0;
 $37 = ((($36)) + 139|0);
 HEAP8[$37>>0]=0&255;HEAP8[$37+1>>0]=(0>>8)&255;HEAP8[$37+2>>0]=(0>>16)&255;HEAP8[$37+3>>0]=0>>24;
 $38 = $result;
 STACKTOP = sp;return ($38|0);
}
function _mb_set_error_handler($s,$h) {
 $s = $s|0;
 $h = $h|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $h;
 $result = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 if ($3) {
  $4 = $1;
  $5 = $0;
  $6 = ((($5)) + 163|0);
  HEAP8[$6>>0]=$4&255;HEAP8[$6+1>>0]=($4>>8)&255;HEAP8[$6+2>>0]=($4>>16)&255;HEAP8[$6+3>>0]=$4>>24;
  $7 = $result;
  STACKTOP = sp;return ($7|0);
 } else {
  $result = 3;
  $7 = $result;
  STACKTOP = sp;return ($7|0);
 }
 return (0)|0;
}
function _mb_set_import_handler($s,$h) {
 $s = $s|0;
 $h = $h|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $h;
 $result = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 if ($3) {
  $4 = $1;
  $5 = $0;
  $6 = ((($5)) + 175|0);
  HEAP8[$6>>0]=$4&255;HEAP8[$6+1>>0]=($4>>8)&255;HEAP8[$6+2>>0]=($4>>16)&255;HEAP8[$6+3>>0]=$4>>24;
  $7 = $result;
  STACKTOP = sp;return ($7|0);
 } else {
  $result = 3;
  $7 = $result;
  STACKTOP = sp;return ($7|0);
 }
 return (0)|0;
}
function _mb_set_memory_manager($a,$f) {
 $a = $a|0;
 $f = $f|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $a;
 $1 = $f;
 $2 = $0;
 HEAP32[592>>2] = $2;
 $3 = $1;
 HEAP32[596>>2] = $3;
 STACKTOP = sp;return 0;
}
function _mb_get_gc_enabled($s) {
 $s = $s|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $s;
 $2 = $1;
 $3 = ($2|0)!=(0|0);
 if ($3) {
  $4 = $1;
  $5 = ((($4)) + 21|0);
  $6 = ((($5)) + 17|0);
  $7 = HEAP8[$6>>0]|0;
  $8 = $7 & 1;
  $9 = ($8<<24>>24)!=(0);
  $10 = $9 ^ 1;
  $11 = $10&1;
  $12 = $11&255;
  $0 = $12;
  $13 = $0;
  STACKTOP = sp;return ($13|0);
 } else {
  $0 = 0;
  $13 = $0;
  STACKTOP = sp;return ($13|0);
 }
 return (0)|0;
}
function _mb_set_gc_enabled($s,$gc) {
 $s = $s|0;
 $gc = $gc|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $s;
 $2 = $gc;
 $3 = $1;
 $4 = ($3|0)!=(0|0);
 if ($4) {
  $5 = $2;
  $6 = ($5<<24>>24)!=(0);
  $7 = $6 ^ 1;
  $8 = $7&1;
  $9 = $8&255;
  $10 = $1;
  $11 = ((($10)) + 21|0);
  $12 = ((($11)) + 17|0);
  $13 = HEAP8[$12>>0]|0;
  $14 = $9 & 1;
  $15 = $13 & -2;
  $16 = $15 | $14;
  HEAP8[$12>>0] = $16;
  $0 = 0;
  $17 = $0;
  STACKTOP = sp;return ($17|0);
 } else {
  $0 = 3;
  $17 = $0;
  STACKTOP = sp;return ($17|0);
 }
 return (0)|0;
}
function _mb_gc($s,$collected) {
 $s = $s|0;
 $collected = $collected|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $diff = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $s;
 $2 = $collected;
 $diff = 0;
 $3 = $1;
 $4 = ($3|0)!=(0|0);
 if (!($4)) {
  $0 = 3;
  $14 = $0;
  STACKTOP = sp;return ($14|0);
 }
 $5 = HEAP32[600>>2]|0;
 $diff = $5;
 $6 = $1;
 __gc_collect_garbage($6,1);
 $7 = HEAP32[600>>2]|0;
 $8 = $diff;
 $9 = (($7) - ($8))|0;
 $diff = $9;
 $10 = $2;
 $11 = ($10|0)!=(0|0);
 if ($11) {
  $12 = $diff;
  $13 = $2;
  HEAP32[$13>>2] = $12;
 }
 $0 = 0;
 $14 = $0;
 STACKTOP = sp;return ($14|0);
}
function _mb_gets($s,$pmt,$buf,$n) {
 $s = $s|0;
 $pmt = $pmt|0;
 $buf = $buf|0;
 $n = $n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $result = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer = sp;
 $0 = $s;
 $1 = $pmt;
 $2 = $buf;
 $3 = $n;
 $result = 0;
 $4 = $2;
 $5 = ($4|0)!=(0|0);
 $6 = $3;
 $7 = ($6|0)!=(0);
 $or$cond = $5 & $7;
 if (!($or$cond)) {
  $29 = $result;
  STACKTOP = sp;return ($29|0);
 }
 $8 = $2;
 $9 = $3;
 $10 = HEAP32[804>>2]|0;
 $11 = (_fgets($8,$9,$10)|0);
 $12 = ($11|0)==(0|0);
 if ($12) {
  $13 = HEAP32[800>>2]|0;
  (_fprintf($13,4761,$vararg_buffer)|0);
  _exit(1);
  // unreachable;
 }
 $14 = $2;
 $15 = (_strlen($14)|0);
 $result = $15;
 $16 = $result;
 $17 = (($16) - 1)|0;
 $18 = $2;
 $19 = (($18) + ($17)|0);
 $20 = HEAP8[$19>>0]|0;
 $21 = $20 << 24 >> 24;
 $22 = ($21|0)==(10);
 if (!($22)) {
  $29 = $result;
  STACKTOP = sp;return ($29|0);
 }
 $23 = $result;
 $24 = (($23) - 1)|0;
 $25 = $2;
 $26 = (($25) + ($24)|0);
 HEAP8[$26>>0] = 0;
 $27 = $result;
 $28 = (($27) + -1)|0;
 $result = $28;
 $29 = $result;
 STACKTOP = sp;return ($29|0);
}
function _mb_memdup($val,$size) {
 $val = $val|0;
 $size = $size|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $val;
 $1 = $size;
 $result = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 if ($3) {
  $4 = $1;
  $5 = (_mb_malloc($4)|0);
  $result = $5;
  $6 = $result;
  $7 = ($6|0)!=(0|0);
  if ($7) {
   $8 = $result;
   $9 = $0;
   $10 = $1;
   _memcpy(($8|0),($9|0),($10|0))|0;
  }
 }
 $11 = $result;
 STACKTOP = sp;return ($11|0);
}
function __create_object() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $result = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $result = 0;
 $0 = (_mb_malloc(17)|0);
 $result = $0;
 $1 = $result;
 dest=$1; stop=dest+17|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
 $2 = $result;
 HEAP8[$2>>0]=0&255;HEAP8[$2+1>>0]=(0>>8)&255;HEAP8[$2+2>>0]=(0>>16)&255;HEAP8[$2+3>>0]=0>>24;
 $3 = $result;
 STACKTOP = sp;return ($3|0);
}
function _mb_malloc($s) {
 $s = $s|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $ret = 0, $rs = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $s;
 $ret = 0;
 $2 = $1;
 $rs = $2;
 $3 = $1;
 $4 = $3&65535;
 $5 = $4&65535;
 $6 = $1;
 $7 = ($5|0)==($6|0);
 if (!($7)) {
  $0 = 0;
  $29 = $0;
  STACKTOP = sp;return ($29|0);
 }
 $8 = $rs;
 $9 = (($8) + 2)|0;
 $rs = $9;
 $10 = HEAP32[592>>2]|0;
 $11 = ($10|0)!=(0|0);
 if ($11) {
  $12 = HEAP32[592>>2]|0;
  $13 = $rs;
  $14 = (FUNCTION_TABLE_ii[$12 & 127]($13)|0);
  $ret = $14;
 } else {
  $15 = $rs;
  $16 = (_malloc($15)|0);
  $ret = $16;
 }
 $17 = $ret;
 $18 = ($17|0)!=(0|0);
 if (!($18)) {
  ___assert_fail((15824|0),(4322|0),3225,(15828|0));
  // unreachable;
 }
 $19 = $1;
 $20 = HEAP32[600>>2]|0;
 $21 = (($20) + ($19))|0;
 HEAP32[600>>2] = $21;
 $22 = $ret;
 $23 = ((($22)) + 2|0);
 $ret = $23;
 $24 = $1;
 $25 = $24&65535;
 $26 = $ret;
 $27 = ((($26)) + -2|0);
 HEAP16[$27>>1] = $25;
 $28 = $ret;
 $0 = $28;
 $29 = $0;
 STACKTOP = sp;return ($29|0);
}
function __core_dummy_assign($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $ast = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $l;
 $result = 0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 $ast = $3;
 $4 = $ast;
 $5 = ($4|0)!=(0|0);
 if ($5) {
  $6 = $ast;
  $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
  $8 = ($7|0)!=(0|0);
  if ($8) {
   $9 = $0;
   $10 = (__set_current_error($9,50,15805)|0);
   $11 = ($10<<24>>24)!=(0);
   if (!($11)) {
    $29 = $result;
    STACKTOP = sp;return ($29|0);
   }
   $12 = $0;
   $13 = $ast;
   $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
   $15 = ((($14)) + 9|0);
   $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
   $17 = $ast;
   $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
   $19 = ((($18)) + 13|0);
   $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8);
   $21 = $ast;
   $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
   $23 = ((($22)) + 15|0);
   $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8);
   __set_error_pos($12,$16,$20,$24);
   $result = 3;
   $29 = $result;
   STACKTOP = sp;return ($29|0);
  }
 }
 $25 = $0;
 $26 = (__set_current_error($25,50,15805)|0);
 $27 = ($26<<24>>24)!=(0);
 if (!($27)) {
  $29 = $result;
  STACKTOP = sp;return ($29|0);
 }
 $28 = $0;
 __set_error_pos($28,0,0,0);
 $result = 3;
 $29 = $result;
 STACKTOP = sp;return ($29|0);
}
function __create_var($oobj,$n,$ns,$dup_name) {
 $oobj = $oobj|0;
 $n = $n|0;
 $ns = $ns|0;
 $dup_name = $dup_name|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $obj = 0;
 var $var = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $oobj;
 $1 = $n;
 $2 = $ns;
 $3 = $dup_name;
 $obj = 0;
 $var = 0;
 $4 = (_mb_malloc(9)|0);
 $var = $4;
 $5 = $var;
 dest=$5; stop=dest+9|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
 $6 = $3;
 $7 = ($6<<24>>24)!=(0);
 $8 = $1;
 if ($7) {
  $9 = $2;
  $10 = (_mb_strdup($8,$9)|0);
  $11 = $var;
  HEAP8[$11>>0]=$10&255;HEAP8[$11+1>>0]=($10>>8)&255;HEAP8[$11+2>>0]=($10>>16)&255;HEAP8[$11+3>>0]=$10>>24;
 } else {
  $12 = $var;
  HEAP8[$12>>0]=$8&255;HEAP8[$12+1>>0]=($8>>8)&255;HEAP8[$12+2>>0]=($8>>16)&255;HEAP8[$12+3>>0]=$8>>24;
 }
 $13 = (__create_object()|0);
 $14 = $var;
 $15 = ((($14)) + 4|0);
 HEAP8[$15>>0]=$13&255;HEAP8[$15+1>>0]=($13>>8)&255;HEAP8[$15+2>>0]=($13>>16)&255;HEAP8[$15+3>>0]=$13>>24;
 $16 = $0;
 $17 = ($16|0)!=(0|0);
 if ($17) {
  $18 = $0;
  $19 = HEAP32[$18>>2]|0;
  $20 = ($19|0)!=(0|0);
  if ($20) {
   $22 = $0;
   $23 = HEAP32[$22>>2]|0;
   $obj = $23;
  } else {
   label = 6;
  }
 } else {
  label = 6;
 }
 if ((label|0) == 6) {
  $21 = (__create_object()|0);
  $obj = $21;
 }
 $24 = $obj;
 dest=$24; stop=dest+17|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
 $25 = $obj;
 HEAP8[$25>>0]=0&255;HEAP8[$25+1>>0]=(0>>8)&255;HEAP8[$25+2>>0]=(0>>16)&255;HEAP8[$25+3>>0]=0>>24;
 $26 = $obj;
 HEAP8[$26>>0]=9&255;HEAP8[$26+1>>0]=(9>>8)&255;HEAP8[$26+2>>0]=(9>>16)&255;HEAP8[$26+3>>0]=9>>24;
 $27 = $var;
 $28 = $obj;
 $29 = ((($28)) + 4|0);
 HEAP8[$29>>0]=$27&255;HEAP8[$29+1>>0]=($27>>8)&255;HEAP8[$29+2>>0]=($27>>16)&255;HEAP8[$29+3>>0]=$27>>24;
 $30 = $obj;
 $31 = ((($30)) + 8|0);
 $32 = HEAP8[$31>>0]|0;
 $33 = $32 & -2;
 HEAP8[$31>>0] = $33;
 $34 = $0;
 $35 = ($34|0)!=(0|0);
 if (!($35)) {
  $38 = $var;
  STACKTOP = sp;return ($38|0);
 }
 $36 = $obj;
 $37 = $0;
 HEAP32[$37>>2] = $36;
 $38 = $var;
 STACKTOP = sp;return ($38|0);
}
function _mb_free($p) {
 $p = $p|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $os = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $p;
 $1 = $0;
 $2 = ($1|0)!=(0|0);
 if (!($2)) {
  ___assert_fail((9768|0),(4322|0),3237,(15797|0));
  // unreachable;
 }
 $3 = $0;
 $4 = ((($3)) + -2|0);
 $5 = HEAP16[$4>>1]|0;
 $6 = $5&65535;
 $os = $6;
 $7 = $os;
 $8 = HEAP32[600>>2]|0;
 $9 = (($8) - ($7))|0;
 HEAP32[600>>2] = $9;
 $10 = $0;
 $11 = ((($10)) + -2|0);
 $0 = $11;
 $12 = HEAP32[596>>2]|0;
 $13 = ($12|0)!=(0|0);
 if ($13) {
  $14 = HEAP32[596>>2]|0;
  $15 = $0;
  FUNCTION_TABLE_vi[$14 & 255]($15);
  STACKTOP = sp;return;
 } else {
  $16 = $0;
  _free($16);
  STACKTOP = sp;return;
 }
}
function __ht_cmp_string($d1,$d2) {
 $d1 = $d1|0;
 $d2 = $d2|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $s1 = 0, $s2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $d1;
 $1 = $d2;
 $2 = $0;
 $s1 = $2;
 $3 = $1;
 $s2 = $3;
 $4 = $s1;
 $5 = $s2;
 $6 = (_strcmp($4,$5)|0);
 STACKTOP = sp;return ($6|0);
}
function __ht_hash_string($ht,$d) {
 $ht = $ht|0;
 $d = $d|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $h = 0, $result = 0, $s = 0, $self = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $ht;
 $1 = $d;
 $result = 0;
 $2 = $0;
 $self = $2;
 $3 = $1;
 $s = $3;
 $h = 0;
 $4 = $0;
 $5 = ($4|0)!=(0|0);
 if (!($5)) {
  ___assert_fail((9706|0),(4322|0),2831,(15781|0));
  // unreachable;
 }
 $6 = $self;
 $7 = ((($6)) + 12|0);
 $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
 $9 = ($8|0)==(1);
 if ($9) {
  $result = 0;
  $25 = $result;
  STACKTOP = sp;return ($25|0);
 }
 while(1) {
  $10 = $s;
  $11 = HEAP8[$10>>0]|0;
  $12 = ($11<<24>>24)!=(0);
  $13 = $h;
  if (!($12)) {
   break;
  }
  $14 = ($13*5)|0;
  $15 = $s;
  $16 = HEAP8[$15>>0]|0;
  $17 = $16 << 24 >> 24;
  $18 = (($14) + ($17))|0;
  $h = $18;
  $19 = $s;
  $20 = ((($19)) + 1|0);
  $s = $20;
 }
 $21 = $self;
 $22 = ((($21)) + 12|0);
 $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
 $24 = (($13>>>0) % ($23>>>0))&-1;
 $result = $24;
 $25 = $result;
 STACKTOP = sp;return ($25|0);
}
function __ls_free_extra($data,$extra) {
 $data = $data|0;
 $extra = $extra|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $data;
 $1 = $extra;
 $result = -1;
 $2 = $1;
 $3 = ($2|0)!=(0|0);
 if (!($3)) {
  ___assert_fail((15760|0),(4322|0),2735,(15766|0));
  // unreachable;
 }
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 if ($5) {
  $6 = $1;
  _mb_free($6);
  $1 = 0;
  $7 = $result;
  STACKTOP = sp;return ($7|0);
 } else {
  ___assert_fail((4369|0),(4322|0),2737,(15766|0));
  // unreachable;
 }
 return (0)|0;
}
function __ht_create($size,$cmp,$hs,$freeextra) {
 $size = $size|0;
 $cmp = $cmp|0;
 $hs = $hs|0;
 $freeextra = $freeextra|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $array_size = 0, $result = 0, $ul = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $size;
 $1 = $cmp;
 $2 = $hs;
 $3 = $freeextra;
 $4 = $0;
 $5 = ($4|0)!=(0);
 $6 = $0;
 $7 = $5 ? $6 : 193;
 $array_size = $7;
 $result = 0;
 $ul = 0;
 $8 = $1;
 $9 = ($8|0)!=(0|0);
 if (!($9)) {
  $1 = 137;
 }
 $10 = $2;
 $11 = ($10|0)!=(0|0);
 if (!($11)) {
  $2 = 138;
 }
 $12 = (_mb_malloc(24)|0);
 $result = $12;
 $13 = $3;
 $14 = $result;
 HEAP8[$14>>0]=$13&255;HEAP8[$14+1>>0]=($13>>8)&255;HEAP8[$14+2>>0]=($13>>16)&255;HEAP8[$14+3>>0]=$13>>24;
 $15 = $1;
 $16 = $result;
 $17 = ((($16)) + 4|0);
 HEAP8[$17>>0]=$15&255;HEAP8[$17+1>>0]=($15>>8)&255;HEAP8[$17+2>>0]=($15>>16)&255;HEAP8[$17+3>>0]=$15>>24;
 $18 = $2;
 $19 = $result;
 $20 = ((($19)) + 8|0);
 HEAP8[$20>>0]=$18&255;HEAP8[$20+1>>0]=($18>>8)&255;HEAP8[$20+2>>0]=($18>>16)&255;HEAP8[$20+3>>0]=$18>>24;
 $21 = $array_size;
 $22 = $result;
 $23 = ((($22)) + 12|0);
 HEAP8[$23>>0]=$21&255;HEAP8[$23+1>>0]=($21>>8)&255;HEAP8[$23+2>>0]=($21>>16)&255;HEAP8[$23+3>>0]=$21>>24;
 $24 = $result;
 $25 = ((($24)) + 16|0);
 HEAP8[$25>>0]=0&255;HEAP8[$25+1>>0]=(0>>8)&255;HEAP8[$25+2>>0]=(0>>16)&255;HEAP8[$25+3>>0]=0>>24;
 $26 = $result;
 $27 = ((($26)) + 20|0);
 HEAP8[$27>>0]=0&255;HEAP8[$27+1>>0]=(0>>8)&255;HEAP8[$27+2>>0]=(0>>16)&255;HEAP8[$27+3>>0]=0>>24;
 $28 = $result;
 STACKTOP = sp;return ($28|0);
}
function __ht_destroy_module_func_list($data,$extra) {
 $data = $data|0;
 $extra = $extra|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $lst = 0, $n = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $data;
 $1 = $extra;
 $result = -1;
 $lst = 0;
 $n = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 if (!($3)) {
  ___assert_fail((6381|0),(4322|0),11836,(15731|0));
  // unreachable;
 }
 $4 = $0;
 $lst = $4;
 $5 = $1;
 $n = $5;
 $6 = $lst;
 (__ls_foreach($6,139)|0);
 $7 = $lst;
 __ls_destroy($7);
 $8 = $n;
 $9 = ($8|0)!=(0|0);
 if ($9) {
  $10 = $n;
  _mb_free($10);
  $n = 0;
  $11 = $result;
  STACKTOP = sp;return ($11|0);
 } else {
  ___assert_fail((4369|0),(4322|0),11842,(15731|0));
  // unreachable;
 }
 return (0)|0;
}
function __ls_create() {
 var $0 = 0, $1 = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $result = 0;
 $0 = (__ls_create_node(0)|0);
 $result = $0;
 $1 = $result;
 STACKTOP = sp;return ($1|0);
}
function __reset_parsing_context($context) {
 $context = $context|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $imp = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $context;
 $imp = 0;
 $1 = $0;
 $2 = ($1|0)!=(0|0);
 if ($2) {
  $4 = $0;
  $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
  $imp = $5;
 } else {
  $3 = (_mb_malloc(172)|0);
  $0 = $3;
 }
 $6 = $0;
 _memset(($6|0),0,172)|0;
 $7 = $0;
 $8 = ((($7)) + 168|0);
 HEAP8[$8>>0]=1&255;HEAP8[$8+1>>0]=1>>8;
 $9 = $imp;
 $10 = ($9|0)!=(0|0);
 if ($10) {
  $12 = $imp;
  (__ls_foreach($12,135)|0);
  $13 = $imp;
  __ls_clear($13);
 } else {
  $11 = (__ls_create()|0);
  $imp = $11;
 }
 $14 = $imp;
 $15 = $0;
 HEAP8[$15>>0]=$14&255;HEAP8[$15+1>>0]=($14>>8)&255;HEAP8[$15+2>>0]=($14>>16)&255;HEAP8[$15+3>>0]=$14>>24;
 $16 = $0;
 __end_of_file($16);
 $17 = $0;
 STACKTOP = sp;return ($17|0);
}
function __ht_cmp_ref($d1,$d2) {
 $d1 = $d1|0;
 $d2 = $d2|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i = 0, $r1 = 0, $r2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $d1;
 $2 = $d2;
 $3 = $1;
 $r1 = $3;
 $4 = $2;
 $r2 = $4;
 $5 = $r1;
 $6 = $5;
 $7 = $r2;
 $8 = $7;
 $9 = (($6) - ($8))|0;
 $i = $9;
 $10 = $i;
 $11 = ($10|0)<(0);
 do {
  if ($11) {
   $0 = -1;
  } else {
   $12 = $i;
   $13 = ($12|0)>(0);
   if ($13) {
    $0 = 1;
    break;
   } else {
    $0 = 0;
    break;
   }
  }
 } while(0);
 $14 = $0;
 STACKTOP = sp;return ($14|0);
}
function __ht_hash_ref($ht,$d) {
 $ht = $ht|0;
 $d = $d|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $ref = 0, $result = 0;
 var $self = 0, $u = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $ht;
 $1 = $d;
 $result = 0;
 $2 = $0;
 $self = $2;
 $3 = $1;
 $ref = $3;
 $4 = $0;
 $5 = ($4|0)!=(0|0);
 if (!($5)) {
  ___assert_fail((9706|0),(4322|0),2865,(15718|0));
  // unreachable;
 }
 $6 = $self;
 $7 = ((($6)) + 12|0);
 $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
 $9 = ($8|0)==(1);
 if ($9) {
  $result = 0;
  $17 = $result;
  STACKTOP = sp;return ($17|0);
 } else {
  $10 = $ref;
  $11 = $10;
  $u = $11;
  $12 = $u;
  $13 = $self;
  $14 = ((($13)) + 12|0);
  $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
  $16 = (($12>>>0) % ($15>>>0))&-1;
  $result = $16;
  $17 = $result;
  STACKTOP = sp;return ($17|0);
 }
 return (0)|0;
}
function __do_nothing_on_object($data,$extra) {
 $data = $data|0;
 $extra = $extra|0;
 var $0 = 0, $1 = 0, $2 = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $data;
 $1 = $extra;
 $result = 0;
 $2 = $result;
 STACKTOP = sp;return ($2|0);
}
function __create_running_context($create_var_dict) {
 $create_var_dict = $create_var_dict|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $result = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $create_var_dict;
 $result = 0;
 $1 = (_mb_malloc(36)|0);
 $result = $1;
 $2 = $result;
 dest=$2; stop=dest+36|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
 $3 = $result;
 $4 = ((($3)) + 28|0);
 HEAP8[$4>>0]=-1&255;HEAP8[$4+1>>0]=(-1>>8)&255;HEAP8[$4+2>>0]=(-1>>16)&255;HEAP8[$4+3>>0]=-1>>24;
 $5 = $0;
 $6 = ($5<<24>>24)!=(0);
 if (!($6)) {
  $10 = $result;
  STACKTOP = sp;return ($10|0);
 }
 $7 = (__ht_create(0,127,128,0)|0);
 $8 = $result;
 $9 = ((($8)) + 8|0);
 HEAP8[$9>>0]=$7&255;HEAP8[$9+1>>0]=($7>>8)&255;HEAP8[$9+2>>0]=($7>>16)&255;HEAP8[$9+3>>0]=$7>>24;
 $10 = $result;
 STACKTOP = sp;return ($10|0);
}
function __open_core_lib($s) {
 $s = $s|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i = 0;
 var $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $result = 0;
 $i = 0;
 $1 = $0;
 $2 = ($1|0)!=(0|0);
 if (!($2)) {
  ___assert_fail((4803|0),(4322|0),12046,(15703|0));
  // unreachable;
 }
 $i = 0;
 while(1) {
  $3 = $i;
  $4 = ($3>>>0)<(54);
  if (!($4)) {
   break;
  }
  $5 = $0;
  $6 = $i;
  $7 = (13328 + ($6<<3)|0);
  $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
  $9 = $i;
  $10 = (13328 + ($9<<3)|0);
  $11 = ((($10)) + 4|0);
  $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
  $13 = (__register_func($5,$8,$12,1)|0);
  $14 = $result;
  $15 = (($14) + ($13))|0;
  $result = $15;
  $16 = $i;
  $17 = (($16) + 1)|0;
  $i = $17;
 }
 $18 = $result;
 STACKTOP = sp;return ($18|0);
}
function __open_std_lib($s) {
 $s = $s|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i = 0;
 var $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $result = 0;
 $i = 0;
 $1 = $0;
 $2 = ($1|0)!=(0|0);
 if (!($2)) {
  ___assert_fail((4803|0),(4322|0),12072,(15689|0));
  // unreachable;
 }
 $i = 0;
 while(1) {
  $3 = $i;
  $4 = ($3>>>0)<(29);
  if (!($4)) {
   break;
  }
  $5 = $0;
  $6 = $i;
  $7 = (14174 + ($6<<3)|0);
  $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
  $9 = $i;
  $10 = (14174 + ($9<<3)|0);
  $11 = ((($10)) + 4|0);
  $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
  $13 = (__register_func($5,$8,$12,1)|0);
  $14 = $result;
  $15 = (($14) + ($13))|0;
  $result = $15;
  $16 = $i;
  $17 = (($16) + 1)|0;
  $i = $17;
 }
 $18 = $result;
 STACKTOP = sp;return ($18|0);
}
function __open_coll_lib($s) {
 $s = $s|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i = 0;
 var $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $result = 0;
 $i = 0;
 $1 = $0;
 $2 = ($1|0)!=(0|0);
 if (!($2)) {
  ___assert_fail((4803|0),(4322|0),12099,(15674|0));
  // unreachable;
 }
 $i = 0;
 while(1) {
  $3 = $i;
  $4 = ($3>>>0)<(15);
  if (!($4)) {
   break;
  }
  $5 = $0;
  $6 = $i;
  $7 = (15127 + ($6<<3)|0);
  $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
  $9 = $i;
  $10 = (15127 + ($9<<3)|0);
  $11 = ((($10)) + 4|0);
  $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
  $13 = (__register_func($5,$8,$12,1)|0);
  $14 = $result;
  $15 = (($14) + ($13))|0;
  $result = $15;
  $16 = $i;
  $17 = (($16) + 1)|0;
  $i = $17;
 }
 $18 = $result;
 STACKTOP = sp;return ($18|0);
}
function __open_constant($s) {
 $s = $s|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $result = 0, $running = 0, $ul = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $result = 0;
 $running = 0;
 $ul = 0;
 $1 = $0;
 $2 = ($1|0)!=(0|0);
 if (!($2)) {
  ___assert_fail((4803|0),(4322|0),12020,(15659|0));
  // unreachable;
 }
 $3 = $0;
 $4 = ((($3)) + 75|0);
 $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
 $running = $5;
 $6 = $running;
 $7 = ((($6)) + 8|0);
 $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
 $9 = HEAP32[308>>2]|0;
 $10 = (__ht_set_or_insert($8,4341,$9)|0);
 $ul = $10;
 $11 = $ul;
 $12 = ($11|0)!=(0);
 if (!($12)) {
  ___assert_fail((8058|0),(4322|0),12025,(15659|0));
  // unreachable;
 }
 $13 = $running;
 $14 = ((($13)) + 8|0);
 $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
 $16 = HEAP32[312>>2]|0;
 $17 = (__ht_set_or_insert($15,4363,$16)|0);
 $ul = $17;
 $18 = $ul;
 $19 = ($18|0)!=(0);
 if ($19) {
  $20 = $result;
  STACKTOP = sp;return ($20|0);
 } else {
  ___assert_fail((8058|0),(4322|0),12027,(15659|0));
  // unreachable;
 }
 return (0)|0;
}
function __close_coll_lib($s) {
 $s = $s|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $result = 0;
 $i = 0;
 $1 = $0;
 $2 = ($1|0)!=(0|0);
 if (!($2)) {
  ___assert_fail((4803|0),(4322|0),12112,(15111|0));
  // unreachable;
 }
 $i = 0;
 while(1) {
  $3 = $i;
  $4 = ($3>>>0)<(15);
  if (!($4)) {
   break;
  }
  $5 = $0;
  $6 = $i;
  $7 = (15127 + ($6<<3)|0);
  $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
  $9 = (__remove_func($5,$8,1)|0);
  $10 = $result;
  $11 = (($10) + ($9))|0;
  $result = $11;
  $12 = $i;
  $13 = (($12) + 1)|0;
  $i = $13;
 }
 $14 = $result;
 STACKTOP = sp;return ($14|0);
}
function __close_std_lib($s) {
 $s = $s|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $result = 0;
 $i = 0;
 $1 = $0;
 $2 = ($1|0)!=(0|0);
 if (!($2)) {
  ___assert_fail((4803|0),(4322|0),12085,(14159|0));
  // unreachable;
 }
 $i = 0;
 while(1) {
  $3 = $i;
  $4 = ($3>>>0)<(29);
  if (!($4)) {
   break;
  }
  $5 = $0;
  $6 = $i;
  $7 = (14174 + ($6<<3)|0);
  $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
  $9 = (__remove_func($5,$8,1)|0);
  $10 = $result;
  $11 = (($10) + ($9))|0;
  $result = $11;
  $12 = $i;
  $13 = (($12) + 1)|0;
  $i = $13;
 }
 $14 = $result;
 STACKTOP = sp;return ($14|0);
}
function __close_core_lib($s) {
 $s = $s|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $result = 0;
 $i = 0;
 $1 = $0;
 $2 = ($1|0)!=(0|0);
 if (!($2)) {
  ___assert_fail((4803|0),(4322|0),12059,(13312|0));
  // unreachable;
 }
 $i = 0;
 while(1) {
  $3 = $i;
  $4 = ($3>>>0)<(54);
  if (!($4)) {
   break;
  }
  $5 = $0;
  $6 = $i;
  $7 = (13328 + ($6<<3)|0);
  $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
  $9 = (__remove_func($5,$8,1)|0);
  $10 = $result;
  $11 = (($10) + ($9))|0;
  $result = $11;
  $12 = $i;
  $13 = (($12) + 1)|0;
  $i = $13;
 }
 $14 = $result;
 STACKTOP = sp;return ($14|0);
}
function __try_clear_intermediate_value($data,$extra,$s) {
 $data = $data|0;
 $extra = $extra|0;
 $s = $s|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $obj = 0, $running = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $data;
 $1 = $extra;
 $2 = $s;
 $obj = 0;
 $running = 0;
 $3 = $2;
 $4 = ($3|0)!=(0|0);
 if (!($4)) {
  ___assert_fail((4803|0),(4322|0),10641,(13282|0));
  // unreachable;
 }
 $5 = $0;
 $6 = ($5|0)==(0|0);
 if ($6) {
  STACKTOP = sp;return;
 }
 $7 = $0;
 $obj = $7;
 $8 = $2;
 $9 = ((($8)) + 75|0);
 $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
 $running = $10;
 $11 = $running;
 $12 = ((($11)) + 20|0);
 $13 = $obj;
 $14 = (__compare_public_value_and_internal_object($12,$13)|0);
 $15 = ($14|0)!=(0);
 if ($15) {
  STACKTOP = sp;return;
 }
 $16 = $running;
 $17 = ((($16)) + 20|0);
 $18 = ((($17)) + 4|0);
 ;HEAP8[$18>>0]=0|0;HEAP8[$18+1>>0]=0|0;HEAP8[$18+2>>0]=0|0;HEAP8[$18+3>>0]=0|0;
 $19 = $running;
 $20 = ((($19)) + 20|0);
 HEAP8[$20>>0]=0&255;HEAP8[$20+1>>0]=(0>>8)&255;HEAP8[$20+2>>0]=(0>>16)&255;HEAP8[$20+3>>0]=0>>24;
 STACKTOP = sp;return;
}
function __destroy_object($data,$extra) {
 $data = $data|0;
 $extra = $extra|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $obj = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $data;
 $1 = $extra;
 $result = -1;
 $obj = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 if (!($3)) {
  ___assert_fail((6381|0),(4322|0),10059,(13266|0));
  // unreachable;
 }
 $4 = $0;
 $obj = $4;
 $5 = $obj;
 $6 = (__dispose_object($5)|0);
 $7 = ($6|0)!=(0);
 if (!($7)) {
  $11 = $result;
  STACKTOP = sp;return ($11|0);
 }
 $8 = $obj;
 $9 = ($8|0)!=(0|0);
 if (!($9)) {
  ___assert_fail((4369|0),(4322|0),10064,(13266|0));
  // unreachable;
 }
 $10 = $obj;
 _mb_free($10);
 $obj = 0;
 $11 = $result;
 STACKTOP = sp;return ($11|0);
}
function __ls_destroy($list) {
 $list = $list|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $list;
 $1 = $0;
 __ls_clear($1);
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 if ($3) {
  $4 = $0;
  _mb_free($4);
  $0 = 0;
  STACKTOP = sp;return;
 } else {
  ___assert_fail((4369|0),(4322|0),2728,(13254|0));
  // unreachable;
 }
}
function __tidy_scope_chain($s) {
 $s = $s|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $context = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $context = 0;
 $1 = $0;
 $2 = ($1|0)!=(0|0);
 if (!($2)) {
  ___assert_fail((4803|0),(4322|0),10819,(13236|0));
  // unreachable;
 }
 $3 = $0;
 $4 = ((($3)) + 71|0);
 $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
 $context = $5;
 $6 = $context;
 $7 = ($6|0)!=(0|0);
 if (!($7)) {
  while(1) {
   $8 = $0;
   $9 = ((($8)) + 75|0);
   $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
   $11 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
   $12 = ($11|0)!=(0|0);
   if (!($12)) {
    break;
   }
   $13 = $0;
   (__pop_scope($13,0)|0);
  }
  STACKTOP = sp;return;
 }
 while(1) {
  $14 = $context;
  $15 = ((($14)) + 160|0);
  $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8);
  $17 = $16&65535;
  $18 = ($17|0)!=(0);
  if (!($18)) {
   break;
  }
  $19 = $0;
  $20 = ((($19)) + 75|0);
  $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
  $22 = ((($21)) + 4|0);
  $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
  $24 = ($23|0)!=(1);
  if (!($24)) {
   break;
  }
  $25 = $0;
  $26 = (__end_routine($25)|0);
  $27 = ($26<<24>>24)!=(0);
  if (!($27)) {
   continue;
  }
  $28 = $0;
  $29 = ((($28)) + 75|0);
  $30 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8)|(HEAPU8[$29+2>>0]<<16)|(HEAPU8[$29+3>>0]<<24);
  $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8)|(HEAPU8[$30+2>>0]<<16)|(HEAPU8[$30+3>>0]<<24);
  $32 = ($31|0)!=(0|0);
  if (!($32)) {
   break;
  }
  $33 = $0;
  (__pop_scope($33,0)|0);
 }
 while(1) {
  $34 = $context;
  $35 = ((($34)) + 158|0);
  $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8);
  $37 = $36&65535;
  $38 = ($37|0)!=(0);
  if (!($38)) {
   label = 15;
   break;
  }
  $39 = $0;
  $40 = (__end_class($39)|0);
  $41 = ($40<<24>>24)!=(0);
  if (!($41)) {
   continue;
  }
  $42 = $0;
  $43 = ((($42)) + 75|0);
  $44 = HEAPU8[$43>>0]|(HEAPU8[$43+1>>0]<<8)|(HEAPU8[$43+2>>0]<<16)|(HEAPU8[$43+3>>0]<<24);
  $45 = HEAPU8[$44>>0]|(HEAPU8[$44+1>>0]<<8)|(HEAPU8[$44+2>>0]<<16)|(HEAPU8[$44+3>>0]<<24);
  $46 = ($45|0)!=(0|0);
  if (!($46)) {
   label = 15;
   break;
  }
  $47 = $0;
  (__pop_scope($47,0)|0);
 }
 if ((label|0) == 15) {
  STACKTOP = sp;return;
 }
}
function __dispose_scope_chain($s) {
 $s = $s|0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $prev = 0, $result = 0, $running = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $$byval_copy = sp + 16|0;
 $0 = $s;
 $result = 0;
 $running = 0;
 $prev = 0;
 $1 = $0;
 $2 = ($1|0)!=(0|0);
 if (!($2)) {
  ___assert_fail((4803|0),(4322|0),10787,(13215|0));
  // unreachable;
 }
 $3 = $0;
 $4 = ((($3)) + 75|0);
 $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
 $running = $5;
 while(1) {
  $6 = $running;
  $7 = ($6|0)!=(0|0);
  if (!($7)) {
   label = 10;
   break;
  }
  $8 = $running;
  $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
  $prev = $9;
  $10 = $running;
  $11 = ((($10)) + 8|0);
  $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
  (__ht_foreach($12,134)|0);
  $13 = $running;
  $14 = ((($13)) + 8|0);
  $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
  __ht_clear($15);
  $16 = $running;
  $17 = ((($16)) + 8|0);
  $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
  __ht_destroy($18);
  $19 = $running;
  $20 = ((($19)) + 32|0);
  $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
  $22 = ($21|0)!=(0|0);
  if ($22) {
   $23 = $running;
   $24 = ((($23)) + 32|0);
   $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
   __ls_clear($25);
   $26 = $running;
   $27 = ((($26)) + 32|0);
   $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
   __ls_destroy($28);
   $29 = $running;
   $30 = ((($29)) + 32|0);
   HEAP8[$30>>0]=0&255;HEAP8[$30+1>>0]=(0>>8)&255;HEAP8[$30+2>>0]=(0>>16)&255;HEAP8[$30+3>>0]=0>>24;
  }
  $31 = $running;
  $32 = ((($31)) + 8|0);
  HEAP8[$32>>0]=0&255;HEAP8[$32+1>>0]=(0>>8)&255;HEAP8[$32+2>>0]=(0>>16)&255;HEAP8[$32+3>>0]=0>>24;
  $33 = $0;
  $34 = $running;
  $35 = ((($34)) + 20|0);
  ;HEAP32[$$byval_copy>>2]=HEAP32[$35>>2]|0;HEAP32[$$byval_copy+4>>2]=HEAP32[$35+4>>2]|0;
  (_mb_dispose_value($33,$$byval_copy)|0);
  $36 = $running;
  $37 = ($36|0)!=(0|0);
  if (!($37)) {
   label = 9;
   break;
  }
  $38 = $running;
  _mb_free($38);
  $running = 0;
  $39 = $result;
  $40 = (($39) + 1)|0;
  $result = $40;
  $41 = $prev;
  $running = $41;
 }
 if ((label|0) == 9) {
  ___assert_fail((4369|0),(4322|0),10805,(13215|0));
  // unreachable;
 }
 else if ((label|0) == 10) {
  $42 = $0;
  $43 = ((($42)) + 75|0);
  HEAP8[$43>>0]=0&255;HEAP8[$43+1>>0]=(0>>8)&255;HEAP8[$43+2>>0]=(0>>16)&255;HEAP8[$43+3>>0]=0>>24;
  $44 = $result;
  STACKTOP = sp;return ($44|0);
 }
 return (0)|0;
}
function __gc_collect_garbage($s,$depth) {
 $s = $s|0;
 $depth = $depth|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0;
 var $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0;
 var $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0;
 var $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0;
 var $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0;
 var $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0;
 var $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0;
 var $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0;
 var $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0;
 var $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0;
 var $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__bucket = 0, $__bucket14 = 0, $__bucket19 = 0, $__bucket4 = 0, $__bucket9 = 0, $__lst = 0, $__lst1 = 0, $__lst11 = 0, $__lst16 = 0, $__lst21 = 0;
 var $__lst6 = 0, $__opresult = 0, $__opresult12 = 0, $__opresult17 = 0, $__opresult2 = 0, $__opresult22 = 0, $__opresult7 = 0, $__tmp = 0, $__tmp13 = 0, $__tmp18 = 0, $__tmp23 = 0, $__tmp3 = 0, $__tmp8 = 0, $__ul = 0, $__ul10 = 0, $__ul15 = 0, $__ul20 = 0, $__ul5 = 0, $gc = 0, $src = 0;
 var $valid = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $src = sp + 120|0;
 $0 = $s;
 $1 = $depth;
 HEAP32[$src>>2] = 0;
 $valid = 0;
 $gc = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 if (!($3)) {
  ___assert_fail((4803|0),(4322|0),6959,(12631|0));
  // unreachable;
 }
 while(1) {
  $4 = $0;
  $5 = (_mb_get_forked_from($4,$src)|0);
  $6 = ($5|0)==(0);
  if (!($6)) {
   break;
  }
  $7 = HEAP32[$src>>2]|0;
  $0 = $7;
 }
 $8 = $0;
 $9 = ((($8)) + 21|0);
 $gc = $9;
 $10 = $gc;
 $11 = ((($10)) + 17|0);
 $12 = HEAP8[$11>>0]|0;
 $13 = $12 & 1;
 $14 = ($13<<24>>24)!=(0);
 if ($14) {
  STACKTOP = sp;return;
 }
 $15 = $gc;
 $16 = ((($15)) + 16|0);
 $17 = HEAP8[$16>>0]|0;
 $18 = ($17<<24>>24)!=(0);
 if ($18) {
  STACKTOP = sp;return;
 }
 $19 = $gc;
 $20 = ((($19)) + 16|0);
 $21 = HEAP8[$20>>0]|0;
 $22 = (($21) + 1)<<24>>24;
 HEAP8[$20>>0] = $22;
 $23 = (__ht_create(0,131,132,133)|0);
 $valid = $23;
 $24 = $1;
 $25 = ($24|0)!=(-1);
 if ($25) {
  $26 = $valid;
  $27 = $gc;
  $28 = ((($27)) + 12|0);
  HEAP8[$28>>0]=$26&255;HEAP8[$28+1>>0]=($26>>8)&255;HEAP8[$28+2>>0]=($26>>16)&255;HEAP8[$28+3>>0]=$26>>24;
 }
 $29 = $0;
 $30 = $valid;
 __gc_get_reachable($29,$30,0);
 $31 = $0;
 $32 = ((($31)) + 8|0);
 $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
 $34 = ($33|0)!=(0|0);
 L17: do {
  if ($34) {
   $35 = $0;
   $36 = ((($35)) + 8|0);
   $37 = HEAPU8[$36>>0]|(HEAPU8[$36+1>>0]<<8)|(HEAPU8[$36+2>>0]<<16)|(HEAPU8[$36+3>>0]<<24);
   $__lst = $37;
   $__opresult = 0;
   $__tmp = 0;
   $38 = $0;
   $39 = ((($38)) + 8|0);
   $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8)|(HEAPU8[$39+2>>0]<<16)|(HEAPU8[$39+3>>0]<<24);
   $41 = ($40|0)!=(0|0);
   if (!($41)) {
    ___assert_fail((10029|0),(4322|0),6985,(12631|0));
    // unreachable;
   }
   $42 = $__lst;
   $43 = ((($42)) + 8|0);
   $44 = HEAPU8[$43>>0]|(HEAPU8[$43+1>>0]<<8)|(HEAPU8[$43+2>>0]<<16)|(HEAPU8[$43+3>>0]<<24);
   $__lst = $44;
   while(1) {
    $45 = $__lst;
    $46 = ($45|0)!=(0|0);
    if (!($46)) {
     break L17;
    }
    $47 = $__lst;
    $48 = HEAPU8[$47>>0]|(HEAPU8[$47+1>>0]<<8)|(HEAPU8[$47+2>>0]<<16)|(HEAPU8[$47+3>>0]<<24);
    $49 = $__lst;
    $50 = ((($49)) + 12|0);
    $51 = HEAPU8[$50>>0]|(HEAPU8[$50+1>>0]<<8)|(HEAPU8[$50+2>>0]<<16)|(HEAPU8[$50+3>>0]<<24);
    $52 = $valid;
    (__gc_get_reachable_in_forked($48,$51,$52)|0);
    $53 = $__lst;
    $54 = HEAPU8[$53>>0]|(HEAPU8[$53+1>>0]<<8)|(HEAPU8[$53+2>>0]<<16)|(HEAPU8[$53+3>>0]<<24);
    $55 = $__lst;
    $56 = ((($55)) + 12|0);
    $57 = HEAPU8[$56>>0]|(HEAPU8[$56+1>>0]<<8)|(HEAPU8[$56+2>>0]<<16)|(HEAPU8[$56+3>>0]<<24);
    $58 = (__do_nothing_on_object($54,$57)|0);
    $__opresult = $58;
    $59 = $__lst;
    $__tmp = $59;
    $60 = $__lst;
    $61 = ((($60)) + 8|0);
    $62 = HEAPU8[$61>>0]|(HEAPU8[$61+1>>0]<<8)|(HEAPU8[$61+2>>0]<<16)|(HEAPU8[$61+3>>0]<<24);
    $__lst = $62;
    $63 = $__opresult;
    $64 = (-1)==($63|0);
    if (!($64)) {
     continue;
    }
    $65 = $__lst;
    $66 = $__tmp;
    $67 = ((($66)) + 4|0);
    $68 = HEAPU8[$67>>0]|(HEAPU8[$67+1>>0]<<8)|(HEAPU8[$67+2>>0]<<16)|(HEAPU8[$67+3>>0]<<24);
    $69 = ((($68)) + 8|0);
    HEAP8[$69>>0]=$65&255;HEAP8[$69+1>>0]=($65>>8)&255;HEAP8[$69+2>>0]=($65>>16)&255;HEAP8[$69+3>>0]=$65>>24;
    $70 = $__lst;
    $71 = ($70|0)!=(0|0);
    if ($71) {
     $72 = $__tmp;
     $73 = ((($72)) + 4|0);
     $74 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
     $75 = $__lst;
     $76 = ((($75)) + 4|0);
     HEAP8[$76>>0]=$74&255;HEAP8[$76+1>>0]=($74>>8)&255;HEAP8[$76+2>>0]=($74>>16)&255;HEAP8[$76+3>>0]=$74>>24;
    }
    $77 = $__tmp;
    $78 = ($77|0)!=(0|0);
    if (!($78)) {
     break;
    }
    $79 = $__tmp;
    _mb_free($79);
    $__tmp = 0;
    $80 = $0;
    $81 = ((($80)) + 8|0);
    $82 = HEAPU8[$81>>0]|(HEAPU8[$81+1>>0]<<8)|(HEAPU8[$81+2>>0]<<16)|(HEAPU8[$81+3>>0]<<24);
    $83 = HEAPU8[$82>>0]|(HEAPU8[$82+1>>0]<<8)|(HEAPU8[$82+2>>0]<<16)|(HEAPU8[$82+3>>0]<<24);
    $84 = ((($83)) + -1|0);
    $85 = $0;
    $86 = ((($85)) + 8|0);
    $87 = HEAPU8[$86>>0]|(HEAPU8[$86+1>>0]<<8)|(HEAPU8[$86+2>>0]<<16)|(HEAPU8[$86+3>>0]<<24);
    HEAP8[$87>>0]=$84&255;HEAP8[$87+1>>0]=($84>>8)&255;HEAP8[$87+2>>0]=($84>>16)&255;HEAP8[$87+3>>0]=$84>>24;
   }
   ___assert_fail((4369|0),(4322|0),6985,(12631|0));
   // unreachable;
  }
 } while(0);
 $88 = $0;
 $89 = ((($88)) + 151|0);
 $90 = HEAPU8[$89>>0]|(HEAPU8[$89+1>>0]<<8)|(HEAPU8[$89+2>>0]<<16)|(HEAPU8[$89+3>>0]<<24);
 $91 = ($90|0)!=(0|0);
 if ($91) {
  $92 = $0;
  $93 = ((($92)) + 151|0);
  $94 = HEAPU8[$93>>0]|(HEAPU8[$93+1>>0]<<8)|(HEAPU8[$93+2>>0]<<16)|(HEAPU8[$93+3>>0]<<24);
  $95 = $0;
  $96 = $valid;
  FUNCTION_TABLE_viii[$94 & 255]($95,$96,140);
 }
 $__bucket = 0;
 $__ul = 0;
 $97 = $valid;
 $98 = ((($97)) + 20|0);
 $99 = HEAPU8[$98>>0]|(HEAPU8[$98+1>>0]<<8)|(HEAPU8[$98+2>>0]<<16)|(HEAPU8[$98+3>>0]<<24);
 $100 = ($99|0)!=(0|0);
 L35: do {
  if ($100) {
   $__ul = 0;
   L37: while(1) {
    $101 = $__ul;
    $102 = $valid;
    $103 = ((($102)) + 12|0);
    $104 = HEAPU8[$103>>0]|(HEAPU8[$103+1>>0]<<8)|(HEAPU8[$103+2>>0]<<16)|(HEAPU8[$103+3>>0]<<24);
    $105 = ($101>>>0)<($104>>>0);
    if (!($105)) {
     break L35;
    }
    $106 = $__ul;
    $107 = $valid;
    $108 = ((($107)) + 20|0);
    $109 = HEAPU8[$108>>0]|(HEAPU8[$108+1>>0]<<8)|(HEAPU8[$108+2>>0]<<16)|(HEAPU8[$108+3>>0]<<24);
    $110 = (($109) + ($106<<2)|0);
    $111 = HEAP32[$110>>2]|0;
    $__bucket = $111;
    $112 = $__bucket;
    $113 = ($112|0)!=(0|0);
    L40: do {
     if ($113) {
      $114 = $__bucket;
      $__lst1 = $114;
      $__opresult2 = 0;
      $__tmp3 = 0;
      $115 = $__bucket;
      $116 = ($115|0)!=(0|0);
      if (!($116)) {
       label = 28;
       break L37;
      }
      $117 = $__lst1;
      $118 = ((($117)) + 8|0);
      $119 = HEAPU8[$118>>0]|(HEAPU8[$118+1>>0]<<8)|(HEAPU8[$118+2>>0]<<16)|(HEAPU8[$118+3>>0]<<24);
      $__lst1 = $119;
      while(1) {
       $120 = $__lst1;
       $121 = ($120|0)!=(0|0);
       if (!($121)) {
        break L40;
       }
       $122 = $__lst1;
       $123 = HEAPU8[$122>>0]|(HEAPU8[$122+1>>0]<<8)|(HEAPU8[$122+2>>0]<<16)|(HEAPU8[$122+3>>0]<<24);
       $124 = $__lst1;
       $125 = ((($124)) + 12|0);
       $126 = HEAPU8[$125>>0]|(HEAPU8[$125+1>>0]<<8)|(HEAPU8[$125+2>>0]<<16)|(HEAPU8[$125+3>>0]<<24);
       $127 = $gc;
       $128 = HEAPU8[$127>>0]|(HEAPU8[$127+1>>0]<<8)|(HEAPU8[$127+2>>0]<<16)|(HEAPU8[$127+3>>0]<<24);
       (__ht_remove_existing($123,$126,$128)|0);
       $129 = $__lst1;
       $130 = HEAPU8[$129>>0]|(HEAPU8[$129+1>>0]<<8)|(HEAPU8[$129+2>>0]<<16)|(HEAPU8[$129+3>>0]<<24);
       $131 = $__lst1;
       $132 = ((($131)) + 12|0);
       $133 = HEAPU8[$132>>0]|(HEAPU8[$132+1>>0]<<8)|(HEAPU8[$132+2>>0]<<16)|(HEAPU8[$132+3>>0]<<24);
       $134 = (__do_nothing_on_object($130,$133)|0);
       $__opresult2 = $134;
       $135 = $__lst1;
       $__tmp3 = $135;
       $136 = $__lst1;
       $137 = ((($136)) + 8|0);
       $138 = HEAPU8[$137>>0]|(HEAPU8[$137+1>>0]<<8)|(HEAPU8[$137+2>>0]<<16)|(HEAPU8[$137+3>>0]<<24);
       $__lst1 = $138;
       $139 = $__opresult2;
       $140 = (-1)==($139|0);
       if (!($140)) {
        continue;
       }
       $141 = $__lst1;
       $142 = $__tmp3;
       $143 = ((($142)) + 4|0);
       $144 = HEAPU8[$143>>0]|(HEAPU8[$143+1>>0]<<8)|(HEAPU8[$143+2>>0]<<16)|(HEAPU8[$143+3>>0]<<24);
       $145 = ((($144)) + 8|0);
       HEAP8[$145>>0]=$141&255;HEAP8[$145+1>>0]=($141>>8)&255;HEAP8[$145+2>>0]=($141>>16)&255;HEAP8[$145+3>>0]=$141>>24;
       $146 = $__lst1;
       $147 = ($146|0)!=(0|0);
       if ($147) {
        $148 = $__tmp3;
        $149 = ((($148)) + 4|0);
        $150 = HEAPU8[$149>>0]|(HEAPU8[$149+1>>0]<<8)|(HEAPU8[$149+2>>0]<<16)|(HEAPU8[$149+3>>0]<<24);
        $151 = $__lst1;
        $152 = ((($151)) + 4|0);
        HEAP8[$152>>0]=$150&255;HEAP8[$152+1>>0]=($150>>8)&255;HEAP8[$152+2>>0]=($150>>16)&255;HEAP8[$152+3>>0]=$150>>24;
       }
       $153 = $__tmp3;
       $154 = ($153|0)!=(0|0);
       if (!($154)) {
        label = 36;
        break L37;
       }
       $155 = $__tmp3;
       _mb_free($155);
       $__tmp3 = 0;
       $156 = $__bucket;
       $157 = HEAPU8[$156>>0]|(HEAPU8[$156+1>>0]<<8)|(HEAPU8[$156+2>>0]<<16)|(HEAPU8[$156+3>>0]<<24);
       $158 = ((($157)) + -1|0);
       $159 = $__bucket;
       HEAP8[$159>>0]=$158&255;HEAP8[$159+1>>0]=($158>>8)&255;HEAP8[$159+2>>0]=($158>>16)&255;HEAP8[$159+3>>0]=$158>>24;
      }
     }
    } while(0);
    $160 = $__ul;
    $161 = (($160) + 1)|0;
    $__ul = $161;
   }
   if ((label|0) == 28) {
    ___assert_fail((4526|0),(4322|0),6992,(12631|0));
    // unreachable;
   }
   else if ((label|0) == 36) {
    ___assert_fail((4369|0),(4322|0),6992,(12631|0));
    // unreachable;
   }
  }
 } while(0);
 $__bucket4 = 0;
 $__ul5 = 0;
 $162 = $valid;
 $163 = ((($162)) + 20|0);
 $164 = HEAPU8[$163>>0]|(HEAPU8[$163+1>>0]<<8)|(HEAPU8[$163+2>>0]<<16)|(HEAPU8[$163+3>>0]<<24);
 $165 = ($164|0)!=(0|0);
 L56: do {
  if ($165) {
   $__ul5 = 0;
   L58: while(1) {
    $166 = $__ul5;
    $167 = $valid;
    $168 = ((($167)) + 12|0);
    $169 = HEAPU8[$168>>0]|(HEAPU8[$168+1>>0]<<8)|(HEAPU8[$168+2>>0]<<16)|(HEAPU8[$168+3>>0]<<24);
    $170 = ($166>>>0)<($169>>>0);
    if (!($170)) {
     break L56;
    }
    $171 = $__ul5;
    $172 = $valid;
    $173 = ((($172)) + 20|0);
    $174 = HEAPU8[$173>>0]|(HEAPU8[$173+1>>0]<<8)|(HEAPU8[$173+2>>0]<<16)|(HEAPU8[$173+3>>0]<<24);
    $175 = (($174) + ($171<<2)|0);
    $176 = HEAP32[$175>>2]|0;
    $__bucket4 = $176;
    $177 = $__bucket4;
    $178 = ($177|0)!=(0|0);
    L61: do {
     if ($178) {
      $179 = $__bucket4;
      $__lst6 = $179;
      $__opresult7 = 0;
      $__tmp8 = 0;
      $180 = $__bucket4;
      $181 = ($180|0)!=(0|0);
      if (!($181)) {
       label = 43;
       break L58;
      }
      $182 = $__lst6;
      $183 = ((($182)) + 8|0);
      $184 = HEAPU8[$183>>0]|(HEAPU8[$183+1>>0]<<8)|(HEAPU8[$183+2>>0]<<16)|(HEAPU8[$183+3>>0]<<24);
      $__lst6 = $184;
      while(1) {
       $185 = $__lst6;
       $186 = ($185|0)!=(0|0);
       if (!($186)) {
        break L61;
       }
       $187 = $__lst6;
       $188 = HEAPU8[$187>>0]|(HEAPU8[$187+1>>0]<<8)|(HEAPU8[$187+2>>0]<<16)|(HEAPU8[$187+3>>0]<<24);
       $189 = $__lst6;
       $190 = ((($189)) + 12|0);
       $191 = HEAPU8[$190>>0]|(HEAPU8[$190+1>>0]<<8)|(HEAPU8[$190+2>>0]<<16)|(HEAPU8[$190+3>>0]<<24);
       $192 = $gc;
       $193 = ((($192)) + 4|0);
       $194 = HEAPU8[$193>>0]|(HEAPU8[$193+1>>0]<<8)|(HEAPU8[$193+2>>0]<<16)|(HEAPU8[$193+3>>0]<<24);
       (__ht_remove_existing($188,$191,$194)|0);
       $195 = $__lst6;
       $196 = HEAPU8[$195>>0]|(HEAPU8[$195+1>>0]<<8)|(HEAPU8[$195+2>>0]<<16)|(HEAPU8[$195+3>>0]<<24);
       $197 = $__lst6;
       $198 = ((($197)) + 12|0);
       $199 = HEAPU8[$198>>0]|(HEAPU8[$198+1>>0]<<8)|(HEAPU8[$198+2>>0]<<16)|(HEAPU8[$198+3>>0]<<24);
       $200 = (__do_nothing_on_object($196,$199)|0);
       $__opresult7 = $200;
       $201 = $__lst6;
       $__tmp8 = $201;
       $202 = $__lst6;
       $203 = ((($202)) + 8|0);
       $204 = HEAPU8[$203>>0]|(HEAPU8[$203+1>>0]<<8)|(HEAPU8[$203+2>>0]<<16)|(HEAPU8[$203+3>>0]<<24);
       $__lst6 = $204;
       $205 = $__opresult7;
       $206 = (-1)==($205|0);
       if (!($206)) {
        continue;
       }
       $207 = $__lst6;
       $208 = $__tmp8;
       $209 = ((($208)) + 4|0);
       $210 = HEAPU8[$209>>0]|(HEAPU8[$209+1>>0]<<8)|(HEAPU8[$209+2>>0]<<16)|(HEAPU8[$209+3>>0]<<24);
       $211 = ((($210)) + 8|0);
       HEAP8[$211>>0]=$207&255;HEAP8[$211+1>>0]=($207>>8)&255;HEAP8[$211+2>>0]=($207>>16)&255;HEAP8[$211+3>>0]=$207>>24;
       $212 = $__lst6;
       $213 = ($212|0)!=(0|0);
       if ($213) {
        $214 = $__tmp8;
        $215 = ((($214)) + 4|0);
        $216 = HEAPU8[$215>>0]|(HEAPU8[$215+1>>0]<<8)|(HEAPU8[$215+2>>0]<<16)|(HEAPU8[$215+3>>0]<<24);
        $217 = $__lst6;
        $218 = ((($217)) + 4|0);
        HEAP8[$218>>0]=$216&255;HEAP8[$218+1>>0]=($216>>8)&255;HEAP8[$218+2>>0]=($216>>16)&255;HEAP8[$218+3>>0]=$216>>24;
       }
       $219 = $__tmp8;
       $220 = ($219|0)!=(0|0);
       if (!($220)) {
        label = 51;
        break L58;
       }
       $221 = $__tmp8;
       _mb_free($221);
       $__tmp8 = 0;
       $222 = $__bucket4;
       $223 = HEAPU8[$222>>0]|(HEAPU8[$222+1>>0]<<8)|(HEAPU8[$222+2>>0]<<16)|(HEAPU8[$222+3>>0]<<24);
       $224 = ((($223)) + -1|0);
       $225 = $__bucket4;
       HEAP8[$225>>0]=$224&255;HEAP8[$225+1>>0]=($224>>8)&255;HEAP8[$225+2>>0]=($224>>16)&255;HEAP8[$225+3>>0]=$224>>24;
      }
     }
    } while(0);
    $226 = $__ul5;
    $227 = (($226) + 1)|0;
    $__ul5 = $227;
   }
   if ((label|0) == 43) {
    ___assert_fail((4526|0),(4322|0),6993,(12631|0));
    // unreachable;
   }
   else if ((label|0) == 51) {
    ___assert_fail((4369|0),(4322|0),6993,(12631|0));
    // unreachable;
   }
  }
 } while(0);
 L77: while(1) {
  $__bucket9 = 0;
  $__ul10 = 0;
  $228 = $gc;
  $229 = HEAPU8[$228>>0]|(HEAPU8[$228+1>>0]<<8)|(HEAPU8[$228+2>>0]<<16)|(HEAPU8[$228+3>>0]<<24);
  $230 = ((($229)) + 20|0);
  $231 = HEAPU8[$230>>0]|(HEAPU8[$230+1>>0]<<8)|(HEAPU8[$230+2>>0]<<16)|(HEAPU8[$230+3>>0]<<24);
  $232 = ($231|0)!=(0|0);
  L79: do {
   if ($232) {
    $__ul10 = 0;
    while(1) {
     $233 = $__ul10;
     $234 = $gc;
     $235 = HEAPU8[$234>>0]|(HEAPU8[$234+1>>0]<<8)|(HEAPU8[$234+2>>0]<<16)|(HEAPU8[$234+3>>0]<<24);
     $236 = ((($235)) + 12|0);
     $237 = HEAPU8[$236>>0]|(HEAPU8[$236+1>>0]<<8)|(HEAPU8[$236+2>>0]<<16)|(HEAPU8[$236+3>>0]<<24);
     $238 = ($233>>>0)<($237>>>0);
     if (!($238)) {
      break L79;
     }
     $239 = $__ul10;
     $240 = $gc;
     $241 = HEAPU8[$240>>0]|(HEAPU8[$240+1>>0]<<8)|(HEAPU8[$240+2>>0]<<16)|(HEAPU8[$240+3>>0]<<24);
     $242 = ((($241)) + 20|0);
     $243 = HEAPU8[$242>>0]|(HEAPU8[$242+1>>0]<<8)|(HEAPU8[$242+2>>0]<<16)|(HEAPU8[$242+3>>0]<<24);
     $244 = (($243) + ($239<<2)|0);
     $245 = HEAP32[$244>>2]|0;
     $__bucket9 = $245;
     $246 = $__bucket9;
     $247 = ($246|0)!=(0|0);
     L84: do {
      if ($247) {
       $248 = $__bucket9;
       $__lst11 = $248;
       $__opresult12 = 0;
       $__tmp13 = 0;
       $249 = $__bucket9;
       $250 = ($249|0)!=(0|0);
       if (!($250)) {
        label = 59;
        break L77;
       }
       $251 = $__lst11;
       $252 = ((($251)) + 8|0);
       $253 = HEAPU8[$252>>0]|(HEAPU8[$252+1>>0]<<8)|(HEAPU8[$252+2>>0]<<16)|(HEAPU8[$252+3>>0]<<24);
       $__lst11 = $253;
       while(1) {
        $254 = $__lst11;
        $255 = ($254|0)!=(0|0);
        if (!($255)) {
         break L84;
        }
        $256 = $__lst11;
        $257 = HEAPU8[$256>>0]|(HEAPU8[$256+1>>0]<<8)|(HEAPU8[$256+2>>0]<<16)|(HEAPU8[$256+3>>0]<<24);
        $258 = $__lst11;
        $259 = ((($258)) + 12|0);
        $260 = HEAPU8[$259>>0]|(HEAPU8[$259+1>>0]<<8)|(HEAPU8[$259+2>>0]<<16)|(HEAPU8[$259+3>>0]<<24);
        $261 = $0;
        $262 = ((($261)) + 21|0);
        (__gc_destroy_garbage_class($257,$260,$262)|0);
        $263 = $__lst11;
        $264 = HEAPU8[$263>>0]|(HEAPU8[$263+1>>0]<<8)|(HEAPU8[$263+2>>0]<<16)|(HEAPU8[$263+3>>0]<<24);
        $265 = $__lst11;
        $266 = ((($265)) + 12|0);
        $267 = HEAPU8[$266>>0]|(HEAPU8[$266+1>>0]<<8)|(HEAPU8[$266+2>>0]<<16)|(HEAPU8[$266+3>>0]<<24);
        $268 = (__do_nothing_on_object($264,$267)|0);
        $__opresult12 = $268;
        $269 = $__lst11;
        $__tmp13 = $269;
        $270 = $__lst11;
        $271 = ((($270)) + 8|0);
        $272 = HEAPU8[$271>>0]|(HEAPU8[$271+1>>0]<<8)|(HEAPU8[$271+2>>0]<<16)|(HEAPU8[$271+3>>0]<<24);
        $__lst11 = $272;
        $273 = $__opresult12;
        $274 = (-1)==($273|0);
        if (!($274)) {
         continue;
        }
        $275 = $__lst11;
        $276 = $__tmp13;
        $277 = ((($276)) + 4|0);
        $278 = HEAPU8[$277>>0]|(HEAPU8[$277+1>>0]<<8)|(HEAPU8[$277+2>>0]<<16)|(HEAPU8[$277+3>>0]<<24);
        $279 = ((($278)) + 8|0);
        HEAP8[$279>>0]=$275&255;HEAP8[$279+1>>0]=($275>>8)&255;HEAP8[$279+2>>0]=($275>>16)&255;HEAP8[$279+3>>0]=$275>>24;
        $280 = $__lst11;
        $281 = ($280|0)!=(0|0);
        if ($281) {
         $282 = $__tmp13;
         $283 = ((($282)) + 4|0);
         $284 = HEAPU8[$283>>0]|(HEAPU8[$283+1>>0]<<8)|(HEAPU8[$283+2>>0]<<16)|(HEAPU8[$283+3>>0]<<24);
         $285 = $__lst11;
         $286 = ((($285)) + 4|0);
         HEAP8[$286>>0]=$284&255;HEAP8[$286+1>>0]=($284>>8)&255;HEAP8[$286+2>>0]=($284>>16)&255;HEAP8[$286+3>>0]=$284>>24;
        }
        $287 = $__tmp13;
        $288 = ($287|0)!=(0|0);
        if (!($288)) {
         label = 67;
         break L77;
        }
        $289 = $__tmp13;
        _mb_free($289);
        $__tmp13 = 0;
        $290 = $__bucket9;
        $291 = HEAPU8[$290>>0]|(HEAPU8[$290+1>>0]<<8)|(HEAPU8[$290+2>>0]<<16)|(HEAPU8[$290+3>>0]<<24);
        $292 = ((($291)) + -1|0);
        $293 = $__bucket9;
        HEAP8[$293>>0]=$292&255;HEAP8[$293+1>>0]=($292>>8)&255;HEAP8[$293+2>>0]=($292>>16)&255;HEAP8[$293+3>>0]=$292>>24;
       }
      }
     } while(0);
     $294 = $__ul10;
     $295 = (($294) + 1)|0;
     $__ul10 = $295;
    }
   }
  } while(0);
  $__bucket14 = 0;
  $__ul15 = 0;
  $296 = $gc;
  $297 = HEAPU8[$296>>0]|(HEAPU8[$296+1>>0]<<8)|(HEAPU8[$296+2>>0]<<16)|(HEAPU8[$296+3>>0]<<24);
  $298 = ((($297)) + 20|0);
  $299 = HEAPU8[$298>>0]|(HEAPU8[$298+1>>0]<<8)|(HEAPU8[$298+2>>0]<<16)|(HEAPU8[$298+3>>0]<<24);
  $300 = ($299|0)!=(0|0);
  L97: do {
   if ($300) {
    $__ul15 = 0;
    while(1) {
     $301 = $__ul15;
     $302 = $gc;
     $303 = HEAPU8[$302>>0]|(HEAPU8[$302+1>>0]<<8)|(HEAPU8[$302+2>>0]<<16)|(HEAPU8[$302+3>>0]<<24);
     $304 = ((($303)) + 12|0);
     $305 = HEAPU8[$304>>0]|(HEAPU8[$304+1>>0]<<8)|(HEAPU8[$304+2>>0]<<16)|(HEAPU8[$304+3>>0]<<24);
     $306 = ($301>>>0)<($305>>>0);
     if (!($306)) {
      break L97;
     }
     $307 = $__ul15;
     $308 = $gc;
     $309 = HEAPU8[$308>>0]|(HEAPU8[$308+1>>0]<<8)|(HEAPU8[$308+2>>0]<<16)|(HEAPU8[$308+3>>0]<<24);
     $310 = ((($309)) + 20|0);
     $311 = HEAPU8[$310>>0]|(HEAPU8[$310+1>>0]<<8)|(HEAPU8[$310+2>>0]<<16)|(HEAPU8[$310+3>>0]<<24);
     $312 = (($311) + ($307<<2)|0);
     $313 = HEAP32[$312>>2]|0;
     $__bucket14 = $313;
     $314 = $__bucket14;
     $315 = ($314|0)!=(0|0);
     L102: do {
      if ($315) {
       $316 = $__bucket14;
       $__lst16 = $316;
       $__opresult17 = 0;
       $__tmp18 = 0;
       $317 = $__bucket14;
       $318 = ($317|0)!=(0|0);
       if (!($318)) {
        label = 74;
        break L77;
       }
       $319 = $__lst16;
       $320 = ((($319)) + 8|0);
       $321 = HEAPU8[$320>>0]|(HEAPU8[$320+1>>0]<<8)|(HEAPU8[$320+2>>0]<<16)|(HEAPU8[$320+3>>0]<<24);
       $__lst16 = $321;
       while(1) {
        $322 = $__lst16;
        $323 = ($322|0)!=(0|0);
        if (!($323)) {
         break L102;
        }
        $324 = $__lst16;
        $325 = HEAPU8[$324>>0]|(HEAPU8[$324+1>>0]<<8)|(HEAPU8[$324+2>>0]<<16)|(HEAPU8[$324+3>>0]<<24);
        $326 = $__lst16;
        $327 = ((($326)) + 12|0);
        $328 = HEAPU8[$327>>0]|(HEAPU8[$327+1>>0]<<8)|(HEAPU8[$327+2>>0]<<16)|(HEAPU8[$327+3>>0]<<24);
        $329 = $0;
        $330 = ((($329)) + 21|0);
        (__gc_destroy_garbage($325,$328,$330)|0);
        $331 = $__lst16;
        $332 = HEAPU8[$331>>0]|(HEAPU8[$331+1>>0]<<8)|(HEAPU8[$331+2>>0]<<16)|(HEAPU8[$331+3>>0]<<24);
        $333 = $__lst16;
        $334 = ((($333)) + 12|0);
        $335 = HEAPU8[$334>>0]|(HEAPU8[$334+1>>0]<<8)|(HEAPU8[$334+2>>0]<<16)|(HEAPU8[$334+3>>0]<<24);
        $336 = (__do_nothing_on_object($332,$335)|0);
        $__opresult17 = $336;
        $337 = $__lst16;
        $__tmp18 = $337;
        $338 = $__lst16;
        $339 = ((($338)) + 8|0);
        $340 = HEAPU8[$339>>0]|(HEAPU8[$339+1>>0]<<8)|(HEAPU8[$339+2>>0]<<16)|(HEAPU8[$339+3>>0]<<24);
        $__lst16 = $340;
        $341 = $__opresult17;
        $342 = (-1)==($341|0);
        if (!($342)) {
         continue;
        }
        $343 = $__lst16;
        $344 = $__tmp18;
        $345 = ((($344)) + 4|0);
        $346 = HEAPU8[$345>>0]|(HEAPU8[$345+1>>0]<<8)|(HEAPU8[$345+2>>0]<<16)|(HEAPU8[$345+3>>0]<<24);
        $347 = ((($346)) + 8|0);
        HEAP8[$347>>0]=$343&255;HEAP8[$347+1>>0]=($343>>8)&255;HEAP8[$347+2>>0]=($343>>16)&255;HEAP8[$347+3>>0]=$343>>24;
        $348 = $__lst16;
        $349 = ($348|0)!=(0|0);
        if ($349) {
         $350 = $__tmp18;
         $351 = ((($350)) + 4|0);
         $352 = HEAPU8[$351>>0]|(HEAPU8[$351+1>>0]<<8)|(HEAPU8[$351+2>>0]<<16)|(HEAPU8[$351+3>>0]<<24);
         $353 = $__lst16;
         $354 = ((($353)) + 4|0);
         HEAP8[$354>>0]=$352&255;HEAP8[$354+1>>0]=($352>>8)&255;HEAP8[$354+2>>0]=($352>>16)&255;HEAP8[$354+3>>0]=$352>>24;
        }
        $355 = $__tmp18;
        $356 = ($355|0)!=(0|0);
        if (!($356)) {
         label = 82;
         break L77;
        }
        $357 = $__tmp18;
        _mb_free($357);
        $__tmp18 = 0;
        $358 = $__bucket14;
        $359 = HEAPU8[$358>>0]|(HEAPU8[$358+1>>0]<<8)|(HEAPU8[$358+2>>0]<<16)|(HEAPU8[$358+3>>0]<<24);
        $360 = ((($359)) + -1|0);
        $361 = $__bucket14;
        HEAP8[$361>>0]=$360&255;HEAP8[$361+1>>0]=($360>>8)&255;HEAP8[$361+2>>0]=($360>>16)&255;HEAP8[$361+3>>0]=$360>>24;
       }
      }
     } while(0);
     $362 = $__ul15;
     $363 = (($362) + 1)|0;
     $__ul15 = $363;
    }
   }
  } while(0);
  $__bucket19 = 0;
  $__ul20 = 0;
  $364 = $gc;
  $365 = HEAPU8[$364>>0]|(HEAPU8[$364+1>>0]<<8)|(HEAPU8[$364+2>>0]<<16)|(HEAPU8[$364+3>>0]<<24);
  $366 = ((($365)) + 20|0);
  $367 = HEAPU8[$366>>0]|(HEAPU8[$366+1>>0]<<8)|(HEAPU8[$366+2>>0]<<16)|(HEAPU8[$366+3>>0]<<24);
  $368 = ($367|0)!=(0|0);
  L115: do {
   if ($368) {
    $__ul20 = 0;
    while(1) {
     $369 = $__ul20;
     $370 = $gc;
     $371 = HEAPU8[$370>>0]|(HEAPU8[$370+1>>0]<<8)|(HEAPU8[$370+2>>0]<<16)|(HEAPU8[$370+3>>0]<<24);
     $372 = ((($371)) + 12|0);
     $373 = HEAPU8[$372>>0]|(HEAPU8[$372+1>>0]<<8)|(HEAPU8[$372+2>>0]<<16)|(HEAPU8[$372+3>>0]<<24);
     $374 = ($369>>>0)<($373>>>0);
     if (!($374)) {
      break L115;
     }
     $375 = $__ul20;
     $376 = $gc;
     $377 = HEAPU8[$376>>0]|(HEAPU8[$376+1>>0]<<8)|(HEAPU8[$376+2>>0]<<16)|(HEAPU8[$376+3>>0]<<24);
     $378 = ((($377)) + 20|0);
     $379 = HEAPU8[$378>>0]|(HEAPU8[$378+1>>0]<<8)|(HEAPU8[$378+2>>0]<<16)|(HEAPU8[$378+3>>0]<<24);
     $380 = (($379) + ($375<<2)|0);
     $381 = HEAP32[$380>>2]|0;
     $__bucket19 = $381;
     $382 = $__bucket19;
     $383 = ($382|0)!=(0|0);
     L120: do {
      if ($383) {
       $384 = $__bucket19;
       $__lst21 = $384;
       $__opresult22 = 0;
       $__tmp23 = 0;
       $385 = $__bucket19;
       $386 = ($385|0)!=(0|0);
       if (!($386)) {
        label = 89;
        break L77;
       }
       $387 = $__lst21;
       $388 = ((($387)) + 8|0);
       $389 = HEAPU8[$388>>0]|(HEAPU8[$388+1>>0]<<8)|(HEAPU8[$388+2>>0]<<16)|(HEAPU8[$388+3>>0]<<24);
       $__lst21 = $389;
       while(1) {
        $390 = $__lst21;
        $391 = ($390|0)!=(0|0);
        if (!($391)) {
         break L120;
        }
        $392 = $__lst21;
        $393 = HEAPU8[$392>>0]|(HEAPU8[$392+1>>0]<<8)|(HEAPU8[$392+2>>0]<<16)|(HEAPU8[$392+3>>0]<<24);
        $394 = $__lst21;
        $395 = ((($394)) + 12|0);
        $396 = HEAPU8[$395>>0]|(HEAPU8[$395+1>>0]<<8)|(HEAPU8[$395+2>>0]<<16)|(HEAPU8[$395+3>>0]<<24);
        $397 = $0;
        $398 = ((($397)) + 21|0);
        (__gc_destroy_garbage_outer_scope($393,$396,$398)|0);
        $399 = $__lst21;
        $400 = HEAPU8[$399>>0]|(HEAPU8[$399+1>>0]<<8)|(HEAPU8[$399+2>>0]<<16)|(HEAPU8[$399+3>>0]<<24);
        $401 = $__lst21;
        $402 = ((($401)) + 12|0);
        $403 = HEAPU8[$402>>0]|(HEAPU8[$402+1>>0]<<8)|(HEAPU8[$402+2>>0]<<16)|(HEAPU8[$402+3>>0]<<24);
        $404 = (__do_nothing_on_object($400,$403)|0);
        $__opresult22 = $404;
        $405 = $__lst21;
        $__tmp23 = $405;
        $406 = $__lst21;
        $407 = ((($406)) + 8|0);
        $408 = HEAPU8[$407>>0]|(HEAPU8[$407+1>>0]<<8)|(HEAPU8[$407+2>>0]<<16)|(HEAPU8[$407+3>>0]<<24);
        $__lst21 = $408;
        $409 = $__opresult22;
        $410 = (-1)==($409|0);
        if (!($410)) {
         continue;
        }
        $411 = $__lst21;
        $412 = $__tmp23;
        $413 = ((($412)) + 4|0);
        $414 = HEAPU8[$413>>0]|(HEAPU8[$413+1>>0]<<8)|(HEAPU8[$413+2>>0]<<16)|(HEAPU8[$413+3>>0]<<24);
        $415 = ((($414)) + 8|0);
        HEAP8[$415>>0]=$411&255;HEAP8[$415+1>>0]=($411>>8)&255;HEAP8[$415+2>>0]=($411>>16)&255;HEAP8[$415+3>>0]=$411>>24;
        $416 = $__lst21;
        $417 = ($416|0)!=(0|0);
        if ($417) {
         $418 = $__tmp23;
         $419 = ((($418)) + 4|0);
         $420 = HEAPU8[$419>>0]|(HEAPU8[$419+1>>0]<<8)|(HEAPU8[$419+2>>0]<<16)|(HEAPU8[$419+3>>0]<<24);
         $421 = $__lst21;
         $422 = ((($421)) + 4|0);
         HEAP8[$422>>0]=$420&255;HEAP8[$422+1>>0]=($420>>8)&255;HEAP8[$422+2>>0]=($420>>16)&255;HEAP8[$422+3>>0]=$420>>24;
        }
        $423 = $__tmp23;
        $424 = ($423|0)!=(0|0);
        if (!($424)) {
         label = 97;
         break L77;
        }
        $425 = $__tmp23;
        _mb_free($425);
        $__tmp23 = 0;
        $426 = $__bucket19;
        $427 = HEAPU8[$426>>0]|(HEAPU8[$426+1>>0]<<8)|(HEAPU8[$426+2>>0]<<16)|(HEAPU8[$426+3>>0]<<24);
        $428 = ((($427)) + -1|0);
        $429 = $__bucket19;
        HEAP8[$429>>0]=$428&255;HEAP8[$429+1>>0]=($428>>8)&255;HEAP8[$429+2>>0]=($428>>16)&255;HEAP8[$429+3>>0]=$428>>24;
       }
      }
     } while(0);
     $430 = $__ul20;
     $431 = (($430) + 1)|0;
     $__ul20 = $431;
    }
   }
  } while(0);
  $432 = $gc;
  $433 = HEAPU8[$432>>0]|(HEAPU8[$432+1>>0]<<8)|(HEAPU8[$432+2>>0]<<16)|(HEAPU8[$432+3>>0]<<24);
  __ht_clear($433);
  $434 = $gc;
  $435 = ((($434)) + 16|0);
  $436 = HEAP8[$435>>0]|0;
  $437 = $436&255;
  $438 = ($437|0)>(1);
  if ($438) {
   $439 = $gc;
   $440 = ((($439)) + 16|0);
   $441 = HEAP8[$440>>0]|0;
   $442 = (($441) + -1)<<24>>24;
   HEAP8[$440>>0] = $442;
  }
  $443 = $1;
  $444 = ($443|0)!=(0);
  if (!($444)) {
   label = 104;
   break;
  }
  $445 = $gc;
  $446 = ((($445)) + 4|0);
  $447 = HEAPU8[$446>>0]|(HEAPU8[$446+1>>0]<<8)|(HEAPU8[$446+2>>0]<<16)|(HEAPU8[$446+3>>0]<<24);
  $448 = (__ht_count($447)|0);
  $449 = ($448|0)!=(0);
  if (!($449)) {
   label = 104;
   break;
  }
  $450 = $0;
  __gc_swap_tables($450);
  $451 = $gc;
  $452 = ((($451)) + 16|0);
  $453 = HEAP8[$452>>0]|0;
  $454 = (($453) + 1)<<24>>24;
  HEAP8[$452>>0] = $454;
 }
 if ((label|0) == 59) {
  ___assert_fail((4526|0),(4322|0),6999,(12631|0));
  // unreachable;
 }
 else if ((label|0) == 67) {
  ___assert_fail((4369|0),(4322|0),6999,(12631|0));
  // unreachable;
 }
 else if ((label|0) == 74) {
  ___assert_fail((4526|0),(4322|0),7001,(12631|0));
  // unreachable;
 }
 else if ((label|0) == 82) {
  ___assert_fail((4369|0),(4322|0),7001,(12631|0));
  // unreachable;
 }
 else if ((label|0) == 89) {
  ___assert_fail((4526|0),(4322|0),7003,(12631|0));
  // unreachable;
 }
 else if ((label|0) == 97) {
  ___assert_fail((4369|0),(4322|0),7003,(12631|0));
  // unreachable;
 }
 else if ((label|0) == 104) {
  $455 = $gc;
  $456 = ((($455)) + 8|0);
  $457 = HEAPU8[$456>>0]|(HEAPU8[$456+1>>0]<<8)|(HEAPU8[$456+2>>0]<<16)|(HEAPU8[$456+3>>0]<<24);
  __ht_clear($457);
  $458 = $gc;
  $459 = ((($458)) + 12|0);
  HEAP8[$459>>0]=0&255;HEAP8[$459+1>>0]=(0>>8)&255;HEAP8[$459+2>>0]=(0>>16)&255;HEAP8[$459+3>>0]=0>>24;
  $460 = $valid;
  __ht_clear($460);
  $461 = $valid;
  __ht_destroy($461);
  $462 = $gc;
  $463 = ((($462)) + 16|0);
  $464 = HEAP8[$463>>0]|0;
  $465 = (($464) + -1)<<24>>24;
  HEAP8[$463>>0] = $465;
  $466 = $gc;
  $467 = ((($466)) + 16|0);
  $468 = HEAP8[$467>>0]|0;
  $469 = ($468<<24>>24)!=(0);
  if ($469) {
   ___assert_fail((12651|0),(4322|0),7023,(12631|0));
   // unreachable;
  }
  STACKTOP = sp;return;
 }
}
function __ht_destroy($ht) {
 $ht = $ht|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $ul = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $ht;
 $ul = 0;
 $1 = $0;
 $2 = ($1|0)!=(0|0);
 if (!($2)) {
  ___assert_fail((9706|0),(4322|0),3141,(12619|0));
  // unreachable;
 }
 $3 = $0;
 $4 = ((($3)) + 20|0);
 $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
 $6 = ($5|0)!=(0|0);
 do {
  if ($6) {
   $7 = $0;
   $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
   $9 = ($8|0)!=(0|0);
   if ($9) {
    $10 = $0;
    $11 = $0;
    $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
    (__ht_foreach($10,$12)|0);
   }
   $ul = 0;
   while(1) {
    $13 = $ul;
    $14 = $0;
    $15 = ((($14)) + 12|0);
    $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
    $17 = ($13>>>0)<($16>>>0);
    if (!($17)) {
     break;
    }
    $18 = $ul;
    $19 = $0;
    $20 = ((($19)) + 20|0);
    $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
    $22 = (($21) + ($18<<2)|0);
    $23 = HEAP32[$22>>2]|0;
    $24 = ($23|0)!=(0|0);
    if ($24) {
     $25 = $ul;
     $26 = $0;
     $27 = ((($26)) + 20|0);
     $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
     $29 = (($28) + ($25<<2)|0);
     $30 = HEAP32[$29>>2]|0;
     __ls_destroy($30);
    }
    $31 = $ul;
    $32 = (($31) + 1)|0;
    $ul = $32;
   }
   $33 = $0;
   $34 = ((($33)) + 20|0);
   $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
   $36 = ($35|0)!=(0|0);
   if ($36) {
    $37 = $0;
    $38 = ((($37)) + 20|0);
    $39 = HEAPU8[$38>>0]|(HEAPU8[$38+1>>0]<<8)|(HEAPU8[$38+2>>0]<<16)|(HEAPU8[$38+3>>0]<<24);
    _mb_free($39);
    $40 = $0;
    $41 = ((($40)) + 20|0);
    HEAP8[$41>>0]=0&255;HEAP8[$41+1>>0]=(0>>8)&255;HEAP8[$41+2>>0]=(0>>16)&255;HEAP8[$41+3>>0]=0>>24;
    break;
   } else {
    ___assert_fail((4369|0),(4322|0),3152,(12619|0));
    // unreachable;
   }
  }
 } while(0);
 $42 = $0;
 $43 = ($42|0)!=(0|0);
 if ($43) {
  $44 = $0;
  _mb_free($44);
  $0 = 0;
  STACKTOP = sp;return;
 } else {
  ___assert_fail((4369|0),(4322|0),3154,(12619|0));
  // unreachable;
 }
}
function __ls_count($list) {
 $list = $list|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $tmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $tmp = sp + 4|0;
 $0 = $list;
 $1 = $0;
 $2 = ($1|0)!=(0|0);
 if ($2) {
  $3 = $0;
  $4 = HEAPU8[$3>>0]|(HEAPU8[$3+1>>0]<<8)|(HEAPU8[$3+2>>0]<<16)|(HEAPU8[$3+3>>0]<<24);
  HEAP8[$tmp>>0]=$4&255;HEAP8[$tmp+1>>0]=($4>>8)&255;HEAP8[$tmp+2>>0]=($4>>16)&255;HEAP8[$tmp+3>>0]=$4>>24;
  $5 = HEAPU8[$tmp>>0]|(HEAPU8[$tmp+1>>0]<<8)|(HEAPU8[$tmp+2>>0]<<16)|(HEAPU8[$tmp+3>>0]<<24);
  STACKTOP = sp;return ($5|0);
 } else {
  ___assert_fail((8246|0),(4322|0),2690,(12609|0));
  // unreachable;
 }
 return (0)|0;
}
function __ls_foreach($list,$op) {
 $list = $list|0;
 $op = $op|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $idx = 0, $node = 0, $opresult = 0, $or$cond = 0, $tmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $list;
 $1 = $op;
 $idx = 0;
 $opresult = 0;
 $node = 0;
 $tmp = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 if (!($or$cond)) {
  ___assert_fail((12586|0),(4322|0),2578,(12597|0));
  // unreachable;
 }
 $6 = $0;
 $7 = ((($6)) + 8|0);
 $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
 $node = $8;
 while(1) {
  $9 = $node;
  $10 = ($9|0)!=(0|0);
  if (!($10)) {
   label = 11;
   break;
  }
  $11 = $1;
  $12 = $node;
  $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
  $14 = $node;
  $15 = ((($14)) + 12|0);
  $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
  $17 = (FUNCTION_TABLE_iii[$11 & 255]($13,$16)|0);
  $opresult = $17;
  $18 = $idx;
  $19 = (($18) + 1)|0;
  $idx = $19;
  $20 = $node;
  $tmp = $20;
  $21 = $node;
  $22 = ((($21)) + 8|0);
  $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
  $node = $23;
  $24 = $opresult;
  $25 = (-1)==($24|0);
  if (!($25)) {
   continue;
  }
  $26 = $node;
  $27 = $tmp;
  $28 = ((($27)) + 4|0);
  $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
  $30 = ((($29)) + 8|0);
  HEAP8[$30>>0]=$26&255;HEAP8[$30+1>>0]=($26>>8)&255;HEAP8[$30+2>>0]=($26>>16)&255;HEAP8[$30+3>>0]=$26>>24;
  $31 = $node;
  $32 = ($31|0)!=(0|0);
  if ($32) {
   $33 = $tmp;
   $34 = ((($33)) + 4|0);
   $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
   $36 = $node;
   $37 = ((($36)) + 4|0);
   HEAP8[$37>>0]=$35&255;HEAP8[$37+1>>0]=($35>>8)&255;HEAP8[$37+2>>0]=($35>>16)&255;HEAP8[$37+3>>0]=$35>>24;
  }
  $38 = $tmp;
  $39 = ($38|0)!=(0|0);
  if (!($39)) {
   label = 10;
   break;
  }
  $40 = $tmp;
  _mb_free($40);
  $tmp = 0;
  $41 = $0;
  $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
  $43 = ((($42)) + -1|0);
  $44 = $0;
  HEAP8[$44>>0]=$43&255;HEAP8[$44+1>>0]=($43>>8)&255;HEAP8[$44+2>>0]=($43>>16)&255;HEAP8[$44+3>>0]=$43>>24;
 }
 if ((label|0) == 10) {
  ___assert_fail((4369|0),(4322|0),2591,(12597|0));
  // unreachable;
 }
 else if ((label|0) == 11) {
  $45 = $idx;
  STACKTOP = sp;return ($45|0);
 }
 return (0)|0;
}
function __destroy_parsing_context($context) {
 $context = $context|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $context;
 $1 = $0;
 $2 = ($1|0)!=(0|0);
 if (!($2)) {
  STACKTOP = sp;return;
 }
 $3 = $0;
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)!=(0|0);
 if (!($5)) {
  STACKTOP = sp;return;
 }
 $6 = $0;
 $7 = HEAP32[$6>>2]|0;
 $8 = ($7|0)!=(0|0);
 if (!($8)) {
  STACKTOP = sp;return;
 }
 $9 = $0;
 $10 = HEAP32[$9>>2]|0;
 $11 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
 $12 = ($11|0)!=(0|0);
 if ($12) {
  $13 = $0;
  $14 = HEAP32[$13>>2]|0;
  $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
  (__ls_foreach($15,135)|0);
  $16 = $0;
  $17 = HEAP32[$16>>2]|0;
  $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
  __ls_destroy($18);
 }
 $19 = $0;
 $20 = HEAP32[$19>>2]|0;
 $21 = ($20|0)!=(0|0);
 if (!($21)) {
  ___assert_fail((4369|0),(4322|0),11792,(12561|0));
  // unreachable;
 }
 $22 = $0;
 $23 = HEAP32[$22>>2]|0;
 _mb_free($23);
 $24 = $0;
 HEAP32[$24>>2] = 0;
 STACKTOP = sp;return;
}
function __ht_foreach($ht,$op) {
 $ht = $ht|0;
 $op = $op|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $bucket = 0, $result = 0, $ul = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $ht;
 $1 = $op;
 $result = 0;
 $bucket = 0;
 $ul = 0;
 $2 = $0;
 $3 = ((($2)) + 20|0);
 $4 = HEAPU8[$3>>0]|(HEAPU8[$3+1>>0]<<8)|(HEAPU8[$3+2>>0]<<16)|(HEAPU8[$3+3>>0]<<24);
 $5 = ($4|0)!=(0|0);
 if (!($5)) {
  $26 = $result;
  STACKTOP = sp;return ($26|0);
 }
 $ul = 0;
 while(1) {
  $6 = $ul;
  $7 = $0;
  $8 = ((($7)) + 12|0);
  $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
  $10 = ($6>>>0)<($9>>>0);
  if (!($10)) {
   break;
  }
  $11 = $ul;
  $12 = $0;
  $13 = ((($12)) + 20|0);
  $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
  $15 = (($14) + ($11<<2)|0);
  $16 = HEAP32[$15>>2]|0;
  $bucket = $16;
  $17 = $bucket;
  $18 = ($17|0)!=(0|0);
  if ($18) {
   $19 = $bucket;
   $20 = $1;
   $21 = (__ls_foreach($19,$20)|0);
   $22 = $result;
   $23 = (($22) + ($21))|0;
   $result = $23;
  }
  $24 = $ul;
  $25 = (($24) + 1)|0;
  $ul = $25;
 }
 $26 = $result;
 STACKTOP = sp;return ($26|0);
}
function __destroy_memory($data,$extra) {
 $data = $data|0;
 $extra = $extra|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $data;
 $1 = $extra;
 $result = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 if (!($3)) {
  ___assert_fail((6381|0),(4322|0),10202,(12545|0));
  // unreachable;
 }
 $4 = $0;
 $5 = ($4|0)!=(0|0);
 if ($5) {
  $6 = $0;
  _mb_free($6);
  $0 = 0;
  $7 = $result;
  STACKTOP = sp;return ($7|0);
 } else {
  ___assert_fail((4369|0),(4322|0),10204,(12545|0));
  // unreachable;
 }
 return (0)|0;
}
function __close_constant($s) {
 $s = $s|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $result = 0;
 $1 = $0;
 $2 = ($1|0)!=(0|0);
 if ($2) {
  $3 = $result;
  STACKTOP = sp;return ($3|0);
 } else {
  ___assert_fail((4803|0),(4322|0),12036,(12529|0));
  // unreachable;
 }
 return (0)|0;
}
function __ls_cmp_data($node,$info) {
 $node = $node|0;
 $info = $info|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $n = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $node;
 $1 = $info;
 $2 = $0;
 $n = $2;
 $3 = $n;
 $4 = HEAPU8[$3>>0]|(HEAPU8[$3+1>>0]<<8)|(HEAPU8[$3+2>>0]<<16)|(HEAPU8[$3+3>>0]<<24);
 $5 = $1;
 $6 = ($4|0)==($5|0);
 $7 = $6 ? 0 : 1;
 STACKTOP = sp;return ($7|0);
}
function __ls_try_remove($list,$info,$cmp,$op) {
 $list = $list|0;
 $info = $info|0;
 $cmp = $cmp|0;
 $op = $op|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $8 = 0, $9 = 0, $or$cond = 0, $result = 0, $tmp = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $list;
 $1 = $info;
 $2 = $cmp;
 $3 = $op;
 $result = 0;
 $tmp = 0;
 $4 = $0;
 $5 = ($4|0)!=(0|0);
 $6 = $2;
 $7 = ($6|0)!=(0|0);
 $or$cond = $5 & $7;
 if (!($or$cond)) {
  ___assert_fail((12502|0),(4322|0),2545,(12514|0));
  // unreachable;
 }
 $8 = $0;
 $9 = ((($8)) + 8|0);
 $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
 $tmp = $10;
 while(1) {
  $11 = $tmp;
  $12 = ($11|0)!=(0|0);
  if (!($12)) {
   label = 20;
   break;
  }
  $13 = $2;
  $14 = $tmp;
  $15 = $1;
  $16 = (FUNCTION_TABLE_iii[$13 & 255]($14,$15)|0);
  $17 = ($16|0)==(0);
  $18 = $tmp;
  if ($17) {
   break;
  }
  $74 = ((($18)) + 8|0);
  $75 = HEAPU8[$74>>0]|(HEAPU8[$74+1>>0]<<8)|(HEAPU8[$74+2>>0]<<16)|(HEAPU8[$74+3>>0]<<24);
  $tmp = $75;
 }
 if ((label|0) == 20) {
  $76 = $result;
  STACKTOP = sp;return ($76|0);
 }
 $19 = ((($18)) + 4|0);
 $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8)|(HEAPU8[$19+2>>0]<<16)|(HEAPU8[$19+3>>0]<<24);
 $21 = ($20|0)!=(0|0);
 if ($21) {
  $22 = $tmp;
  $23 = ((($22)) + 8|0);
  $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
  $25 = $tmp;
  $26 = ((($25)) + 4|0);
  $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
  $28 = ((($27)) + 8|0);
  HEAP8[$28>>0]=$24&255;HEAP8[$28+1>>0]=($24>>8)&255;HEAP8[$28+2>>0]=($24>>16)&255;HEAP8[$28+3>>0]=$24>>24;
 }
 $29 = $tmp;
 $30 = ((($29)) + 8|0);
 $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8)|(HEAPU8[$30+2>>0]<<16)|(HEAPU8[$30+3>>0]<<24);
 $32 = ($31|0)!=(0|0);
 if ($32) {
  $33 = $tmp;
  $34 = ((($33)) + 4|0);
  $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
  $36 = $tmp;
  $37 = ((($36)) + 8|0);
  $38 = HEAPU8[$37>>0]|(HEAPU8[$37+1>>0]<<8)|(HEAPU8[$37+2>>0]<<16)|(HEAPU8[$37+3>>0]<<24);
  $39 = ((($38)) + 4|0);
  HEAP8[$39>>0]=$35&255;HEAP8[$39+1>>0]=($35>>8)&255;HEAP8[$39+2>>0]=($35>>16)&255;HEAP8[$39+3>>0]=$35>>24;
 }
 $40 = $0;
 $41 = ((($40)) + 4|0);
 $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
 $43 = $tmp;
 $44 = ($42|0)==($43|0);
 if ($44) {
  $45 = $tmp;
  $46 = ((($45)) + 4|0);
  $47 = HEAPU8[$46>>0]|(HEAPU8[$46+1>>0]<<8)|(HEAPU8[$46+2>>0]<<16)|(HEAPU8[$46+3>>0]<<24);
  $48 = $0;
  $49 = ((($48)) + 4|0);
  HEAP8[$49>>0]=$47&255;HEAP8[$49+1>>0]=($47>>8)&255;HEAP8[$49+2>>0]=($47>>16)&255;HEAP8[$49+3>>0]=$47>>24;
 }
 $50 = $0;
 $51 = ((($50)) + 4|0);
 $52 = HEAPU8[$51>>0]|(HEAPU8[$51+1>>0]<<8)|(HEAPU8[$51+2>>0]<<16)|(HEAPU8[$51+3>>0]<<24);
 $53 = $0;
 $54 = ($52|0)==($53|0);
 if ($54) {
  $55 = $0;
  $56 = ((($55)) + 4|0);
  HEAP8[$56>>0]=0&255;HEAP8[$56+1>>0]=(0>>8)&255;HEAP8[$56+2>>0]=(0>>16)&255;HEAP8[$56+3>>0]=0>>24;
 }
 $57 = $3;
 $58 = ($57|0)!=(0|0);
 if ($58) {
  $59 = $3;
  $60 = $tmp;
  $61 = HEAPU8[$60>>0]|(HEAPU8[$60+1>>0]<<8)|(HEAPU8[$60+2>>0]<<16)|(HEAPU8[$60+3>>0]<<24);
  $62 = $tmp;
  $63 = ((($62)) + 12|0);
  $64 = HEAPU8[$63>>0]|(HEAPU8[$63+1>>0]<<8)|(HEAPU8[$63+2>>0]<<16)|(HEAPU8[$63+3>>0]<<24);
  (FUNCTION_TABLE_iii[$59 & 255]($61,$64)|0);
 }
 $65 = $tmp;
 $66 = ($65|0)!=(0|0);
 if (!($66)) {
  ___assert_fail((4369|0),(4322|0),2560,(12514|0));
  // unreachable;
 }
 $67 = $tmp;
 _mb_free($67);
 $tmp = 0;
 $68 = $result;
 $69 = (($68) + 1)|0;
 $result = $69;
 $70 = $0;
 $71 = HEAPU8[$70>>0]|(HEAPU8[$70+1>>0]<<8)|(HEAPU8[$70+2>>0]<<16)|(HEAPU8[$70+3>>0]<<24);
 $72 = ((($71)) + -1|0);
 $73 = $0;
 HEAP8[$73>>0]=$72&255;HEAP8[$73+1>>0]=($72>>8)&255;HEAP8[$73+2>>0]=($72>>16)&255;HEAP8[$73+3>>0]=$72>>24;
 $76 = $result;
 STACKTOP = sp;return ($76|0);
}
function __ls_clear($list) {
 $list = $list|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $tmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $list;
 $tmp = 0;
 $1 = $0;
 $2 = ($1|0)!=(0|0);
 if (!($2)) {
  ___assert_fail((8246|0),(4322|0),2710,(12492|0));
  // unreachable;
 }
 $3 = $0;
 HEAP8[$3>>0]=0&255;HEAP8[$3+1>>0]=(0>>8)&255;HEAP8[$3+2>>0]=(0>>16)&255;HEAP8[$3+3>>0]=0>>24;
 $4 = $0;
 $tmp = $4;
 $5 = $0;
 $6 = ((($5)) + 8|0);
 $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
 $0 = $7;
 $8 = $tmp;
 $9 = ((($8)) + 8|0);
 HEAP8[$9>>0]=0&255;HEAP8[$9+1>>0]=(0>>8)&255;HEAP8[$9+2>>0]=(0>>16)&255;HEAP8[$9+3>>0]=0>>24;
 $10 = $tmp;
 $11 = ((($10)) + 4|0);
 HEAP8[$11>>0]=0&255;HEAP8[$11+1>>0]=(0>>8)&255;HEAP8[$11+2>>0]=(0>>16)&255;HEAP8[$11+3>>0]=0>>24;
 while(1) {
  $12 = $0;
  $13 = ($12|0)!=(0|0);
  if (!($13)) {
   label = 8;
   break;
  }
  $14 = $0;
  $tmp = $14;
  $15 = $0;
  $16 = ((($15)) + 8|0);
  $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
  $0 = $17;
  $18 = $tmp;
  $19 = ($18|0)!=(0|0);
  if (!($19)) {
   label = 7;
   break;
  }
  $20 = $tmp;
  _mb_free($20);
  $tmp = 0;
 }
 if ((label|0) == 7) {
  ___assert_fail((4369|0),(4322|0),2722,(12492|0));
  // unreachable;
 }
 else if ((label|0) == 8) {
  STACKTOP = sp;return;
 }
}
function __clear_scope_chain($s) {
 $s = $s|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $prev = 0, $result = 0, $running = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $result = 0;
 $running = 0;
 $prev = 0;
 $1 = $0;
 $2 = ($1|0)!=(0|0);
 if (!($2)) {
  ___assert_fail((4803|0),(4322|0),10761,(12473|0));
  // unreachable;
 }
 $3 = $0;
 $4 = ((($3)) + 75|0);
 $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
 $running = $5;
 while(1) {
  $6 = $running;
  $7 = ($6|0)!=(0|0);
  if (!($7)) {
   break;
  }
  $8 = $running;
  $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
  $prev = $9;
  $10 = $running;
  $11 = ((($10)) + 8|0);
  $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
  (__ht_foreach($12,134)|0);
  $13 = $running;
  $14 = ((($13)) + 8|0);
  $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
  __ht_clear($15);
  $16 = $running;
  $17 = ((($16)) + 32|0);
  $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
  $19 = ($18|0)!=(0|0);
  if ($19) {
   $20 = $running;
   $21 = ((($20)) + 32|0);
   $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
   __ls_clear($22);
  }
  $23 = $result;
  $24 = (($23) + 1)|0;
  $result = $24;
  $25 = $prev;
  $running = $25;
 }
 $26 = $result;
 STACKTOP = sp;return ($26|0);
}
function __ht_clear($ht) {
 $ht = $ht|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $ul = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $ht;
 $ul = 0;
 $1 = $0;
 $2 = ($1|0)!=(0|0);
 if (!($2)) {
  ___assert_fail((9706|0),(4322|0),3127,(12463|0));
  // unreachable;
 }
 $3 = $0;
 $4 = ((($3)) + 20|0);
 $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
 $6 = ($5|0)!=(0|0);
 if (!($6)) {
  STACKTOP = sp;return;
 }
 $ul = 0;
 while(1) {
  $7 = $ul;
  $8 = $0;
  $9 = ((($8)) + 12|0);
  $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
  $11 = ($7>>>0)<($10>>>0);
  if (!($11)) {
   break;
  }
  $12 = $ul;
  $13 = $0;
  $14 = ((($13)) + 20|0);
  $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
  $16 = (($15) + ($12<<2)|0);
  $17 = HEAP32[$16>>2]|0;
  $18 = ($17|0)!=(0|0);
  if ($18) {
   $19 = $ul;
   $20 = $0;
   $21 = ((($20)) + 20|0);
   $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
   $23 = (($22) + ($19<<2)|0);
   $24 = HEAP32[$23>>2]|0;
   __ls_clear($24);
  }
  $25 = $ul;
  $26 = (($25) + 1)|0;
  $ul = $26;
 }
 $27 = $0;
 $28 = ((($27)) + 16|0);
 HEAP8[$28>>0]=0&255;HEAP8[$28+1>>0]=(0>>8)&255;HEAP8[$28+2>>0]=(0>>16)&255;HEAP8[$28+3>>0]=0>>24;
 STACKTOP = sp;return;
}
function __get_root_scope($scope) {
 $scope = $scope|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $scope;
 $result = 0;
 while(1) {
  $1 = $0;
  $2 = ($1|0)!=(0|0);
  if (!($2)) {
   break;
  }
  $3 = $0;
  $result = $3;
  $4 = $0;
  $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
  $0 = $5;
 }
 $6 = $result;
 STACKTOP = sp;return ($6|0);
}
function __ls_pushback($list,$data) {
 $list = $list|0;
 $data = $data|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $result = 0, $tmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $list;
 $1 = $data;
 $result = 0;
 $tmp = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 if (!($3)) {
  ___assert_fail((8246|0),(4322|0),2427,(12427|0));
  // unreachable;
 }
 $4 = $1;
 $5 = (__ls_create_node($4)|0);
 $result = $5;
 $6 = $0;
 $7 = (__ls_back($6)|0);
 $tmp = $7;
 $8 = $tmp;
 $9 = ($8|0)!=(0|0);
 if (!($9)) {
  $10 = $0;
  $tmp = $10;
 }
 $11 = $result;
 $12 = $tmp;
 $13 = ((($12)) + 8|0);
 HEAP8[$13>>0]=$11&255;HEAP8[$13+1>>0]=($11>>8)&255;HEAP8[$13+2>>0]=($11>>16)&255;HEAP8[$13+3>>0]=$11>>24;
 $14 = $tmp;
 $15 = $result;
 $16 = ((($15)) + 4|0);
 HEAP8[$16>>0]=$14&255;HEAP8[$16+1>>0]=($14>>8)&255;HEAP8[$16+2>>0]=($14>>16)&255;HEAP8[$16+3>>0]=$14>>24;
 $17 = $result;
 $18 = $0;
 $19 = ((($18)) + 4|0);
 HEAP8[$19>>0]=$17&255;HEAP8[$19+1>>0]=($17>>8)&255;HEAP8[$19+2>>0]=($17>>16)&255;HEAP8[$19+3>>0]=$17>>24;
 $20 = $0;
 $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
 $22 = ((($21)) + 1|0);
 $23 = $0;
 HEAP8[$23>>0]=$22&255;HEAP8[$23+1>>0]=($22>>8)&255;HEAP8[$23+2>>0]=($22>>16)&255;HEAP8[$23+3>>0]=$22>>24;
 $24 = $result;
 STACKTOP = sp;return ($24|0);
}
function __register_func($s,$n,$f,$local) {
 $s = $s|0;
 $n = $n|0;
 $f = $f|0;
 $local = $local|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0;
 var $exists = 0, $name = 0, $result = 0, $scope = 0, $tmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $s;
 $2 = $n;
 $3 = $f;
 $4 = $local;
 $result = 0;
 $scope = 0;
 $exists = 0;
 $name = 0;
 $5 = $1;
 $6 = ($5|0)!=(0|0);
 if (!($6)) {
  ___assert_fail((4803|0),(4322|0),11884,(12392|0));
  // unreachable;
 }
 $7 = $2;
 $8 = ($7|0)!=(0|0);
 if (!($8)) {
  $9 = $result;
  $0 = $9;
  $99 = $0;
  STACKTOP = sp;return ($99|0);
 }
 $10 = $2;
 $11 = $2;
 $12 = (_strlen($11)|0);
 $13 = (($12) + 1)|0;
 $14 = (_mb_strdup($10,$13)|0);
 $2 = $14;
 $15 = $2;
 (_mb_strupr($15)|0);
 $16 = $4;
 $17 = $16&255;
 $18 = ($17|0)!=(0);
 $19 = $1;
 if ($18) {
  $20 = ((($19)) + 47|0);
  $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
  $24 = $21;
 } else {
  $22 = ((($19)) + 51|0);
  $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
  $24 = $23;
 }
 $scope = $24;
 $25 = $1;
 $26 = ((($25)) + 59|0);
 $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
 $28 = ($27|0)!=(0|0);
 if ($28) {
  $29 = $1;
  $30 = $2;
  $31 = (__generate_func_name($29,$30,1)|0);
  $name = $31;
 }
 $32 = $name;
 $33 = ($32|0)!=(0|0);
 if (!($33)) {
  $34 = $2;
  $35 = $2;
  $36 = (_strlen($35)|0);
  $37 = (($36) + 1)|0;
  $38 = (_mb_strdup($34,$37)|0);
  $name = $38;
 }
 $39 = $scope;
 $40 = $name;
 $41 = (__ht_find($39,$40)|0);
 $exists = $41;
 $42 = $exists;
 $43 = ($42|0)!=(0|0);
 do {
  if ($43) {
   $52 = $1;
   (__set_current_error($52,1,0)|0);
   $53 = $name;
   $54 = ($53|0)!=(0|0);
   if ($54) {
    $55 = $name;
    _mb_free($55);
    $name = 0;
    break;
   } else {
    ___assert_fail((4369|0),(4322|0),11904,(12392|0));
    // unreachable;
   }
  } else {
   $44 = $scope;
   $45 = $name;
   $46 = $3;
   $47 = $46;
   $48 = $47;
   $49 = (__ht_set_or_insert($44,$45,$48)|0);
   $50 = $result;
   $51 = (($50) + ($49))|0;
   $result = $51;
  }
 } while(0);
 $56 = $1;
 $57 = ((($56)) + 59|0);
 $58 = HEAPU8[$57>>0]|(HEAPU8[$57+1>>0]<<8)|(HEAPU8[$57+2>>0]<<16)|(HEAPU8[$57+3>>0]<<24);
 $59 = ($58|0)!=(0|0);
 do {
  if ($59) {
   $tmp = 0;
   $60 = $1;
   $61 = ((($60)) + 55|0);
   $62 = HEAPU8[$61>>0]|(HEAPU8[$61+1>>0]<<8)|(HEAPU8[$61+2>>0]<<16)|(HEAPU8[$61+3>>0]<<24);
   $63 = $2;
   $64 = (__ht_find($62,$63)|0);
   $exists = $64;
   $65 = $exists;
   $66 = ($65|0)!=(0|0);
   if (!($66)) {
    $67 = $1;
    $68 = $2;
    $69 = (__generate_func_name($67,$68,0)|0);
    $name = $69;
    $70 = $1;
    $71 = ((($70)) + 55|0);
    $72 = HEAPU8[$71>>0]|(HEAPU8[$71+1>>0]<<8)|(HEAPU8[$71+2>>0]<<16)|(HEAPU8[$71+3>>0]<<24);
    $73 = $name;
    $74 = (__ls_create()|0);
    $75 = (__ht_set_or_insert($72,$73,$74)|0);
    $76 = $result;
    $77 = (($76) + ($75))|0;
    $result = $77;
   }
   $78 = $1;
   $79 = ((($78)) + 55|0);
   $80 = HEAPU8[$79>>0]|(HEAPU8[$79+1>>0]<<8)|(HEAPU8[$79+2>>0]<<16)|(HEAPU8[$79+3>>0]<<24);
   $81 = $2;
   $82 = (__ht_find($80,$81)|0);
   $exists = $82;
   $83 = $exists;
   $84 = HEAPU8[$83>>0]|(HEAPU8[$83+1>>0]<<8)|(HEAPU8[$83+2>>0]<<16)|(HEAPU8[$83+3>>0]<<24);
   $exists = $84;
   $85 = $exists;
   $86 = $1;
   $87 = (__ls_find($85,$86,141,0)|0);
   $tmp = $87;
   $88 = $tmp;
   $89 = ($88|0)!=(0|0);
   if ($89) {
    $94 = $1;
    (__set_current_error($94,1,0)|0);
    break;
   } else {
    $90 = $exists;
    $91 = $1;
    $92 = $3;
    $93 = (__create_module_func($91,$92)|0);
    (__ls_pushback($90,$93)|0);
    break;
   }
  }
 } while(0);
 $95 = $2;
 $96 = ($95|0)!=(0|0);
 if (!($96)) {
  ___assert_fail((4369|0),(4322|0),11925,(12392|0));
  // unreachable;
 }
 $97 = $2;
 _mb_free($97);
 $2 = 0;
 $98 = $result;
 $0 = $98;
 $99 = $0;
 STACKTOP = sp;return ($99|0);
}
function __remove_func($s,$n,$local) {
 $s = $s|0;
 $n = $n|0;
 $local = $local|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $8 = 0, $9 = 0, $exists = 0, $name = 0, $result = 0;
 var $scope = 0, $tmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $s;
 $2 = $n;
 $3 = $local;
 $result = 0;
 $scope = 0;
 $exists = 0;
 $name = 0;
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 if (!($5)) {
  ___assert_fail((4803|0),(4322|0),11937,(12335|0));
  // unreachable;
 }
 $6 = $2;
 $7 = ($6|0)!=(0|0);
 if (!($7)) {
  $8 = $result;
  $0 = $8;
  $76 = $0;
  STACKTOP = sp;return ($76|0);
 }
 $9 = $2;
 $10 = $2;
 $11 = (_strlen($10)|0);
 $12 = (($11) + 1)|0;
 $13 = (_mb_strdup($9,$12)|0);
 $2 = $13;
 $14 = $2;
 (_mb_strupr($14)|0);
 $15 = $3;
 $16 = $15&255;
 $17 = ($16|0)!=(0);
 $18 = $1;
 if ($17) {
  $19 = ((($18)) + 47|0);
  $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8)|(HEAPU8[$19+2>>0]<<16)|(HEAPU8[$19+3>>0]<<24);
  $23 = $20;
 } else {
  $21 = ((($18)) + 51|0);
  $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
  $23 = $22;
 }
 $scope = $23;
 $24 = $1;
 $25 = ((($24)) + 59|0);
 $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
 $27 = ($26|0)!=(0|0);
 if ($27) {
  $28 = $1;
  $29 = $2;
  $30 = (__generate_func_name($28,$29,1)|0);
  $name = $30;
 }
 $31 = $name;
 $32 = ($31|0)!=(0|0);
 if (!($32)) {
  $33 = $2;
  $34 = $2;
  $35 = (_strlen($34)|0);
  $36 = (($35) + 1)|0;
  $37 = (_mb_strdup($33,$36)|0);
  $name = $37;
 }
 $38 = $scope;
 $39 = $name;
 $40 = (__ht_find($38,$39)|0);
 $exists = $40;
 $41 = $exists;
 $42 = ($41|0)!=(0|0);
 if ($42) {
  $43 = $scope;
  $44 = $name;
  $45 = (__ht_remove($43,$44,142)|0);
  $46 = $result;
  $47 = (($46) + ($45))|0;
  $result = $47;
 } else {
  $48 = $1;
  (__set_current_error($48,2,0)|0);
 }
 $49 = $name;
 $50 = ($49|0)!=(0|0);
 if (!($50)) {
  ___assert_fail((4369|0),(4322|0),11957,(12335|0));
  // unreachable;
 }
 $51 = $name;
 _mb_free($51);
 $name = 0;
 $52 = $1;
 $53 = ((($52)) + 59|0);
 $54 = HEAPU8[$53>>0]|(HEAPU8[$53+1>>0]<<8)|(HEAPU8[$53+2>>0]<<16)|(HEAPU8[$53+3>>0]<<24);
 $55 = ($54|0)!=(0|0);
 if ($55) {
  $tmp = 0;
  $56 = $1;
  $57 = ((($56)) + 55|0);
  $58 = HEAPU8[$57>>0]|(HEAPU8[$57+1>>0]<<8)|(HEAPU8[$57+2>>0]<<16)|(HEAPU8[$57+3>>0]<<24);
  $59 = $2;
  $60 = (__ht_find($58,$59)|0);
  $exists = $60;
  $61 = $exists;
  $62 = ($61|0)!=(0|0);
  if ($62) {
   $63 = $exists;
   $64 = HEAPU8[$63>>0]|(HEAPU8[$63+1>>0]<<8)|(HEAPU8[$63+2>>0]<<16)|(HEAPU8[$63+3>>0]<<24);
   $exists = $64;
   $65 = $exists;
   $66 = $1;
   $67 = (__ls_find($65,$66,141,0)|0);
   $tmp = $67;
   $68 = $tmp;
   $69 = ($68|0)!=(0|0);
   if ($69) {
    $70 = $exists;
    $71 = $tmp;
    (__ls_remove($70,$71,139)|0);
   }
  }
 }
 $72 = $2;
 $73 = ($72|0)!=(0|0);
 if (!($73)) {
  ___assert_fail((4369|0),(4322|0),11972,(12335|0));
  // unreachable;
 }
 $74 = $2;
 _mb_free($74);
 $2 = 0;
 $75 = $result;
 $0 = $75;
 $76 = $0;
 STACKTOP = sp;return ($76|0);
}
function __set_current_error($s,$err,$f) {
 $s = $s|0;
 $err = $err|0;
 $f = $f|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $s;
 $2 = $err;
 $3 = $f;
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $6 = $2;
 $7 = ($6>>>0)>=(0);
 $or$cond = $5 & $7;
 if (!($or$cond)) {
  ___assert_fail((12302|0),(4322|0),4858,(12316|0));
  // unreachable;
 }
 $8 = $1;
 $9 = ((($8)) + 135|0);
 $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
 $11 = ($10|0)==(0);
 if ($11) {
  $12 = $2;
  $13 = $1;
  $14 = ((($13)) + 135|0);
  HEAP8[$14>>0]=$12&255;HEAP8[$14+1>>0]=($12>>8)&255;HEAP8[$14+2>>0]=($12>>16)&255;HEAP8[$14+3>>0]=$12>>24;
  $15 = $3;
  $16 = $1;
  $17 = ((($16)) + 139|0);
  HEAP8[$17>>0]=$15&255;HEAP8[$17+1>>0]=($15>>8)&255;HEAP8[$17+2>>0]=($15>>16)&255;HEAP8[$17+3>>0]=$15>>24;
  $0 = 1;
  $18 = $0;
  STACKTOP = sp;return ($18|0);
 } else {
  $0 = 0;
  $18 = $0;
  STACKTOP = sp;return ($18|0);
 }
 return (0)|0;
}
function __set_error_pos($s,$pos,$row,$col) {
 $s = $s|0;
 $pos = $pos|0;
 $row = $row|0;
 $col = $col|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $pos;
 $2 = $row;
 $3 = $col;
 $4 = $0;
 $5 = ($4|0)!=(0|0);
 if ($5) {
  $6 = $1;
  $7 = $0;
  $8 = ((($7)) + 143|0);
  HEAP8[$8>>0]=$6&255;HEAP8[$8+1>>0]=($6>>8)&255;HEAP8[$8+2>>0]=($6>>16)&255;HEAP8[$8+3>>0]=$6>>24;
  $9 = $2;
  $10 = $0;
  $11 = ((($10)) + 147|0);
  HEAP8[$11>>0]=$9&255;HEAP8[$11+1>>0]=$9>>8;
  $12 = $3;
  $13 = $0;
  $14 = ((($13)) + 149|0);
  HEAP8[$14>>0]=$12&255;HEAP8[$14+1>>0]=$12>>8;
  STACKTOP = sp;return;
 } else {
  ___assert_fail((4803|0),(4322|0),6008,(12287|0));
  // unreachable;
 }
}
function _mb_strdup($p,$s) {
 $p = $p|0;
 $s = $s|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $p;
 $1 = $s;
 $2 = $1;
 $3 = ($2|0)!=(0);
 if (!($3)) {
  $4 = $0;
  $5 = ((($4)) + -2|0);
  $6 = HEAP16[$5>>1]|0;
  $7 = $6&65535;
  $1 = $7;
 }
 $8 = $0;
 $9 = $1;
 $10 = (_mb_memdup($8,$9)|0);
 STACKTOP = sp;return ($10|0);
}
function __ls_popback($list) {
 $list = $list|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $result = 0, $tmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $list;
 $result = 0;
 $tmp = 0;
 $1 = $0;
 $2 = ($1|0)!=(0|0);
 if (!($2)) {
  ___assert_fail((8246|0),(4322|0),2446,(12275|0));
  // unreachable;
 }
 $3 = $0;
 $4 = (__ls_back($3)|0);
 $tmp = $4;
 $5 = $tmp;
 $6 = ($5|0)!=(0|0);
 if (!($6)) {
  $32 = $result;
  STACKTOP = sp;return ($32|0);
 }
 $7 = $tmp;
 $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
 $result = $8;
 $9 = $0;
 $10 = $tmp;
 $11 = ((($10)) + 4|0);
 $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
 $13 = ($9|0)!=($12|0);
 if ($13) {
  $14 = $tmp;
  $15 = ((($14)) + 4|0);
  $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
  $17 = $0;
  $18 = ((($17)) + 4|0);
  HEAP8[$18>>0]=$16&255;HEAP8[$18+1>>0]=($16>>8)&255;HEAP8[$18+2>>0]=($16>>16)&255;HEAP8[$18+3>>0]=$16>>24;
 } else {
  $19 = $0;
  $20 = ((($19)) + 4|0);
  HEAP8[$20>>0]=0&255;HEAP8[$20+1>>0]=(0>>8)&255;HEAP8[$20+2>>0]=(0>>16)&255;HEAP8[$20+3>>0]=0>>24;
 }
 $21 = $tmp;
 $22 = ((($21)) + 4|0);
 $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
 $24 = ((($23)) + 8|0);
 HEAP8[$24>>0]=0&255;HEAP8[$24+1>>0]=(0>>8)&255;HEAP8[$24+2>>0]=(0>>16)&255;HEAP8[$24+3>>0]=0>>24;
 $25 = $tmp;
 $26 = ($25|0)!=(0|0);
 if (!($26)) {
  ___assert_fail((4369|0),(4322|0),2456,(12275|0));
  // unreachable;
 }
 $27 = $tmp;
 _mb_free($27);
 $tmp = 0;
 $28 = $0;
 $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
 $30 = ((($29)) + -1|0);
 $31 = $0;
 HEAP8[$31>>0]=$30&255;HEAP8[$31+1>>0]=($30>>8)&255;HEAP8[$31+2>>0]=($30>>16)&255;HEAP8[$31+3>>0]=$30>>24;
 $32 = $result;
 STACKTOP = sp;return ($32|0);
}
function __core_open_bracket($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $ast = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $l;
 $result = 0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 $ast = $3;
 $4 = $ast;
 $5 = ($4|0)!=(0|0);
 if ($5) {
  $6 = $ast;
  $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
  $8 = ($7|0)!=(0|0);
  if ($8) {
   $9 = $0;
   $10 = (__set_current_error($9,50,12256)|0);
   $11 = ($10<<24>>24)!=(0);
   if (!($11)) {
    $29 = $result;
    STACKTOP = sp;return ($29|0);
   }
   $12 = $0;
   $13 = $ast;
   $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
   $15 = ((($14)) + 9|0);
   $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
   $17 = $ast;
   $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
   $19 = ((($18)) + 13|0);
   $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8);
   $21 = $ast;
   $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
   $23 = ((($22)) + 15|0);
   $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8);
   __set_error_pos($12,$16,$20,$24);
   $result = 3;
   $29 = $result;
   STACKTOP = sp;return ($29|0);
  }
 }
 $25 = $0;
 $26 = (__set_current_error($25,50,12256)|0);
 $27 = ($26<<24>>24)!=(0);
 if (!($27)) {
  $29 = $result;
  STACKTOP = sp;return ($29|0);
 }
 $28 = $0;
 __set_error_pos($28,0,0,0);
 $result = 3;
 $29 = $result;
 STACKTOP = sp;return ($29|0);
}
function __core_close_bracket($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $ast = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $l;
 $result = 0;
 $2 = $0;
 $3 = ((($2)) + 98|0);
 $4 = HEAPU8[$3>>0]|(HEAPU8[$3+1>>0]<<8)|(HEAPU8[$3+2>>0]<<16)|(HEAPU8[$3+3>>0]<<24);
 $5 = ($4|0)!=(0|0);
 if ($5) {
  $6 = $0;
  $7 = ((($6)) + 98|0);
  $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
  $9 = ((($8)) + 58|0);
  $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
  $11 = ($10|0)==(2);
  if ($11) {
   $12 = $0;
   $13 = $1;
   $14 = (__core_return($12,$13)|0);
   $result = $14;
   $42 = $result;
   STACKTOP = sp;return ($42|0);
  }
 }
 $15 = $1;
 $16 = HEAP32[$15>>2]|0;
 $ast = $16;
 $17 = $ast;
 $18 = ($17|0)!=(0|0);
 if ($18) {
  $19 = $ast;
  $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8)|(HEAPU8[$19+2>>0]<<16)|(HEAPU8[$19+3>>0]<<24);
  $21 = ($20|0)!=(0|0);
  if ($21) {
   $22 = $0;
   $23 = (__set_current_error($22,50,12236)|0);
   $24 = ($23<<24>>24)!=(0);
   if (!($24)) {
    $42 = $result;
    STACKTOP = sp;return ($42|0);
   }
   $25 = $0;
   $26 = $ast;
   $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
   $28 = ((($27)) + 9|0);
   $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
   $30 = $ast;
   $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8)|(HEAPU8[$30+2>>0]<<16)|(HEAPU8[$30+3>>0]<<24);
   $32 = ((($31)) + 13|0);
   $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8);
   $34 = $ast;
   $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
   $36 = ((($35)) + 15|0);
   $37 = HEAPU8[$36>>0]|(HEAPU8[$36+1>>0]<<8);
   __set_error_pos($25,$29,$33,$37);
   $result = 3;
   $42 = $result;
   STACKTOP = sp;return ($42|0);
  }
 }
 $38 = $0;
 $39 = (__set_current_error($38,50,12236)|0);
 $40 = ($39<<24>>24)!=(0);
 if (!($40)) {
  $42 = $result;
  STACKTOP = sp;return ($42|0);
 }
 $41 = $0;
 __set_error_pos($41,0,0,0);
 $result = 3;
 $42 = $result;
 STACKTOP = sp;return ($42|0);
}
function __multiline_statement($s) {
 $s = $s|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $s;
 $2 = $1;
 $3 = ((($2)) + 130|0);
 $4 = HEAPU8[$3>>0]|(HEAPU8[$3+1>>0]<<8)|(HEAPU8[$3+2>>0]<<16)|(HEAPU8[$3+3>>0]<<24);
 $5 = (__ls_empty($4)|0);
 $6 = ($5<<24>>24)!=(0);
 if ($6) {
  $0 = 0;
  $14 = $0;
  STACKTOP = sp;return ($14|0);
 } else {
  $7 = $1;
  $8 = ((($7)) + 130|0);
  $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
  $10 = (__ls_back($9)|0);
  $11 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
  $12 = $11;
  $13 = $12&255;
  $0 = $13;
  $14 = $0;
  STACKTOP = sp;return ($14|0);
 }
 return (0)|0;
}
function __assign_public_value($s,$tgt,$src,$pit) {
 $s = $s|0;
 $tgt = $tgt|0;
 $src = $src|0;
 $pit = $pit|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $8 = 0, $9 = 0, $nil = 0, $obj = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $obj = sp + 24|0;
 $nil = sp + 16|0;
 $0 = $s;
 $1 = $tgt;
 $2 = $src;
 $3 = $pit;
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 if (!($5)) {
  ___assert_fail((12211|0),(4322|0),10723,(12215|0));
  // unreachable;
 }
 $6 = $3;
 $7 = $6&255;
 $8 = ($7|0)!=(0);
 if ($8) {
  $9 = $0;
  $10 = $1;
  $11 = (__try_purge_it($9,$10,0)|0);
  $12 = $11&255;
  $13 = ($12|0)!=(0);
  if ($13) {
   STACKTOP = sp;return;
  }
 }
 dest=$obj; stop=dest+17|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
 HEAP8[$obj>>0]=0&255;HEAP8[$obj+1>>0]=(0>>8)&255;HEAP8[$obj+2>>0]=(0>>16)&255;HEAP8[$obj+3>>0]=0>>24;
 $14 = $1;
 (__public_value_to_internal_object($14,$obj)|0);
 $15 = HEAPU8[$obj>>0]|(HEAPU8[$obj+1>>0]<<8)|(HEAPU8[$obj+2>>0]<<16)|(HEAPU8[$obj+3>>0]<<24);
 L8: do {
  switch ($15|0) {
  case 7:  {
   $16 = ((($obj)) + 4|0);
   $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
   $18 = ((($obj)) + 4|0);
   $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
   (__unref($17,$19)|0);
   break;
  }
  case 10:  {
   $20 = ((($obj)) + 8|0);
   $21 = HEAP8[$20>>0]|0;
   $22 = $21 & 1;
   $23 = ($22<<24>>24)!=(0);
   if (!($23)) {
    $24 = ((($obj)) + 4|0);
    $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
    $26 = ((($obj)) + 4|0);
    $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
    (__unref($25,$27)|0);
   }
   break;
  }
  case 11:  {
   $28 = ((($obj)) + 4|0);
   $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
   $30 = ((($obj)) + 4|0);
   $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8)|(HEAPU8[$30+2>>0]<<16)|(HEAPU8[$30+3>>0]<<24);
   (__unref($29,$31)|0);
   break;
  }
  case 13:  {
   $32 = ((($obj)) + 4|0);
   $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
   $34 = ((($obj)) + 4|0);
   $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
   (__unref($33,$35)|0);
   break;
  }
  case 16:  {
   $36 = ((($obj)) + 8|0);
   $37 = HEAP8[$36>>0]|0;
   $38 = $37 & 1;
   $39 = ($38<<24>>24)!=(0);
   if (!($39)) {
    $40 = ((($obj)) + 4|0);
    $41 = HEAPU8[$40>>0]|(HEAPU8[$40+1>>0]<<8)|(HEAPU8[$40+2>>0]<<16)|(HEAPU8[$40+3>>0]<<24);
    $42 = ((($obj)) + 4|0);
    $43 = HEAPU8[$42>>0]|(HEAPU8[$42+1>>0]<<8)|(HEAPU8[$42+2>>0]<<16)|(HEAPU8[$42+3>>0]<<24);
    (__unref($41,$43)|0);
   }
   break;
  }
  case 17:  {
   $44 = ((($obj)) + 8|0);
   $45 = HEAP8[$44>>0]|0;
   $46 = $45 & 1;
   $47 = ($46<<24>>24)!=(0);
   if (!($47)) {
    $48 = ((($obj)) + 4|0);
    $49 = HEAPU8[$48>>0]|(HEAPU8[$48+1>>0]<<8)|(HEAPU8[$48+2>>0]<<16)|(HEAPU8[$48+3>>0]<<24);
    $50 = ((($49)) + 58|0);
    $51 = HEAPU8[$50>>0]|(HEAPU8[$50+1>>0]<<8)|(HEAPU8[$50+2>>0]<<16)|(HEAPU8[$50+3>>0]<<24);
    $52 = ($51|0)==(2);
    if ($52) {
     $53 = ((($obj)) + 4|0);
     $54 = HEAPU8[$53>>0]|(HEAPU8[$53+1>>0]<<8)|(HEAPU8[$53+2>>0]<<16)|(HEAPU8[$53+3>>0]<<24);
     $55 = ((($obj)) + 4|0);
     $56 = HEAPU8[$55>>0]|(HEAPU8[$55+1>>0]<<8)|(HEAPU8[$55+2>>0]<<16)|(HEAPU8[$55+3>>0]<<24);
     (__unref($54,$56)|0);
     break L8;
    }
   }
   $57 = ((($obj)) + 8|0);
   $58 = HEAP8[$57>>0]|0;
   $59 = $58 & 1;
   $60 = ($59<<24>>24)!=(0);
   if (!($60)) {
    $61 = ((($obj)) + 4|0);
    $62 = HEAPU8[$61>>0]|(HEAPU8[$61+1>>0]<<8)|(HEAPU8[$61+2>>0]<<16)|(HEAPU8[$61+3>>0]<<24);
    $63 = ((($62)) + 58|0);
    $64 = HEAPU8[$63>>0]|(HEAPU8[$63+1>>0]<<8)|(HEAPU8[$63+2>>0]<<16)|(HEAPU8[$63+3>>0]<<24);
    $65 = ($64|0)!=(2);
    if ($65) {
     $66 = ((($obj)) + 4|0);
     $67 = HEAPU8[$66>>0]|(HEAPU8[$66+1>>0]<<8)|(HEAPU8[$66+2>>0]<<16)|(HEAPU8[$66+3>>0]<<24);
     __destroy_routine(0,$67);
    }
   }
   break;
  }
  default: {
  }
  }
 } while(0);
 $68 = ((($nil)) + 4|0);
 ;HEAP8[$68>>0]=0|0;HEAP8[$68+1>>0]=0|0;HEAP8[$68+2>>0]=0|0;HEAP8[$68+3>>0]=0|0;
 HEAP8[$nil>>0]=0&255;HEAP8[$nil+1>>0]=(0>>8)&255;HEAP8[$nil+2>>0]=(0>>16)&255;HEAP8[$nil+3>>0]=0>>24;
 $69 = $2;
 $70 = ($69|0)!=(0|0);
 if (!($70)) {
  $2 = $nil;
 }
 $71 = $1;
 $72 = $2;
 ;HEAP8[$71>>0]=HEAP8[$72>>0]|0;HEAP8[$71+1>>0]=HEAP8[$72+1>>0]|0;HEAP8[$71+2>>0]=HEAP8[$72+2>>0]|0;HEAP8[$71+3>>0]=HEAP8[$72+3>>0]|0;HEAP8[$71+4>>0]=HEAP8[$72+4>>0]|0;HEAP8[$71+5>>0]=HEAP8[$72+5>>0]|0;HEAP8[$71+6>>0]=HEAP8[$72+6>>0]|0;HEAP8[$71+7>>0]=HEAP8[$72+7>>0]|0;
 $73 = $2;
 ;HEAP8[$73>>0]=HEAP8[$nil>>0]|0;HEAP8[$73+1>>0]=HEAP8[$nil+1>>0]|0;HEAP8[$73+2>>0]=HEAP8[$nil+2>>0]|0;HEAP8[$73+3>>0]=HEAP8[$nil+3>>0]|0;HEAP8[$73+4>>0]=HEAP8[$nil+4>>0]|0;HEAP8[$73+5>>0]=HEAP8[$nil+5>>0]|0;HEAP8[$73+6>>0]=HEAP8[$nil+6>>0]|0;HEAP8[$73+7>>0]=HEAP8[$nil+7>>0]|0;
 STACKTOP = sp;return;
}
function __ls_empty($list) {
 $list = $list|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $list;
 $result = 0;
 $1 = $0;
 $2 = ($1|0)!=(0|0);
 if ($2) {
  $3 = $0;
  $4 = ((($3)) + 8|0);
  $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
  $6 = (0|0)==($5|0);
  $7 = $6&1;
  $8 = $7&255;
  $result = $8;
  $9 = $result;
  STACKTOP = sp;return ($9|0);
 } else {
  ___assert_fail((8246|0),(4322|0),2700,(12201|0));
  // unreachable;
 }
 return (0)|0;
}
function __ls_back($node) {
 $node = $node|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $node;
 $1 = $0;
 $result = $1;
 $2 = $result;
 $3 = ((($2)) + 4|0);
 $4 = HEAPU8[$3>>0]|(HEAPU8[$3+1>>0]<<8)|(HEAPU8[$3+2>>0]<<16)|(HEAPU8[$3+3>>0]<<24);
 $result = $4;
 $5 = $result;
 STACKTOP = sp;return ($5|0);
}
function __calc_expression($s,$l,$val) {
 $s = $s|0;
 $l = $l|0;
 $val = $val|0;
 var $$sink = 0, $$sink12 = 0, $$sink13 = 0, $$sink14 = 0, $$sink15 = 0, $$sink16 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $1000 = 0, $1001 = 0, $1002 = 0, $1003 = 0, $1004 = 0, $1005 = 0, $1006 = 0, $1007 = 0, $1008 = 0, $1009 = 0;
 var $101 = 0, $1010 = 0, $1011 = 0, $1012 = 0, $1013 = 0, $1014 = 0, $1015 = 0, $1016 = 0, $1017 = 0, $1018 = 0, $1019 = 0, $102 = 0, $1020 = 0, $1021 = 0, $1022 = 0, $1023 = 0, $1024 = 0, $1025 = 0, $1026 = 0, $1027 = 0;
 var $1028 = 0, $1029 = 0, $103 = 0, $1030 = 0, $1031 = 0, $1032 = 0, $1033 = 0, $1034 = 0, $1035 = 0, $1036 = 0, $1037 = 0, $1038 = 0, $1039 = 0, $104 = 0, $1040 = 0, $1041 = 0, $1042 = 0, $1043 = 0, $1044 = 0, $1045 = 0;
 var $1046 = 0, $1047 = 0, $1048 = 0, $1049 = 0, $105 = 0, $1050 = 0, $1051 = 0, $1052 = 0, $1053 = 0, $1054 = 0, $1055 = 0, $1056 = 0, $1057 = 0, $1058 = 0, $1059 = 0, $106 = 0, $1060 = 0, $1061 = 0, $1062 = 0, $1063 = 0;
 var $1064 = 0, $1065 = 0, $1066 = 0, $1067 = 0, $1068 = 0, $1069 = 0, $107 = 0, $1070 = 0, $1071 = 0, $1072 = 0, $1073 = 0, $1074 = 0, $1075 = 0, $1076 = 0, $1077 = 0, $1078 = 0, $1079 = 0, $108 = 0, $1080 = 0, $1081 = 0;
 var $1082 = 0, $1083 = 0, $1084 = 0, $1085 = 0, $1086 = 0, $1087 = 0, $1088 = 0, $1089 = 0, $109 = 0, $1090 = 0, $1091 = 0, $1092 = 0, $1093 = 0, $1094 = 0, $1095 = 0, $1096 = 0, $1097 = 0, $1098 = 0, $1099 = 0, $11 = 0;
 var $110 = 0, $1100 = 0, $1101 = 0, $1102 = 0, $1103 = 0, $1104 = 0, $1105 = 0, $1106 = 0, $1107 = 0, $1108 = 0, $1109 = 0, $111 = 0, $1110 = 0, $1111 = 0, $1112 = 0, $1113 = 0, $1114 = 0, $1115 = 0, $1116 = 0, $1117 = 0;
 var $1118 = 0, $1119 = 0, $112 = 0, $1120 = 0, $1121 = 0, $1122 = 0, $1123 = 0, $1124 = 0, $1125 = 0, $1126 = 0, $1127 = 0, $1128 = 0, $1129 = 0, $113 = 0, $1130 = 0, $1131 = 0, $1132 = 0, $1133 = 0, $1134 = 0, $1135 = 0;
 var $1136 = 0, $1137 = 0, $1138 = 0, $1139 = 0, $114 = 0, $1140 = 0, $1141 = 0, $1142 = 0, $1143 = 0, $1144 = 0, $1145 = 0, $1146 = 0, $1147 = 0, $1148 = 0, $1149 = 0, $115 = 0, $1150 = 0, $1151 = 0, $1152 = 0, $1153 = 0;
 var $1154 = 0, $1155 = 0, $1156 = 0, $1157 = 0, $1158 = 0, $1159 = 0, $116 = 0, $1160 = 0, $1161 = 0, $1162 = 0, $1163 = 0, $1164 = 0, $1165 = 0, $1166 = 0, $1167 = 0, $1168 = 0, $1169 = 0, $117 = 0, $1170 = 0, $1171 = 0;
 var $1172 = 0, $1173 = 0, $1174 = 0, $1175 = 0, $1176 = 0, $1177 = 0, $1178 = 0, $1179 = 0, $118 = 0, $1180 = 0, $1181 = 0, $1182 = 0, $1183 = 0, $1184 = 0, $1185 = 0, $1186 = 0, $1187 = 0, $1188 = 0, $1189 = 0, $119 = 0;
 var $1190 = 0, $1191 = 0, $1192 = 0, $1193 = 0, $1194 = 0, $1195 = 0, $1196 = 0, $1197 = 0, $1198 = 0, $1199 = 0, $12 = 0, $120 = 0, $1200 = 0, $1201 = 0, $1202 = 0, $1203 = 0, $1204 = 0, $1205 = 0, $1206 = 0, $1207 = 0;
 var $1208 = 0, $1209 = 0, $121 = 0, $1210 = 0, $1211 = 0, $1212 = 0, $1213 = 0, $1214 = 0, $1215 = 0, $1216 = 0, $1217 = 0, $1218 = 0, $1219 = 0, $122 = 0, $1220 = 0, $1221 = 0, $1222 = 0, $1223 = 0, $1224 = 0, $1225 = 0;
 var $1226 = 0, $1227 = 0, $1228 = 0, $1229 = 0, $123 = 0, $1230 = 0, $1231 = 0, $1232 = 0, $1233 = 0, $1234 = 0, $1235 = 0, $1236 = 0, $1237 = 0, $1238 = 0, $1239 = 0, $124 = 0, $1240 = 0, $1241 = 0, $1242 = 0, $1243 = 0;
 var $1244 = 0, $1245 = 0, $1246 = 0, $1247 = 0, $1248 = 0, $1249 = 0, $125 = 0, $1250 = 0, $1251 = 0, $1252 = 0, $1253 = 0, $1254 = 0, $1255 = 0, $1256 = 0, $1257 = 0, $1258 = 0, $1259 = 0, $126 = 0, $1260 = 0, $1261 = 0;
 var $1262 = 0, $1263 = 0, $1264 = 0, $1265 = 0, $1266 = 0, $1267 = 0, $1268 = 0, $1269 = 0, $127 = 0, $1270 = 0, $1271 = 0, $1272 = 0, $1273 = 0, $1274 = 0, $1275 = 0, $1276 = 0, $1277 = 0, $1278 = 0, $1279 = 0, $128 = 0;
 var $1280 = 0, $1281 = 0, $1282 = 0, $1283 = 0, $1284 = 0, $1285 = 0, $1286 = 0, $1287 = 0, $1288 = 0, $1289 = 0, $129 = 0, $1290 = 0, $1291 = 0, $1292 = 0, $1293 = 0, $1294 = 0, $1295 = 0, $1296 = 0, $1297 = 0, $1298 = 0;
 var $1299 = 0, $13 = 0, $130 = 0, $1300 = 0, $1301 = 0, $1302 = 0, $1303 = 0, $1304 = 0, $1305 = 0, $1306 = 0, $1307 = 0, $1308 = 0, $1309 = 0, $131 = 0, $1310 = 0, $1311 = 0, $1312 = 0, $1313 = 0, $1314 = 0, $1315 = 0;
 var $1316 = 0, $1317 = 0, $1318 = 0, $1319 = 0, $132 = 0, $1320 = 0, $1321 = 0, $1322 = 0, $1323 = 0, $1324 = 0, $1325 = 0, $1326 = 0, $1327 = 0, $1328 = 0, $1329 = 0, $133 = 0, $1330 = 0, $1331 = 0, $1332 = 0, $1333 = 0;
 var $1334 = 0, $1335 = 0, $1336 = 0, $1337 = 0, $1338 = 0, $1339 = 0, $134 = 0, $1340 = 0, $1341 = 0, $1342 = 0, $1343 = 0, $1344 = 0, $1345 = 0, $1346 = 0, $1347 = 0, $1348 = 0, $1349 = 0, $135 = 0, $1350 = 0, $1351 = 0;
 var $1352 = 0, $1353 = 0, $1354 = 0, $1355 = 0, $1356 = 0, $1357 = 0, $1358 = 0, $1359 = 0, $136 = 0, $1360 = 0, $1361 = 0, $1362 = 0, $1363 = 0, $1364 = 0, $1365 = 0, $1366 = 0, $1367 = 0, $1368 = 0, $1369 = 0, $137 = 0;
 var $1370 = 0, $1371 = 0, $1372 = 0, $1373 = 0, $1374 = 0, $1375 = 0, $1376 = 0, $1377 = 0, $1378 = 0, $1379 = 0, $138 = 0, $1380 = 0, $1381 = 0, $1382 = 0, $1383 = 0, $1384 = 0, $1385 = 0, $1386 = 0, $1387 = 0, $1388 = 0;
 var $1389 = 0, $139 = 0, $1390 = 0, $1391 = 0, $1392 = 0, $1393 = 0, $1394 = 0, $1395 = 0, $1396 = 0, $1397 = 0, $1398 = 0, $1399 = 0, $14 = 0, $140 = 0, $1400 = 0, $1401 = 0, $1402 = 0, $1403 = 0, $1404 = 0, $1405 = 0;
 var $1406 = 0, $1407 = 0, $1408 = 0, $1409 = 0, $141 = 0, $1410 = 0, $1411 = 0, $1412 = 0, $1413 = 0, $1414 = 0, $1415 = 0, $1416 = 0, $1417 = 0, $1418 = 0, $1419 = 0, $142 = 0, $1420 = 0, $1421 = 0, $1422 = 0, $1423 = 0;
 var $1424 = 0, $1425 = 0, $1426 = 0, $1427 = 0, $1428 = 0, $1429 = 0, $143 = 0, $1430 = 0, $1431 = 0, $1432 = 0, $1433 = 0, $1434 = 0, $1435 = 0, $1436 = 0, $1437 = 0, $1438 = 0, $1439 = 0, $144 = 0, $1440 = 0, $1441 = 0;
 var $1442 = 0, $1443 = 0, $1444 = 0, $1445 = 0, $1446 = 0, $1447 = 0, $1448 = 0, $1449 = 0, $145 = 0, $1450 = 0, $1451 = 0, $1452 = 0, $1453 = 0, $1454 = 0, $1455 = 0, $1456 = 0, $1457 = 0, $1458 = 0, $1459 = 0, $146 = 0;
 var $1460 = 0, $1461 = 0, $1462 = 0, $1463 = 0, $1464 = 0, $1465 = 0, $1466 = 0, $1467 = 0, $1468 = 0, $1469 = 0, $147 = 0, $1470 = 0, $1471 = 0, $1472 = 0, $1473 = 0, $1474 = 0, $1475 = 0, $1476 = 0, $1477 = 0, $1478 = 0;
 var $1479 = 0, $148 = 0, $1480 = 0, $1481 = 0, $1482 = 0, $1483 = 0, $1484 = 0, $1485 = 0, $1486 = 0, $1487 = 0, $1488 = 0, $1489 = 0, $149 = 0, $1490 = 0, $1491 = 0, $1492 = 0, $1493 = 0, $1494 = 0, $1495 = 0, $1496 = 0;
 var $1497 = 0, $1498 = 0, $1499 = 0, $15 = 0, $150 = 0, $1500 = 0, $1501 = 0, $1502 = 0, $1503 = 0, $1504 = 0, $1505 = 0, $1506 = 0, $1507 = 0, $1508 = 0, $1509 = 0, $151 = 0, $1510 = 0, $1511 = 0, $1512 = 0, $1513 = 0;
 var $1514 = 0, $1515 = 0, $1516 = 0, $1517 = 0, $1518 = 0, $1519 = 0, $152 = 0, $1520 = 0, $1521 = 0, $1522 = 0, $1523 = 0, $1524 = 0, $1525 = 0, $1526 = 0, $1527 = 0, $1528 = 0, $1529 = 0, $153 = 0, $1530 = 0, $1531 = 0;
 var $1532 = 0, $1533 = 0, $1534 = 0, $1535 = 0, $1536 = 0, $1537 = 0, $1538 = 0, $1539 = 0, $154 = 0, $1540 = 0, $1541 = 0, $1542 = 0, $1543 = 0, $1544 = 0, $1545 = 0, $1546 = 0, $1547 = 0, $1548 = 0, $1549 = 0, $155 = 0;
 var $1550 = 0, $1551 = 0, $1552 = 0, $1553 = 0, $1554 = 0, $1555 = 0, $1556 = 0, $1557 = 0, $1558 = 0, $1559 = 0, $156 = 0, $1560 = 0, $1561 = 0, $1562 = 0, $1563 = 0, $1564 = 0, $1565 = 0, $1566 = 0, $1567 = 0, $1568 = 0;
 var $1569 = 0, $157 = 0, $1570 = 0, $1571 = 0, $1572 = 0, $1573 = 0, $1574 = 0, $1575 = 0, $1576 = 0, $1577 = 0, $1578 = 0, $1579 = 0, $158 = 0, $1580 = 0, $1581 = 0, $1582 = 0, $1583 = 0, $1584 = 0, $1585 = 0, $1586 = 0;
 var $1587 = 0, $1588 = 0, $1589 = 0, $159 = 0, $1590 = 0, $1591 = 0, $1592 = 0, $1593 = 0, $1594 = 0, $1595 = 0, $1596 = 0, $1597 = 0, $1598 = 0, $1599 = 0, $16 = 0, $160 = 0, $1600 = 0, $1601 = 0, $1602 = 0, $1603 = 0;
 var $1604 = 0, $1605 = 0, $1606 = 0, $1607 = 0, $1608 = 0, $1609 = 0, $161 = 0, $1610 = 0, $1611 = 0, $1612 = 0, $1613 = 0, $1614 = 0, $1615 = 0, $1616 = 0, $1617 = 0, $1618 = 0, $1619 = 0, $162 = 0, $1620 = 0, $1621 = 0;
 var $1622 = 0, $1623 = 0, $1624 = 0, $1625 = 0, $1626 = 0, $1627 = 0, $1628 = 0, $1629 = 0, $163 = 0, $1630 = 0, $1631 = 0, $1632 = 0, $1633 = 0, $1634 = 0, $1635 = 0, $1636 = 0, $1637 = 0, $1638 = 0, $1639 = 0, $164 = 0;
 var $1640 = 0, $1641 = 0, $1642 = 0, $1643 = 0, $1644 = 0, $1645 = 0, $1646 = 0, $1647 = 0, $1648 = 0, $1649 = 0, $165 = 0, $1650 = 0, $1651 = 0, $1652 = 0, $1653 = 0, $1654 = 0, $1655 = 0, $1656 = 0, $1657 = 0, $1658 = 0;
 var $1659 = 0, $166 = 0, $1660 = 0, $1661 = 0, $1662 = 0, $1663 = 0, $1664 = 0, $1665 = 0, $1666 = 0, $1667 = 0, $1668 = 0, $1669 = 0, $167 = 0, $1670 = 0, $1671 = 0, $1672 = 0, $1673 = 0, $1674 = 0, $1675 = 0, $1676 = 0;
 var $1677 = 0, $1678 = 0, $1679 = 0, $168 = 0, $1680 = 0, $1681 = 0, $1682 = 0, $1683 = 0, $1684 = 0, $1685 = 0, $1686 = 0, $1687 = 0, $1688 = 0, $1689 = 0, $169 = 0, $1690 = 0, $1691 = 0, $1692 = 0, $1693 = 0, $1694 = 0;
 var $1695 = 0, $1696 = 0, $1697 = 0, $1698 = 0, $1699 = 0, $17 = 0, $170 = 0, $1700 = 0, $1701 = 0, $1702 = 0, $1703 = 0, $1704 = 0, $1705 = 0, $1706 = 0, $1707 = 0, $1708 = 0, $1709 = 0, $171 = 0, $1710 = 0, $1711 = 0;
 var $1712 = 0, $1713 = 0, $1714 = 0, $1715 = 0, $1716 = 0, $1717 = 0, $1718 = 0, $1719 = 0, $172 = 0, $1720 = 0, $1721 = 0, $1722 = 0, $1723 = 0, $1724 = 0, $1725 = 0, $1726 = 0, $1727 = 0, $1728 = 0, $1729 = 0, $173 = 0;
 var $1730 = 0, $1731 = 0, $1732 = 0, $1733 = 0, $1734 = 0, $1735 = 0, $1736 = 0, $1737 = 0, $1738 = 0, $1739 = 0, $174 = 0, $1740 = 0, $1741 = 0, $1742 = 0, $1743 = 0, $1744 = 0, $1745 = 0, $1746 = 0, $1747 = 0, $1748 = 0;
 var $1749 = 0, $175 = 0, $1750 = 0, $1751 = 0, $1752 = 0, $1753 = 0, $1754 = 0, $1755 = 0, $1756 = 0, $1757 = 0, $1758 = 0, $1759 = 0, $176 = 0, $1760 = 0, $1761 = 0, $1762 = 0, $1763 = 0, $1764 = 0, $1765 = 0, $1766 = 0;
 var $1767 = 0, $1768 = 0, $1769 = 0, $177 = 0, $1770 = 0, $1771 = 0, $1772 = 0, $1773 = 0, $1774 = 0, $1775 = 0, $1776 = 0, $1777 = 0, $1778 = 0, $1779 = 0, $178 = 0, $1780 = 0, $1781 = 0, $1782 = 0, $1783 = 0, $179 = 0;
 var $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0;
 var $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0;
 var $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0;
 var $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0;
 var $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0;
 var $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0;
 var $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0;
 var $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0;
 var $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0;
 var $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0;
 var $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0;
 var $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0;
 var $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0;
 var $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0;
 var $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0;
 var $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0;
 var $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0;
 var $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0;
 var $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0;
 var $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0;
 var $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0;
 var $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0;
 var $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0;
 var $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0;
 var $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0;
 var $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0;
 var $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0;
 var $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0;
 var $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0;
 var $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0;
 var $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0;
 var $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0;
 var $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0;
 var $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0;
 var $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0;
 var $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0;
 var $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0.0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0;
 var $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0;
 var $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0;
 var $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0, $887 = 0, $888 = 0, $889 = 0, $89 = 0, $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0;
 var $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0, $904 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0, $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0;
 var $918 = 0, $919 = 0, $92 = 0, $920 = 0, $921 = 0, $922 = 0, $923 = 0, $924 = 0, $925 = 0, $926 = 0, $927 = 0, $928 = 0, $929 = 0, $93 = 0, $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0;
 var $936 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = 0, $940 = 0, $941 = 0, $942 = 0, $943 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0, $95 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0;
 var $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0, $959 = 0, $96 = 0, $960 = 0, $961 = 0, $962 = 0, $963 = 0, $964 = 0, $965 = 0, $966 = 0, $967 = 0, $968 = 0, $969 = 0, $97 = 0, $970 = 0, $971 = 0;
 var $972 = 0, $973 = 0, $974 = 0, $975 = 0, $976 = 0, $977 = 0, $978 = 0, $979 = 0, $98 = 0, $980 = 0, $981 = 0, $982 = 0, $983 = 0, $984 = 0, $985 = 0, $986 = 0, $987 = 0, $988 = 0, $989 = 0, $99 = 0;
 var $990 = 0, $991 = 0, $992 = 0, $993 = 0, $994 = 0, $995 = 0, $996 = 0, $997 = 0, $998 = 0, $999 = 0, $__lst = 0, $__lst8 = 0, $__opresult = 0, $__opresult9 = 0, $__tmp = 0, $__tmp10 = 0, $_cb = 0, $_cbf = 0, $_err_or_bracket = 0, $_fsn = 0;
 var $_str = 0, $a = 0, $arr_elem = 0, $arr_elem4 = 0, $arr_idx = 0, $arr_idx1 = 0, $arr_type = 0, $arr_type3 = 0, $arr_val = 0, $arr_val2 = 0, $ast = 0, $b = 0, $bracket_count = 0, $c = 0, $calc_depth = 0, $calling = 0, $cs = 0, $cs5 = 0, $errn = 0, $f = 0;
 var $fn = 0, $fn6 = 0, $garbage = 0, $gce = 0, $guard_val = 0, $hack = 0, $idx = 0, $inep = 0, $key = 0, $obj = 0, $obj7 = 0, $ocoll = 0, $opnd = 0, $optr = 0, $or$cond = 0, $or$cond11 = 0, $or$cond5 = 0, $or$cond7 = 0, $or$cond9 = 0, $pri = 0;
 var $r = 0, $result = 0, $ret = 0, $running = 0, $theta = 0, $x = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $result = sp + 160|0;
 $ast = sp + 156|0;
 $_cb = sp + 216|0;
 $_cbf = sp + 208|0;
 $arr_idx = sp + 84|0;
 $arr_val = sp + 200|0;
 $arr_type = sp + 80|0;
 $fn = sp + 64|0;
 $arr_idx1 = sp + 60|0;
 $arr_val2 = sp + 192|0;
 $arr_type3 = sp + 56|0;
 $fn6 = sp + 44|0;
 $idx = sp + 36|0;
 $key = sp + 184|0;
 $ret = sp + 176|0;
 $0 = $s;
 $1 = $l;
 $2 = $val;
 HEAP32[$result>>2] = 0;
 HEAP32[$ast>>2] = 0;
 $running = 0;
 $garbage = 0;
 $optr = 0;
 $opnd = 0;
 $c = 0;
 $x = 0;
 $a = 0;
 $b = 0;
 $r = 0;
 $theta = 0;
 $pri = 0;
 $inep = 0;
 $f = 0;
 $guard_val = 0;
 $bracket_count = 0;
 $hack = 0;
 $errn = 0;
 $gce = 1;
 $3 = $0;
 $4 = ($3|0)!=(0|0);
 $5 = $1;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),3756,(11374|0));
  // unreachable;
 }
 $7 = $0;
 $8 = (_mb_get_gc_enabled($7)|0);
 $gce = $8;
 $9 = $0;
 (_mb_set_gc_enabled($9,0)|0);
 $10 = $0;
 $11 = ((($10)) + 75|0);
 $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
 $running = $12;
 $13 = $1;
 $14 = HEAP32[$13>>2]|0;
 HEAP32[$ast>>2] = $14;
 $15 = HEAP32[$ast>>2]|0;
 $16 = ($15|0)!=(0|0);
 $17 = HEAP32[$ast>>2]|0;
 L4: do {
  if ($16) {
   $48 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
   $c = $48;
   $49 = $c;
   $50 = ((($49)) + 8|0);
   $51 = HEAP8[$50>>0]|0;
   $52 = ($51&255) >>> 1;
   $53 = $52 & 1;
   $54 = ($53<<24>>24)!=(0);
   L6: do {
    if ($54) {
     $55 = HEAP32[$ast>>2]|0;
     $56 = ((($55)) + 8|0);
     $57 = HEAPU8[$56>>0]|(HEAPU8[$56+1>>0]<<8)|(HEAPU8[$56+2>>0]<<16)|(HEAPU8[$56+3>>0]<<24);
     HEAP32[$ast>>2] = $57;
    } else {
     $58 = (__ls_create()|0);
     $optr = $58;
     $59 = (__ls_create()|0);
     $opnd = $59;
     $60 = (_mb_malloc(4)|0);
     $inep = $60;
     $61 = $inep;
     HEAP32[$61>>2] = 0;
     $62 = $0;
     $63 = ((($62)) + 122|0);
     $64 = HEAPU8[$63>>0]|(HEAPU8[$63+1>>0]<<8)|(HEAPU8[$63+2>>0]<<16)|(HEAPU8[$63+3>>0]<<24);
     $65 = $inep;
     (__ls_pushback($64,$65)|0);
     $66 = $c;
     $67 = HEAPU8[$66>>0]|(HEAPU8[$66+1>>0]<<8)|(HEAPU8[$66+2>>0]<<16)|(HEAPU8[$66+3>>0]<<24);
     $68 = ($67|0)==(4);
     do {
      if ($68) {
       $69 = HEAP32[$ast>>2]|0;
       $70 = ((($69)) + 8|0);
       $71 = HEAPU8[$70>>0]|(HEAPU8[$70+1>>0]<<8)|(HEAPU8[$70+2>>0]<<16)|(HEAPU8[$70+3>>0]<<24);
       $72 = ($71|0)!=(0|0);
       if ($72) {
        $73 = HEAP32[$ast>>2]|0;
        $74 = ((($73)) + 8|0);
        $75 = HEAPU8[$74>>0]|(HEAPU8[$74+1>>0]<<8)|(HEAPU8[$74+2>>0]<<16)|(HEAPU8[$74+3>>0]<<24);
        $76 = HEAPU8[$75>>0]|(HEAPU8[$75+1>>0]<<8)|(HEAPU8[$75+2>>0]<<16)|(HEAPU8[$75+3>>0]<<24);
        $_fsn = $76;
        $77 = $_fsn;
        $78 = HEAPU8[$77>>0]|(HEAPU8[$77+1>>0]<<8)|(HEAPU8[$77+2>>0]<<16)|(HEAPU8[$77+3>>0]<<24);
        $79 = ($78|0)==(8);
        if ($79) {
         $80 = $_fsn;
         $81 = ((($80)) + 4|0);
         $82 = HEAPU8[$81>>0]|(HEAPU8[$81+1>>0]<<8)|(HEAPU8[$81+2>>0]<<16)|(HEAPU8[$81+3>>0]<<24);
         $83 = ((($82)) + 4|0);
         $84 = HEAPU8[$83>>0]|(HEAPU8[$83+1>>0]<<8)|(HEAPU8[$83+2>>0]<<16)|(HEAPU8[$83+3>>0]<<24);
         $85 = ($84|0)==(1|0);
         if ($85) {
          break;
         }
        }
        $86 = $_fsn;
        $87 = HEAPU8[$86>>0]|(HEAPU8[$86+1>>0]<<8)|(HEAPU8[$86+2>>0]<<16)|(HEAPU8[$86+3>>0]<<24);
        $88 = ($87|0)==(8);
        if ($88) {
         $89 = $_fsn;
         $90 = ((($89)) + 4|0);
         $91 = HEAPU8[$90>>0]|(HEAPU8[$90+1>>0]<<8)|(HEAPU8[$90+2>>0]<<16)|(HEAPU8[$90+3>>0]<<24);
         $92 = ((($91)) + 4|0);
         $93 = HEAPU8[$92>>0]|(HEAPU8[$92+1>>0]<<8)|(HEAPU8[$92+2>>0]<<16)|(HEAPU8[$92+3>>0]<<24);
         $94 = ($93|0)==(14|0);
         if ($94) {
          break;
         }
        }
        $95 = $_fsn;
        $96 = HEAPU8[$95>>0]|(HEAPU8[$95+1>>0]<<8)|(HEAPU8[$95+2>>0]<<16)|(HEAPU8[$95+3>>0]<<24);
        $97 = ($96|0)==(8);
        if ($97) {
         $98 = $_fsn;
         $99 = ((($98)) + 4|0);
         $100 = HEAPU8[$99>>0]|(HEAPU8[$99+1>>0]<<8)|(HEAPU8[$99+2>>0]<<16)|(HEAPU8[$99+3>>0]<<24);
         $101 = ((($100)) + 4|0);
         $102 = HEAPU8[$101>>0]|(HEAPU8[$101+1>>0]<<8)|(HEAPU8[$101+2>>0]<<16)|(HEAPU8[$101+3>>0]<<24);
         $103 = ($102|0)==(15|0);
         if ($103) {
          break;
         }
        }
        $104 = $_fsn;
        $105 = HEAPU8[$104>>0]|(HEAPU8[$104+1>>0]<<8)|(HEAPU8[$104+2>>0]<<16)|(HEAPU8[$104+3>>0]<<24);
        $106 = ($105|0)==(8);
        if ($106) {
         $107 = $_fsn;
         $108 = ((($107)) + 4|0);
         $109 = HEAPU8[$108>>0]|(HEAPU8[$108+1>>0]<<8)|(HEAPU8[$108+2>>0]<<16)|(HEAPU8[$108+3>>0]<<24);
         $110 = ((($109)) + 4|0);
         $111 = HEAPU8[$110>>0]|(HEAPU8[$110+1>>0]<<8)|(HEAPU8[$110+2>>0]<<16)|(HEAPU8[$110+3>>0]<<24);
         $112 = ($111|0)==(16|0);
         if ($112) {
          break;
         }
        }
        $113 = $_fsn;
        $114 = HEAPU8[$113>>0]|(HEAPU8[$113+1>>0]<<8)|(HEAPU8[$113+2>>0]<<16)|(HEAPU8[$113+3>>0]<<24);
        $115 = ($114|0)==(8);
        if ($115) {
         $116 = $_fsn;
         $117 = ((($116)) + 4|0);
         $118 = HEAPU8[$117>>0]|(HEAPU8[$117+1>>0]<<8)|(HEAPU8[$117+2>>0]<<16)|(HEAPU8[$117+3>>0]<<24);
         $119 = ((($118)) + 4|0);
         $120 = HEAPU8[$119>>0]|(HEAPU8[$119+1>>0]<<8)|(HEAPU8[$119+2>>0]<<16)|(HEAPU8[$119+3>>0]<<24);
         $121 = ($120|0)==(17|0);
         if ($121) {
          break;
         }
        }
        $122 = $_fsn;
        $123 = HEAPU8[$122>>0]|(HEAPU8[$122+1>>0]<<8)|(HEAPU8[$122+2>>0]<<16)|(HEAPU8[$122+3>>0]<<24);
        $124 = ($123|0)==(8);
        if ($124) {
         $125 = $_fsn;
         $126 = ((($125)) + 4|0);
         $127 = HEAPU8[$126>>0]|(HEAPU8[$126+1>>0]<<8)|(HEAPU8[$126+2>>0]<<16)|(HEAPU8[$126+3>>0]<<24);
         $128 = ((($127)) + 4|0);
         $129 = HEAPU8[$128>>0]|(HEAPU8[$128+1>>0]<<8)|(HEAPU8[$128+2>>0]<<16)|(HEAPU8[$128+3>>0]<<24);
         $130 = ($129|0)==(20|0);
         if ($130) {
          break;
         }
        }
       }
       $131 = $2;
       $132 = HEAP32[$131>>2]|0;
       HEAP8[$132>>0]=4&255;HEAP8[$132+1>>0]=(4>>8)&255;HEAP8[$132+2>>0]=(4>>16)&255;HEAP8[$132+3>>0]=4>>24;
       $133 = $c;
       $134 = ((($133)) + 4|0);
       $135 = HEAPU8[$134>>0]|(HEAPU8[$134+1>>0]<<8)|(HEAPU8[$134+2>>0]<<16)|(HEAPU8[$134+3>>0]<<24);
       $136 = $2;
       $137 = HEAP32[$136>>2]|0;
       $138 = ((($137)) + 4|0);
       HEAP8[$138>>0]=$135&255;HEAP8[$138+1>>0]=($135>>8)&255;HEAP8[$138+2>>0]=($135>>16)&255;HEAP8[$138+3>>0]=$135>>24;
       $139 = $2;
       $140 = HEAP32[$139>>2]|0;
       $141 = ((($140)) + 8|0);
       $142 = HEAP8[$141>>0]|0;
       $143 = $142 & -2;
       $144 = $143 | 1;
       HEAP8[$141>>0] = $144;
       $145 = HEAP32[$ast>>2]|0;
       $146 = ((($145)) + 8|0);
       $147 = HEAPU8[$146>>0]|(HEAPU8[$146+1>>0]<<8)|(HEAPU8[$146+2>>0]<<16)|(HEAPU8[$146+3>>0]<<24);
       HEAP32[$ast>>2] = $147;
       break L4;
      }
     } while(0);
     $148 = $c;
     $guard_val = $148;
     $149 = HEAP32[$ast>>2]|0;
     $150 = ((($149)) + 8|0);
     $151 = HEAPU8[$150>>0]|(HEAPU8[$150+1>>0]<<8)|(HEAPU8[$150+2>>0]<<16)|(HEAPU8[$150+3>>0]<<24);
     HEAP32[$ast>>2] = $151;
     $152 = $optr;
     $153 = HEAP32[304>>2]|0;
     (__ls_pushback($152,$153)|0);
     L31: while(1) {
      $154 = $c;
      $155 = ($154|0)!=(0|0);
      if (!($155)) {
       label = 325;
       break;
      }
      $156 = $c;
      $157 = HEAPU8[$156>>0]|(HEAPU8[$156+1>>0]<<8)|(HEAPU8[$156+2>>0]<<16)|(HEAPU8[$156+3>>0]<<24);
      $158 = ($157|0)==(8);
      if ($158) {
       $159 = $c;
       $160 = ((($159)) + 4|0);
       $161 = HEAPU8[$160>>0]|(HEAPU8[$160+1>>0]<<8)|(HEAPU8[$160+2>>0]<<16)|(HEAPU8[$160+3>>0]<<24);
       $162 = HEAPU8[$161>>0]|(HEAPU8[$161+1>>0]<<8)|(HEAPU8[$161+2>>0]<<16)|(HEAPU8[$161+3>>0]<<24);
       $163 = (_strcmp($162,4304)|0);
       $164 = ($163|0)==(0);
       if ($164) {
        $165 = $optr;
        $166 = (__ls_back($165)|0);
        $167 = HEAPU8[$166>>0]|(HEAPU8[$166+1>>0]<<8)|(HEAPU8[$166+2>>0]<<16)|(HEAPU8[$166+3>>0]<<24);
        $168 = HEAPU8[$167>>0]|(HEAPU8[$167+1>>0]<<8)|(HEAPU8[$167+2>>0]<<16)|(HEAPU8[$167+3>>0]<<24);
        $169 = ($168|0)==(8);
        if ($169) {
         $170 = $optr;
         $171 = (__ls_back($170)|0);
         $172 = HEAPU8[$171>>0]|(HEAPU8[$171+1>>0]<<8)|(HEAPU8[$171+2>>0]<<16)|(HEAPU8[$171+3>>0]<<24);
         $173 = ((($172)) + 4|0);
         $174 = HEAPU8[$173>>0]|(HEAPU8[$173+1>>0]<<8)|(HEAPU8[$173+2>>0]<<16)|(HEAPU8[$173+3>>0]<<24);
         $175 = HEAPU8[$174>>0]|(HEAPU8[$174+1>>0]<<8)|(HEAPU8[$174+2>>0]<<16)|(HEAPU8[$174+3>>0]<<24);
         $176 = (_strcmp($175,4304)|0);
         $177 = ($176|0)==(0);
         $179 = $177;
        } else {
         $179 = 0;
        }
        $178 = $179 ^ 1;
        if (!($178)) {
         label = 325;
         break;
        }
       }
      }
      $180 = $hack;
      $181 = ($180<<24>>24)!=(0);
      do {
       if (!($181)) {
        $182 = $c;
        $183 = HEAPU8[$182>>0]|(HEAPU8[$182+1>>0]<<8)|(HEAPU8[$182+2>>0]<<16)|(HEAPU8[$182+3>>0]<<24);
        $184 = ($183|0)==(8);
        if ($184) {
         $185 = $c;
         $186 = ((($185)) + 4|0);
         $187 = HEAPU8[$186>>0]|(HEAPU8[$186+1>>0]<<8)|(HEAPU8[$186+2>>0]<<16)|(HEAPU8[$186+3>>0]<<24);
         $188 = ((($187)) + 4|0);
         $189 = HEAPU8[$188>>0]|(HEAPU8[$188+1>>0]<<8)|(HEAPU8[$188+2>>0]<<16)|(HEAPU8[$188+3>>0]<<24);
         $190 = ($189|0)==(7|0);
         if ($190) {
          $191 = $bracket_count;
          $192 = (($191) + 1)|0;
          $bracket_count = $192;
          break;
         }
        }
        $193 = $c;
        $194 = HEAPU8[$193>>0]|(HEAPU8[$193+1>>0]<<8)|(HEAPU8[$193+2>>0]<<16)|(HEAPU8[$193+3>>0]<<24);
        $195 = ($194|0)==(8);
        if ($195) {
         $196 = $c;
         $197 = ((($196)) + 4|0);
         $198 = HEAPU8[$197>>0]|(HEAPU8[$197+1>>0]<<8)|(HEAPU8[$197+2>>0]<<16)|(HEAPU8[$197+3>>0]<<24);
         $199 = ((($198)) + 4|0);
         $200 = HEAPU8[$199>>0]|(HEAPU8[$199+1>>0]<<8)|(HEAPU8[$199+2>>0]<<16)|(HEAPU8[$199+3>>0]<<24);
         $201 = ($200|0)==(8|0);
         if ($201) {
          $202 = $bracket_count;
          $203 = (($202) + -1)|0;
          $bracket_count = $203;
          $204 = $bracket_count;
          $205 = ($204|0)<(0);
          if ($205) {
           $206 = HEAP32[304>>2]|0;
           $c = $206;
           $207 = HEAP32[$ast>>2]|0;
           $208 = ((($207)) + 4|0);
           $209 = HEAPU8[$208>>0]|(HEAPU8[$208+1>>0]<<8)|(HEAPU8[$208+2>>0]<<16)|(HEAPU8[$208+3>>0]<<24);
           HEAP32[$ast>>2] = $209;
           continue L31;
          }
         }
        }
       }
      } while(0);
      $hack = 0;
      $210 = $c;
      $211 = HEAPU8[$210>>0]|(HEAPU8[$210+1>>0]<<8)|(HEAPU8[$210+2>>0]<<16)|(HEAPU8[$210+3>>0]<<24);
      $212 = ($211|0)==(8);
      if ($212) {
       $213 = $c;
       $214 = ((($213)) + 4|0);
       $215 = HEAPU8[$214>>0]|(HEAPU8[$214+1>>0]<<8)|(HEAPU8[$214+2>>0]<<16)|(HEAPU8[$214+3>>0]<<24);
       $216 = ((($215)) + 4|0);
       $217 = HEAPU8[$216>>0]|(HEAPU8[$216+1>>0]<<8)|(HEAPU8[$216+2>>0]<<16)|(HEAPU8[$216+3>>0]<<24);
       $218 = (__is_operator($217)|0);
       $219 = $218&255;
       $220 = ($219|0)!=(0);
       if ($220) {
        $1344 = $optr;
        $1345 = (__ls_back($1344)|0);
        $1346 = HEAPU8[$1345>>0]|(HEAPU8[$1345+1>>0]<<8)|(HEAPU8[$1345+2>>0]<<16)|(HEAPU8[$1345+3>>0]<<24);
        $1347 = ((($1346)) + 4|0);
        $1348 = HEAPU8[$1347>>0]|(HEAPU8[$1347+1>>0]<<8)|(HEAPU8[$1347+2>>0]<<16)|(HEAPU8[$1347+3>>0]<<24);
        $1349 = ((($1348)) + 4|0);
        $1350 = HEAPU8[$1349>>0]|(HEAPU8[$1349+1>>0]<<8)|(HEAPU8[$1349+2>>0]<<16)|(HEAPU8[$1349+3>>0]<<24);
        $1351 = $c;
        $1352 = ((($1351)) + 4|0);
        $1353 = HEAPU8[$1352>>0]|(HEAPU8[$1352+1>>0]<<8)|(HEAPU8[$1352+2>>0]<<16)|(HEAPU8[$1352+3>>0]<<24);
        $1354 = ((($1353)) + 4|0);
        $1355 = HEAPU8[$1354>>0]|(HEAPU8[$1354+1>>0]<<8)|(HEAPU8[$1354+2>>0]<<16)|(HEAPU8[$1354+3>>0]<<24);
        $1356 = (__get_priority($1350,$1355)|0);
        $pri = $1356;
        $1357 = $pri;
        $1358 = $1357 << 24 >> 24;
        switch ($1358|0) {
        case 32:  {
         label = 307;
         break L31;
         break;
        }
        case 60:  {
         $1359 = $optr;
         $1360 = $c;
         (__ls_pushback($1359,$1360)|0);
         $1361 = HEAP32[$ast>>2]|0;
         $1362 = ($1361|0)!=(0|0);
         if ($1362) {
          $1363 = HEAP32[$ast>>2]|0;
          $1364 = HEAPU8[$1363>>0]|(HEAPU8[$1363+1>>0]<<8)|(HEAPU8[$1363+2>>0]<<16)|(HEAPU8[$1363+3>>0]<<24);
          $1365 = $1364;
         } else {
          $1365 = 0;
         }
         $c = $1365;
         $1366 = HEAP32[$ast>>2]|0;
         $1367 = ($1366|0)!=(0|0);
         if ($1367) {
          $1368 = HEAP32[$ast>>2]|0;
          $1369 = ((($1368)) + 8|0);
          $1370 = HEAPU8[$1369>>0]|(HEAPU8[$1369+1>>0]<<8)|(HEAPU8[$1369+2>>0]<<16)|(HEAPU8[$1369+3>>0]<<24);
          HEAP32[$ast>>2] = $1370;
         }
         $f = 0;
         continue L31;
         break;
        }
        case 61:  {
         $1371 = $optr;
         $1372 = (__ls_popback($1371)|0);
         $x = $1372;
         $1373 = HEAP32[$ast>>2]|0;
         $1374 = ($1373|0)!=(0|0);
         if ($1374) {
          $1375 = HEAP32[$ast>>2]|0;
          $1376 = HEAPU8[$1375>>0]|(HEAPU8[$1375+1>>0]<<8)|(HEAPU8[$1375+2>>0]<<16)|(HEAPU8[$1375+3>>0]<<24);
          $1377 = $1376;
         } else {
          $1377 = 0;
         }
         $c = $1377;
         $1378 = HEAP32[$ast>>2]|0;
         $1379 = ($1378|0)!=(0|0);
         if (!($1379)) {
          continue L31;
         }
         $1380 = HEAP32[$ast>>2]|0;
         $1381 = ((($1380)) + 8|0);
         $1382 = HEAPU8[$1381>>0]|(HEAPU8[$1381+1>>0]<<8)|(HEAPU8[$1381+2>>0]<<16)|(HEAPU8[$1381+3>>0]<<24);
         HEAP32[$ast>>2] = $1382;
         continue L31;
         break;
        }
        case 62:  {
         $1383 = $optr;
         $1384 = (__ls_popback($1383)|0);
         $theta = $1384;
         $1385 = $opnd;
         $1386 = (__ls_popback($1385)|0);
         $b = $1386;
         $1387 = $opnd;
         $1388 = (__ls_popback($1387)|0);
         $a = $1388;
         $1389 = $0;
         $1390 = $theta;
         $1391 = $a;
         $1392 = $b;
         $1393 = (__operate_operand($1389,$1390,$1391,$1392,$result)|0);
         $r = $1393;
         $1394 = $r;
         $1395 = ($1394|0)!=(0|0);
         if (!($1395)) {
          label = 284;
          break L31;
         }
         $1447 = $opnd;
         $1448 = $r;
         (__ls_pushback($1447,$1448)|0);
         $1449 = $garbage;
         $1450 = ($1449|0)!=(0|0);
         if (!($1450)) {
          $1451 = (__ls_create()|0);
          $garbage = $1451;
         }
         $1452 = $garbage;
         $1453 = $r;
         (__ls_pushback($1452,$1453)|0);
         $1454 = $c;
         $1455 = HEAPU8[$1454>>0]|(HEAPU8[$1454+1>>0]<<8)|(HEAPU8[$1454+2>>0]<<16)|(HEAPU8[$1454+3>>0]<<24);
         $1456 = ($1455|0)==(8);
         if (!($1456)) {
          continue L31;
         }
         $1457 = $c;
         $1458 = ((($1457)) + 4|0);
         $1459 = HEAPU8[$1458>>0]|(HEAPU8[$1458+1>>0]<<8)|(HEAPU8[$1458+2>>0]<<16)|(HEAPU8[$1458+3>>0]<<24);
         $1460 = ((($1459)) + 4|0);
         $1461 = HEAPU8[$1460>>0]|(HEAPU8[$1460+1>>0]<<8)|(HEAPU8[$1460+2>>0]<<16)|(HEAPU8[$1460+3>>0]<<24);
         $1462 = ($1461|0)==(8|0);
         if (!($1462)) {
          continue L31;
         }
         $hack = 1;
         continue L31;
         break;
        }
        default: {
         continue L31;
        }
        }
       }
      }
      $221 = $0;
      $222 = $c;
      $223 = (__is_expression_terminal($221,$222)|0);
      $224 = ($223<<24>>24)!=(0);
      if ($224) {
       $225 = HEAP32[304>>2]|0;
       $c = $225;
       $226 = HEAP32[$ast>>2]|0;
       $227 = ($226|0)!=(0|0);
       if ($227) {
        $228 = HEAP32[$ast>>2]|0;
        $229 = ((($228)) + 4|0);
        $230 = HEAPU8[$229>>0]|(HEAPU8[$229+1>>0]<<8)|(HEAPU8[$229+2>>0]<<16)|(HEAPU8[$229+3>>0]<<24);
        HEAP32[$ast>>2] = $230;
       }
       $231 = $bracket_count;
       $232 = ($231|0)!=(0);
       if (!($232)) {
        continue;
       }
       dest=$_cb; stop=dest+17|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
       HEAP8[$_cb>>0]=0&255;HEAP8[$_cb+1>>0]=(0>>8)&255;HEAP8[$_cb+2>>0]=(0>>16)&255;HEAP8[$_cb+3>>0]=0>>24;
       HEAP8[$_cb>>0]=8&255;HEAP8[$_cb+1>>0]=(8>>8)&255;HEAP8[$_cb+2>>0]=(8>>16)&255;HEAP8[$_cb+3>>0]=8>>24;
       $233 = ((($_cb)) + 4|0);
       HEAP8[$233>>0]=$_cbf&255;HEAP8[$233+1>>0]=($_cbf>>8)&255;HEAP8[$233+2>>0]=($_cbf>>16)&255;HEAP8[$233+3>>0]=$_cbf>>24;
       $234 = ((($_cb)) + 4|0);
       $235 = HEAPU8[$234>>0]|(HEAPU8[$234+1>>0]<<8)|(HEAPU8[$234+2>>0]<<16)|(HEAPU8[$234+3>>0]<<24);
       HEAP8[$235>>0]=11391&255;HEAP8[$235+1>>0]=(11391>>8)&255;HEAP8[$235+2>>0]=(11391>>16)&255;HEAP8[$235+3>>0]=11391>>24;
       $236 = ((($_cb)) + 4|0);
       $237 = HEAPU8[$236>>0]|(HEAPU8[$236+1>>0]<<8)|(HEAPU8[$236+2>>0]<<16)|(HEAPU8[$236+3>>0]<<24);
       $238 = ((($237)) + 4|0);
       HEAP8[$238>>0]=8&255;HEAP8[$238+1>>0]=(8>>8)&255;HEAP8[$238+2>>0]=(8>>16)&255;HEAP8[$238+3>>0]=8>>24;
       while(1) {
        $239 = $bracket_count;
        $240 = ($239|0)!=(0);
        if (!($240)) {
         break;
        }
        $241 = $optr;
        (__ls_pushback($241,$_cb)|0);
        $242 = $bracket_count;
        $243 = (($242) + -1)|0;
        $bracket_count = $243;
        $f = 0;
       }
       $244 = HEAP32[$ast>>2]|0;
       $errn = $244;
       continue;
      }
      $245 = $c;
      $246 = HEAPU8[$245>>0]|(HEAPU8[$245+1>>0]<<8)|(HEAPU8[$245+2>>0]<<16)|(HEAPU8[$245+3>>0]<<24);
      $247 = ($246|0)==(10);
      L86: do {
       if ($247) {
        $248 = $0;
        $249 = ((($248)) + 93|0);
        $250 = HEAPU8[$249>>0]|(HEAPU8[$249+1>>0]<<8)|(HEAPU8[$249+2>>0]<<16)|(HEAPU8[$249+3>>0]<<24);
        $251 = ($250|0)!=(0|0);
        if ($251) {
         $252 = $0;
         $253 = $c;
         $254 = ((($253)) + 4|0);
         $255 = HEAPU8[$254>>0]|(HEAPU8[$254+1>>0]<<8)|(HEAPU8[$254+2>>0]<<16)|(HEAPU8[$254+3>>0]<<24);
         $256 = ((($255)) + 17|0);
         $257 = HEAPU8[$256>>0]|(HEAPU8[$256+1>>0]<<8)|(HEAPU8[$256+2>>0]<<16)|(HEAPU8[$256+3>>0]<<24);
         $258 = (__search_identifier_in_scope_chain($252,0,$257,1,0,0)|0);
         $cs = $258;
         $259 = $cs;
         $260 = ($259|0)!=(0|0);
         if ($260) {
          $261 = $cs;
          $262 = HEAPU8[$261>>0]|(HEAPU8[$261+1>>0]<<8)|(HEAPU8[$261+2>>0]<<16)|(HEAPU8[$261+3>>0]<<24);
          $c = $262;
          label = 56;
         } else {
          label = 56;
         }
        } else {
         label = 56;
        }
       } else {
        $378 = $c;
        $379 = HEAPU8[$378>>0]|(HEAPU8[$378+1>>0]<<8)|(HEAPU8[$378+2>>0]<<16)|(HEAPU8[$378+3>>0]<<24);
        $380 = ($379|0)==(8);
        if ($380) {
         $381 = HEAP32[$ast>>2]|0;
         $382 = ($381|0)!=(0|0);
         if ($382) {
          $383 = HEAP32[$ast>>2]|0;
          $384 = ((($383)) + 4|0);
          $385 = HEAPU8[$384>>0]|(HEAPU8[$384+1>>0]<<8)|(HEAPU8[$384+2>>0]<<16)|(HEAPU8[$384+3>>0]<<24);
          HEAP32[$ast>>2] = $385;
         }
         $386 = $c;
         $387 = HEAPU8[$386>>0]|(HEAPU8[$386+1>>0]<<8)|(HEAPU8[$386+2>>0]<<16)|(HEAPU8[$386+3>>0]<<24);
         $388 = ($387|0)==(8);
         if ($388) {
          $389 = $c;
          $390 = ((($389)) + 4|0);
          $391 = HEAPU8[$390>>0]|(HEAPU8[$390+1>>0]<<8)|(HEAPU8[$390+2>>0]<<16)|(HEAPU8[$390+3>>0]<<24);
          $392 = ((($391)) + 4|0);
          $393 = HEAPU8[$392>>0]|(HEAPU8[$392+1>>0]<<8)|(HEAPU8[$392+2>>0]<<16)|(HEAPU8[$392+3>>0]<<24);
          $394 = (__is_unary($393)|0);
          $395 = $394&255;
          $396 = ($395|0)!=(0);
          if ($396) {
           $397 = $0;
           $398 = ((($397)) + 126|0);
           $399 = HEAPU8[$398>>0]|(HEAPU8[$398+1>>0]<<8)|(HEAPU8[$398+2>>0]<<16)|(HEAPU8[$398+3>>0]<<24);
           $400 = $c;
           $401 = ((($400)) + 4|0);
           $402 = HEAPU8[$401>>0]|(HEAPU8[$401+1>>0]<<8)|(HEAPU8[$401+2>>0]<<16)|(HEAPU8[$401+3>>0]<<24);
           $403 = HEAPU8[$402>>0]|(HEAPU8[$402+1>>0]<<8)|(HEAPU8[$402+2>>0]<<16)|(HEAPU8[$402+3>>0]<<24);
           (__ls_pushback($399,$403)|0);
           $404 = $c;
           $405 = ((($404)) + 4|0);
           $406 = HEAPU8[$405>>0]|(HEAPU8[$405+1>>0]<<8)|(HEAPU8[$405+2>>0]<<16)|(HEAPU8[$405+3>>0]<<24);
           $407 = ((($406)) + 4|0);
           $408 = HEAPU8[$407>>0]|(HEAPU8[$407+1>>0]<<8)|(HEAPU8[$407+2>>0]<<16)|(HEAPU8[$407+3>>0]<<24);
           $409 = $0;
           $410 = (FUNCTION_TABLE_iii[$408 & 255]($409,$ast)|0);
           HEAP32[$result>>2] = $410;
           $411 = $0;
           $412 = ((($411)) + 126|0);
           $413 = HEAPU8[$412>>0]|(HEAPU8[$412+1>>0]<<8)|(HEAPU8[$412+2>>0]<<16)|(HEAPU8[$412+3>>0]<<24);
           (__ls_popback($413)|0);
          } else {
           label = 83;
          }
         } else {
          label = 83;
         }
         if ((label|0) == 83) {
          label = 0;
          $414 = $running;
          $415 = ((($414)) + 28|0);
          $416 = HEAPU8[$415>>0]|(HEAPU8[$415+1>>0]<<8)|(HEAPU8[$415+2>>0]<<16)|(HEAPU8[$415+3>>0]<<24);
          $calc_depth = $416;
          $417 = $running;
          $418 = ((($417)) + 28|0);
          HEAP8[$418>>0]=-1&255;HEAP8[$418+1>>0]=(-1>>8)&255;HEAP8[$418+2>>0]=(-1>>16)&255;HEAP8[$418+3>>0]=-1>>24;
          $419 = $0;
          $420 = ((($419)) + 126|0);
          $421 = HEAPU8[$420>>0]|(HEAPU8[$420+1>>0]<<8)|(HEAPU8[$420+2>>0]<<16)|(HEAPU8[$420+3>>0]<<24);
          $422 = $c;
          $423 = ((($422)) + 4|0);
          $424 = HEAPU8[$423>>0]|(HEAPU8[$423+1>>0]<<8)|(HEAPU8[$423+2>>0]<<16)|(HEAPU8[$423+3>>0]<<24);
          $425 = HEAPU8[$424>>0]|(HEAPU8[$424+1>>0]<<8)|(HEAPU8[$424+2>>0]<<16)|(HEAPU8[$424+3>>0]<<24);
          (__ls_pushback($421,$425)|0);
          $426 = $c;
          $427 = ((($426)) + 4|0);
          $428 = HEAPU8[$427>>0]|(HEAPU8[$427+1>>0]<<8)|(HEAPU8[$427+2>>0]<<16)|(HEAPU8[$427+3>>0]<<24);
          $429 = ((($428)) + 4|0);
          $430 = HEAPU8[$429>>0]|(HEAPU8[$429+1>>0]<<8)|(HEAPU8[$429+2>>0]<<16)|(HEAPU8[$429+3>>0]<<24);
          $431 = $0;
          $432 = (FUNCTION_TABLE_iii[$430 & 255]($431,$ast)|0);
          HEAP32[$result>>2] = $432;
          $433 = $0;
          $434 = ((($433)) + 126|0);
          $435 = HEAPU8[$434>>0]|(HEAPU8[$434+1>>0]<<8)|(HEAPU8[$434+2>>0]<<16)|(HEAPU8[$434+3>>0]<<24);
          (__ls_popback($435)|0);
          $436 = $calc_depth;
          $437 = $running;
          $438 = ((($437)) + 28|0);
          HEAP8[$438>>0]=$436&255;HEAP8[$438+1>>0]=($436>>8)&255;HEAP8[$438+2>>0]=($436>>16)&255;HEAP8[$438+3>>0]=$436>>24;
         }
         $439 = HEAP32[$result>>2]|0;
         $440 = ($439|0)!=(0);
         if ($440) {
          label = 85;
          break L31;
         }
         $472 = (__create_object()|0);
         $c = $472;
         $473 = $garbage;
         $474 = ($473|0)!=(0|0);
         if (!($474)) {
          $475 = (__ls_create()|0);
          $garbage = $475;
         }
         $476 = $garbage;
         $477 = $c;
         (__ls_pushback($476,$477)|0);
         $478 = $running;
         $479 = ((($478)) + 20|0);
         $480 = $c;
         $481 = (__public_value_to_internal_object($479,$480)|0);
         HEAP32[$result>>2] = $481;
         $482 = $c;
         $483 = HEAPU8[$482>>0]|(HEAPU8[$482+1>>0]<<8)|(HEAPU8[$482+2>>0]<<16)|(HEAPU8[$482+3>>0]<<24);
         L106: do {
          switch ($483|0) {
          case 17:  {
           $484 = $c;
           $485 = ((($484)) + 4|0);
           $486 = HEAPU8[$485>>0]|(HEAPU8[$485+1>>0]<<8)|(HEAPU8[$485+2>>0]<<16)|(HEAPU8[$485+3>>0]<<24);
           $487 = ((($486)) + 58|0);
           $488 = HEAPU8[$487>>0]|(HEAPU8[$487+1>>0]<<8)|(HEAPU8[$487+2>>0]<<16)|(HEAPU8[$487+3>>0]<<24);
           $489 = ($488|0)!=(1);
           if ($489) {
            break L106;
           }
           $490 = $running;
           $491 = ((($490)) + 20|0);
           $492 = ((($491)) + 4|0);
           ;HEAP8[$492>>0]=0|0;HEAP8[$492+1>>0]=0|0;HEAP8[$492+2>>0]=0|0;HEAP8[$492+3>>0]=0|0;
           $493 = $running;
           $494 = ((($493)) + 20|0);
           HEAP8[$494>>0]=0&255;HEAP8[$494+1>>0]=(0>>8)&255;HEAP8[$494+2>>0]=(0>>16)&255;HEAP8[$494+3>>0]=0>>24;
           label = 96;
           break;
          }
          case 4:  {
           label = 96;
           break;
          }
          default: {
          }
          }
         } while(0);
         if ((label|0) == 96) {
          label = 0;
          $495 = $c;
          $496 = ((($495)) + 8|0);
          $497 = HEAP8[$496>>0]|0;
          $498 = $497 & -2;
          $499 = $498 | 1;
          HEAP8[$496>>0] = $499;
         }
         $500 = HEAP32[$result>>2]|0;
         $501 = ($500|0)!=(0);
         if ($501) {
          label = 354;
          break L4;
         }
         $502 = $f;
         $503 = ($502|0)!=(0);
         if ($503) {
          label = 99;
          break L31;
         }
         $535 = $c;
         $536 = (__is_array($535)|0);
         $537 = ($536<<24>>24)!=(0);
         if ($537) {
          label = 56;
          break;
         }
         $538 = HEAP32[$ast>>2]|0;
         $539 = ($538|0)!=(0|0);
         do {
          if ($539) {
           $540 = HEAP32[$ast>>2]|0;
           $541 = HEAPU8[$540>>0]|(HEAPU8[$540+1>>0]<<8)|(HEAPU8[$540+2>>0]<<16)|(HEAPU8[$540+3>>0]<<24);
           $542 = HEAPU8[$541>>0]|(HEAPU8[$541+1>>0]<<8)|(HEAPU8[$541+2>>0]<<16)|(HEAPU8[$541+3>>0]<<24);
           $543 = ($542|0)==(8);
           if (!($543)) {
            break;
           }
           $544 = HEAP32[$ast>>2]|0;
           $545 = HEAPU8[$544>>0]|(HEAPU8[$544+1>>0]<<8)|(HEAPU8[$544+2>>0]<<16)|(HEAPU8[$544+3>>0]<<24);
           $546 = ((($545)) + 4|0);
           $547 = HEAPU8[$546>>0]|(HEAPU8[$546+1>>0]<<8)|(HEAPU8[$546+2>>0]<<16)|(HEAPU8[$546+3>>0]<<24);
           $548 = ((($547)) + 4|0);
           $549 = HEAPU8[$548>>0]|(HEAPU8[$548+1>>0]<<8)|(HEAPU8[$548+2>>0]<<16)|(HEAPU8[$548+3>>0]<<24);
           $550 = ($549|0)==(7|0);
           if ($550) {
            label = 109;
            break L31;
           }
          }
         } while(0);
         $582 = $opnd;
         $583 = $c;
         (__ls_pushback($582,$583)|0);
         $584 = $f;
         $585 = (($584) + 1)|0;
         $f = $585;
         break;
        }
        $586 = $c;
        $587 = HEAPU8[$586>>0]|(HEAPU8[$586+1>>0]<<8)|(HEAPU8[$586+2>>0]<<16)|(HEAPU8[$586+3>>0]<<24);
        $588 = ($587|0)==(17);
        L120: do {
         if ($588) {
          label = 117;
         } else {
          $736 = $c;
          $737 = HEAPU8[$736>>0]|(HEAPU8[$736+1>>0]<<8)|(HEAPU8[$736+2>>0]<<16)|(HEAPU8[$736+3>>0]<<24);
          $738 = ($737|0)==(9);
          if ($738) {
           $739 = $c;
           $740 = ((($739)) + 4|0);
           $741 = HEAPU8[$740>>0]|(HEAPU8[$740+1>>0]<<8)|(HEAPU8[$740+2>>0]<<16)|(HEAPU8[$740+3>>0]<<24);
           $742 = ((($741)) + 4|0);
           $743 = HEAPU8[$742>>0]|(HEAPU8[$742+1>>0]<<8)|(HEAPU8[$742+2>>0]<<16)|(HEAPU8[$742+3>>0]<<24);
           $744 = HEAPU8[$743>>0]|(HEAPU8[$743+1>>0]<<8)|(HEAPU8[$743+2>>0]<<16)|(HEAPU8[$743+3>>0]<<24);
           $745 = ($744|0)==(10);
           if ($745) {
            HEAP32[$arr_idx1>>2] = 0;
            $arr_elem4 = 0;
            $746 = HEAP32[$ast>>2]|0;
            $747 = ($746|0)!=(0|0);
            do {
             if ($747) {
              $748 = HEAP32[$ast>>2]|0;
              $749 = HEAPU8[$748>>0]|(HEAPU8[$748+1>>0]<<8)|(HEAPU8[$748+2>>0]<<16)|(HEAPU8[$748+3>>0]<<24);
              $750 = HEAPU8[$749>>0]|(HEAPU8[$749+1>>0]<<8)|(HEAPU8[$749+2>>0]<<16)|(HEAPU8[$749+3>>0]<<24);
              $751 = ($750|0)==(8);
              if ($751) {
               $752 = HEAP32[$ast>>2]|0;
               $753 = HEAPU8[$752>>0]|(HEAPU8[$752+1>>0]<<8)|(HEAPU8[$752+2>>0]<<16)|(HEAPU8[$752+3>>0]<<24);
               $754 = ((($753)) + 4|0);
               $755 = HEAPU8[$754>>0]|(HEAPU8[$754+1>>0]<<8)|(HEAPU8[$754+2>>0]<<16)|(HEAPU8[$754+3>>0]<<24);
               $756 = ((($755)) + 4|0);
               $757 = HEAPU8[$756>>0]|(HEAPU8[$756+1>>0]<<8)|(HEAPU8[$756+2>>0]<<16)|(HEAPU8[$756+3>>0]<<24);
               $758 = ($757|0)==(7|0);
               if ($758) {
                break;
               }
              }
              $759 = $c;
              $760 = ((($759)) + 4|0);
              $761 = HEAPU8[$760>>0]|(HEAPU8[$760+1>>0]<<8)|(HEAPU8[$760+2>>0]<<16)|(HEAPU8[$760+3>>0]<<24);
              $762 = ((($761)) + 4|0);
              $763 = HEAPU8[$762>>0]|(HEAPU8[$762+1>>0]<<8)|(HEAPU8[$762+2>>0]<<16)|(HEAPU8[$762+3>>0]<<24);
              $c = $763;
              $764 = $opnd;
              $765 = $c;
              (__ls_pushback($764,$765)|0);
              $766 = $f;
              $767 = (($766) + 1)|0;
              $f = $767;
              break L86;
             }
            } while(0);
            $768 = HEAP32[$ast>>2]|0;
            $769 = ((($768)) + 4|0);
            $770 = HEAPU8[$769>>0]|(HEAPU8[$769+1>>0]<<8)|(HEAPU8[$769+2>>0]<<16)|(HEAPU8[$769+3>>0]<<24);
            HEAP32[$ast>>2] = $770;
            $771 = $0;
            $772 = (__get_array_index($771,$ast,0,$arr_idx1,0)|0);
            HEAP32[$result>>2] = $772;
            $773 = HEAP32[$result>>2]|0;
            $774 = ($773|0)!=(0);
            $775 = HEAP32[$ast>>2]|0;
            if ($774) {
             label = 156;
             break L31;
            }
            $806 = ((($775)) + 8|0);
            $807 = HEAPU8[$806>>0]|(HEAPU8[$806+1>>0]<<8)|(HEAPU8[$806+2>>0]<<16)|(HEAPU8[$806+3>>0]<<24);
            HEAP32[$ast>>2] = $807;
            $808 = $0;
            $809 = $c;
            $810 = ((($809)) + 4|0);
            $811 = HEAPU8[$810>>0]|(HEAPU8[$810+1>>0]<<8)|(HEAPU8[$810+2>>0]<<16)|(HEAPU8[$810+3>>0]<<24);
            $812 = ((($811)) + 4|0);
            $813 = HEAPU8[$812>>0]|(HEAPU8[$812+1>>0]<<8)|(HEAPU8[$812+2>>0]<<16)|(HEAPU8[$812+3>>0]<<24);
            $814 = ((($813)) + 4|0);
            $815 = HEAPU8[$814>>0]|(HEAPU8[$814+1>>0]<<8)|(HEAPU8[$814+2>>0]<<16)|(HEAPU8[$814+3>>0]<<24);
            $816 = HEAP32[$arr_idx1>>2]|0;
            (__get_array_elem($808,$815,$816,$arr_val2,$arr_type3)|0);
            $817 = (__create_object()|0);
            $arr_elem4 = $817;
            $818 = $garbage;
            $819 = ($818|0)!=(0|0);
            if (!($819)) {
             $820 = (__ls_create()|0);
             $garbage = $820;
            }
            $821 = $garbage;
            $822 = $arr_elem4;
            (__ls_pushback($821,$822)|0);
            $823 = HEAP32[$arr_type3>>2]|0;
            $824 = $arr_elem4;
            HEAP8[$824>>0]=$823&255;HEAP8[$824+1>>0]=($823>>8)&255;HEAP8[$824+2>>0]=($823>>16)&255;HEAP8[$824+3>>0]=$823>>24;
            $825 = $arr_elem4;
            $826 = ((($825)) + 8|0);
            $827 = HEAP8[$826>>0]|0;
            $828 = $827 & -2;
            $829 = $828 | 1;
            HEAP8[$826>>0] = $829;
            $830 = HEAP32[$arr_type3>>2]|0;
            $831 = ($830|0)==(2);
            do {
             if ($831) {
              $832 = HEAPU8[$arr_val2>>0]|(HEAPU8[$arr_val2+1>>0]<<8)|(HEAPU8[$arr_val2+2>>0]<<16)|(HEAPU8[$arr_val2+3>>0]<<24);
              $833 = $arr_elem4;
              $834 = ((($833)) + 4|0);
              HEAP8[$834>>0]=$832&255;HEAP8[$834+1>>0]=($832>>8)&255;HEAP8[$834+2>>0]=($832>>16)&255;HEAP8[$834+3>>0]=$832>>24;
             } else {
              $835 = HEAP32[$arr_type3>>2]|0;
              $836 = ($835|0)==(3);
              if ($836) {
               HEAP8[tempDoublePtr>>0]=HEAP8[$arr_val2>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$arr_val2+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$arr_val2+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$arr_val2+3>>0];$837 = +HEAPF32[tempDoublePtr>>2];
               $838 = $arr_elem4;
               $839 = ((($838)) + 4|0);
               HEAPF32[tempDoublePtr>>2]=$837;HEAP8[$839>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$839+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$839+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$839+3>>0]=HEAP8[tempDoublePtr+3>>0];
               break;
              }
              $840 = HEAP32[$arr_type3>>2]|0;
              $841 = ($840|0)==(4);
              if ($841) {
               $842 = HEAPU8[$arr_val2>>0]|(HEAPU8[$arr_val2+1>>0]<<8)|(HEAPU8[$arr_val2+2>>0]<<16)|(HEAPU8[$arr_val2+3>>0]<<24);
               $843 = $arr_elem4;
               $844 = ((($843)) + 4|0);
               HEAP8[$844>>0]=$842&255;HEAP8[$844+1>>0]=($842>>8)&255;HEAP8[$844+2>>0]=($842>>16)&255;HEAP8[$844+3>>0]=$842>>24;
               break;
              }
              $845 = HEAP32[$arr_type3>>2]|0;
              $846 = ($845|0)==(6);
              if (!($846)) {
               label = 172;
               break L31;
              }
              $847 = HEAPU8[$arr_val2>>0]|(HEAPU8[$arr_val2+1>>0]<<8)|(HEAPU8[$arr_val2+2>>0]<<16)|(HEAPU8[$arr_val2+3>>0]<<24);
              $848 = $arr_elem4;
              $849 = ((($848)) + 4|0);
              HEAP8[$849>>0]=$847&255;HEAP8[$849+1>>0]=($847>>8)&255;HEAP8[$849+2>>0]=($847>>16)&255;HEAP8[$849+3>>0]=$847>>24;
             }
            } while(0);
            $850 = $f;
            $851 = ($850|0)!=(0);
            if ($851) {
             label = 174;
             break L31;
            }
            $883 = $opnd;
            $884 = $arr_elem4;
            (__ls_pushback($883,$884)|0);
            $885 = $f;
            $886 = (($885) + 1)|0;
            $f = $886;
            break L86;
           }
          }
          $887 = $c;
          $888 = HEAPU8[$887>>0]|(HEAPU8[$887+1>>0]<<8)|(HEAPU8[$887+2>>0]<<16)|(HEAPU8[$887+3>>0]<<24);
          $889 = ($888|0)==(9);
          if ($889) {
           $890 = $0;
           $891 = $c;
           $892 = ((($891)) + 4|0);
           $893 = HEAPU8[$892>>0]|(HEAPU8[$892+1>>0]<<8)|(HEAPU8[$892+2>>0]<<16)|(HEAPU8[$892+3>>0]<<24);
           $894 = HEAPU8[$893>>0]|(HEAPU8[$893+1>>0]<<8)|(HEAPU8[$893+2>>0]<<16)|(HEAPU8[$893+3>>0]<<24);
           $895 = $c;
           $896 = ((($895)) + 4|0);
           $897 = HEAPU8[$896>>0]|(HEAPU8[$896+1>>0]<<8)|(HEAPU8[$896+2>>0]<<16)|(HEAPU8[$896+3>>0]<<24);
           $898 = ((($897)) + 8|0);
           $899 = HEAP8[$898>>0]|0;
           $900 = $899 & 3;
           $901 = ($900<<24>>24)!=(0);
           $902 = $901 ^ 1;
           $903 = $902 ^ 1;
           $904 = $903 ? 2 : 0;
           $905 = (__search_identifier_in_scope_chain($890,0,$894,$904,0,0)|0);
           $cs5 = $905;
           $906 = $cs5;
           $907 = ($906|0)!=(0|0);
           if ($907) {
            $908 = HEAP32[$ast>>2]|0;
            HEAP32[$fn6>>2] = $908;
            $909 = HEAP32[$fn6>>2]|0;
            $910 = ($909|0)!=(0|0);
            if ($910) {
             $911 = HEAP32[$fn6>>2]|0;
             $912 = ((($911)) + 4|0);
             $913 = HEAPU8[$912>>0]|(HEAPU8[$912+1>>0]<<8)|(HEAPU8[$912+2>>0]<<16)|(HEAPU8[$912+3>>0]<<24);
             HEAP32[$fn6>>2] = $913;
            }
            $914 = $0;
            $915 = $c;
            $916 = $cs5;
            $917 = (__try_call_func_on_usertype_ref($914,$fn6,$915,$916,0)|0);
            $918 = ($917<<24>>24)!=(0);
            if (!($918)) {
             $983 = $cs5;
             $984 = HEAPU8[$983>>0]|(HEAPU8[$983+1>>0]<<8)|(HEAPU8[$983+2>>0]<<16)|(HEAPU8[$983+3>>0]<<24);
             $c = $984;
             $985 = $c;
             $986 = ($985|0)!=(0|0);
             do {
              if ($986) {
               $987 = $c;
               $988 = HEAPU8[$987>>0]|(HEAPU8[$987+1>>0]<<8)|(HEAPU8[$987+2>>0]<<16)|(HEAPU8[$987+3>>0]<<24);
               $989 = ($988|0)==(9);
               if (!($989)) {
                break;
               }
               $990 = $c;
               $991 = ((($990)) + 4|0);
               $992 = HEAPU8[$991>>0]|(HEAPU8[$991+1>>0]<<8)|(HEAPU8[$991+2>>0]<<16)|(HEAPU8[$991+3>>0]<<24);
               $993 = ((($992)) + 4|0);
               $994 = HEAPU8[$993>>0]|(HEAPU8[$993+1>>0]<<8)|(HEAPU8[$993+2>>0]<<16)|(HEAPU8[$993+3>>0]<<24);
               $995 = HEAPU8[$994>>0]|(HEAPU8[$994+1>>0]<<8)|(HEAPU8[$994+2>>0]<<16)|(HEAPU8[$994+3>>0]<<24);
               $996 = ($995|0)==(17);
               if (!($996)) {
                break;
               }
               $997 = $c;
               $998 = ((($997)) + 4|0);
               $999 = HEAPU8[$998>>0]|(HEAPU8[$998+1>>0]<<8)|(HEAPU8[$998+2>>0]<<16)|(HEAPU8[$998+3>>0]<<24);
               $1000 = ((($999)) + 4|0);
               $1001 = HEAPU8[$1000>>0]|(HEAPU8[$1000+1>>0]<<8)|(HEAPU8[$1000+2>>0]<<16)|(HEAPU8[$1000+3>>0]<<24);
               $c = $1001;
              }
             } while(0);
             $1002 = HEAP32[$ast>>2]|0;
             $1003 = ($1002|0)!=(0|0);
             $1004 = HEAP32[$ast>>2]|0;
             $1005 = ($1004|0)!=(0|0);
             $or$cond5 = $1003 & $1005;
             if (!($or$cond5)) {
              label = 206;
              break;
             }
             $1006 = HEAP32[$ast>>2]|0;
             $1007 = HEAPU8[$1006>>0]|(HEAPU8[$1006+1>>0]<<8)|(HEAPU8[$1006+2>>0]<<16)|(HEAPU8[$1006+3>>0]<<24);
             $1008 = HEAPU8[$1007>>0]|(HEAPU8[$1007+1>>0]<<8)|(HEAPU8[$1007+2>>0]<<16)|(HEAPU8[$1007+3>>0]<<24);
             $1009 = ($1008|0)==(8);
             if (!($1009)) {
              label = 206;
              break;
             }
             $1010 = HEAP32[$ast>>2]|0;
             $1011 = HEAPU8[$1010>>0]|(HEAPU8[$1010+1>>0]<<8)|(HEAPU8[$1010+2>>0]<<16)|(HEAPU8[$1010+3>>0]<<24);
             $1012 = ((($1011)) + 4|0);
             $1013 = HEAPU8[$1012>>0]|(HEAPU8[$1012+1>>0]<<8)|(HEAPU8[$1012+2>>0]<<16)|(HEAPU8[$1012+3>>0]<<24);
             $1014 = ((($1013)) + 4|0);
             $1015 = HEAPU8[$1014>>0]|(HEAPU8[$1014+1>>0]<<8)|(HEAPU8[$1014+2>>0]<<16)|(HEAPU8[$1014+3>>0]<<24);
             $1016 = ($1015|0)==(7|0);
             $1017 = $c;
             $1018 = ($1017|0)!=(0|0);
             $or$cond11 = $1016 & $1018;
             if (!($or$cond11)) {
              label = 206;
              break;
             }
             $1019 = $c;
             $1020 = HEAPU8[$1019>>0]|(HEAPU8[$1019+1>>0]<<8)|(HEAPU8[$1019+2>>0]<<16)|(HEAPU8[$1019+3>>0]<<24);
             $1021 = ($1020|0)==(17);
             if ($1021) {
              label = 117;
              break;
             } else {
              label = 206;
              break;
             }
            }
            $919 = HEAP32[$fn6>>2]|0;
            HEAP32[$ast>>2] = $919;
            $920 = (__create_object()|0);
            $c = $920;
            $921 = $garbage;
            $922 = ($921|0)!=(0|0);
            if (!($922)) {
             $923 = (__ls_create()|0);
             $garbage = $923;
            }
            $924 = $garbage;
            $925 = $c;
            (__ls_pushback($924,$925)|0);
            $926 = $running;
            $927 = ((($926)) + 20|0);
            $928 = $c;
            (__public_value_to_internal_object($927,$928)|0);
            $929 = $c;
            $930 = HEAPU8[$929>>0]|(HEAPU8[$929+1>>0]<<8)|(HEAPU8[$929+2>>0]<<16)|(HEAPU8[$929+3>>0]<<24);
            switch ($930|0) {
            case 7:  {
             $931 = $c;
             $932 = ((($931)) + 4|0);
             $933 = HEAPU8[$932>>0]|(HEAPU8[$932+1>>0]<<8)|(HEAPU8[$932+2>>0]<<16)|(HEAPU8[$932+3>>0]<<24);
             $934 = $c;
             $935 = ((($934)) + 4|0);
             $936 = HEAPU8[$935>>0]|(HEAPU8[$935+1>>0]<<8)|(HEAPU8[$935+2>>0]<<16)|(HEAPU8[$935+3>>0]<<24);
             (__ref($933,$936)|0);
             label = 206;
             break L120;
             break;
            }
            case 10:  {
             $937 = $c;
             $938 = ((($937)) + 8|0);
             $939 = HEAP8[$938>>0]|0;
             $940 = $939 & 1;
             $941 = ($940<<24>>24)!=(0);
             if ($941) {
              label = 206;
              break L120;
             }
             $942 = $c;
             $943 = ((($942)) + 4|0);
             $944 = HEAPU8[$943>>0]|(HEAPU8[$943+1>>0]<<8)|(HEAPU8[$943+2>>0]<<16)|(HEAPU8[$943+3>>0]<<24);
             $945 = $c;
             $946 = ((($945)) + 4|0);
             $947 = HEAPU8[$946>>0]|(HEAPU8[$946+1>>0]<<8)|(HEAPU8[$946+2>>0]<<16)|(HEAPU8[$946+3>>0]<<24);
             (__ref($944,$947)|0);
             label = 206;
             break L120;
             break;
            }
            case 11:  {
             $948 = $c;
             $949 = ((($948)) + 4|0);
             $950 = HEAPU8[$949>>0]|(HEAPU8[$949+1>>0]<<8)|(HEAPU8[$949+2>>0]<<16)|(HEAPU8[$949+3>>0]<<24);
             $951 = $c;
             $952 = ((($951)) + 4|0);
             $953 = HEAPU8[$952>>0]|(HEAPU8[$952+1>>0]<<8)|(HEAPU8[$952+2>>0]<<16)|(HEAPU8[$952+3>>0]<<24);
             (__ref($950,$953)|0);
             label = 206;
             break L120;
             break;
            }
            case 13:  {
             $954 = $c;
             $955 = ((($954)) + 4|0);
             $956 = HEAPU8[$955>>0]|(HEAPU8[$955+1>>0]<<8)|(HEAPU8[$955+2>>0]<<16)|(HEAPU8[$955+3>>0]<<24);
             $957 = $c;
             $958 = ((($957)) + 4|0);
             $959 = HEAPU8[$958>>0]|(HEAPU8[$958+1>>0]<<8)|(HEAPU8[$958+2>>0]<<16)|(HEAPU8[$958+3>>0]<<24);
             (__ref($956,$959)|0);
             label = 206;
             break L120;
             break;
            }
            case 16:  {
             $960 = $c;
             $961 = ((($960)) + 4|0);
             $962 = HEAPU8[$961>>0]|(HEAPU8[$961+1>>0]<<8)|(HEAPU8[$961+2>>0]<<16)|(HEAPU8[$961+3>>0]<<24);
             $963 = $c;
             $964 = ((($963)) + 4|0);
             $965 = HEAPU8[$964>>0]|(HEAPU8[$964+1>>0]<<8)|(HEAPU8[$964+2>>0]<<16)|(HEAPU8[$964+3>>0]<<24);
             (__ref($962,$965)|0);
             label = 206;
             break L120;
             break;
            }
            case 17:  {
             $966 = $c;
             $967 = ((($966)) + 8|0);
             $968 = HEAP8[$967>>0]|0;
             $969 = $968 & 1;
             $970 = ($969<<24>>24)!=(0);
             if ($970) {
              label = 206;
              break L120;
             }
             $971 = $c;
             $972 = ((($971)) + 4|0);
             $973 = HEAPU8[$972>>0]|(HEAPU8[$972+1>>0]<<8)|(HEAPU8[$972+2>>0]<<16)|(HEAPU8[$972+3>>0]<<24);
             $974 = ((($973)) + 58|0);
             $975 = HEAPU8[$974>>0]|(HEAPU8[$974+1>>0]<<8)|(HEAPU8[$974+2>>0]<<16)|(HEAPU8[$974+3>>0]<<24);
             $976 = ($975|0)==(2);
             if (!($976)) {
              label = 206;
              break L120;
             }
             $977 = $c;
             $978 = ((($977)) + 4|0);
             $979 = HEAPU8[$978>>0]|(HEAPU8[$978+1>>0]<<8)|(HEAPU8[$978+2>>0]<<16)|(HEAPU8[$978+3>>0]<<24);
             $980 = $c;
             $981 = ((($980)) + 4|0);
             $982 = HEAPU8[$981>>0]|(HEAPU8[$981+1>>0]<<8)|(HEAPU8[$981+2>>0]<<16)|(HEAPU8[$981+3>>0]<<24);
             (__ref($979,$982)|0);
             label = 206;
             break L120;
             break;
            }
            default: {
             label = 206;
             break L120;
            }
            }
           } else {
            label = 206;
           }
          }
         }
        } while(0);
        L177: do {
         if ((label|0) == 117) {
          label = 0;
          $calling = 0;
          $obj = 0;
          HEAP32[$fn>>2] = 0;
          $589 = HEAP32[$ast>>2]|0;
          $590 = ($589|0)!=(0|0);
          do {
           if ($590) {
            $591 = HEAP32[$ast>>2]|0;
            $592 = ((($591)) + 4|0);
            $593 = HEAPU8[$592>>0]|(HEAPU8[$592+1>>0]<<8)|(HEAPU8[$592+2>>0]<<16)|(HEAPU8[$592+3>>0]<<24);
            HEAP32[$ast>>2] = $593;
            $594 = $0;
            $595 = ((($594)) + 97|0);
            $596 = HEAP8[$595>>0]|0;
            $597 = $596 & 1;
            $calling = $597;
            $598 = $0;
            $599 = ((($598)) + 97|0);
            $600 = HEAP8[$599>>0]|0;
            $601 = $600 & -2;
            HEAP8[$599>>0] = $601;
            $602 = $0;
            $603 = $c;
            $604 = ((($603)) + 4|0);
            $605 = HEAPU8[$604>>0]|(HEAPU8[$604+1>>0]<<8)|(HEAPU8[$604+2>>0]<<16)|(HEAPU8[$604+3>>0]<<24);
            $606 = (__eval_routine($602,$ast,0,0,$605,143,144)|0);
            HEAP32[$result>>2] = $606;
            $607 = $calling;
            $608 = $0;
            $609 = ((($608)) + 97|0);
            $610 = HEAP8[$609>>0]|0;
            $611 = $607 & 1;
            $612 = $610 & -2;
            $613 = $612 | $611;
            HEAP8[$609>>0] = $613;
            $614 = HEAP32[$ast>>2]|0;
            $615 = ($614|0)!=(0|0);
            if ($615) {
             $616 = HEAP32[$ast>>2]|0;
             $617 = HEAPU8[$616>>0]|(HEAPU8[$616+1>>0]<<8)|(HEAPU8[$616+2>>0]<<16)|(HEAPU8[$616+3>>0]<<24);
             $618 = $617;
            } else {
             $618 = 0;
            }
            $obj = $618;
            $619 = $obj;
            $620 = ($619|0)!=(0|0);
            if (!($620)) {
             break;
            }
            $621 = $obj;
            $622 = HEAPU8[$621>>0]|(HEAPU8[$621+1>>0]<<8)|(HEAPU8[$621+2>>0]<<16)|(HEAPU8[$621+3>>0]<<24);
            $623 = ($622|0)==(9);
            if (!($623)) {
             break;
            }
            $624 = $0;
            $625 = $obj;
            $626 = ((($625)) + 4|0);
            $627 = HEAPU8[$626>>0]|(HEAPU8[$626+1>>0]<<8)|(HEAPU8[$626+2>>0]<<16)|(HEAPU8[$626+3>>0]<<24);
            $628 = HEAP32[$ast>>2]|0;
            $629 = (__is_valid_class_accessor_following_routine($624,$627,$628,$fn)|0);
            $630 = $629&255;
            $631 = ($630|0)!=(0);
            $632 = HEAP32[$fn>>2]|0;
            $633 = ($632|0)!=(0|0);
            $or$cond9 = $631 & $633;
            if (!($or$cond9)) {
             break;
            }
            $634 = HEAP32[$ast>>2]|0;
            $635 = ($634|0)!=(0|0);
            if ($635) {
             $636 = HEAP32[$ast>>2]|0;
             $637 = ((($636)) + 8|0);
             $638 = HEAPU8[$637>>0]|(HEAPU8[$637+1>>0]<<8)|(HEAPU8[$637+2>>0]<<16)|(HEAPU8[$637+3>>0]<<24);
             HEAP32[$ast>>2] = $638;
            }
            $639 = HEAP32[$fn>>2]|0;
            $640 = HEAPU8[$639>>0]|(HEAPU8[$639+1>>0]<<8)|(HEAPU8[$639+2>>0]<<16)|(HEAPU8[$639+3>>0]<<24);
            $obj = $640;
            $641 = $obj;
            $642 = ($641|0)!=(0|0);
            if (!($642)) {
             break;
            }
            $643 = $obj;
            $644 = HEAPU8[$643>>0]|(HEAPU8[$643+1>>0]<<8)|(HEAPU8[$643+2>>0]<<16)|(HEAPU8[$643+3>>0]<<24);
            $645 = ($644|0)==(9);
            if (!($645)) {
             break;
            }
            $646 = $obj;
            $c = $646;
            label = 206;
            break L177;
           }
          } while(0);
          $647 = HEAP32[$ast>>2]|0;
          $648 = ($647|0)!=(0|0);
          if ($648) {
           $649 = HEAP32[$ast>>2]|0;
           $650 = ((($649)) + 4|0);
           $651 = HEAPU8[$650>>0]|(HEAPU8[$650+1>>0]<<8)|(HEAPU8[$650+2>>0]<<16)|(HEAPU8[$650+3>>0]<<24);
           HEAP32[$ast>>2] = $651;
          }
          $652 = HEAP32[$result>>2]|0;
          $653 = ($652|0)==(6);
          if ($653) {
           label = 354;
           break L4;
          }
          $654 = HEAP32[$result>>2]|0;
          $655 = ($654|0)!=(0);
          if ($655) {
           label = 132;
           break L31;
          }
          $687 = (__create_object()|0);
          $c = $687;
          $688 = $garbage;
          $689 = ($688|0)!=(0|0);
          if (!($689)) {
           $690 = (__ls_create()|0);
           $garbage = $690;
          }
          $691 = $garbage;
          $692 = $c;
          (__ls_pushback($691,$692)|0);
          $693 = $running;
          $694 = ((($693)) + 20|0);
          $695 = $c;
          $696 = (__public_value_to_internal_object($694,$695)|0);
          HEAP32[$result>>2] = $696;
          $697 = HEAP32[$result>>2]|0;
          $698 = ($697|0)!=(0);
          if ($698) {
           label = 354;
           break L4;
          }
          $699 = $f;
          $700 = ($699|0)!=(0);
          if ($700) {
           label = 142;
           break L31;
          }
          $732 = $opnd;
          $733 = $c;
          (__ls_pushback($732,$733)|0);
          $734 = $f;
          $735 = (($734) + 1)|0;
          $f = $735;
          break L86;
         }
        } while(0);
        L203: do {
         if ((label|0) == 206) {
          label = 0;
          $1022 = HEAP32[$ast>>2]|0;
          $1023 = ($1022|0)!=(0|0);
          if ($1023) {
           $1024 = HEAP32[$ast>>2]|0;
           $1025 = HEAPU8[$1024>>0]|(HEAPU8[$1024+1>>0]<<8)|(HEAPU8[$1024+2>>0]<<16)|(HEAPU8[$1024+3>>0]<<24);
           $_err_or_bracket = $1025;
           $1026 = $c;
           $1027 = ($1026|0)!=(0|0);
           do {
            if ($1027) {
             $1028 = $c;
             $1029 = HEAPU8[$1028>>0]|(HEAPU8[$1028+1>>0]<<8)|(HEAPU8[$1028+2>>0]<<16)|(HEAPU8[$1028+3>>0]<<24);
             $1030 = ($1029|0)==(9);
             if (!($1030)) {
              break;
             }
             $1031 = $c;
             $1032 = ((($1031)) + 4|0);
             $1033 = HEAPU8[$1032>>0]|(HEAPU8[$1032+1>>0]<<8)|(HEAPU8[$1032+2>>0]<<16)|(HEAPU8[$1032+3>>0]<<24);
             $1034 = ((($1033)) + 4|0);
             $1035 = HEAPU8[$1034>>0]|(HEAPU8[$1034+1>>0]<<8)|(HEAPU8[$1034+2>>0]<<16)|(HEAPU8[$1034+3>>0]<<24);
             $1036 = ($1035|0)!=(0|0);
             if ($1036) {
              $1037 = $c;
              $1038 = ((($1037)) + 4|0);
              $1039 = HEAPU8[$1038>>0]|(HEAPU8[$1038+1>>0]<<8)|(HEAPU8[$1038+2>>0]<<16)|(HEAPU8[$1038+3>>0]<<24);
              $1040 = ((($1039)) + 4|0);
              $1041 = HEAPU8[$1040>>0]|(HEAPU8[$1040+1>>0]<<8)|(HEAPU8[$1040+2>>0]<<16)|(HEAPU8[$1040+3>>0]<<24);
              $1042 = HEAPU8[$1041>>0]|(HEAPU8[$1041+1>>0]<<8)|(HEAPU8[$1041+2>>0]<<16)|(HEAPU8[$1041+3>>0]<<24);
              $1043 = ($1042|0)==(11);
              if (!($1043)) {
               label = 211;
              }
             } else {
              label = 211;
             }
             if ((label|0) == 211) {
              label = 0;
              $1044 = $c;
              $1045 = ((($1044)) + 4|0);
              $1046 = HEAPU8[$1045>>0]|(HEAPU8[$1045+1>>0]<<8)|(HEAPU8[$1045+2>>0]<<16)|(HEAPU8[$1045+3>>0]<<24);
              $1047 = ((($1046)) + 4|0);
              $1048 = HEAPU8[$1047>>0]|(HEAPU8[$1047+1>>0]<<8)|(HEAPU8[$1047+2>>0]<<16)|(HEAPU8[$1047+3>>0]<<24);
              $1049 = ($1048|0)!=(0|0);
              if (!($1049)) {
               break;
              }
              $1050 = $c;
              $1051 = ((($1050)) + 4|0);
              $1052 = HEAPU8[$1051>>0]|(HEAPU8[$1051+1>>0]<<8)|(HEAPU8[$1051+2>>0]<<16)|(HEAPU8[$1051+3>>0]<<24);
              $1053 = ((($1052)) + 4|0);
              $1054 = HEAPU8[$1053>>0]|(HEAPU8[$1053+1>>0]<<8)|(HEAPU8[$1053+2>>0]<<16)|(HEAPU8[$1053+3>>0]<<24);
              $1055 = HEAPU8[$1054>>0]|(HEAPU8[$1054+1>>0]<<8)|(HEAPU8[$1054+2>>0]<<16)|(HEAPU8[$1054+3>>0]<<24);
              $1056 = ($1055|0)==(13);
              if (!($1056)) {
               break;
              }
             }
             $1057 = $_err_or_bracket;
             $1058 = HEAPU8[$1057>>0]|(HEAPU8[$1057+1>>0]<<8)|(HEAPU8[$1057+2>>0]<<16)|(HEAPU8[$1057+3>>0]<<24);
             $1059 = ($1058|0)==(8);
             if (!($1059)) {
              break L203;
             }
             $1060 = $_err_or_bracket;
             $1061 = ((($1060)) + 4|0);
             $1062 = HEAPU8[$1061>>0]|(HEAPU8[$1061+1>>0]<<8)|(HEAPU8[$1061+2>>0]<<16)|(HEAPU8[$1061+3>>0]<<24);
             $1063 = ((($1062)) + 4|0);
             $1064 = HEAPU8[$1063>>0]|(HEAPU8[$1063+1>>0]<<8)|(HEAPU8[$1063+2>>0]<<16)|(HEAPU8[$1063+3>>0]<<24);
             $1065 = ($1064|0)==(7|0);
             if (!($1065)) {
              break L203;
             }
             HEAP32[$idx>>2] = 0;
             $1066 = $c;
             $1067 = ((($1066)) + 4|0);
             $1068 = HEAPU8[$1067>>0]|(HEAPU8[$1067+1>>0]<<8)|(HEAPU8[$1067+2>>0]<<16)|(HEAPU8[$1067+3>>0]<<24);
             $1069 = ((($1068)) + 4|0);
             $1070 = HEAPU8[$1069>>0]|(HEAPU8[$1069+1>>0]<<8)|(HEAPU8[$1069+2>>0]<<16)|(HEAPU8[$1069+3>>0]<<24);
             $ocoll = $1070;
             $1071 = ((($ret)) + 4|0);
             ;HEAP8[$1071>>0]=0|0;HEAP8[$1071+1>>0]=0|0;HEAP8[$1071+2>>0]=0|0;HEAP8[$1071+3>>0]=0|0;
             HEAP8[$ret>>0]=0&255;HEAP8[$ret+1>>0]=(0>>8)&255;HEAP8[$ret+2>>0]=(0>>16)&255;HEAP8[$ret+3>>0]=0>>24;
             $1072 = HEAP32[$ast>>2]|0;
             $1073 = ((($1072)) + 4|0);
             $1074 = HEAPU8[$1073>>0]|(HEAPU8[$1073+1>>0]<<8)|(HEAPU8[$1073+2>>0]<<16)|(HEAPU8[$1073+3>>0]<<24);
             $1075 = $1;
             HEAP32[$1075>>2] = $1074;
             $1076 = $0;
             $1077 = $1;
             $1078 = (_mb_attempt_open_bracket($1076,$1077)|0);
             $1079 = ($1078|0)!=(0);
             if ($1079) {
              label = 354;
              break L4;
             }
             $1080 = $ocoll;
             $1081 = HEAPU8[$1080>>0]|(HEAPU8[$1080+1>>0]<<8)|(HEAPU8[$1080+2>>0]<<16)|(HEAPU8[$1080+3>>0]<<24);
             switch ($1081|0) {
             case 11:  {
              $1082 = $0;
              $1083 = $1;
              $1084 = (_mb_pop_int($1082,$1083,$idx)|0);
              $1085 = ($1084|0)!=(0);
              if ($1085) {
               label = 354;
               break L4;
              }
              $1086 = $ocoll;
              $1087 = ((($1086)) + 4|0);
              $1088 = HEAPU8[$1087>>0]|(HEAPU8[$1087+1>>0]<<8)|(HEAPU8[$1087+2>>0]<<16)|(HEAPU8[$1087+3>>0]<<24);
              $1089 = HEAP32[$idx>>2]|0;
              $1090 = (__at_list($1088,$1089,$ret)|0);
              $1091 = ($1090<<24>>24)!=(0);
              if (!($1091)) {
               label = 219;
               break L31;
              }
              break;
             }
             case 13:  {
              $1130 = ((($key)) + 4|0);
              ;HEAP8[$1130>>0]=0|0;HEAP8[$1130+1>>0]=0|0;HEAP8[$1130+2>>0]=0|0;HEAP8[$1130+3>>0]=0|0;
              HEAP8[$key>>0]=0&255;HEAP8[$key+1>>0]=(0>>8)&255;HEAP8[$key+2>>0]=(0>>16)&255;HEAP8[$key+3>>0]=0>>24;
              $1131 = $0;
              $1132 = $1;
              $1133 = (_mb_pop_value($1131,$1132,$key)|0);
              $1134 = ($1133|0)!=(0);
              if ($1134) {
               label = 354;
               break L4;
              }
              $1135 = $ocoll;
              $1136 = ((($1135)) + 4|0);
              $1137 = HEAPU8[$1136>>0]|(HEAPU8[$1136+1>>0]<<8)|(HEAPU8[$1136+2>>0]<<16)|(HEAPU8[$1136+3>>0]<<24);
              $1138 = (__find_dict($1137,$key,$ret)|0);
              $1139 = ($1138<<24>>24)!=(0);
              if (!($1139)) {
               label = 228;
               break L31;
              }
              break;
             }
             default: {
             }
             }
             $1178 = $0;
             $1179 = $1;
             $1180 = (_mb_attempt_close_bracket($1178,$1179)|0);
             $1181 = ($1180|0)!=(0);
             if ($1181) {
              label = 354;
              break L4;
             }
             $1182 = (__create_object()|0);
             $c = $1182;
             $1183 = $garbage;
             $1184 = ($1183|0)!=(0|0);
             if (!($1184)) {
              $1185 = (__ls_create()|0);
              $garbage = $1185;
             }
             $1186 = $garbage;
             $1187 = $c;
             (__ls_pushback($1186,$1187)|0);
             $1188 = $c;
             (__public_value_to_internal_object($ret,$1188)|0);
             $1189 = $1;
             $1190 = HEAP32[$1189>>2]|0;
             HEAP32[$ast>>2] = $1190;
             break L203;
            }
           } while(0);
           $1191 = $_err_or_bracket;
           $1192 = HEAPU8[$1191>>0]|(HEAPU8[$1191+1>>0]<<8)|(HEAPU8[$1191+2>>0]<<16)|(HEAPU8[$1191+3>>0]<<24);
           $1193 = ($1192|0)==(8);
           if ($1193) {
            $1194 = $_err_or_bracket;
            $1195 = ((($1194)) + 4|0);
            $1196 = HEAPU8[$1195>>0]|(HEAPU8[$1195+1>>0]<<8)|(HEAPU8[$1195+2>>0]<<16)|(HEAPU8[$1195+3>>0]<<24);
            $1197 = ((($1196)) + 4|0);
            $1198 = HEAPU8[$1197>>0]|(HEAPU8[$1197+1>>0]<<8)|(HEAPU8[$1197+2>>0]<<16)|(HEAPU8[$1197+3>>0]<<24);
            $1199 = ($1198|0)==(7|0);
            if ($1199) {
             label = 241;
             break L31;
            }
           }
          }
         }
        } while(0);
        $1231 = $f;
        $1232 = ($1231|0)!=(0);
        if ($1232) {
         label = 248;
         break L31;
        }
        $1264 = $opnd;
        $1265 = $c;
        (__ls_pushback($1264,$1265)|0);
        $1266 = $f;
        $1267 = (($1266) + 1)|0;
        $f = $1267;
       }
      } while(0);
      L232: do {
       if ((label|0) == 56) {
        label = 0;
        $263 = HEAP32[$ast>>2]|0;
        $264 = ($263|0)!=(0|0);
        do {
         if ($264) {
          $265 = HEAP32[$ast>>2]|0;
          $266 = HEAPU8[$265>>0]|(HEAPU8[$265+1>>0]<<8)|(HEAPU8[$265+2>>0]<<16)|(HEAPU8[$265+3>>0]<<24);
          $267 = HEAPU8[$266>>0]|(HEAPU8[$266+1>>0]<<8)|(HEAPU8[$266+2>>0]<<16)|(HEAPU8[$266+3>>0]<<24);
          $268 = ($267|0)==(8);
          if ($268) {
           $269 = HEAP32[$ast>>2]|0;
           $270 = HEAPU8[$269>>0]|(HEAPU8[$269+1>>0]<<8)|(HEAPU8[$269+2>>0]<<16)|(HEAPU8[$269+3>>0]<<24);
           $271 = ((($270)) + 4|0);
           $272 = HEAPU8[$271>>0]|(HEAPU8[$271+1>>0]<<8)|(HEAPU8[$271+2>>0]<<16)|(HEAPU8[$271+3>>0]<<24);
           $273 = ((($272)) + 4|0);
           $274 = HEAPU8[$273>>0]|(HEAPU8[$273+1>>0]<<8)|(HEAPU8[$273+2>>0]<<16)|(HEAPU8[$273+3>>0]<<24);
           $275 = ($274|0)==(7|0);
           if ($275) {
            break;
           }
          }
          $276 = $opnd;
          $277 = $c;
          (__ls_pushback($276,$277)|0);
          $278 = $f;
          $279 = (($278) + 1)|0;
          $f = $279;
          break L232;
         }
        } while(0);
        HEAP32[$arr_idx>>2] = 0;
        $arr_elem = 0;
        $280 = HEAP32[$ast>>2]|0;
        $281 = ((($280)) + 4|0);
        $282 = HEAPU8[$281>>0]|(HEAPU8[$281+1>>0]<<8)|(HEAPU8[$281+2>>0]<<16)|(HEAPU8[$281+3>>0]<<24);
        HEAP32[$ast>>2] = $282;
        $283 = $0;
        $284 = $c;
        $285 = (__get_array_index($283,$ast,$284,$arr_idx,0)|0);
        HEAP32[$result>>2] = $285;
        $286 = HEAP32[$result>>2]|0;
        $287 = ($286|0)!=(0);
        $288 = HEAP32[$ast>>2]|0;
        if ($287) {
         label = 61;
         break L31;
        }
        $319 = ((($288)) + 8|0);
        $320 = HEAPU8[$319>>0]|(HEAPU8[$319+1>>0]<<8)|(HEAPU8[$319+2>>0]<<16)|(HEAPU8[$319+3>>0]<<24);
        HEAP32[$ast>>2] = $320;
        $321 = $0;
        $322 = $c;
        $323 = ((($322)) + 4|0);
        $324 = HEAPU8[$323>>0]|(HEAPU8[$323+1>>0]<<8)|(HEAPU8[$323+2>>0]<<16)|(HEAPU8[$323+3>>0]<<24);
        $325 = HEAP32[$arr_idx>>2]|0;
        (__get_array_elem($321,$324,$325,$arr_val,$arr_type)|0);
        $326 = (__create_object()|0);
        $arr_elem = $326;
        $327 = $garbage;
        $328 = ($327|0)!=(0|0);
        if (!($328)) {
         $329 = (__ls_create()|0);
         $garbage = $329;
        }
        $330 = $garbage;
        $331 = $arr_elem;
        (__ls_pushback($330,$331)|0);
        $332 = HEAP32[$arr_type>>2]|0;
        $333 = $arr_elem;
        HEAP8[$333>>0]=$332&255;HEAP8[$333+1>>0]=($332>>8)&255;HEAP8[$333+2>>0]=($332>>16)&255;HEAP8[$333+3>>0]=$332>>24;
        $334 = $arr_elem;
        $335 = ((($334)) + 8|0);
        $336 = HEAP8[$335>>0]|0;
        $337 = $336 & -2;
        $338 = $337 | 1;
        HEAP8[$335>>0] = $338;
        $339 = $arr_elem;
        $340 = ((($339)) + 4|0);
        ;HEAP8[$340>>0]=HEAP8[$arr_val>>0]|0;HEAP8[$340+1>>0]=HEAP8[$arr_val+1>>0]|0;HEAP8[$340+2>>0]=HEAP8[$arr_val+2>>0]|0;HEAP8[$340+3>>0]=HEAP8[$arr_val+3>>0]|0;
        $341 = $f;
        $342 = ($341|0)!=(0);
        if ($342) {
         label = 70;
         break L31;
        }
        $374 = $opnd;
        $375 = $arr_elem;
        (__ls_pushback($374,$375)|0);
        $376 = $f;
        $377 = (($376) + 1)|0;
        $f = $377;
       }
      } while(0);
      $1268 = $running;
      $1269 = ((($1268)) + 28|0);
      $1270 = HEAPU8[$1269>>0]|(HEAPU8[$1269+1>>0]<<8)|(HEAPU8[$1269+2>>0]<<16)|(HEAPU8[$1269+3>>0]<<24);
      $1271 = ($1270|0)!=(-1);
      if ($1271) {
       $1272 = $running;
       $1273 = ((($1272)) + 28|0);
       $1274 = HEAPU8[$1273>>0]|(HEAPU8[$1273+1>>0]<<8)|(HEAPU8[$1273+2>>0]<<16)|(HEAPU8[$1273+3>>0]<<24);
       $1275 = (($1274) + -1)|0;
       HEAP8[$1273>>0]=$1275&255;HEAP8[$1273+1>>0]=($1275>>8)&255;HEAP8[$1273+2>>0]=($1275>>16)&255;HEAP8[$1273+3>>0]=$1275>>24;
      }
      $1276 = HEAP32[$ast>>2]|0;
      $1277 = ($1276|0)!=(0|0);
      do {
       if ($1277) {
        $1278 = $running;
        $1279 = ((($1278)) + 28|0);
        $1280 = HEAPU8[$1279>>0]|(HEAPU8[$1279+1>>0]<<8)|(HEAPU8[$1279+2>>0]<<16)|(HEAPU8[$1279+3>>0]<<24);
        $1281 = ($1280|0)==(-1);
        if (!($1281)) {
         $1282 = $running;
         $1283 = ((($1282)) + 28|0);
         $1284 = HEAPU8[$1283>>0]|(HEAPU8[$1283+1>>0]<<8)|(HEAPU8[$1283+2>>0]<<16)|(HEAPU8[$1283+3>>0]<<24);
         $1285 = ($1284|0)!=(0);
         if (!($1285)) {
          break;
         }
        }
        $1286 = HEAP32[$ast>>2]|0;
        $1287 = ($1286|0)!=(0|0);
        if ($1287) {
         $1288 = HEAP32[$ast>>2]|0;
         $1289 = HEAPU8[$1288>>0]|(HEAPU8[$1288+1>>0]<<8)|(HEAPU8[$1288+2>>0]<<16)|(HEAPU8[$1288+3>>0]<<24);
         $1290 = $1289;
        } else {
         $1290 = 0;
        }
        $c = $1290;
        $1291 = $c;
        $1292 = HEAPU8[$1291>>0]|(HEAPU8[$1291+1>>0]<<8)|(HEAPU8[$1291+2>>0]<<16)|(HEAPU8[$1291+3>>0]<<24);
        $1293 = ($1292|0)==(8);
        do {
         if ($1293) {
          $1294 = $c;
          $1295 = ((($1294)) + 4|0);
          $1296 = HEAPU8[$1295>>0]|(HEAPU8[$1295+1>>0]<<8)|(HEAPU8[$1295+2>>0]<<16)|(HEAPU8[$1295+3>>0]<<24);
          $1297 = ((($1296)) + 4|0);
          $1298 = HEAPU8[$1297>>0]|(HEAPU8[$1297+1>>0]<<8)|(HEAPU8[$1297+2>>0]<<16)|(HEAPU8[$1297+3>>0]<<24);
          $1299 = (__is_operator($1298)|0);
          $1300 = ($1299<<24>>24)!=(0);
          if ($1300) {
           break;
          }
          $1301 = $c;
          $1302 = ((($1301)) + 4|0);
          $1303 = HEAPU8[$1302>>0]|(HEAPU8[$1302+1>>0]<<8)|(HEAPU8[$1302+2>>0]<<16)|(HEAPU8[$1302+3>>0]<<24);
          $1304 = ((($1303)) + 4|0);
          $1305 = HEAPU8[$1304>>0]|(HEAPU8[$1304+1>>0]<<8)|(HEAPU8[$1304+2>>0]<<16)|(HEAPU8[$1304+3>>0]<<24);
          $1306 = (__is_flow($1305)|0);
          $1307 = ($1306<<24>>24)!=(0);
          if (!($1307)) {
           label = 265;
           break L31;
          }
         }
        } while(0);
        $1340 = HEAP32[$ast>>2]|0;
        $1341 = ((($1340)) + 8|0);
        $1342 = HEAPU8[$1341>>0]|(HEAPU8[$1341+1>>0]<<8)|(HEAPU8[$1341+2>>0]<<16)|(HEAPU8[$1341+3>>0]<<24);
        HEAP32[$ast>>2] = $1342;
        continue L31;
       }
      } while(0);
      $1343 = HEAP32[304>>2]|0;
      $c = $1343;
     }
     switch (label|0) {
      case 61: {
       $289 = ($288|0)!=(0|0);
       if ($289) {
        $290 = HEAP32[$ast>>2]|0;
        $291 = HEAPU8[$290>>0]|(HEAPU8[$290+1>>0]<<8)|(HEAPU8[$290+2>>0]<<16)|(HEAPU8[$290+3>>0]<<24);
        $292 = ($291|0)!=(0|0);
        if ($292) {
         $293 = $0;
         $294 = $0;
         $295 = ((($294)) + 67|0);
         $296 = HEAPU8[$295>>0]|(HEAPU8[$295+1>>0]<<8)|(HEAPU8[$295+2>>0]<<16)|(HEAPU8[$295+3>>0]<<24);
         $297 = (__set_current_error($293,47,$296)|0);
         $298 = ($297<<24>>24)!=(0);
         if (!($298)) {
          label = 354;
          break L4;
         }
         $299 = $0;
         $300 = HEAP32[$ast>>2]|0;
         $301 = HEAPU8[$300>>0]|(HEAPU8[$300+1>>0]<<8)|(HEAPU8[$300+2>>0]<<16)|(HEAPU8[$300+3>>0]<<24);
         $302 = ((($301)) + 9|0);
         $303 = HEAPU8[$302>>0]|(HEAPU8[$302+1>>0]<<8)|(HEAPU8[$302+2>>0]<<16)|(HEAPU8[$302+3>>0]<<24);
         $304 = HEAP32[$ast>>2]|0;
         $305 = HEAPU8[$304>>0]|(HEAPU8[$304+1>>0]<<8)|(HEAPU8[$304+2>>0]<<16)|(HEAPU8[$304+3>>0]<<24);
         $306 = ((($305)) + 13|0);
         $307 = HEAPU8[$306>>0]|(HEAPU8[$306+1>>0]<<8);
         $308 = HEAP32[$ast>>2]|0;
         $309 = HEAPU8[$308>>0]|(HEAPU8[$308+1>>0]<<8)|(HEAPU8[$308+2>>0]<<16)|(HEAPU8[$308+3>>0]<<24);
         $310 = ((($309)) + 15|0);
         $311 = HEAPU8[$310>>0]|(HEAPU8[$310+1>>0]<<8);
         __set_error_pos($299,$303,$307,$311);
         HEAP32[$result>>2] = 3;
         label = 354;
         break L4;
        }
       }
       $312 = $0;
       $313 = $0;
       $314 = ((($313)) + 67|0);
       $315 = HEAPU8[$314>>0]|(HEAPU8[$314+1>>0]<<8)|(HEAPU8[$314+2>>0]<<16)|(HEAPU8[$314+3>>0]<<24);
       $316 = (__set_current_error($312,47,$315)|0);
       $317 = ($316<<24>>24)!=(0);
       if (!($317)) {
        label = 354;
        break L4;
       }
       $318 = $0;
       __set_error_pos($318,0,0,0);
       HEAP32[$result>>2] = 3;
       label = 354;
       break L4;
       break;
      }
      case 70: {
       $343 = HEAP32[$ast>>2]|0;
       $344 = ($343|0)!=(0|0);
       if ($344) {
        $345 = HEAP32[$ast>>2]|0;
        $346 = HEAPU8[$345>>0]|(HEAPU8[$345+1>>0]<<8)|(HEAPU8[$345+2>>0]<<16)|(HEAPU8[$345+3>>0]<<24);
        $347 = ($346|0)!=(0|0);
        if ($347) {
         $348 = $0;
         $349 = $0;
         $350 = ((($349)) + 67|0);
         $351 = HEAPU8[$350>>0]|(HEAPU8[$350+1>>0]<<8)|(HEAPU8[$350+2>>0]<<16)|(HEAPU8[$350+3>>0]<<24);
         $352 = (__set_current_error($348,37,$351)|0);
         $353 = ($352<<24>>24)!=(0);
         if (!($353)) {
          label = 354;
          break L4;
         }
         $354 = $0;
         $355 = HEAP32[$ast>>2]|0;
         $356 = HEAPU8[$355>>0]|(HEAPU8[$355+1>>0]<<8)|(HEAPU8[$355+2>>0]<<16)|(HEAPU8[$355+3>>0]<<24);
         $357 = ((($356)) + 9|0);
         $358 = HEAPU8[$357>>0]|(HEAPU8[$357+1>>0]<<8)|(HEAPU8[$357+2>>0]<<16)|(HEAPU8[$357+3>>0]<<24);
         $359 = HEAP32[$ast>>2]|0;
         $360 = HEAPU8[$359>>0]|(HEAPU8[$359+1>>0]<<8)|(HEAPU8[$359+2>>0]<<16)|(HEAPU8[$359+3>>0]<<24);
         $361 = ((($360)) + 13|0);
         $362 = HEAPU8[$361>>0]|(HEAPU8[$361+1>>0]<<8);
         $363 = HEAP32[$ast>>2]|0;
         $364 = HEAPU8[$363>>0]|(HEAPU8[$363+1>>0]<<8)|(HEAPU8[$363+2>>0]<<16)|(HEAPU8[$363+3>>0]<<24);
         $365 = ((($364)) + 15|0);
         $366 = HEAPU8[$365>>0]|(HEAPU8[$365+1>>0]<<8);
         __set_error_pos($354,$358,$362,$366);
         HEAP32[$result>>2] = 3;
         label = 354;
         break L4;
        }
       }
       $367 = $0;
       $368 = $0;
       $369 = ((($368)) + 67|0);
       $370 = HEAPU8[$369>>0]|(HEAPU8[$369+1>>0]<<8)|(HEAPU8[$369+2>>0]<<16)|(HEAPU8[$369+3>>0]<<24);
       $371 = (__set_current_error($367,37,$370)|0);
       $372 = ($371<<24>>24)!=(0);
       if (!($372)) {
        label = 354;
        break L4;
       }
       $373 = $0;
       __set_error_pos($373,0,0,0);
       HEAP32[$result>>2] = 3;
       label = 354;
       break L4;
       break;
      }
      case 85: {
       $441 = HEAP32[$ast>>2]|0;
       $442 = ($441|0)!=(0|0);
       if ($442) {
        $443 = HEAP32[$ast>>2]|0;
        $444 = HEAPU8[$443>>0]|(HEAPU8[$443+1>>0]<<8)|(HEAPU8[$443+2>>0]<<16)|(HEAPU8[$443+3>>0]<<24);
        $445 = ($444|0)!=(0|0);
        if ($445) {
         $446 = $0;
         $447 = $0;
         $448 = ((($447)) + 67|0);
         $449 = HEAPU8[$448>>0]|(HEAPU8[$448+1>>0]<<8)|(HEAPU8[$448+2>>0]<<16)|(HEAPU8[$448+3>>0]<<24);
         $450 = (__set_current_error($446,47,$449)|0);
         $451 = ($450<<24>>24)!=(0);
         if (!($451)) {
          label = 354;
          break L4;
         }
         $452 = $0;
         $453 = HEAP32[$ast>>2]|0;
         $454 = HEAPU8[$453>>0]|(HEAPU8[$453+1>>0]<<8)|(HEAPU8[$453+2>>0]<<16)|(HEAPU8[$453+3>>0]<<24);
         $455 = ((($454)) + 9|0);
         $456 = HEAPU8[$455>>0]|(HEAPU8[$455+1>>0]<<8)|(HEAPU8[$455+2>>0]<<16)|(HEAPU8[$455+3>>0]<<24);
         $457 = HEAP32[$ast>>2]|0;
         $458 = HEAPU8[$457>>0]|(HEAPU8[$457+1>>0]<<8)|(HEAPU8[$457+2>>0]<<16)|(HEAPU8[$457+3>>0]<<24);
         $459 = ((($458)) + 13|0);
         $460 = HEAPU8[$459>>0]|(HEAPU8[$459+1>>0]<<8);
         $461 = HEAP32[$ast>>2]|0;
         $462 = HEAPU8[$461>>0]|(HEAPU8[$461+1>>0]<<8)|(HEAPU8[$461+2>>0]<<16)|(HEAPU8[$461+3>>0]<<24);
         $463 = ((($462)) + 15|0);
         $464 = HEAPU8[$463>>0]|(HEAPU8[$463+1>>0]<<8);
         __set_error_pos($452,$456,$460,$464);
         HEAP32[$result>>2] = 3;
         label = 354;
         break L4;
        }
       }
       $465 = $0;
       $466 = $0;
       $467 = ((($466)) + 67|0);
       $468 = HEAPU8[$467>>0]|(HEAPU8[$467+1>>0]<<8)|(HEAPU8[$467+2>>0]<<16)|(HEAPU8[$467+3>>0]<<24);
       $469 = (__set_current_error($465,47,$468)|0);
       $470 = ($469<<24>>24)!=(0);
       if (!($470)) {
        label = 354;
        break L4;
       }
       $471 = $0;
       __set_error_pos($471,0,0,0);
       HEAP32[$result>>2] = 3;
       label = 354;
       break L4;
       break;
      }
      case 99: {
       $504 = HEAP32[$ast>>2]|0;
       $505 = ($504|0)!=(0|0);
       if ($505) {
        $506 = HEAP32[$ast>>2]|0;
        $507 = HEAPU8[$506>>0]|(HEAPU8[$506+1>>0]<<8)|(HEAPU8[$506+2>>0]<<16)|(HEAPU8[$506+3>>0]<<24);
        $508 = ($507|0)!=(0|0);
        if ($508) {
         $509 = $0;
         $510 = $0;
         $511 = ((($510)) + 67|0);
         $512 = HEAPU8[$511>>0]|(HEAPU8[$511+1>>0]<<8)|(HEAPU8[$511+2>>0]<<16)|(HEAPU8[$511+3>>0]<<24);
         $513 = (__set_current_error($509,37,$512)|0);
         $514 = ($513<<24>>24)!=(0);
         if (!($514)) {
          label = 354;
          break L4;
         }
         $515 = $0;
         $516 = HEAP32[$ast>>2]|0;
         $517 = HEAPU8[$516>>0]|(HEAPU8[$516+1>>0]<<8)|(HEAPU8[$516+2>>0]<<16)|(HEAPU8[$516+3>>0]<<24);
         $518 = ((($517)) + 9|0);
         $519 = HEAPU8[$518>>0]|(HEAPU8[$518+1>>0]<<8)|(HEAPU8[$518+2>>0]<<16)|(HEAPU8[$518+3>>0]<<24);
         $520 = HEAP32[$ast>>2]|0;
         $521 = HEAPU8[$520>>0]|(HEAPU8[$520+1>>0]<<8)|(HEAPU8[$520+2>>0]<<16)|(HEAPU8[$520+3>>0]<<24);
         $522 = ((($521)) + 13|0);
         $523 = HEAPU8[$522>>0]|(HEAPU8[$522+1>>0]<<8);
         $524 = HEAP32[$ast>>2]|0;
         $525 = HEAPU8[$524>>0]|(HEAPU8[$524+1>>0]<<8)|(HEAPU8[$524+2>>0]<<16)|(HEAPU8[$524+3>>0]<<24);
         $526 = ((($525)) + 15|0);
         $527 = HEAPU8[$526>>0]|(HEAPU8[$526+1>>0]<<8);
         __set_error_pos($515,$519,$523,$527);
         HEAP32[$result>>2] = 3;
         label = 354;
         break L4;
        }
       }
       $528 = $0;
       $529 = $0;
       $530 = ((($529)) + 67|0);
       $531 = HEAPU8[$530>>0]|(HEAPU8[$530+1>>0]<<8)|(HEAPU8[$530+2>>0]<<16)|(HEAPU8[$530+3>>0]<<24);
       $532 = (__set_current_error($528,37,$531)|0);
       $533 = ($532<<24>>24)!=(0);
       if (!($533)) {
        label = 354;
        break L4;
       }
       $534 = $0;
       __set_error_pos($534,0,0,0);
       HEAP32[$result>>2] = 3;
       label = 354;
       break L4;
       break;
      }
      case 109: {
       $551 = HEAP32[$ast>>2]|0;
       $552 = ($551|0)!=(0|0);
       if ($552) {
        $553 = HEAP32[$ast>>2]|0;
        $554 = HEAPU8[$553>>0]|(HEAPU8[$553+1>>0]<<8)|(HEAPU8[$553+2>>0]<<16)|(HEAPU8[$553+3>>0]<<24);
        $555 = ($554|0)!=(0|0);
        if ($555) {
         $556 = $0;
         $557 = $0;
         $558 = ((($557)) + 67|0);
         $559 = HEAPU8[$558>>0]|(HEAPU8[$558+1>>0]<<8)|(HEAPU8[$558+2>>0]<<16)|(HEAPU8[$558+3>>0]<<24);
         $560 = (__set_current_error($556,11,$559)|0);
         $561 = ($560<<24>>24)!=(0);
         if (!($561)) {
          label = 354;
          break L4;
         }
         $562 = $0;
         $563 = HEAP32[$ast>>2]|0;
         $564 = HEAPU8[$563>>0]|(HEAPU8[$563+1>>0]<<8)|(HEAPU8[$563+2>>0]<<16)|(HEAPU8[$563+3>>0]<<24);
         $565 = ((($564)) + 9|0);
         $566 = HEAPU8[$565>>0]|(HEAPU8[$565+1>>0]<<8)|(HEAPU8[$565+2>>0]<<16)|(HEAPU8[$565+3>>0]<<24);
         $567 = HEAP32[$ast>>2]|0;
         $568 = HEAPU8[$567>>0]|(HEAPU8[$567+1>>0]<<8)|(HEAPU8[$567+2>>0]<<16)|(HEAPU8[$567+3>>0]<<24);
         $569 = ((($568)) + 13|0);
         $570 = HEAPU8[$569>>0]|(HEAPU8[$569+1>>0]<<8);
         $571 = HEAP32[$ast>>2]|0;
         $572 = HEAPU8[$571>>0]|(HEAPU8[$571+1>>0]<<8)|(HEAPU8[$571+2>>0]<<16)|(HEAPU8[$571+3>>0]<<24);
         $573 = ((($572)) + 15|0);
         $574 = HEAPU8[$573>>0]|(HEAPU8[$573+1>>0]<<8);
         __set_error_pos($562,$566,$570,$574);
         HEAP32[$result>>2] = 3;
         label = 354;
         break L4;
        }
       }
       $575 = $0;
       $576 = $0;
       $577 = ((($576)) + 67|0);
       $578 = HEAPU8[$577>>0]|(HEAPU8[$577+1>>0]<<8)|(HEAPU8[$577+2>>0]<<16)|(HEAPU8[$577+3>>0]<<24);
       $579 = (__set_current_error($575,11,$578)|0);
       $580 = ($579<<24>>24)!=(0);
       if (!($580)) {
        label = 354;
        break L4;
       }
       $581 = $0;
       __set_error_pos($581,0,0,0);
       HEAP32[$result>>2] = 3;
       label = 354;
       break L4;
       break;
      }
      case 132: {
       $656 = HEAP32[$ast>>2]|0;
       $657 = ($656|0)!=(0|0);
       if ($657) {
        $658 = HEAP32[$ast>>2]|0;
        $659 = HEAPU8[$658>>0]|(HEAPU8[$658+1>>0]<<8)|(HEAPU8[$658+2>>0]<<16)|(HEAPU8[$658+3>>0]<<24);
        $660 = ($659|0)!=(0|0);
        if ($660) {
         $661 = $0;
         $662 = $0;
         $663 = ((($662)) + 67|0);
         $664 = HEAPU8[$663>>0]|(HEAPU8[$663+1>>0]<<8)|(HEAPU8[$663+2>>0]<<16)|(HEAPU8[$663+3>>0]<<24);
         $665 = (__set_current_error($661,47,$664)|0);
         $666 = ($665<<24>>24)!=(0);
         if (!($666)) {
          label = 354;
          break L4;
         }
         $667 = $0;
         $668 = HEAP32[$ast>>2]|0;
         $669 = HEAPU8[$668>>0]|(HEAPU8[$668+1>>0]<<8)|(HEAPU8[$668+2>>0]<<16)|(HEAPU8[$668+3>>0]<<24);
         $670 = ((($669)) + 9|0);
         $671 = HEAPU8[$670>>0]|(HEAPU8[$670+1>>0]<<8)|(HEAPU8[$670+2>>0]<<16)|(HEAPU8[$670+3>>0]<<24);
         $672 = HEAP32[$ast>>2]|0;
         $673 = HEAPU8[$672>>0]|(HEAPU8[$672+1>>0]<<8)|(HEAPU8[$672+2>>0]<<16)|(HEAPU8[$672+3>>0]<<24);
         $674 = ((($673)) + 13|0);
         $675 = HEAPU8[$674>>0]|(HEAPU8[$674+1>>0]<<8);
         $676 = HEAP32[$ast>>2]|0;
         $677 = HEAPU8[$676>>0]|(HEAPU8[$676+1>>0]<<8)|(HEAPU8[$676+2>>0]<<16)|(HEAPU8[$676+3>>0]<<24);
         $678 = ((($677)) + 15|0);
         $679 = HEAPU8[$678>>0]|(HEAPU8[$678+1>>0]<<8);
         __set_error_pos($667,$671,$675,$679);
         HEAP32[$result>>2] = 3;
         label = 354;
         break L4;
        }
       }
       $680 = $0;
       $681 = $0;
       $682 = ((($681)) + 67|0);
       $683 = HEAPU8[$682>>0]|(HEAPU8[$682+1>>0]<<8)|(HEAPU8[$682+2>>0]<<16)|(HEAPU8[$682+3>>0]<<24);
       $684 = (__set_current_error($680,47,$683)|0);
       $685 = ($684<<24>>24)!=(0);
       if (!($685)) {
        label = 354;
        break L4;
       }
       $686 = $0;
       __set_error_pos($686,0,0,0);
       HEAP32[$result>>2] = 3;
       label = 354;
       break L4;
       break;
      }
      case 142: {
       $701 = HEAP32[$ast>>2]|0;
       $702 = ($701|0)!=(0|0);
       if ($702) {
        $703 = HEAP32[$ast>>2]|0;
        $704 = HEAPU8[$703>>0]|(HEAPU8[$703+1>>0]<<8)|(HEAPU8[$703+2>>0]<<16)|(HEAPU8[$703+3>>0]<<24);
        $705 = ($704|0)!=(0|0);
        if ($705) {
         $706 = $0;
         $707 = $0;
         $708 = ((($707)) + 67|0);
         $709 = HEAPU8[$708>>0]|(HEAPU8[$708+1>>0]<<8)|(HEAPU8[$708+2>>0]<<16)|(HEAPU8[$708+3>>0]<<24);
         $710 = (__set_current_error($706,37,$709)|0);
         $711 = ($710<<24>>24)!=(0);
         if (!($711)) {
          label = 354;
          break L4;
         }
         $712 = $0;
         $713 = HEAP32[$ast>>2]|0;
         $714 = HEAPU8[$713>>0]|(HEAPU8[$713+1>>0]<<8)|(HEAPU8[$713+2>>0]<<16)|(HEAPU8[$713+3>>0]<<24);
         $715 = ((($714)) + 9|0);
         $716 = HEAPU8[$715>>0]|(HEAPU8[$715+1>>0]<<8)|(HEAPU8[$715+2>>0]<<16)|(HEAPU8[$715+3>>0]<<24);
         $717 = HEAP32[$ast>>2]|0;
         $718 = HEAPU8[$717>>0]|(HEAPU8[$717+1>>0]<<8)|(HEAPU8[$717+2>>0]<<16)|(HEAPU8[$717+3>>0]<<24);
         $719 = ((($718)) + 13|0);
         $720 = HEAPU8[$719>>0]|(HEAPU8[$719+1>>0]<<8);
         $721 = HEAP32[$ast>>2]|0;
         $722 = HEAPU8[$721>>0]|(HEAPU8[$721+1>>0]<<8)|(HEAPU8[$721+2>>0]<<16)|(HEAPU8[$721+3>>0]<<24);
         $723 = ((($722)) + 15|0);
         $724 = HEAPU8[$723>>0]|(HEAPU8[$723+1>>0]<<8);
         __set_error_pos($712,$716,$720,$724);
         HEAP32[$result>>2] = 3;
         label = 354;
         break L4;
        }
       }
       $725 = $0;
       $726 = $0;
       $727 = ((($726)) + 67|0);
       $728 = HEAPU8[$727>>0]|(HEAPU8[$727+1>>0]<<8)|(HEAPU8[$727+2>>0]<<16)|(HEAPU8[$727+3>>0]<<24);
       $729 = (__set_current_error($725,37,$728)|0);
       $730 = ($729<<24>>24)!=(0);
       if (!($730)) {
        label = 354;
        break L4;
       }
       $731 = $0;
       __set_error_pos($731,0,0,0);
       HEAP32[$result>>2] = 3;
       label = 354;
       break L4;
       break;
      }
      case 156: {
       $776 = ($775|0)!=(0|0);
       if ($776) {
        $777 = HEAP32[$ast>>2]|0;
        $778 = HEAPU8[$777>>0]|(HEAPU8[$777+1>>0]<<8)|(HEAPU8[$777+2>>0]<<16)|(HEAPU8[$777+3>>0]<<24);
        $779 = ($778|0)!=(0|0);
        if ($779) {
         $780 = $0;
         $781 = $0;
         $782 = ((($781)) + 67|0);
         $783 = HEAPU8[$782>>0]|(HEAPU8[$782+1>>0]<<8)|(HEAPU8[$782+2>>0]<<16)|(HEAPU8[$782+3>>0]<<24);
         $784 = (__set_current_error($780,47,$783)|0);
         $785 = ($784<<24>>24)!=(0);
         if (!($785)) {
          label = 354;
          break L4;
         }
         $786 = $0;
         $787 = HEAP32[$ast>>2]|0;
         $788 = HEAPU8[$787>>0]|(HEAPU8[$787+1>>0]<<8)|(HEAPU8[$787+2>>0]<<16)|(HEAPU8[$787+3>>0]<<24);
         $789 = ((($788)) + 9|0);
         $790 = HEAPU8[$789>>0]|(HEAPU8[$789+1>>0]<<8)|(HEAPU8[$789+2>>0]<<16)|(HEAPU8[$789+3>>0]<<24);
         $791 = HEAP32[$ast>>2]|0;
         $792 = HEAPU8[$791>>0]|(HEAPU8[$791+1>>0]<<8)|(HEAPU8[$791+2>>0]<<16)|(HEAPU8[$791+3>>0]<<24);
         $793 = ((($792)) + 13|0);
         $794 = HEAPU8[$793>>0]|(HEAPU8[$793+1>>0]<<8);
         $795 = HEAP32[$ast>>2]|0;
         $796 = HEAPU8[$795>>0]|(HEAPU8[$795+1>>0]<<8)|(HEAPU8[$795+2>>0]<<16)|(HEAPU8[$795+3>>0]<<24);
         $797 = ((($796)) + 15|0);
         $798 = HEAPU8[$797>>0]|(HEAPU8[$797+1>>0]<<8);
         __set_error_pos($786,$790,$794,$798);
         HEAP32[$result>>2] = 3;
         label = 354;
         break L4;
        }
       }
       $799 = $0;
       $800 = $0;
       $801 = ((($800)) + 67|0);
       $802 = HEAPU8[$801>>0]|(HEAPU8[$801+1>>0]<<8)|(HEAPU8[$801+2>>0]<<16)|(HEAPU8[$801+3>>0]<<24);
       $803 = (__set_current_error($799,47,$802)|0);
       $804 = ($803<<24>>24)!=(0);
       if (!($804)) {
        label = 354;
        break L4;
       }
       $805 = $0;
       __set_error_pos($805,0,0,0);
       HEAP32[$result>>2] = 3;
       label = 354;
       break L4;
       break;
      }
      case 172: {
       ___assert_fail((8593|0),(4322|0),4019,(11374|0));
       // unreachable;
       break;
      }
      case 174: {
       $852 = HEAP32[$ast>>2]|0;
       $853 = ($852|0)!=(0|0);
       if ($853) {
        $854 = HEAP32[$ast>>2]|0;
        $855 = HEAPU8[$854>>0]|(HEAPU8[$854+1>>0]<<8)|(HEAPU8[$854+2>>0]<<16)|(HEAPU8[$854+3>>0]<<24);
        $856 = ($855|0)!=(0|0);
        if ($856) {
         $857 = $0;
         $858 = $0;
         $859 = ((($858)) + 67|0);
         $860 = HEAPU8[$859>>0]|(HEAPU8[$859+1>>0]<<8)|(HEAPU8[$859+2>>0]<<16)|(HEAPU8[$859+3>>0]<<24);
         $861 = (__set_current_error($857,37,$860)|0);
         $862 = ($861<<24>>24)!=(0);
         if (!($862)) {
          label = 354;
          break L4;
         }
         $863 = $0;
         $864 = HEAP32[$ast>>2]|0;
         $865 = HEAPU8[$864>>0]|(HEAPU8[$864+1>>0]<<8)|(HEAPU8[$864+2>>0]<<16)|(HEAPU8[$864+3>>0]<<24);
         $866 = ((($865)) + 9|0);
         $867 = HEAPU8[$866>>0]|(HEAPU8[$866+1>>0]<<8)|(HEAPU8[$866+2>>0]<<16)|(HEAPU8[$866+3>>0]<<24);
         $868 = HEAP32[$ast>>2]|0;
         $869 = HEAPU8[$868>>0]|(HEAPU8[$868+1>>0]<<8)|(HEAPU8[$868+2>>0]<<16)|(HEAPU8[$868+3>>0]<<24);
         $870 = ((($869)) + 13|0);
         $871 = HEAPU8[$870>>0]|(HEAPU8[$870+1>>0]<<8);
         $872 = HEAP32[$ast>>2]|0;
         $873 = HEAPU8[$872>>0]|(HEAPU8[$872+1>>0]<<8)|(HEAPU8[$872+2>>0]<<16)|(HEAPU8[$872+3>>0]<<24);
         $874 = ((($873)) + 15|0);
         $875 = HEAPU8[$874>>0]|(HEAPU8[$874+1>>0]<<8);
         __set_error_pos($863,$867,$871,$875);
         HEAP32[$result>>2] = 3;
         label = 354;
         break L4;
        }
       }
       $876 = $0;
       $877 = $0;
       $878 = ((($877)) + 67|0);
       $879 = HEAPU8[$878>>0]|(HEAPU8[$878+1>>0]<<8)|(HEAPU8[$878+2>>0]<<16)|(HEAPU8[$878+3>>0]<<24);
       $880 = (__set_current_error($876,37,$879)|0);
       $881 = ($880<<24>>24)!=(0);
       if (!($881)) {
        label = 354;
        break L4;
       }
       $882 = $0;
       __set_error_pos($882,0,0,0);
       HEAP32[$result>>2] = 3;
       label = 354;
       break L4;
       break;
      }
      case 219: {
       $1092 = $1;
       $1093 = ($1092|0)!=(0|0);
       if ($1093) {
        $1094 = $1;
        $1095 = HEAP32[$1094>>2]|0;
        $1096 = ($1095|0)!=(0|0);
        if ($1096) {
         $1097 = $1;
         $1098 = HEAP32[$1097>>2]|0;
         $1099 = HEAPU8[$1098>>0]|(HEAPU8[$1098+1>>0]<<8)|(HEAPU8[$1098+2>>0]<<16)|(HEAPU8[$1098+3>>0]<<24);
         $1100 = ($1099|0)!=(0|0);
         if ($1100) {
          $1101 = $0;
          $1102 = $0;
          $1103 = ((($1102)) + 67|0);
          $1104 = HEAPU8[$1103>>0]|(HEAPU8[$1103+1>>0]<<8)|(HEAPU8[$1103+2>>0]<<16)|(HEAPU8[$1103+3>>0]<<24);
          $1105 = (__set_current_error($1101,21,$1104)|0);
          $1106 = ($1105<<24>>24)!=(0);
          if (!($1106)) {
           label = 354;
           break L4;
          }
          $1107 = $0;
          $1108 = $1;
          $1109 = HEAP32[$1108>>2]|0;
          $1110 = HEAPU8[$1109>>0]|(HEAPU8[$1109+1>>0]<<8)|(HEAPU8[$1109+2>>0]<<16)|(HEAPU8[$1109+3>>0]<<24);
          $1111 = ((($1110)) + 9|0);
          $1112 = HEAPU8[$1111>>0]|(HEAPU8[$1111+1>>0]<<8)|(HEAPU8[$1111+2>>0]<<16)|(HEAPU8[$1111+3>>0]<<24);
          $1113 = $1;
          $1114 = HEAP32[$1113>>2]|0;
          $1115 = HEAPU8[$1114>>0]|(HEAPU8[$1114+1>>0]<<8)|(HEAPU8[$1114+2>>0]<<16)|(HEAPU8[$1114+3>>0]<<24);
          $1116 = ((($1115)) + 13|0);
          $1117 = HEAPU8[$1116>>0]|(HEAPU8[$1116+1>>0]<<8);
          $1118 = $1;
          $1119 = HEAP32[$1118>>2]|0;
          $1120 = HEAPU8[$1119>>0]|(HEAPU8[$1119+1>>0]<<8)|(HEAPU8[$1119+2>>0]<<16)|(HEAPU8[$1119+3>>0]<<24);
          $1121 = ((($1120)) + 15|0);
          $1122 = HEAPU8[$1121>>0]|(HEAPU8[$1121+1>>0]<<8);
          __set_error_pos($1107,$1112,$1117,$1122);
          HEAP32[$result>>2] = 3;
          label = 354;
          break L4;
         }
        }
       }
       $1123 = $0;
       $1124 = $0;
       $1125 = ((($1124)) + 67|0);
       $1126 = HEAPU8[$1125>>0]|(HEAPU8[$1125+1>>0]<<8)|(HEAPU8[$1125+2>>0]<<16)|(HEAPU8[$1125+3>>0]<<24);
       $1127 = (__set_current_error($1123,21,$1126)|0);
       $1128 = ($1127<<24>>24)!=(0);
       if (!($1128)) {
        label = 354;
        break L4;
       }
       $1129 = $0;
       __set_error_pos($1129,0,0,0);
       HEAP32[$result>>2] = 3;
       label = 354;
       break L4;
       break;
      }
      case 228: {
       $1140 = $1;
       $1141 = ($1140|0)!=(0|0);
       if ($1141) {
        $1142 = $1;
        $1143 = HEAP32[$1142>>2]|0;
        $1144 = ($1143|0)!=(0|0);
        if ($1144) {
         $1145 = $1;
         $1146 = HEAP32[$1145>>2]|0;
         $1147 = HEAPU8[$1146>>0]|(HEAPU8[$1146+1>>0]<<8)|(HEAPU8[$1146+2>>0]<<16)|(HEAPU8[$1146+3>>0]<<24);
         $1148 = ($1147|0)!=(0|0);
         if ($1148) {
          $1149 = $0;
          $1150 = $0;
          $1151 = ((($1150)) + 67|0);
          $1152 = HEAPU8[$1151>>0]|(HEAPU8[$1151+1>>0]<<8)|(HEAPU8[$1151+2>>0]<<16)|(HEAPU8[$1151+3>>0]<<24);
          $1153 = (__set_current_error($1149,21,$1152)|0);
          $1154 = ($1153<<24>>24)!=(0);
          if (!($1154)) {
           label = 354;
           break L4;
          }
          $1155 = $0;
          $1156 = $1;
          $1157 = HEAP32[$1156>>2]|0;
          $1158 = HEAPU8[$1157>>0]|(HEAPU8[$1157+1>>0]<<8)|(HEAPU8[$1157+2>>0]<<16)|(HEAPU8[$1157+3>>0]<<24);
          $1159 = ((($1158)) + 9|0);
          $1160 = HEAPU8[$1159>>0]|(HEAPU8[$1159+1>>0]<<8)|(HEAPU8[$1159+2>>0]<<16)|(HEAPU8[$1159+3>>0]<<24);
          $1161 = $1;
          $1162 = HEAP32[$1161>>2]|0;
          $1163 = HEAPU8[$1162>>0]|(HEAPU8[$1162+1>>0]<<8)|(HEAPU8[$1162+2>>0]<<16)|(HEAPU8[$1162+3>>0]<<24);
          $1164 = ((($1163)) + 13|0);
          $1165 = HEAPU8[$1164>>0]|(HEAPU8[$1164+1>>0]<<8);
          $1166 = $1;
          $1167 = HEAP32[$1166>>2]|0;
          $1168 = HEAPU8[$1167>>0]|(HEAPU8[$1167+1>>0]<<8)|(HEAPU8[$1167+2>>0]<<16)|(HEAPU8[$1167+3>>0]<<24);
          $1169 = ((($1168)) + 15|0);
          $1170 = HEAPU8[$1169>>0]|(HEAPU8[$1169+1>>0]<<8);
          __set_error_pos($1155,$1160,$1165,$1170);
          HEAP32[$result>>2] = 3;
          label = 354;
          break L4;
         }
        }
       }
       $1171 = $0;
       $1172 = $0;
       $1173 = ((($1172)) + 67|0);
       $1174 = HEAPU8[$1173>>0]|(HEAPU8[$1173+1>>0]<<8)|(HEAPU8[$1173+2>>0]<<16)|(HEAPU8[$1173+3>>0]<<24);
       $1175 = (__set_current_error($1171,21,$1174)|0);
       $1176 = ($1175<<24>>24)!=(0);
       if (!($1176)) {
        label = 354;
        break L4;
       }
       $1177 = $0;
       __set_error_pos($1177,0,0,0);
       HEAP32[$result>>2] = 3;
       label = 354;
       break L4;
       break;
      }
      case 241: {
       $1200 = HEAP32[$ast>>2]|0;
       $1201 = ($1200|0)!=(0|0);
       if ($1201) {
        $1202 = HEAP32[$ast>>2]|0;
        $1203 = HEAPU8[$1202>>0]|(HEAPU8[$1202+1>>0]<<8)|(HEAPU8[$1202+2>>0]<<16)|(HEAPU8[$1202+3>>0]<<24);
        $1204 = ($1203|0)!=(0|0);
        if ($1204) {
         $1205 = $0;
         $1206 = $0;
         $1207 = ((($1206)) + 67|0);
         $1208 = HEAPU8[$1207>>0]|(HEAPU8[$1207+1>>0]<<8)|(HEAPU8[$1207+2>>0]<<16)|(HEAPU8[$1207+3>>0]<<24);
         $1209 = (__set_current_error($1205,24,$1208)|0);
         $1210 = ($1209<<24>>24)!=(0);
         if (!($1210)) {
          label = 354;
          break L4;
         }
         $1211 = $0;
         $1212 = HEAP32[$ast>>2]|0;
         $1213 = HEAPU8[$1212>>0]|(HEAPU8[$1212+1>>0]<<8)|(HEAPU8[$1212+2>>0]<<16)|(HEAPU8[$1212+3>>0]<<24);
         $1214 = ((($1213)) + 9|0);
         $1215 = HEAPU8[$1214>>0]|(HEAPU8[$1214+1>>0]<<8)|(HEAPU8[$1214+2>>0]<<16)|(HEAPU8[$1214+3>>0]<<24);
         $1216 = HEAP32[$ast>>2]|0;
         $1217 = HEAPU8[$1216>>0]|(HEAPU8[$1216+1>>0]<<8)|(HEAPU8[$1216+2>>0]<<16)|(HEAPU8[$1216+3>>0]<<24);
         $1218 = ((($1217)) + 13|0);
         $1219 = HEAPU8[$1218>>0]|(HEAPU8[$1218+1>>0]<<8);
         $1220 = HEAP32[$ast>>2]|0;
         $1221 = HEAPU8[$1220>>0]|(HEAPU8[$1220+1>>0]<<8)|(HEAPU8[$1220+2>>0]<<16)|(HEAPU8[$1220+3>>0]<<24);
         $1222 = ((($1221)) + 15|0);
         $1223 = HEAPU8[$1222>>0]|(HEAPU8[$1222+1>>0]<<8);
         __set_error_pos($1211,$1215,$1219,$1223);
         HEAP32[$result>>2] = 3;
         label = 354;
         break L4;
        }
       }
       $1224 = $0;
       $1225 = $0;
       $1226 = ((($1225)) + 67|0);
       $1227 = HEAPU8[$1226>>0]|(HEAPU8[$1226+1>>0]<<8)|(HEAPU8[$1226+2>>0]<<16)|(HEAPU8[$1226+3>>0]<<24);
       $1228 = (__set_current_error($1224,24,$1227)|0);
       $1229 = ($1228<<24>>24)!=(0);
       if (!($1229)) {
        label = 354;
        break L4;
       }
       $1230 = $0;
       __set_error_pos($1230,0,0,0);
       HEAP32[$result>>2] = 3;
       label = 354;
       break L4;
       break;
      }
      case 248: {
       $1233 = HEAP32[$ast>>2]|0;
       $1234 = ($1233|0)!=(0|0);
       if ($1234) {
        $1235 = HEAP32[$ast>>2]|0;
        $1236 = HEAPU8[$1235>>0]|(HEAPU8[$1235+1>>0]<<8)|(HEAPU8[$1235+2>>0]<<16)|(HEAPU8[$1235+3>>0]<<24);
        $1237 = ($1236|0)!=(0|0);
        if ($1237) {
         $1238 = $0;
         $1239 = $0;
         $1240 = ((($1239)) + 67|0);
         $1241 = HEAPU8[$1240>>0]|(HEAPU8[$1240+1>>0]<<8)|(HEAPU8[$1240+2>>0]<<16)|(HEAPU8[$1240+3>>0]<<24);
         $1242 = (__set_current_error($1238,37,$1241)|0);
         $1243 = ($1242<<24>>24)!=(0);
         if (!($1243)) {
          label = 354;
          break L4;
         }
         $1244 = $0;
         $1245 = HEAP32[$ast>>2]|0;
         $1246 = HEAPU8[$1245>>0]|(HEAPU8[$1245+1>>0]<<8)|(HEAPU8[$1245+2>>0]<<16)|(HEAPU8[$1245+3>>0]<<24);
         $1247 = ((($1246)) + 9|0);
         $1248 = HEAPU8[$1247>>0]|(HEAPU8[$1247+1>>0]<<8)|(HEAPU8[$1247+2>>0]<<16)|(HEAPU8[$1247+3>>0]<<24);
         $1249 = HEAP32[$ast>>2]|0;
         $1250 = HEAPU8[$1249>>0]|(HEAPU8[$1249+1>>0]<<8)|(HEAPU8[$1249+2>>0]<<16)|(HEAPU8[$1249+3>>0]<<24);
         $1251 = ((($1250)) + 13|0);
         $1252 = HEAPU8[$1251>>0]|(HEAPU8[$1251+1>>0]<<8);
         $1253 = HEAP32[$ast>>2]|0;
         $1254 = HEAPU8[$1253>>0]|(HEAPU8[$1253+1>>0]<<8)|(HEAPU8[$1253+2>>0]<<16)|(HEAPU8[$1253+3>>0]<<24);
         $1255 = ((($1254)) + 15|0);
         $1256 = HEAPU8[$1255>>0]|(HEAPU8[$1255+1>>0]<<8);
         __set_error_pos($1244,$1248,$1252,$1256);
         HEAP32[$result>>2] = 3;
         label = 354;
         break L4;
        }
       }
       $1257 = $0;
       $1258 = $0;
       $1259 = ((($1258)) + 67|0);
       $1260 = HEAPU8[$1259>>0]|(HEAPU8[$1259+1>>0]<<8)|(HEAPU8[$1259+2>>0]<<16)|(HEAPU8[$1259+3>>0]<<24);
       $1261 = (__set_current_error($1257,37,$1260)|0);
       $1262 = ($1261<<24>>24)!=(0);
       if (!($1262)) {
        label = 354;
        break L4;
       }
       $1263 = $0;
       __set_error_pos($1263,0,0,0);
       HEAP32[$result>>2] = 3;
       label = 354;
       break L4;
       break;
      }
      case 265: {
       $1308 = $opnd;
       (__ls_foreach($1308,145)|0);
       $1309 = HEAP32[$ast>>2]|0;
       $1310 = ($1309|0)!=(0|0);
       if ($1310) {
        $1311 = HEAP32[$ast>>2]|0;
        $1312 = HEAPU8[$1311>>0]|(HEAPU8[$1311+1>>0]<<8)|(HEAPU8[$1311+2>>0]<<16)|(HEAPU8[$1311+3>>0]<<24);
        $1313 = ($1312|0)!=(0|0);
        if ($1313) {
         $1314 = $0;
         $1315 = $0;
         $1316 = ((($1315)) + 67|0);
         $1317 = HEAPU8[$1316>>0]|(HEAPU8[$1316+1>>0]<<8)|(HEAPU8[$1316+2>>0]<<16)|(HEAPU8[$1316+3>>0]<<24);
         $1318 = (__set_current_error($1314,30,$1317)|0);
         $1319 = ($1318<<24>>24)!=(0);
         if (!($1319)) {
          label = 354;
          break L4;
         }
         $1320 = $0;
         $1321 = HEAP32[$ast>>2]|0;
         $1322 = HEAPU8[$1321>>0]|(HEAPU8[$1321+1>>0]<<8)|(HEAPU8[$1321+2>>0]<<16)|(HEAPU8[$1321+3>>0]<<24);
         $1323 = ((($1322)) + 9|0);
         $1324 = HEAPU8[$1323>>0]|(HEAPU8[$1323+1>>0]<<8)|(HEAPU8[$1323+2>>0]<<16)|(HEAPU8[$1323+3>>0]<<24);
         $1325 = HEAP32[$ast>>2]|0;
         $1326 = HEAPU8[$1325>>0]|(HEAPU8[$1325+1>>0]<<8)|(HEAPU8[$1325+2>>0]<<16)|(HEAPU8[$1325+3>>0]<<24);
         $1327 = ((($1326)) + 13|0);
         $1328 = HEAPU8[$1327>>0]|(HEAPU8[$1327+1>>0]<<8);
         $1329 = HEAP32[$ast>>2]|0;
         $1330 = HEAPU8[$1329>>0]|(HEAPU8[$1329+1>>0]<<8)|(HEAPU8[$1329+2>>0]<<16)|(HEAPU8[$1329+3>>0]<<24);
         $1331 = ((($1330)) + 15|0);
         $1332 = HEAPU8[$1331>>0]|(HEAPU8[$1331+1>>0]<<8);
         __set_error_pos($1320,$1324,$1328,$1332);
         HEAP32[$result>>2] = 3;
         label = 354;
         break L4;
        }
       }
       $1333 = $0;
       $1334 = $0;
       $1335 = ((($1334)) + 67|0);
       $1336 = HEAPU8[$1335>>0]|(HEAPU8[$1335+1>>0]<<8)|(HEAPU8[$1335+2>>0]<<16)|(HEAPU8[$1335+3>>0]<<24);
       $1337 = (__set_current_error($1333,30,$1336)|0);
       $1338 = ($1337<<24>>24)!=(0);
       if (!($1338)) {
        label = 354;
        break L4;
       }
       $1339 = $0;
       __set_error_pos($1339,0,0,0);
       HEAP32[$result>>2] = 3;
       label = 354;
       break L4;
       break;
      }
      case 284: {
       $1396 = $optr;
       __ls_clear($1396);
       $1397 = $errn;
       $1398 = ($1397|0)!=(0|0);
       if ($1398) {
        $1399 = $errn;
        $1400 = ($1399|0)!=(0|0);
        if ($1400) {
         $1401 = $errn;
         $1402 = HEAPU8[$1401>>0]|(HEAPU8[$1401+1>>0]<<8)|(HEAPU8[$1401+2>>0]<<16)|(HEAPU8[$1401+3>>0]<<24);
         $1403 = ($1402|0)!=(0|0);
         if (!($1403)) {
          label = 300;
         }
        } else {
         label = 300;
        }
       } else {
        $1404 = HEAP32[$ast>>2]|0;
        $1405 = ($1404|0)!=(0|0);
        if ($1405) {
         $1406 = HEAP32[$ast>>2]|0;
         $1407 = HEAPU8[$1406>>0]|(HEAPU8[$1406+1>>0]<<8)|(HEAPU8[$1406+2>>0]<<16)|(HEAPU8[$1406+3>>0]<<24);
         $1408 = ($1407|0)!=(0|0);
         if (!($1408)) {
          label = 300;
         }
        } else {
         label = 300;
        }
       }
       if ((label|0) == 300) {
        $1440 = $0;
        $1441 = $0;
        $1442 = ((($1441)) + 67|0);
        $1443 = HEAPU8[$1442>>0]|(HEAPU8[$1442+1>>0]<<8)|(HEAPU8[$1442+2>>0]<<16)|(HEAPU8[$1442+3>>0]<<24);
        $1444 = (__set_current_error($1440,36,$1443)|0);
        $1445 = ($1444<<24>>24)!=(0);
        if (!($1445)) {
         label = 354;
         break L4;
        }
        $1446 = $0;
        __set_error_pos($1446,0,0,0);
        HEAP32[$result>>2] = 3;
        label = 354;
        break L4;
       }
       $1409 = $0;
       $1410 = $0;
       $1411 = ((($1410)) + 67|0);
       $1412 = HEAPU8[$1411>>0]|(HEAPU8[$1411+1>>0]<<8)|(HEAPU8[$1411+2>>0]<<16)|(HEAPU8[$1411+3>>0]<<24);
       $1413 = (__set_current_error($1409,36,$1412)|0);
       $1414 = ($1413<<24>>24)!=(0);
       if (!($1414)) {
        label = 354;
        break L4;
       }
       $1415 = $0;
       $1416 = $errn;
       $1417 = ($1416|0)!=(0|0);
       if ($1417) {
        $1418 = $errn;
        $1419 = HEAPU8[$1418>>0]|(HEAPU8[$1418+1>>0]<<8)|(HEAPU8[$1418+2>>0]<<16)|(HEAPU8[$1418+3>>0]<<24);
        $$sink = $1419;
       } else {
        $1420 = HEAP32[$ast>>2]|0;
        $1421 = HEAPU8[$1420>>0]|(HEAPU8[$1420+1>>0]<<8)|(HEAPU8[$1420+2>>0]<<16)|(HEAPU8[$1420+3>>0]<<24);
        $$sink = $1421;
       }
       $1422 = ((($$sink)) + 9|0);
       $1423 = HEAPU8[$1422>>0]|(HEAPU8[$1422+1>>0]<<8)|(HEAPU8[$1422+2>>0]<<16)|(HEAPU8[$1422+3>>0]<<24);
       $1424 = $errn;
       $1425 = ($1424|0)!=(0|0);
       if ($1425) {
        $1426 = $errn;
        $1427 = HEAPU8[$1426>>0]|(HEAPU8[$1426+1>>0]<<8)|(HEAPU8[$1426+2>>0]<<16)|(HEAPU8[$1426+3>>0]<<24);
        $$sink12 = $1427;
       } else {
        $1428 = HEAP32[$ast>>2]|0;
        $1429 = HEAPU8[$1428>>0]|(HEAPU8[$1428+1>>0]<<8)|(HEAPU8[$1428+2>>0]<<16)|(HEAPU8[$1428+3>>0]<<24);
        $$sink12 = $1429;
       }
       $1430 = ((($$sink12)) + 13|0);
       $1431 = HEAPU8[$1430>>0]|(HEAPU8[$1430+1>>0]<<8);
       $1432 = $errn;
       $1433 = ($1432|0)!=(0|0);
       if ($1433) {
        $1434 = $errn;
        $1435 = HEAPU8[$1434>>0]|(HEAPU8[$1434+1>>0]<<8)|(HEAPU8[$1434+2>>0]<<16)|(HEAPU8[$1434+3>>0]<<24);
        $$sink13 = $1435;
       } else {
        $1436 = HEAP32[$ast>>2]|0;
        $1437 = HEAPU8[$1436>>0]|(HEAPU8[$1436+1>>0]<<8)|(HEAPU8[$1436+2>>0]<<16)|(HEAPU8[$1436+3>>0]<<24);
        $$sink13 = $1437;
       }
       $1438 = ((($$sink13)) + 15|0);
       $1439 = HEAPU8[$1438>>0]|(HEAPU8[$1438+1>>0]<<8);
       __set_error_pos($1415,$1423,$1431,$1439);
       HEAP32[$result>>2] = 3;
       label = 354;
       break L4;
       break;
      }
      case 307: {
       $1463 = $errn;
       $1464 = ($1463|0)!=(0|0);
       if ($1464) {
        $1465 = $errn;
        $1466 = ($1465|0)!=(0|0);
        if ($1466) {
         $1467 = $errn;
         $1468 = HEAPU8[$1467>>0]|(HEAPU8[$1467+1>>0]<<8)|(HEAPU8[$1467+2>>0]<<16)|(HEAPU8[$1467+3>>0]<<24);
         $1469 = ($1468|0)!=(0|0);
         if (!($1469)) {
          label = 323;
         }
        } else {
         label = 323;
        }
       } else {
        $1470 = HEAP32[$ast>>2]|0;
        $1471 = ($1470|0)!=(0|0);
        if ($1471) {
         $1472 = HEAP32[$ast>>2]|0;
         $1473 = HEAPU8[$1472>>0]|(HEAPU8[$1472+1>>0]<<8)|(HEAPU8[$1472+2>>0]<<16)|(HEAPU8[$1472+3>>0]<<24);
         $1474 = ($1473|0)!=(0|0);
         if (!($1474)) {
          label = 323;
         }
        } else {
         label = 323;
        }
       }
       if ((label|0) == 323) {
        $1506 = $0;
        $1507 = $0;
        $1508 = ((($1507)) + 67|0);
        $1509 = HEAPU8[$1508>>0]|(HEAPU8[$1508+1>>0]<<8)|(HEAPU8[$1508+2>>0]<<16)|(HEAPU8[$1508+3>>0]<<24);
        $1510 = (__set_current_error($1506,36,$1509)|0);
        $1511 = ($1510<<24>>24)!=(0);
        if (!($1511)) {
         label = 354;
         break L4;
        }
        $1512 = $0;
        __set_error_pos($1512,0,0,0);
        HEAP32[$result>>2] = 3;
        label = 354;
        break L4;
       }
       $1475 = $0;
       $1476 = $0;
       $1477 = ((($1476)) + 67|0);
       $1478 = HEAPU8[$1477>>0]|(HEAPU8[$1477+1>>0]<<8)|(HEAPU8[$1477+2>>0]<<16)|(HEAPU8[$1477+3>>0]<<24);
       $1479 = (__set_current_error($1475,36,$1478)|0);
       $1480 = ($1479<<24>>24)!=(0);
       if (!($1480)) {
        label = 354;
        break L4;
       }
       $1481 = $0;
       $1482 = $errn;
       $1483 = ($1482|0)!=(0|0);
       if ($1483) {
        $1484 = $errn;
        $1485 = HEAPU8[$1484>>0]|(HEAPU8[$1484+1>>0]<<8)|(HEAPU8[$1484+2>>0]<<16)|(HEAPU8[$1484+3>>0]<<24);
        $$sink14 = $1485;
       } else {
        $1486 = HEAP32[$ast>>2]|0;
        $1487 = HEAPU8[$1486>>0]|(HEAPU8[$1486+1>>0]<<8)|(HEAPU8[$1486+2>>0]<<16)|(HEAPU8[$1486+3>>0]<<24);
        $$sink14 = $1487;
       }
       $1488 = ((($$sink14)) + 9|0);
       $1489 = HEAPU8[$1488>>0]|(HEAPU8[$1488+1>>0]<<8)|(HEAPU8[$1488+2>>0]<<16)|(HEAPU8[$1488+3>>0]<<24);
       $1490 = $errn;
       $1491 = ($1490|0)!=(0|0);
       if ($1491) {
        $1492 = $errn;
        $1493 = HEAPU8[$1492>>0]|(HEAPU8[$1492+1>>0]<<8)|(HEAPU8[$1492+2>>0]<<16)|(HEAPU8[$1492+3>>0]<<24);
        $$sink15 = $1493;
       } else {
        $1494 = HEAP32[$ast>>2]|0;
        $1495 = HEAPU8[$1494>>0]|(HEAPU8[$1494+1>>0]<<8)|(HEAPU8[$1494+2>>0]<<16)|(HEAPU8[$1494+3>>0]<<24);
        $$sink15 = $1495;
       }
       $1496 = ((($$sink15)) + 13|0);
       $1497 = HEAPU8[$1496>>0]|(HEAPU8[$1496+1>>0]<<8);
       $1498 = $errn;
       $1499 = ($1498|0)!=(0|0);
       if ($1499) {
        $1500 = $errn;
        $1501 = HEAPU8[$1500>>0]|(HEAPU8[$1500+1>>0]<<8)|(HEAPU8[$1500+2>>0]<<16)|(HEAPU8[$1500+3>>0]<<24);
        $$sink16 = $1501;
       } else {
        $1502 = HEAP32[$ast>>2]|0;
        $1503 = HEAPU8[$1502>>0]|(HEAPU8[$1502+1>>0]<<8)|(HEAPU8[$1502+2>>0]<<16)|(HEAPU8[$1502+3>>0]<<24);
        $$sink16 = $1503;
       }
       $1504 = ((($$sink16)) + 15|0);
       $1505 = HEAPU8[$1504>>0]|(HEAPU8[$1504+1>>0]<<8);
       __set_error_pos($1481,$1489,$1497,$1505);
       HEAP32[$result>>2] = 3;
       label = 354;
       break L4;
       break;
      }
      case 325: {
       $1513 = $errn;
       $1514 = ($1513|0)!=(0|0);
       if ($1514) {
        $1515 = $errn;
        $1516 = ($1515|0)!=(0|0);
        if ($1516) {
         $1517 = $errn;
         $1518 = HEAPU8[$1517>>0]|(HEAPU8[$1517+1>>0]<<8)|(HEAPU8[$1517+2>>0]<<16)|(HEAPU8[$1517+3>>0]<<24);
         $1519 = ($1518|0)!=(0|0);
         if ($1519) {
          $1520 = $0;
          $1521 = $0;
          $1522 = ((($1521)) + 67|0);
          $1523 = HEAPU8[$1522>>0]|(HEAPU8[$1522+1>>0]<<8)|(HEAPU8[$1522+2>>0]<<16)|(HEAPU8[$1522+3>>0]<<24);
          $1524 = (__set_current_error($1520,34,$1523)|0);
          $1525 = ($1524<<24>>24)!=(0);
          if (!($1525)) {
           label = 354;
           break L4;
          }
          $1526 = $0;
          $1527 = $errn;
          $1528 = HEAPU8[$1527>>0]|(HEAPU8[$1527+1>>0]<<8)|(HEAPU8[$1527+2>>0]<<16)|(HEAPU8[$1527+3>>0]<<24);
          $1529 = ((($1528)) + 9|0);
          $1530 = HEAPU8[$1529>>0]|(HEAPU8[$1529+1>>0]<<8)|(HEAPU8[$1529+2>>0]<<16)|(HEAPU8[$1529+3>>0]<<24);
          $1531 = $errn;
          $1532 = HEAPU8[$1531>>0]|(HEAPU8[$1531+1>>0]<<8)|(HEAPU8[$1531+2>>0]<<16)|(HEAPU8[$1531+3>>0]<<24);
          $1533 = ((($1532)) + 13|0);
          $1534 = HEAPU8[$1533>>0]|(HEAPU8[$1533+1>>0]<<8);
          $1535 = $errn;
          $1536 = HEAPU8[$1535>>0]|(HEAPU8[$1535+1>>0]<<8)|(HEAPU8[$1535+2>>0]<<16)|(HEAPU8[$1535+3>>0]<<24);
          $1537 = ((($1536)) + 15|0);
          $1538 = HEAPU8[$1537>>0]|(HEAPU8[$1537+1>>0]<<8);
          __set_error_pos($1526,$1530,$1534,$1538);
          HEAP32[$result>>2] = 3;
          label = 354;
          break L4;
         }
        }
        $1539 = $0;
        $1540 = $0;
        $1541 = ((($1540)) + 67|0);
        $1542 = HEAPU8[$1541>>0]|(HEAPU8[$1541+1>>0]<<8)|(HEAPU8[$1541+2>>0]<<16)|(HEAPU8[$1541+3>>0]<<24);
        $1543 = (__set_current_error($1539,34,$1542)|0);
        $1544 = ($1543<<24>>24)!=(0);
        if (!($1544)) {
         label = 354;
         break L4;
        }
        $1545 = $0;
        __set_error_pos($1545,0,0,0);
        HEAP32[$result>>2] = 3;
        label = 354;
        break L4;
       }
       $1546 = $opnd;
       $1547 = (__ls_popback($1546)|0);
       $c = $1547;
       $1548 = $0;
       $1549 = $c;
       $1550 = (__is_unexpected_calc_type($1548,$1549)|0);
       $1551 = ($1550<<24>>24)!=(0);
       $1552 = HEAP32[$ast>>2]|0;
       $1553 = ($1552|0)!=(0|0);
       if (!($1551)) {
        if (!($1553)) {
         break L6;
        }
        $1583 = HEAP32[$ast>>2]|0;
        $1584 = ((($1583)) + 4|0);
        $1585 = HEAPU8[$1584>>0]|(HEAPU8[$1584+1>>0]<<8)|(HEAPU8[$1584+2>>0]<<16)|(HEAPU8[$1584+3>>0]<<24);
        $1586 = $1;
        $1587 = HEAP32[$1586>>2]|0;
        $1588 = ($1585|0)==($1587|0);
        if (!($1588)) {
         break L6;
        }
        $1589 = $1;
        $1590 = HEAP32[$1589>>2]|0;
        $1591 = HEAPU8[$1590>>0]|(HEAPU8[$1590+1>>0]<<8)|(HEAPU8[$1590+2>>0]<<16)|(HEAPU8[$1590+3>>0]<<24);
        $obj7 = $1591;
        $1592 = $obj7;
        $1593 = HEAPU8[$1592>>0]|(HEAPU8[$1592+1>>0]<<8)|(HEAPU8[$1592+2>>0]<<16)|(HEAPU8[$1592+3>>0]<<24);
        switch ($1593|0) {
        case 3: case 2: case 0:  {
         break;
        }
        default: {
         break L6;
        }
        }
        $1594 = $obj7;
        $1595 = ((($1594)) + 8|0);
        $1596 = HEAP8[$1595>>0]|0;
        $1597 = $1596 & -3;
        $1598 = $1597 | 2;
        HEAP8[$1595>>0] = $1598;
        break L6;
       }
       if ($1553) {
        $1554 = HEAP32[$ast>>2]|0;
        $1555 = HEAPU8[$1554>>0]|(HEAPU8[$1554+1>>0]<<8)|(HEAPU8[$1554+2>>0]<<16)|(HEAPU8[$1554+3>>0]<<24);
        $1556 = ($1555|0)!=(0|0);
        if ($1556) {
         $1557 = $0;
         $1558 = $0;
         $1559 = ((($1558)) + 67|0);
         $1560 = HEAPU8[$1559>>0]|(HEAPU8[$1559+1>>0]<<8)|(HEAPU8[$1559+2>>0]<<16)|(HEAPU8[$1559+3>>0]<<24);
         $1561 = (__set_current_error($1557,14,$1560)|0);
         $1562 = ($1561<<24>>24)!=(0);
         if (!($1562)) {
          label = 354;
          break L4;
         }
         $1563 = $0;
         $1564 = HEAP32[$ast>>2]|0;
         $1565 = HEAPU8[$1564>>0]|(HEAPU8[$1564+1>>0]<<8)|(HEAPU8[$1564+2>>0]<<16)|(HEAPU8[$1564+3>>0]<<24);
         $1566 = ((($1565)) + 9|0);
         $1567 = HEAPU8[$1566>>0]|(HEAPU8[$1566+1>>0]<<8)|(HEAPU8[$1566+2>>0]<<16)|(HEAPU8[$1566+3>>0]<<24);
         $1568 = HEAP32[$ast>>2]|0;
         $1569 = HEAPU8[$1568>>0]|(HEAPU8[$1568+1>>0]<<8)|(HEAPU8[$1568+2>>0]<<16)|(HEAPU8[$1568+3>>0]<<24);
         $1570 = ((($1569)) + 13|0);
         $1571 = HEAPU8[$1570>>0]|(HEAPU8[$1570+1>>0]<<8);
         $1572 = HEAP32[$ast>>2]|0;
         $1573 = HEAPU8[$1572>>0]|(HEAPU8[$1572+1>>0]<<8)|(HEAPU8[$1572+2>>0]<<16)|(HEAPU8[$1572+3>>0]<<24);
         $1574 = ((($1573)) + 15|0);
         $1575 = HEAPU8[$1574>>0]|(HEAPU8[$1574+1>>0]<<8);
         __set_error_pos($1563,$1567,$1571,$1575);
         HEAP32[$result>>2] = 3;
         label = 354;
         break L4;
        }
       }
       $1576 = $0;
       $1577 = $0;
       $1578 = ((($1577)) + 67|0);
       $1579 = HEAPU8[$1578>>0]|(HEAPU8[$1578+1>>0]<<8)|(HEAPU8[$1578+2>>0]<<16)|(HEAPU8[$1578+3>>0]<<24);
       $1580 = (__set_current_error($1576,14,$1579)|0);
       $1581 = ($1580<<24>>24)!=(0);
       if (!($1581)) {
        label = 354;
        break L4;
       }
       $1582 = $0;
       __set_error_pos($1582,0,0,0);
       HEAP32[$result>>2] = 3;
       label = 354;
       break L4;
       break;
      }
     }
    }
   } while(0);
   $1599 = $c;
   $1600 = HEAPU8[$1599>>0]|(HEAPU8[$1599+1>>0]<<8)|(HEAPU8[$1599+2>>0]<<16)|(HEAPU8[$1599+3>>0]<<24);
   $1601 = ($1600|0)==(9);
   $1602 = $c;
   do {
    if ($1601) {
     $1603 = ((($1602)) + 4|0);
     $1604 = HEAPU8[$1603>>0]|(HEAPU8[$1603+1>>0]<<8)|(HEAPU8[$1603+2>>0]<<16)|(HEAPU8[$1603+3>>0]<<24);
     $1605 = ((($1604)) + 4|0);
     $1606 = HEAPU8[$1605>>0]|(HEAPU8[$1605+1>>0]<<8)|(HEAPU8[$1605+2>>0]<<16)|(HEAPU8[$1605+3>>0]<<24);
     $1607 = HEAPU8[$1606>>0]|(HEAPU8[$1606+1>>0]<<8)|(HEAPU8[$1606+2>>0]<<16)|(HEAPU8[$1606+3>>0]<<24);
     $1608 = $2;
     $1609 = HEAP32[$1608>>2]|0;
     HEAP8[$1609>>0]=$1607&255;HEAP8[$1609+1>>0]=($1607>>8)&255;HEAP8[$1609+2>>0]=($1607>>16)&255;HEAP8[$1609+3>>0]=$1607>>24;
     $1610 = $2;
     $1611 = HEAP32[$1610>>2]|0;
     $1612 = ((($1611)) + 4|0);
     $1613 = $c;
     $1614 = ((($1613)) + 4|0);
     $1615 = HEAPU8[$1614>>0]|(HEAPU8[$1614+1>>0]<<8)|(HEAPU8[$1614+2>>0]<<16)|(HEAPU8[$1614+3>>0]<<24);
     $1616 = ((($1615)) + 4|0);
     $1617 = HEAPU8[$1616>>0]|(HEAPU8[$1616+1>>0]<<8)|(HEAPU8[$1616+2>>0]<<16)|(HEAPU8[$1616+3>>0]<<24);
     $1618 = ((($1617)) + 4|0);
     ;HEAP8[$1612>>0]=HEAP8[$1618>>0]|0;HEAP8[$1612+1>>0]=HEAP8[$1618+1>>0]|0;HEAP8[$1612+2>>0]=HEAP8[$1618+2>>0]|0;HEAP8[$1612+3>>0]=HEAP8[$1618+3>>0]|0;
     $1619 = $c;
     $1620 = (__is_string($1619)|0);
     $1621 = ($1620<<24>>24)!=(0);
     if ($1621) {
      $1622 = $2;
      $1623 = HEAP32[$1622>>2]|0;
      $1624 = ((($1623)) + 8|0);
      $1625 = HEAP8[$1624>>0]|0;
      $1626 = $1625 & -2;
      $1627 = $1626 | 1;
      HEAP8[$1624>>0] = $1627;
     }
    } else {
     $1628 = HEAPU8[$1602>>0]|(HEAPU8[$1602+1>>0]<<8)|(HEAPU8[$1602+2>>0]<<16)|(HEAPU8[$1602+3>>0]<<24);
     $1629 = $2;
     $1630 = HEAP32[$1629>>2]|0;
     HEAP8[$1630>>0]=$1628&255;HEAP8[$1630+1>>0]=($1628>>8)&255;HEAP8[$1630+2>>0]=($1628>>16)&255;HEAP8[$1630+3>>0]=$1628>>24;
     $1631 = $c;
     $1632 = (__is_string($1631)|0);
     $1633 = ($1632<<24>>24)!=(0);
     if ($1633) {
      $1634 = $c;
      $1635 = (__extract_string($1634)|0);
      $_str = $1635;
      $1636 = $_str;
      $1637 = $_str;
      $1638 = (_strlen($1637)|0);
      $1639 = (($1638) + 1)|0;
      $1640 = (_mb_strdup($1636,$1639)|0);
      $1641 = $2;
      $1642 = HEAP32[$1641>>2]|0;
      $1643 = ((($1642)) + 4|0);
      HEAP8[$1643>>0]=$1640&255;HEAP8[$1643+1>>0]=($1640>>8)&255;HEAP8[$1643+2>>0]=($1640>>16)&255;HEAP8[$1643+3>>0]=$1640>>24;
      $1644 = $2;
      $1645 = HEAP32[$1644>>2]|0;
      $1646 = ((($1645)) + 8|0);
      $1647 = HEAP8[$1646>>0]|0;
      $1648 = $1647 & -2;
      HEAP8[$1646>>0] = $1648;
      break;
     } else {
      $1649 = $2;
      $1650 = HEAP32[$1649>>2]|0;
      $1651 = ((($1650)) + 4|0);
      $1652 = $c;
      $1653 = ((($1652)) + 4|0);
      ;HEAP8[$1651>>0]=HEAP8[$1653>>0]|0;HEAP8[$1651+1>>0]=HEAP8[$1653+1>>0]|0;HEAP8[$1651+2>>0]=HEAP8[$1653+2>>0]|0;HEAP8[$1651+3>>0]=HEAP8[$1653+3>>0]|0;
      break;
     }
    }
   } while(0);
   $1654 = $guard_val;
   $1655 = $c;
   $1656 = ($1654|0)!=($1655|0);
   $1657 = $garbage;
   $1658 = ($1657|0)!=(0|0);
   $or$cond7 = $1656 & $1658;
   if ($or$cond7) {
    $1659 = $garbage;
    $1660 = $c;
    $1661 = (__ls_try_remove($1659,$1660,136,0)|0);
    $1662 = ($1661|0)!=(0);
    if ($1662) {
     $1663 = $c;
     $1664 = $0;
     __try_clear_intermediate_value($1663,0,$1664);
     $1665 = $0;
     $1666 = $c;
     $1667 = (__is_referenced_calc_type($1665,$1666)|0);
     $1668 = ($1667<<24>>24)!=(0);
     $1669 = $c;
     if ($1668) {
      (__destroy_object_capsule_only($1669,0)|0);
      break;
     } else {
      (__destroy_object($1669,0)|0);
      break;
     }
    }
   }
  } else {
   $18 = ($17|0)!=(0|0);
   if ($18) {
    $19 = HEAP32[$ast>>2]|0;
    $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8)|(HEAPU8[$19+2>>0]<<16)|(HEAPU8[$19+3>>0]<<24);
    $21 = ($20|0)!=(0|0);
    if ($21) {
     $22 = $0;
     $23 = $0;
     $24 = ((($23)) + 67|0);
     $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
     $26 = (__set_current_error($22,48,$25)|0);
     $27 = ($26<<24>>24)!=(0);
     if (!($27)) {
      label = 354;
      break;
     }
     $28 = $0;
     $29 = HEAP32[$ast>>2]|0;
     $30 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8)|(HEAPU8[$29+2>>0]<<16)|(HEAPU8[$29+3>>0]<<24);
     $31 = ((($30)) + 9|0);
     $32 = HEAPU8[$31>>0]|(HEAPU8[$31+1>>0]<<8)|(HEAPU8[$31+2>>0]<<16)|(HEAPU8[$31+3>>0]<<24);
     $33 = HEAP32[$ast>>2]|0;
     $34 = HEAPU8[$33>>0]|(HEAPU8[$33+1>>0]<<8)|(HEAPU8[$33+2>>0]<<16)|(HEAPU8[$33+3>>0]<<24);
     $35 = ((($34)) + 13|0);
     $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8);
     $37 = HEAP32[$ast>>2]|0;
     $38 = HEAPU8[$37>>0]|(HEAPU8[$37+1>>0]<<8)|(HEAPU8[$37+2>>0]<<16)|(HEAPU8[$37+3>>0]<<24);
     $39 = ((($38)) + 15|0);
     $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8);
     __set_error_pos($28,$32,$36,$40);
     HEAP32[$result>>2] = 3;
     label = 354;
     break;
    }
   }
   $41 = $0;
   $42 = $0;
   $43 = ((($42)) + 67|0);
   $44 = HEAPU8[$43>>0]|(HEAPU8[$43+1>>0]<<8)|(HEAPU8[$43+2>>0]<<16)|(HEAPU8[$43+3>>0]<<24);
   $45 = (__set_current_error($41,48,$44)|0);
   $46 = ($45<<24>>24)!=(0);
   if ($46) {
    $47 = $0;
    __set_error_pos($47,0,0,0);
    HEAP32[$result>>2] = 3;
    label = 354;
   } else {
    label = 354;
   }
  }
 } while(0);
 L453: do {
  if ((label|0) == 354) {
   $1670 = $garbage;
   $1671 = ($1670|0)!=(0|0);
   if ($1671) {
    $1672 = $garbage;
    $__lst = $1672;
    $__opresult = 0;
    $__tmp = 0;
    $1673 = $garbage;
    $1674 = ($1673|0)!=(0|0);
    if (!($1674)) {
     ___assert_fail((11393|0),(4322|0),4238,(11374|0));
     // unreachable;
    }
    $1675 = $__lst;
    $1676 = ((($1675)) + 8|0);
    $1677 = HEAPU8[$1676>>0]|(HEAPU8[$1676+1>>0]<<8)|(HEAPU8[$1676+2>>0]<<16)|(HEAPU8[$1676+3>>0]<<24);
    $__lst = $1677;
    while(1) {
     $1678 = $__lst;
     $1679 = ($1678|0)!=(0|0);
     if (!($1679)) {
      break L453;
     }
     $1680 = $__lst;
     $1681 = HEAPU8[$1680>>0]|(HEAPU8[$1680+1>>0]<<8)|(HEAPU8[$1680+2>>0]<<16)|(HEAPU8[$1680+3>>0]<<24);
     $1682 = $__lst;
     $1683 = ((($1682)) + 12|0);
     $1684 = HEAPU8[$1683>>0]|(HEAPU8[$1683+1>>0]<<8)|(HEAPU8[$1683+2>>0]<<16)|(HEAPU8[$1683+3>>0]<<24);
     $1685 = $opnd;
     __remove_if_exists($1681,$1684,$1685);
     $1686 = $__lst;
     $1687 = HEAPU8[$1686>>0]|(HEAPU8[$1686+1>>0]<<8)|(HEAPU8[$1686+2>>0]<<16)|(HEAPU8[$1686+3>>0]<<24);
     $1688 = $__lst;
     $1689 = ((($1688)) + 12|0);
     $1690 = HEAPU8[$1689>>0]|(HEAPU8[$1689+1>>0]<<8)|(HEAPU8[$1689+2>>0]<<16)|(HEAPU8[$1689+3>>0]<<24);
     $1691 = (__do_nothing_on_object($1687,$1690)|0);
     $__opresult = $1691;
     $1692 = $__lst;
     $__tmp = $1692;
     $1693 = $__lst;
     $1694 = ((($1693)) + 8|0);
     $1695 = HEAPU8[$1694>>0]|(HEAPU8[$1694+1>>0]<<8)|(HEAPU8[$1694+2>>0]<<16)|(HEAPU8[$1694+3>>0]<<24);
     $__lst = $1695;
     $1696 = $__opresult;
     $1697 = (-1)==($1696|0);
     if (!($1697)) {
      continue;
     }
     $1698 = $__lst;
     $1699 = $__tmp;
     $1700 = ((($1699)) + 4|0);
     $1701 = HEAPU8[$1700>>0]|(HEAPU8[$1700+1>>0]<<8)|(HEAPU8[$1700+2>>0]<<16)|(HEAPU8[$1700+3>>0]<<24);
     $1702 = ((($1701)) + 8|0);
     HEAP8[$1702>>0]=$1698&255;HEAP8[$1702+1>>0]=($1698>>8)&255;HEAP8[$1702+2>>0]=($1698>>16)&255;HEAP8[$1702+3>>0]=$1698>>24;
     $1703 = $__lst;
     $1704 = ($1703|0)!=(0|0);
     if ($1704) {
      $1705 = $__tmp;
      $1706 = ((($1705)) + 4|0);
      $1707 = HEAPU8[$1706>>0]|(HEAPU8[$1706+1>>0]<<8)|(HEAPU8[$1706+2>>0]<<16)|(HEAPU8[$1706+3>>0]<<24);
      $1708 = $__lst;
      $1709 = ((($1708)) + 4|0);
      HEAP8[$1709>>0]=$1707&255;HEAP8[$1709+1>>0]=($1707>>8)&255;HEAP8[$1709+2>>0]=($1707>>16)&255;HEAP8[$1709+3>>0]=$1707>>24;
     }
     $1710 = $__tmp;
     $1711 = ($1710|0)!=(0|0);
     if (!($1711)) {
      break;
     }
     $1712 = $__tmp;
     _mb_free($1712);
     $__tmp = 0;
     $1713 = $garbage;
     $1714 = HEAPU8[$1713>>0]|(HEAPU8[$1713+1>>0]<<8)|(HEAPU8[$1713+2>>0]<<16)|(HEAPU8[$1713+3>>0]<<24);
     $1715 = ((($1714)) + -1|0);
     $1716 = $garbage;
     HEAP8[$1716>>0]=$1715&255;HEAP8[$1716+1>>0]=($1715>>8)&255;HEAP8[$1716+2>>0]=($1715>>16)&255;HEAP8[$1716+3>>0]=$1715>>24;
    }
    ___assert_fail((4369|0),(4322|0),4238,(11374|0));
    // unreachable;
   }
  }
 } while(0);
 $1717 = $garbage;
 $1718 = ($1717|0)!=(0|0);
 do {
  if ($1718) {
   $1719 = $garbage;
   $__lst8 = $1719;
   $__opresult9 = 0;
   $__tmp10 = 0;
   $1720 = $garbage;
   $1721 = ($1720|0)!=(0|0);
   if (!($1721)) {
    ___assert_fail((11393|0),(4322|0),4244,(11374|0));
    // unreachable;
   }
   $1722 = $__lst8;
   $1723 = ((($1722)) + 8|0);
   $1724 = HEAPU8[$1723>>0]|(HEAPU8[$1723+1>>0]<<8)|(HEAPU8[$1723+2>>0]<<16)|(HEAPU8[$1723+3>>0]<<24);
   $__lst8 = $1724;
   while(1) {
    $1725 = $__lst8;
    $1726 = ($1725|0)!=(0|0);
    if (!($1726)) {
     label = 376;
     break;
    }
    $1727 = $__lst8;
    $1728 = HEAPU8[$1727>>0]|(HEAPU8[$1727+1>>0]<<8)|(HEAPU8[$1727+2>>0]<<16)|(HEAPU8[$1727+3>>0]<<24);
    $1729 = $__lst8;
    $1730 = ((($1729)) + 12|0);
    $1731 = HEAPU8[$1730>>0]|(HEAPU8[$1730+1>>0]<<8)|(HEAPU8[$1730+2>>0]<<16)|(HEAPU8[$1730+3>>0]<<24);
    $1732 = $0;
    __try_clear_intermediate_value($1728,$1731,$1732);
    $1733 = $__lst8;
    $1734 = HEAPU8[$1733>>0]|(HEAPU8[$1733+1>>0]<<8)|(HEAPU8[$1733+2>>0]<<16)|(HEAPU8[$1733+3>>0]<<24);
    $1735 = $__lst8;
    $1736 = ((($1735)) + 12|0);
    $1737 = HEAPU8[$1736>>0]|(HEAPU8[$1736+1>>0]<<8)|(HEAPU8[$1736+2>>0]<<16)|(HEAPU8[$1736+3>>0]<<24);
    $1738 = (__destroy_object($1734,$1737)|0);
    $__opresult9 = $1738;
    $1739 = $__lst8;
    $__tmp10 = $1739;
    $1740 = $__lst8;
    $1741 = ((($1740)) + 8|0);
    $1742 = HEAPU8[$1741>>0]|(HEAPU8[$1741+1>>0]<<8)|(HEAPU8[$1741+2>>0]<<16)|(HEAPU8[$1741+3>>0]<<24);
    $__lst8 = $1742;
    $1743 = $__opresult9;
    $1744 = (-1)==($1743|0);
    if (!($1744)) {
     continue;
    }
    $1745 = $__lst8;
    $1746 = $__tmp10;
    $1747 = ((($1746)) + 4|0);
    $1748 = HEAPU8[$1747>>0]|(HEAPU8[$1747+1>>0]<<8)|(HEAPU8[$1747+2>>0]<<16)|(HEAPU8[$1747+3>>0]<<24);
    $1749 = ((($1748)) + 8|0);
    HEAP8[$1749>>0]=$1745&255;HEAP8[$1749+1>>0]=($1745>>8)&255;HEAP8[$1749+2>>0]=($1745>>16)&255;HEAP8[$1749+3>>0]=$1745>>24;
    $1750 = $__lst8;
    $1751 = ($1750|0)!=(0|0);
    if ($1751) {
     $1752 = $__tmp10;
     $1753 = ((($1752)) + 4|0);
     $1754 = HEAPU8[$1753>>0]|(HEAPU8[$1753+1>>0]<<8)|(HEAPU8[$1753+2>>0]<<16)|(HEAPU8[$1753+3>>0]<<24);
     $1755 = $__lst8;
     $1756 = ((($1755)) + 4|0);
     HEAP8[$1756>>0]=$1754&255;HEAP8[$1756+1>>0]=($1754>>8)&255;HEAP8[$1756+2>>0]=($1754>>16)&255;HEAP8[$1756+3>>0]=$1754>>24;
    }
    $1757 = $__tmp10;
    $1758 = ($1757|0)!=(0|0);
    if (!($1758)) {
     label = 375;
     break;
    }
    $1759 = $__tmp10;
    _mb_free($1759);
    $__tmp10 = 0;
    $1760 = $garbage;
    $1761 = HEAPU8[$1760>>0]|(HEAPU8[$1760+1>>0]<<8)|(HEAPU8[$1760+2>>0]<<16)|(HEAPU8[$1760+3>>0]<<24);
    $1762 = ((($1761)) + -1|0);
    $1763 = $garbage;
    HEAP8[$1763>>0]=$1762&255;HEAP8[$1763+1>>0]=($1762>>8)&255;HEAP8[$1763+2>>0]=($1762>>16)&255;HEAP8[$1763+3>>0]=$1762>>24;
   }
   if ((label|0) == 375) {
    ___assert_fail((4369|0),(4322|0),4244,(11374|0));
    // unreachable;
   }
   else if ((label|0) == 376) {
    $1764 = $garbage;
    __ls_destroy($1764);
    break;
   }
  }
 } while(0);
 $1765 = $optr;
 $1766 = ($1765|0)!=(0|0);
 if ($1766) {
  $1767 = $optr;
  (__ls_foreach($1767,146)|0);
  $1768 = $optr;
  __ls_destroy($1768);
 }
 $1769 = $opnd;
 $1770 = ($1769|0)!=(0|0);
 if ($1770) {
  $1771 = $opnd;
  (__ls_foreach($1771,146)|0);
  $1772 = $opnd;
  __ls_destroy($1772);
 }
 $1773 = $inep;
 $1774 = ($1773|0)!=(0|0);
 if (!($1774)) {
  $1779 = HEAP32[$ast>>2]|0;
  $1780 = $1;
  HEAP32[$1780>>2] = $1779;
  $1781 = $0;
  $1782 = $gce;
  (_mb_set_gc_enabled($1781,$1782)|0);
  $1783 = HEAP32[$result>>2]|0;
  STACKTOP = sp;return ($1783|0);
 }
 $1775 = $0;
 $1776 = ((($1775)) + 122|0);
 $1777 = HEAPU8[$1776>>0]|(HEAPU8[$1776+1>>0]<<8)|(HEAPU8[$1776+2>>0]<<16)|(HEAPU8[$1776+3>>0]<<24);
 $1778 = (__ls_popback($1777)|0);
 _mb_free($1778);
 $1779 = HEAP32[$ast>>2]|0;
 $1780 = $1;
 HEAP32[$1780>>2] = $1779;
 $1781 = $0;
 $1782 = $gce;
 (_mb_set_gc_enabled($1781,$1782)|0);
 $1783 = HEAP32[$result>>2]|0;
 STACKTOP = sp;return ($1783|0);
}
function __destroy_edge_objects($s) {
 $s = $s|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__lst = 0;
 var $__opresult = 0, $__tmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $0;
 $2 = ($1|0)!=(0|0);
 if (!($2)) {
  STACKTOP = sp;return;
 }
 $3 = $0;
 $4 = ((($3)) + 39|0);
 $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
 $__lst = $5;
 $__opresult = 0;
 $__tmp = 0;
 $6 = $0;
 $7 = ((($6)) + 39|0);
 $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
 $9 = ($8|0)!=(0|0);
 if (!($9)) {
  ___assert_fail((11328|0),(4322|0),10680,(11352|0));
  // unreachable;
 }
 $10 = $__lst;
 $11 = ((($10)) + 8|0);
 $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
 $__lst = $12;
 while(1) {
  $13 = $__lst;
  $14 = ($13|0)!=(0|0);
  if (!($14)) {
   break;
  }
  $15 = $__lst;
  $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
  $17 = $__lst;
  $18 = ((($17)) + 12|0);
  $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
  $20 = $0;
  __try_clear_intermediate_value($16,$19,$20);
  $21 = $__lst;
  $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
  $23 = $__lst;
  $24 = ((($23)) + 12|0);
  $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
  $26 = (__destroy_object($22,$25)|0);
  $__opresult = $26;
  $27 = $__lst;
  $__tmp = $27;
  $28 = $__lst;
  $29 = ((($28)) + 8|0);
  $30 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8)|(HEAPU8[$29+2>>0]<<16)|(HEAPU8[$29+3>>0]<<24);
  $__lst = $30;
  $31 = $__opresult;
  $32 = (-1)==($31|0);
  if (!($32)) {
   continue;
  }
  $33 = $__lst;
  $34 = $__tmp;
  $35 = ((($34)) + 4|0);
  $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
  $37 = ((($36)) + 8|0);
  HEAP8[$37>>0]=$33&255;HEAP8[$37+1>>0]=($33>>8)&255;HEAP8[$37+2>>0]=($33>>16)&255;HEAP8[$37+3>>0]=$33>>24;
  $38 = $__lst;
  $39 = ($38|0)!=(0|0);
  if ($39) {
   $40 = $__tmp;
   $41 = ((($40)) + 4|0);
   $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
   $43 = $__lst;
   $44 = ((($43)) + 4|0);
   HEAP8[$44>>0]=$42&255;HEAP8[$44+1>>0]=($42>>8)&255;HEAP8[$44+2>>0]=($42>>16)&255;HEAP8[$44+3>>0]=$42>>24;
  }
  $45 = $__tmp;
  $46 = ($45|0)!=(0|0);
  if (!($46)) {
   label = 11;
   break;
  }
  $47 = $__tmp;
  _mb_free($47);
  $__tmp = 0;
  $48 = $0;
  $49 = ((($48)) + 39|0);
  $50 = HEAPU8[$49>>0]|(HEAPU8[$49+1>>0]<<8)|(HEAPU8[$49+2>>0]<<16)|(HEAPU8[$49+3>>0]<<24);
  $51 = HEAPU8[$50>>0]|(HEAPU8[$50+1>>0]<<8)|(HEAPU8[$50+2>>0]<<16)|(HEAPU8[$50+3>>0]<<24);
  $52 = ((($51)) + -1|0);
  $53 = $0;
  $54 = ((($53)) + 39|0);
  $55 = HEAPU8[$54>>0]|(HEAPU8[$54+1>>0]<<8)|(HEAPU8[$54+2>>0]<<16)|(HEAPU8[$54+3>>0]<<24);
  HEAP8[$55>>0]=$52&255;HEAP8[$55+1>>0]=($52>>8)&255;HEAP8[$55+2>>0]=($52>>16)&255;HEAP8[$55+3>>0]=$52>>24;
 }
 if ((label|0) == 11) {
  ___assert_fail((4369|0),(4322|0),10680,(11352|0));
  // unreachable;
 }
 $56 = $0;
 $57 = ((($56)) + 39|0);
 $58 = HEAPU8[$57>>0]|(HEAPU8[$57+1>>0]<<8)|(HEAPU8[$57+2>>0]<<16)|(HEAPU8[$57+3>>0]<<24);
 __ls_clear($58);
 STACKTOP = sp;return;
}
function __mark_edge_destroy_string($s,$ch) {
 $s = $s|0;
 $ch = $ch|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0;
 var $temp_obj = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $ch;
 $temp_obj = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 if ($or$cond) {
  $6 = (__create_object()|0);
  $temp_obj = $6;
  $7 = $temp_obj;
  HEAP8[$7>>0]=4&255;HEAP8[$7+1>>0]=(4>>8)&255;HEAP8[$7+2>>0]=(4>>16)&255;HEAP8[$7+3>>0]=4>>24;
  $8 = $temp_obj;
  $9 = ((($8)) + 8|0);
  $10 = HEAP8[$9>>0]|0;
  $11 = $10 & -2;
  HEAP8[$9>>0] = $11;
  $12 = $1;
  $13 = $temp_obj;
  $14 = ((($13)) + 4|0);
  HEAP8[$14>>0]=$12&255;HEAP8[$14+1>>0]=($12>>8)&255;HEAP8[$14+2>>0]=($12>>16)&255;HEAP8[$14+3>>0]=$12>>24;
  $15 = $0;
  $16 = ((($15)) + 39|0);
  $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
  $18 = $temp_obj;
  (__ls_pushback($17,$18)|0);
  STACKTOP = sp;return;
 } else {
  ___assert_fail((11122|0),(4322|0),10688,(11302|0));
  // unreachable;
 }
}
function __ref($ref,$data) {
 $ref = $ref|0;
 $data = $data|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $before = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $ref;
 $1 = $data;
 $2 = $0;
 $3 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
 $4 = HEAP32[$3>>2]|0;
 $before = $4;
 $5 = $0;
 $6 = $5;
 $7 = $1;
 $8 = $7;
 $9 = ($6|0)==($8|0);
 if (!($9)) {
  ___assert_fail((9945|0),(4322|0),6353,(11222|0));
  // unreachable;
 }
 $10 = $0;
 $11 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
 $12 = HEAP32[$11>>2]|0;
 $13 = (($12) + 1)|0;
 HEAP32[$11>>2] = $13;
 $14 = $before;
 $15 = $0;
 $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
 $17 = HEAP32[$16>>2]|0;
 $18 = ($14>>>0)>($17>>>0);
 if ($18) {
  ___assert_fail((11227|0),(4322|0),6357,(11222|0));
  // unreachable;
 } else {
  $19 = $0;
  $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8)|(HEAPU8[$19+2>>0]<<16)|(HEAPU8[$19+3>>0]<<24);
  $21 = HEAP32[$20>>2]|0;
  STACKTOP = sp;return ($21|0);
 }
 return (0)|0;
}
function __internal_object_to_public_value($itn,$pbl) {
 $itn = $itn|0;
 $pbl = $pbl|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0.0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $itn;
 $1 = $pbl;
 $result = 0;
 $2 = $1;
 $3 = ($2|0)!=(0|0);
 $4 = $0;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 if (!($or$cond)) {
  ___assert_fail((9600|0),(4322|0),10439,(11189|0));
  // unreachable;
 }
 $6 = $0;
 $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
 do {
  switch ($7|0) {
  case 9:  {
   $8 = $0;
   $9 = ((($8)) + 4|0);
   $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
   $11 = ($10|0)!=(0|0);
   if (!($11)) {
    $102 = $result;
    STACKTOP = sp;return ($102|0);
   }
   $12 = $0;
   $13 = ((($12)) + 4|0);
   $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
   $15 = ((($14)) + 4|0);
   $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
   $17 = $1;
   $18 = (__internal_object_to_public_value($16,$17)|0);
   $result = $18;
   $102 = $result;
   STACKTOP = sp;return ($102|0);
   break;
  }
  case 0:  {
   $19 = $1;
   $20 = ((($19)) + 4|0);
   ;HEAP8[$20>>0]=0|0;HEAP8[$20+1>>0]=0|0;HEAP8[$20+2>>0]=0|0;HEAP8[$20+3>>0]=0|0;
   $21 = $1;
   HEAP8[$21>>0]=0&255;HEAP8[$21+1>>0]=(0>>8)&255;HEAP8[$21+2>>0]=(0>>16)&255;HEAP8[$21+3>>0]=0>>24;
   $102 = $result;
   STACKTOP = sp;return ($102|0);
   break;
  }
  case 1:  {
   $22 = $1;
   HEAP8[$22>>0]=1&255;HEAP8[$22+1>>0]=(1>>8)&255;HEAP8[$22+2>>0]=(1>>16)&255;HEAP8[$22+3>>0]=1>>24;
   $23 = $1;
   $24 = ((($23)) + 4|0);
   HEAP8[$24>>0]=0&255;HEAP8[$24+1>>0]=(0>>8)&255;HEAP8[$24+2>>0]=(0>>16)&255;HEAP8[$24+3>>0]=0>>24;
   $102 = $result;
   STACKTOP = sp;return ($102|0);
   break;
  }
  case 2:  {
   $25 = $1;
   HEAP8[$25>>0]=2&255;HEAP8[$25+1>>0]=(2>>8)&255;HEAP8[$25+2>>0]=(2>>16)&255;HEAP8[$25+3>>0]=2>>24;
   $26 = $0;
   $27 = ((($26)) + 4|0);
   $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
   $29 = $1;
   $30 = ((($29)) + 4|0);
   HEAP8[$30>>0]=$28&255;HEAP8[$30+1>>0]=($28>>8)&255;HEAP8[$30+2>>0]=($28>>16)&255;HEAP8[$30+3>>0]=$28>>24;
   $102 = $result;
   STACKTOP = sp;return ($102|0);
   break;
  }
  case 3:  {
   $31 = $1;
   HEAP8[$31>>0]=4&255;HEAP8[$31+1>>0]=(4>>8)&255;HEAP8[$31+2>>0]=(4>>16)&255;HEAP8[$31+3>>0]=4>>24;
   $32 = $0;
   $33 = ((($32)) + 4|0);
   HEAP8[tempDoublePtr>>0]=HEAP8[$33>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$33+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$33+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$33+3>>0];$34 = +HEAPF32[tempDoublePtr>>2];
   $35 = $1;
   $36 = ((($35)) + 4|0);
   HEAPF32[tempDoublePtr>>2]=$34;HEAP8[$36>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$36+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$36+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$36+3>>0]=HEAP8[tempDoublePtr+3>>0];
   $102 = $result;
   STACKTOP = sp;return ($102|0);
   break;
  }
  case 4:  {
   $37 = $1;
   HEAP8[$37>>0]=8&255;HEAP8[$37+1>>0]=(8>>8)&255;HEAP8[$37+2>>0]=(8>>16)&255;HEAP8[$37+3>>0]=8>>24;
   $38 = $0;
   $39 = ((($38)) + 4|0);
   $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8)|(HEAPU8[$39+2>>0]<<16)|(HEAPU8[$39+3>>0]<<24);
   $41 = $1;
   $42 = ((($41)) + 4|0);
   HEAP8[$42>>0]=$40&255;HEAP8[$42+1>>0]=($40>>8)&255;HEAP8[$42+2>>0]=($40>>16)&255;HEAP8[$42+3>>0]=$40>>24;
   $102 = $result;
   STACKTOP = sp;return ($102|0);
   break;
  }
  case 5:  {
   $43 = $1;
   HEAP8[$43>>0]=16&255;HEAP8[$43+1>>0]=(16>>8)&255;HEAP8[$43+2>>0]=(16>>16)&255;HEAP8[$43+3>>0]=16>>24;
   $44 = $0;
   $45 = ((($44)) + 4|0);
   $46 = HEAPU8[$45>>0]|(HEAPU8[$45+1>>0]<<8)|(HEAPU8[$45+2>>0]<<16)|(HEAPU8[$45+3>>0]<<24);
   $47 = $1;
   $48 = ((($47)) + 4|0);
   HEAP8[$48>>0]=$46&255;HEAP8[$48+1>>0]=($46>>8)&255;HEAP8[$48+2>>0]=($46>>16)&255;HEAP8[$48+3>>0]=$46>>24;
   $102 = $result;
   STACKTOP = sp;return ($102|0);
   break;
  }
  case 6:  {
   $49 = $1;
   HEAP8[$49>>0]=32&255;HEAP8[$49+1>>0]=(32>>8)&255;HEAP8[$49+2>>0]=(32>>16)&255;HEAP8[$49+3>>0]=32>>24;
   $50 = $1;
   $51 = ((($50)) + 4|0);
   $52 = $0;
   $53 = ((($52)) + 4|0);
   ;HEAP8[$51>>0]=HEAP8[$53>>0]|0;HEAP8[$51+1>>0]=HEAP8[$53+1>>0]|0;HEAP8[$51+2>>0]=HEAP8[$53+2>>0]|0;HEAP8[$51+3>>0]=HEAP8[$53+3>>0]|0;
   $102 = $result;
   STACKTOP = sp;return ($102|0);
   break;
  }
  case 7:  {
   $54 = $1;
   HEAP8[$54>>0]=64&255;HEAP8[$54+1>>0]=(64>>8)&255;HEAP8[$54+2>>0]=(64>>16)&255;HEAP8[$54+3>>0]=64>>24;
   $55 = $0;
   $56 = ((($55)) + 4|0);
   $57 = HEAPU8[$56>>0]|(HEAPU8[$56+1>>0]<<8)|(HEAPU8[$56+2>>0]<<16)|(HEAPU8[$56+3>>0]<<24);
   $58 = $1;
   $59 = ((($58)) + 4|0);
   HEAP8[$59>>0]=$57&255;HEAP8[$59+1>>0]=($57>>8)&255;HEAP8[$59+2>>0]=($57>>16)&255;HEAP8[$59+3>>0]=$57>>24;
   $102 = $result;
   STACKTOP = sp;return ($102|0);
   break;
  }
  case 10:  {
   $60 = $1;
   HEAP8[$60>>0]=128&255;HEAP8[$60+1>>0]=(128>>8)&255;HEAP8[$60+2>>0]=(128>>16)&255;HEAP8[$60+3>>0]=128>>24;
   $61 = $0;
   $62 = ((($61)) + 4|0);
   $63 = HEAPU8[$62>>0]|(HEAPU8[$62+1>>0]<<8)|(HEAPU8[$62+2>>0]<<16)|(HEAPU8[$62+3>>0]<<24);
   $64 = $1;
   $65 = ((($64)) + 4|0);
   HEAP8[$65>>0]=$63&255;HEAP8[$65+1>>0]=($63>>8)&255;HEAP8[$65+2>>0]=($63>>16)&255;HEAP8[$65+3>>0]=$63>>24;
   $102 = $result;
   STACKTOP = sp;return ($102|0);
   break;
  }
  case 11:  {
   $66 = $1;
   HEAP8[$66>>0]=256&255;HEAP8[$66+1>>0]=(256>>8)&255;HEAP8[$66+2>>0]=(256>>16)&255;HEAP8[$66+3>>0]=256>>24;
   $67 = $0;
   $68 = ((($67)) + 4|0);
   $69 = HEAPU8[$68>>0]|(HEAPU8[$68+1>>0]<<8)|(HEAPU8[$68+2>>0]<<16)|(HEAPU8[$68+3>>0]<<24);
   $70 = $1;
   $71 = ((($70)) + 4|0);
   HEAP8[$71>>0]=$69&255;HEAP8[$71+1>>0]=($69>>8)&255;HEAP8[$71+2>>0]=($69>>16)&255;HEAP8[$71+3>>0]=$69>>24;
   $102 = $result;
   STACKTOP = sp;return ($102|0);
   break;
  }
  case 12:  {
   $72 = $1;
   HEAP8[$72>>0]=512&255;HEAP8[$72+1>>0]=(512>>8)&255;HEAP8[$72+2>>0]=(512>>16)&255;HEAP8[$72+3>>0]=512>>24;
   $73 = $0;
   $74 = ((($73)) + 4|0);
   $75 = HEAPU8[$74>>0]|(HEAPU8[$74+1>>0]<<8)|(HEAPU8[$74+2>>0]<<16)|(HEAPU8[$74+3>>0]<<24);
   $76 = $1;
   $77 = ((($76)) + 4|0);
   HEAP8[$77>>0]=$75&255;HEAP8[$77+1>>0]=($75>>8)&255;HEAP8[$77+2>>0]=($75>>16)&255;HEAP8[$77+3>>0]=$75>>24;
   $102 = $result;
   STACKTOP = sp;return ($102|0);
   break;
  }
  case 13:  {
   $78 = $1;
   HEAP8[$78>>0]=1024&255;HEAP8[$78+1>>0]=(1024>>8)&255;HEAP8[$78+2>>0]=(1024>>16)&255;HEAP8[$78+3>>0]=1024>>24;
   $79 = $0;
   $80 = ((($79)) + 4|0);
   $81 = HEAPU8[$80>>0]|(HEAPU8[$80+1>>0]<<8)|(HEAPU8[$80+2>>0]<<16)|(HEAPU8[$80+3>>0]<<24);
   $82 = $1;
   $83 = ((($82)) + 4|0);
   HEAP8[$83>>0]=$81&255;HEAP8[$83+1>>0]=($81>>8)&255;HEAP8[$83+2>>0]=($81>>16)&255;HEAP8[$83+3>>0]=$81>>24;
   $102 = $result;
   STACKTOP = sp;return ($102|0);
   break;
  }
  case 14:  {
   $84 = $1;
   HEAP8[$84>>0]=2048&255;HEAP8[$84+1>>0]=(2048>>8)&255;HEAP8[$84+2>>0]=(2048>>16)&255;HEAP8[$84+3>>0]=2048>>24;
   $85 = $0;
   $86 = ((($85)) + 4|0);
   $87 = HEAPU8[$86>>0]|(HEAPU8[$86+1>>0]<<8)|(HEAPU8[$86+2>>0]<<16)|(HEAPU8[$86+3>>0]<<24);
   $88 = $1;
   $89 = ((($88)) + 4|0);
   HEAP8[$89>>0]=$87&255;HEAP8[$89+1>>0]=($87>>8)&255;HEAP8[$89+2>>0]=($87>>16)&255;HEAP8[$89+3>>0]=$87>>24;
   $102 = $result;
   STACKTOP = sp;return ($102|0);
   break;
  }
  case 16:  {
   $90 = $1;
   HEAP8[$90>>0]=4096&255;HEAP8[$90+1>>0]=(4096>>8)&255;HEAP8[$90+2>>0]=(4096>>16)&255;HEAP8[$90+3>>0]=4096>>24;
   $91 = $0;
   $92 = ((($91)) + 4|0);
   $93 = HEAPU8[$92>>0]|(HEAPU8[$92+1>>0]<<8)|(HEAPU8[$92+2>>0]<<16)|(HEAPU8[$92+3>>0]<<24);
   $94 = $1;
   $95 = ((($94)) + 4|0);
   HEAP8[$95>>0]=$93&255;HEAP8[$95+1>>0]=($93>>8)&255;HEAP8[$95+2>>0]=($93>>16)&255;HEAP8[$95+3>>0]=$93>>24;
   $102 = $result;
   STACKTOP = sp;return ($102|0);
   break;
  }
  case 17:  {
   $96 = $1;
   HEAP8[$96>>0]=8192&255;HEAP8[$96+1>>0]=(8192>>8)&255;HEAP8[$96+2>>0]=(8192>>16)&255;HEAP8[$96+3>>0]=8192>>24;
   $97 = $0;
   $98 = ((($97)) + 4|0);
   $99 = HEAPU8[$98>>0]|(HEAPU8[$98+1>>0]<<8)|(HEAPU8[$98+2>>0]<<16)|(HEAPU8[$98+3>>0]<<24);
   $100 = $1;
   $101 = ((($100)) + 4|0);
   HEAP8[$101>>0]=$99&255;HEAP8[$101+1>>0]=($99>>8)&255;HEAP8[$101+2>>0]=($99>>16)&255;HEAP8[$101+3>>0]=$99>>24;
   $102 = $result;
   STACKTOP = sp;return ($102|0);
   break;
  }
  default: {
   $result = 3;
   $102 = $result;
   STACKTOP = sp;return ($102|0);
  }
  }
 } while(0);
 return (0)|0;
}
function __public_value_to_internal_object($pbl,$itn) {
 $pbl = $pbl|0;
 $itn = $itn|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0.0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $pbl;
 $1 = $itn;
 $result = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 if (!($or$cond)) {
  ___assert_fail((9600|0),(4322|0),10338,(11156|0));
  // unreachable;
 }
 $6 = $1;
 $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
 L4: do {
  switch ($7|0) {
  case 7:  {
   $8 = $1;
   $9 = ((($8)) + 4|0);
   $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
   $11 = $1;
   $12 = ((($11)) + 4|0);
   $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
   (__unref($10,$13)|0);
   break;
  }
  case 10:  {
   $14 = $1;
   $15 = ((($14)) + 8|0);
   $16 = HEAP8[$15>>0]|0;
   $17 = $16 & 1;
   $18 = ($17<<24>>24)!=(0);
   if (!($18)) {
    $19 = $1;
    $20 = ((($19)) + 4|0);
    $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
    $22 = $1;
    $23 = ((($22)) + 4|0);
    $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
    (__unref($21,$24)|0);
   }
   break;
  }
  case 11:  {
   $25 = $1;
   $26 = ((($25)) + 4|0);
   $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
   $28 = $1;
   $29 = ((($28)) + 4|0);
   $30 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8)|(HEAPU8[$29+2>>0]<<16)|(HEAPU8[$29+3>>0]<<24);
   (__unref($27,$30)|0);
   break;
  }
  case 13:  {
   $31 = $1;
   $32 = ((($31)) + 4|0);
   $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
   $34 = $1;
   $35 = ((($34)) + 4|0);
   $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
   (__unref($33,$36)|0);
   break;
  }
  case 16:  {
   $37 = $1;
   $38 = ((($37)) + 8|0);
   $39 = HEAP8[$38>>0]|0;
   $40 = $39 & 1;
   $41 = ($40<<24>>24)!=(0);
   if (!($41)) {
    $42 = $1;
    $43 = ((($42)) + 4|0);
    $44 = HEAPU8[$43>>0]|(HEAPU8[$43+1>>0]<<8)|(HEAPU8[$43+2>>0]<<16)|(HEAPU8[$43+3>>0]<<24);
    $45 = $1;
    $46 = ((($45)) + 4|0);
    $47 = HEAPU8[$46>>0]|(HEAPU8[$46+1>>0]<<8)|(HEAPU8[$46+2>>0]<<16)|(HEAPU8[$46+3>>0]<<24);
    (__unref($44,$47)|0);
   }
   break;
  }
  case 17:  {
   $48 = $1;
   $49 = ((($48)) + 8|0);
   $50 = HEAP8[$49>>0]|0;
   $51 = $50 & 1;
   $52 = ($51<<24>>24)!=(0);
   if (!($52)) {
    $53 = $1;
    $54 = ((($53)) + 4|0);
    $55 = HEAPU8[$54>>0]|(HEAPU8[$54+1>>0]<<8)|(HEAPU8[$54+2>>0]<<16)|(HEAPU8[$54+3>>0]<<24);
    $56 = ((($55)) + 58|0);
    $57 = HEAPU8[$56>>0]|(HEAPU8[$56+1>>0]<<8)|(HEAPU8[$56+2>>0]<<16)|(HEAPU8[$56+3>>0]<<24);
    $58 = ($57|0)==(2);
    if ($58) {
     $59 = $1;
     $60 = ((($59)) + 4|0);
     $61 = HEAPU8[$60>>0]|(HEAPU8[$60+1>>0]<<8)|(HEAPU8[$60+2>>0]<<16)|(HEAPU8[$60+3>>0]<<24);
     $62 = $1;
     $63 = ((($62)) + 4|0);
     $64 = HEAPU8[$63>>0]|(HEAPU8[$63+1>>0]<<8)|(HEAPU8[$63+2>>0]<<16)|(HEAPU8[$63+3>>0]<<24);
     (__unref($61,$64)|0);
     break L4;
    }
   }
   $65 = $1;
   $66 = ((($65)) + 8|0);
   $67 = HEAP8[$66>>0]|0;
   $68 = $67 & 1;
   $69 = ($68<<24>>24)!=(0);
   if (!($69)) {
    $70 = $1;
    $71 = ((($70)) + 4|0);
    $72 = HEAPU8[$71>>0]|(HEAPU8[$71+1>>0]<<8)|(HEAPU8[$71+2>>0]<<16)|(HEAPU8[$71+3>>0]<<24);
    $73 = ((($72)) + 58|0);
    $74 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
    $75 = ($74|0)!=(2);
    if ($75) {
     $76 = $1;
     $77 = ((($76)) + 4|0);
     $78 = HEAPU8[$77>>0]|(HEAPU8[$77+1>>0]<<8)|(HEAPU8[$77+2>>0]<<16)|(HEAPU8[$77+3>>0]<<24);
     __destroy_routine(0,$78);
    }
   }
   break;
  }
  default: {
  }
  }
 } while(0);
 $79 = $0;
 $80 = HEAPU8[$79>>0]|(HEAPU8[$79+1>>0]<<8)|(HEAPU8[$79+2>>0]<<16)|(HEAPU8[$79+3>>0]<<24);
 do {
  switch ($80|0) {
  case 0:  {
   $81 = $1;
   HEAP8[$81>>0]=0&255;HEAP8[$81+1>>0]=(0>>8)&255;HEAP8[$81+2>>0]=(0>>16)&255;HEAP8[$81+3>>0]=0>>24;
   $82 = $1;
   $83 = ((($82)) + 4|0);
   HEAP8[$83>>0]=0&255;HEAP8[$83+1>>0]=(0>>8)&255;HEAP8[$83+2>>0]=(0>>16)&255;HEAP8[$83+3>>0]=0>>24;
   $173 = $result;
   STACKTOP = sp;return ($173|0);
   break;
  }
  case 1:  {
   $84 = $1;
   HEAP8[$84>>0]=1&255;HEAP8[$84+1>>0]=(1>>8)&255;HEAP8[$84+2>>0]=(1>>16)&255;HEAP8[$84+3>>0]=1>>24;
   $85 = $1;
   $86 = ((($85)) + 4|0);
   HEAP8[$86>>0]=0&255;HEAP8[$86+1>>0]=(0>>8)&255;HEAP8[$86+2>>0]=(0>>16)&255;HEAP8[$86+3>>0]=0>>24;
   $173 = $result;
   STACKTOP = sp;return ($173|0);
   break;
  }
  case 2:  {
   $87 = $1;
   HEAP8[$87>>0]=2&255;HEAP8[$87+1>>0]=(2>>8)&255;HEAP8[$87+2>>0]=(2>>16)&255;HEAP8[$87+3>>0]=2>>24;
   $88 = $0;
   $89 = ((($88)) + 4|0);
   $90 = HEAPU8[$89>>0]|(HEAPU8[$89+1>>0]<<8)|(HEAPU8[$89+2>>0]<<16)|(HEAPU8[$89+3>>0]<<24);
   $91 = $1;
   $92 = ((($91)) + 4|0);
   HEAP8[$92>>0]=$90&255;HEAP8[$92+1>>0]=($90>>8)&255;HEAP8[$92+2>>0]=($90>>16)&255;HEAP8[$92+3>>0]=$90>>24;
   $173 = $result;
   STACKTOP = sp;return ($173|0);
   break;
  }
  case 4:  {
   $93 = $1;
   HEAP8[$93>>0]=3&255;HEAP8[$93+1>>0]=(3>>8)&255;HEAP8[$93+2>>0]=(3>>16)&255;HEAP8[$93+3>>0]=3>>24;
   $94 = $0;
   $95 = ((($94)) + 4|0);
   HEAP8[tempDoublePtr>>0]=HEAP8[$95>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$95+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$95+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$95+3>>0];$96 = +HEAPF32[tempDoublePtr>>2];
   $97 = $1;
   $98 = ((($97)) + 4|0);
   HEAPF32[tempDoublePtr>>2]=$96;HEAP8[$98>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$98+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$98+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$98+3>>0]=HEAP8[tempDoublePtr+3>>0];
   $173 = $result;
   STACKTOP = sp;return ($173|0);
   break;
  }
  case 8:  {
   $99 = $1;
   HEAP8[$99>>0]=4&255;HEAP8[$99+1>>0]=(4>>8)&255;HEAP8[$99+2>>0]=(4>>16)&255;HEAP8[$99+3>>0]=4>>24;
   $100 = $0;
   $101 = ((($100)) + 4|0);
   $102 = HEAPU8[$101>>0]|(HEAPU8[$101+1>>0]<<8)|(HEAPU8[$101+2>>0]<<16)|(HEAPU8[$101+3>>0]<<24);
   $103 = $1;
   $104 = ((($103)) + 4|0);
   HEAP8[$104>>0]=$102&255;HEAP8[$104+1>>0]=($102>>8)&255;HEAP8[$104+2>>0]=($102>>16)&255;HEAP8[$104+3>>0]=$102>>24;
   $105 = $1;
   $106 = ((($105)) + 8|0);
   $107 = HEAP8[$106>>0]|0;
   $108 = $107 & -2;
   $109 = $108 | 1;
   HEAP8[$106>>0] = $109;
   $173 = $result;
   STACKTOP = sp;return ($173|0);
   break;
  }
  case 16:  {
   $110 = $1;
   HEAP8[$110>>0]=5&255;HEAP8[$110+1>>0]=(5>>8)&255;HEAP8[$110+2>>0]=(5>>16)&255;HEAP8[$110+3>>0]=5>>24;
   $111 = $0;
   $112 = ((($111)) + 4|0);
   $113 = HEAPU8[$112>>0]|(HEAPU8[$112+1>>0]<<8)|(HEAPU8[$112+2>>0]<<16)|(HEAPU8[$112+3>>0]<<24);
   $114 = $1;
   $115 = ((($114)) + 4|0);
   HEAP8[$115>>0]=$113&255;HEAP8[$115+1>>0]=($113>>8)&255;HEAP8[$115+2>>0]=($113>>16)&255;HEAP8[$115+3>>0]=$113>>24;
   $173 = $result;
   STACKTOP = sp;return ($173|0);
   break;
  }
  case 32:  {
   $116 = $1;
   HEAP8[$116>>0]=6&255;HEAP8[$116+1>>0]=(6>>8)&255;HEAP8[$116+2>>0]=(6>>16)&255;HEAP8[$116+3>>0]=6>>24;
   $117 = $1;
   $118 = ((($117)) + 4|0);
   $119 = $0;
   $120 = ((($119)) + 4|0);
   ;HEAP8[$118>>0]=HEAP8[$120>>0]|0;HEAP8[$118+1>>0]=HEAP8[$120+1>>0]|0;HEAP8[$118+2>>0]=HEAP8[$120+2>>0]|0;HEAP8[$118+3>>0]=HEAP8[$120+3>>0]|0;
   $173 = $result;
   STACKTOP = sp;return ($173|0);
   break;
  }
  case 64:  {
   $121 = $1;
   HEAP8[$121>>0]=7&255;HEAP8[$121+1>>0]=(7>>8)&255;HEAP8[$121+2>>0]=(7>>16)&255;HEAP8[$121+3>>0]=7>>24;
   $122 = $0;
   $123 = ((($122)) + 4|0);
   $124 = HEAPU8[$123>>0]|(HEAPU8[$123+1>>0]<<8)|(HEAPU8[$123+2>>0]<<16)|(HEAPU8[$123+3>>0]<<24);
   $125 = $1;
   $126 = ((($125)) + 4|0);
   HEAP8[$126>>0]=$124&255;HEAP8[$126+1>>0]=($124>>8)&255;HEAP8[$126+2>>0]=($124>>16)&255;HEAP8[$126+3>>0]=$124>>24;
   $173 = $result;
   STACKTOP = sp;return ($173|0);
   break;
  }
  case 128:  {
   $127 = $1;
   HEAP8[$127>>0]=10&255;HEAP8[$127+1>>0]=(10>>8)&255;HEAP8[$127+2>>0]=(10>>16)&255;HEAP8[$127+3>>0]=10>>24;
   $128 = $0;
   $129 = ((($128)) + 4|0);
   $130 = HEAPU8[$129>>0]|(HEAPU8[$129+1>>0]<<8)|(HEAPU8[$129+2>>0]<<16)|(HEAPU8[$129+3>>0]<<24);
   $131 = $1;
   $132 = ((($131)) + 4|0);
   HEAP8[$132>>0]=$130&255;HEAP8[$132+1>>0]=($130>>8)&255;HEAP8[$132+2>>0]=($130>>16)&255;HEAP8[$132+3>>0]=$130>>24;
   $133 = $1;
   $134 = ((($133)) + 8|0);
   $135 = HEAP8[$134>>0]|0;
   $136 = $135 & -2;
   HEAP8[$134>>0] = $136;
   $173 = $result;
   STACKTOP = sp;return ($173|0);
   break;
  }
  case 256:  {
   $137 = $1;
   HEAP8[$137>>0]=11&255;HEAP8[$137+1>>0]=(11>>8)&255;HEAP8[$137+2>>0]=(11>>16)&255;HEAP8[$137+3>>0]=11>>24;
   $138 = $0;
   $139 = ((($138)) + 4|0);
   $140 = HEAPU8[$139>>0]|(HEAPU8[$139+1>>0]<<8)|(HEAPU8[$139+2>>0]<<16)|(HEAPU8[$139+3>>0]<<24);
   $141 = $1;
   $142 = ((($141)) + 4|0);
   HEAP8[$142>>0]=$140&255;HEAP8[$142+1>>0]=($140>>8)&255;HEAP8[$142+2>>0]=($140>>16)&255;HEAP8[$142+3>>0]=$140>>24;
   $173 = $result;
   STACKTOP = sp;return ($173|0);
   break;
  }
  case 512:  {
   $143 = $1;
   HEAP8[$143>>0]=12&255;HEAP8[$143+1>>0]=(12>>8)&255;HEAP8[$143+2>>0]=(12>>16)&255;HEAP8[$143+3>>0]=12>>24;
   $144 = $0;
   $145 = ((($144)) + 4|0);
   $146 = HEAPU8[$145>>0]|(HEAPU8[$145+1>>0]<<8)|(HEAPU8[$145+2>>0]<<16)|(HEAPU8[$145+3>>0]<<24);
   $147 = $1;
   $148 = ((($147)) + 4|0);
   HEAP8[$148>>0]=$146&255;HEAP8[$148+1>>0]=($146>>8)&255;HEAP8[$148+2>>0]=($146>>16)&255;HEAP8[$148+3>>0]=$146>>24;
   $173 = $result;
   STACKTOP = sp;return ($173|0);
   break;
  }
  case 1024:  {
   $149 = $1;
   HEAP8[$149>>0]=13&255;HEAP8[$149+1>>0]=(13>>8)&255;HEAP8[$149+2>>0]=(13>>16)&255;HEAP8[$149+3>>0]=13>>24;
   $150 = $0;
   $151 = ((($150)) + 4|0);
   $152 = HEAPU8[$151>>0]|(HEAPU8[$151+1>>0]<<8)|(HEAPU8[$151+2>>0]<<16)|(HEAPU8[$151+3>>0]<<24);
   $153 = $1;
   $154 = ((($153)) + 4|0);
   HEAP8[$154>>0]=$152&255;HEAP8[$154+1>>0]=($152>>8)&255;HEAP8[$154+2>>0]=($152>>16)&255;HEAP8[$154+3>>0]=$152>>24;
   $173 = $result;
   STACKTOP = sp;return ($173|0);
   break;
  }
  case 2048:  {
   $155 = $1;
   HEAP8[$155>>0]=14&255;HEAP8[$155+1>>0]=(14>>8)&255;HEAP8[$155+2>>0]=(14>>16)&255;HEAP8[$155+3>>0]=14>>24;
   $156 = $0;
   $157 = ((($156)) + 4|0);
   $158 = HEAPU8[$157>>0]|(HEAPU8[$157+1>>0]<<8)|(HEAPU8[$157+2>>0]<<16)|(HEAPU8[$157+3>>0]<<24);
   $159 = $1;
   $160 = ((($159)) + 4|0);
   HEAP8[$160>>0]=$158&255;HEAP8[$160+1>>0]=($158>>8)&255;HEAP8[$160+2>>0]=($158>>16)&255;HEAP8[$160+3>>0]=$158>>24;
   $173 = $result;
   STACKTOP = sp;return ($173|0);
   break;
  }
  case 4096:  {
   $161 = $1;
   HEAP8[$161>>0]=16&255;HEAP8[$161+1>>0]=(16>>8)&255;HEAP8[$161+2>>0]=(16>>16)&255;HEAP8[$161+3>>0]=16>>24;
   $162 = $0;
   $163 = ((($162)) + 4|0);
   $164 = HEAPU8[$163>>0]|(HEAPU8[$163+1>>0]<<8)|(HEAPU8[$163+2>>0]<<16)|(HEAPU8[$163+3>>0]<<24);
   $165 = $1;
   $166 = ((($165)) + 4|0);
   HEAP8[$166>>0]=$164&255;HEAP8[$166+1>>0]=($164>>8)&255;HEAP8[$166+2>>0]=($164>>16)&255;HEAP8[$166+3>>0]=$164>>24;
   $173 = $result;
   STACKTOP = sp;return ($173|0);
   break;
  }
  case 8192:  {
   $167 = $1;
   HEAP8[$167>>0]=17&255;HEAP8[$167+1>>0]=(17>>8)&255;HEAP8[$167+2>>0]=(17>>16)&255;HEAP8[$167+3>>0]=17>>24;
   $168 = $0;
   $169 = ((($168)) + 4|0);
   $170 = HEAPU8[$169>>0]|(HEAPU8[$169+1>>0]<<8)|(HEAPU8[$169+2>>0]<<16)|(HEAPU8[$169+3>>0]<<24);
   $171 = $1;
   $172 = ((($171)) + 4|0);
   HEAP8[$172>>0]=$170&255;HEAP8[$172+1>>0]=($170>>8)&255;HEAP8[$172+2>>0]=($170>>16)&255;HEAP8[$172+3>>0]=$170>>24;
   $173 = $result;
   STACKTOP = sp;return ($173|0);
   break;
  }
  default: {
   $result = 3;
   $173 = $result;
   STACKTOP = sp;return ($173|0);
  }
  }
 } while(0);
 return (0)|0;
}
function __gc_try_trigger($s) {
 $s = $s|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $0;
 $2 = ($1|0)!=(0|0);
 if (!($2)) {
  STACKTOP = sp;return;
 }
 $3 = $0;
 $4 = ((($3)) + 21|0);
 $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
 $6 = (__ht_count($5)|0);
 $7 = ($6>>>0)>=(16);
 if (!($7)) {
  STACKTOP = sp;return;
 }
 $8 = $0;
 __gc_collect_garbage($8,1);
 STACKTOP = sp;return;
}
function __mark_lazy_destroy_string($s,$ch) {
 $s = $s|0;
 $ch = $ch|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0;
 var $temp_obj = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $ch;
 $temp_obj = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 if ($or$cond) {
  $6 = (__create_object()|0);
  $temp_obj = $6;
  $7 = $temp_obj;
  HEAP8[$7>>0]=4&255;HEAP8[$7+1>>0]=(4>>8)&255;HEAP8[$7+2>>0]=(4>>16)&255;HEAP8[$7+3>>0]=4>>24;
  $8 = $temp_obj;
  $9 = ((($8)) + 8|0);
  $10 = HEAP8[$9>>0]|0;
  $11 = $10 & -2;
  HEAP8[$9>>0] = $11;
  $12 = $1;
  $13 = $temp_obj;
  $14 = ((($13)) + 4|0);
  HEAP8[$14>>0]=$12&255;HEAP8[$14+1>>0]=($12>>8)&255;HEAP8[$14+2>>0]=($12>>16)&255;HEAP8[$14+3>>0]=$12>>24;
  $15 = $0;
  $16 = ((($15)) + 43|0);
  $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
  $18 = $temp_obj;
  (__ls_pushback($17,$18)|0);
  STACKTOP = sp;return;
 } else {
  ___assert_fail((11122|0),(4322|0),10709,(11130|0));
  // unreachable;
 }
}
function __search_identifier_in_scope_chain($s,$scope,$n,$fp,$ht,$sp) {
 $s = $s|0;
 $scope = $scope|0;
 $n = $n|0;
 $fp = $fp|0;
 $ht = $ht|0;
 $sp = $sp|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $fn = 0, $fs = 0, $lastinst = 0, $or$cond = 0, $result = 0, $running = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $fn = sp + 8|0;
 $fs = sp + 4|0;
 $0 = $s;
 $1 = $scope;
 $2 = $n;
 $3 = $fp;
 $4 = $ht;
 $5 = $sp;
 $result = 0;
 $running = 0;
 HEAP32[$fn>>2] = 0;
 HEAP32[$fs>>2] = 0;
 $6 = $0;
 $7 = ($6|0)!=(0|0);
 $8 = $2;
 $9 = ($8|0)!=(0|0);
 $or$cond = $7 & $9;
 if (!($or$cond)) {
  ___assert_fail((5294|0),(4322|0),9551,(11027|0));
  // unreachable;
 }
 $10 = $3;
 $11 = ($10|0)!=(0);
 if ($11) {
  $12 = $0;
  $13 = $1;
  $14 = $2;
  $15 = $3;
  $16 = ($15|0)==(2);
  $17 = $16&1;
  $18 = $17&255;
  $19 = (__search_identifier_accessor($12,$13,$14,$fn,$fs,$18)|0);
  $result = $19;
  $20 = $result;
  $21 = ($20|0)!=(0|0);
  if (!($21)) {
   label = 5;
  }
 } else {
  label = 5;
 }
 L6: do {
  if ((label|0) == 5) {
   $22 = $0;
   $23 = ((($22)) + 98|0);
   $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
   $25 = ($24|0)!=(0|0);
   if ($25) {
    $26 = $0;
    $27 = ((($26)) + 98|0);
    $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
    $29 = ((($28)) + 53|0);
    $30 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8)|(HEAPU8[$29+2>>0]<<16)|(HEAPU8[$29+3>>0]<<24);
    $31 = ($30|0)!=(0|0);
    if ($31) {
     $32 = $0;
     $33 = ((($32)) + 98|0);
     $34 = HEAPU8[$33>>0]|(HEAPU8[$33+1>>0]<<8)|(HEAPU8[$33+2>>0]<<16)|(HEAPU8[$33+3>>0]<<24);
     $35 = ((($34)) + 53|0);
     $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
     $lastinst = $36;
     $37 = $0;
     $38 = ((($37)) + 98|0);
     $39 = HEAPU8[$38>>0]|(HEAPU8[$38+1>>0]<<8)|(HEAPU8[$38+2>>0]<<16)|(HEAPU8[$38+3>>0]<<24);
     $40 = ((($39)) + 53|0);
     HEAP8[$40>>0]=0&255;HEAP8[$40+1>>0]=(0>>8)&255;HEAP8[$40+2>>0]=(0>>16)&255;HEAP8[$40+3>>0]=0>>24;
     $41 = $0;
     $42 = $lastinst;
     $43 = $2;
     $44 = (__search_identifier_in_class($41,$42,$43,$fn,$fs)|0);
     $result = $44;
     $45 = $lastinst;
     $46 = $0;
     $47 = ((($46)) + 98|0);
     $48 = HEAPU8[$47>>0]|(HEAPU8[$47+1>>0]<<8)|(HEAPU8[$47+2>>0]<<16)|(HEAPU8[$47+3>>0]<<24);
     $49 = ((($48)) + 53|0);
     HEAP8[$49>>0]=$45&255;HEAP8[$49+1>>0]=($45>>8)&255;HEAP8[$49+2>>0]=($45>>16)&255;HEAP8[$49+3>>0]=$45>>24;
     $50 = $result;
     $51 = ($50|0)!=(0|0);
     if ($51) {
      break;
     }
    }
   }
   $52 = $1;
   $53 = ($52|0)!=(0|0);
   if ($53) {
    $54 = $1;
    $running = $54;
   } else {
    $55 = $0;
    $56 = ((($55)) + 75|0);
    $57 = HEAPU8[$56>>0]|(HEAPU8[$56+1>>0]<<8)|(HEAPU8[$56+2>>0]<<16)|(HEAPU8[$56+3>>0]<<24);
    $running = $57;
   }
   while(1) {
    $58 = $running;
    $59 = ($58|0)!=(0|0);
    if (!($59)) {
     break L6;
    }
    $60 = $result;
    $61 = ($60|0)!=(0|0);
    $62 = $61 ^ 1;
    if (!($62)) {
     break L6;
    }
    $63 = $running;
    $64 = ((($63)) + 8|0);
    $65 = HEAPU8[$64>>0]|(HEAPU8[$64+1>>0]<<8)|(HEAPU8[$64+2>>0]<<16)|(HEAPU8[$64+3>>0]<<24);
    $66 = ($65|0)!=(0|0);
    if ($66) {
     $67 = $running;
     $68 = ((($67)) + 8|0);
     $69 = HEAPU8[$68>>0]|(HEAPU8[$68+1>>0]<<8)|(HEAPU8[$68+2>>0]<<16)|(HEAPU8[$68+3>>0]<<24);
     $70 = $2;
     $71 = (__ht_find($69,$70)|0);
     $result = $71;
     $72 = $running;
     $73 = ((($72)) + 8|0);
     $74 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
     HEAP32[$fn>>2] = $74;
     $75 = $running;
     HEAP32[$fs>>2] = $75;
     $76 = $result;
     $77 = ($76|0)!=(0|0);
     if (!($77)) {
      $78 = $running;
      $79 = ((($78)) + 4|0);
      $80 = HEAPU8[$79>>0]|(HEAPU8[$79+1>>0]<<8)|(HEAPU8[$79+2>>0]<<16)|(HEAPU8[$79+3>>0]<<24);
      $81 = ($80|0)==(2);
      if ($81) {
       $82 = $running;
       $83 = ((($82)) + 12|0);
       $84 = HEAPU8[$83>>0]|(HEAPU8[$83+1>>0]<<8)|(HEAPU8[$83+2>>0]<<16)|(HEAPU8[$83+3>>0]<<24);
       $85 = ((($84)) + 8|0);
       $86 = HEAPU8[$85>>0]|(HEAPU8[$85+1>>0]<<8)|(HEAPU8[$85+2>>0]<<16)|(HEAPU8[$85+3>>0]<<24);
       $87 = $2;
       $88 = (__ht_find($86,$87)|0);
       $result = $88;
       $89 = $running;
       $90 = ((($89)) + 12|0);
       $91 = HEAPU8[$90>>0]|(HEAPU8[$90+1>>0]<<8)|(HEAPU8[$90+2>>0]<<16)|(HEAPU8[$90+3>>0]<<24);
       $92 = ((($91)) + 8|0);
       $93 = HEAPU8[$92>>0]|(HEAPU8[$92+1>>0]<<8)|(HEAPU8[$92+2>>0]<<16)|(HEAPU8[$92+3>>0]<<24);
       HEAP32[$fn>>2] = $93;
       $94 = $running;
       $95 = ((($94)) + 12|0);
       $96 = HEAPU8[$95>>0]|(HEAPU8[$95+1>>0]<<8)|(HEAPU8[$95+2>>0]<<16)|(HEAPU8[$95+3>>0]<<24);
       HEAP32[$fs>>2] = $96;
      }
     }
     $97 = $result;
     $98 = ($97|0)!=(0|0);
     if ($98) {
      break L6;
     }
    }
    $99 = $running;
    $100 = HEAPU8[$99>>0]|(HEAPU8[$99+1>>0]<<8)|(HEAPU8[$99+2>>0]<<16)|(HEAPU8[$99+3>>0]<<24);
    $running = $100;
   }
  }
 } while(0);
 $101 = $4;
 $102 = ($101|0)!=(0|0);
 if ($102) {
  $103 = HEAP32[$fn>>2]|0;
  $104 = $4;
  HEAP32[$104>>2] = $103;
 }
 $105 = $5;
 $106 = ($105|0)!=(0|0);
 if (!($106)) {
  $109 = $result;
  STACKTOP = sp;return ($109|0);
 }
 $107 = HEAP32[$fs>>2]|0;
 $108 = $5;
 HEAP32[$108>>2] = $107;
 $109 = $result;
 STACKTOP = sp;return ($109|0);
}
function __init_class($s,$instance,$n) {
 $s = $s|0;
 $instance = $instance|0;
 $n = $n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $me = 0, $meobj = 0, $or$cond = 0, $or$cond3 = 0, $or$cond5 = 0, $running = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $meobj = sp + 4|0;
 $0 = $s;
 $1 = $instance;
 $2 = $n;
 $running = 0;
 HEAP32[$meobj>>2] = 0;
 $me = 0;
 $3 = $0;
 $4 = ($3|0)!=(0|0);
 $5 = $1;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if ($or$cond) {
 }
 $7 = $0;
 $8 = ($7|0)!=(0|0);
 $9 = $1;
 $10 = ($9|0)!=(0|0);
 $or$cond3 = $8 & $10;
 $11 = $2;
 $12 = ($11|0)!=(0|0);
 $or$cond5 = $or$cond3 & $12;
 if ($or$cond5) {
  $13 = $0;
  $14 = ((($13)) + 75|0);
  $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
  $running = $15;
  $16 = $1;
  dest=$16; stop=dest+45|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
  $17 = $1;
  $18 = $0;
  __create_ref($17,147,16,$18);
  $19 = $1;
  $20 = $1;
  (__ref($19,$20)|0);
  $21 = $2;
  $22 = $1;
  $23 = ((($22)) + 17|0);
  HEAP8[$23>>0]=$21&255;HEAP8[$23+1>>0]=($21>>8)&255;HEAP8[$23+2>>0]=($21>>16)&255;HEAP8[$23+3>>0]=$21>>24;
  $24 = (__ls_create()|0);
  $25 = $1;
  $26 = ((($25)) + 25|0);
  HEAP8[$26>>0]=$24&255;HEAP8[$26+1>>0]=($24>>8)&255;HEAP8[$26+2>>0]=($24>>16)&255;HEAP8[$26+3>>0]=$24>>24;
  $27 = (__create_running_context(1)|0);
  $28 = $1;
  $29 = ((($28)) + 29|0);
  HEAP8[$29>>0]=$27&255;HEAP8[$29+1>>0]=($27>>8)&255;HEAP8[$29+2>>0]=($27>>16)&255;HEAP8[$29+3>>0]=$27>>24;
  $30 = $1;
  $31 = $1;
  $32 = ((($31)) + 21|0);
  HEAP8[$32>>0]=$30&255;HEAP8[$32+1>>0]=($30>>8)&255;HEAP8[$32+2>>0]=($30>>16)&255;HEAP8[$32+3>>0]=$30>>24;
  $33 = (__create_var($meobj,8061,5,1)|0);
  $me = $33;
  $34 = $me;
  $35 = ((($34)) + 4|0);
  $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
  HEAP8[$36>>0]=16&255;HEAP8[$36+1>>0]=(16>>8)&255;HEAP8[$36+2>>0]=(16>>16)&255;HEAP8[$36+3>>0]=16>>24;
  $37 = $1;
  $38 = $me;
  $39 = ((($38)) + 4|0);
  $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8)|(HEAPU8[$39+2>>0]<<16)|(HEAPU8[$39+3>>0]<<24);
  $41 = ((($40)) + 4|0);
  HEAP8[$41>>0]=$37&255;HEAP8[$41+1>>0]=($37>>8)&255;HEAP8[$41+2>>0]=($37>>16)&255;HEAP8[$41+3>>0]=$37>>24;
  $42 = $me;
  $43 = ((($42)) + 8|0);
  $44 = HEAP8[$43>>0]|0;
  $45 = $44 & -4;
  $46 = $45 | 1;
  HEAP8[$43>>0] = $46;
  $47 = $me;
  $48 = ((($47)) + 8|0);
  $49 = HEAP8[$48>>0]|0;
  $50 = $49 & -5;
  $51 = $50 | 4;
  HEAP8[$48>>0] = $51;
  $52 = $1;
  $53 = ((($52)) + 29|0);
  $54 = HEAPU8[$53>>0]|(HEAPU8[$53+1>>0]<<8)|(HEAPU8[$53+2>>0]<<16)|(HEAPU8[$53+3>>0]<<24);
  $55 = ((($54)) + 8|0);
  $56 = HEAPU8[$55>>0]|(HEAPU8[$55+1>>0]<<8)|(HEAPU8[$55+2>>0]<<16)|(HEAPU8[$55+3>>0]<<24);
  $57 = $me;
  $58 = HEAPU8[$57>>0]|(HEAPU8[$57+1>>0]<<8)|(HEAPU8[$57+2>>0]<<16)|(HEAPU8[$57+3>>0]<<24);
  $59 = HEAP32[$meobj>>2]|0;
  (__ht_set_or_insert($56,$58,$59)|0);
  STACKTOP = sp;return;
 } else {
  ___assert_fail((5236|0),(4322|0),8290,(10898|0));
  // unreachable;
 }
}
function __link_meta_class($s,$derived,$base) {
 $s = $s|0;
 $derived = $derived|0;
 $base = $base|0;
 var $$sink = 0, $$sink6 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $12 = 0, $13 = 0;
 var $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $or$cond3 = 0, $or$cond5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $s;
 $2 = $derived;
 $3 = $base;
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $6 = $2;
 $7 = ($6|0)!=(0|0);
 $or$cond = $5 & $7;
 if ($or$cond) {
 }
 $8 = $1;
 $9 = ($8|0)!=(0|0);
 $10 = $2;
 $11 = ($10|0)!=(0|0);
 $or$cond3 = $9 & $11;
 $12 = $3;
 $13 = ($12|0)!=(0|0);
 $or$cond5 = $or$cond3 & $13;
 if (!($or$cond5)) {
  ___assert_fail((10860|0),(4322|0),8420,(10881|0));
  // unreachable;
 }
 $14 = $2;
 $15 = ((($14)) + 25|0);
 $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
 $17 = $3;
 $18 = (__ls_find($16,$17,137,0)|0);
 $19 = ($18|0)!=(0|0);
 if (!($19)) {
  $105 = $2;
  $106 = ((($105)) + 25|0);
  $107 = HEAPU8[$106>>0]|(HEAPU8[$106+1>>0]<<8)|(HEAPU8[$106+2>>0]<<16)|(HEAPU8[$106+3>>0]<<24);
  $108 = $3;
  (__ls_pushback($107,$108)|0);
  $109 = $3;
  $110 = $3;
  (__ref($109,$110)|0);
  $0 = 1;
  $111 = $0;
  STACKTOP = sp;return ($111|0);
 }
 $20 = $1;
 $21 = $1;
 $22 = ((($21)) + 67|0);
 $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
 (__set_current_error($20,56,$23)|0);
 $24 = $1;
 $25 = ((($24)) + 163|0);
 $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
 $27 = ($26|0)!=(0|0);
 if ($27) {
  $28 = $1;
  $29 = ((($28)) + 134|0);
  $30 = HEAP8[$29>>0]|0;
  $31 = $30 & 1;
  $32 = ($31<<24>>24)!=(0);
  if (!($32)) {
   $33 = $1;
   $34 = ((($33)) + 134|0);
   $35 = HEAP8[$34>>0]|0;
   $36 = $35 & -2;
   $37 = $36 | 1;
   HEAP8[$34>>0] = $37;
   $38 = $1;
   $39 = ((($38)) + 163|0);
   $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8)|(HEAPU8[$39+2>>0]<<16)|(HEAPU8[$39+3>>0]<<24);
   $41 = $1;
   $42 = $1;
   $43 = ((($42)) + 135|0);
   $44 = HEAPU8[$43>>0]|(HEAPU8[$43+1>>0]<<8)|(HEAPU8[$43+2>>0]<<16)|(HEAPU8[$43+3>>0]<<24);
   $45 = $1;
   $46 = ((($45)) + 135|0);
   $47 = HEAPU8[$46>>0]|(HEAPU8[$46+1>>0]<<8)|(HEAPU8[$46+2>>0]<<16)|(HEAPU8[$46+3>>0]<<24);
   $48 = (_mb_get_error_desc($47)|0);
   $49 = $1;
   $50 = ((($49)) + 139|0);
   $51 = HEAPU8[$50>>0]|(HEAPU8[$50+1>>0]<<8)|(HEAPU8[$50+2>>0]<<16)|(HEAPU8[$50+3>>0]<<24);
   $52 = $1;
   $53 = ((($52)) + 71|0);
   $54 = HEAPU8[$53>>0]|(HEAPU8[$53+1>>0]<<8)|(HEAPU8[$53+2>>0]<<16)|(HEAPU8[$53+3>>0]<<24);
   $55 = ($54|0)!=(0|0);
   if ($55) {
    $56 = $1;
    $57 = ((($56)) + 79|0);
    $58 = HEAPU8[$57>>0]|(HEAPU8[$57+1>>0]<<8)|(HEAPU8[$57+2>>0]<<16)|(HEAPU8[$57+3>>0]<<24);
    $59 = ($58|0)!=(0);
    if ($59) {
     label = 11;
    } else {
     $60 = $1;
     $61 = ((($60)) + 71|0);
     $62 = HEAPU8[$61>>0]|(HEAPU8[$61+1>>0]<<8)|(HEAPU8[$61+2>>0]<<16)|(HEAPU8[$61+3>>0]<<24);
     $63 = ((($62)) + 164|0);
     $64 = HEAPU8[$63>>0]|(HEAPU8[$63+1>>0]<<8)|(HEAPU8[$63+2>>0]<<16)|(HEAPU8[$63+3>>0]<<24);
     $104 = $64;
    }
   } else {
    label = 11;
   }
   if ((label|0) == 11) {
    $65 = $1;
    $66 = ((($65)) + 143|0);
    $67 = HEAPU8[$66>>0]|(HEAPU8[$66+1>>0]<<8)|(HEAPU8[$66+2>>0]<<16)|(HEAPU8[$66+3>>0]<<24);
    $104 = $67;
   }
   $68 = $1;
   $69 = ((($68)) + 71|0);
   $70 = HEAPU8[$69>>0]|(HEAPU8[$69+1>>0]<<8)|(HEAPU8[$69+2>>0]<<16)|(HEAPU8[$69+3>>0]<<24);
   $71 = ($70|0)!=(0|0);
   if ($71) {
    $72 = $1;
    $73 = ((($72)) + 79|0);
    $74 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
    $75 = ($74|0)!=(0);
    if ($75) {
     label = 15;
    } else {
     $76 = $1;
     $77 = ((($76)) + 71|0);
     $78 = HEAPU8[$77>>0]|(HEAPU8[$77+1>>0]<<8)|(HEAPU8[$77+2>>0]<<16)|(HEAPU8[$77+3>>0]<<24);
     $79 = ((($78)) + 168|0);
     $80 = HEAPU8[$79>>0]|(HEAPU8[$79+1>>0]<<8);
     $$sink = $80;
    }
   } else {
    label = 15;
   }
   if ((label|0) == 15) {
    $81 = $1;
    $82 = ((($81)) + 147|0);
    $83 = HEAPU8[$82>>0]|(HEAPU8[$82+1>>0]<<8);
    $$sink = $83;
   }
   $84 = $$sink&65535;
   $85 = $84&65535;
   $86 = $1;
   $87 = ((($86)) + 71|0);
   $88 = HEAPU8[$87>>0]|(HEAPU8[$87+1>>0]<<8)|(HEAPU8[$87+2>>0]<<16)|(HEAPU8[$87+3>>0]<<24);
   $89 = ($88|0)!=(0|0);
   if ($89) {
    $90 = $1;
    $91 = ((($90)) + 79|0);
    $92 = HEAPU8[$91>>0]|(HEAPU8[$91+1>>0]<<8)|(HEAPU8[$91+2>>0]<<16)|(HEAPU8[$91+3>>0]<<24);
    $93 = ($92|0)!=(0);
    if ($93) {
     label = 19;
    } else {
     $94 = $1;
     $95 = ((($94)) + 71|0);
     $96 = HEAPU8[$95>>0]|(HEAPU8[$95+1>>0]<<8)|(HEAPU8[$95+2>>0]<<16)|(HEAPU8[$95+3>>0]<<24);
     $97 = ((($96)) + 170|0);
     $98 = HEAPU8[$97>>0]|(HEAPU8[$97+1>>0]<<8);
     $$sink6 = $98;
    }
   } else {
    label = 19;
   }
   if ((label|0) == 19) {
    $99 = $1;
    $100 = ((($99)) + 149|0);
    $101 = HEAPU8[$100>>0]|(HEAPU8[$100+1>>0]<<8);
    $$sink6 = $101;
   }
   $102 = $$sink6&65535;
   $103 = $102&65535;
   FUNCTION_TABLE_viiiiiiii[$40 & 127]($41,$44,$48,$51,$104,$85,$103,3);
  }
 }
 $0 = 0;
 $111 = $0;
 STACKTOP = sp;return ($111|0);
}
function __push_scope_by_class($s,$p) {
 $s = $s|0;
 $p = $p|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $p;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 if (!($3)) {
  ___assert_fail((4803|0),(4322|0),9305,(10813|0));
  // unreachable;
 }
 $4 = $0;
 $5 = $1;
 $6 = (__find_scope($4,$5)|0);
 $7 = ($6|0)!=(0|0);
 if ($7) {
  $8 = $0;
  $9 = $1;
  $10 = (__reference_scope_by_class($8,$9,0)|0);
  $1 = $10;
 }
 $11 = $0;
 $12 = ((($11)) + 75|0);
 $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
 $14 = $1;
 HEAP8[$14>>0]=$13&255;HEAP8[$14+1>>0]=($13>>8)&255;HEAP8[$14+2>>0]=($13>>16)&255;HEAP8[$14+3>>0]=$13>>24;
 $15 = $1;
 $16 = $0;
 $17 = ((($16)) + 75|0);
 HEAP8[$17>>0]=$15&255;HEAP8[$17+1>>0]=($15>>8)&255;HEAP8[$17+2>>0]=($15>>16)&255;HEAP8[$17+3>>0]=$15>>24;
 $18 = $0;
 $19 = ((($18)) + 75|0);
 $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8)|(HEAPU8[$19+2>>0]<<16)|(HEAPU8[$19+3>>0]<<24);
 STACKTOP = sp;return ($20|0);
}
function __ht_set_or_insert($ht,$key,$value) {
 $ht = $ht|0;
 $key = $key|0;
 $value = $value|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $8 = 0, $9 = 0, $bucket = 0;
 var $hash_code = 0, $or$cond = 0, $result = 0, $ul = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $ht;
 $1 = $key;
 $2 = $value;
 $result = 0;
 $bucket = 0;
 $hash_code = 0;
 $ul = 0;
 $3 = $0;
 $4 = ($3|0)!=(0|0);
 $5 = $1;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if (!($or$cond)) {
  ___assert_fail((6295|0),(4322|0),3055,(10788|0));
  // unreachable;
 }
 $7 = $0;
 $8 = $1;
 $9 = (__ht_find($7,$8)|0);
 $bucket = $9;
 $10 = $bucket;
 $11 = ($10|0)!=(0|0);
 if ($11) {
  $12 = $2;
  $13 = $bucket;
  HEAP8[$13>>0]=$12&255;HEAP8[$13+1>>0]=($12>>8)&255;HEAP8[$13+2>>0]=($12>>16)&255;HEAP8[$13+3>>0]=$12>>24;
  $14 = $result;
  $15 = (($14) + 1)|0;
  $result = $15;
  $78 = $result;
  STACKTOP = sp;return ($78|0);
 }
 $16 = $0;
 $17 = ((($16)) + 8|0);
 $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
 $19 = $0;
 $20 = $1;
 $21 = (FUNCTION_TABLE_iii[$18 & 255]($19,$20)|0);
 $hash_code = $21;
 $22 = $0;
 $23 = ((($22)) + 20|0);
 $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
 $25 = ($24|0)!=(0|0);
 L8: do {
  if (!($25)) {
   $26 = $0;
   $27 = ((($26)) + 12|0);
   $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
   $29 = $28<<2;
   $30 = (_mb_malloc($29)|0);
   $31 = $0;
   $32 = ((($31)) + 20|0);
   HEAP8[$32>>0]=$30&255;HEAP8[$32+1>>0]=($30>>8)&255;HEAP8[$32+2>>0]=($30>>16)&255;HEAP8[$32+3>>0]=$30>>24;
   $ul = 0;
   while(1) {
    $33 = $ul;
    $34 = $0;
    $35 = ((($34)) + 12|0);
    $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
    $37 = ($33>>>0)<($36>>>0);
    if (!($37)) {
     break L8;
    }
    $38 = $ul;
    $39 = $0;
    $40 = ((($39)) + 20|0);
    $41 = HEAPU8[$40>>0]|(HEAPU8[$40+1>>0]<<8)|(HEAPU8[$40+2>>0]<<16)|(HEAPU8[$40+3>>0]<<24);
    $42 = (($41) + ($38<<2)|0);
    HEAP32[$42>>2] = 0;
    $43 = $ul;
    $44 = (($43) + 1)|0;
    $ul = $44;
   }
  }
 } while(0);
 $45 = $hash_code;
 $46 = $0;
 $47 = ((($46)) + 20|0);
 $48 = HEAPU8[$47>>0]|(HEAPU8[$47+1>>0]<<8)|(HEAPU8[$47+2>>0]<<16)|(HEAPU8[$47+3>>0]<<24);
 $49 = (($48) + ($45<<2)|0);
 $50 = HEAP32[$49>>2]|0;
 $51 = ($50|0)!=(0|0);
 if (!($51)) {
  $52 = (__ls_create()|0);
  $53 = $hash_code;
  $54 = $0;
  $55 = ((($54)) + 20|0);
  $56 = HEAPU8[$55>>0]|(HEAPU8[$55+1>>0]<<8)|(HEAPU8[$55+2>>0]<<16)|(HEAPU8[$55+3>>0]<<24);
  $57 = (($56) + ($53<<2)|0);
  HEAP32[$57>>2] = $52;
 }
 $58 = $hash_code;
 $59 = $0;
 $60 = ((($59)) + 20|0);
 $61 = HEAPU8[$60>>0]|(HEAPU8[$60+1>>0]<<8)|(HEAPU8[$60+2>>0]<<16)|(HEAPU8[$60+3>>0]<<24);
 $62 = (($61) + ($58<<2)|0);
 $63 = HEAP32[$62>>2]|0;
 $bucket = $63;
 $64 = $bucket;
 $65 = $2;
 $66 = (__ls_pushback($64,$65)|0);
 $bucket = $66;
 $67 = $bucket;
 $68 = ($67|0)!=(0|0);
 if (!($68)) {
  ___assert_fail((10806|0),(4322|0),3072,(10788|0));
  // unreachable;
 }
 $69 = $1;
 $70 = $bucket;
 $71 = ((($70)) + 12|0);
 HEAP8[$71>>0]=$69&255;HEAP8[$71+1>>0]=($69>>8)&255;HEAP8[$71+2>>0]=($69>>16)&255;HEAP8[$71+3>>0]=$69>>24;
 $72 = $0;
 $73 = ((($72)) + 16|0);
 $74 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
 $75 = (($74) + 1)|0;
 HEAP8[$73>>0]=$75&255;HEAP8[$73+1>>0]=($75>>8)&255;HEAP8[$73+2>>0]=($75>>16)&255;HEAP8[$73+3>>0]=$75>>24;
 $76 = $result;
 $77 = (($76) + 1)|0;
 $result = $77;
 $78 = $result;
 STACKTOP = sp;return ($78|0);
}
function __pop_scope($s,$tidy) {
 $s = $s|0;
 $tidy = $tidy|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $running = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $tidy;
 $running = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 if (!($3)) {
  ___assert_fail((4803|0),(4322|0),9421,(10777|0));
  // unreachable;
 }
 $4 = $0;
 $5 = ((($4)) + 75|0);
 $6 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
 $running = $6;
 $7 = $running;
 $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
 $9 = $0;
 $10 = ((($9)) + 75|0);
 HEAP8[$10>>0]=$8&255;HEAP8[$10+1>>0]=($8>>8)&255;HEAP8[$10+2>>0]=($8>>16)&255;HEAP8[$10+3>>0]=$8>>24;
 $11 = $running;
 HEAP8[$11>>0]=0&255;HEAP8[$11+1>>0]=(0>>8)&255;HEAP8[$11+2>>0]=(0>>16)&255;HEAP8[$11+3>>0]=0>>24;
 $12 = $running;
 $13 = ((($12)) + 4|0);
 $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
 $15 = ($14|0)==(2);
 if ($15) {
  $16 = $0;
  $17 = $running;
  __destroy_scope($16,$17);
 } else {
  $18 = $1;
  $19 = ($18<<24>>24)!=(0);
  if ($19) {
   $20 = $0;
   $21 = $running;
   __out_of_scope($20,$21,0,0,1);
  }
 }
 $22 = $0;
 $23 = ((($22)) + 75|0);
 $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
 STACKTOP = sp;return ($24|0);
}
function __ht_find($ht,$key) {
 $ht = $ht|0;
 $key = $key|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $bucket = 0, $hash_code = 0, $or$cond = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $ht;
 $1 = $key;
 $result = 0;
 $bucket = 0;
 $hash_code = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 if (!($or$cond)) {
  ___assert_fail((6295|0),(4322|0),3030,(10768|0));
  // unreachable;
 }
 $6 = $0;
 $7 = ((($6)) + 8|0);
 $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
 $9 = $0;
 $10 = $1;
 $11 = (FUNCTION_TABLE_iii[$8 & 255]($9,$10)|0);
 $hash_code = $11;
 $12 = $0;
 $13 = ((($12)) + 20|0);
 $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
 $15 = ($14|0)!=(0|0);
 if ($15) {
  $16 = $hash_code;
  $17 = $0;
  $18 = ((($17)) + 20|0);
  $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
  $20 = (($19) + ($16<<2)|0);
  $21 = HEAP32[$20>>2]|0;
  $22 = ($21|0)!=(0|0);
  if ($22) {
   $23 = $hash_code;
   $24 = $0;
   $25 = ((($24)) + 20|0);
   $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
   $27 = (($26) + ($23<<2)|0);
   $28 = HEAP32[$27>>2]|0;
   $bucket = $28;
   $29 = $bucket;
   $30 = ((($29)) + 8|0);
   $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8)|(HEAPU8[$30+2>>0]<<16)|(HEAPU8[$30+3>>0]<<24);
   $bucket = $31;
  }
 }
 while(1) {
  $32 = $bucket;
  $33 = ($32|0)!=(0|0);
  if (!($33)) {
   label = 10;
   break;
  }
  $34 = $0;
  $35 = ((($34)) + 4|0);
  $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
  $37 = $bucket;
  $38 = ((($37)) + 12|0);
  $39 = HEAPU8[$38>>0]|(HEAPU8[$38+1>>0]<<8)|(HEAPU8[$38+2>>0]<<16)|(HEAPU8[$38+3>>0]<<24);
  $40 = $1;
  $41 = (FUNCTION_TABLE_iii[$36 & 255]($39,$40)|0);
  $42 = ($41|0)==(0);
  $43 = $bucket;
  if ($42) {
   break;
  }
  $44 = ((($43)) + 8|0);
  $45 = HEAPU8[$44>>0]|(HEAPU8[$44+1>>0]<<8)|(HEAPU8[$44+2>>0]<<16)|(HEAPU8[$44+3>>0]<<24);
  $bucket = $45;
 }
 if ((label|0) == 10) {
  $46 = $result;
  STACKTOP = sp;return ($46|0);
 }
 $result = $43;
 $46 = $result;
 STACKTOP = sp;return ($46|0);
}
function __search_var_in_scope_chain($s,$i,$o) {
 $s = $s|0;
 $i = $i|0;
 $o = $o|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $obj = 0, $or$cond = 0, $result = 0, $scp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $i;
 $2 = $o;
 $obj = 0;
 $scp = 0;
 $result = 0;
 $3 = $0;
 $4 = ($3|0)!=(0|0);
 $5 = $1;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if (!($or$cond)) {
  ___assert_fail((5603|0),(4322|0),9630,(10741|0));
  // unreachable;
 }
 $7 = $2;
 $8 = ($7|0)!=(0|0);
 if ($8) {
  $9 = $2;
  HEAP32[$9>>2] = 0;
 }
 $10 = $1;
 $result = $10;
 $11 = $0;
 $12 = $result;
 $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
 $14 = (__search_identifier_in_scope_chain($11,0,$13,1,0,0)|0);
 $scp = $14;
 $15 = $scp;
 $16 = ($15|0)!=(0|0);
 if (!($16)) {
  $31 = $result;
  STACKTOP = sp;return ($31|0);
 }
 $17 = $scp;
 $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
 $obj = $18;
 $19 = $obj;
 $20 = ($19|0)!=(0|0);
 if (!($20)) {
  $31 = $result;
  STACKTOP = sp;return ($31|0);
 }
 $21 = $obj;
 $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
 $23 = ($22|0)==(9);
 if (!($23)) {
  $31 = $result;
  STACKTOP = sp;return ($31|0);
 }
 $24 = $2;
 $25 = ($24|0)!=(0|0);
 if ($25) {
  $26 = $obj;
  $27 = $2;
  HEAP32[$27>>2] = $26;
 }
 $28 = $obj;
 $29 = ((($28)) + 4|0);
 $30 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8)|(HEAPU8[$29+2>>0]<<16)|(HEAPU8[$29+3>>0]<<24);
 $result = $30;
 $31 = $result;
 STACKTOP = sp;return ($31|0);
}
function __create_array($s,$n,$t) {
 $s = $s|0;
 $n = $n|0;
 $t = $t|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $result = 0, dest = 0;
 var label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $n;
 $2 = $t;
 $result = 0;
 $3 = $0;
 $4 = ($3|0)!=(0|0);
 if ($4) {
  $5 = (_mb_malloc(50)|0);
  $result = $5;
  $6 = $result;
  dest=$6; stop=dest+50|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
  $7 = $2;
  $8 = $result;
  $9 = ((($8)) + 21|0);
  HEAP8[$9>>0]=$7&255;HEAP8[$9+1>>0]=($7>>8)&255;HEAP8[$9+2>>0]=($7>>16)&255;HEAP8[$9+3>>0]=$7>>24;
  $10 = $1;
  $11 = $result;
  $12 = ((($11)) + 17|0);
  HEAP8[$12>>0]=$10&255;HEAP8[$12+1>>0]=($10>>8)&255;HEAP8[$12+2>>0]=($10>>16)&255;HEAP8[$12+3>>0]=$10>>24;
  $13 = $result;
  $14 = $0;
  __create_ref($13,148,10,$14);
  $15 = $result;
  $16 = $result;
  (__ref($15,$16)|0);
  $17 = $result;
  STACKTOP = sp;return ($17|0);
 } else {
  ___assert_fail((4803|0),(4322|0),7143,(10699|0));
  // unreachable;
 }
 return (0)|0;
}
function __init_array($arr) {
 $arr = $arr|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $elemsize = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $arr;
 $elemsize = 0;
 $1 = $0;
 $2 = ($1|0)!=(0|0);
 if (!($2)) {
  ___assert_fail((8576|0),(4322|0),7182,(10662|0));
  // unreachable;
 }
 $3 = $0;
 $4 = ((($3)) + 21|0);
 $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
 $6 = (__get_size_of($5)|0);
 $elemsize = $6;
 $7 = $0;
 $8 = ((($7)) + 29|0);
 $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
 $10 = ($9>>>0)>(0);
 if (!($10)) {
  ___assert_fail((10674|0),(4322|0),7189,(10662|0));
  // unreachable;
 }
 $11 = $0;
 $12 = ((($11)) + 25|0);
 $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
 $14 = ($13|0)!=(0|0);
 if ($14) {
  ___assert_fail((10689|0),(4322|0),7190,(10662|0));
  // unreachable;
 }
 $15 = $elemsize;
 $16 = $0;
 $17 = ((($16)) + 29|0);
 $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
 $19 = Math_imul($15, $18)|0;
 $20 = (_mb_malloc($19)|0);
 $21 = $0;
 $22 = ((($21)) + 25|0);
 HEAP8[$22>>0]=$20&255;HEAP8[$22+1>>0]=($20>>8)&255;HEAP8[$22+2>>0]=($20>>16)&255;HEAP8[$22+3>>0]=$20>>24;
 $23 = $0;
 $24 = ((($23)) + 25|0);
 $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
 $26 = ($25|0)!=(0|0);
 if (!($26)) {
  STACKTOP = sp;return;
 }
 $27 = $0;
 $28 = ((($27)) + 25|0);
 $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
 $30 = $elemsize;
 $31 = $0;
 $32 = ((($31)) + 29|0);
 $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
 $34 = Math_imul($30, $33)|0;
 _memset(($29|0),0,($34|0))|0;
 STACKTOP = sp;return;
}
function __get_array_elem($s,$arr,$index,$val,$type) {
 $s = $s|0;
 $arr = $arr|0;
 $index = $index|0;
 $val = $val|0;
 $type = $type|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0.0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $elemsize = 0, $or$cond = 0, $or$cond3 = 0, $or$cond5 = 0, $or$cond7 = 0;
 var $or$cond9 = 0, $pos = 0, $rawptr = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $arr;
 $2 = $index;
 $3 = $val;
 $4 = $type;
 $result = 1;
 $elemsize = 0;
 $pos = 0;
 $rawptr = 0;
 $5 = $0;
 $6 = ($5|0)!=(0|0);
 $7 = $1;
 $8 = ($7|0)!=(0|0);
 $or$cond = $6 & $8;
 $9 = $3;
 $10 = ($9|0)!=(0|0);
 $or$cond3 = $or$cond & $10;
 if ($or$cond3) {
 }
 $11 = $0;
 $12 = ($11|0)!=(0|0);
 $13 = $1;
 $14 = ($13|0)!=(0|0);
 $or$cond5 = $12 & $14;
 $15 = $3;
 $16 = ($15|0)!=(0|0);
 $or$cond7 = $or$cond5 & $16;
 $17 = $4;
 $18 = ($17|0)!=(0|0);
 $or$cond9 = $or$cond7 & $18;
 if (!($or$cond9)) {
  ___assert_fail((10622|0),(4322|0),7350,(10646|0));
  // unreachable;
 }
 $19 = $2;
 $20 = $1;
 $21 = ((($20)) + 29|0);
 $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
 $23 = ($19>>>0)<($22>>>0);
 if (!($23)) {
  ___assert_fail((10603|0),(4322|0),7351,(10646|0));
  // unreachable;
 }
 $24 = $1;
 $25 = ((($24)) + 21|0);
 $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
 $27 = (__get_size_of($26)|0);
 $elemsize = $27;
 $28 = $elemsize;
 $29 = $2;
 $30 = Math_imul($28, $29)|0;
 $pos = $30;
 $31 = $1;
 $32 = ((($31)) + 25|0);
 $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
 $34 = $33;
 $35 = $pos;
 $36 = (($34) + ($35))|0;
 $37 = $36;
 $rawptr = $37;
 $38 = $1;
 $39 = ((($38)) + 21|0);
 $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8)|(HEAPU8[$39+2>>0]<<16)|(HEAPU8[$39+3>>0]<<24);
 $41 = ($40|0)==(3);
 if ($41) {
  $42 = $rawptr;
  $43 = +HEAPF32[$42>>2];
  $44 = $3;
  HEAPF32[tempDoublePtr>>2]=$43;HEAP8[$44>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$44+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$44+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$44+3>>0]=HEAP8[tempDoublePtr+3>>0];
  $45 = $4;
  HEAP32[$45>>2] = 3;
  $54 = $result;
  STACKTOP = sp;return ($54|0);
 }
 $46 = $1;
 $47 = ((($46)) + 21|0);
 $48 = HEAPU8[$47>>0]|(HEAPU8[$47+1>>0]<<8)|(HEAPU8[$47+2>>0]<<16)|(HEAPU8[$47+3>>0]<<24);
 $49 = ($48|0)==(4);
 if (!($49)) {
  ___assert_fail((8593|0),(4322|0),7368,(10646|0));
  // unreachable;
 }
 $50 = $rawptr;
 $51 = HEAP32[$50>>2]|0;
 $52 = $3;
 HEAP8[$52>>0]=$51&255;HEAP8[$52+1>>0]=($51>>8)&255;HEAP8[$52+2>>0]=($51>>16)&255;HEAP8[$52+3>>0]=$51>>24;
 $53 = $4;
 HEAP32[$53>>2] = 4;
 $54 = $result;
 STACKTOP = sp;return ($54|0);
}
function __internal_type_to_public_type($t) {
 $t = $t|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $t;
 $2 = $1;
 do {
  switch ($2|0) {
  case 0:  {
   $0 = 0;
   break;
  }
  case 2:  {
   $0 = 2;
   break;
  }
  case 3:  {
   $0 = 4;
   break;
  }
  case 4:  {
   $0 = 8;
   break;
  }
  case 5:  {
   $0 = 16;
   break;
  }
  case 6:  {
   $0 = 32;
   break;
  }
  case 7:  {
   $0 = 64;
   break;
  }
  case 10:  {
   $0 = 128;
   break;
  }
  case 11:  {
   $0 = 256;
   break;
  }
  case 12:  {
   $0 = 512;
   break;
  }
  case 13:  {
   $0 = 1024;
   break;
  }
  case 14:  {
   $0 = 2048;
   break;
  }
  case 16:  {
   $0 = 4096;
   break;
  }
  case 17:  {
   $0 = 8192;
   break;
  }
  default: {
   $0 = 1;
  }
  }
 } while(0);
 $3 = $0;
 STACKTOP = sp;return ($3|0);
}
function __set_array_elem($s,$ast,$arr,$index,$val,$type) {
 $s = $s|0;
 $ast = $ast|0;
 $arr = $arr|0;
 $index = $index|0;
 $val = $val|0;
 $type = $type|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0.0, $4 = 0, $40 = 0, $41 = 0, $42 = 0.0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $_sl = 0, $elemsize = 0;
 var $or$cond = 0, $or$cond3 = 0, $or$cond5 = 0, $pos = 0, $rawptr = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $ast;
 $2 = $arr;
 $3 = $index;
 $4 = $val;
 $5 = $type;
 $result = 0;
 $elemsize = 0;
 $pos = 0;
 $rawptr = 0;
 $6 = $0;
 $7 = ($6|0)!=(0|0);
 $8 = $2;
 $9 = ($8|0)!=(0|0);
 $or$cond = $7 & $9;
 if ($or$cond) {
 }
 $10 = $0;
 $11 = ($10|0)!=(0|0);
 $12 = $2;
 $13 = ($12|0)!=(0|0);
 $or$cond3 = $11 & $13;
 $14 = $4;
 $15 = ($14|0)!=(0|0);
 $or$cond5 = $or$cond3 & $15;
 if (!($or$cond5)) {
  ___assert_fail((10571|0),(4322|0),7382,(10587|0));
  // unreachable;
 }
 $16 = $3;
 $17 = $2;
 $18 = ((($17)) + 29|0);
 $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
 $20 = ($16>>>0)<($19>>>0);
 if (!($20)) {
  ___assert_fail((10603|0),(4322|0),7383,(10587|0));
  // unreachable;
 }
 $21 = $2;
 $22 = ((($21)) + 21|0);
 $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
 $24 = (__get_size_of($23)|0);
 $elemsize = $24;
 $25 = $elemsize;
 $26 = $3;
 $27 = Math_imul($25, $26)|0;
 $pos = $27;
 $28 = $2;
 $29 = ((($28)) + 25|0);
 $30 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8)|(HEAPU8[$29+2>>0]<<16)|(HEAPU8[$29+3>>0]<<24);
 $31 = $30;
 $32 = $pos;
 $33 = (($31) + ($32))|0;
 $34 = $33;
 $rawptr = $34;
 $35 = $5;
 $36 = HEAP32[$35>>2]|0;
 switch ($36|0) {
 case 2:  {
  $37 = $4;
  $38 = HEAPU8[$37>>0]|(HEAPU8[$37+1>>0]<<8)|(HEAPU8[$37+2>>0]<<16)|(HEAPU8[$37+3>>0]<<24);
  $39 = (+($38|0));
  $40 = $rawptr;
  HEAPF32[$40>>2] = $39;
  $97 = $result;
  STACKTOP = sp;return ($97|0);
  break;
 }
 case 3:  {
  $41 = $4;
  HEAP8[tempDoublePtr>>0]=HEAP8[$41>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$41+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$41+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$41+3>>0];$42 = +HEAPF32[tempDoublePtr>>2];
  $43 = $rawptr;
  HEAPF32[$43>>2] = $42;
  $97 = $result;
  STACKTOP = sp;return ($97|0);
  break;
 }
 case 4:  {
  $_sl = 0;
  $44 = $2;
  $45 = ((($44)) + 21|0);
  $46 = HEAPU8[$45>>0]|(HEAPU8[$45+1>>0]<<8)|(HEAPU8[$45+2>>0]<<16)|(HEAPU8[$45+3>>0]<<24);
  $47 = ($46|0)!=(4);
  if (!($47)) {
   $79 = $4;
   $80 = HEAPU8[$79>>0]|(HEAPU8[$79+1>>0]<<8)|(HEAPU8[$79+2>>0]<<16)|(HEAPU8[$79+3>>0]<<24);
   $81 = (_strlen($80)|0);
   $_sl = $81;
   $82 = $rawptr;
   $83 = HEAP32[$82>>2]|0;
   $84 = ($83|0)!=(0|0);
   if ($84) {
    $85 = $rawptr;
    $86 = HEAP32[$85>>2]|0;
    _mb_free($86);
   }
   $87 = $_sl;
   $88 = (($87) + 1)|0;
   $89 = (_mb_malloc($88)|0);
   $90 = $rawptr;
   HEAP32[$90>>2] = $89;
   $91 = $rawptr;
   $92 = HEAP32[$91>>2]|0;
   $93 = $4;
   $94 = HEAPU8[$93>>0]|(HEAPU8[$93+1>>0]<<8)|(HEAPU8[$93+2>>0]<<16)|(HEAPU8[$93+3>>0]<<24);
   $95 = $_sl;
   $96 = (($95) + 1)|0;
   _memcpy(($92|0),($94|0),($96|0))|0;
   $97 = $result;
   STACKTOP = sp;return ($97|0);
  }
  $48 = $1;
  $49 = ($48|0)!=(0|0);
  if ($49) {
   $50 = $1;
   $51 = HEAPU8[$50>>0]|(HEAPU8[$50+1>>0]<<8)|(HEAPU8[$50+2>>0]<<16)|(HEAPU8[$50+3>>0]<<24);
   $52 = ($51|0)!=(0|0);
   if ($52) {
    $53 = $0;
    $54 = $0;
    $55 = ((($54)) + 67|0);
    $56 = HEAPU8[$55>>0]|(HEAPU8[$55+1>>0]<<8)|(HEAPU8[$55+2>>0]<<16)|(HEAPU8[$55+3>>0]<<24);
    $57 = (__set_current_error($53,18,$56)|0);
    $58 = ($57<<24>>24)!=(0);
    if (!($58)) {
     $97 = $result;
     STACKTOP = sp;return ($97|0);
    }
    $59 = $0;
    $60 = $1;
    $61 = HEAPU8[$60>>0]|(HEAPU8[$60+1>>0]<<8)|(HEAPU8[$60+2>>0]<<16)|(HEAPU8[$60+3>>0]<<24);
    $62 = ((($61)) + 9|0);
    $63 = HEAPU8[$62>>0]|(HEAPU8[$62+1>>0]<<8)|(HEAPU8[$62+2>>0]<<16)|(HEAPU8[$62+3>>0]<<24);
    $64 = $1;
    $65 = HEAPU8[$64>>0]|(HEAPU8[$64+1>>0]<<8)|(HEAPU8[$64+2>>0]<<16)|(HEAPU8[$64+3>>0]<<24);
    $66 = ((($65)) + 13|0);
    $67 = HEAPU8[$66>>0]|(HEAPU8[$66+1>>0]<<8);
    $68 = $1;
    $69 = HEAPU8[$68>>0]|(HEAPU8[$68+1>>0]<<8)|(HEAPU8[$68+2>>0]<<16)|(HEAPU8[$68+3>>0]<<24);
    $70 = ((($69)) + 15|0);
    $71 = HEAPU8[$70>>0]|(HEAPU8[$70+1>>0]<<8);
    __set_error_pos($59,$63,$67,$71);
    $result = 3;
    $97 = $result;
    STACKTOP = sp;return ($97|0);
   }
  }
  $72 = $0;
  $73 = $0;
  $74 = ((($73)) + 67|0);
  $75 = HEAPU8[$74>>0]|(HEAPU8[$74+1>>0]<<8)|(HEAPU8[$74+2>>0]<<16)|(HEAPU8[$74+3>>0]<<24);
  $76 = (__set_current_error($72,18,$75)|0);
  $77 = ($76<<24>>24)!=(0);
  if (!($77)) {
   $97 = $result;
   STACKTOP = sp;return ($97|0);
  }
  $78 = $0;
  __set_error_pos($78,0,0,0);
  $result = 3;
  $97 = $result;
  STACKTOP = sp;return ($97|0);
  break;
 }
 default: {
  $result = 3;
  $97 = $result;
  STACKTOP = sp;return ($97|0);
 }
 }
 return (0)|0;
}
function __create_list($s) {
 $s = $s|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $result = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $result = 0;
 $1 = $0;
 $2 = ($1|0)!=(0|0);
 if ($2) {
  $3 = (_mb_malloc(39)|0);
  $result = $3;
  $4 = $result;
  dest=$4; stop=dest+39|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
  $5 = (__ls_create()|0);
  $6 = $result;
  $7 = ((($6)) + 19|0);
  HEAP8[$7>>0]=$5&255;HEAP8[$7+1>>0]=($5>>8)&255;HEAP8[$7+2>>0]=($5>>16)&255;HEAP8[$7+3>>0]=$5>>24;
  $8 = $result;
  $9 = $0;
  __create_ref($8,149,11,$9);
  $10 = $result;
  STACKTOP = sp;return ($10|0);
 } else {
  ___assert_fail((4803|0),(4322|0),7518,(10532|0));
  // unreachable;
 }
 return (0)|0;
}
function __create_dict($s) {
 $s = $s|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $result = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $result = 0;
 $1 = $0;
 $2 = ($1|0)!=(0|0);
 if ($2) {
  $3 = (_mb_malloc(23)|0);
  $result = $3;
  $4 = $result;
  dest=$4; stop=dest+23|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
  $5 = (__ht_create(0,150,151,152)|0);
  $6 = $result;
  $7 = ((($6)) + 19|0);
  HEAP8[$7>>0]=$5&255;HEAP8[$7+1>>0]=($5>>8)&255;HEAP8[$7+2>>0]=($5>>16)&255;HEAP8[$7+3>>0]=$5>>24;
  $8 = $result;
  $9 = $0;
  __create_ref($8,153,13,$9);
  $10 = $result;
  STACKTOP = sp;return ($10|0);
 } else {
  ___assert_fail((4803|0),(4322|0),7543,(10450|0));
  // unreachable;
 }
 return (0)|0;
}
function __at_list($coll,$idx,$oval) {
 $coll = $coll|0;
 $idx = $idx|0;
 $oval = $oval|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond3 = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $coll;
 $1 = $idx;
 $2 = $oval;
 $result = 0;
 $3 = $0;
 $4 = ($3|0)!=(0|0);
 $5 = $2;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if (!($or$cond)) {
  ___assert_fail((10428|0),(4322|0),7930,(10441|0));
  // unreachable;
 }
 $7 = $0;
 __fill_ranged($7);
 $8 = $0;
 $9 = $1;
 $10 = (__node_at_list($8,$9)|0);
 $result = $10;
 $11 = $2;
 $12 = ($11|0)!=(0|0);
 $13 = $result;
 $14 = ($13|0)!=(0|0);
 $or$cond3 = $12 & $14;
 if ($or$cond3) {
  $15 = $result;
  $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
  $17 = ($16|0)!=(0|0);
  if ($17) {
   $18 = $result;
   $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
   $20 = $2;
   (__internal_object_to_public_value($19,$20)|0);
  }
 }
 $21 = $result;
 $22 = ($21|0)!=(0|0);
 if (!($22)) {
  $27 = 0;
  $26 = $27 ^ 1;
  $28 = $26 ^ 1;
  $29 = $28&1;
  $30 = $29&255;
  STACKTOP = sp;return ($30|0);
 }
 $23 = $result;
 $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
 $25 = ($24|0)!=(0|0);
 $27 = $25;
 $26 = $27 ^ 1;
 $28 = $26 ^ 1;
 $29 = $28&1;
 $30 = $29&255;
 STACKTOP = sp;return ($30|0);
}
function __find_dict($coll,$val,$oval) {
 $coll = $coll|0;
 $val = $val|0;
 $oval = $oval|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $oarg = 0, $or$cond = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $oarg = sp;
 $1 = $coll;
 $2 = $val;
 $3 = $oval;
 $result = 0;
 HEAP32[$oarg>>2] = 0;
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $6 = $2;
 $7 = ($6|0)!=(0|0);
 $or$cond = $5 & $7;
 if (!($or$cond)) {
  ___assert_fail((10405|0),(4322|0),8075,(10417|0));
  // unreachable;
 }
 $8 = $2;
 $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
 $10 = ($9|0)==(512);
 if (!($10)) {
  $11 = $2;
  $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
  $13 = ($12|0)==(2048);
  if (!($13)) {
   $14 = $2;
   (__create_internal_object_from_public_value($14,$oarg)|0);
   $15 = $1;
   $16 = ((($15)) + 19|0);
   $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
   $18 = HEAP32[$oarg>>2]|0;
   $19 = (__ht_find($17,$18)|0);
   $result = $19;
   $20 = HEAP32[$oarg>>2]|0;
   (__destroy_object($20,0)|0);
   $21 = $3;
   $22 = ($21|0)!=(0|0);
   do {
    if ($22) {
     $23 = $result;
     $24 = ($23|0)!=(0|0);
     if ($24) {
      $25 = $result;
      $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
      $27 = ($26|0)!=(0|0);
      if ($27) {
       $28 = $result;
       $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
       $30 = $3;
       (__internal_object_to_public_value($29,$30)|0);
       break;
      }
     }
     $31 = $3;
     HEAP8[$31>>0]=1&255;HEAP8[$31+1>>0]=(1>>8)&255;HEAP8[$31+2>>0]=(1>>16)&255;HEAP8[$31+3>>0]=1>>24;
     $32 = $3;
     $33 = ((($32)) + 4|0);
     HEAP8[$33>>0]=0&255;HEAP8[$33+1>>0]=(0>>8)&255;HEAP8[$33+2>>0]=(0>>16)&255;HEAP8[$33+3>>0]=0>>24;
     $0 = 1;
     $44 = $0;
     STACKTOP = sp;return ($44|0);
    }
   } while(0);
   $34 = $result;
   $35 = ($34|0)!=(0|0);
   if ($35) {
    $36 = $result;
    $37 = HEAPU8[$36>>0]|(HEAPU8[$36+1>>0]<<8)|(HEAPU8[$36+2>>0]<<16)|(HEAPU8[$36+3>>0]<<24);
    $38 = ($37|0)!=(0|0);
    $40 = $38;
   } else {
    $40 = 0;
   }
   $39 = $40 ^ 1;
   $41 = $39 ^ 1;
   $42 = $41&1;
   $43 = $42&255;
   $0 = $43;
   $44 = $0;
   STACKTOP = sp;return ($44|0);
  }
 }
 $0 = 0;
 $44 = $0;
 STACKTOP = sp;return ($44|0);
}
function __push_list($coll,$val,$oarg) {
 $coll = $coll|0;
 $val = $val|0;
 $oarg = $oarg|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $3 = sp;
 $1 = $coll;
 $2 = $val;
 HEAP32[$3>>2] = $oarg;
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 if ($5) {
 }
 $6 = $1;
 $7 = ($6|0)!=(0|0);
 if (!($7)) {
  ___assert_fail((10372|0),(4322|0),7718,(10394|0));
  // unreachable;
 }
 $8 = $2;
 $9 = ($8|0)!=(0|0);
 $10 = HEAP32[$3>>2]|0;
 $11 = ($10|0)!=(0|0);
 $or$cond = $9 | $11;
 if (!($or$cond)) {
  ___assert_fail((10372|0),(4322|0),7718,(10394|0));
  // unreachable;
 }
 $12 = $1;
 $13 = ((($12)) + 13|0);
 $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
 $15 = $2;
 $16 = HEAP32[$3>>2]|0;
 $17 = (__try_purge_it($14,$15,$16)|0);
 $18 = ($17<<24>>24)!=(0);
 if ($18) {
  $0 = 0;
  $52 = $0;
  STACKTOP = sp;return ($52|0);
 }
 $19 = $1;
 __fill_ranged($19);
 $20 = $2;
 $21 = ($20|0)==(0|0);
 $22 = HEAP32[$3>>2]|0;
 $23 = ($22|0)!=(0|0);
 $or$cond3 = $21 | $23;
 if (!($or$cond3)) {
  $24 = $2;
  (__create_internal_object_from_public_value($24,$3)|0);
 }
 $25 = HEAP32[$3>>2]|0;
 $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
 $27 = ($26|0)==(17);
 if ($27) {
  $28 = HEAP32[$3>>2]|0;
  $29 = ((($28)) + 4|0);
  $30 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8)|(HEAPU8[$29+2>>0]<<16)|(HEAPU8[$29+3>>0]<<24);
  $31 = ((($30)) + 58|0);
  $32 = HEAPU8[$31>>0]|(HEAPU8[$31+1>>0]<<8)|(HEAPU8[$31+2>>0]<<16)|(HEAPU8[$31+3>>0]<<24);
  $33 = ($32|0)!=(2);
  if ($33) {
   $34 = HEAP32[$3>>2]|0;
   $35 = ((($34)) + 8|0);
   $36 = HEAP8[$35>>0]|0;
   $37 = $36 & -2;
   $38 = $37 | 1;
   HEAP8[$35>>0] = $38;
  }
 }
 $39 = $1;
 $40 = ((($39)) + 19|0);
 $41 = HEAPU8[$40>>0]|(HEAPU8[$40+1>>0]<<8)|(HEAPU8[$40+2>>0]<<16)|(HEAPU8[$40+3>>0]<<24);
 $42 = HEAP32[$3>>2]|0;
 (__ls_pushback($41,$42)|0);
 $43 = $1;
 $44 = ((($43)) + 31|0);
 $45 = HEAPU8[$44>>0]|(HEAPU8[$44+1>>0]<<8)|(HEAPU8[$44+2>>0]<<16)|(HEAPU8[$44+3>>0]<<24);
 $46 = (($45) + 1)|0;
 HEAP8[$44>>0]=$46&255;HEAP8[$44+1>>0]=($46>>8)&255;HEAP8[$44+2>>0]=($46>>16)&255;HEAP8[$44+3>>0]=$46>>24;
 $47 = $1;
 $48 = ((($47)) + 17|0);
 $49 = $1;
 $50 = $1;
 (__write_on_ref_object($48,$49,$50)|0);
 $51 = $1;
 __invalidate_list_cache($51);
 $0 = 1;
 $52 = $0;
 STACKTOP = sp;return ($52|0);
}
function __set_list($coll,$idx,$val,$oval) {
 $coll = $coll|0;
 $idx = $idx|0;
 $val = $val|0;
 $oval = $oval|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $9 = 0, $oarg = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $oarg = sp;
 $1 = $coll;
 $2 = $idx;
 $3 = $val;
 $4 = $oval;
 $result = 0;
 HEAP32[$oarg>>2] = 0;
 $5 = $1;
 $6 = ($5|0)!=(0|0);
 if ($6) {
  $7 = $3;
  $8 = ($7|0)!=(0|0);
  if (!($8)) {
   $9 = $4;
   $10 = ($9|0)!=(0|0);
   if ($10) {
   }
  }
 }
 $11 = $1;
 $12 = ($11|0)!=(0|0);
 if (!($12)) {
  ___assert_fail((10329|0),(4322|0),7797,(10362|0));
  // unreachable;
 }
 $13 = $3;
 $14 = ($13|0)!=(0|0);
 if (!($14)) {
  $15 = $4;
  $16 = ($15|0)!=(0|0);
  if (!($16)) {
   ___assert_fail((10329|0),(4322|0),7797,(10362|0));
   // unreachable;
  }
  $17 = $4;
  $18 = HEAP32[$17>>2]|0;
  $19 = ($18|0)!=(0|0);
  if (!($19)) {
   ___assert_fail((10329|0),(4322|0),7797,(10362|0));
   // unreachable;
  }
 }
 $20 = $1;
 $21 = ((($20)) + 13|0);
 $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
 $23 = $3;
 $24 = $4;
 $25 = ($24|0)!=(0|0);
 if ($25) {
  $26 = $4;
  $27 = HEAP32[$26>>2]|0;
  $28 = $27;
 } else {
  $28 = 0;
 }
 $29 = (__try_purge_it($22,$23,$28)|0);
 $30 = ($29<<24>>24)!=(0);
 if ($30) {
  $0 = 0;
  $82 = $0;
  STACKTOP = sp;return ($82|0);
 }
 $31 = $1;
 __fill_ranged($31);
 $32 = $1;
 $33 = $2;
 $34 = (__node_at_list($32,$33)|0);
 $result = $34;
 $35 = $result;
 $36 = ($35|0)!=(0|0);
 if ($36) {
  $37 = $result;
  $38 = HEAPU8[$37>>0]|(HEAPU8[$37+1>>0]<<8)|(HEAPU8[$37+2>>0]<<16)|(HEAPU8[$37+3>>0]<<24);
  $39 = ($38|0)!=(0|0);
  if ($39) {
   $40 = $result;
   $41 = HEAPU8[$40>>0]|(HEAPU8[$40+1>>0]<<8)|(HEAPU8[$40+2>>0]<<16)|(HEAPU8[$40+3>>0]<<24);
   (__destroy_object($41,0)|0);
  }
  $42 = $3;
  $43 = ($42|0)!=(0|0);
  if ($43) {
   $44 = $3;
   (__create_internal_object_from_public_value($44,$oarg)|0);
   $45 = HEAP32[$oarg>>2]|0;
   $46 = HEAPU8[$45>>0]|(HEAPU8[$45+1>>0]<<8)|(HEAPU8[$45+2>>0]<<16)|(HEAPU8[$45+3>>0]<<24);
   $47 = ($46|0)==(17);
   if ($47) {
    $48 = HEAP32[$oarg>>2]|0;
    $49 = ((($48)) + 4|0);
    $50 = HEAPU8[$49>>0]|(HEAPU8[$49+1>>0]<<8)|(HEAPU8[$49+2>>0]<<16)|(HEAPU8[$49+3>>0]<<24);
    $51 = ((($50)) + 58|0);
    $52 = HEAPU8[$51>>0]|(HEAPU8[$51+1>>0]<<8)|(HEAPU8[$51+2>>0]<<16)|(HEAPU8[$51+3>>0]<<24);
    $53 = ($52|0)!=(2);
    if ($53) {
     $54 = HEAP32[$oarg>>2]|0;
     $55 = ((($54)) + 8|0);
     $56 = HEAP8[$55>>0]|0;
     $57 = $56 & -2;
     $58 = $57 | 1;
     HEAP8[$55>>0] = $58;
    }
   }
   $59 = $4;
   $60 = ($59|0)!=(0|0);
   if ($60) {
    $61 = HEAP32[$oarg>>2]|0;
    $62 = $4;
    HEAP32[$62>>2] = $61;
   }
  } else {
   $63 = $4;
   $64 = HEAP32[$63>>2]|0;
   HEAP32[$oarg>>2] = $64;
  }
  $65 = HEAP32[$oarg>>2]|0;
  $66 = $result;
  HEAP8[$66>>0]=$65&255;HEAP8[$66+1>>0]=($65>>8)&255;HEAP8[$66+2>>0]=($65>>16)&255;HEAP8[$66+3>>0]=$65>>24;
  $67 = $1;
  $68 = ((($67)) + 17|0);
  $69 = $1;
  $70 = $1;
  (__write_on_ref_object($68,$69,$70)|0);
  $71 = $1;
  __invalidate_list_cache($71);
 }
 $72 = $result;
 $73 = ($72|0)!=(0|0);
 if ($73) {
  $74 = $result;
  $75 = HEAPU8[$74>>0]|(HEAPU8[$74+1>>0]<<8)|(HEAPU8[$74+2>>0]<<16)|(HEAPU8[$74+3>>0]<<24);
  $76 = ($75|0)!=(0|0);
  $78 = $76;
 } else {
  $78 = 0;
 }
 $77 = $78 ^ 1;
 $79 = $77 ^ 1;
 $80 = $79&1;
 $81 = $80&255;
 $0 = $81;
 $82 = $0;
 STACKTOP = sp;return ($82|0);
}
function __set_dict($coll,$key,$val,$okey,$oval) {
 $coll = $coll|0;
 $key = $key|0;
 $val = $val|0;
 $okey = $okey|0;
 $oval = $oval|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $exists = 0, $or$cond = 0, $or$cond3 = 0, $or$cond5 = 0, $or$cond7 = 0;
 var $or$cond9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $4 = sp + 8|0;
 $5 = sp + 4|0;
 $1 = $coll;
 $2 = $key;
 $3 = $val;
 HEAP32[$4>>2] = $okey;
 HEAP32[$5>>2] = $oval;
 $exists = 0;
 $6 = $1;
 $7 = ($6|0)!=(0|0);
 if ($7) {
  $8 = $2;
  $9 = ($8|0)!=(0|0);
  $10 = HEAP32[$4>>2]|0;
  $11 = ($10|0)!=(0|0);
  $or$cond = $9 | $11;
  if ($or$cond) {
  }
 }
 $12 = $1;
 $13 = ($12|0)!=(0|0);
 if (!($13)) {
  ___assert_fail((10280|0),(4322|0),8019,(10319|0));
  // unreachable;
 }
 $14 = $2;
 $15 = ($14|0)!=(0|0);
 $16 = HEAP32[$4>>2]|0;
 $17 = ($16|0)!=(0|0);
 $or$cond3 = $15 | $17;
 if (!($or$cond3)) {
  ___assert_fail((10280|0),(4322|0),8019,(10319|0));
  // unreachable;
 }
 $18 = $3;
 $19 = ($18|0)!=(0|0);
 $20 = HEAP32[$5>>2]|0;
 $21 = ($20|0)!=(0|0);
 $or$cond5 = $19 | $21;
 if (!($or$cond5)) {
  ___assert_fail((10280|0),(4322|0),8019,(10319|0));
  // unreachable;
 }
 $22 = $1;
 $23 = ((($22)) + 13|0);
 $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
 $25 = $2;
 $26 = HEAP32[$4>>2]|0;
 $27 = (__try_purge_it($24,$25,$26)|0);
 $28 = ($27<<24>>24)!=(0);
 if ($28) {
  $0 = 0;
  $94 = $0;
  STACKTOP = sp;return ($94|0);
 }
 $29 = $1;
 $30 = ((($29)) + 13|0);
 $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8)|(HEAPU8[$30+2>>0]<<16)|(HEAPU8[$30+3>>0]<<24);
 $32 = $3;
 $33 = HEAP32[$5>>2]|0;
 $34 = (__try_purge_it($31,$32,$33)|0);
 $35 = ($34<<24>>24)!=(0);
 if ($35) {
  $0 = 0;
  $94 = $0;
  STACKTOP = sp;return ($94|0);
 }
 $36 = $2;
 $37 = ($36|0)==(0|0);
 $38 = HEAP32[$4>>2]|0;
 $39 = ($38|0)!=(0|0);
 $or$cond7 = $37 | $39;
 if (!($or$cond7)) {
  $40 = $2;
  (__create_internal_object_from_public_value($40,$4)|0);
 }
 $41 = $3;
 $42 = ($41|0)==(0|0);
 $43 = HEAP32[$5>>2]|0;
 $44 = ($43|0)!=(0|0);
 $or$cond9 = $42 | $44;
 if (!($or$cond9)) {
  $45 = $3;
  (__create_internal_object_from_public_value($45,$5)|0);
 }
 $46 = $1;
 $47 = ((($46)) + 19|0);
 $48 = HEAPU8[$47>>0]|(HEAPU8[$47+1>>0]<<8)|(HEAPU8[$47+2>>0]<<16)|(HEAPU8[$47+3>>0]<<24);
 $49 = HEAP32[$4>>2]|0;
 $50 = (__ht_find($48,$49)|0);
 $exists = $50;
 $51 = $exists;
 $52 = ($51|0)!=(0|0);
 if ($52) {
  $53 = $1;
  $54 = ((($53)) + 19|0);
  $55 = HEAPU8[$54>>0]|(HEAPU8[$54+1>>0]<<8)|(HEAPU8[$54+2>>0]<<16)|(HEAPU8[$54+3>>0]<<24);
  $56 = HEAP32[$4>>2]|0;
  (__ht_remove($55,$56,154)|0);
 }
 $57 = HEAP32[$4>>2]|0;
 $58 = HEAPU8[$57>>0]|(HEAPU8[$57+1>>0]<<8)|(HEAPU8[$57+2>>0]<<16)|(HEAPU8[$57+3>>0]<<24);
 $59 = ($58|0)==(17);
 if ($59) {
  $60 = HEAP32[$4>>2]|0;
  $61 = ((($60)) + 4|0);
  $62 = HEAPU8[$61>>0]|(HEAPU8[$61+1>>0]<<8)|(HEAPU8[$61+2>>0]<<16)|(HEAPU8[$61+3>>0]<<24);
  $63 = ((($62)) + 58|0);
  $64 = HEAPU8[$63>>0]|(HEAPU8[$63+1>>0]<<8)|(HEAPU8[$63+2>>0]<<16)|(HEAPU8[$63+3>>0]<<24);
  $65 = ($64|0)!=(2);
  if ($65) {
   $66 = HEAP32[$4>>2]|0;
   $67 = ((($66)) + 8|0);
   $68 = HEAP8[$67>>0]|0;
   $69 = $68 & -2;
   $70 = $69 | 1;
   HEAP8[$67>>0] = $70;
  }
 }
 $71 = HEAP32[$5>>2]|0;
 $72 = HEAPU8[$71>>0]|(HEAPU8[$71+1>>0]<<8)|(HEAPU8[$71+2>>0]<<16)|(HEAPU8[$71+3>>0]<<24);
 $73 = ($72|0)==(17);
 if ($73) {
  $74 = HEAP32[$5>>2]|0;
  $75 = ((($74)) + 4|0);
  $76 = HEAPU8[$75>>0]|(HEAPU8[$75+1>>0]<<8)|(HEAPU8[$75+2>>0]<<16)|(HEAPU8[$75+3>>0]<<24);
  $77 = ((($76)) + 58|0);
  $78 = HEAPU8[$77>>0]|(HEAPU8[$77+1>>0]<<8)|(HEAPU8[$77+2>>0]<<16)|(HEAPU8[$77+3>>0]<<24);
  $79 = ($78|0)!=(2);
  if ($79) {
   $80 = HEAP32[$5>>2]|0;
   $81 = ((($80)) + 8|0);
   $82 = HEAP8[$81>>0]|0;
   $83 = $82 & -2;
   $84 = $83 | 1;
   HEAP8[$81>>0] = $84;
  }
 }
 $85 = $1;
 $86 = ((($85)) + 19|0);
 $87 = HEAPU8[$86>>0]|(HEAPU8[$86+1>>0]<<8)|(HEAPU8[$86+2>>0]<<16)|(HEAPU8[$86+3>>0]<<24);
 $88 = HEAP32[$4>>2]|0;
 $89 = HEAP32[$5>>2]|0;
 (__ht_set_or_insert($87,$88,$89)|0);
 $90 = $1;
 $91 = ((($90)) + 17|0);
 $92 = $1;
 $93 = $1;
 (__write_on_ref_object($91,$92,$93)|0);
 $0 = 1;
 $94 = $0;
 STACKTOP = sp;return ($94|0);
}
function __remove_at_list($coll,$idx) {
 $coll = $coll|0;
 $idx = $idx|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $node = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $coll;
 $1 = $idx;
 $result = 0;
 $node = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 if (!($3)) {
  ___assert_fail((5397|0),(4322|0),7830,(10226|0));
  // unreachable;
 }
 $4 = $0;
 __fill_ranged($4);
 $5 = $0;
 $6 = $1;
 $7 = (__node_at_list($5,$6)|0);
 $node = $7;
 $8 = $node;
 $9 = ($8|0)!=(0|0);
 if (!($9)) {
  $26 = $result;
  STACKTOP = sp;return ($26|0);
 }
 $10 = $node;
 $11 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
 $12 = ($11|0)!=(0|0);
 if (!($12)) {
  $26 = $result;
  STACKTOP = sp;return ($26|0);
 }
 $13 = $0;
 $14 = ((($13)) + 19|0);
 $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
 $16 = $node;
 (__ls_remove($15,$16,134)|0);
 $17 = $0;
 $18 = ((($17)) + 31|0);
 $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
 $20 = (($19) + -1)|0;
 HEAP8[$18>>0]=$20&255;HEAP8[$18+1>>0]=($20>>8)&255;HEAP8[$18+2>>0]=($20>>16)&255;HEAP8[$18+3>>0]=$20>>24;
 $21 = $0;
 $22 = ((($21)) + 17|0);
 $23 = $0;
 $24 = $0;
 (__write_on_ref_object($22,$23,$24)|0);
 $25 = $0;
 __invalidate_list_cache($25);
 $result = 1;
 $26 = $result;
 STACKTOP = sp;return ($26|0);
}
function __remove_dict($coll,$key) {
 $coll = $coll|0;
 $key = $key|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $okey = 0, $or$cond = 0, $result = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $okey = sp;
 $1 = $coll;
 $2 = $key;
 $result = 0;
 HEAP32[$okey>>2] = 0;
 $3 = $1;
 $4 = ($3|0)!=(0|0);
 $5 = $2;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if (!($or$cond)) {
  ___assert_fail((10201|0),(4322|0),8047,(10213|0));
  // unreachable;
 }
 $7 = $2;
 (__create_internal_object_from_public_value($7,$okey)|0);
 $8 = $1;
 $9 = ((($8)) + 13|0);
 $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
 $11 = $2;
 $12 = HEAP32[$okey>>2]|0;
 $13 = (__try_purge_it($10,$11,$12)|0);
 $14 = ($13<<24>>24)!=(0);
 if ($14) {
  $15 = HEAP32[$okey>>2]|0;
  (__destroy_object_capsule_only($15,0)|0);
  $0 = 0;
  $35 = $0;
  STACKTOP = sp;return ($35|0);
 }
 $16 = $1;
 $17 = ((($16)) + 19|0);
 $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
 $19 = HEAP32[$okey>>2]|0;
 $20 = (__ht_find($18,$19)|0);
 $result = $20;
 $21 = $result;
 $22 = ($21|0)!=(0|0);
 if ($22) {
  $23 = $result;
  $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
  $25 = ($24|0)!=(0|0);
  if ($25) {
   $26 = $1;
   $27 = ((($26)) + 19|0);
   $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
   $29 = HEAP32[$okey>>2]|0;
   (__ht_remove($28,$29,154)|0);
   $30 = HEAP32[$okey>>2]|0;
   (__destroy_object($30,0)|0);
   $31 = $1;
   $32 = ((($31)) + 17|0);
   $33 = $1;
   $34 = $1;
   (__write_on_ref_object($32,$33,$34)|0);
   $0 = 1;
   $35 = $0;
   STACKTOP = sp;return ($35|0);
  }
 }
 $0 = 0;
 $35 = $0;
 STACKTOP = sp;return ($35|0);
}
function __ht_count($ht) {
 $ht = $ht|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $ht;
 $1 = $0;
 $2 = ($1|0)!=(0|0);
 if ($2) {
  $3 = $0;
  $4 = ((($3)) + 16|0);
  $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
  STACKTOP = sp;return ($5|0);
 } else {
  ___assert_fail((9706|0),(4322|0),3119,(10191|0));
  // unreachable;
 }
 return (0)|0;
}
function __create_usertype_ref($s,$val,$un,$cl,$hs,$cp,$ft) {
 $s = $s|0;
 $val = $val|0;
 $un = $un|0;
 $cl = $cl|0;
 $hs = $hs|0;
 $cp = $cp|0;
 $ft = $ft|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $result = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $val;
 $2 = $un;
 $3 = $cl;
 $4 = $hs;
 $5 = $cp;
 $6 = $ft;
 $result = 0;
 $7 = $0;
 $8 = ($7|0)!=(0|0);
 if ($8) {
  $9 = (_mb_malloc(57)|0);
  $result = $9;
  $10 = $result;
  dest=$10; stop=dest+57|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
  $11 = $1;
  $12 = $result;
  $13 = ((($12)) + 17|0);
  HEAP8[$13>>0]=$11&255;HEAP8[$13+1>>0]=($11>>8)&255;HEAP8[$13+2>>0]=($11>>16)&255;HEAP8[$13+3>>0]=$11>>24;
  $14 = $2;
  $15 = $result;
  $16 = ((($15)) + 21|0);
  HEAP8[$16>>0]=$14&255;HEAP8[$16+1>>0]=($14>>8)&255;HEAP8[$16+2>>0]=($14>>16)&255;HEAP8[$16+3>>0]=$14>>24;
  $17 = $3;
  $18 = $result;
  $19 = ((($18)) + 25|0);
  HEAP8[$19>>0]=$17&255;HEAP8[$19+1>>0]=($17>>8)&255;HEAP8[$19+2>>0]=($17>>16)&255;HEAP8[$19+3>>0]=$17>>24;
  $20 = $4;
  $21 = $result;
  $22 = ((($21)) + 29|0);
  HEAP8[$22>>0]=$20&255;HEAP8[$22+1>>0]=($20>>8)&255;HEAP8[$22+2>>0]=($20>>16)&255;HEAP8[$22+3>>0]=$20>>24;
  $23 = $5;
  $24 = $result;
  $25 = ((($24)) + 33|0);
  HEAP8[$25>>0]=$23&255;HEAP8[$25+1>>0]=($23>>8)&255;HEAP8[$25+2>>0]=($23>>16)&255;HEAP8[$25+3>>0]=$23>>24;
  $26 = $6;
  $27 = $result;
  $28 = ((($27)) + 37|0);
  HEAP8[$28>>0]=$26&255;HEAP8[$28+1>>0]=($26>>8)&255;HEAP8[$28+2>>0]=($26>>16)&255;HEAP8[$28+3>>0]=$26>>24;
  $29 = $result;
  $30 = $0;
  __create_ref($29,155,7,$30);
  $31 = $result;
  STACKTOP = sp;return ($31|0);
 } else {
  ___assert_fail((4803|0),(4322|0),7031,(10128|0));
  // unreachable;
 }
 return (0)|0;
}
function __try_purge_it($s,$val,$obj) {
 $s = $s|0;
 $val = $val|0;
 $obj = $obj|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $result = 0, $tmp = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $tmp = sp + 12|0;
 $1 = $s;
 $2 = $val;
 $3 = $obj;
 $result = 0;
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 if ($5) {
 }
 $6 = $1;
 $7 = ($6|0)!=(0|0);
 if (!($7)) {
  ___assert_fail((10096|0),(4322|0),8164,(10114|0));
  // unreachable;
 }
 $8 = $2;
 $9 = ($8|0)!=(0|0);
 $10 = $3;
 $11 = ($10|0)!=(0|0);
 $or$cond = $9 | $11;
 if (!($or$cond)) {
  ___assert_fail((10096|0),(4322|0),8164,(10114|0));
  // unreachable;
 }
 dest=$tmp; stop=dest+17|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
 HEAP8[$tmp>>0]=0&255;HEAP8[$tmp+1>>0]=(0>>8)&255;HEAP8[$tmp+2>>0]=(0>>16)&255;HEAP8[$tmp+3>>0]=0>>24;
 $12 = $2;
 $13 = ($12|0)!=(0|0);
 L10: do {
  if ($13) {
   $14 = $2;
   $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
   switch ($15|0) {
   case 2048: case 512:  {
    break;
   }
   default: {
    break L10;
   }
   }
   $16 = $2;
   (__public_value_to_internal_object($16,$tmp)|0);
   $3 = $tmp;
  }
 } while(0);
 $17 = $3;
 $18 = ($17|0)!=(0|0);
 do {
  if ($18) {
   $19 = $3;
   $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8)|(HEAPU8[$19+2>>0]<<16)|(HEAPU8[$19+3>>0]<<24);
   $21 = ($20|0)==(12);
   if ($21) {
    $result = 1;
    $22 = $3;
    $23 = ((($22)) + 4|0);
    $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
    $25 = ((($24)) + 21|0);
    $26 = HEAP8[$25>>0]|0;
    $27 = $26 & 1;
    $28 = ($27<<24>>24)!=(0);
    if (!($28)) {
     $30 = $3;
     $31 = ((($30)) + 4|0);
     $32 = HEAPU8[$31>>0]|(HEAPU8[$31+1>>0]<<8)|(HEAPU8[$31+2>>0]<<16)|(HEAPU8[$31+3>>0]<<24);
     (__destroy_list_it($32)|0);
     break;
    }
    $29 = $result;
    $0 = $29;
    $49 = $0;
    STACKTOP = sp;return ($49|0);
   }
   $33 = $3;
   $34 = HEAPU8[$33>>0]|(HEAPU8[$33+1>>0]<<8)|(HEAPU8[$33+2>>0]<<16)|(HEAPU8[$33+3>>0]<<24);
   $35 = ($34|0)==(14);
   if (!($35)) {
    $47 = $result;
    $0 = $47;
    $49 = $0;
    STACKTOP = sp;return ($49|0);
   }
   $result = 1;
   $36 = $3;
   $37 = ((($36)) + 4|0);
   $38 = HEAPU8[$37>>0]|(HEAPU8[$37+1>>0]<<8)|(HEAPU8[$37+2>>0]<<16)|(HEAPU8[$37+3>>0]<<24);
   $39 = ((($38)) + 21|0);
   $40 = HEAP8[$39>>0]|0;
   $41 = $40 & 1;
   $42 = ($41<<24>>24)!=(0);
   if (!($42)) {
    $44 = $3;
    $45 = ((($44)) + 4|0);
    $46 = HEAPU8[$45>>0]|(HEAPU8[$45+1>>0]<<8)|(HEAPU8[$45+2>>0]<<16)|(HEAPU8[$45+3>>0]<<24);
    (__destroy_dict_it($46)|0);
    break;
   }
   $43 = $result;
   $0 = $43;
   $49 = $0;
   STACKTOP = sp;return ($49|0);
  }
 } while(0);
 $48 = $result;
 $0 = $48;
 $49 = $0;
 STACKTOP = sp;return ($49|0);
}
function __unref($ref,$data) {
 $ref = $ref|0;
 $data = $data|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $7 = 0, $8 = 0, $9 = 0, $cld = 0, $gc = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $ref;
 $1 = $data;
 $result = 1;
 $gc = 0;
 $cld = 0;
 $2 = $0;
 $3 = $2;
 $4 = $1;
 $5 = $4;
 $6 = ($3|0)==($5|0);
 if (!($6)) {
  ___assert_fail((9945|0),(4322|0),6371,(9977|0));
  // unreachable;
 }
 $7 = $0;
 $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
 $9 = HEAP32[$8>>2]|0;
 $10 = ($9|0)==(2);
 $11 = $10&1;
 $12 = $11&255;
 $cld = $12;
 $13 = $0;
 $14 = ((($13)) + 13|0);
 $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
 $16 = ((($15)) + 21|0);
 $gc = $16;
 $17 = $0;
 $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
 $19 = HEAP32[$18>>2]|0;
 $20 = (($19) + -1)|0;
 HEAP32[$18>>2] = $20;
 $21 = ($20|0)==(1);
 $22 = $21&1;
 $23 = $22&255;
 $result = $23;
 $24 = $0;
 $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
 $26 = HEAP32[$25>>2]|0;
 $27 = ($26>>>0)>=(1);
 if (!($27)) {
  ___assert_fail((9984|0),(4322|0),6377,(9977|0));
  // unreachable;
 }
 $28 = $0;
 $29 = $1;
 $30 = $0;
 $31 = ((($30)) + 13|0);
 $32 = HEAPU8[$31>>0]|(HEAPU8[$31+1>>0]<<8)|(HEAPU8[$31+2>>0]<<16)|(HEAPU8[$31+3>>0]<<24);
 $33 = ((($32)) + 21|0);
 __gc_add($28,$29,$33);
 $34 = $0;
 $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
 $36 = ($35|0)!=(0|0);
 if ($36) {
  $37 = $0;
  $38 = HEAPU8[$37>>0]|(HEAPU8[$37+1>>0]<<8)|(HEAPU8[$37+2>>0]<<16)|(HEAPU8[$37+3>>0]<<24);
  $39 = HEAP32[$38>>2]|0;
  $40 = ($39|0)==(1);
  if ($40) {
   $41 = $0;
   $42 = $1;
   __collect_intermediate_value($41,$42);
  }
 }
 $43 = $0;
 $44 = ((($43)) + 8|0);
 $45 = HEAPU8[$44>>0]|(HEAPU8[$44+1>>0]<<8)|(HEAPU8[$44+2>>0]<<16)|(HEAPU8[$44+3>>0]<<24);
 $46 = $0;
 $47 = $1;
 FUNCTION_TABLE_vii[$45 & 255]($46,$47);
 $48 = $result;
 $49 = ($48<<24>>24)!=(0);
 if ($49) {
  $50 = $0;
  $51 = $1;
  $52 = $gc;
  (__gc_remove($50,$51,$52)|0);
 }
 $53 = $cld;
 $54 = ($53<<24>>24)!=(0);
 if (!($54)) {
  $65 = $result;
  STACKTOP = sp;return ($65|0);
 }
 $55 = $gc;
 $56 = ((($55)) + 8|0);
 $57 = HEAPU8[$56>>0]|(HEAPU8[$56+1>>0]<<8)|(HEAPU8[$56+2>>0]<<16)|(HEAPU8[$56+3>>0]<<24);
 $58 = $0;
 $59 = $1;
 (__ht_set_or_insert($57,$58,$59)|0);
 $60 = $gc;
 $61 = ((($60)) + 8|0);
 $62 = HEAPU8[$61>>0]|(HEAPU8[$61+1>>0]<<8)|(HEAPU8[$61+2>>0]<<16)|(HEAPU8[$61+3>>0]<<24);
 $63 = $1;
 $64 = $0;
 (__ht_set_or_insert($62,$63,$64)|0);
 $65 = $result;
 STACKTOP = sp;return ($65|0);
}
function __destroy_routine($s,$r) {
 $s = $s|0;
 $r = $r|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $gc = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $r;
 $gc = 0;
 $2 = $1;
 $3 = ($2|0)!=(0|0);
 if (!($3)) {
  ___assert_fail((9926|0),(4322|0),8934,(9928|0));
  // unreachable;
 }
 $4 = $0;
 $5 = ($4|0)!=(0|0);
 if ($5) {
  $6 = $0;
  $7 = ((($6)) + 21|0);
  $gc = $7;
 }
 $8 = $1;
 $9 = ((($8)) + 57|0);
 $10 = HEAP8[$9>>0]|0;
 $11 = $10 & 1;
 $12 = ($11<<24>>24)!=(0);
 L7: do {
  if (!($12)) {
   $13 = $1;
   $14 = ((($13)) + 45|0);
   $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
   $16 = ($15|0)!=(0|0);
   do {
    if ($16) {
     $17 = $1;
     $18 = ((($17)) + 45|0);
     $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
     $20 = ($19|0)!=(0|0);
     if ($20) {
      $21 = $1;
      $22 = ((($21)) + 45|0);
      $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
      _mb_free($23);
      $24 = $1;
      $25 = ((($24)) + 45|0);
      HEAP8[$25>>0]=0&255;HEAP8[$25+1>>0]=(0>>8)&255;HEAP8[$25+2>>0]=(0>>16)&255;HEAP8[$25+3>>0]=0>>24;
      break;
     } else {
      ___assert_fail((4369|0),(4322|0),8939,(9928|0));
      // unreachable;
     }
    }
   } while(0);
   $26 = $1;
   $27 = ((($26)) + 49|0);
   $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
   $29 = ($28|0)!=(0|0);
   do {
    if ($29) {
     $30 = $1;
     $31 = ((($30)) + 49|0);
     $32 = HEAPU8[$31>>0]|(HEAPU8[$31+1>>0]<<8)|(HEAPU8[$31+2>>0]<<16)|(HEAPU8[$31+3>>0]<<24);
     $33 = ($32|0)!=(0|0);
     if ($33) {
      $34 = $1;
      $35 = ((($34)) + 49|0);
      $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
      _mb_free($36);
      $37 = $1;
      $38 = ((($37)) + 49|0);
      HEAP8[$38>>0]=0&255;HEAP8[$38+1>>0]=(0>>8)&255;HEAP8[$38+2>>0]=(0>>16)&255;HEAP8[$38+3>>0]=0>>24;
      break;
     } else {
      ___assert_fail((4369|0),(4322|0),8943,(9928|0));
      // unreachable;
     }
    }
   } while(0);
   $39 = $1;
   $40 = ((($39)) + 58|0);
   $41 = HEAPU8[$40>>0]|(HEAPU8[$40+1>>0]<<8)|(HEAPU8[$40+2>>0]<<16)|(HEAPU8[$40+3>>0]<<24);
   switch ($41|0) {
   case 1:  {
    $42 = $1;
    $43 = HEAPU8[$42>>0]|(HEAPU8[$42+1>>0]<<8)|(HEAPU8[$42+2>>0]<<16)|(HEAPU8[$42+3>>0]<<24);
    $44 = ($43|0)!=(0|0);
    if ($44) {
     $45 = $0;
     $46 = $1;
     $47 = HEAPU8[$46>>0]|(HEAPU8[$46+1>>0]<<8)|(HEAPU8[$46+2>>0]<<16)|(HEAPU8[$46+3>>0]<<24);
     __destroy_scope($45,$47);
     $48 = $1;
     HEAP8[$48>>0]=0&255;HEAP8[$48+1>>0]=(0>>8)&255;HEAP8[$48+2>>0]=(0>>16)&255;HEAP8[$48+3>>0]=0>>24;
    }
    $49 = $1;
    $50 = ((($49)) + 4|0);
    $51 = HEAPU8[$50>>0]|(HEAPU8[$50+1>>0]<<8)|(HEAPU8[$50+2>>0]<<16)|(HEAPU8[$50+3>>0]<<24);
    $52 = ($51|0)!=(0|0);
    if (!($52)) {
     break L7;
    }
    $53 = $1;
    $54 = ((($53)) + 4|0);
    $55 = HEAPU8[$54>>0]|(HEAPU8[$54+1>>0]<<8)|(HEAPU8[$54+2>>0]<<16)|(HEAPU8[$54+3>>0]<<24);
    __ls_destroy($55);
    break L7;
    break;
   }
   case 2:  {
    break;
   }
   default: {
    break L7;
   }
   }
   $56 = $1;
   __destroy_ref($56);
   $57 = $1;
   $58 = ((($57)) + 17|0);
   $59 = HEAPU8[$58>>0]|(HEAPU8[$58+1>>0]<<8)|(HEAPU8[$58+2>>0]<<16)|(HEAPU8[$58+3>>0]<<24);
   $60 = ((($59)) + 8|0);
   $61 = HEAPU8[$60>>0]|(HEAPU8[$60+1>>0]<<8)|(HEAPU8[$60+2>>0]<<16)|(HEAPU8[$60+3>>0]<<24);
   $62 = ($61|0)!=(0|0);
   if ($62) {
    $63 = $1;
    $64 = ((($63)) + 17|0);
    $65 = HEAPU8[$64>>0]|(HEAPU8[$64+1>>0]<<8)|(HEAPU8[$64+2>>0]<<16)|(HEAPU8[$64+3>>0]<<24);
    $66 = ((($65)) + 8|0);
    $67 = HEAPU8[$66>>0]|(HEAPU8[$66+1>>0]<<8)|(HEAPU8[$66+2>>0]<<16)|(HEAPU8[$66+3>>0]<<24);
    (__ht_foreach($67,134)|0);
    $68 = $1;
    $69 = ((($68)) + 17|0);
    $70 = HEAPU8[$69>>0]|(HEAPU8[$69+1>>0]<<8)|(HEAPU8[$69+2>>0]<<16)|(HEAPU8[$69+3>>0]<<24);
    $71 = ((($70)) + 8|0);
    $72 = HEAPU8[$71>>0]|(HEAPU8[$71+1>>0]<<8)|(HEAPU8[$71+2>>0]<<16)|(HEAPU8[$71+3>>0]<<24);
    __ht_destroy($72);
   }
   $73 = $1;
   $74 = ((($73)) + 17|0);
   $75 = HEAPU8[$74>>0]|(HEAPU8[$74+1>>0]<<8)|(HEAPU8[$74+2>>0]<<16)|(HEAPU8[$74+3>>0]<<24);
   $76 = ($75|0)!=(0|0);
   if (!($76)) {
    ___assert_fail((4369|0),(4322|0),8962,(9928|0));
    // unreachable;
   }
   $77 = $1;
   $78 = ((($77)) + 17|0);
   $79 = HEAPU8[$78>>0]|(HEAPU8[$78+1>>0]<<8)|(HEAPU8[$78+2>>0]<<16)|(HEAPU8[$78+3>>0]<<24);
   _mb_free($79);
   $80 = $1;
   $81 = ((($80)) + 17|0);
   HEAP8[$81>>0]=0&255;HEAP8[$81+1>>0]=(0>>8)&255;HEAP8[$81+2>>0]=(0>>16)&255;HEAP8[$81+3>>0]=0>>24;
   $82 = $1;
   $83 = ((($82)) + 21|0);
   $84 = HEAPU8[$83>>0]|(HEAPU8[$83+1>>0]<<8)|(HEAPU8[$83+2>>0]<<16)|(HEAPU8[$83+3>>0]<<24);
   $85 = ($84|0)!=(0|0);
   if ($85) {
    $86 = $1;
    $87 = ((($86)) + 21|0);
    $88 = HEAPU8[$87>>0]|(HEAPU8[$87+1>>0]<<8)|(HEAPU8[$87+2>>0]<<16)|(HEAPU8[$87+3>>0]<<24);
    __ls_destroy($88);
   }
   $89 = $1;
   $90 = ((($89)) + 25|0);
   $91 = HEAPU8[$90>>0]|(HEAPU8[$90+1>>0]<<8)|(HEAPU8[$90+2>>0]<<16)|(HEAPU8[$90+3>>0]<<24);
   $92 = ($91|0)!=(0|0);
   if ($92) {
    $93 = $gc;
    $94 = ((($93)) + 8|0);
    $95 = HEAPU8[$94>>0]|(HEAPU8[$94+1>>0]<<8)|(HEAPU8[$94+2>>0]<<16)|(HEAPU8[$94+3>>0]<<24);
    $96 = $1;
    $97 = ((($96)) + 25|0);
    $98 = HEAPU8[$97>>0]|(HEAPU8[$97+1>>0]<<8)|(HEAPU8[$97+2>>0]<<16)|(HEAPU8[$97+3>>0]<<24);
    $99 = (__ht_find($95,$98)|0);
    $100 = ($99|0)!=(0|0);
    if (!($100)) {
     $101 = $1;
     $102 = ((($101)) + 25|0);
     $103 = HEAPU8[$102>>0]|(HEAPU8[$102+1>>0]<<8)|(HEAPU8[$102+2>>0]<<16)|(HEAPU8[$102+3>>0]<<24);
     $104 = $1;
     $105 = ((($104)) + 25|0);
     $106 = HEAPU8[$105>>0]|(HEAPU8[$105+1>>0]<<8)|(HEAPU8[$105+2>>0]<<16)|(HEAPU8[$105+3>>0]<<24);
     (__unref($103,$106)|0);
    }
   }
   $107 = $1;
   $108 = ((($107)) + 33|0);
   $109 = HEAPU8[$108>>0]|(HEAPU8[$108+1>>0]<<8)|(HEAPU8[$108+2>>0]<<16)|(HEAPU8[$108+3>>0]<<24);
   $110 = ($109|0)!=(0|0);
   if ($110) {
    $111 = $1;
    $112 = ((($111)) + 33|0);
    $113 = HEAPU8[$112>>0]|(HEAPU8[$112+1>>0]<<8)|(HEAPU8[$112+2>>0]<<16)|(HEAPU8[$112+3>>0]<<24);
    __ht_destroy($113);
   }
  }
 } while(0);
 $114 = $1;
 $115 = ($114|0)!=(0|0);
 if ($115) {
  $116 = $1;
  _mb_free($116);
  $1 = 0;
  STACKTOP = sp;return;
 } else {
  ___assert_fail((4369|0),(4322|0),8977,(9928|0));
  // unreachable;
 }
}
function __init_routine($s,$routine,$n,$f) {
 $s = $s|0;
 $routine = $routine|0;
 $n = $n|0;
 $f = $f|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond3 = 0, $or$cond5 = 0, $or$cond7 = 0, $running = 0, dest = 0;
 var label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $routine;
 $2 = $n;
 $3 = $f;
 $running = 0;
 $4 = $0;
 $5 = ($4|0)!=(0|0);
 $6 = $1;
 $7 = ($6|0)!=(0|0);
 $or$cond = $5 & $7;
 if (!($or$cond)) {
  ___assert_fail((9884|0),(4322|0),8740,(9897|0));
  // unreachable;
 }
 $8 = $0;
 $9 = ((($8)) + 75|0);
 $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
 $running = $10;
 $11 = $1;
 dest=$11; stop=dest+62|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
 $12 = $2;
 $13 = $1;
 $14 = ((($13)) + 45|0);
 HEAP8[$14>>0]=$12&255;HEAP8[$14+1>>0]=($12>>8)&255;HEAP8[$14+2>>0]=($12>>16)&255;HEAP8[$14+3>>0]=$12>>24;
 $15 = $2;
 $16 = ($15|0)!=(0|0);
 $17 = $3;
 $18 = ($17|0)!=(0|0);
 $or$cond3 = $16 & $18;
 do {
  if ($or$cond3) {
   $19 = $1;
   $20 = ((($19)) + 58|0);
   HEAP8[$20>>0]=3&255;HEAP8[$20+1>>0]=(3>>8)&255;HEAP8[$20+2>>0]=(3>>16)&255;HEAP8[$20+3>>0]=3>>24;
  } else {
   $21 = $2;
   $22 = ($21|0)==(0|0);
   $23 = $3;
   $24 = ($23|0)!=(0|0);
   $or$cond5 = $22 | $24;
   if (!($or$cond5)) {
    $25 = $1;
    $26 = ((($25)) + 58|0);
    HEAP8[$26>>0]=1&255;HEAP8[$26+1>>0]=(1>>8)&255;HEAP8[$26+2>>0]=(1>>16)&255;HEAP8[$26+3>>0]=1>>24;
    break;
   }
   $27 = $2;
   $28 = ($27|0)!=(0|0);
   $29 = $3;
   $30 = ($29|0)!=(0|0);
   $or$cond7 = $28 | $30;
   if (!($or$cond7)) {
    $31 = $1;
    $32 = ((($31)) + 58|0);
    HEAP8[$32>>0]=2&255;HEAP8[$32+1>>0]=(2>>8)&255;HEAP8[$32+2>>0]=(2>>16)&255;HEAP8[$32+3>>0]=2>>24;
   }
  }
 } while(0);
 $33 = $1;
 $34 = ((($33)) + 58|0);
 $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
 switch ($35|0) {
 case 1:  {
  $36 = (__create_running_context(1)|0);
  $37 = $1;
  HEAP8[$37>>0]=$36&255;HEAP8[$37+1>>0]=($36>>8)&255;HEAP8[$37+2>>0]=($36>>16)&255;HEAP8[$37+3>>0]=$36>>24;
  break;
 }
 case 2:  {
  $38 = $1;
  $39 = $0;
  __create_ref($38,156,17,$39);
  $40 = $1;
  $41 = $1;
  (__ref($40,$41)|0);
  break;
 }
 case 3:  {
  $42 = $3;
  $43 = $1;
  HEAP8[$43>>0]=$42&255;HEAP8[$43+1>>0]=($42>>8)&255;HEAP8[$43+2>>0]=($42>>16)&255;HEAP8[$43+3>>0]=$42>>24;
  break;
 }
 default: {
 }
 }
 $44 = $0;
 $45 = ((($44)) + 67|0);
 $46 = HEAPU8[$45>>0]|(HEAPU8[$45+1>>0]<<8)|(HEAPU8[$45+2>>0]<<16)|(HEAPU8[$45+3>>0]<<24);
 $47 = ($46|0)!=(0|0);
 if (!($47)) {
  STACKTOP = sp;return;
 }
 $48 = $0;
 $49 = ((($48)) + 67|0);
 $50 = HEAPU8[$49>>0]|(HEAPU8[$49+1>>0]<<8)|(HEAPU8[$49+2>>0]<<16)|(HEAPU8[$49+3>>0]<<24);
 $51 = (_mb_strdup($50,0)|0);
 $52 = $1;
 $53 = ((($52)) + 49|0);
 HEAP8[$53>>0]=$51&255;HEAP8[$53+1>>0]=($51>>8)&255;HEAP8[$53+2>>0]=($51>>16)&255;HEAP8[$53+3>>0]=$51>>24;
 STACKTOP = sp;return;
}
function __has_routine_fun_arg($s,$l,$va,$ca,$ia,$r) {
 $s = $s|0;
 $l = $l|0;
 $va = $va|0;
 $ca = $ca|0;
 $ia = $ia|0;
 $r = $r|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $l;
 $2 = $va;
 $3 = $ca;
 $4 = $ia;
 $5 = $r;
 $6 = $4;
 $7 = HEAP32[$6>>2]|0;
 $8 = $3;
 $9 = ($7>>>0)<($8>>>0);
 $10 = $9&1;
 STACKTOP = sp;return ($10|0);
}
function __pop_routine_fun_arg($s,$l,$va,$ca,$ia,$r,$val) {
 $s = $s|0;
 $l = $l|0;
 $va = $va|0;
 $ca = $ca|0;
 $ia = $ia|0;
 $r = $r|0;
 $val = $val|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $l;
 $2 = $va;
 $3 = $ca;
 $4 = $ia;
 $5 = $r;
 $6 = $val;
 $7 = $6;
 $8 = $4;
 $9 = HEAP32[$8>>2]|0;
 $10 = $2;
 $11 = (($10) + ($9<<3)|0);
 ;HEAP8[$7>>0]=HEAP8[$11>>0]|0;HEAP8[$7+1>>0]=HEAP8[$11+1>>0]|0;HEAP8[$7+2>>0]=HEAP8[$11+2>>0]|0;HEAP8[$7+3>>0]=HEAP8[$11+3>>0]|0;HEAP8[$7+4>>0]=HEAP8[$11+4>>0]|0;HEAP8[$7+5>>0]=HEAP8[$11+5>>0]|0;HEAP8[$7+6>>0]=HEAP8[$11+6>>0]|0;HEAP8[$7+7>>0]=HEAP8[$11+7>>0]|0;
 $12 = $4;
 $13 = HEAP32[$12>>2]|0;
 $14 = (($13) + 1)|0;
 HEAP32[$12>>2] = $14;
 STACKTOP = sp;return 0;
}
function __eval_routine($s,$l,$va,$ca,$r,$has_arg,$pop_arg) {
 $s = $s|0;
 $l = $l|0;
 $va = $va|0;
 $ca = $ca|0;
 $r = $r|0;
 $has_arg = $has_arg|0;
 $pop_arg = $pop_arg|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $ln = 0, $result = 0, $src = 0, $top = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer = sp;
 $ln = sp + 48|0;
 $0 = $s;
 $1 = $l;
 $2 = $va;
 $3 = $ca;
 $4 = $r;
 $5 = $has_arg;
 $6 = $pop_arg;
 $result = 0;
 $src = 0;
 $7 = $0;
 $8 = ((($7)) + 126|0);
 $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
 $10 = $4;
 $11 = ((($10)) + 45|0);
 $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
 (__ls_pushback($9,$12)|0);
 $13 = $0;
 $14 = ((($13)) + 67|0);
 $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
 $src = $15;
 $16 = $4;
 $17 = ((($16)) + 49|0);
 $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
 $19 = $0;
 $20 = ((($19)) + 67|0);
 HEAP8[$20>>0]=$18&255;HEAP8[$20+1>>0]=($18>>8)&255;HEAP8[$20+2>>0]=($18>>16)&255;HEAP8[$20+3>>0]=$18>>24;
 $21 = $4;
 $22 = ((($21)) + 58|0);
 $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
 $24 = ($23|0)==(1);
 if ($24) {
  $25 = $4;
  $26 = ((($25)) + 8|0);
  $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
  $28 = ($27|0)!=(0|0);
  if ($28) {
   $29 = $0;
   $30 = $1;
   $31 = $2;
   $32 = $3;
   $33 = $4;
   $34 = $5;
   $35 = $6;
   $36 = (__eval_script_routine($29,$30,$31,$32,$33,$34,$35)|0);
   $result = $36;
  } else {
   label = 4;
  }
 } else {
  label = 4;
 }
 do {
  if ((label|0) == 4) {
   $37 = $4;
   $38 = ((($37)) + 58|0);
   $39 = HEAPU8[$38>>0]|(HEAPU8[$38+1>>0]<<8)|(HEAPU8[$38+2>>0]<<16)|(HEAPU8[$38+3>>0]<<24);
   $40 = ($39|0)==(2);
   if ($40) {
    $41 = $4;
    $42 = ((($41)) + 37|0);
    $43 = HEAPU8[$42>>0]|(HEAPU8[$42+1>>0]<<8)|(HEAPU8[$42+2>>0]<<16)|(HEAPU8[$42+3>>0]<<24);
    $44 = ($43|0)!=(0|0);
    if ($44) {
     $45 = $0;
     $46 = ((($45)) + 126|0);
     $47 = HEAPU8[$46>>0]|(HEAPU8[$46+1>>0]<<8)|(HEAPU8[$46+2>>0]<<16)|(HEAPU8[$46+3>>0]<<24);
     $48 = (__ls_back($47)|0);
     $top = $48;
     $49 = $top;
     $50 = ($49|0)!=(0|0);
     if ($50) {
      $51 = $4;
      HEAP32[$vararg_buffer>>2] = $51;
      (_sprintf($ln,9142,$vararg_buffer)|0);
      $52 = $top;
      HEAP8[$52>>0]=$ln&255;HEAP8[$52+1>>0]=($ln>>8)&255;HEAP8[$52+2>>0]=($ln>>16)&255;HEAP8[$52+3>>0]=$ln>>24;
     }
     $53 = $0;
     $54 = $1;
     $55 = $2;
     $56 = $3;
     $57 = $4;
     $58 = $5;
     $59 = $6;
     $60 = (__eval_lambda_routine($53,$54,$55,$56,$57,$58,$59)|0);
     $result = $60;
     break;
    }
   }
   $61 = $4;
   $62 = ((($61)) + 58|0);
   $63 = HEAPU8[$62>>0]|(HEAPU8[$62+1>>0]<<8)|(HEAPU8[$62+2>>0]<<16)|(HEAPU8[$62+3>>0]<<24);
   $64 = ($63|0)==(3);
   if ($64) {
    $65 = $4;
    $66 = HEAPU8[$65>>0]|(HEAPU8[$65+1>>0]<<8)|(HEAPU8[$65+2>>0]<<16)|(HEAPU8[$65+3>>0]<<24);
    $67 = ($66|0)!=(0|0);
    if ($67) {
     $68 = $0;
     $69 = $1;
     $70 = $2;
     $71 = $3;
     $72 = $4;
     $73 = $5;
     $74 = $6;
     $75 = (__eval_native_routine($68,$69,$70,$71,$72,$73,$74)|0);
     $result = $75;
     break;
    }
   }
   $76 = $1;
   $77 = ($76|0)!=(0|0);
   if ($77) {
    $78 = $1;
    $79 = HEAP32[$78>>2]|0;
    $80 = ($79|0)!=(0|0);
    if ($80) {
     $81 = $1;
     $82 = HEAP32[$81>>2]|0;
     $83 = HEAPU8[$82>>0]|(HEAPU8[$82+1>>0]<<8)|(HEAPU8[$82+2>>0]<<16)|(HEAPU8[$82+3>>0]<<24);
     $84 = ($83|0)!=(0|0);
     if ($84) {
      $85 = $0;
      $86 = $0;
      $87 = ((($86)) + 67|0);
      $88 = HEAPU8[$87>>0]|(HEAPU8[$87+1>>0]<<8)|(HEAPU8[$87+2>>0]<<16)|(HEAPU8[$87+3>>0]<<24);
      $89 = (__set_current_error($85,53,$88)|0);
      $90 = ($89<<24>>24)!=(0);
      if (!($90)) {
       break;
      }
      $91 = $0;
      $92 = $1;
      $93 = HEAP32[$92>>2]|0;
      $94 = HEAPU8[$93>>0]|(HEAPU8[$93+1>>0]<<8)|(HEAPU8[$93+2>>0]<<16)|(HEAPU8[$93+3>>0]<<24);
      $95 = ((($94)) + 9|0);
      $96 = HEAPU8[$95>>0]|(HEAPU8[$95+1>>0]<<8)|(HEAPU8[$95+2>>0]<<16)|(HEAPU8[$95+3>>0]<<24);
      $97 = $1;
      $98 = HEAP32[$97>>2]|0;
      $99 = HEAPU8[$98>>0]|(HEAPU8[$98+1>>0]<<8)|(HEAPU8[$98+2>>0]<<16)|(HEAPU8[$98+3>>0]<<24);
      $100 = ((($99)) + 13|0);
      $101 = HEAPU8[$100>>0]|(HEAPU8[$100+1>>0]<<8);
      $102 = $1;
      $103 = HEAP32[$102>>2]|0;
      $104 = HEAPU8[$103>>0]|(HEAPU8[$103+1>>0]<<8)|(HEAPU8[$103+2>>0]<<16)|(HEAPU8[$103+3>>0]<<24);
      $105 = ((($104)) + 15|0);
      $106 = HEAPU8[$105>>0]|(HEAPU8[$105+1>>0]<<8);
      __set_error_pos($91,$96,$101,$106);
      $result = 3;
      break;
     }
    }
   }
   $107 = $0;
   $108 = $0;
   $109 = ((($108)) + 67|0);
   $110 = HEAPU8[$109>>0]|(HEAPU8[$109+1>>0]<<8)|(HEAPU8[$109+2>>0]<<16)|(HEAPU8[$109+3>>0]<<24);
   $111 = (__set_current_error($107,53,$110)|0);
   $112 = ($111<<24>>24)!=(0);
   if ($112) {
    $113 = $0;
    __set_error_pos($113,0,0,0);
    $result = 3;
   }
  }
 } while(0);
 $114 = $src;
 $115 = $0;
 $116 = ((($115)) + 67|0);
 HEAP8[$116>>0]=$114&255;HEAP8[$116+1>>0]=($114>>8)&255;HEAP8[$116+2>>0]=($114>>16)&255;HEAP8[$116+3>>0]=$114>>24;
 $117 = $0;
 $118 = ((($117)) + 126|0);
 $119 = HEAPU8[$118>>0]|(HEAPU8[$118+1>>0]<<8)|(HEAPU8[$118+2>>0]<<16)|(HEAPU8[$118+3>>0]<<24);
 (__ls_popback($119)|0);
 $120 = $result;
 STACKTOP = sp;return ($120|0);
}
function __gc_add($ref,$data,$gc) {
 $ref = $ref|0;
 $data = $data|0;
 $gc = $gc|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0;
 var $table = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $ref;
 $1 = $data;
 $2 = $gc;
 $table = 0;
 $3 = $0;
 $4 = ($3|0)!=(0|0);
 $5 = $1;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if (!($or$cond)) {
  ___assert_fail((9122|0),(4322|0),6464,(9134|0));
  // unreachable;
 }
 $7 = $0;
 $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
 $9 = ($8|0)!=(0|0);
 if (!($9)) {
  STACKTOP = sp;return;
 }
 $10 = $2;
 $11 = ($10|0)!=(0|0);
 if ($11) {
  $12 = $2;
  $13 = ((($12)) + 8|0);
  $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
  $15 = $0;
  $16 = (__ht_find($14,$15)|0);
  $17 = ($16|0)!=(0|0);
  if ($17) {
   $18 = $2;
   $19 = ((($18)) + 8|0);
   $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8)|(HEAPU8[$19+2>>0]<<16)|(HEAPU8[$19+3>>0]<<24);
   $21 = $0;
   (__ht_remove($20,$21,0)|0);
  }
 }
 $22 = $2;
 $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
 $24 = ($23|0)!=(0|0);
 if (!($24)) {
  STACKTOP = sp;return;
 }
 $25 = $2;
 $26 = ((($25)) + 16|0);
 $27 = HEAP8[$26>>0]|0;
 $28 = ($27<<24>>24)!=(0);
 $29 = $2;
 if ($28) {
  $30 = ((($29)) + 4|0);
  $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8)|(HEAPU8[$30+2>>0]<<16)|(HEAPU8[$30+3>>0]<<24);
  $table = $31;
 } else {
  $32 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8)|(HEAPU8[$29+2>>0]<<16)|(HEAPU8[$29+3>>0]<<24);
  $table = $32;
 }
 $33 = $2;
 $34 = ($33|0)!=(0|0);
 if ($34) {
  $35 = $2;
  $36 = ((($35)) + 12|0);
  $37 = HEAPU8[$36>>0]|(HEAPU8[$36+1>>0]<<8)|(HEAPU8[$36+2>>0]<<16)|(HEAPU8[$36+3>>0]<<24);
  $38 = ($37|0)!=(0|0);
  if ($38) {
   $39 = $2;
   $40 = ((($39)) + 12|0);
   $41 = HEAPU8[$40>>0]|(HEAPU8[$40+1>>0]<<8)|(HEAPU8[$40+2>>0]<<16)|(HEAPU8[$40+3>>0]<<24);
   $42 = $0;
   $43 = (__ht_find($41,$42)|0);
   $44 = ($43|0)!=(0|0);
   if ($44) {
    $45 = $table;
    $46 = $0;
    (__ht_remove($45,$46,0)|0);
    STACKTOP = sp;return;
   }
  }
 }
 $47 = $0;
 $48 = HEAPU8[$47>>0]|(HEAPU8[$47+1>>0]<<8)|(HEAPU8[$47+2>>0]<<16)|(HEAPU8[$47+3>>0]<<24);
 $49 = ($48|0)!=(0|0);
 if ($49) {
  $50 = $0;
  $51 = HEAPU8[$50>>0]|(HEAPU8[$50+1>>0]<<8)|(HEAPU8[$50+2>>0]<<16)|(HEAPU8[$50+3>>0]<<24);
  $52 = HEAP32[$51>>2]|0;
  $53 = ($52>>>0)>(1);
  if ($53) {
   $54 = $table;
   $55 = $0;
   $56 = $1;
   (__ht_set_or_insert($54,$55,$56)|0);
   STACKTOP = sp;return;
  }
 }
 $57 = $table;
 $58 = $0;
 (__ht_remove($57,$58,0)|0);
 STACKTOP = sp;return;
}
function __destroy_list_it($it) {
 $it = $it|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $it;
 $result = 1;
 $1 = $0;
 $2 = ($1|0)!=(0|0);
 if (!($2)) {
  ___assert_fail((9031|0),(4322|0),7588,(9105|0));
  // unreachable;
 }
 $3 = $0;
 $4 = (__weak_unref($3)|0);
 $5 = ($4<<24>>24)!=(0);
 if ($5) {
  $6 = $0;
  $7 = ((($6)) + 17|0);
  $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
  $9 = ((($8)) + 17|0);
  $10 = $0;
  $11 = ((($10)) + 17|0);
  $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
  $13 = $0;
  $14 = ((($13)) + 17|0);
  $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
  (__unlock_ref_object($9,$12,$15)|0);
 }
 $16 = $0;
 $17 = ($16|0)!=(0|0);
 if ($17) {
  $18 = $0;
  _mb_free($18);
  $0 = 0;
  $19 = $result;
  STACKTOP = sp;return ($19|0);
 } else {
  ___assert_fail((4369|0),(4322|0),7592,(9105|0));
  // unreachable;
 }
 return (0)|0;
}
function __destroy_dict_it($it) {
 $it = $it|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $it;
 $result = 1;
 $1 = $0;
 $2 = ($1|0)!=(0|0);
 if (!($2)) {
  ___assert_fail((9031|0),(4322|0),7656,(9034|0));
  // unreachable;
 }
 $3 = $0;
 $4 = (__weak_unref($3)|0);
 $5 = ($4<<24>>24)!=(0);
 if ($5) {
  $6 = $0;
  $7 = ((($6)) + 17|0);
  $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
  $9 = ((($8)) + 17|0);
  $10 = $0;
  $11 = ((($10)) + 17|0);
  $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
  $13 = $0;
  $14 = ((($13)) + 17|0);
  $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
  (__unlock_ref_object($9,$12,$15)|0);
 }
 $16 = $0;
 $17 = ($16|0)!=(0|0);
 if ($17) {
  $18 = $0;
  _mb_free($18);
  $0 = 0;
  $19 = $result;
  STACKTOP = sp;return ($19|0);
 } else {
  ___assert_fail((4369|0),(4322|0),7660,(9034|0));
  // unreachable;
 }
 return (0)|0;
}
function __dispose_object($obj) {
 $obj = $obj|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $result = 0, $var = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $obj;
 $result = 0;
 $var = 0;
 $1 = $0;
 $2 = ($1|0)!=(0|0);
 if (!($2)) {
  ___assert_fail((4972|0),(4322|0),9961,(8947|0));
  // unreachable;
 }
 $3 = $0;
 $4 = (__is_internal_object($3)|0);
 $5 = ($4<<24>>24)!=(0);
 if ($5) {
  $231 = $result;
  STACKTOP = sp;return ($231|0);
 }
 $6 = $0;
 $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
 L7: do {
  switch ($7|0) {
  case 9:  {
   $8 = $0;
   $9 = ((($8)) + 8|0);
   $10 = HEAP8[$9>>0]|0;
   $11 = $10 & 1;
   $12 = ($11<<24>>24)!=(0);
   if (!($12)) {
    $13 = $0;
    $14 = ((($13)) + 4|0);
    $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
    $var = $15;
    $16 = $var;
    $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
    $18 = ($17|0)!=(0|0);
    if (!($18)) {
     ___assert_fail((4369|0),(4322|0),9969,(8947|0));
     // unreachable;
    }
    $19 = $var;
    $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8)|(HEAPU8[$19+2>>0]<<16)|(HEAPU8[$19+3>>0]<<24);
    _mb_free($20);
    $21 = $var;
    HEAP8[$21>>0]=0&255;HEAP8[$21+1>>0]=(0>>8)&255;HEAP8[$21+2>>0]=(0>>16)&255;HEAP8[$21+3>>0]=0>>24;
    $22 = $var;
    $23 = ((($22)) + 4|0);
    $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
    $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
    $26 = ($25|0)!=(9);
    if (!($26)) {
     ___assert_fail((8963|0),(4322|0),9970,(8947|0));
     // unreachable;
    }
    $27 = $var;
    $28 = ((($27)) + 8|0);
    $29 = HEAP8[$28>>0]|0;
    $30 = ($29&255) >>> 2;
    $31 = $30 & 1;
    $32 = ($31<<24>>24)!=(0);
    $33 = $var;
    $34 = ((($33)) + 4|0);
    $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
    if ($32) {
     (__destroy_object_capsule_only($35,0)|0);
    } else {
     (__destroy_object($35,0)|0);
    }
    $36 = $var;
    $37 = ($36|0)!=(0|0);
    if ($37) {
     $38 = $var;
     _mb_free($38);
     $var = 0;
     break L7;
    } else {
     ___assert_fail((4369|0),(4322|0),9975,(8947|0));
     // unreachable;
    }
   }
   break;
  }
  case 4:  {
   $39 = $0;
   $40 = ((($39)) + 8|0);
   $41 = HEAP8[$40>>0]|0;
   $42 = $41 & 1;
   $43 = ($42<<24>>24)!=(0);
   if (!($43)) {
    $44 = $0;
    $45 = ((($44)) + 4|0);
    $46 = HEAPU8[$45>>0]|(HEAPU8[$45+1>>0]<<8)|(HEAPU8[$45+2>>0]<<16)|(HEAPU8[$45+3>>0]<<24);
    $47 = ($46|0)!=(0|0);
    if ($47) {
     $48 = $0;
     $49 = ((($48)) + 4|0);
     $50 = HEAPU8[$49>>0]|(HEAPU8[$49+1>>0]<<8)|(HEAPU8[$49+2>>0]<<16)|(HEAPU8[$49+3>>0]<<24);
     $51 = ($50|0)!=(0|0);
     if ($51) {
      $52 = $0;
      $53 = ((($52)) + 4|0);
      $54 = HEAPU8[$53>>0]|(HEAPU8[$53+1>>0]<<8)|(HEAPU8[$53+2>>0]<<16)|(HEAPU8[$53+3>>0]<<24);
      _mb_free($54);
      $55 = $0;
      $56 = ((($55)) + 4|0);
      HEAP8[$56>>0]=0&255;HEAP8[$56+1>>0]=(0>>8)&255;HEAP8[$56+2>>0]=(0>>16)&255;HEAP8[$56+3>>0]=0>>24;
      break L7;
     } else {
      ___assert_fail((4369|0),(4322|0),9982,(8947|0));
      // unreachable;
     }
    }
   }
   break;
  }
  case 8:  {
   $57 = $0;
   $58 = ((($57)) + 4|0);
   $59 = HEAPU8[$58>>0]|(HEAPU8[$58+1>>0]<<8)|(HEAPU8[$58+2>>0]<<16)|(HEAPU8[$58+3>>0]<<24);
   $60 = HEAPU8[$59>>0]|(HEAPU8[$59+1>>0]<<8)|(HEAPU8[$59+2>>0]<<16)|(HEAPU8[$59+3>>0]<<24);
   $61 = ($60|0)!=(0|0);
   if (!($61)) {
    ___assert_fail((4369|0),(4322|0),9988,(8947|0));
    // unreachable;
   }
   $62 = $0;
   $63 = ((($62)) + 4|0);
   $64 = HEAPU8[$63>>0]|(HEAPU8[$63+1>>0]<<8)|(HEAPU8[$63+2>>0]<<16)|(HEAPU8[$63+3>>0]<<24);
   $65 = HEAPU8[$64>>0]|(HEAPU8[$64+1>>0]<<8)|(HEAPU8[$64+2>>0]<<16)|(HEAPU8[$64+3>>0]<<24);
   _mb_free($65);
   $66 = $0;
   $67 = ((($66)) + 4|0);
   $68 = HEAPU8[$67>>0]|(HEAPU8[$67+1>>0]<<8)|(HEAPU8[$67+2>>0]<<16)|(HEAPU8[$67+3>>0]<<24);
   HEAP8[$68>>0]=0&255;HEAP8[$68+1>>0]=(0>>8)&255;HEAP8[$68+2>>0]=(0>>16)&255;HEAP8[$68+3>>0]=0>>24;
   $69 = $0;
   $70 = ((($69)) + 4|0);
   $71 = HEAPU8[$70>>0]|(HEAPU8[$70+1>>0]<<8)|(HEAPU8[$70+2>>0]<<16)|(HEAPU8[$70+3>>0]<<24);
   $72 = ($71|0)!=(0|0);
   if ($72) {
    $73 = $0;
    $74 = ((($73)) + 4|0);
    $75 = HEAPU8[$74>>0]|(HEAPU8[$74+1>>0]<<8)|(HEAPU8[$74+2>>0]<<16)|(HEAPU8[$74+3>>0]<<24);
    _mb_free($75);
    $76 = $0;
    $77 = ((($76)) + 4|0);
    HEAP8[$77>>0]=0&255;HEAP8[$77+1>>0]=(0>>8)&255;HEAP8[$77+2>>0]=(0>>16)&255;HEAP8[$77+3>>0]=0>>24;
    break L7;
   } else {
    ___assert_fail((4369|0),(4322|0),9989,(8947|0));
    // unreachable;
   }
   break;
  }
  case 7:  {
   $78 = $0;
   $79 = ((($78)) + 4|0);
   $80 = HEAPU8[$79>>0]|(HEAPU8[$79+1>>0]<<8)|(HEAPU8[$79+2>>0]<<16)|(HEAPU8[$79+3>>0]<<24);
   $81 = $0;
   $82 = ((($81)) + 4|0);
   $83 = HEAPU8[$82>>0]|(HEAPU8[$82+1>>0]<<8)|(HEAPU8[$82+2>>0]<<16)|(HEAPU8[$82+3>>0]<<24);
   (__unref($80,$83)|0);
   break;
  }
  case 10:  {
   $84 = $0;
   $85 = ((($84)) + 8|0);
   $86 = HEAP8[$85>>0]|0;
   $87 = $86 & 1;
   $88 = ($87<<24>>24)!=(0);
   if (!($88)) {
    $89 = $0;
    $90 = ((($89)) + 4|0);
    $91 = HEAPU8[$90>>0]|(HEAPU8[$90+1>>0]<<8)|(HEAPU8[$90+2>>0]<<16)|(HEAPU8[$90+3>>0]<<24);
    $92 = $0;
    $93 = ((($92)) + 4|0);
    $94 = HEAPU8[$93>>0]|(HEAPU8[$93+1>>0]<<8)|(HEAPU8[$93+2>>0]<<16)|(HEAPU8[$93+3>>0]<<24);
    (__unref($91,$94)|0);
   }
   break;
  }
  case 11:  {
   $95 = $0;
   $96 = ((($95)) + 4|0);
   $97 = HEAPU8[$96>>0]|(HEAPU8[$96+1>>0]<<8)|(HEAPU8[$96+2>>0]<<16)|(HEAPU8[$96+3>>0]<<24);
   $98 = $0;
   $99 = ((($98)) + 4|0);
   $100 = HEAPU8[$99>>0]|(HEAPU8[$99+1>>0]<<8)|(HEAPU8[$99+2>>0]<<16)|(HEAPU8[$99+3>>0]<<24);
   (__unref($97,$100)|0);
   break;
  }
  case 13:  {
   $101 = $0;
   $102 = ((($101)) + 4|0);
   $103 = HEAPU8[$102>>0]|(HEAPU8[$102+1>>0]<<8)|(HEAPU8[$102+2>>0]<<16)|(HEAPU8[$102+3>>0]<<24);
   $104 = $0;
   $105 = ((($104)) + 4|0);
   $106 = HEAPU8[$105>>0]|(HEAPU8[$105+1>>0]<<8)|(HEAPU8[$105+2>>0]<<16)|(HEAPU8[$105+3>>0]<<24);
   (__unref($103,$106)|0);
   break;
  }
  case 12:  {
   $107 = $0;
   $108 = ((($107)) + 4|0);
   $109 = HEAPU8[$108>>0]|(HEAPU8[$108+1>>0]<<8)|(HEAPU8[$108+2>>0]<<16)|(HEAPU8[$108+3>>0]<<24);
   (__destroy_list_it($109)|0);
   break;
  }
  case 14:  {
   $110 = $0;
   $111 = ((($110)) + 4|0);
   $112 = HEAPU8[$111>>0]|(HEAPU8[$111+1>>0]<<8)|(HEAPU8[$111+2>>0]<<16)|(HEAPU8[$111+3>>0]<<24);
   (__destroy_dict_it($112)|0);
   break;
  }
  case 16:  {
   $113 = $0;
   $114 = ((($113)) + 8|0);
   $115 = HEAP8[$114>>0]|0;
   $116 = $115 & 1;
   $117 = ($116<<24>>24)!=(0);
   if (!($117)) {
    $118 = $0;
    $119 = ((($118)) + 4|0);
    $120 = HEAPU8[$119>>0]|(HEAPU8[$119+1>>0]<<8)|(HEAPU8[$119+2>>0]<<16)|(HEAPU8[$119+3>>0]<<24);
    $121 = $0;
    $122 = ((($121)) + 4|0);
    $123 = HEAPU8[$122>>0]|(HEAPU8[$122+1>>0]<<8)|(HEAPU8[$122+2>>0]<<16)|(HEAPU8[$122+3>>0]<<24);
    (__unref($120,$123)|0);
   }
   break;
  }
  case 17:  {
   $124 = $0;
   $125 = ((($124)) + 8|0);
   $126 = HEAP8[$125>>0]|0;
   $127 = $126 & 1;
   $128 = ($127<<24>>24)!=(0);
   if (!($128)) {
    $129 = $0;
    $130 = ((($129)) + 4|0);
    $131 = HEAPU8[$130>>0]|(HEAPU8[$130+1>>0]<<8)|(HEAPU8[$130+2>>0]<<16)|(HEAPU8[$130+3>>0]<<24);
    $132 = ((($131)) + 58|0);
    $133 = HEAPU8[$132>>0]|(HEAPU8[$132+1>>0]<<8)|(HEAPU8[$132+2>>0]<<16)|(HEAPU8[$132+3>>0]<<24);
    $134 = ($133|0)==(2);
    if ($134) {
     $135 = $0;
     $136 = ((($135)) + 4|0);
     $137 = HEAPU8[$136>>0]|(HEAPU8[$136+1>>0]<<8)|(HEAPU8[$136+2>>0]<<16)|(HEAPU8[$136+3>>0]<<24);
     $138 = $0;
     $139 = ((($138)) + 4|0);
     $140 = HEAPU8[$139>>0]|(HEAPU8[$139+1>>0]<<8)|(HEAPU8[$139+2>>0]<<16)|(HEAPU8[$139+3>>0]<<24);
     (__unref($137,$140)|0);
     break L7;
    }
   }
   $141 = $0;
   $142 = ((($141)) + 8|0);
   $143 = HEAP8[$142>>0]|0;
   $144 = $143 & 1;
   $145 = ($144<<24>>24)!=(0);
   if (!($145)) {
    $146 = $0;
    $147 = ((($146)) + 4|0);
    $148 = HEAPU8[$147>>0]|(HEAPU8[$147+1>>0]<<8)|(HEAPU8[$147+2>>0]<<16)|(HEAPU8[$147+3>>0]<<24);
    $149 = ((($148)) + 58|0);
    $150 = HEAPU8[$149>>0]|(HEAPU8[$149+1>>0]<<8)|(HEAPU8[$149+2>>0]<<16)|(HEAPU8[$149+3>>0]<<24);
    $151 = ($150|0)!=(2);
    if ($151) {
     $152 = $0;
     $153 = ((($152)) + 4|0);
     $154 = HEAPU8[$153>>0]|(HEAPU8[$153+1>>0]<<8)|(HEAPU8[$153+2>>0]<<16)|(HEAPU8[$153+3>>0]<<24);
     __destroy_routine(0,$154);
    }
   }
   break;
  }
  case 15:  {
   $155 = $0;
   $156 = ((($155)) + 8|0);
   $157 = HEAP8[$156>>0]|0;
   $158 = $157 & 1;
   $159 = ($158<<24>>24)!=(0);
   if (!($159)) {
    $160 = $0;
    $161 = ((($160)) + 4|0);
    $162 = HEAPU8[$161>>0]|(HEAPU8[$161+1>>0]<<8)|(HEAPU8[$161+2>>0]<<16)|(HEAPU8[$161+3>>0]<<24);
    $163 = HEAPU8[$162>>0]|(HEAPU8[$162+1>>0]<<8)|(HEAPU8[$162+2>>0]<<16)|(HEAPU8[$162+3>>0]<<24);
    $164 = ($163|0)!=(0|0);
    if (!($164)) {
     ___assert_fail((4369|0),(4322|0),10004,(8947|0));
     // unreachable;
    }
    $165 = $0;
    $166 = ((($165)) + 4|0);
    $167 = HEAPU8[$166>>0]|(HEAPU8[$166+1>>0]<<8)|(HEAPU8[$166+2>>0]<<16)|(HEAPU8[$166+3>>0]<<24);
    $168 = HEAPU8[$167>>0]|(HEAPU8[$167+1>>0]<<8)|(HEAPU8[$167+2>>0]<<16)|(HEAPU8[$167+3>>0]<<24);
    _mb_free($168);
    $169 = $0;
    $170 = ((($169)) + 4|0);
    $171 = HEAPU8[$170>>0]|(HEAPU8[$170+1>>0]<<8)|(HEAPU8[$170+2>>0]<<16)|(HEAPU8[$170+3>>0]<<24);
    HEAP8[$171>>0]=0&255;HEAP8[$171+1>>0]=(0>>8)&255;HEAP8[$171+2>>0]=(0>>16)&255;HEAP8[$171+3>>0]=0>>24;
    $172 = $0;
    $173 = ((($172)) + 4|0);
    $174 = HEAPU8[$173>>0]|(HEAPU8[$173+1>>0]<<8)|(HEAPU8[$173+2>>0]<<16)|(HEAPU8[$173+3>>0]<<24);
    $175 = ($174|0)!=(0|0);
    if ($175) {
     $176 = $0;
     $177 = ((($176)) + 4|0);
     $178 = HEAPU8[$177>>0]|(HEAPU8[$177+1>>0]<<8)|(HEAPU8[$177+2>>0]<<16)|(HEAPU8[$177+3>>0]<<24);
     _mb_free($178);
     $179 = $0;
     $180 = ((($179)) + 4|0);
     HEAP8[$180>>0]=0&255;HEAP8[$180+1>>0]=(0>>8)&255;HEAP8[$180+2>>0]=(0>>16)&255;HEAP8[$180+3>>0]=0>>24;
     break L7;
    } else {
     ___assert_fail((4369|0),(4322|0),10005,(8947|0));
     // unreachable;
    }
   }
   break;
  }
  case 21: case 20:  {
   $181 = $0;
   $182 = ((($181)) + 8|0);
   $183 = HEAP8[$182>>0]|0;
   $184 = $183 & 1;
   $185 = ($184<<24>>24)!=(0);
   if (!($185)) {
    $186 = $0;
    $187 = ((($186)) + 4|0);
    $188 = HEAPU8[$187>>0]|(HEAPU8[$187+1>>0]<<8)|(HEAPU8[$187+2>>0]<<16)|(HEAPU8[$187+3>>0]<<24);
    $189 = ($188|0)!=(0|0);
    if ($189) {
     $190 = $0;
     $191 = ((($190)) + 4|0);
     $192 = HEAPU8[$191>>0]|(HEAPU8[$191+1>>0]<<8)|(HEAPU8[$191+2>>0]<<16)|(HEAPU8[$191+3>>0]<<24);
     $193 = HEAPU8[$192>>0]|(HEAPU8[$192+1>>0]<<8)|(HEAPU8[$192+2>>0]<<16)|(HEAPU8[$192+3>>0]<<24);
     $194 = ($193|0)!=(0|0);
     do {
      if ($194) {
       $195 = $0;
       $196 = ((($195)) + 4|0);
       $197 = HEAPU8[$196>>0]|(HEAPU8[$196+1>>0]<<8)|(HEAPU8[$196+2>>0]<<16)|(HEAPU8[$196+3>>0]<<24);
       $198 = HEAPU8[$197>>0]|(HEAPU8[$197+1>>0]<<8)|(HEAPU8[$197+2>>0]<<16)|(HEAPU8[$197+3>>0]<<24);
       $199 = ($198|0)!=(0|0);
       if ($199) {
        $200 = $0;
        $201 = ((($200)) + 4|0);
        $202 = HEAPU8[$201>>0]|(HEAPU8[$201+1>>0]<<8)|(HEAPU8[$201+2>>0]<<16)|(HEAPU8[$201+3>>0]<<24);
        $203 = HEAPU8[$202>>0]|(HEAPU8[$202+1>>0]<<8)|(HEAPU8[$202+2>>0]<<16)|(HEAPU8[$202+3>>0]<<24);
        _mb_free($203);
        $204 = $0;
        $205 = ((($204)) + 4|0);
        $206 = HEAPU8[$205>>0]|(HEAPU8[$205+1>>0]<<8)|(HEAPU8[$205+2>>0]<<16)|(HEAPU8[$205+3>>0]<<24);
        HEAP8[$206>>0]=0&255;HEAP8[$206+1>>0]=(0>>8)&255;HEAP8[$206+2>>0]=(0>>16)&255;HEAP8[$206+3>>0]=0>>24;
        break;
       } else {
        ___assert_fail((4369|0),(4322|0),10015,(8947|0));
        // unreachable;
       }
      }
     } while(0);
     $207 = $0;
     $208 = ((($207)) + 4|0);
     $209 = HEAPU8[$208>>0]|(HEAPU8[$208+1>>0]<<8)|(HEAPU8[$208+2>>0]<<16)|(HEAPU8[$208+3>>0]<<24);
     $210 = ($209|0)!=(0|0);
     if ($210) {
      $211 = $0;
      $212 = ((($211)) + 4|0);
      $213 = HEAPU8[$212>>0]|(HEAPU8[$212+1>>0]<<8)|(HEAPU8[$212+2>>0]<<16)|(HEAPU8[$212+3>>0]<<24);
      _mb_free($213);
      $214 = $0;
      $215 = ((($214)) + 4|0);
      HEAP8[$215>>0]=0&255;HEAP8[$215+1>>0]=(0>>8)&255;HEAP8[$215+2>>0]=(0>>16)&255;HEAP8[$215+3>>0]=0>>24;
      break L7;
     } else {
      ___assert_fail((4369|0),(4322|0),10017,(8947|0));
      // unreachable;
     }
    }
   }
   break;
  }
  case 6: case 22: case 19: case 5: case 3: case 2: case 1: case 0:  {
   break;
  }
  default: {
   ___assert_fail((8990|0),(4322|0),10033,(8947|0));
   // unreachable;
  }
  }
 } while(0);
 $216 = $0;
 $217 = ((($216)) + 8|0);
 $218 = HEAP8[$217>>0]|0;
 $219 = $218 & -2;
 HEAP8[$217>>0] = $219;
 $220 = $0;
 HEAP8[$220>>0]=0&255;HEAP8[$220+1>>0]=(0>>8)&255;HEAP8[$220+2>>0]=(0>>16)&255;HEAP8[$220+3>>0]=0>>24;
 $221 = $0;
 $222 = ((($221)) + 4|0);
 ;HEAP8[$222>>0]=0|0;HEAP8[$222+1>>0]=0|0;HEAP8[$222+2>>0]=0|0;HEAP8[$222+3>>0]=0|0;
 $223 = $0;
 $224 = ((($223)) + 9|0);
 HEAP8[$224>>0]=0&255;HEAP8[$224+1>>0]=(0>>8)&255;HEAP8[$224+2>>0]=(0>>16)&255;HEAP8[$224+3>>0]=0>>24;
 $225 = $0;
 $226 = ((($225)) + 13|0);
 HEAP8[$226>>0]=0&255;HEAP8[$226+1>>0]=0>>8;
 $227 = $0;
 $228 = ((($227)) + 15|0);
 HEAP8[$228>>0]=0&255;HEAP8[$228+1>>0]=0>>8;
 $229 = $result;
 $230 = (($229) + 1)|0;
 $result = $230;
 $231 = $result;
 STACKTOP = sp;return ($231|0);
}
function _mb_uu_getbom($ch) {
 $ch = $ch|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $ptr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $ch;
 $2 = $1;
 $ptr = $2;
 $3 = $ptr;
 $4 = ($3|0)!=(0|0);
 if (!($4)) {
  $5 = $ptr;
  $6 = HEAP32[$5>>2]|0;
  $7 = ($6|0)!=(0|0);
  if (!($7)) {
   $0 = 0;
   $42 = $0;
   STACKTOP = sp;return ($42|0);
  }
 }
 $8 = $ptr;
 $9 = HEAP32[$8>>2]|0;
 $10 = HEAP8[$9>>0]|0;
 $11 = $10 << 24 >> 24;
 $12 = ($11|0)==(-17);
 if ($12) {
  $13 = $ptr;
  $14 = HEAP32[$13>>2]|0;
  $15 = ((($14)) + 1|0);
  $16 = HEAP8[$15>>0]|0;
  $17 = $16 << 24 >> 24;
  $18 = ($17|0)==(-69);
  if ($18) {
   $19 = $ptr;
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($20)) + 2|0);
   $22 = HEAP8[$21>>0]|0;
   $23 = $22 << 24 >> 24;
   $24 = ($23|0)==(-65);
   if ($24) {
    $25 = $ptr;
    $26 = HEAP32[$25>>2]|0;
    $27 = ((($26)) + 3|0);
    HEAP32[$25>>2] = $27;
    $0 = 3;
    $42 = $0;
    STACKTOP = sp;return ($42|0);
   }
  }
 }
 $28 = $ptr;
 $29 = HEAP32[$28>>2]|0;
 $30 = HEAP8[$29>>0]|0;
 $31 = $30 << 24 >> 24;
 $32 = ($31|0)==(-2);
 if ($32) {
  $33 = $ptr;
  $34 = HEAP32[$33>>2]|0;
  $35 = ((($34)) + 1|0);
  $36 = HEAP8[$35>>0]|0;
  $37 = $36 << 24 >> 24;
  $38 = ($37|0)==(-1);
  if ($38) {
   $39 = $ptr;
   $40 = HEAP32[$39>>2]|0;
   $41 = ((($40)) + 2|0);
   HEAP32[$39>>2] = $41;
   $0 = 2;
   $42 = $0;
   STACKTOP = sp;return ($42|0);
  }
 }
 $0 = 0;
 $42 = $0;
 STACKTOP = sp;return ($42|0);
}
function _mb_uu_ischar($ch) {
 $ch = $ch|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0;
 var $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0;
 var $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0;
 var $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0;
 var $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $c = 0, $codepoint = 0, $result = 0, $type = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $ch;
 $result = 0;
 $codepoint = 0;
 $type = 0;
 $c = 0;
 $2 = $1;
 $3 = ($2|0)!=(0|0);
 if (!($3)) {
  $0 = 0;
  $368 = $0;
  STACKTOP = sp;return ($368|0);
 }
 $4 = $1;
 $5 = ((($4)) + 1|0);
 $1 = $5;
 $6 = HEAP8[$4>>0]|0;
 $c = $6;
 $7 = $result;
 $8 = (($7) + 1)|0;
 $result = $8;
 $9 = $c;
 $10 = $9 << 24 >> 24;
 $11 = $10 & 128;
 $12 = ($11|0)!=(0);
 $13 = $c;
 $14 = $13&255;
 if (!($12)) {
  $codepoint = $14;
  $0 = 1;
  $368 = $0;
  STACKTOP = sp;return ($368|0);
 }
 $15 = (8691 + ($14)|0);
 $16 = HEAP8[$15>>0]|0;
 $type = $16;
 $17 = $type;
 $18 = $17&255;
 $19 = 255 >> $18;
 $20 = $c;
 $21 = $20&255;
 $22 = $19 & $21;
 $codepoint = $22;
 $23 = $type;
 $24 = $23&255;
 switch ($24|0) {
 case 2:  {
  $25 = $1;
  $26 = ((($25)) + 1|0);
  $1 = $26;
  $27 = HEAP8[$25>>0]|0;
  $c = $27;
  $28 = $result;
  $29 = (($28) + 1)|0;
  $result = $29;
  $30 = $codepoint;
  $31 = $30 << 6;
  $32 = $c;
  $33 = $32&255;
  $34 = $33 & 63;
  $35 = $31 | $34;
  $codepoint = $35;
  $36 = $c;
  $37 = $36&255;
  $38 = (8691 + ($37)|0);
  $39 = HEAP8[$38>>0]|0;
  $40 = $39&255;
  $41 = $40 & 112;
  $42 = ($41|0)!=(0);
  $43 = $42&1;
  $44 = $codepoint;
  $45 = $44 & $43;
  $codepoint = $45;
  $46 = $result;
  $0 = $46;
  $368 = $0;
  STACKTOP = sp;return ($368|0);
  break;
 }
 case 3:  {
  $47 = $1;
  $48 = ((($47)) + 1|0);
  $1 = $48;
  $49 = HEAP8[$47>>0]|0;
  $c = $49;
  $50 = $result;
  $51 = (($50) + 1)|0;
  $result = $51;
  $52 = $codepoint;
  $53 = $52 << 6;
  $54 = $c;
  $55 = $54&255;
  $56 = $55 & 63;
  $57 = $53 | $56;
  $codepoint = $57;
  $58 = $c;
  $59 = $58&255;
  $60 = (8691 + ($59)|0);
  $61 = HEAP8[$60>>0]|0;
  $62 = $61&255;
  $63 = $62 & 112;
  $64 = ($63|0)!=(0);
  $65 = $64&1;
  $66 = $codepoint;
  $67 = $66 & $65;
  $codepoint = $67;
  $68 = $1;
  $69 = ((($68)) + 1|0);
  $1 = $69;
  $70 = HEAP8[$68>>0]|0;
  $c = $70;
  $71 = $result;
  $72 = (($71) + 1)|0;
  $result = $72;
  $73 = $codepoint;
  $74 = $73 << 6;
  $75 = $c;
  $76 = $75&255;
  $77 = $76 & 63;
  $78 = $74 | $77;
  $codepoint = $78;
  $79 = $c;
  $80 = $79&255;
  $81 = (8691 + ($80)|0);
  $82 = HEAP8[$81>>0]|0;
  $83 = $82&255;
  $84 = $83 & 112;
  $85 = ($84|0)!=(0);
  $86 = $85&1;
  $87 = $codepoint;
  $88 = $87 & $86;
  $codepoint = $88;
  $89 = $result;
  $0 = $89;
  $368 = $0;
  STACKTOP = sp;return ($368|0);
  break;
 }
 case 4:  {
  $90 = $1;
  $91 = ((($90)) + 1|0);
  $1 = $91;
  $92 = HEAP8[$90>>0]|0;
  $c = $92;
  $93 = $result;
  $94 = (($93) + 1)|0;
  $result = $94;
  $95 = $codepoint;
  $96 = $95 << 6;
  $97 = $c;
  $98 = $97&255;
  $99 = $98 & 63;
  $100 = $96 | $99;
  $codepoint = $100;
  $101 = $c;
  $102 = $101&255;
  $103 = (8691 + ($102)|0);
  $104 = HEAP8[$103>>0]|0;
  $105 = $104&255;
  $106 = $105 & 80;
  $107 = ($106|0)!=(0);
  $108 = $107&1;
  $109 = $codepoint;
  $110 = $109 & $108;
  $codepoint = $110;
  $111 = $1;
  $112 = ((($111)) + 1|0);
  $1 = $112;
  $113 = HEAP8[$111>>0]|0;
  $c = $113;
  $114 = $result;
  $115 = (($114) + 1)|0;
  $result = $115;
  $116 = $codepoint;
  $117 = $116 << 6;
  $118 = $c;
  $119 = $118&255;
  $120 = $119 & 63;
  $121 = $117 | $120;
  $codepoint = $121;
  $122 = $c;
  $123 = $122&255;
  $124 = (8691 + ($123)|0);
  $125 = HEAP8[$124>>0]|0;
  $126 = $125&255;
  $127 = $126 & 112;
  $128 = ($127|0)!=(0);
  $129 = $128&1;
  $130 = $codepoint;
  $131 = $130 & $129;
  $codepoint = $131;
  $132 = $result;
  $0 = $132;
  $368 = $0;
  STACKTOP = sp;return ($368|0);
  break;
 }
 case 5:  {
  $133 = $1;
  $134 = ((($133)) + 1|0);
  $1 = $134;
  $135 = HEAP8[$133>>0]|0;
  $c = $135;
  $136 = $result;
  $137 = (($136) + 1)|0;
  $result = $137;
  $138 = $codepoint;
  $139 = $138 << 6;
  $140 = $c;
  $141 = $140&255;
  $142 = $141 & 63;
  $143 = $139 | $142;
  $codepoint = $143;
  $144 = $c;
  $145 = $144&255;
  $146 = (8691 + ($145)|0);
  $147 = HEAP8[$146>>0]|0;
  $148 = $147&255;
  $149 = $148 & 16;
  $150 = ($149|0)!=(0);
  $151 = $150&1;
  $152 = $codepoint;
  $153 = $152 & $151;
  $codepoint = $153;
  $154 = $1;
  $155 = ((($154)) + 1|0);
  $1 = $155;
  $156 = HEAP8[$154>>0]|0;
  $c = $156;
  $157 = $result;
  $158 = (($157) + 1)|0;
  $result = $158;
  $159 = $codepoint;
  $160 = $159 << 6;
  $161 = $c;
  $162 = $161&255;
  $163 = $162 & 63;
  $164 = $160 | $163;
  $codepoint = $164;
  $165 = $c;
  $166 = $165&255;
  $167 = (8691 + ($166)|0);
  $168 = HEAP8[$167>>0]|0;
  $169 = $168&255;
  $170 = $169 & 112;
  $171 = ($170|0)!=(0);
  $172 = $171&1;
  $173 = $codepoint;
  $174 = $173 & $172;
  $codepoint = $174;
  $175 = $1;
  $176 = ((($175)) + 1|0);
  $1 = $176;
  $177 = HEAP8[$175>>0]|0;
  $c = $177;
  $178 = $result;
  $179 = (($178) + 1)|0;
  $result = $179;
  $180 = $codepoint;
  $181 = $180 << 6;
  $182 = $c;
  $183 = $182&255;
  $184 = $183 & 63;
  $185 = $181 | $184;
  $codepoint = $185;
  $186 = $c;
  $187 = $186&255;
  $188 = (8691 + ($187)|0);
  $189 = HEAP8[$188>>0]|0;
  $190 = $189&255;
  $191 = $190 & 112;
  $192 = ($191|0)!=(0);
  $193 = $192&1;
  $194 = $codepoint;
  $195 = $194 & $193;
  $codepoint = $195;
  $196 = $result;
  $0 = $196;
  $368 = $0;
  STACKTOP = sp;return ($368|0);
  break;
 }
 case 6:  {
  $197 = $1;
  $198 = ((($197)) + 1|0);
  $1 = $198;
  $199 = HEAP8[$197>>0]|0;
  $c = $199;
  $200 = $result;
  $201 = (($200) + 1)|0;
  $result = $201;
  $202 = $codepoint;
  $203 = $202 << 6;
  $204 = $c;
  $205 = $204&255;
  $206 = $205 & 63;
  $207 = $203 | $206;
  $codepoint = $207;
  $208 = $c;
  $209 = $208&255;
  $210 = (8691 + ($209)|0);
  $211 = HEAP8[$210>>0]|0;
  $212 = $211&255;
  $213 = $212 & 112;
  $214 = ($213|0)!=(0);
  $215 = $214&1;
  $216 = $codepoint;
  $217 = $216 & $215;
  $codepoint = $217;
  $218 = $1;
  $219 = ((($218)) + 1|0);
  $1 = $219;
  $220 = HEAP8[$218>>0]|0;
  $c = $220;
  $221 = $result;
  $222 = (($221) + 1)|0;
  $result = $222;
  $223 = $codepoint;
  $224 = $223 << 6;
  $225 = $c;
  $226 = $225&255;
  $227 = $226 & 63;
  $228 = $224 | $227;
  $codepoint = $228;
  $229 = $c;
  $230 = $229&255;
  $231 = (8691 + ($230)|0);
  $232 = HEAP8[$231>>0]|0;
  $233 = $232&255;
  $234 = $233 & 112;
  $235 = ($234|0)!=(0);
  $236 = $235&1;
  $237 = $codepoint;
  $238 = $237 & $236;
  $codepoint = $238;
  $239 = $1;
  $240 = ((($239)) + 1|0);
  $1 = $240;
  $241 = HEAP8[$239>>0]|0;
  $c = $241;
  $242 = $result;
  $243 = (($242) + 1)|0;
  $result = $243;
  $244 = $codepoint;
  $245 = $244 << 6;
  $246 = $c;
  $247 = $246&255;
  $248 = $247 & 63;
  $249 = $245 | $248;
  $codepoint = $249;
  $250 = $c;
  $251 = $250&255;
  $252 = (8691 + ($251)|0);
  $253 = HEAP8[$252>>0]|0;
  $254 = $253&255;
  $255 = $254 & 112;
  $256 = ($255|0)!=(0);
  $257 = $256&1;
  $258 = $codepoint;
  $259 = $258 & $257;
  $codepoint = $259;
  $260 = $result;
  $0 = $260;
  $368 = $0;
  STACKTOP = sp;return ($368|0);
  break;
 }
 case 10:  {
  $261 = $1;
  $262 = ((($261)) + 1|0);
  $1 = $262;
  $263 = HEAP8[$261>>0]|0;
  $c = $263;
  $264 = $result;
  $265 = (($264) + 1)|0;
  $result = $265;
  $266 = $codepoint;
  $267 = $266 << 6;
  $268 = $c;
  $269 = $268&255;
  $270 = $269 & 63;
  $271 = $267 | $270;
  $codepoint = $271;
  $272 = $c;
  $273 = $272&255;
  $274 = (8691 + ($273)|0);
  $275 = HEAP8[$274>>0]|0;
  $276 = $275&255;
  $277 = $276 & 32;
  $278 = ($277|0)!=(0);
  $279 = $278&1;
  $280 = $codepoint;
  $281 = $280 & $279;
  $codepoint = $281;
  $282 = $1;
  $283 = ((($282)) + 1|0);
  $1 = $283;
  $284 = HEAP8[$282>>0]|0;
  $c = $284;
  $285 = $result;
  $286 = (($285) + 1)|0;
  $result = $286;
  $287 = $codepoint;
  $288 = $287 << 6;
  $289 = $c;
  $290 = $289&255;
  $291 = $290 & 63;
  $292 = $288 | $291;
  $codepoint = $292;
  $293 = $c;
  $294 = $293&255;
  $295 = (8691 + ($294)|0);
  $296 = HEAP8[$295>>0]|0;
  $297 = $296&255;
  $298 = $297 & 112;
  $299 = ($298|0)!=(0);
  $300 = $299&1;
  $301 = $codepoint;
  $302 = $301 & $300;
  $codepoint = $302;
  $303 = $result;
  $0 = $303;
  $368 = $0;
  STACKTOP = sp;return ($368|0);
  break;
 }
 case 11:  {
  $304 = $1;
  $305 = ((($304)) + 1|0);
  $1 = $305;
  $306 = HEAP8[$304>>0]|0;
  $c = $306;
  $307 = $result;
  $308 = (($307) + 1)|0;
  $result = $308;
  $309 = $codepoint;
  $310 = $309 << 6;
  $311 = $c;
  $312 = $311&255;
  $313 = $312 & 63;
  $314 = $310 | $313;
  $codepoint = $314;
  $315 = $c;
  $316 = $315&255;
  $317 = (8691 + ($316)|0);
  $318 = HEAP8[$317>>0]|0;
  $319 = $318&255;
  $320 = $319 & 96;
  $321 = ($320|0)!=(0);
  $322 = $321&1;
  $323 = $codepoint;
  $324 = $323 & $322;
  $codepoint = $324;
  $325 = $1;
  $326 = ((($325)) + 1|0);
  $1 = $326;
  $327 = HEAP8[$325>>0]|0;
  $c = $327;
  $328 = $result;
  $329 = (($328) + 1)|0;
  $result = $329;
  $330 = $codepoint;
  $331 = $330 << 6;
  $332 = $c;
  $333 = $332&255;
  $334 = $333 & 63;
  $335 = $331 | $334;
  $codepoint = $335;
  $336 = $c;
  $337 = $336&255;
  $338 = (8691 + ($337)|0);
  $339 = HEAP8[$338>>0]|0;
  $340 = $339&255;
  $341 = $340 & 112;
  $342 = ($341|0)!=(0);
  $343 = $342&1;
  $344 = $codepoint;
  $345 = $344 & $343;
  $codepoint = $345;
  $346 = $1;
  $347 = ((($346)) + 1|0);
  $1 = $347;
  $348 = HEAP8[$346>>0]|0;
  $c = $348;
  $349 = $result;
  $350 = (($349) + 1)|0;
  $result = $350;
  $351 = $codepoint;
  $352 = $351 << 6;
  $353 = $c;
  $354 = $353&255;
  $355 = $354 & 63;
  $356 = $352 | $355;
  $codepoint = $356;
  $357 = $c;
  $358 = $357&255;
  $359 = (8691 + ($358)|0);
  $360 = HEAP8[$359>>0]|0;
  $361 = $360&255;
  $362 = $361 & 112;
  $363 = ($362|0)!=(0);
  $364 = $363&1;
  $365 = $codepoint;
  $366 = $365 & $364;
  $codepoint = $366;
  $367 = $result;
  $0 = $367;
  $368 = $0;
  STACKTOP = sp;return ($368|0);
  break;
 }
 default: {
  $0 = 0;
  $368 = $0;
  STACKTOP = sp;return ($368|0);
 }
 }
 return (0)|0;
}
function __parse_char($s,$str,$n,$pos,$row,$col) {
 $s = $s|0;
 $str = $str|0;
 $n = $n|0;
 $pos = $pos|0;
 $row = $row|0;
 $col = $col|0;
 var $$not = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0;
 var $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0;
 var $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0;
 var $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0;
 var $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0;
 var $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0;
 var $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0;
 var $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0;
 var $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0;
 var $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0;
 var $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0;
 var $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0;
 var $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0;
 var $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0;
 var $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0;
 var $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $brmerge = 0, $c = 0, $context = 0, $last_char = 0, $result = 0, $uc = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $uc = sp;
 $0 = $s;
 $1 = $str;
 $2 = $n;
 $3 = $pos;
 $4 = $row;
 $5 = $col;
 $result = 0;
 $context = 0;
 $last_char = 0;
 $c = 0;
 HEAP32[$uc>>2] = 0;
 $6 = $0;
 $7 = ($6|0)!=(0|0);
 if ($7) {
 }
 $8 = $0;
 $9 = ($8|0)!=(0|0);
 if (!($9)) {
  ___assert_fail((7870|0),(4322|0),5844,(7894|0));
  // unreachable;
 }
 $10 = $0;
 $11 = ((($10)) + 71|0);
 $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
 $13 = ($12|0)!=(0|0);
 if (!($13)) {
  ___assert_fail((7870|0),(4322|0),5844,(7894|0));
  // unreachable;
 }
 $14 = $0;
 $15 = ((($14)) + 71|0);
 $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
 $context = $16;
 $17 = $1;
 $18 = ($17|0)!=(0|0);
 do {
  if ($18) {
   $19 = $2;
   $20 = ($19|0)==(0);
   if ($20) {
    $result = 3;
    break;
   }
   $21 = $2;
   $22 = ($21|0)==(1);
   if ($22) {
    $23 = $1;
    $24 = HEAP8[$23>>0]|0;
    $c = $24;
    break;
   } else {
    $25 = $1;
    $26 = $2;
    _memcpy(($uc|0),($25|0),($26|0))|0;
    break;
   }
  } else {
   $c = 10;
  }
 } while(0);
 $27 = $context;
 $28 = ((($27)) + 4|0);
 $29 = HEAP8[$28>>0]|0;
 $last_char = $29;
 $30 = $c;
 $31 = $context;
 $32 = ((($31)) + 4|0);
 HEAP8[$32>>0] = $30;
 $33 = $context;
 $34 = ((($33)) + 150|0);
 $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
 switch ($35|0) {
 case 0:  {
  $36 = HEAP32[$uc>>2]|0;
  $37 = ($36|0)!=(0);
  if ($37) {
   $38 = $2;
   $39 = ($38|0)==(3);
   if ($39) {
    $40 = $1;
    $41 = $2;
    $42 = (_memcmp($40,7906,$41)|0);
    $43 = ($42|0)==(0);
    if ($43) {
     $44 = $0;
     $45 = $0;
     $46 = ((($45)) + 67|0);
     $47 = HEAPU8[$46>>0]|(HEAPU8[$46+1>>0]<<8)|(HEAPU8[$46+2>>0]<<16)|(HEAPU8[$46+3>>0]<<24);
     $48 = (__set_current_error($44,6,$47)|0);
     $49 = ($48<<24>>24)!=(0);
     if (!($49)) {
      $379 = $result;
      STACKTOP = sp;return ($379|0);
     }
     $50 = $0;
     $51 = $3;
     $52 = $4;
     $53 = $5;
     __set_error_pos($50,$51,$52,$53);
     $result = 3;
     $379 = $result;
     STACKTOP = sp;return ($379|0);
    }
   }
   $54 = $2;
   $55 = ($54|0)==(3);
   if ($55) {
    $56 = $1;
    $57 = $2;
    $58 = (_memcmp($56,7909,$57)|0);
    $59 = ($58|0)==(0);
    if ($59) {
     $60 = $0;
     $61 = $0;
     $62 = ((($61)) + 67|0);
     $63 = HEAPU8[$62>>0]|(HEAPU8[$62+1>>0]<<8)|(HEAPU8[$62+2>>0]<<16)|(HEAPU8[$62+3>>0]<<24);
     $64 = (__set_current_error($60,6,$63)|0);
     $65 = ($64<<24>>24)!=(0);
     if (!($65)) {
      $379 = $result;
      STACKTOP = sp;return ($379|0);
     }
     $66 = $0;
     $67 = $3;
     $68 = $4;
     $69 = $5;
     __set_error_pos($66,$67,$68,$69);
     $result = 3;
     $379 = $result;
     STACKTOP = sp;return ($379|0);
    }
   }
   $70 = $context;
   $71 = ((($70)) + 154|0);
   $72 = HEAPU8[$71>>0]|(HEAPU8[$71+1>>0]<<8)|(HEAPU8[$71+2>>0]<<16)|(HEAPU8[$71+3>>0]<<24);
   $73 = ($72|0)==(0);
   if ($73) {
    $74 = $0;
    $75 = $1;
    $76 = $2;
    $77 = (__append_uu_char_to_symbol($74,$75,$76)|0);
    $result = $77;
    $379 = $result;
    STACKTOP = sp;return ($379|0);
   }
   $78 = $context;
   $79 = ((($78)) + 154|0);
   $80 = HEAPU8[$79>>0]|(HEAPU8[$79+1>>0]<<8)|(HEAPU8[$79+2>>0]<<16)|(HEAPU8[$79+3>>0]<<24);
   $81 = ($80|0)==(1);
   if (!($81)) {
    $379 = $result;
    STACKTOP = sp;return ($379|0);
   }
   $82 = $context;
   $83 = ((($82)) + 154|0);
   HEAP8[$83>>0]=0&255;HEAP8[$83+1>>0]=(0>>8)&255;HEAP8[$83+2>>0]=(0>>16)&255;HEAP8[$83+3>>0]=0>>24;
   $84 = $0;
   $85 = $3;
   $86 = $4;
   $87 = $5;
   $88 = (__cut_symbol($84,$85,$86,$87)|0);
   $result = $88;
   $89 = ($88|0)!=(0);
   if ($89) {
    $379 = $result;
    STACKTOP = sp;return ($379|0);
   }
   $90 = $0;
   $91 = $1;
   $92 = $2;
   $93 = (__append_uu_char_to_symbol($90,$91,$92)|0);
   $result = $93;
   $379 = $result;
   STACKTOP = sp;return ($379|0);
  }
  $94 = $c;
  $95 = $94 << 24 >> 24;
  $96 = ($95|0)>=(97);
  if ($96) {
   $97 = $c;
   $98 = $97 << 24 >> 24;
   $99 = ($98|0)<=(122);
   if ($99) {
    $100 = $c;
    $101 = $100 << 24 >> 24;
    $102 = (($101) - 97)|0;
    $103 = (($102) + 65)|0;
    $107 = $103;
   } else {
    label = 31;
   }
  } else {
   label = 31;
  }
  if ((label|0) == 31) {
   $104 = $c;
   $105 = $104 << 24 >> 24;
   $107 = $105;
  }
  $106 = $107&255;
  $c = $106;
  $108 = $c;
  $109 = (__is_blank_char($108)|0);
  $110 = ($109<<24>>24)!=(0);
  if ($110) {
   $111 = $0;
   $112 = $3;
   $113 = $4;
   $114 = $5;
   $115 = (__cut_symbol($111,$112,$113,$114)|0);
   $result = $115;
   $379 = $result;
   STACKTOP = sp;return ($379|0);
  }
  $116 = $c;
  $117 = (__is_newline_char($116)|0);
  $118 = ($117<<24>>24)!=(0);
  if ($118) {
   $119 = $0;
   $120 = $3;
   $121 = $4;
   $122 = $5;
   $123 = (__cut_symbol($119,$120,$121,$122)|0);
   $result = $123;
   $124 = ($123|0)!=(0);
   if ($124) {
    $379 = $result;
    STACKTOP = sp;return ($379|0);
   }
   $125 = $0;
   $126 = (__append_char_to_symbol($125,10)|0);
   $result = $126;
   $127 = ($126|0)!=(0);
   if ($127) {
    $379 = $result;
    STACKTOP = sp;return ($379|0);
   }
   $128 = $0;
   $129 = $3;
   $130 = $4;
   $131 = $5;
   $132 = (__cut_symbol($128,$129,$130,$131)|0);
   $result = $132;
   $379 = $result;
   STACKTOP = sp;return ($379|0);
  }
  $133 = $c;
  $134 = (__is_separator_char($133)|0);
  $135 = $134&255;
  $136 = ($135|0)!=(0);
  if (!($136)) {
   $137 = $c;
   $138 = (__is_bracket_char($137)|0);
   $139 = $138&255;
   $140 = ($139|0)!=(0);
   if (!($140)) {
    $156 = $c;
    $157 = (__is_quotation_char($156)|0);
    $158 = ($157<<24>>24)!=(0);
    if ($158) {
     $159 = $0;
     $160 = $3;
     $161 = $4;
     $162 = $5;
     $163 = (__cut_symbol($159,$160,$161,$162)|0);
     $result = $163;
     $164 = ($163|0)!=(0);
     if ($164) {
      $379 = $result;
      STACKTOP = sp;return ($379|0);
     }
     $165 = $0;
     $166 = $c;
     $167 = (__append_char_to_symbol($165,$166)|0);
     $result = $167;
     $168 = ($167|0)!=(0);
     if ($168) {
      $379 = $result;
      STACKTOP = sp;return ($379|0);
     }
     $169 = $context;
     $170 = ((($169)) + 150|0);
     HEAP8[$170>>0]=1&255;HEAP8[$170+1>>0]=(1>>8)&255;HEAP8[$170+2>>0]=(1>>16)&255;HEAP8[$170+3>>0]=1>>24;
     $379 = $result;
     STACKTOP = sp;return ($379|0);
    }
    $171 = $c;
    $172 = (__is_comment_char($171)|0);
    $173 = ($172<<24>>24)!=(0);
    if ($173) {
     $174 = $0;
     $175 = $3;
     $176 = $4;
     $177 = $5;
     $178 = (__cut_symbol($174,$175,$176,$177)|0);
     $result = $178;
     $179 = ($178|0)!=(0);
     if ($179) {
      $379 = $result;
      STACKTOP = sp;return ($379|0);
     }
     $180 = $0;
     $181 = (__append_char_to_symbol($180,10)|0);
     $result = $181;
     $182 = ($181|0)!=(0);
     if ($182) {
      $379 = $result;
      STACKTOP = sp;return ($379|0);
     }
     $183 = $0;
     $184 = $3;
     $185 = $4;
     $186 = $5;
     $187 = (__cut_symbol($183,$184,$185,$186)|0);
     $result = $187;
     $188 = ($187|0)!=(0);
     if ($188) {
      $379 = $result;
      STACKTOP = sp;return ($379|0);
     }
     $189 = $context;
     $190 = ((($189)) + 150|0);
     HEAP8[$190>>0]=2&255;HEAP8[$190+1>>0]=(2>>8)&255;HEAP8[$190+2>>0]=(2>>16)&255;HEAP8[$190+3>>0]=2>>24;
     $191 = $context;
     $192 = ((($191)) + 146|0);
     HEAP8[$192>>0]=1&255;HEAP8[$192+1>>0]=(1>>8)&255;HEAP8[$192+2>>0]=(1>>16)&255;HEAP8[$192+3>>0]=1>>24;
     $379 = $result;
     STACKTOP = sp;return ($379|0);
    }
    $193 = $context;
    $194 = ((($193)) + 154|0);
    $195 = HEAPU8[$194>>0]|(HEAPU8[$194+1>>0]<<8)|(HEAPU8[$194+2>>0]<<16)|(HEAPU8[$194+3>>0]<<24);
    $196 = ($195|0)==(0);
    if (!($196)) {
     $249 = $context;
     $250 = ((($249)) + 154|0);
     $251 = HEAPU8[$250>>0]|(HEAPU8[$250+1>>0]<<8)|(HEAPU8[$250+2>>0]<<16)|(HEAPU8[$250+3>>0]<<24);
     $252 = ($251|0)==(1);
     if (!($252)) {
      ___assert_fail((5378|0),(4322|0),5941,(7894|0));
      // unreachable;
     }
     $253 = $c;
     $254 = (__is_identifier_char($253)|0);
     $255 = ($254<<24>>24)!=(0);
     if ($255) {
      $256 = $context;
      $257 = ((($256)) + 154|0);
      HEAP8[$257>>0]=0&255;HEAP8[$257+1>>0]=(0>>8)&255;HEAP8[$257+2>>0]=(0>>16)&255;HEAP8[$257+3>>0]=0>>24;
      $258 = $0;
      $259 = $3;
      $260 = $4;
      $261 = $5;
      $262 = (__cut_symbol($258,$259,$260,$261)|0);
      $result = $262;
      $263 = ($262|0)!=(0);
      if ($263) {
       $379 = $result;
       STACKTOP = sp;return ($379|0);
      }
      $264 = $0;
      $265 = $c;
      $266 = (__append_char_to_symbol($264,$265)|0);
      $result = $266;
      $379 = $result;
      STACKTOP = sp;return ($379|0);
     }
     $267 = $c;
     $268 = (__is_operator_char($267)|0);
     $269 = ($268<<24>>24)!=(0);
     if (!($269)) {
      $282 = $0;
      $283 = $0;
      $284 = ((($283)) + 67|0);
      $285 = HEAPU8[$284>>0]|(HEAPU8[$284+1>>0]<<8)|(HEAPU8[$284+2>>0]<<16)|(HEAPU8[$284+3>>0]<<24);
      $286 = (__set_current_error($282,6,$285)|0);
      $287 = ($286<<24>>24)!=(0);
      if (!($287)) {
       $379 = $result;
       STACKTOP = sp;return ($379|0);
      }
      $288 = $0;
      $289 = $3;
      $290 = $4;
      $291 = $5;
      __set_error_pos($288,$289,$290,$291);
      $result = 3;
      $379 = $result;
      STACKTOP = sp;return ($379|0);
     }
     $270 = $c;
     $271 = $270 << 24 >> 24;
     $272 = ($271|0)==(45);
     do {
      if ($272) {
       $273 = $0;
       $274 = $3;
       $275 = $4;
       $276 = $5;
       $277 = (__cut_symbol($273,$274,$275,$276)|0);
       $result = $277;
       $278 = ($277|0)!=(0);
       if (!($278)) {
        break;
       }
       $379 = $result;
       STACKTOP = sp;return ($379|0);
      }
     } while(0);
     $279 = $0;
     $280 = $c;
     $281 = (__append_char_to_symbol($279,$280)|0);
     $result = $281;
     $379 = $result;
     STACKTOP = sp;return ($379|0);
    }
    $197 = $c;
    $198 = (__is_identifier_char($197)|0);
    $199 = ($198<<24>>24)!=(0);
    if ($199) {
     $200 = $0;
     $201 = $c;
     $202 = (__append_char_to_symbol($200,$201)|0);
     $result = $202;
     $379 = $result;
     STACKTOP = sp;return ($379|0);
    }
    $203 = $c;
    $204 = (__is_operator_char($203)|0);
    $205 = ($204<<24>>24)!=(0);
    if (!($205)) {
     $239 = $0;
     $240 = $0;
     $241 = ((($240)) + 67|0);
     $242 = HEAPU8[$241>>0]|(HEAPU8[$241+1>>0]<<8)|(HEAPU8[$241+2>>0]<<16)|(HEAPU8[$241+3>>0]<<24);
     $243 = (__set_current_error($239,6,$242)|0);
     $244 = ($243<<24>>24)!=(0);
     if (!($244)) {
      $379 = $result;
      STACKTOP = sp;return ($379|0);
     }
     $245 = $0;
     $246 = $3;
     $247 = $4;
     $248 = $5;
     __set_error_pos($245,$246,$247,$248);
     $result = 3;
     $379 = $result;
     STACKTOP = sp;return ($379|0);
    }
    $206 = $context;
    $207 = ((($206)) + 5|0);
    $208 = $context;
    $209 = ((($208)) + 134|0);
    $210 = HEAPU8[$209>>0]|(HEAPU8[$209+1>>0]<<8)|(HEAPU8[$209+2>>0]<<16)|(HEAPU8[$209+3>>0]<<24);
    $211 = (($210) - 2)|0;
    $212 = (__is_exponent_prefix($207,0,$211)|0);
    $213 = $212&255;
    $214 = ($213|0)!=(0);
    do {
     if ($214) {
      $215 = $last_char;
      $216 = (__is_exponential_char($215)|0);
      $217 = $216&255;
      $218 = ($217|0)!=(0);
      if ($218) {
       $219 = $c;
       $220 = $219 << 24 >> 24;
       $221 = ($220|0)==(43);
       if (!($221)) {
        $222 = $c;
        $223 = $222 << 24 >> 24;
        $224 = ($223|0)==(45);
        if (!($224)) {
         break;
        }
       }
       $225 = $0;
       $226 = $c;
       $227 = (__append_char_to_symbol($225,$226)|0);
       $result = $227;
       $379 = $result;
       STACKTOP = sp;return ($379|0);
      }
     }
    } while(0);
    $228 = $context;
    $229 = ((($228)) + 154|0);
    HEAP8[$229>>0]=1&255;HEAP8[$229+1>>0]=(1>>8)&255;HEAP8[$229+2>>0]=(1>>16)&255;HEAP8[$229+3>>0]=1>>24;
    $230 = $0;
    $231 = $3;
    $232 = $4;
    $233 = $5;
    $234 = (__cut_symbol($230,$231,$232,$233)|0);
    $result = $234;
    $235 = ($234|0)!=(0);
    if ($235) {
     $379 = $result;
     STACKTOP = sp;return ($379|0);
    }
    $236 = $0;
    $237 = $c;
    $238 = (__append_char_to_symbol($236,$237)|0);
    $result = $238;
    $379 = $result;
    STACKTOP = sp;return ($379|0);
   }
  }
  $141 = $0;
  $142 = $3;
  $143 = $4;
  $144 = $5;
  $145 = (__cut_symbol($141,$142,$143,$144)|0);
  $result = $145;
  $146 = ($145|0)!=(0);
  if ($146) {
   $379 = $result;
   STACKTOP = sp;return ($379|0);
  }
  $147 = $0;
  $148 = $c;
  $149 = (__append_char_to_symbol($147,$148)|0);
  $result = $149;
  $150 = ($149|0)!=(0);
  if ($150) {
   $379 = $result;
   STACKTOP = sp;return ($379|0);
  }
  $151 = $0;
  $152 = $3;
  $153 = $4;
  $154 = $5;
  $155 = (__cut_symbol($151,$152,$153,$154)|0);
  $result = $155;
  $379 = $result;
  STACKTOP = sp;return ($379|0);
  break;
 }
 case 1:  {
  $292 = $c;
  $293 = (__is_quotation_char($292)|0);
  $294 = ($293<<24>>24)!=(0);
  $295 = $0;
  $296 = $c;
  $297 = (__append_char_to_symbol($295,$296)|0);
  $result = $297;
  $298 = ($297|0)!=(0);
  $$not = $294 ^ 1;
  $brmerge = $$not | $298;
  if ($brmerge) {
   $379 = $result;
   STACKTOP = sp;return ($379|0);
  }
  $299 = $0;
  $300 = $3;
  $301 = $4;
  $302 = $5;
  $303 = (__cut_symbol($299,$300,$301,$302)|0);
  $result = $303;
  $304 = ($303|0)!=(0);
  if ($304) {
   $379 = $result;
   STACKTOP = sp;return ($379|0);
  }
  $305 = $context;
  $306 = ((($305)) + 150|0);
  HEAP8[$306>>0]=0&255;HEAP8[$306+1>>0]=(0>>8)&255;HEAP8[$306+2>>0]=(0>>16)&255;HEAP8[$306+3>>0]=0>>24;
  $379 = $result;
  STACKTOP = sp;return ($379|0);
  break;
 }
 case 2:  {
  $307 = $c;
  $308 = (__is_eof_char($307)|0);
  $309 = ($308<<24>>24)!=(0);
  $310 = $context;
  if ($309) {
   $311 = ((($310)) + 150|0);
   HEAP8[$311>>0]=0&255;HEAP8[$311+1>>0]=(0>>8)&255;HEAP8[$311+2>>0]=(0>>16)&255;HEAP8[$311+3>>0]=0>>24;
   $379 = $result;
   STACKTOP = sp;return ($379|0);
  }
  $312 = ((($310)) + 146|0);
  $313 = HEAPU8[$312>>0]|(HEAPU8[$312+1>>0]<<8)|(HEAPU8[$312+2>>0]<<16)|(HEAPU8[$312+3>>0]<<24);
  $314 = ($313|0)!=(0);
  if ($314) {
   $315 = $c;
   $316 = $315 << 24 >> 24;
   $317 = $context;
   $318 = ((($317)) + 146|0);
   $319 = HEAPU8[$318>>0]|(HEAPU8[$318+1>>0]<<8)|(HEAPU8[$318+2>>0]<<16)|(HEAPU8[$318+3>>0]<<24);
   $320 = (($319) + 1)|0;
   HEAP8[$318>>0]=$320&255;HEAP8[$318+1>>0]=($320>>8)&255;HEAP8[$318+2>>0]=($320>>16)&255;HEAP8[$318+3>>0]=$320>>24;
   $321 = (7912 + ($319)|0);
   $322 = HEAP8[$321>>0]|0;
   $323 = $322 << 24 >> 24;
   $324 = ($316|0)==($323|0);
   if ($324) {
    $325 = $context;
    $326 = ((($325)) + 146|0);
    $327 = HEAPU8[$326>>0]|(HEAPU8[$326+1>>0]<<8)|(HEAPU8[$326+2>>0]<<16)|(HEAPU8[$326+3>>0]<<24);
    $328 = ($327>>>0)>=(2);
    if (!($328)) {
     $379 = $result;
     STACKTOP = sp;return ($379|0);
    }
    $329 = $context;
    $330 = ((($329)) + 150|0);
    HEAP8[$330>>0]=3&255;HEAP8[$330+1>>0]=(3>>8)&255;HEAP8[$330+2>>0]=(3>>16)&255;HEAP8[$330+3>>0]=3>>24;
    $331 = $context;
    $332 = ((($331)) + 146|0);
    HEAP8[$332>>0]=0&255;HEAP8[$332+1>>0]=(0>>8)&255;HEAP8[$332+2>>0]=(0>>16)&255;HEAP8[$332+3>>0]=0>>24;
    $379 = $result;
    STACKTOP = sp;return ($379|0);
   }
  }
  $333 = $context;
  $334 = ((($333)) + 146|0);
  HEAP8[$334>>0]=0&255;HEAP8[$334+1>>0]=(0>>8)&255;HEAP8[$334+2>>0]=(0>>16)&255;HEAP8[$334+3>>0]=0>>24;
  $335 = $c;
  $336 = (__is_newline_char($335)|0);
  $337 = ($336<<24>>24)!=(0);
  if (!($337)) {
   $379 = $result;
   STACKTOP = sp;return ($379|0);
  }
  $338 = $context;
  $339 = ((($338)) + 150|0);
  HEAP8[$339>>0]=0&255;HEAP8[$339+1>>0]=(0>>8)&255;HEAP8[$339+2>>0]=(0>>16)&255;HEAP8[$339+3>>0]=0>>24;
  $379 = $result;
  STACKTOP = sp;return ($379|0);
  break;
 }
 case 3:  {
  $340 = $c;
  $341 = (__is_eof_char($340)|0);
  $342 = ($341<<24>>24)!=(0);
  if ($342) {
   $343 = $context;
   $344 = ((($343)) + 150|0);
   HEAP8[$344>>0]=0&255;HEAP8[$344+1>>0]=(0>>8)&255;HEAP8[$344+2>>0]=(0>>16)&255;HEAP8[$344+3>>0]=0>>24;
   $379 = $result;
   STACKTOP = sp;return ($379|0);
  }
  $345 = $c;
  $346 = (__is_comment_char($345)|0);
  $347 = $346&255;
  $348 = ($347|0)!=(0);
  if ($348) {
   $349 = $context;
   $350 = ((($349)) + 146|0);
   $351 = HEAPU8[$350>>0]|(HEAPU8[$350+1>>0]<<8)|(HEAPU8[$350+2>>0]<<16)|(HEAPU8[$350+3>>0]<<24);
   $352 = ($351|0)==(0);
   if ($352) {
    $353 = $context;
    $354 = ((($353)) + 146|0);
    HEAP8[$354>>0]=1&255;HEAP8[$354+1>>0]=(1>>8)&255;HEAP8[$354+2>>0]=(1>>16)&255;HEAP8[$354+3>>0]=1>>24;
    $379 = $result;
    STACKTOP = sp;return ($379|0);
   }
  }
  $355 = $context;
  $356 = ((($355)) + 146|0);
  $357 = HEAPU8[$356>>0]|(HEAPU8[$356+1>>0]<<8)|(HEAPU8[$356+2>>0]<<16)|(HEAPU8[$356+3>>0]<<24);
  $358 = ($357|0)!=(0);
  if ($358) {
   $359 = $c;
   $360 = $359 << 24 >> 24;
   $361 = $context;
   $362 = ((($361)) + 146|0);
   $363 = HEAPU8[$362>>0]|(HEAPU8[$362+1>>0]<<8)|(HEAPU8[$362+2>>0]<<16)|(HEAPU8[$362+3>>0]<<24);
   $364 = (($363) + 1)|0;
   HEAP8[$362>>0]=$364&255;HEAP8[$362+1>>0]=($364>>8)&255;HEAP8[$362+2>>0]=($364>>16)&255;HEAP8[$362+3>>0]=$364>>24;
   $365 = (7915 + ($363)|0);
   $366 = HEAP8[$365>>0]|0;
   $367 = $366 << 24 >> 24;
   $368 = ($360|0)==($367|0);
   if ($368) {
    $369 = $context;
    $370 = ((($369)) + 146|0);
    $371 = HEAPU8[$370>>0]|(HEAPU8[$370+1>>0]<<8)|(HEAPU8[$370+2>>0]<<16)|(HEAPU8[$370+3>>0]<<24);
    $372 = ($371>>>0)>=(2);
    if (!($372)) {
     $379 = $result;
     STACKTOP = sp;return ($379|0);
    }
    $373 = $context;
    $374 = ((($373)) + 150|0);
    HEAP8[$374>>0]=0&255;HEAP8[$374+1>>0]=(0>>8)&255;HEAP8[$374+2>>0]=(0>>16)&255;HEAP8[$374+3>>0]=0>>24;
    $375 = $context;
    $376 = ((($375)) + 146|0);
    HEAP8[$376>>0]=0&255;HEAP8[$376+1>>0]=(0>>8)&255;HEAP8[$376+2>>0]=(0>>16)&255;HEAP8[$376+3>>0]=0>>24;
    $379 = $result;
    STACKTOP = sp;return ($379|0);
   }
  }
  $377 = $context;
  $378 = ((($377)) + 146|0);
  HEAP8[$378>>0]=0&255;HEAP8[$378+1>>0]=(0>>8)&255;HEAP8[$378+2>>0]=(0>>16)&255;HEAP8[$378+3>>0]=0>>24;
  $379 = $result;
  STACKTOP = sp;return ($379|0);
  break;
 }
 default: {
  ___assert_fail((7918|0),(4322|0),5997,(7894|0));
  // unreachable;
 }
 }
 return (0)|0;
}
function __end_of_file($context) {
 $context = $context|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $context;
 $1 = $0;
 $2 = ($1|0)!=(0|0);
 if (!($2)) {
  STACKTOP = sp;return;
 }
 $3 = $0;
 $4 = ((($3)) + 150|0);
 HEAP8[$4>>0]=0&255;HEAP8[$4+1>>0]=(0>>8)&255;HEAP8[$4+2>>0]=(0>>16)&255;HEAP8[$4+3>>0]=0>>24;
 STACKTOP = sp;return;
}
function __load_file127($s,$f,$prefix,$importing) {
 $s = $s|0;
 $f = $f|0;
 $prefix = $prefix|0;
 $importing = $importing|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $9 = 0, $b = 0, $buf = 0, $context = 0, $curpos = 0, $fp = 0, $i = 0, $l = 0, $off = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $off = sp + 4|0;
 $0 = $s;
 $1 = $f;
 $2 = $prefix;
 $3 = $importing;
 $fp = 0;
 $buf = 0;
 $curpos = 0;
 $l = 0;
 $i = 0;
 $context = 0;
 $4 = $0;
 $5 = ($4|0)!=(0|0);
 if (!($5)) {
  ___assert_fail((4803|0),(4322|0),4938,(6461|0));
  // unreachable;
 }
 $6 = $0;
 $7 = ((($6)) + 71|0);
 $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
 $context = $8;
 $9 = $context;
 $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
 $11 = $1;
 $12 = (__ls_find($10,$11,127,0)|0);
 $13 = ($12|0)!=(0|0);
 $14 = $1;
 if ($13) {
  $buf = $14;
  $85 = $buf;
  STACKTOP = sp;return ($85|0);
 }
 $15 = (_fopen($14,6472)|0);
 $fp = $15;
 $16 = $fp;
 $17 = ($16|0)!=(0|0);
 if (!($17)) {
  $85 = $buf;
  STACKTOP = sp;return ($85|0);
 }
 $18 = $3;
 $19 = ($18<<24>>24)!=(0);
 if ($19) {
  $20 = $1;
  $21 = $1;
  $22 = (_strlen($21)|0);
  $23 = (($22) + 1)|0;
  $24 = (_mb_strdup($20,$23)|0);
  $buf = $24;
  $25 = $context;
  $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
  $27 = $buf;
  (__ls_pushback($26,$27)|0);
  $buf = 0;
 }
 $28 = $fp;
 $29 = (_ftell($28)|0);
 $curpos = $29;
 $30 = $fp;
 (_fseek($30,0,2)|0);
 $31 = $fp;
 $32 = (_ftell($31)|0);
 $l = $32;
 $33 = $fp;
 $34 = $curpos;
 (_fseek($33,$34,0)|0);
 $35 = $2;
 $36 = ($35|0)!=(0|0);
 if ($36) {
  $37 = $2;
  $38 = (_strlen($37)|0);
  $i = $38;
  $39 = $i;
  $40 = $l;
  $41 = (($40) + ($39))|0;
  $l = $41;
 }
 $42 = $l;
 $43 = (($42) + 1)|0;
 $44 = (_mb_malloc($43)|0);
 $buf = $44;
 $45 = $buf;
 $46 = ($45|0)!=(0|0);
 if (!($46)) {
  ___assert_fail((6475|0),(4322|0),4962,(6461|0));
  // unreachable;
 }
 $47 = $2;
 $48 = ($47|0)!=(0|0);
 if ($48) {
  $49 = $buf;
  $50 = $2;
  $51 = $i;
  _memcpy(($49|0),($50|0),($51|0))|0;
 }
 $52 = $buf;
 $53 = $i;
 $54 = (($52) + ($53)|0);
 $55 = $l;
 $56 = $fp;
 (_fread($54,1,$55,$56)|0);
 $57 = $buf;
 $58 = $i;
 $59 = (($57) + ($58)|0);
 HEAP32[$off>>2] = $59;
 $60 = (_mb_uu_getbom($off)|0);
 $b = $60;
 $61 = $b;
 $62 = ($61|0)!=(0);
 if ($62) {
  $63 = $buf;
  $64 = $i;
  $65 = (($63) + ($64)|0);
  $66 = $buf;
  $67 = $i;
  $68 = (($66) + ($67)|0);
  $69 = $b;
  $70 = (($68) + ($69)|0);
  $71 = $l;
  $72 = $b;
  $73 = (($71) - ($72))|0;
  $74 = $i;
  $75 = (($73) - ($74))|0;
  _memmove(($65|0),($70|0),($75|0))|0;
  $76 = $l;
  $77 = $b;
  $78 = (($76) - ($77))|0;
  $79 = $buf;
  $80 = (($79) + ($78)|0);
  HEAP8[$80>>0] = 0;
 }
 $81 = $fp;
 (_fclose($81)|0);
 $82 = $l;
 $83 = $buf;
 $84 = (($83) + ($82)|0);
 HEAP8[$84>>0] = 0;
 $85 = $buf;
 STACKTOP = sp;return ($85|0);
}
function __execute_statement($s,$l,$force_next) {
 $s = $s|0;
 $l = $l|0;
 $force_next = $force_next|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0;
 var $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0;
 var $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0;
 var $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0;
 var $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0;
 var $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0;
 var $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0;
 var $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0;
 var $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0;
 var $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0;
 var $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0;
 var $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0;
 var $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0;
 var $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0;
 var $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0;
 var $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0;
 var $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;
 var $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $ast = 0, $end_of_ast = 0, $fn = 0, $obj = 0, $or$cond = 0, $or$cond11 = 0, $or$cond3 = 0;
 var $or$cond5 = 0, $or$cond7 = 0, $or$cond9 = 0, $pathed = 0, $result = 0, $ret = 0, $running = 0, $skip_to_eoi = 0, $sub_stack = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $result = sp + 28|0;
 $ast = sp + 24|0;
 $fn = sp + 4|0;
 $0 = $s;
 $1 = $l;
 $2 = $force_next;
 HEAP32[$result>>2] = 0;
 HEAP32[$ast>>2] = 0;
 $obj = 0;
 $running = 0;
 $sub_stack = 0;
 $skip_to_eoi = 1;
 $end_of_ast = 0;
 $3 = $0;
 $4 = ($3|0)!=(0|0);
 $5 = $1;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),11045,(4784|0));
  // unreachable;
 }
 $7 = $0;
 $8 = ((($7)) + 75|0);
 $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
 $running = $9;
 $10 = $0;
 $11 = ((($10)) + 102|0);
 $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
 $sub_stack = $12;
 $13 = $1;
 $14 = HEAP32[$13>>2]|0;
 HEAP32[$ast>>2] = $14;
 $15 = HEAP32[$ast>>2]|0;
 $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
 $obj = $16;
 $17 = $0;
 $18 = HEAP32[$ast>>2]|0;
 $19 = (__prev_stepped($17,$18)|0);
 HEAP32[$result>>2] = $19;
 $20 = HEAP32[$result>>2]|0;
 $21 = ($20|0)!=(0);
 L4: do {
  if (!($21)) {
   L5: while(1) {
    $22 = $obj;
    $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
    switch ($23|0) {
    case 10:  {
     label = 34;
     break L5;
     break;
    }
    case 4: case 3: case 2:  {
     label = 35;
     break L5;
     break;
    }
    case 16:  {
     label = 41;
     break L5;
     break;
    }
    case 17:  {
     label = 47;
     break L5;
     break;
    }
    case 20:  {
     label = 48;
     break L5;
     break;
    }
    case 21:  {
     label = 49;
     break L5;
     break;
    }
    case 8:  {
     $24 = $obj;
     $25 = ((($24)) + 4|0);
     $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
     $27 = ((($26)) + 4|0);
     $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
     $29 = (__is_binary($28)|0);
     $30 = ($29<<24>>24)!=(0);
     if ($30) {
      label = 6;
      break L5;
     }
     $62 = $obj;
     $63 = ((($62)) + 4|0);
     $64 = HEAPU8[$63>>0]|(HEAPU8[$63+1>>0]<<8)|(HEAPU8[$63+2>>0]<<16)|(HEAPU8[$63+3>>0]<<24);
     $65 = ((($64)) + 4|0);
     $66 = HEAPU8[$65>>0]|(HEAPU8[$65+1>>0]<<8)|(HEAPU8[$65+2>>0]<<16)|(HEAPU8[$65+3>>0]<<24);
     $67 = (__is_flow($66)|0);
     $68 = ($67<<24>>24)!=(0);
     if ($68) {
      $69 = $obj;
      $70 = ((($69)) + 4|0);
      $71 = HEAPU8[$70>>0]|(HEAPU8[$70+1>>0]<<8)|(HEAPU8[$70+2>>0]<<16)|(HEAPU8[$70+3>>0]<<24);
      $72 = ((($71)) + 4|0);
      $73 = HEAPU8[$72>>0]|(HEAPU8[$72+1>>0]<<8)|(HEAPU8[$72+2>>0]<<16)|(HEAPU8[$72+3>>0]<<24);
      $74 = $0;
      $75 = (FUNCTION_TABLE_iii[$73 & 255]($74,$ast)|0);
      HEAP32[$result>>2] = $75;
     } else {
      $76 = $0;
      $77 = ((($76)) + 126|0);
      $78 = HEAPU8[$77>>0]|(HEAPU8[$77+1>>0]<<8)|(HEAPU8[$77+2>>0]<<16)|(HEAPU8[$77+3>>0]<<24);
      $79 = $obj;
      $80 = ((($79)) + 4|0);
      $81 = HEAPU8[$80>>0]|(HEAPU8[$80+1>>0]<<8)|(HEAPU8[$80+2>>0]<<16)|(HEAPU8[$80+3>>0]<<24);
      $82 = HEAPU8[$81>>0]|(HEAPU8[$81+1>>0]<<8)|(HEAPU8[$81+2>>0]<<16)|(HEAPU8[$81+3>>0]<<24);
      (__ls_pushback($78,$82)|0);
      $83 = $obj;
      $84 = ((($83)) + 4|0);
      $85 = HEAPU8[$84>>0]|(HEAPU8[$84+1>>0]<<8)|(HEAPU8[$84+2>>0]<<16)|(HEAPU8[$84+3>>0]<<24);
      $86 = ((($85)) + 4|0);
      $87 = HEAPU8[$86>>0]|(HEAPU8[$86+1>>0]<<8)|(HEAPU8[$86+2>>0]<<16)|(HEAPU8[$86+3>>0]<<24);
      $88 = $0;
      $89 = (FUNCTION_TABLE_iii[$87 & 255]($88,$ast)|0);
      HEAP32[$result>>2] = $89;
      $90 = $0;
      $91 = ((($90)) + 126|0);
      $92 = HEAPU8[$91>>0]|(HEAPU8[$91+1>>0]<<8)|(HEAPU8[$91+2>>0]<<16)|(HEAPU8[$91+3>>0]<<24);
      (__ls_popback($92)|0);
      $93 = $0;
      $94 = $running;
      __mark_dangling_intermediate_value($93,$94);
     }
     $95 = HEAP32[$result>>2]|0;
     $96 = ($95|0)==(1);
     if (!($96)) {
      break L5;
     }
     HEAP32[$result>>2] = 0;
     $97 = HEAP32[$ast>>2]|0;
     $98 = HEAPU8[$97>>0]|(HEAPU8[$97+1>>0]<<8)|(HEAPU8[$97+2>>0]<<16)|(HEAPU8[$97+3>>0]<<24);
     $obj = $98;
     continue L5;
     break;
    }
    case 9:  {
     break;
    }
    default: {
     break L5;
    }
    }
    $99 = $obj;
    $100 = ((($99)) + 4|0);
    $101 = HEAPU8[$100>>0]|(HEAPU8[$100+1>>0]<<8)|(HEAPU8[$100+2>>0]<<16)|(HEAPU8[$100+3>>0]<<24);
    $102 = ((($101)) + 4|0);
    $103 = HEAPU8[$102>>0]|(HEAPU8[$102+1>>0]<<8)|(HEAPU8[$102+2>>0]<<16)|(HEAPU8[$102+3>>0]<<24);
    $104 = HEAPU8[$103>>0]|(HEAPU8[$103+1>>0]<<8)|(HEAPU8[$103+2>>0]<<16)|(HEAPU8[$103+3>>0]<<24);
    $105 = ($104|0)==(17);
    if ($105) {
     $106 = HEAP32[$ast>>2]|0;
     $107 = ($106|0)!=(0|0);
     if (!($107)) {
      label = 23;
      break;
     }
     $108 = HEAP32[$ast>>2]|0;
     $109 = ((($108)) + 8|0);
     $110 = HEAPU8[$109>>0]|(HEAPU8[$109+1>>0]<<8)|(HEAPU8[$109+2>>0]<<16)|(HEAPU8[$109+3>>0]<<24);
     $111 = ($110|0)!=(0|0);
     if (!($111)) {
      label = 23;
      break;
     }
     $112 = HEAP32[$ast>>2]|0;
     $113 = ((($112)) + 8|0);
     $114 = HEAPU8[$113>>0]|(HEAPU8[$113+1>>0]<<8)|(HEAPU8[$113+2>>0]<<16)|(HEAPU8[$113+3>>0]<<24);
     $115 = HEAPU8[$114>>0]|(HEAPU8[$114+1>>0]<<8)|(HEAPU8[$114+2>>0]<<16)|(HEAPU8[$114+3>>0]<<24);
     $116 = HEAPU8[$115>>0]|(HEAPU8[$115+1>>0]<<8)|(HEAPU8[$115+2>>0]<<16)|(HEAPU8[$115+3>>0]<<24);
     $117 = ($116|0)==(8);
     if (!($117)) {
      label = 23;
      break;
     }
     $118 = HEAP32[$ast>>2]|0;
     $119 = ((($118)) + 8|0);
     $120 = HEAPU8[$119>>0]|(HEAPU8[$119+1>>0]<<8)|(HEAPU8[$119+2>>0]<<16)|(HEAPU8[$119+3>>0]<<24);
     $121 = HEAPU8[$120>>0]|(HEAPU8[$120+1>>0]<<8)|(HEAPU8[$120+2>>0]<<16)|(HEAPU8[$120+3>>0]<<24);
     $122 = ((($121)) + 4|0);
     $123 = HEAPU8[$122>>0]|(HEAPU8[$122+1>>0]<<8)|(HEAPU8[$122+2>>0]<<16)|(HEAPU8[$122+3>>0]<<24);
     $124 = ((($123)) + 4|0);
     $125 = HEAPU8[$124>>0]|(HEAPU8[$124+1>>0]<<8)|(HEAPU8[$124+2>>0]<<16)|(HEAPU8[$124+3>>0]<<24);
     $126 = ($125|0)==(7|0);
     if (!($126)) {
      label = 23;
      break;
     }
     $127 = $obj;
     $128 = ((($127)) + 4|0);
     $129 = HEAPU8[$128>>0]|(HEAPU8[$128+1>>0]<<8)|(HEAPU8[$128+2>>0]<<16)|(HEAPU8[$128+3>>0]<<24);
     $130 = ((($129)) + 4|0);
     $131 = HEAPU8[$130>>0]|(HEAPU8[$130+1>>0]<<8)|(HEAPU8[$130+2>>0]<<16)|(HEAPU8[$130+3>>0]<<24);
     $obj = $131;
     continue;
    }
    $134 = $0;
    $135 = ((($134)) + 93|0);
    $136 = HEAPU8[$135>>0]|(HEAPU8[$135+1>>0]<<8)|(HEAPU8[$135+2>>0]<<16)|(HEAPU8[$135+3>>0]<<24);
    $137 = ($136|0)!=(0|0);
    if (!($137)) {
     $138 = $obj;
     $139 = ((($138)) + 4|0);
     $140 = HEAPU8[$139>>0]|(HEAPU8[$139+1>>0]<<8)|(HEAPU8[$139+2>>0]<<16)|(HEAPU8[$139+3>>0]<<24);
     $141 = ((($140)) + 8|0);
     $142 = HEAP8[$141>>0]|0;
     $143 = $142 & 3;
     $144 = $143&255;
     $145 = ($144|0)!=(0);
     if (!($145)) {
      label = 33;
      break;
     }
    }
    $146 = $0;
    $147 = $obj;
    $148 = ((($147)) + 4|0);
    $149 = HEAPU8[$148>>0]|(HEAPU8[$148+1>>0]<<8)|(HEAPU8[$148+2>>0]<<16)|(HEAPU8[$148+3>>0]<<24);
    $150 = HEAPU8[$149>>0]|(HEAPU8[$149+1>>0]<<8)|(HEAPU8[$149+2>>0]<<16)|(HEAPU8[$149+3>>0]<<24);
    $151 = $obj;
    $152 = ((($151)) + 4|0);
    $153 = HEAPU8[$152>>0]|(HEAPU8[$152+1>>0]<<8)|(HEAPU8[$152+2>>0]<<16)|(HEAPU8[$152+3>>0]<<24);
    $154 = ((($153)) + 8|0);
    $155 = HEAP8[$154>>0]|0;
    $156 = $155 & 3;
    $157 = ($156<<24>>24)!=(0);
    $158 = $157 ^ 1;
    $159 = $158 ^ 1;
    $160 = $159 ? 2 : 0;
    $161 = (__search_identifier_in_scope_chain($146,0,$150,$160,0,0)|0);
    $pathed = $161;
    $162 = $pathed;
    $163 = ($162|0)!=(0|0);
    if (!($163)) {
     label = 32;
     break;
    }
    $164 = $pathed;
    $165 = HEAPU8[$164>>0]|(HEAPU8[$164+1>>0]<<8)|(HEAPU8[$164+2>>0]<<16)|(HEAPU8[$164+3>>0]<<24);
    $166 = ($165|0)!=(0|0);
    if (!($166)) {
     label = 32;
     break;
    }
    $167 = $obj;
    $168 = $pathed;
    $169 = HEAPU8[$168>>0]|(HEAPU8[$168+1>>0]<<8)|(HEAPU8[$168+2>>0]<<16)|(HEAPU8[$168+3>>0]<<24);
    $170 = ($167|0)!=($169|0);
    $171 = $0;
    if (!($170)) {
     label = 31;
     break;
    }
    $172 = $obj;
    $173 = $pathed;
    $174 = (__try_call_func_on_usertype_ref($171,$ast,$172,$173,$result)|0);
    $175 = ($174<<24>>24)!=(0);
    if ($175) {
     break;
    }
    $176 = $pathed;
    $177 = HEAPU8[$176>>0]|(HEAPU8[$176+1>>0]<<8)|(HEAPU8[$176+2>>0]<<16)|(HEAPU8[$176+3>>0]<<24);
    $obj = $177;
   }
   switch (label|0) {
    case 6: {
     $31 = HEAP32[$ast>>2]|0;
     $32 = ($31|0)!=(0|0);
     if ($32) {
      $33 = HEAP32[$ast>>2]|0;
      $34 = HEAPU8[$33>>0]|(HEAPU8[$33+1>>0]<<8)|(HEAPU8[$33+2>>0]<<16)|(HEAPU8[$33+3>>0]<<24);
      $35 = ($34|0)!=(0|0);
      if ($35) {
       $36 = $0;
       $37 = $0;
       $38 = ((($37)) + 67|0);
       $39 = HEAPU8[$38>>0]|(HEAPU8[$38+1>>0]<<8)|(HEAPU8[$38+2>>0]<<16)|(HEAPU8[$38+3>>0]<<24);
       $40 = (__set_current_error($36,48,$39)|0);
       $41 = ($40<<24>>24)!=(0);
       if (!($41)) {
        break L4;
       }
       $42 = $0;
       $43 = HEAP32[$ast>>2]|0;
       $44 = HEAPU8[$43>>0]|(HEAPU8[$43+1>>0]<<8)|(HEAPU8[$43+2>>0]<<16)|(HEAPU8[$43+3>>0]<<24);
       $45 = ((($44)) + 9|0);
       $46 = HEAPU8[$45>>0]|(HEAPU8[$45+1>>0]<<8)|(HEAPU8[$45+2>>0]<<16)|(HEAPU8[$45+3>>0]<<24);
       $47 = HEAP32[$ast>>2]|0;
       $48 = HEAPU8[$47>>0]|(HEAPU8[$47+1>>0]<<8)|(HEAPU8[$47+2>>0]<<16)|(HEAPU8[$47+3>>0]<<24);
       $49 = ((($48)) + 13|0);
       $50 = HEAPU8[$49>>0]|(HEAPU8[$49+1>>0]<<8);
       $51 = HEAP32[$ast>>2]|0;
       $52 = HEAPU8[$51>>0]|(HEAPU8[$51+1>>0]<<8)|(HEAPU8[$51+2>>0]<<16)|(HEAPU8[$51+3>>0]<<24);
       $53 = ((($52)) + 15|0);
       $54 = HEAPU8[$53>>0]|(HEAPU8[$53+1>>0]<<8);
       __set_error_pos($42,$46,$50,$54);
       HEAP32[$result>>2] = 3;
       break L4;
      }
     }
     $55 = $0;
     $56 = $0;
     $57 = ((($56)) + 67|0);
     $58 = HEAPU8[$57>>0]|(HEAPU8[$57+1>>0]<<8)|(HEAPU8[$57+2>>0]<<16)|(HEAPU8[$57+3>>0]<<24);
     $59 = (__set_current_error($55,48,$58)|0);
     $60 = ($59<<24>>24)!=(0);
     if (!($60)) {
      break L4;
     }
     $61 = $0;
     __set_error_pos($61,0,0,0);
     HEAP32[$result>>2] = 3;
     break L4;
     break;
    }
    case 23: {
     $132 = $0;
     $133 = (__core_let($132,$ast)|0);
     HEAP32[$result>>2] = $133;
     break;
    }
    case 31: {
     $178 = (__core_let($171,$ast)|0);
     HEAP32[$result>>2] = $178;
     break;
    }
    case 32: {
     $179 = $0;
     $180 = (__core_let($179,$ast)|0);
     HEAP32[$result>>2] = $180;
     break;
    }
    case 33: {
     $181 = $0;
     $182 = (__core_let($181,$ast)|0);
     HEAP32[$result>>2] = $182;
     break;
    }
    case 34: {
     $183 = $0;
     $184 = (__core_let($183,$ast)|0);
     HEAP32[$result>>2] = $184;
     break;
    }
    case 35: {
     $185 = HEAP32[$ast>>2]|0;
     $186 = ($185|0)!=(0|0);
     if ($186) {
      $187 = HEAP32[$ast>>2]|0;
      $188 = HEAPU8[$187>>0]|(HEAPU8[$187+1>>0]<<8)|(HEAPU8[$187+2>>0]<<16)|(HEAPU8[$187+3>>0]<<24);
      $189 = ($188|0)!=(0|0);
      if ($189) {
       $190 = $0;
       $191 = $0;
       $192 = ((($191)) + 67|0);
       $193 = HEAPU8[$192>>0]|(HEAPU8[$192+1>>0]<<8)|(HEAPU8[$192+2>>0]<<16)|(HEAPU8[$192+3>>0]<<24);
       $194 = (__set_current_error($190,48,$193)|0);
       $195 = ($194<<24>>24)!=(0);
       if (!($195)) {
        break L4;
       }
       $196 = $0;
       $197 = HEAP32[$ast>>2]|0;
       $198 = HEAPU8[$197>>0]|(HEAPU8[$197+1>>0]<<8)|(HEAPU8[$197+2>>0]<<16)|(HEAPU8[$197+3>>0]<<24);
       $199 = ((($198)) + 9|0);
       $200 = HEAPU8[$199>>0]|(HEAPU8[$199+1>>0]<<8)|(HEAPU8[$199+2>>0]<<16)|(HEAPU8[$199+3>>0]<<24);
       $201 = HEAP32[$ast>>2]|0;
       $202 = HEAPU8[$201>>0]|(HEAPU8[$201+1>>0]<<8)|(HEAPU8[$201+2>>0]<<16)|(HEAPU8[$201+3>>0]<<24);
       $203 = ((($202)) + 13|0);
       $204 = HEAPU8[$203>>0]|(HEAPU8[$203+1>>0]<<8);
       $205 = HEAP32[$ast>>2]|0;
       $206 = HEAPU8[$205>>0]|(HEAPU8[$205+1>>0]<<8)|(HEAPU8[$205+2>>0]<<16)|(HEAPU8[$205+3>>0]<<24);
       $207 = ((($206)) + 15|0);
       $208 = HEAPU8[$207>>0]|(HEAPU8[$207+1>>0]<<8);
       __set_error_pos($196,$200,$204,$208);
       HEAP32[$result>>2] = 3;
       break L4;
      }
     }
     $209 = $0;
     $210 = $0;
     $211 = ((($210)) + 67|0);
     $212 = HEAPU8[$211>>0]|(HEAPU8[$211+1>>0]<<8)|(HEAPU8[$211+2>>0]<<16)|(HEAPU8[$211+3>>0]<<24);
     $213 = (__set_current_error($209,48,$212)|0);
     $214 = ($213<<24>>24)!=(0);
     if (!($214)) {
      break L4;
     }
     $215 = $0;
     __set_error_pos($215,0,0,0);
     HEAP32[$result>>2] = 3;
     break L4;
     break;
    }
    case 41: {
     $216 = HEAP32[$ast>>2]|0;
     $217 = ($216|0)!=(0|0);
     if ($217) {
      $218 = HEAP32[$ast>>2]|0;
      $219 = HEAPU8[$218>>0]|(HEAPU8[$218+1>>0]<<8)|(HEAPU8[$218+2>>0]<<16)|(HEAPU8[$218+3>>0]<<24);
      $220 = ($219|0)!=(0|0);
      if ($220) {
       $221 = $0;
       $222 = $0;
       $223 = ((($222)) + 67|0);
       $224 = HEAPU8[$223>>0]|(HEAPU8[$223+1>>0]<<8)|(HEAPU8[$223+2>>0]<<16)|(HEAPU8[$223+3>>0]<<24);
       $225 = (__set_current_error($221,48,$224)|0);
       $226 = ($225<<24>>24)!=(0);
       if (!($226)) {
        break L4;
       }
       $227 = $0;
       $228 = HEAP32[$ast>>2]|0;
       $229 = HEAPU8[$228>>0]|(HEAPU8[$228+1>>0]<<8)|(HEAPU8[$228+2>>0]<<16)|(HEAPU8[$228+3>>0]<<24);
       $230 = ((($229)) + 9|0);
       $231 = HEAPU8[$230>>0]|(HEAPU8[$230+1>>0]<<8)|(HEAPU8[$230+2>>0]<<16)|(HEAPU8[$230+3>>0]<<24);
       $232 = HEAP32[$ast>>2]|0;
       $233 = HEAPU8[$232>>0]|(HEAPU8[$232+1>>0]<<8)|(HEAPU8[$232+2>>0]<<16)|(HEAPU8[$232+3>>0]<<24);
       $234 = ((($233)) + 13|0);
       $235 = HEAPU8[$234>>0]|(HEAPU8[$234+1>>0]<<8);
       $236 = HEAP32[$ast>>2]|0;
       $237 = HEAPU8[$236>>0]|(HEAPU8[$236+1>>0]<<8)|(HEAPU8[$236+2>>0]<<16)|(HEAPU8[$236+3>>0]<<24);
       $238 = ((($237)) + 15|0);
       $239 = HEAPU8[$238>>0]|(HEAPU8[$238+1>>0]<<8);
       __set_error_pos($227,$231,$235,$239);
       HEAP32[$result>>2] = 3;
       break L4;
      }
     }
     $240 = $0;
     $241 = $0;
     $242 = ((($241)) + 67|0);
     $243 = HEAPU8[$242>>0]|(HEAPU8[$242+1>>0]<<8)|(HEAPU8[$242+2>>0]<<16)|(HEAPU8[$242+3>>0]<<24);
     $244 = (__set_current_error($240,48,$243)|0);
     $245 = ($244<<24>>24)!=(0);
     if (!($245)) {
      break L4;
     }
     $246 = $0;
     __set_error_pos($246,0,0,0);
     HEAP32[$result>>2] = 3;
     break L4;
     break;
    }
    case 47: {
     $247 = HEAP32[$ast>>2]|0;
     $248 = ((($247)) + 4|0);
     $249 = HEAPU8[$248>>0]|(HEAPU8[$248+1>>0]<<8)|(HEAPU8[$248+2>>0]<<16)|(HEAPU8[$248+3>>0]<<24);
     HEAP32[$ast>>2] = $249;
     $250 = $0;
     $251 = (__core_call($250,$ast)|0);
     HEAP32[$result>>2] = $251;
     $252 = $0;
     $253 = $running;
     __mark_dangling_intermediate_value($252,$253);
     break;
    }
    case 48: {
     $254 = $obj;
     $255 = ((($254)) + 4|0);
     $256 = HEAPU8[$255>>0]|(HEAPU8[$255+1>>0]<<8)|(HEAPU8[$255+2>>0]<<16)|(HEAPU8[$255+3>>0]<<24);
     $257 = HEAPU8[$256>>0]|(HEAPU8[$256+1>>0]<<8)|(HEAPU8[$256+2>>0]<<16)|(HEAPU8[$256+3>>0]<<24);
     $258 = $0;
     $259 = ((($258)) + 67|0);
     HEAP8[$259>>0]=$257&255;HEAP8[$259+1>>0]=($257>>8)&255;HEAP8[$259+2>>0]=($257>>16)&255;HEAP8[$259+3>>0]=$257>>24;
     break;
    }
    case 49: {
     $260 = $obj;
     $261 = ((($260)) + 4|0);
     $262 = HEAPU8[$261>>0]|(HEAPU8[$261+1>>0]<<8)|(HEAPU8[$261+2>>0]<<16)|(HEAPU8[$261+3>>0]<<24);
     $263 = HEAPU8[$262>>0]|(HEAPU8[$262+1>>0]<<8)|(HEAPU8[$262+2>>0]<<16)|(HEAPU8[$262+3>>0]<<24);
     $264 = $0;
     $265 = ((($264)) + 67|0);
     HEAP8[$265>>0]=$263&255;HEAP8[$265+1>>0]=($263>>8)&255;HEAP8[$265+2>>0]=($263>>16)&255;HEAP8[$265+3>>0]=$263>>24;
     break;
    }
   }
   $266 = $0;
   $267 = ((($266)) + 110|0);
   $268 = HEAPU8[$267>>0]|(HEAPU8[$267+1>>0]<<8)|(HEAPU8[$267+2>>0]<<16)|(HEAPU8[$267+3>>0]<<24);
   $269 = ($268|0)!=(0);
   if ($269) {
    $270 = $0;
    $271 = ((($270)) + 110|0);
    $272 = HEAPU8[$271>>0]|(HEAPU8[$271+1>>0]<<8)|(HEAPU8[$271+2>>0]<<16)|(HEAPU8[$271+3>>0]<<24);
    $273 = ($272|0)==(5);
    if ($273) {
     $274 = $0;
     (_mb_suspend($274,$ast)|0);
    }
    $275 = $0;
    $276 = ((($275)) + 110|0);
    $277 = HEAPU8[$276>>0]|(HEAPU8[$276+1>>0]<<8)|(HEAPU8[$276+2>>0]<<16)|(HEAPU8[$276+3>>0]<<24);
    HEAP32[$result>>2] = $277;
    $278 = $0;
    $279 = ((($278)) + 110|0);
    HEAP8[$279>>0]=0&255;HEAP8[$279+1>>0]=(0>>8)&255;HEAP8[$279+2>>0]=(0>>16)&255;HEAP8[$279+3>>0]=0>>24;
   }
   $280 = HEAP32[$result>>2]|0;
   $281 = ($280|0)!=(0);
   $282 = HEAP32[$result>>2]|0;
   $283 = ($282|0)!=(5);
   $or$cond3 = $281 & $283;
   $284 = HEAP32[$result>>2]|0;
   $285 = ($284|0)!=(103);
   $or$cond5 = $or$cond3 & $285;
   if (!($or$cond5)) {
    $286 = HEAP32[$ast>>2]|0;
    $287 = ($286|0)!=(0|0);
    L68: do {
     if ($287) {
      $288 = HEAP32[$ast>>2]|0;
      $289 = $0;
      $290 = ((($289)) + 17|0);
      $291 = HEAPU8[$290>>0]|(HEAPU8[$290+1>>0]<<8)|(HEAPU8[$290+2>>0]<<16)|(HEAPU8[$290+3>>0]<<24);
      $292 = ($288|0)!=($291|0);
      if ($292) {
       $293 = HEAP32[$ast>>2]|0;
       $294 = ($293|0)!=(0|0);
       if ($294) {
        $295 = HEAP32[$ast>>2]|0;
        $296 = HEAPU8[$295>>0]|(HEAPU8[$295+1>>0]<<8)|(HEAPU8[$295+2>>0]<<16)|(HEAPU8[$295+3>>0]<<24);
        $297 = $296;
       } else {
        $297 = 0;
       }
       $obj = $297;
       $298 = $obj;
       $299 = ($298|0)!=(0|0);
       if ($299) {
        $300 = $obj;
        $301 = ($300|0)!=(0|0);
        if ($301) {
         $302 = $obj;
         $303 = HEAPU8[$302>>0]|(HEAPU8[$302+1>>0]<<8)|(HEAPU8[$302+2>>0]<<16)|(HEAPU8[$302+3>>0]<<24);
         $304 = ($303|0)==(22);
         if ($304) {
          $305 = $2;
          $306 = $305&255;
          $307 = ($306|0)!=(0);
          $308 = HEAP32[$result>>2]|0;
          $309 = ($308|0)!=(103);
          $or$cond7 = $307 | $309;
          if (!($or$cond7)) {
           break;
          }
          $310 = HEAP32[$ast>>2]|0;
          $311 = ((($310)) + 8|0);
          $312 = HEAPU8[$311>>0]|(HEAPU8[$311+1>>0]<<8)|(HEAPU8[$311+2>>0]<<16)|(HEAPU8[$311+3>>0]<<24);
          HEAP32[$ast>>2] = $312;
          break;
         }
        }
        $313 = $obj;
        $314 = HEAPU8[$313>>0]|(HEAPU8[$313+1>>0]<<8)|(HEAPU8[$313+2>>0]<<16)|(HEAPU8[$313+3>>0]<<24);
        $315 = ($314|0)==(19);
        if ($315) {
         $316 = $obj;
         $317 = ((($316)) + 4|0);
         $318 = HEAP8[$317>>0]|0;
         $319 = $318 << 24 >> 24;
         $320 = ($319|0)==(58);
         if ($320) {
          $skip_to_eoi = 0;
          $321 = HEAP32[$ast>>2]|0;
          $322 = ((($321)) + 8|0);
          $323 = HEAPU8[$322>>0]|(HEAPU8[$322+1>>0]<<8)|(HEAPU8[$322+2>>0]<<16)|(HEAPU8[$322+3>>0]<<24);
          HEAP32[$ast>>2] = $323;
          break;
         }
        }
        $324 = $obj;
        $325 = ($324|0)!=(0|0);
        if ($325) {
         $326 = $obj;
         $327 = HEAPU8[$326>>0]|(HEAPU8[$326+1>>0]<<8)|(HEAPU8[$326+2>>0]<<16)|(HEAPU8[$326+3>>0]<<24);
         $328 = ($327|0)==(9);
         if ($328) {
          HEAP32[$fn>>2] = 0;
          $329 = $0;
          $330 = $obj;
          $331 = ((($330)) + 4|0);
          $332 = HEAPU8[$331>>0]|(HEAPU8[$331+1>>0]<<8)|(HEAPU8[$331+2>>0]<<16)|(HEAPU8[$331+3>>0]<<24);
          $333 = HEAP32[$ast>>2]|0;
          $334 = (__is_valid_class_accessor_following_routine($329,$332,$333,$fn)|0);
          $335 = ($334<<24>>24)!=(0);
          if (!($335)) {
           $376 = HEAP32[$ast>>2]|0;
           $377 = ($376|0)!=(0|0);
           if ($377) {
            $378 = HEAP32[$ast>>2]|0;
            $379 = HEAPU8[$378>>0]|(HEAPU8[$378+1>>0]<<8)|(HEAPU8[$378+2>>0]<<16)|(HEAPU8[$378+3>>0]<<24);
            $380 = ($379|0)!=(0|0);
            if ($380) {
             $381 = $0;
             $382 = $0;
             $383 = ((($382)) + 67|0);
             $384 = HEAPU8[$383>>0]|(HEAPU8[$383+1>>0]<<8)|(HEAPU8[$383+2>>0]<<16)|(HEAPU8[$383+3>>0]<<24);
             $385 = (__set_current_error($381,30,$384)|0);
             $386 = ($385<<24>>24)!=(0);
             if (!($386)) {
              break L4;
             }
             $387 = $0;
             $388 = HEAP32[$ast>>2]|0;
             $389 = HEAPU8[$388>>0]|(HEAPU8[$388+1>>0]<<8)|(HEAPU8[$388+2>>0]<<16)|(HEAPU8[$388+3>>0]<<24);
             $390 = ((($389)) + 9|0);
             $391 = HEAPU8[$390>>0]|(HEAPU8[$390+1>>0]<<8)|(HEAPU8[$390+2>>0]<<16)|(HEAPU8[$390+3>>0]<<24);
             $392 = HEAP32[$ast>>2]|0;
             $393 = HEAPU8[$392>>0]|(HEAPU8[$392+1>>0]<<8)|(HEAPU8[$392+2>>0]<<16)|(HEAPU8[$392+3>>0]<<24);
             $394 = ((($393)) + 13|0);
             $395 = HEAPU8[$394>>0]|(HEAPU8[$394+1>>0]<<8);
             $396 = HEAP32[$ast>>2]|0;
             $397 = HEAPU8[$396>>0]|(HEAPU8[$396+1>>0]<<8)|(HEAPU8[$396+2>>0]<<16)|(HEAPU8[$396+3>>0]<<24);
             $398 = ((($397)) + 15|0);
             $399 = HEAPU8[$398>>0]|(HEAPU8[$398+1>>0]<<8);
             __set_error_pos($387,$391,$395,$399);
             HEAP32[$result>>2] = 3;
             break L4;
            }
           }
           $400 = $0;
           $401 = $0;
           $402 = ((($401)) + 67|0);
           $403 = HEAPU8[$402>>0]|(HEAPU8[$402+1>>0]<<8)|(HEAPU8[$402+2>>0]<<16)|(HEAPU8[$402+3>>0]<<24);
           $404 = (__set_current_error($400,30,$403)|0);
           $405 = ($404<<24>>24)!=(0);
           if (!($405)) {
            break L4;
           }
           $406 = $0;
           __set_error_pos($406,0,0,0);
           HEAP32[$result>>2] = 3;
           break L4;
          }
          $336 = HEAP32[$fn>>2]|0;
          $337 = ($336|0)!=(0|0);
          if ($337) {
           $338 = $0;
           $339 = ((($338)) + 97|0);
           $340 = HEAP8[$339>>0]|0;
           $341 = $340 & 1;
           $342 = ($341<<24>>24)!=(0);
           if (!($342)) {
            break;
           }
           $343 = $0;
           $344 = (__core_let($343,$ast)|0);
           HEAP32[$result>>2] = $344;
           break;
          }
          $345 = HEAP32[$ast>>2]|0;
          $346 = ($345|0)!=(0|0);
          if ($346) {
           $347 = HEAP32[$ast>>2]|0;
           $348 = HEAPU8[$347>>0]|(HEAPU8[$347+1>>0]<<8)|(HEAPU8[$347+2>>0]<<16)|(HEAPU8[$347+3>>0]<<24);
           $349 = ($348|0)!=(0|0);
           if ($349) {
            $350 = $0;
            $351 = $0;
            $352 = ((($351)) + 67|0);
            $353 = HEAPU8[$352>>0]|(HEAPU8[$352+1>>0]<<8)|(HEAPU8[$352+2>>0]<<16)|(HEAPU8[$352+3>>0]<<24);
            $354 = (__set_current_error($350,24,$353)|0);
            $355 = ($354<<24>>24)!=(0);
            if (!($355)) {
             break L4;
            }
            $356 = $0;
            $357 = HEAP32[$ast>>2]|0;
            $358 = HEAPU8[$357>>0]|(HEAPU8[$357+1>>0]<<8)|(HEAPU8[$357+2>>0]<<16)|(HEAPU8[$357+3>>0]<<24);
            $359 = ((($358)) + 9|0);
            $360 = HEAPU8[$359>>0]|(HEAPU8[$359+1>>0]<<8)|(HEAPU8[$359+2>>0]<<16)|(HEAPU8[$359+3>>0]<<24);
            $361 = HEAP32[$ast>>2]|0;
            $362 = HEAPU8[$361>>0]|(HEAPU8[$361+1>>0]<<8)|(HEAPU8[$361+2>>0]<<16)|(HEAPU8[$361+3>>0]<<24);
            $363 = ((($362)) + 13|0);
            $364 = HEAPU8[$363>>0]|(HEAPU8[$363+1>>0]<<8);
            $365 = HEAP32[$ast>>2]|0;
            $366 = HEAPU8[$365>>0]|(HEAPU8[$365+1>>0]<<8)|(HEAPU8[$365+2>>0]<<16)|(HEAPU8[$365+3>>0]<<24);
            $367 = ((($366)) + 15|0);
            $368 = HEAPU8[$367>>0]|(HEAPU8[$367+1>>0]<<8);
            __set_error_pos($356,$360,$364,$368);
            HEAP32[$result>>2] = 3;
            break L4;
           }
          }
          $369 = $0;
          $370 = $0;
          $371 = ((($370)) + 67|0);
          $372 = HEAPU8[$371>>0]|(HEAPU8[$371+1>>0]<<8)|(HEAPU8[$371+2>>0]<<16)|(HEAPU8[$371+3>>0]<<24);
          $373 = (__set_current_error($369,24,$372)|0);
          $374 = ($373<<24>>24)!=(0);
          if (!($374)) {
           break L4;
          }
          $375 = $0;
          __set_error_pos($375,0,0,0);
          HEAP32[$result>>2] = 3;
          break L4;
         }
        }
        $407 = $obj;
        $408 = HEAPU8[$407>>0]|(HEAPU8[$407+1>>0]<<8)|(HEAPU8[$407+2>>0]<<16)|(HEAPU8[$407+3>>0]<<24);
        $409 = ($408|0)==(8);
        if ($409) {
         $410 = $obj;
         $411 = ((($410)) + 4|0);
         $412 = HEAPU8[$411>>0]|(HEAPU8[$411+1>>0]<<8)|(HEAPU8[$411+2>>0]<<16)|(HEAPU8[$411+3>>0]<<24);
         $413 = ((($412)) + 4|0);
         $414 = HEAPU8[$413>>0]|(HEAPU8[$413+1>>0]<<8)|(HEAPU8[$413+2>>0]<<16)|(HEAPU8[$413+3>>0]<<24);
         $415 = ($414|0)==(43|0);
         $416 = HEAP32[$result>>2]|0;
         $417 = ($416|0)!=(103);
         $or$cond9 = $415 & $417;
         if ($or$cond9) {
          $418 = $sub_stack;
          $419 = (__ls_popback($418)|0);
          HEAP32[$ast>>2] = $419;
          break;
         }
        }
        $420 = $obj;
        $421 = ($420|0)!=(0|0);
        if ($421) {
         $422 = $obj;
         $423 = HEAPU8[$422>>0]|(HEAPU8[$422+1>>0]<<8)|(HEAPU8[$422+2>>0]<<16)|(HEAPU8[$422+3>>0]<<24);
         $424 = ($423|0)==(8);
         if ($424) {
          $425 = $obj;
          $426 = ((($425)) + 4|0);
          $427 = HEAPU8[$426>>0]|(HEAPU8[$426+1>>0]<<8)|(HEAPU8[$426+2>>0]<<16)|(HEAPU8[$426+3>>0]<<24);
          $428 = ((($427)) + 4|0);
          $429 = HEAPU8[$428>>0]|(HEAPU8[$428+1>>0]<<8)|(HEAPU8[$428+2>>0]<<16)|(HEAPU8[$428+3>>0]<<24);
          $430 = ($429|0)==(8|0);
          if ($430) {
           $431 = $0;
           $432 = ((($431)) + 98|0);
           $433 = HEAPU8[$432>>0]|(HEAPU8[$432+1>>0]<<8)|(HEAPU8[$432+2>>0]<<16)|(HEAPU8[$432+3>>0]<<24);
           $434 = ($433|0)!=(0|0);
           if ($434) {
            $435 = $0;
            $436 = ((($435)) + 98|0);
            $437 = HEAPU8[$436>>0]|(HEAPU8[$436+1>>0]<<8)|(HEAPU8[$436+2>>0]<<16)|(HEAPU8[$436+3>>0]<<24);
            $438 = ((($437)) + 58|0);
            $439 = HEAPU8[$438>>0]|(HEAPU8[$438+1>>0]<<8)|(HEAPU8[$438+2>>0]<<16)|(HEAPU8[$438+3>>0]<<24);
            $440 = ($439|0)==(2);
            if ($440) {
             break;
            }
           }
          }
         }
        }
        $441 = $obj;
        $442 = ($441|0)!=(0|0);
        do {
         if ($442) {
          $443 = $obj;
          $444 = HEAPU8[$443>>0]|(HEAPU8[$443+1>>0]<<8)|(HEAPU8[$443+2>>0]<<16)|(HEAPU8[$443+3>>0]<<24);
          $445 = ($444|0)==(8);
          if ($445) {
           $446 = $obj;
           $447 = ((($446)) + 4|0);
           $448 = HEAPU8[$447>>0]|(HEAPU8[$447+1>>0]<<8)|(HEAPU8[$447+2>>0]<<16)|(HEAPU8[$447+3>>0]<<24);
           $449 = ((($448)) + 4|0);
           $450 = HEAPU8[$449>>0]|(HEAPU8[$449+1>>0]<<8)|(HEAPU8[$449+2>>0]<<16)|(HEAPU8[$449+3>>0]<<24);
           $451 = (__is_operator($450)|0);
           $452 = $451&255;
           $453 = ($452|0)!=(0);
           if (!($453)) {
            $454 = $obj;
            $455 = ((($454)) + 4|0);
            $456 = HEAPU8[$455>>0]|(HEAPU8[$455+1>>0]<<8)|(HEAPU8[$455+2>>0]<<16)|(HEAPU8[$455+3>>0]<<24);
            $457 = ((($456)) + 4|0);
            $458 = HEAPU8[$457>>0]|(HEAPU8[$457+1>>0]<<8)|(HEAPU8[$457+2>>0]<<16)|(HEAPU8[$457+3>>0]<<24);
            $459 = (__is_flow($458)|0);
            $460 = $459&255;
            $461 = ($460|0)!=(0);
            if (!($461)) {
             break;
            }
           }
           $462 = HEAP32[$ast>>2]|0;
           $463 = ((($462)) + 8|0);
           $464 = HEAPU8[$463>>0]|(HEAPU8[$463+1>>0]<<8)|(HEAPU8[$463+2>>0]<<16)|(HEAPU8[$463+3>>0]<<24);
           HEAP32[$ast>>2] = $464;
           break L68;
          }
         }
        } while(0);
        $465 = $obj;
        $466 = ($465|0)!=(0|0);
        if ($466) {
         $467 = $obj;
         $468 = HEAPU8[$467>>0]|(HEAPU8[$467+1>>0]<<8)|(HEAPU8[$467+2>>0]<<16)|(HEAPU8[$467+3>>0]<<24);
         $469 = ($468|0)==(8);
         if ($469) {
          break;
         }
        }
        $470 = $obj;
        $471 = ($470|0)!=(0|0);
        if ($471) {
         $472 = $obj;
         $473 = HEAPU8[$472>>0]|(HEAPU8[$472+1>>0]<<8)|(HEAPU8[$472+2>>0]<<16)|(HEAPU8[$472+3>>0]<<24);
         $474 = ($473|0)!=(8);
         if ($474) {
          $475 = HEAP32[$ast>>2]|0;
          $476 = ((($475)) + 8|0);
          $477 = HEAPU8[$476>>0]|(HEAPU8[$476+1>>0]<<8)|(HEAPU8[$476+2>>0]<<16)|(HEAPU8[$476+3>>0]<<24);
          HEAP32[$ast>>2] = $477;
          break;
         }
        }
        $478 = HEAP32[$ast>>2]|0;
        $479 = ($478|0)!=(0|0);
        do {
         if ($479) {
          $480 = HEAP32[$ast>>2]|0;
          $481 = HEAPU8[$480>>0]|(HEAPU8[$480+1>>0]<<8)|(HEAPU8[$480+2>>0]<<16)|(HEAPU8[$480+3>>0]<<24);
          $482 = ($481|0)!=(0|0);
          if (!($482)) {
           break;
          }
          $483 = $0;
          $484 = $0;
          $485 = ((($484)) + 67|0);
          $486 = HEAPU8[$485>>0]|(HEAPU8[$485+1>>0]<<8)|(HEAPU8[$485+2>>0]<<16)|(HEAPU8[$485+3>>0]<<24);
          $487 = (__set_current_error($483,30,$486)|0);
          $488 = ($487<<24>>24)!=(0);
          if (!($488)) {
           break L4;
          }
          $489 = $0;
          $490 = HEAP32[$ast>>2]|0;
          $491 = HEAPU8[$490>>0]|(HEAPU8[$490+1>>0]<<8)|(HEAPU8[$490+2>>0]<<16)|(HEAPU8[$490+3>>0]<<24);
          $492 = ((($491)) + 9|0);
          $493 = HEAPU8[$492>>0]|(HEAPU8[$492+1>>0]<<8)|(HEAPU8[$492+2>>0]<<16)|(HEAPU8[$492+3>>0]<<24);
          $494 = HEAP32[$ast>>2]|0;
          $495 = HEAPU8[$494>>0]|(HEAPU8[$494+1>>0]<<8)|(HEAPU8[$494+2>>0]<<16)|(HEAPU8[$494+3>>0]<<24);
          $496 = ((($495)) + 13|0);
          $497 = HEAPU8[$496>>0]|(HEAPU8[$496+1>>0]<<8);
          $498 = HEAP32[$ast>>2]|0;
          $499 = HEAPU8[$498>>0]|(HEAPU8[$498+1>>0]<<8)|(HEAPU8[$498+2>>0]<<16)|(HEAPU8[$498+3>>0]<<24);
          $500 = ((($499)) + 15|0);
          $501 = HEAPU8[$500>>0]|(HEAPU8[$500+1>>0]<<8);
          __set_error_pos($489,$493,$497,$501);
          HEAP32[$result>>2] = 3;
          break L4;
         }
        } while(0);
        $502 = $0;
        $503 = $0;
        $504 = ((($503)) + 67|0);
        $505 = HEAPU8[$504>>0]|(HEAPU8[$504+1>>0]<<8)|(HEAPU8[$504+2>>0]<<16)|(HEAPU8[$504+3>>0]<<24);
        $506 = (__set_current_error($502,30,$505)|0);
        $507 = ($506<<24>>24)!=(0);
        if (!($507)) {
         break L4;
        }
        $508 = $0;
        __set_error_pos($508,0,0,0);
        HEAP32[$result>>2] = 3;
        break L4;
       }
      }
     }
    } while(0);
    $509 = $skip_to_eoi;
    $510 = $509&255;
    $511 = ($510|0)!=(0);
    if ($511) {
     $512 = $0;
     $513 = ((($512)) + 118|0);
     $514 = HEAPU8[$513>>0]|(HEAPU8[$513+1>>0]<<8)|(HEAPU8[$513+2>>0]<<16)|(HEAPU8[$513+3>>0]<<24);
     $515 = ($514|0)!=(0|0);
     if ($515) {
      $516 = $0;
      $517 = ((($516)) + 118|0);
      $518 = HEAPU8[$517>>0]|(HEAPU8[$517+1>>0]<<8)|(HEAPU8[$517+2>>0]<<16)|(HEAPU8[$517+3>>0]<<24);
      $519 = $0;
      $520 = ((($519)) + 102|0);
      $521 = HEAPU8[$520>>0]|(HEAPU8[$520+1>>0]<<8)|(HEAPU8[$520+2>>0]<<16)|(HEAPU8[$520+3>>0]<<24);
      $522 = (__ls_back($521)|0);
      $523 = ($518|0)==($522|0);
      if ($523) {
       $524 = $0;
       $525 = ((($524)) + 118|0);
       HEAP8[$525>>0]=0&255;HEAP8[$525+1>>0]=(0>>8)&255;HEAP8[$525+2>>0]=(0>>16)&255;HEAP8[$525+3>>0]=0>>24;
       $526 = HEAP32[$ast>>2]|0;
       $527 = HEAPU8[$526>>0]|(HEAPU8[$526+1>>0]<<8)|(HEAPU8[$526+2>>0]<<16)|(HEAPU8[$526+3>>0]<<24);
       $obj = $527;
       $528 = $obj;
       $529 = ($528|0)!=(0|0);
       if ($529) {
        $530 = $obj;
        $531 = HEAPU8[$530>>0]|(HEAPU8[$530+1>>0]<<8)|(HEAPU8[$530+2>>0]<<16)|(HEAPU8[$530+3>>0]<<24);
        $532 = ($531|0)==(22);
        if ($532) {
         break;
        }
       }
       $533 = $0;
       $534 = (__skip_to($533,$ast,0,22)|0);
       HEAP32[$result>>2] = $534;
      }
     }
    }
   }
  }
 } while(0);
 $535 = $0;
 __destroy_lazy_objects($535);
 $536 = HEAP32[$ast>>2]|0;
 $537 = $1;
 HEAP32[$537>>2] = $536;
 $538 = HEAP32[$ast>>2]|0;
 $539 = ($538|0)!=(0|0);
 if (!($539)) {
  $540 = $0;
  $541 = ((($540)) + 17|0);
  $542 = HEAPU8[$541>>0]|(HEAPU8[$541+1>>0]<<8)|(HEAPU8[$541+2>>0]<<16)|(HEAPU8[$541+3>>0]<<24);
  $543 = (__ls_back($542)|0);
  HEAP32[$ast>>2] = $543;
  $end_of_ast = 1;
 }
 $544 = HEAP32[$ast>>2]|0;
 $545 = $0;
 $546 = ((($545)) + 17|0);
 $547 = HEAPU8[$546>>0]|(HEAPU8[$546+1>>0]<<8)|(HEAPU8[$546+2>>0]<<16)|(HEAPU8[$546+3>>0]<<24);
 $548 = ($544|0)==($547|0);
 if ($548) {
  $549 = HEAP32[$ast>>2]|0;
  $550 = ((($549)) + 8|0);
  $551 = HEAPU8[$550>>0]|(HEAPU8[$550+1>>0]<<8)|(HEAPU8[$550+2>>0]<<16)|(HEAPU8[$550+3>>0]<<24);
  $552 = $1;
  HEAP32[$552>>2] = $551;
  $572 = HEAP32[$result>>2]|0;
  STACKTOP = sp;return ($572|0);
 }
 $553 = $0;
 $554 = HEAP32[$ast>>2]|0;
 $555 = (__post_stepped($553,$554)|0);
 $ret = $555;
 $556 = HEAP32[$result>>2]|0;
 $557 = ($556|0)==(0);
 if ($557) {
  $558 = $ret;
  HEAP32[$result>>2] = $558;
 }
 $559 = $end_of_ast;
 $560 = $559&255;
 $561 = ($560|0)!=(0);
 $562 = HEAP32[$ast>>2]|0;
 $563 = ($562|0)!=(0|0);
 $or$cond11 = $561 & $563;
 if (!($or$cond11)) {
  $572 = HEAP32[$result>>2]|0;
  STACKTOP = sp;return ($572|0);
 }
 $564 = HEAP32[$ast>>2]|0;
 $565 = ((($564)) + 8|0);
 $566 = HEAPU8[$565>>0]|(HEAPU8[$565+1>>0]<<8)|(HEAPU8[$565+2>>0]<<16)|(HEAPU8[$565+3>>0]<<24);
 $567 = ($566|0)!=(0|0);
 if (!($567)) {
  $572 = HEAP32[$result>>2]|0;
  STACKTOP = sp;return ($572|0);
 }
 $568 = HEAP32[$ast>>2]|0;
 $569 = ((($568)) + 8|0);
 $570 = HEAPU8[$569>>0]|(HEAPU8[$569+1>>0]<<8)|(HEAPU8[$569+2>>0]<<16)|(HEAPU8[$569+3>>0]<<24);
 $571 = $1;
 HEAP32[$571>>2] = $570;
 $572 = HEAP32[$result>>2]|0;
 STACKTOP = sp;return ($572|0);
}
function __prev_stepped($s,$ast) {
 $s = $s|0;
 $ast = $ast|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $obj = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp + 8|0;
 $0 = $s;
 HEAP32[$1>>2] = $ast;
 $result = 0;
 $obj = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 if (!($3)) {
  ___assert_fail((4803|0),(4322|0),10994,(6447|0));
  // unreachable;
 }
 $4 = $0;
 $5 = ((($4)) + 155|0);
 $6 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
 $7 = ($6|0)!=(0|0);
 if (!($7)) {
  $40 = $result;
  STACKTOP = sp;return ($40|0);
 }
 $8 = HEAP32[$1>>2]|0;
 $9 = ($8|0)!=(0|0);
 if ($9) {
  $10 = HEAP32[$1>>2]|0;
  $11 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
  $12 = ($11|0)!=(0|0);
  if ($12) {
   $13 = HEAP32[$1>>2]|0;
   $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
   $obj = $14;
   $15 = $0;
   $16 = ((($15)) + 155|0);
   $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
   $18 = $0;
   $19 = $0;
   $20 = ((($19)) + 67|0);
   $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
   $22 = $obj;
   $23 = ((($22)) + 9|0);
   $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
   $25 = $obj;
   $26 = ((($25)) + 13|0);
   $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8);
   $28 = $obj;
   $29 = ((($28)) + 15|0);
   $30 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8);
   $31 = (FUNCTION_TABLE_iiiiiii[$17 & 255]($18,$1,$21,$24,$27,$30)|0);
   $result = $31;
   $40 = $result;
   STACKTOP = sp;return ($40|0);
  }
 }
 $32 = $0;
 $33 = ((($32)) + 155|0);
 $34 = HEAPU8[$33>>0]|(HEAPU8[$33+1>>0]<<8)|(HEAPU8[$33+2>>0]<<16)|(HEAPU8[$33+3>>0]<<24);
 $35 = $0;
 $36 = $0;
 $37 = ((($36)) + 67|0);
 $38 = HEAPU8[$37>>0]|(HEAPU8[$37+1>>0]<<8)|(HEAPU8[$37+2>>0]<<16)|(HEAPU8[$37+3>>0]<<24);
 $39 = (FUNCTION_TABLE_iiiiiii[$34 & 255]($35,$1,$38,-1,0,0)|0);
 $result = $39;
 $40 = $result;
 STACKTOP = sp;return ($40|0);
}
function __is_binary($op) {
 $op = $op|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond11 = 0, $or$cond13 = 0, $or$cond15 = 0, $or$cond17 = 0, $or$cond19 = 0;
 var $or$cond21 = 0, $or$cond23 = 0, $or$cond25 = 0, $or$cond3 = 0, $or$cond5 = 0, $or$cond7 = 0, $or$cond9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $op;
 $1 = $0;
 $2 = ($1|0)==(1|0);
 $3 = $0;
 $4 = ($3|0)==(2|0);
 $or$cond = $2 | $4;
 $5 = $0;
 $6 = ($5|0)==(3|0);
 $or$cond3 = $or$cond | $6;
 $7 = $0;
 $8 = ($7|0)==(4|0);
 $or$cond5 = $or$cond3 | $8;
 $9 = $0;
 $10 = ($9|0)==(5|0);
 $or$cond7 = $or$cond5 | $10;
 $11 = $0;
 $12 = ($11|0)==(6|0);
 $or$cond9 = $or$cond7 | $12;
 $13 = $0;
 $14 = ($13|0)==(14|0);
 $or$cond11 = $or$cond9 | $14;
 $15 = $0;
 $16 = ($15|0)==(11|0);
 $or$cond13 = $or$cond11 | $16;
 $17 = $0;
 $18 = ($17|0)==(10|0);
 $or$cond15 = $or$cond13 | $18;
 $19 = $0;
 $20 = ($19|0)==(13|0);
 $or$cond17 = $or$cond15 | $20;
 $21 = $0;
 $22 = ($21|0)==(12|0);
 $or$cond19 = $or$cond17 | $22;
 $23 = $0;
 $24 = ($23|0)==(15|0);
 $or$cond21 = $or$cond19 | $24;
 $25 = $0;
 $26 = ($25|0)==(16|0);
 $or$cond23 = $or$cond21 | $26;
 $27 = $0;
 $28 = ($27|0)==(17|0);
 $or$cond25 = $or$cond23 | $28;
 if ($or$cond25) {
  $32 = 1;
  $31 = $32&1;
  $33 = $31&255;
  STACKTOP = sp;return ($33|0);
 }
 $29 = $0;
 $30 = ($29|0)==(20|0);
 $32 = $30;
 $31 = $32&1;
 $33 = $31&255;
 STACKTOP = sp;return ($33|0);
}
function __is_flow($op) {
 $op = $op|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $or$cond = 0, $or$cond11 = 0, $or$cond13 = 0, $or$cond15 = 0, $or$cond17 = 0, $or$cond19 = 0, $or$cond21 = 0, $or$cond23 = 0, $or$cond25 = 0, $or$cond27 = 0, $or$cond29 = 0, $or$cond3 = 0, $or$cond31 = 0, $or$cond5 = 0, $or$cond7 = 0, $or$cond9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $op;
 $1 = $0;
 $2 = ($1|0)==(23|0);
 $3 = $0;
 $4 = ($3|0)==(24|0);
 $or$cond = $2 | $4;
 $5 = $0;
 $6 = ($5|0)==(25|0);
 $or$cond3 = $or$cond | $6;
 $7 = $0;
 $8 = ($7|0)==(26|0);
 $or$cond5 = $or$cond3 | $8;
 $9 = $0;
 $10 = ($9|0)==(27|0);
 $or$cond7 = $or$cond5 | $10;
 $11 = $0;
 $12 = ($11|0)==(28|0);
 $or$cond9 = $or$cond7 | $12;
 $13 = $0;
 $14 = ($13|0)==(30|0);
 $or$cond11 = $or$cond9 | $14;
 $15 = $0;
 $16 = ($15|0)==(31|0);
 $or$cond13 = $or$cond11 | $16;
 $17 = $0;
 $18 = ($17|0)==(32|0);
 $or$cond15 = $or$cond13 | $18;
 $19 = $0;
 $20 = ($19|0)==(33|0);
 $or$cond17 = $or$cond15 | $20;
 $21 = $0;
 $22 = ($21|0)==(34|0);
 $or$cond19 = $or$cond17 | $22;
 $23 = $0;
 $24 = ($23|0)==(35|0);
 $or$cond21 = $or$cond19 | $24;
 $25 = $0;
 $26 = ($25|0)==(36|0);
 $or$cond23 = $or$cond21 | $26;
 $27 = $0;
 $28 = ($27|0)==(37|0);
 $or$cond25 = $or$cond23 | $28;
 $29 = $0;
 $30 = ($29|0)==(38|0);
 $or$cond27 = $or$cond25 | $30;
 $31 = $0;
 $32 = ($31|0)==(39|0);
 $or$cond29 = $or$cond27 | $32;
 $33 = $0;
 $34 = ($33|0)==(40|0);
 $or$cond31 = $or$cond29 | $34;
 if ($or$cond31) {
  $38 = 1;
  $37 = $38&1;
  $39 = $37&255;
  STACKTOP = sp;return ($39|0);
 }
 $35 = $0;
 $36 = ($35|0)==(54|0);
 $38 = $36;
 $37 = $38&1;
 $39 = $37&255;
 STACKTOP = sp;return ($39|0);
}
function __mark_dangling_intermediate_value($s,$running) {
 $s = $s|0;
 $running = $running|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $or$cond = 0, $switch$split12D = 0;
 var $switch$split2D = 0, $switch$split42D = 0, $tmp = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $tmp = sp + 8|0;
 $0 = $s;
 $1 = $running;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 if (!($or$cond)) {
  ___assert_fail((5639|0),(4322|0),10918,(5652|0));
  // unreachable;
 }
 $6 = $1;
 $7 = ((($6)) + 20|0);
 $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
 $switch$split2D = ($8|0)<(1024);
 L4: do {
  if ($switch$split2D) {
   switch ($8|0) {
   case 512: case 256: case 64:  {
    break L4;
    break;
   }
   default: {
   }
   }
   STACKTOP = sp;return;
  } else {
   $switch$split12D = ($8|0)<(2048);
   if ($switch$split12D) {
    switch ($8|0) {
    case 1024:  {
     break L4;
     break;
    }
    default: {
    }
    }
    STACKTOP = sp;return;
   }
   $switch$split42D = ($8|0)<(8192);
   if ($switch$split42D) {
    switch ($8|0) {
    case 2048:  {
     break L4;
     break;
    }
    default: {
    }
    }
    STACKTOP = sp;return;
   } else {
    switch ($8|0) {
    case 8192:  {
     break L4;
     break;
    }
    default: {
    }
    }
    STACKTOP = sp;return;
   }
  }
 } while(0);
 dest=$tmp; stop=dest+17|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
 HEAP8[$tmp>>0]=0&255;HEAP8[$tmp+1>>0]=(0>>8)&255;HEAP8[$tmp+2>>0]=(0>>16)&255;HEAP8[$tmp+3>>0]=0>>24;
 $9 = $1;
 $10 = ((($9)) + 20|0);
 (__public_value_to_internal_object($10,$tmp)|0);
 $11 = HEAPU8[$tmp>>0]|(HEAPU8[$tmp+1>>0]<<8)|(HEAPU8[$tmp+2>>0]<<16)|(HEAPU8[$tmp+3>>0]<<24);
 $12 = ($11|0)==(12);
 if ($12) {
  $13 = ((($tmp)) + 4|0);
  $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
  $15 = ((($14)) + 21|0);
  $16 = HEAP8[$15>>0]|0;
  $17 = $16 & 1;
  $18 = $17&255;
  $19 = ($18|0)!=(0);
  if ($19) {
   STACKTOP = sp;return;
  }
 }
 $20 = HEAPU8[$tmp>>0]|(HEAPU8[$tmp+1>>0]<<8)|(HEAPU8[$tmp+2>>0]<<16)|(HEAPU8[$tmp+3>>0]<<24);
 $21 = ($20|0)==(14);
 if ($21) {
  $22 = ((($tmp)) + 4|0);
  $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
  $24 = ((($23)) + 21|0);
  $25 = HEAP8[$24>>0]|0;
  $26 = $25 & 1;
  $27 = $26&255;
  $28 = ($27|0)!=(0);
  if ($28) {
   STACKTOP = sp;return;
  }
 }
 $29 = ((($tmp)) + 4|0);
 $30 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8)|(HEAPU8[$29+2>>0]<<16)|(HEAPU8[$29+3>>0]<<24);
 $31 = ($30|0)!=(0|0);
 if ($31) {
  $32 = $0;
  $33 = ((($32)) + 21|0);
  $34 = ((($33)) + 8|0);
  $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
  $36 = ((($tmp)) + 4|0);
  $37 = HEAPU8[$36>>0]|(HEAPU8[$36+1>>0]<<8)|(HEAPU8[$36+2>>0]<<16)|(HEAPU8[$36+3>>0]<<24);
  $38 = (__ht_find($35,$37)|0);
  $39 = ($38|0)!=(0|0);
  if ($39) {
   STACKTOP = sp;return;
  }
 }
 $40 = HEAPU8[$tmp>>0]|(HEAPU8[$tmp+1>>0]<<8)|(HEAPU8[$tmp+2>>0]<<16)|(HEAPU8[$tmp+3>>0]<<24);
 do {
  switch ($40|0) {
  case 7:  {
   $41 = ((($tmp)) + 4|0);
   $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
   $43 = ((($tmp)) + 4|0);
   $44 = HEAPU8[$43>>0]|(HEAPU8[$43+1>>0]<<8)|(HEAPU8[$43+2>>0]<<16)|(HEAPU8[$43+3>>0]<<24);
   $45 = $0;
   $46 = ((($45)) + 21|0);
   __gc_add($42,$44,$46);
   STACKTOP = sp;return;
   break;
  }
  case 10:  {
   $47 = ((($tmp)) + 8|0);
   $48 = HEAP8[$47>>0]|0;
   $49 = $48 & 1;
   $50 = ($49<<24>>24)!=(0);
   if ($50) {
    STACKTOP = sp;return;
   }
   $51 = ((($tmp)) + 4|0);
   $52 = HEAPU8[$51>>0]|(HEAPU8[$51+1>>0]<<8)|(HEAPU8[$51+2>>0]<<16)|(HEAPU8[$51+3>>0]<<24);
   $53 = ((($tmp)) + 4|0);
   $54 = HEAPU8[$53>>0]|(HEAPU8[$53+1>>0]<<8)|(HEAPU8[$53+2>>0]<<16)|(HEAPU8[$53+3>>0]<<24);
   $55 = $0;
   $56 = ((($55)) + 21|0);
   __gc_add($52,$54,$56);
   STACKTOP = sp;return;
   break;
  }
  case 11:  {
   $57 = ((($tmp)) + 4|0);
   $58 = HEAPU8[$57>>0]|(HEAPU8[$57+1>>0]<<8)|(HEAPU8[$57+2>>0]<<16)|(HEAPU8[$57+3>>0]<<24);
   $59 = ((($tmp)) + 4|0);
   $60 = HEAPU8[$59>>0]|(HEAPU8[$59+1>>0]<<8)|(HEAPU8[$59+2>>0]<<16)|(HEAPU8[$59+3>>0]<<24);
   $61 = $0;
   $62 = ((($61)) + 21|0);
   __gc_add($58,$60,$62);
   STACKTOP = sp;return;
   break;
  }
  case 13:  {
   $63 = ((($tmp)) + 4|0);
   $64 = HEAPU8[$63>>0]|(HEAPU8[$63+1>>0]<<8)|(HEAPU8[$63+2>>0]<<16)|(HEAPU8[$63+3>>0]<<24);
   $65 = ((($tmp)) + 4|0);
   $66 = HEAPU8[$65>>0]|(HEAPU8[$65+1>>0]<<8)|(HEAPU8[$65+2>>0]<<16)|(HEAPU8[$65+3>>0]<<24);
   $67 = $0;
   $68 = ((($67)) + 21|0);
   __gc_add($64,$66,$68);
   STACKTOP = sp;return;
   break;
  }
  case 12:  {
   $69 = ((($tmp)) + 4|0);
   $70 = HEAPU8[$69>>0]|(HEAPU8[$69+1>>0]<<8)|(HEAPU8[$69+2>>0]<<16)|(HEAPU8[$69+3>>0]<<24);
   (__destroy_list_it($70)|0);
   STACKTOP = sp;return;
   break;
  }
  case 14:  {
   $71 = ((($tmp)) + 4|0);
   $72 = HEAPU8[$71>>0]|(HEAPU8[$71+1>>0]<<8)|(HEAPU8[$71+2>>0]<<16)|(HEAPU8[$71+3>>0]<<24);
   (__destroy_dict_it($72)|0);
   STACKTOP = sp;return;
   break;
  }
  case 16:  {
   $73 = ((($tmp)) + 8|0);
   $74 = HEAP8[$73>>0]|0;
   $75 = $74 & 1;
   $76 = ($75<<24>>24)!=(0);
   if ($76) {
    STACKTOP = sp;return;
   }
   $77 = ((($tmp)) + 4|0);
   $78 = HEAPU8[$77>>0]|(HEAPU8[$77+1>>0]<<8)|(HEAPU8[$77+2>>0]<<16)|(HEAPU8[$77+3>>0]<<24);
   $79 = ((($tmp)) + 4|0);
   $80 = HEAPU8[$79>>0]|(HEAPU8[$79+1>>0]<<8)|(HEAPU8[$79+2>>0]<<16)|(HEAPU8[$79+3>>0]<<24);
   $81 = $0;
   $82 = ((($81)) + 21|0);
   __gc_add($78,$80,$82);
   STACKTOP = sp;return;
   break;
  }
  case 17:  {
   $83 = ((($tmp)) + 8|0);
   $84 = HEAP8[$83>>0]|0;
   $85 = $84 & 1;
   $86 = ($85<<24>>24)!=(0);
   if ($86) {
    STACKTOP = sp;return;
   }
   $87 = ((($tmp)) + 4|0);
   $88 = HEAPU8[$87>>0]|(HEAPU8[$87+1>>0]<<8)|(HEAPU8[$87+2>>0]<<16)|(HEAPU8[$87+3>>0]<<24);
   $89 = ((($88)) + 58|0);
   $90 = HEAPU8[$89>>0]|(HEAPU8[$89+1>>0]<<8)|(HEAPU8[$89+2>>0]<<16)|(HEAPU8[$89+3>>0]<<24);
   $91 = ($90|0)==(2);
   if (!($91)) {
    STACKTOP = sp;return;
   }
   $92 = ((($tmp)) + 4|0);
   $93 = HEAPU8[$92>>0]|(HEAPU8[$92+1>>0]<<8)|(HEAPU8[$92+2>>0]<<16)|(HEAPU8[$92+3>>0]<<24);
   $94 = ((($tmp)) + 4|0);
   $95 = HEAPU8[$94>>0]|(HEAPU8[$94+1>>0]<<8)|(HEAPU8[$94+2>>0]<<16)|(HEAPU8[$94+3>>0]<<24);
   $96 = $0;
   $97 = ((($96)) + 21|0);
   __gc_add($93,$95,$97);
   STACKTOP = sp;return;
   break;
  }
  case 4:  {
   (__dispose_object($tmp)|0);
   STACKTOP = sp;return;
   break;
  }
  default: {
   STACKTOP = sp;return;
  }
  }
 } while(0);
}
function __core_let($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0;
 var $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0;
 var $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0;
 var $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0;
 var $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0;
 var $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0;
 var $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0;
 var $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0;
 var $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0;
 var $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0;
 var $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0;
 var $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0;
 var $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0;
 var $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0;
 var $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0;
 var $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0;
 var $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0;
 var $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0;
 var $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0;
 var $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0;
 var $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0;
 var $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0;
 var $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0;
 var $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0.0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0;
 var $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0;
 var $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0;
 var $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0;
 var $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0;
 var $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0;
 var $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0;
 var $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0;
 var $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $__hr = 0, $__hr1 = 0, $__hr2 = 0, $__hr3 = 0, $_val = 0, $arr = 0, $arr_idx = 0, $arr_obj = 0, $ast = 0, $evar = 0, $fn = 0, $idx = 0, $is_coll = 0, $key = 0, $literally = 0, $obj = 0, $or$cond = 0, $or$cond3 = 0, $refc = 0;
 var $result = 0, $running = 0, $val = 0, $var = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ast = sp + 60|0;
 $arr_obj = sp + 32|0;
 $arr_idx = sp + 28|0;
 $literally = sp + 96|0;
 $val = sp + 24|0;
 $idx = sp + 20|0;
 $key = sp + 88|0;
 $fn = sp + 16|0;
 $_val = sp + 80|0;
 $1 = $s;
 $2 = $l;
 $result = 0;
 HEAP32[$ast>>2] = 0;
 $obj = 0;
 $running = 0;
 $var = 0;
 $evar = 0;
 $refc = 1;
 $arr = 0;
 HEAP32[$arr_obj>>2] = 0;
 HEAP32[$arr_idx>>2] = 0;
 HEAP8[$literally>>0] = 0;
 HEAP32[$val>>2] = 0;
 HEAP32[$idx>>2] = 0;
 $is_coll = 0;
 $3 = $1;
 $4 = ($3|0)!=(0|0);
 $5 = $2;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),15566,(5341|0));
  // unreachable;
 }
 $7 = $1;
 $8 = ((($7)) + 75|0);
 $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
 $running = $9;
 $10 = $2;
 $11 = HEAP32[$10>>2]|0;
 HEAP32[$ast>>2] = $11;
 $12 = HEAP32[$ast>>2]|0;
 $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
 $obj = $13;
 $14 = $obj;
 $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
 $16 = ($15|0)==(8);
 if ($16) {
  $17 = HEAP32[$ast>>2]|0;
  $18 = ((($17)) + 8|0);
  $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
  HEAP32[$ast>>2] = $19;
 }
 $20 = HEAP32[$ast>>2]|0;
 $21 = ($20|0)!=(0|0);
 L7: do {
  if ($21) {
   $22 = HEAP32[$ast>>2]|0;
   $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
   $24 = ($23|0)!=(0|0);
   if ($24) {
    $56 = HEAP32[$ast>>2]|0;
    $57 = HEAPU8[$56>>0]|(HEAPU8[$56+1>>0]<<8)|(HEAPU8[$56+2>>0]<<16)|(HEAPU8[$56+3>>0]<<24);
    $obj = $57;
    $58 = $obj;
    $59 = ($58|0)!=(0|0);
    if ($59) {
     $60 = $obj;
     $61 = HEAPU8[$60>>0]|(HEAPU8[$60+1>>0]<<8)|(HEAPU8[$60+2>>0]<<16)|(HEAPU8[$60+3>>0]<<24);
     $62 = ($61|0)==(9);
     if ($62) {
      HEAP32[$fn>>2] = 0;
      $63 = $1;
      $64 = $obj;
      $65 = ((($64)) + 4|0);
      $66 = HEAPU8[$65>>0]|(HEAPU8[$65+1>>0]<<8)|(HEAPU8[$65+2>>0]<<16)|(HEAPU8[$65+3>>0]<<24);
      $67 = HEAP32[$ast>>2]|0;
      $68 = (__is_valid_class_accessor_following_routine($63,$66,$67,$fn)|0);
      $69 = ($68<<24>>24)!=(0);
      $70 = HEAP32[$fn>>2]|0;
      $71 = ($70|0)!=(0|0);
      $or$cond3 = $69 & $71;
      if ($or$cond3) {
       $72 = HEAP32[$fn>>2]|0;
       $73 = HEAPU8[$72>>0]|(HEAPU8[$72+1>>0]<<8)|(HEAPU8[$72+2>>0]<<16)|(HEAPU8[$72+3>>0]<<24);
       $obj = $73;
      }
     }
    }
    $74 = $obj;
    $75 = HEAPU8[$74>>0]|(HEAPU8[$74+1>>0]<<8)|(HEAPU8[$74+2>>0]<<16)|(HEAPU8[$74+3>>0]<<24);
    $76 = ($75|0)==(10);
    $77 = $obj;
    do {
     if ($76) {
      HEAP32[$arr_obj>>2] = $77;
      $78 = $1;
      $79 = $obj;
      $80 = ((($79)) + 4|0);
      $81 = HEAPU8[$80>>0]|(HEAPU8[$80+1>>0]<<8)|(HEAPU8[$80+2>>0]<<16)|(HEAPU8[$80+3>>0]<<24);
      $82 = (__search_array_in_scope_chain($78,$81,$arr_obj)|0);
      $arr = $82;
      $83 = $1;
      $84 = (__get_array_index($83,$ast,0,$arr_idx,$literally)|0);
      $result = $84;
      $85 = $result;
      $86 = ($85|0)!=(0);
      if ($86) {
       break L7;
      }
     } else {
      $87 = HEAPU8[$77>>0]|(HEAPU8[$77+1>>0]<<8)|(HEAPU8[$77+2>>0]<<16)|(HEAPU8[$77+3>>0]<<24);
      $88 = ($87|0)==(9);
      if ($88) {
       $89 = $obj;
       $90 = ((($89)) + 4|0);
       $91 = HEAPU8[$90>>0]|(HEAPU8[$90+1>>0]<<8)|(HEAPU8[$90+2>>0]<<16)|(HEAPU8[$90+3>>0]<<24);
       $92 = ((($91)) + 4|0);
       $93 = HEAPU8[$92>>0]|(HEAPU8[$92+1>>0]<<8)|(HEAPU8[$92+2>>0]<<16)|(HEAPU8[$92+3>>0]<<24);
       $94 = HEAPU8[$93>>0]|(HEAPU8[$93+1>>0]<<8)|(HEAPU8[$93+2>>0]<<16)|(HEAPU8[$93+3>>0]<<24);
       $95 = ($94|0)==(10);
       if ($95) {
        $96 = $obj;
        $97 = ((($96)) + 4|0);
        $98 = HEAPU8[$97>>0]|(HEAPU8[$97+1>>0]<<8)|(HEAPU8[$97+2>>0]<<16)|(HEAPU8[$97+3>>0]<<24);
        $99 = ((($98)) + 4|0);
        $100 = HEAPU8[$99>>0]|(HEAPU8[$99+1>>0]<<8)|(HEAPU8[$99+2>>0]<<16)|(HEAPU8[$99+3>>0]<<24);
        HEAP32[$arr_obj>>2] = $100;
        $101 = $1;
        $102 = $obj;
        $103 = ((($102)) + 4|0);
        $104 = HEAPU8[$103>>0]|(HEAPU8[$103+1>>0]<<8)|(HEAPU8[$103+2>>0]<<16)|(HEAPU8[$103+3>>0]<<24);
        $105 = ((($104)) + 4|0);
        $106 = HEAPU8[$105>>0]|(HEAPU8[$105+1>>0]<<8)|(HEAPU8[$105+2>>0]<<16)|(HEAPU8[$105+3>>0]<<24);
        $107 = ((($106)) + 4|0);
        $108 = HEAPU8[$107>>0]|(HEAPU8[$107+1>>0]<<8)|(HEAPU8[$107+2>>0]<<16)|(HEAPU8[$107+3>>0]<<24);
        $109 = (__search_array_in_scope_chain($101,$108,$arr_obj)|0);
        $arr = $109;
        $110 = $1;
        $111 = (__get_array_index($110,$ast,0,$arr_idx,$literally)|0);
        $result = $111;
        $112 = $result;
        $113 = ($112|0)!=(0);
        if ($113) {
         break L7;
        } else {
         break;
        }
       }
      }
      $114 = $obj;
      $115 = HEAPU8[$114>>0]|(HEAPU8[$114+1>>0]<<8)|(HEAPU8[$114+2>>0]<<16)|(HEAPU8[$114+3>>0]<<24);
      $116 = ($115|0)==(9);
      if (!($116)) {
       $216 = HEAP32[$ast>>2]|0;
       $217 = ($216|0)!=(0|0);
       if ($217) {
        $218 = HEAP32[$ast>>2]|0;
        $219 = HEAPU8[$218>>0]|(HEAPU8[$218+1>>0]<<8)|(HEAPU8[$218+2>>0]<<16)|(HEAPU8[$218+3>>0]<<24);
        $220 = ($219|0)!=(0|0);
        if ($220) {
         $221 = $1;
         $222 = $1;
         $223 = ((($222)) + 67|0);
         $224 = HEAPU8[$223>>0]|(HEAPU8[$223+1>>0]<<8)|(HEAPU8[$223+2>>0]<<16)|(HEAPU8[$223+3>>0]<<24);
         $225 = (__set_current_error($221,25,$224)|0);
         $226 = ($225<<24>>24)!=(0);
         if (!($226)) {
          break L7;
         }
         $227 = $1;
         $228 = HEAP32[$ast>>2]|0;
         $229 = HEAPU8[$228>>0]|(HEAPU8[$228+1>>0]<<8)|(HEAPU8[$228+2>>0]<<16)|(HEAPU8[$228+3>>0]<<24);
         $230 = ((($229)) + 9|0);
         $231 = HEAPU8[$230>>0]|(HEAPU8[$230+1>>0]<<8)|(HEAPU8[$230+2>>0]<<16)|(HEAPU8[$230+3>>0]<<24);
         $232 = HEAP32[$ast>>2]|0;
         $233 = HEAPU8[$232>>0]|(HEAPU8[$232+1>>0]<<8)|(HEAPU8[$232+2>>0]<<16)|(HEAPU8[$232+3>>0]<<24);
         $234 = ((($233)) + 13|0);
         $235 = HEAPU8[$234>>0]|(HEAPU8[$234+1>>0]<<8);
         $236 = HEAP32[$ast>>2]|0;
         $237 = HEAPU8[$236>>0]|(HEAPU8[$236+1>>0]<<8)|(HEAPU8[$236+2>>0]<<16)|(HEAPU8[$236+3>>0]<<24);
         $238 = ((($237)) + 15|0);
         $239 = HEAPU8[$238>>0]|(HEAPU8[$238+1>>0]<<8);
         __set_error_pos($227,$231,$235,$239);
         $result = 3;
         break L7;
        }
       }
       $240 = $1;
       $241 = $1;
       $242 = ((($241)) + 67|0);
       $243 = HEAPU8[$242>>0]|(HEAPU8[$242+1>>0]<<8)|(HEAPU8[$242+2>>0]<<16)|(HEAPU8[$242+3>>0]<<24);
       $244 = (__set_current_error($240,25,$243)|0);
       $245 = ($244<<24>>24)!=(0);
       if (!($245)) {
        break L7;
       }
       $246 = $1;
       __set_error_pos($246,0,0,0);
       $result = 3;
       break L7;
      }
      $117 = $obj;
      $118 = ((($117)) + 4|0);
      $119 = HEAPU8[$118>>0]|(HEAPU8[$118+1>>0]<<8)|(HEAPU8[$118+2>>0]<<16)|(HEAPU8[$118+3>>0]<<24);
      $120 = ((($119)) + 8|0);
      $121 = HEAP8[$120>>0]|0;
      $122 = ($121&255) >>> 2;
      $123 = $122 & 1;
      $124 = ($123<<24>>24)!=(0);
      if ($124) {
       $125 = HEAP32[$ast>>2]|0;
       $126 = ($125|0)!=(0|0);
       if ($126) {
        $127 = HEAP32[$ast>>2]|0;
        $128 = HEAPU8[$127>>0]|(HEAPU8[$127+1>>0]<<8)|(HEAPU8[$127+2>>0]<<16)|(HEAPU8[$127+3>>0]<<24);
        $129 = ($128|0)!=(0|0);
        if ($129) {
         $130 = $1;
         $131 = $1;
         $132 = ((($131)) + 67|0);
         $133 = HEAPU8[$132>>0]|(HEAPU8[$132+1>>0]<<8)|(HEAPU8[$132+2>>0]<<16)|(HEAPU8[$132+3>>0]<<24);
         $134 = (__set_current_error($130,25,$133)|0);
         $135 = ($134<<24>>24)!=(0);
         if (!($135)) {
          break L7;
         }
         $136 = $1;
         $137 = HEAP32[$ast>>2]|0;
         $138 = HEAPU8[$137>>0]|(HEAPU8[$137+1>>0]<<8)|(HEAPU8[$137+2>>0]<<16)|(HEAPU8[$137+3>>0]<<24);
         $139 = ((($138)) + 9|0);
         $140 = HEAPU8[$139>>0]|(HEAPU8[$139+1>>0]<<8)|(HEAPU8[$139+2>>0]<<16)|(HEAPU8[$139+3>>0]<<24);
         $141 = HEAP32[$ast>>2]|0;
         $142 = HEAPU8[$141>>0]|(HEAPU8[$141+1>>0]<<8)|(HEAPU8[$141+2>>0]<<16)|(HEAPU8[$141+3>>0]<<24);
         $143 = ((($142)) + 13|0);
         $144 = HEAPU8[$143>>0]|(HEAPU8[$143+1>>0]<<8);
         $145 = HEAP32[$ast>>2]|0;
         $146 = HEAPU8[$145>>0]|(HEAPU8[$145+1>>0]<<8)|(HEAPU8[$145+2>>0]<<16)|(HEAPU8[$145+3>>0]<<24);
         $147 = ((($146)) + 15|0);
         $148 = HEAPU8[$147>>0]|(HEAPU8[$147+1>>0]<<8);
         __set_error_pos($136,$140,$144,$148);
         $result = 3;
         break L7;
        }
       }
       $149 = $1;
       $150 = $1;
       $151 = ((($150)) + 67|0);
       $152 = HEAPU8[$151>>0]|(HEAPU8[$151+1>>0]<<8)|(HEAPU8[$151+2>>0]<<16)|(HEAPU8[$151+3>>0]<<24);
       $153 = (__set_current_error($149,25,$152)|0);
       $154 = ($153<<24>>24)!=(0);
       if (!($154)) {
        break L7;
       }
       $155 = $1;
       __set_error_pos($155,0,0,0);
       $result = 3;
       break L7;
      }
      $156 = $obj;
      $157 = ((($156)) + 4|0);
      $158 = HEAPU8[$157>>0]|(HEAPU8[$157+1>>0]<<8)|(HEAPU8[$157+2>>0]<<16)|(HEAPU8[$157+3>>0]<<24);
      $evar = $158;
      $159 = $1;
      $160 = $obj;
      $161 = ((($160)) + 4|0);
      $162 = HEAPU8[$161>>0]|(HEAPU8[$161+1>>0]<<8)|(HEAPU8[$161+2>>0]<<16)|(HEAPU8[$161+3>>0]<<24);
      $163 = (__search_var_in_scope_chain($159,$162,0)|0);
      $var = $163;
      $164 = $var;
      $165 = $evar;
      $166 = ($164|0)==($165|0);
      if ($166) {
       $evar = 0;
      }
      $167 = $evar;
      $168 = ($167|0)!=(0|0);
      if ($168) {
       $169 = $evar;
       $170 = ((($169)) + 8|0);
       $171 = HEAP8[$170>>0]|0;
       $172 = $171 & 3;
       $173 = $172&255;
       $174 = ($173|0)==(3);
       if ($174) {
        $evar = 0;
       }
      }
      $175 = $var;
      $176 = HEAP32[308>>2]|0;
      $177 = ((($176)) + 4|0);
      $178 = HEAPU8[$177>>0]|(HEAPU8[$177+1>>0]<<8)|(HEAPU8[$177+2>>0]<<16)|(HEAPU8[$177+3>>0]<<24);
      $179 = ($175|0)==($178|0);
      if (!($179)) {
       $180 = $var;
       $181 = HEAP32[312>>2]|0;
       $182 = ((($181)) + 4|0);
       $183 = HEAPU8[$182>>0]|(HEAPU8[$182+1>>0]<<8)|(HEAPU8[$182+2>>0]<<16)|(HEAPU8[$182+3>>0]<<24);
       $184 = ($180|0)==($183|0);
       if (!($184)) {
        break;
       }
      }
      $185 = HEAP32[$ast>>2]|0;
      $186 = ($185|0)!=(0|0);
      if ($186) {
       $187 = HEAP32[$ast>>2]|0;
       $188 = HEAPU8[$187>>0]|(HEAPU8[$187+1>>0]<<8)|(HEAPU8[$187+2>>0]<<16)|(HEAPU8[$187+3>>0]<<24);
       $189 = ($188|0)!=(0|0);
       if ($189) {
        $190 = $1;
        $191 = $1;
        $192 = ((($191)) + 67|0);
        $193 = HEAPU8[$192>>0]|(HEAPU8[$192+1>>0]<<8)|(HEAPU8[$192+2>>0]<<16)|(HEAPU8[$192+3>>0]<<24);
        $194 = (__set_current_error($190,25,$193)|0);
        $195 = ($194<<24>>24)!=(0);
        if (!($195)) {
         break L7;
        }
        $196 = $1;
        $197 = HEAP32[$ast>>2]|0;
        $198 = HEAPU8[$197>>0]|(HEAPU8[$197+1>>0]<<8)|(HEAPU8[$197+2>>0]<<16)|(HEAPU8[$197+3>>0]<<24);
        $199 = ((($198)) + 9|0);
        $200 = HEAPU8[$199>>0]|(HEAPU8[$199+1>>0]<<8)|(HEAPU8[$199+2>>0]<<16)|(HEAPU8[$199+3>>0]<<24);
        $201 = HEAP32[$ast>>2]|0;
        $202 = HEAPU8[$201>>0]|(HEAPU8[$201+1>>0]<<8)|(HEAPU8[$201+2>>0]<<16)|(HEAPU8[$201+3>>0]<<24);
        $203 = ((($202)) + 13|0);
        $204 = HEAPU8[$203>>0]|(HEAPU8[$203+1>>0]<<8);
        $205 = HEAP32[$ast>>2]|0;
        $206 = HEAPU8[$205>>0]|(HEAPU8[$205+1>>0]<<8)|(HEAPU8[$205+2>>0]<<16)|(HEAPU8[$205+3>>0]<<24);
        $207 = ((($206)) + 15|0);
        $208 = HEAPU8[$207>>0]|(HEAPU8[$207+1>>0]<<8);
        __set_error_pos($196,$200,$204,$208);
        $result = 3;
        break L7;
       }
      }
      $209 = $1;
      $210 = $1;
      $211 = ((($210)) + 67|0);
      $212 = HEAPU8[$211>>0]|(HEAPU8[$211+1>>0]<<8)|(HEAPU8[$211+2>>0]<<16)|(HEAPU8[$211+3>>0]<<24);
      $213 = (__set_current_error($209,25,$212)|0);
      $214 = ($213<<24>>24)!=(0);
      if (!($214)) {
       break L7;
      }
      $215 = $1;
      __set_error_pos($215,0,0,0);
      $result = 3;
      break L7;
     }
    } while(0);
    $247 = HEAP32[$ast>>2]|0;
    $248 = ((($247)) + 8|0);
    $249 = HEAPU8[$248>>0]|(HEAPU8[$248+1>>0]<<8)|(HEAPU8[$248+2>>0]<<16)|(HEAPU8[$248+3>>0]<<24);
    HEAP32[$ast>>2] = $249;
    $250 = HEAP32[$ast>>2]|0;
    $251 = ($250|0)!=(0|0);
    if ($251) {
     $252 = HEAP32[$ast>>2]|0;
     $253 = HEAPU8[$252>>0]|(HEAPU8[$252+1>>0]<<8)|(HEAPU8[$252+2>>0]<<16)|(HEAPU8[$252+3>>0]<<24);
     $254 = ($253|0)!=(0|0);
     if ($254) {
      $286 = $var;
      $287 = ($286|0)!=(0|0);
      do {
       if ($287) {
        $288 = $var;
        $289 = ((($288)) + 4|0);
        $290 = HEAPU8[$289>>0]|(HEAPU8[$289+1>>0]<<8)|(HEAPU8[$289+2>>0]<<16)|(HEAPU8[$289+3>>0]<<24);
        $291 = ($290|0)!=(0|0);
        if ($291) {
         $292 = $var;
         $293 = ((($292)) + 4|0);
         $294 = HEAPU8[$293>>0]|(HEAPU8[$293+1>>0]<<8)|(HEAPU8[$293+2>>0]<<16)|(HEAPU8[$293+3>>0]<<24);
         $295 = HEAPU8[$294>>0]|(HEAPU8[$294+1>>0]<<8)|(HEAPU8[$294+2>>0]<<16)|(HEAPU8[$294+3>>0]<<24);
         $296 = ($295|0)==(11);
         if (!($296)) {
          label = 60;
         }
        } else {
         label = 60;
        }
        if ((label|0) == 60) {
         $297 = $var;
         $298 = ((($297)) + 4|0);
         $299 = HEAPU8[$298>>0]|(HEAPU8[$298+1>>0]<<8)|(HEAPU8[$298+2>>0]<<16)|(HEAPU8[$298+3>>0]<<24);
         $300 = ($299|0)!=(0|0);
         if (!($300)) {
          break;
         }
         $301 = $var;
         $302 = ((($301)) + 4|0);
         $303 = HEAPU8[$302>>0]|(HEAPU8[$302+1>>0]<<8)|(HEAPU8[$302+2>>0]<<16)|(HEAPU8[$302+3>>0]<<24);
         $304 = HEAPU8[$303>>0]|(HEAPU8[$303+1>>0]<<8)|(HEAPU8[$303+2>>0]<<16)|(HEAPU8[$303+3>>0]<<24);
         $305 = ($304|0)==(13);
         if (!($305)) {
          break;
         }
        }
        $306 = HEAP32[$ast>>2]|0;
        $307 = HEAPU8[$306>>0]|(HEAPU8[$306+1>>0]<<8)|(HEAPU8[$306+2>>0]<<16)|(HEAPU8[$306+3>>0]<<24);
        $obj = $307;
        $308 = $obj;
        $309 = HEAPU8[$308>>0]|(HEAPU8[$308+1>>0]<<8)|(HEAPU8[$308+2>>0]<<16)|(HEAPU8[$308+3>>0]<<24);
        $310 = ($309|0)==(8);
        if ($310) {
         $311 = $obj;
         $312 = ((($311)) + 4|0);
         $313 = HEAPU8[$312>>0]|(HEAPU8[$312+1>>0]<<8)|(HEAPU8[$312+2>>0]<<16)|(HEAPU8[$312+3>>0]<<24);
         $314 = ((($313)) + 4|0);
         $315 = HEAPU8[$314>>0]|(HEAPU8[$314+1>>0]<<8)|(HEAPU8[$314+2>>0]<<16)|(HEAPU8[$314+3>>0]<<24);
         $316 = ($315|0)==(7|0);
         if ($316) {
          $317 = $1;
          $318 = $2;
          $319 = (_mb_attempt_open_bracket($317,$318)|0);
          $__hr = $319;
          $320 = $__hr;
          $321 = ($320|0)!=(0);
          if ($321) {
           $322 = $__hr;
           $0 = $322;
           $840 = $0;
           STACKTOP = sp;return ($840|0);
          }
          $323 = $var;
          $324 = ((($323)) + 4|0);
          $325 = HEAPU8[$324>>0]|(HEAPU8[$324+1>>0]<<8)|(HEAPU8[$324+2>>0]<<16)|(HEAPU8[$324+3>>0]<<24);
          $326 = HEAPU8[$325>>0]|(HEAPU8[$325+1>>0]<<8)|(HEAPU8[$325+2>>0]<<16)|(HEAPU8[$325+3>>0]<<24);
          switch ($326|0) {
          case 11:  {
           $327 = $1;
           $328 = $2;
           $329 = (_mb_pop_int($327,$328,$idx)|0);
           $__hr1 = $329;
           $330 = $__hr1;
           $331 = ($330|0)!=(0);
           if ($331) {
            $332 = $__hr1;
            $0 = $332;
            $840 = $0;
            STACKTOP = sp;return ($840|0);
           }
           break;
          }
          case 13:  {
           $333 = ((($key)) + 4|0);
           ;HEAP8[$333>>0]=0|0;HEAP8[$333+1>>0]=0|0;HEAP8[$333+2>>0]=0|0;HEAP8[$333+3>>0]=0|0;
           HEAP8[$key>>0]=0&255;HEAP8[$key+1>>0]=(0>>8)&255;HEAP8[$key+2>>0]=(0>>16)&255;HEAP8[$key+3>>0]=0>>24;
           $334 = $1;
           $335 = $2;
           $336 = (_mb_pop_value($334,$335,$key)|0);
           $__hr2 = $336;
           $337 = $__hr2;
           $338 = ($337|0)!=(0);
           if ($338) {
            $339 = $__hr2;
            $0 = $339;
            $840 = $0;
            STACKTOP = sp;return ($840|0);
           }
           break;
          }
          default: {
          }
          }
          $340 = $1;
          $341 = $2;
          $342 = (_mb_attempt_close_bracket($340,$341)|0);
          $__hr3 = $342;
          $343 = $__hr3;
          $344 = ($343|0)!=(0);
          if (!($344)) {
           $346 = $2;
           $347 = HEAP32[$346>>2]|0;
           HEAP32[$ast>>2] = $347;
           $is_coll = 1;
           break;
          }
          $345 = $__hr3;
          $0 = $345;
          $840 = $0;
          STACKTOP = sp;return ($840|0);
         }
        }
       }
      } while(0);
      $348 = HEAP32[$ast>>2]|0;
      $349 = HEAPU8[$348>>0]|(HEAPU8[$348+1>>0]<<8)|(HEAPU8[$348+2>>0]<<16)|(HEAPU8[$348+3>>0]<<24);
      $obj = $349;
      $350 = $obj;
      $351 = HEAPU8[$350>>0]|(HEAPU8[$350+1>>0]<<8)|(HEAPU8[$350+2>>0]<<16)|(HEAPU8[$350+3>>0]<<24);
      $352 = ($351|0)==(8);
      if ($352) {
       $353 = $obj;
       $354 = ((($353)) + 4|0);
       $355 = HEAPU8[$354>>0]|(HEAPU8[$354+1>>0]<<8)|(HEAPU8[$354+2>>0]<<16)|(HEAPU8[$354+3>>0]<<24);
       $356 = ((($355)) + 4|0);
       $357 = HEAPU8[$356>>0]|(HEAPU8[$356+1>>0]<<8)|(HEAPU8[$356+2>>0]<<16)|(HEAPU8[$356+3>>0]<<24);
       $358 = ($357|0)==(14|0);
       if ($358) {
        $390 = HEAP32[$ast>>2]|0;
        $391 = ((($390)) + 8|0);
        $392 = HEAPU8[$391>>0]|(HEAPU8[$391+1>>0]<<8)|(HEAPU8[$391+2>>0]<<16)|(HEAPU8[$391+3>>0]<<24);
        HEAP32[$ast>>2] = $392;
        $393 = (__create_object()|0);
        HEAP32[$val>>2] = $393;
        $394 = $1;
        $395 = (__calc_expression($394,$ast,$val)|0);
        $result = $395;
        $396 = $var;
        $397 = ($396|0)!=(0|0);
        L90: do {
         if ($397) {
          $398 = $is_coll;
          $399 = ($398<<24>>24)!=(0);
          if (!($399)) {
           while(1) {
            $502 = $var;
            $503 = ((($502)) + 4|0);
            $504 = HEAPU8[$503>>0]|(HEAPU8[$503+1>>0]<<8)|(HEAPU8[$503+2>>0]<<16)|(HEAPU8[$503+3>>0]<<24);
            (__dispose_object($504)|0);
            $505 = HEAP32[$val>>2]|0;
            $506 = HEAPU8[$505>>0]|(HEAPU8[$505+1>>0]<<8)|(HEAPU8[$505+2>>0]<<16)|(HEAPU8[$505+3>>0]<<24);
            $507 = $var;
            $508 = ((($507)) + 4|0);
            $509 = HEAPU8[$508>>0]|(HEAPU8[$508+1>>0]<<8)|(HEAPU8[$508+2>>0]<<16)|(HEAPU8[$508+3>>0]<<24);
            HEAP8[$509>>0]=$506&255;HEAP8[$509+1>>0]=($506>>8)&255;HEAP8[$509+2>>0]=($506>>16)&255;HEAP8[$509+3>>0]=$506>>24;
            $510 = HEAP32[$val>>2]|0;
            $511 = HEAPU8[$510>>0]|(HEAPU8[$510+1>>0]<<8)|(HEAPU8[$510+2>>0]<<16)|(HEAPU8[$510+3>>0]<<24);
            $512 = ($511|0)==(12);
            do {
             if ($512) {
              label = 107;
             } else {
              $513 = HEAP32[$val>>2]|0;
              $514 = HEAPU8[$513>>0]|(HEAPU8[$513+1>>0]<<8)|(HEAPU8[$513+2>>0]<<16)|(HEAPU8[$513+3>>0]<<24);
              $515 = ($514|0)==(14);
              if ($515) {
               label = 107;
               break;
              }
              $520 = $var;
              $521 = ((($520)) + 4|0);
              $522 = HEAPU8[$521>>0]|(HEAPU8[$521+1>>0]<<8)|(HEAPU8[$521+2>>0]<<16)|(HEAPU8[$521+3>>0]<<24);
              $523 = ((($522)) + 4|0);
              $524 = HEAP32[$val>>2]|0;
              $525 = ((($524)) + 4|0);
              ;HEAP8[$523>>0]=HEAP8[$525>>0]|0;HEAP8[$523+1>>0]=HEAP8[$525+1>>0]|0;HEAP8[$523+2>>0]=HEAP8[$525+2>>0]|0;HEAP8[$523+3>>0]=HEAP8[$525+3>>0]|0;
             }
            } while(0);
            if ((label|0) == 107) {
             label = 0;
             $516 = $var;
             $517 = ((($516)) + 4|0);
             $518 = HEAPU8[$517>>0]|(HEAPU8[$517+1>>0]<<8)|(HEAPU8[$517+2>>0]<<16)|(HEAPU8[$517+3>>0]<<24);
             $519 = HEAP32[$val>>2]|0;
             (__assign_with_it($518,$519)|0);
            }
            $526 = HEAP32[$val>>2]|0;
            $527 = HEAPU8[$526>>0]|(HEAPU8[$526+1>>0]<<8)|(HEAPU8[$526+2>>0]<<16)|(HEAPU8[$526+3>>0]<<24);
            $528 = ($527|0)==(17);
            $529 = HEAP32[$val>>2]|0;
            do {
             if ($528) {
              $530 = ((($529)) + 4|0);
              $531 = HEAPU8[$530>>0]|(HEAPU8[$530+1>>0]<<8)|(HEAPU8[$530+2>>0]<<16)|(HEAPU8[$530+3>>0]<<24);
              $532 = ((($531)) + 58|0);
              $533 = HEAPU8[$532>>0]|(HEAPU8[$532+1>>0]<<8)|(HEAPU8[$532+2>>0]<<16)|(HEAPU8[$532+3>>0]<<24);
              $534 = ($533|0)==(2);
              if ($534) {
               $535 = HEAP32[$val>>2]|0;
               $536 = ((($535)) + 8|0);
               $537 = HEAP8[$536>>0]|0;
               $538 = $537 & 1;
               $539 = $var;
               $540 = ((($539)) + 4|0);
               $541 = HEAPU8[$540>>0]|(HEAPU8[$540+1>>0]<<8)|(HEAPU8[$540+2>>0]<<16)|(HEAPU8[$540+3>>0]<<24);
               $542 = ((($541)) + 8|0);
               $543 = HEAP8[$542>>0]|0;
               $544 = $538 & 1;
               $545 = $543 & -2;
               $546 = $545 | $544;
               HEAP8[$542>>0] = $546;
               break;
              } else {
               $547 = $var;
               $548 = ((($547)) + 4|0);
               $549 = HEAPU8[$548>>0]|(HEAPU8[$548+1>>0]<<8)|(HEAPU8[$548+2>>0]<<16)|(HEAPU8[$548+3>>0]<<24);
               $550 = ((($549)) + 8|0);
               $551 = HEAP8[$550>>0]|0;
               $552 = $551 & -2;
               $553 = $552 | 1;
               HEAP8[$550>>0] = $553;
               break;
              }
             } else {
              $554 = ((($529)) + 8|0);
              $555 = HEAP8[$554>>0]|0;
              $556 = $555 & 1;
              $557 = $var;
              $558 = ((($557)) + 4|0);
              $559 = HEAPU8[$558>>0]|(HEAPU8[$558+1>>0]<<8)|(HEAPU8[$558+2>>0]<<16)|(HEAPU8[$558+3>>0]<<24);
              $560 = ((($559)) + 8|0);
              $561 = HEAP8[$560>>0]|0;
              $562 = $556 & 1;
              $563 = $561 & -2;
              $564 = $563 | $562;
              HEAP8[$560>>0] = $564;
             }
            } while(0);
            $565 = $evar;
            $566 = ($565|0)!=(0|0);
            if (!($566)) {
             break L90;
            }
            $567 = $evar;
            $568 = ((($567)) + 8|0);
            $569 = HEAP8[$568>>0]|0;
            $570 = $569 & 3;
            $571 = $570&255;
            $572 = ($571|0)!=(0);
            if (!($572)) {
             break L90;
            }
            $573 = $var;
            $574 = ((($573)) + 4|0);
            $575 = HEAPU8[$574>>0]|(HEAPU8[$574+1>>0]<<8)|(HEAPU8[$574+2>>0]<<16)|(HEAPU8[$574+3>>0]<<24);
            $576 = HEAPU8[$575>>0]|(HEAPU8[$575+1>>0]<<8)|(HEAPU8[$575+2>>0]<<16)|(HEAPU8[$575+3>>0]<<24);
            $577 = ($576|0)==(4);
            if ($577) {
             $578 = $var;
             $579 = ((($578)) + 4|0);
             $580 = HEAPU8[$579>>0]|(HEAPU8[$579+1>>0]<<8)|(HEAPU8[$579+2>>0]<<16)|(HEAPU8[$579+3>>0]<<24);
             $581 = ((($580)) + 4|0);
             $582 = HEAPU8[$581>>0]|(HEAPU8[$581+1>>0]<<8)|(HEAPU8[$581+2>>0]<<16)|(HEAPU8[$581+3>>0]<<24);
             $583 = $var;
             $584 = ((($583)) + 4|0);
             $585 = HEAPU8[$584>>0]|(HEAPU8[$584+1>>0]<<8)|(HEAPU8[$584+2>>0]<<16)|(HEAPU8[$584+3>>0]<<24);
             $586 = ((($585)) + 4|0);
             $587 = HEAPU8[$586>>0]|(HEAPU8[$586+1>>0]<<8)|(HEAPU8[$586+2>>0]<<16)|(HEAPU8[$586+3>>0]<<24);
             $588 = (_strlen($587)|0);
             $589 = (($588) + 1)|0;
             $590 = (_mb_strdup($582,$589)|0);
             $591 = $var;
             $592 = ((($591)) + 4|0);
             $593 = HEAPU8[$592>>0]|(HEAPU8[$592+1>>0]<<8)|(HEAPU8[$592+2>>0]<<16)|(HEAPU8[$592+3>>0]<<24);
             $594 = ((($593)) + 4|0);
             HEAP8[$594>>0]=$590&255;HEAP8[$594+1>>0]=($590>>8)&255;HEAP8[$594+2>>0]=($590>>16)&255;HEAP8[$594+3>>0]=$590>>24;
             $595 = $var;
             $596 = ((($595)) + 4|0);
             $597 = HEAPU8[$596>>0]|(HEAPU8[$596+1>>0]<<8)|(HEAPU8[$596+2>>0]<<16)|(HEAPU8[$596+3>>0]<<24);
             $598 = ((($597)) + 8|0);
             $599 = HEAP8[$598>>0]|0;
             $600 = $599 & -2;
             HEAP8[$598>>0] = $600;
            }
            $601 = $evar;
            $var = $601;
            $evar = 0;
            $602 = $refc;
            $603 = (($602) + 1)|0;
            $refc = $603;
           }
          }
          $400 = $var;
          $401 = ((($400)) + 4|0);
          $402 = HEAPU8[$401>>0]|(HEAPU8[$401+1>>0]<<8)|(HEAPU8[$401+2>>0]<<16)|(HEAPU8[$401+3>>0]<<24);
          $403 = HEAPU8[$402>>0]|(HEAPU8[$402+1>>0]<<8)|(HEAPU8[$402+2>>0]<<16)|(HEAPU8[$402+3>>0]<<24);
          switch ($403|0) {
          case 11:  {
           $404 = $var;
           $405 = ((($404)) + 4|0);
           $406 = HEAPU8[$405>>0]|(HEAPU8[$405+1>>0]<<8)|(HEAPU8[$405+2>>0]<<16)|(HEAPU8[$405+3>>0]<<24);
           $407 = ((($406)) + 4|0);
           $408 = HEAPU8[$407>>0]|(HEAPU8[$407+1>>0]<<8)|(HEAPU8[$407+2>>0]<<16)|(HEAPU8[$407+3>>0]<<24);
           $409 = HEAP32[$idx>>2]|0;
           $410 = (__set_list($408,$409,0,$val)|0);
           $411 = ($410<<24>>24)!=(0);
           if ($411) {
            break L7;
           }
           $412 = HEAP32[$val>>2]|0;
           $413 = ($412|0)!=(0|0);
           if (!($413)) {
            ___assert_fail((4369|0),(4322|0),15663,(5341|0));
            // unreachable;
           }
           $414 = HEAP32[$val>>2]|0;
           _mb_free($414);
           HEAP32[$val>>2] = 0;
           $415 = $2;
           $416 = ($415|0)!=(0|0);
           do {
            if ($416) {
             $417 = $2;
             $418 = HEAP32[$417>>2]|0;
             $419 = ($418|0)!=(0|0);
             if (!($419)) {
              break;
             }
             $420 = $2;
             $421 = HEAP32[$420>>2]|0;
             $422 = HEAPU8[$421>>0]|(HEAPU8[$421+1>>0]<<8)|(HEAPU8[$421+2>>0]<<16)|(HEAPU8[$421+3>>0]<<24);
             $423 = ($422|0)!=(0|0);
             if (!($423)) {
              break;
             }
             $424 = $1;
             $425 = $1;
             $426 = ((($425)) + 67|0);
             $427 = HEAPU8[$426>>0]|(HEAPU8[$426+1>>0]<<8)|(HEAPU8[$426+2>>0]<<16)|(HEAPU8[$426+3>>0]<<24);
             $428 = (__set_current_error($424,21,$427)|0);
             $429 = ($428<<24>>24)!=(0);
             if (!($429)) {
              break L7;
             }
             $430 = $1;
             $431 = $2;
             $432 = HEAP32[$431>>2]|0;
             $433 = HEAPU8[$432>>0]|(HEAPU8[$432+1>>0]<<8)|(HEAPU8[$432+2>>0]<<16)|(HEAPU8[$432+3>>0]<<24);
             $434 = ((($433)) + 9|0);
             $435 = HEAPU8[$434>>0]|(HEAPU8[$434+1>>0]<<8)|(HEAPU8[$434+2>>0]<<16)|(HEAPU8[$434+3>>0]<<24);
             $436 = $2;
             $437 = HEAP32[$436>>2]|0;
             $438 = HEAPU8[$437>>0]|(HEAPU8[$437+1>>0]<<8)|(HEAPU8[$437+2>>0]<<16)|(HEAPU8[$437+3>>0]<<24);
             $439 = ((($438)) + 13|0);
             $440 = HEAPU8[$439>>0]|(HEAPU8[$439+1>>0]<<8);
             $441 = $2;
             $442 = HEAP32[$441>>2]|0;
             $443 = HEAPU8[$442>>0]|(HEAPU8[$442+1>>0]<<8)|(HEAPU8[$442+2>>0]<<16)|(HEAPU8[$442+3>>0]<<24);
             $444 = ((($443)) + 15|0);
             $445 = HEAPU8[$444>>0]|(HEAPU8[$444+1>>0]<<8);
             __set_error_pos($430,$435,$440,$445);
             $result = 3;
             break L7;
            }
           } while(0);
           $446 = $1;
           $447 = $1;
           $448 = ((($447)) + 67|0);
           $449 = HEAPU8[$448>>0]|(HEAPU8[$448+1>>0]<<8)|(HEAPU8[$448+2>>0]<<16)|(HEAPU8[$448+3>>0]<<24);
           $450 = (__set_current_error($446,21,$449)|0);
           $451 = ($450<<24>>24)!=(0);
           if (!($451)) {
            break L7;
           }
           $452 = $1;
           __set_error_pos($452,0,0,0);
           $result = 3;
           break L7;
           break;
          }
          case 13:  {
           $453 = $var;
           $454 = ((($453)) + 4|0);
           $455 = HEAPU8[$454>>0]|(HEAPU8[$454+1>>0]<<8)|(HEAPU8[$454+2>>0]<<16)|(HEAPU8[$454+3>>0]<<24);
           $456 = ((($455)) + 4|0);
           $457 = HEAPU8[$456>>0]|(HEAPU8[$456+1>>0]<<8)|(HEAPU8[$456+2>>0]<<16)|(HEAPU8[$456+3>>0]<<24);
           $458 = HEAP32[$val>>2]|0;
           $459 = (__set_dict($457,$key,0,0,$458)|0);
           $460 = ($459<<24>>24)!=(0);
           if ($460) {
            break L7;
           }
           $461 = HEAP32[$val>>2]|0;
           $462 = ($461|0)!=(0|0);
           if (!($462)) {
            ___assert_fail((4369|0),(4322|0),15670,(5341|0));
            // unreachable;
           }
           $463 = HEAP32[$val>>2]|0;
           _mb_free($463);
           HEAP32[$val>>2] = 0;
           $464 = $2;
           $465 = ($464|0)!=(0|0);
           do {
            if ($465) {
             $466 = $2;
             $467 = HEAP32[$466>>2]|0;
             $468 = ($467|0)!=(0|0);
             if (!($468)) {
              break;
             }
             $469 = $2;
             $470 = HEAP32[$469>>2]|0;
             $471 = HEAPU8[$470>>0]|(HEAPU8[$470+1>>0]<<8)|(HEAPU8[$470+2>>0]<<16)|(HEAPU8[$470+3>>0]<<24);
             $472 = ($471|0)!=(0|0);
             if (!($472)) {
              break;
             }
             $473 = $1;
             $474 = $1;
             $475 = ((($474)) + 67|0);
             $476 = HEAPU8[$475>>0]|(HEAPU8[$475+1>>0]<<8)|(HEAPU8[$475+2>>0]<<16)|(HEAPU8[$475+3>>0]<<24);
             $477 = (__set_current_error($473,48,$476)|0);
             $478 = ($477<<24>>24)!=(0);
             if (!($478)) {
              break L7;
             }
             $479 = $1;
             $480 = $2;
             $481 = HEAP32[$480>>2]|0;
             $482 = HEAPU8[$481>>0]|(HEAPU8[$481+1>>0]<<8)|(HEAPU8[$481+2>>0]<<16)|(HEAPU8[$481+3>>0]<<24);
             $483 = ((($482)) + 9|0);
             $484 = HEAPU8[$483>>0]|(HEAPU8[$483+1>>0]<<8)|(HEAPU8[$483+2>>0]<<16)|(HEAPU8[$483+3>>0]<<24);
             $485 = $2;
             $486 = HEAP32[$485>>2]|0;
             $487 = HEAPU8[$486>>0]|(HEAPU8[$486+1>>0]<<8)|(HEAPU8[$486+2>>0]<<16)|(HEAPU8[$486+3>>0]<<24);
             $488 = ((($487)) + 13|0);
             $489 = HEAPU8[$488>>0]|(HEAPU8[$488+1>>0]<<8);
             $490 = $2;
             $491 = HEAP32[$490>>2]|0;
             $492 = HEAPU8[$491>>0]|(HEAPU8[$491+1>>0]<<8)|(HEAPU8[$491+2>>0]<<16)|(HEAPU8[$491+3>>0]<<24);
             $493 = ((($492)) + 15|0);
             $494 = HEAPU8[$493>>0]|(HEAPU8[$493+1>>0]<<8);
             __set_error_pos($479,$484,$489,$494);
             $result = 3;
             break L7;
            }
           } while(0);
           $495 = $1;
           $496 = $1;
           $497 = ((($496)) + 67|0);
           $498 = HEAPU8[$497>>0]|(HEAPU8[$497+1>>0]<<8)|(HEAPU8[$497+2>>0]<<16)|(HEAPU8[$497+3>>0]<<24);
           $499 = (__set_current_error($495,48,$498)|0);
           $500 = ($499<<24>>24)!=(0);
           if (!($500)) {
            break L7;
           }
           $501 = $1;
           __set_error_pos($501,0,0,0);
           $result = 3;
           break L7;
           break;
          }
          default: {
           break L7;
          }
          }
         } else {
          $604 = $arr;
          $605 = ($604|0)!=(0|0);
          if ($605) {
           $606 = HEAP8[$literally>>0]|0;
           $607 = $606&255;
           $608 = ($607|0)!=(0);
           if ($608) {
            $609 = HEAP32[$val>>2]|0;
            $610 = HEAPU8[$609>>0]|(HEAPU8[$609+1>>0]<<8)|(HEAPU8[$609+2>>0]<<16)|(HEAPU8[$609+3>>0]<<24);
            $611 = ($610|0)!=(1);
            if (!($611)) {
             break;
            }
            $612 = $arr;
            $613 = ((($612)) + 17|0);
            $614 = HEAPU8[$613>>0]|(HEAPU8[$613+1>>0]<<8)|(HEAPU8[$613+2>>0]<<16)|(HEAPU8[$613+3>>0]<<24);
            $615 = ($614|0)!=(0|0);
            if (!($615)) {
             $655 = HEAP32[$arr_obj>>2]|0;
             $656 = ((($655)) + 4|0);
             $657 = HEAPU8[$656>>0]|(HEAPU8[$656+1>>0]<<8)|(HEAPU8[$656+2>>0]<<16)|(HEAPU8[$656+3>>0]<<24);
             $658 = HEAP32[$arr_obj>>2]|0;
             $659 = ((($658)) + 4|0);
             $660 = HEAPU8[$659>>0]|(HEAPU8[$659+1>>0]<<8)|(HEAPU8[$659+2>>0]<<16)|(HEAPU8[$659+3>>0]<<24);
             (__unref($657,$660)|0);
             $661 = HEAP32[$val>>2]|0;
             $662 = HEAPU8[$661>>0]|(HEAPU8[$661+1>>0]<<8)|(HEAPU8[$661+2>>0]<<16)|(HEAPU8[$661+3>>0]<<24);
             $663 = HEAP32[$arr_obj>>2]|0;
             HEAP8[$663>>0]=$662&255;HEAP8[$663+1>>0]=($662>>8)&255;HEAP8[$663+2>>0]=($662>>16)&255;HEAP8[$663+3>>0]=$662>>24;
             $664 = HEAP32[$val>>2]|0;
             $665 = HEAPU8[$664>>0]|(HEAPU8[$664+1>>0]<<8)|(HEAPU8[$664+2>>0]<<16)|(HEAPU8[$664+3>>0]<<24);
             $666 = ($665|0)==(12);
             do {
              if ($666) {
               label = 132;
              } else {
               $667 = HEAP32[$val>>2]|0;
               $668 = HEAPU8[$667>>0]|(HEAPU8[$667+1>>0]<<8)|(HEAPU8[$667+2>>0]<<16)|(HEAPU8[$667+3>>0]<<24);
               $669 = ($668|0)==(14);
               if ($669) {
                label = 132;
                break;
               }
               $672 = HEAP32[$arr_obj>>2]|0;
               $673 = ((($672)) + 4|0);
               $674 = HEAP32[$val>>2]|0;
               $675 = ((($674)) + 4|0);
               ;HEAP8[$673>>0]=HEAP8[$675>>0]|0;HEAP8[$673+1>>0]=HEAP8[$675+1>>0]|0;HEAP8[$673+2>>0]=HEAP8[$675+2>>0]|0;HEAP8[$673+3>>0]=HEAP8[$675+3>>0]|0;
              }
             } while(0);
             if ((label|0) == 132) {
              $670 = HEAP32[$arr_obj>>2]|0;
              $671 = HEAP32[$val>>2]|0;
              (__assign_with_it($670,$671)|0);
             }
             $676 = HEAP32[$val>>2]|0;
             $677 = ((($676)) + 8|0);
             $678 = HEAP8[$677>>0]|0;
             $679 = $678 & 1;
             $680 = HEAP32[$arr_obj>>2]|0;
             $681 = ((($680)) + 8|0);
             $682 = HEAP8[$681>>0]|0;
             $683 = $679 & 1;
             $684 = $682 & -2;
             $685 = $684 | $683;
             HEAP8[$681>>0] = $685;
             break;
            }
            $616 = HEAP32[$val>>2]|0;
            (__destroy_object($616,0)|0);
            $617 = $2;
            $618 = ($617|0)!=(0|0);
            do {
             if ($618) {
              $619 = $2;
              $620 = HEAP32[$619>>2]|0;
              $621 = ($620|0)!=(0|0);
              if (!($621)) {
               break;
              }
              $622 = $2;
              $623 = HEAP32[$622>>2]|0;
              $624 = HEAPU8[$623>>0]|(HEAPU8[$623+1>>0]<<8)|(HEAPU8[$623+2>>0]<<16)|(HEAPU8[$623+3>>0]<<24);
              $625 = ($624|0)!=(0|0);
              if (!($625)) {
               break;
              }
              $626 = $1;
              $627 = $1;
              $628 = ((($627)) + 67|0);
              $629 = HEAPU8[$628>>0]|(HEAPU8[$628+1>>0]<<8)|(HEAPU8[$628+2>>0]<<16)|(HEAPU8[$628+3>>0]<<24);
              $630 = (__set_current_error($626,24,$629)|0);
              $631 = ($630<<24>>24)!=(0);
              if (!($631)) {
               break L7;
              }
              $632 = $1;
              $633 = $2;
              $634 = HEAP32[$633>>2]|0;
              $635 = HEAPU8[$634>>0]|(HEAPU8[$634+1>>0]<<8)|(HEAPU8[$634+2>>0]<<16)|(HEAPU8[$634+3>>0]<<24);
              $636 = ((($635)) + 9|0);
              $637 = HEAPU8[$636>>0]|(HEAPU8[$636+1>>0]<<8)|(HEAPU8[$636+2>>0]<<16)|(HEAPU8[$636+3>>0]<<24);
              $638 = $2;
              $639 = HEAP32[$638>>2]|0;
              $640 = HEAPU8[$639>>0]|(HEAPU8[$639+1>>0]<<8)|(HEAPU8[$639+2>>0]<<16)|(HEAPU8[$639+3>>0]<<24);
              $641 = ((($640)) + 13|0);
              $642 = HEAPU8[$641>>0]|(HEAPU8[$641+1>>0]<<8);
              $643 = $2;
              $644 = HEAP32[$643>>2]|0;
              $645 = HEAPU8[$644>>0]|(HEAPU8[$644+1>>0]<<8)|(HEAPU8[$644+2>>0]<<16)|(HEAPU8[$644+3>>0]<<24);
              $646 = ((($645)) + 15|0);
              $647 = HEAPU8[$646>>0]|(HEAPU8[$646+1>>0]<<8);
              __set_error_pos($632,$637,$642,$647);
              $result = 3;
              break L7;
             }
            } while(0);
            $648 = $1;
            $649 = $1;
            $650 = ((($649)) + 67|0);
            $651 = HEAPU8[$650>>0]|(HEAPU8[$650+1>>0]<<8)|(HEAPU8[$650+2>>0]<<16)|(HEAPU8[$650+3>>0]<<24);
            $652 = (__set_current_error($648,24,$651)|0);
            $653 = ($652<<24>>24)!=(0);
            if (!($653)) {
             break L7;
            }
            $654 = $1;
            __set_error_pos($654,0,0,0);
            $result = 3;
            break L7;
           }
          }
          $686 = $arr;
          $687 = ($686|0)!=(0|0);
          if ($687) {
           $688 = HEAP32[$val>>2]|0;
           $689 = HEAPU8[$688>>0]|(HEAPU8[$688+1>>0]<<8)|(HEAPU8[$688+2>>0]<<16)|(HEAPU8[$688+3>>0]<<24);
           switch ($689|0) {
           case 2:  {
            $690 = $arr;
            $691 = ((($690)) + 21|0);
            $692 = HEAPU8[$691>>0]|(HEAPU8[$691+1>>0]<<8)|(HEAPU8[$691+2>>0]<<16)|(HEAPU8[$691+3>>0]<<24);
            $693 = ($692|0)==(4);
            if (!($693)) {
             $694 = HEAP32[$val>>2]|0;
             $695 = ((($694)) + 4|0);
             $696 = HEAPU8[$695>>0]|(HEAPU8[$695+1>>0]<<8)|(HEAPU8[$695+2>>0]<<16)|(HEAPU8[$695+3>>0]<<24);
             HEAP8[$_val>>0]=$696&255;HEAP8[$_val+1>>0]=($696>>8)&255;HEAP8[$_val+2>>0]=($696>>16)&255;HEAP8[$_val+3>>0]=$696>>24;
             label = 152;
            }
            break;
           }
           case 3:  {
            $697 = $arr;
            $698 = ((($697)) + 21|0);
            $699 = HEAPU8[$698>>0]|(HEAPU8[$698+1>>0]<<8)|(HEAPU8[$698+2>>0]<<16)|(HEAPU8[$698+3>>0]<<24);
            $700 = ($699|0)==(4);
            if (!($700)) {
             $701 = HEAP32[$val>>2]|0;
             $702 = ((($701)) + 4|0);
             HEAP8[tempDoublePtr>>0]=HEAP8[$702>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$702+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$702+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$702+3>>0];$703 = +HEAPF32[tempDoublePtr>>2];
             HEAPF32[tempDoublePtr>>2]=$703;HEAP8[$_val>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$_val+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$_val+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$_val+3>>0]=HEAP8[tempDoublePtr+3>>0];
             label = 152;
            }
            break;
           }
           case 4:  {
            $704 = $arr;
            $705 = ((($704)) + 21|0);
            $706 = HEAPU8[$705>>0]|(HEAPU8[$705+1>>0]<<8)|(HEAPU8[$705+2>>0]<<16)|(HEAPU8[$705+3>>0]<<24);
            $707 = ($706|0)!=(4);
            if (!($707)) {
             $708 = HEAP32[$val>>2]|0;
             $709 = ((($708)) + 4|0);
             $710 = HEAPU8[$709>>0]|(HEAPU8[$709+1>>0]<<8)|(HEAPU8[$709+2>>0]<<16)|(HEAPU8[$709+3>>0]<<24);
             HEAP8[$_val>>0]=$710&255;HEAP8[$_val+1>>0]=($710>>8)&255;HEAP8[$_val+2>>0]=($710>>16)&255;HEAP8[$_val+3>>0]=$710>>24;
             label = 152;
            }
            break;
           }
           default: {
           }
           }
           if ((label|0) == 152) {
            $753 = $1;
            $754 = HEAP32[$ast>>2]|0;
            $755 = $arr;
            $756 = HEAP32[$arr_idx>>2]|0;
            $757 = HEAP32[$val>>2]|0;
            $758 = (__set_array_elem($753,$754,$755,$756,$_val,$757)|0);
            $result = $758;
            $759 = $result;
            $760 = ($759|0)!=(0);
            if ($760) {
             break L7;
            }
            $761 = HEAP32[$val>>2]|0;
            $762 = HEAPU8[$761>>0]|(HEAPU8[$761+1>>0]<<8)|(HEAPU8[$761+2>>0]<<16)|(HEAPU8[$761+3>>0]<<24);
            $763 = ($762|0)==(4);
            if (!($763)) {
             break;
            }
            $764 = HEAP32[$val>>2]|0;
            $765 = ((($764)) + 8|0);
            $766 = HEAP8[$765>>0]|0;
            $767 = $766 & 1;
            $768 = ($767<<24>>24)!=(0);
            if ($768) {
             break;
            }
            $769 = HEAP32[$val>>2]|0;
            $770 = ((($769)) + 4|0);
            $771 = HEAPU8[$770>>0]|(HEAPU8[$770+1>>0]<<8)|(HEAPU8[$770+2>>0]<<16)|(HEAPU8[$770+3>>0]<<24);
            $772 = ($771|0)!=(0|0);
            if ($772) {
             $773 = HEAP32[$val>>2]|0;
             $774 = ((($773)) + 4|0);
             $775 = HEAPU8[$774>>0]|(HEAPU8[$774+1>>0]<<8)|(HEAPU8[$774+2>>0]<<16)|(HEAPU8[$774+3>>0]<<24);
             _mb_free($775);
             $776 = HEAP32[$val>>2]|0;
             $777 = ((($776)) + 4|0);
             HEAP8[$777>>0]=0&255;HEAP8[$777+1>>0]=(0>>8)&255;HEAP8[$777+2>>0]=(0>>16)&255;HEAP8[$777+3>>0]=0>>24;
             break;
            } else {
             ___assert_fail((4369|0),(4322|0),15787,(5341|0));
             // unreachable;
            }
           }
           $711 = HEAP32[$val>>2]|0;
           (__dispose_object($711)|0);
           $712 = HEAP32[$val>>2]|0;
           $713 = ($712|0)!=(0|0);
           if (!($713)) {
            ___assert_fail((4369|0),(4322|0),15778,(5341|0));
            // unreachable;
           }
           $714 = HEAP32[$val>>2]|0;
           _mb_free($714);
           HEAP32[$val>>2] = 0;
           $715 = $2;
           $716 = ($715|0)!=(0|0);
           do {
            if ($716) {
             $717 = $2;
             $718 = HEAP32[$717>>2]|0;
             $719 = ($718|0)!=(0|0);
             if (!($719)) {
              break;
             }
             $720 = $2;
             $721 = HEAP32[$720>>2]|0;
             $722 = HEAPU8[$721>>0]|(HEAPU8[$721+1>>0]<<8)|(HEAPU8[$721+2>>0]<<16)|(HEAPU8[$721+3>>0]<<24);
             $723 = ($722|0)!=(0|0);
             if (!($723)) {
              break;
             }
             $724 = $1;
             $725 = $1;
             $726 = ((($725)) + 67|0);
             $727 = HEAPU8[$726>>0]|(HEAPU8[$726+1>>0]<<8)|(HEAPU8[$726+2>>0]<<16)|(HEAPU8[$726+3>>0]<<24);
             $728 = (__set_current_error($724,3,$727)|0);
             $729 = ($728<<24>>24)!=(0);
             if (!($729)) {
              break L7;
             }
             $730 = $1;
             $731 = $2;
             $732 = HEAP32[$731>>2]|0;
             $733 = HEAPU8[$732>>0]|(HEAPU8[$732+1>>0]<<8)|(HEAPU8[$732+2>>0]<<16)|(HEAPU8[$732+3>>0]<<24);
             $734 = ((($733)) + 9|0);
             $735 = HEAPU8[$734>>0]|(HEAPU8[$734+1>>0]<<8)|(HEAPU8[$734+2>>0]<<16)|(HEAPU8[$734+3>>0]<<24);
             $736 = $2;
             $737 = HEAP32[$736>>2]|0;
             $738 = HEAPU8[$737>>0]|(HEAPU8[$737+1>>0]<<8)|(HEAPU8[$737+2>>0]<<16)|(HEAPU8[$737+3>>0]<<24);
             $739 = ((($738)) + 13|0);
             $740 = HEAPU8[$739>>0]|(HEAPU8[$739+1>>0]<<8);
             $741 = $2;
             $742 = HEAP32[$741>>2]|0;
             $743 = HEAPU8[$742>>0]|(HEAPU8[$742+1>>0]<<8)|(HEAPU8[$742+2>>0]<<16)|(HEAPU8[$742+3>>0]<<24);
             $744 = ((($743)) + 15|0);
             $745 = HEAPU8[$744>>0]|(HEAPU8[$744+1>>0]<<8);
             __set_error_pos($730,$735,$740,$745);
             $result = 3;
             break L7;
            }
           } while(0);
           $746 = $1;
           $747 = $1;
           $748 = ((($747)) + 67|0);
           $749 = HEAPU8[$748>>0]|(HEAPU8[$748+1>>0]<<8)|(HEAPU8[$748+2>>0]<<16)|(HEAPU8[$748+3>>0]<<24);
           $750 = (__set_current_error($746,3,$749)|0);
           $751 = ($750<<24>>24)!=(0);
           if (!($751)) {
            break L7;
           }
           $752 = $1;
           __set_error_pos($752,0,0,0);
           $result = 3;
           break L7;
          }
         }
        } while(0);
        L188: while(1) {
         $778 = $refc;
         $779 = (($778) + -1)|0;
         $refc = $779;
         $780 = ($778|0)!=(0);
         $781 = HEAP32[$val>>2]|0;
         if (!($780)) {
          break;
         }
         $782 = HEAPU8[$781>>0]|(HEAPU8[$781+1>>0]<<8)|(HEAPU8[$781+2>>0]<<16)|(HEAPU8[$781+3>>0]<<24);
         switch ($782|0) {
         case 7:  {
          $783 = HEAP32[$val>>2]|0;
          $784 = ((($783)) + 4|0);
          $785 = HEAPU8[$784>>0]|(HEAPU8[$784+1>>0]<<8)|(HEAPU8[$784+2>>0]<<16)|(HEAPU8[$784+3>>0]<<24);
          $786 = HEAP32[$val>>2]|0;
          $787 = ((($786)) + 4|0);
          $788 = HEAPU8[$787>>0]|(HEAPU8[$787+1>>0]<<8)|(HEAPU8[$787+2>>0]<<16)|(HEAPU8[$787+3>>0]<<24);
          (__ref($785,$788)|0);
          continue L188;
          break;
         }
         case 10:  {
          $789 = HEAP32[$val>>2]|0;
          $790 = ((($789)) + 8|0);
          $791 = HEAP8[$790>>0]|0;
          $792 = $791 & 1;
          $793 = ($792<<24>>24)!=(0);
          if ($793) {
           continue L188;
          }
          $794 = HEAP32[$val>>2]|0;
          $795 = ((($794)) + 4|0);
          $796 = HEAPU8[$795>>0]|(HEAPU8[$795+1>>0]<<8)|(HEAPU8[$795+2>>0]<<16)|(HEAPU8[$795+3>>0]<<24);
          $797 = HEAP32[$val>>2]|0;
          $798 = ((($797)) + 4|0);
          $799 = HEAPU8[$798>>0]|(HEAPU8[$798+1>>0]<<8)|(HEAPU8[$798+2>>0]<<16)|(HEAPU8[$798+3>>0]<<24);
          (__ref($796,$799)|0);
          continue L188;
          break;
         }
         case 11:  {
          $800 = HEAP32[$val>>2]|0;
          $801 = ((($800)) + 4|0);
          $802 = HEAPU8[$801>>0]|(HEAPU8[$801+1>>0]<<8)|(HEAPU8[$801+2>>0]<<16)|(HEAPU8[$801+3>>0]<<24);
          $803 = HEAP32[$val>>2]|0;
          $804 = ((($803)) + 4|0);
          $805 = HEAPU8[$804>>0]|(HEAPU8[$804+1>>0]<<8)|(HEAPU8[$804+2>>0]<<16)|(HEAPU8[$804+3>>0]<<24);
          (__ref($802,$805)|0);
          continue L188;
          break;
         }
         case 13:  {
          $806 = HEAP32[$val>>2]|0;
          $807 = ((($806)) + 4|0);
          $808 = HEAPU8[$807>>0]|(HEAPU8[$807+1>>0]<<8)|(HEAPU8[$807+2>>0]<<16)|(HEAPU8[$807+3>>0]<<24);
          $809 = HEAP32[$val>>2]|0;
          $810 = ((($809)) + 4|0);
          $811 = HEAPU8[$810>>0]|(HEAPU8[$810+1>>0]<<8)|(HEAPU8[$810+2>>0]<<16)|(HEAPU8[$810+3>>0]<<24);
          (__ref($808,$811)|0);
          continue L188;
          break;
         }
         case 16:  {
          $812 = HEAP32[$val>>2]|0;
          $813 = ((($812)) + 4|0);
          $814 = HEAPU8[$813>>0]|(HEAPU8[$813+1>>0]<<8)|(HEAPU8[$813+2>>0]<<16)|(HEAPU8[$813+3>>0]<<24);
          $815 = HEAP32[$val>>2]|0;
          $816 = ((($815)) + 4|0);
          $817 = HEAPU8[$816>>0]|(HEAPU8[$816+1>>0]<<8)|(HEAPU8[$816+2>>0]<<16)|(HEAPU8[$816+3>>0]<<24);
          (__ref($814,$817)|0);
          continue L188;
          break;
         }
         case 17:  {
          $818 = HEAP32[$val>>2]|0;
          $819 = ((($818)) + 8|0);
          $820 = HEAP8[$819>>0]|0;
          $821 = $820 & 1;
          $822 = ($821<<24>>24)!=(0);
          if ($822) {
           continue L188;
          }
          $823 = HEAP32[$val>>2]|0;
          $824 = ((($823)) + 4|0);
          $825 = HEAPU8[$824>>0]|(HEAPU8[$824+1>>0]<<8)|(HEAPU8[$824+2>>0]<<16)|(HEAPU8[$824+3>>0]<<24);
          $826 = ((($825)) + 58|0);
          $827 = HEAPU8[$826>>0]|(HEAPU8[$826+1>>0]<<8)|(HEAPU8[$826+2>>0]<<16)|(HEAPU8[$826+3>>0]<<24);
          $828 = ($827|0)==(2);
          if (!($828)) {
           continue L188;
          }
          $829 = HEAP32[$val>>2]|0;
          $830 = ((($829)) + 4|0);
          $831 = HEAPU8[$830>>0]|(HEAPU8[$830+1>>0]<<8)|(HEAPU8[$830+2>>0]<<16)|(HEAPU8[$830+3>>0]<<24);
          $832 = HEAP32[$val>>2]|0;
          $833 = ((($832)) + 4|0);
          $834 = HEAPU8[$833>>0]|(HEAPU8[$833+1>>0]<<8)|(HEAPU8[$833+2>>0]<<16)|(HEAPU8[$833+3>>0]<<24);
          (__ref($831,$834)|0);
          continue L188;
          break;
         }
         default: {
          continue L188;
         }
         }
        }
        $835 = ($781|0)!=(0|0);
        if ($835) {
         $836 = HEAP32[$val>>2]|0;
         _mb_free($836);
         HEAP32[$val>>2] = 0;
         break;
        } else {
         ___assert_fail((4369|0),(4322|0),15793,(5341|0));
         // unreachable;
        }
       }
      }
      $359 = HEAP32[$ast>>2]|0;
      $360 = ($359|0)!=(0|0);
      if ($360) {
       $361 = HEAP32[$ast>>2]|0;
       $362 = HEAPU8[$361>>0]|(HEAPU8[$361+1>>0]<<8)|(HEAPU8[$361+2>>0]<<16)|(HEAPU8[$361+3>>0]<<24);
       $363 = ($362|0)!=(0|0);
       if ($363) {
        $364 = $1;
        $365 = $1;
        $366 = ((($365)) + 67|0);
        $367 = HEAPU8[$366>>0]|(HEAPU8[$366+1>>0]<<8)|(HEAPU8[$366+2>>0]<<16)|(HEAPU8[$366+3>>0]<<24);
        $368 = (__set_current_error($364,38,$367)|0);
        $369 = ($368<<24>>24)!=(0);
        if (!($369)) {
         break;
        }
        $370 = $1;
        $371 = HEAP32[$ast>>2]|0;
        $372 = HEAPU8[$371>>0]|(HEAPU8[$371+1>>0]<<8)|(HEAPU8[$371+2>>0]<<16)|(HEAPU8[$371+3>>0]<<24);
        $373 = ((($372)) + 9|0);
        $374 = HEAPU8[$373>>0]|(HEAPU8[$373+1>>0]<<8)|(HEAPU8[$373+2>>0]<<16)|(HEAPU8[$373+3>>0]<<24);
        $375 = HEAP32[$ast>>2]|0;
        $376 = HEAPU8[$375>>0]|(HEAPU8[$375+1>>0]<<8)|(HEAPU8[$375+2>>0]<<16)|(HEAPU8[$375+3>>0]<<24);
        $377 = ((($376)) + 13|0);
        $378 = HEAPU8[$377>>0]|(HEAPU8[$377+1>>0]<<8);
        $379 = HEAP32[$ast>>2]|0;
        $380 = HEAPU8[$379>>0]|(HEAPU8[$379+1>>0]<<8)|(HEAPU8[$379+2>>0]<<16)|(HEAPU8[$379+3>>0]<<24);
        $381 = ((($380)) + 15|0);
        $382 = HEAPU8[$381>>0]|(HEAPU8[$381+1>>0]<<8);
        __set_error_pos($370,$374,$378,$382);
        $result = 3;
        break;
       }
      }
      $383 = $1;
      $384 = $1;
      $385 = ((($384)) + 67|0);
      $386 = HEAPU8[$385>>0]|(HEAPU8[$385+1>>0]<<8)|(HEAPU8[$385+2>>0]<<16)|(HEAPU8[$385+3>>0]<<24);
      $387 = (__set_current_error($383,38,$386)|0);
      $388 = ($387<<24>>24)!=(0);
      if (!($388)) {
       break;
      }
      $389 = $1;
      __set_error_pos($389,0,0,0);
      $result = 3;
      break;
     }
    }
    $255 = HEAP32[$ast>>2]|0;
    $256 = ($255|0)!=(0|0);
    if ($256) {
     $257 = HEAP32[$ast>>2]|0;
     $258 = HEAPU8[$257>>0]|(HEAPU8[$257+1>>0]<<8)|(HEAPU8[$257+2>>0]<<16)|(HEAPU8[$257+3>>0]<<24);
     $259 = ($258|0)!=(0|0);
     if ($259) {
      $260 = $1;
      $261 = $1;
      $262 = ((($261)) + 67|0);
      $263 = HEAPU8[$262>>0]|(HEAPU8[$262+1>>0]<<8)|(HEAPU8[$262+2>>0]<<16)|(HEAPU8[$262+3>>0]<<24);
      $264 = (__set_current_error($260,11,$263)|0);
      $265 = ($264<<24>>24)!=(0);
      if (!($265)) {
       break;
      }
      $266 = $1;
      $267 = HEAP32[$ast>>2]|0;
      $268 = HEAPU8[$267>>0]|(HEAPU8[$267+1>>0]<<8)|(HEAPU8[$267+2>>0]<<16)|(HEAPU8[$267+3>>0]<<24);
      $269 = ((($268)) + 9|0);
      $270 = HEAPU8[$269>>0]|(HEAPU8[$269+1>>0]<<8)|(HEAPU8[$269+2>>0]<<16)|(HEAPU8[$269+3>>0]<<24);
      $271 = HEAP32[$ast>>2]|0;
      $272 = HEAPU8[$271>>0]|(HEAPU8[$271+1>>0]<<8)|(HEAPU8[$271+2>>0]<<16)|(HEAPU8[$271+3>>0]<<24);
      $273 = ((($272)) + 13|0);
      $274 = HEAPU8[$273>>0]|(HEAPU8[$273+1>>0]<<8);
      $275 = HEAP32[$ast>>2]|0;
      $276 = HEAPU8[$275>>0]|(HEAPU8[$275+1>>0]<<8)|(HEAPU8[$275+2>>0]<<16)|(HEAPU8[$275+3>>0]<<24);
      $277 = ((($276)) + 15|0);
      $278 = HEAPU8[$277>>0]|(HEAPU8[$277+1>>0]<<8);
      __set_error_pos($266,$270,$274,$278);
      $result = 3;
      break;
     }
    }
    $279 = $1;
    $280 = $1;
    $281 = ((($280)) + 67|0);
    $282 = HEAPU8[$281>>0]|(HEAPU8[$281+1>>0]<<8)|(HEAPU8[$281+2>>0]<<16)|(HEAPU8[$281+3>>0]<<24);
    $283 = (__set_current_error($279,11,$282)|0);
    $284 = ($283<<24>>24)!=(0);
    if ($284) {
     $285 = $1;
     __set_error_pos($285,0,0,0);
     $result = 3;
    }
   } else {
    label = 7;
   }
  } else {
   label = 7;
  }
 } while(0);
 do {
  if ((label|0) == 7) {
   $25 = HEAP32[$ast>>2]|0;
   $26 = ($25|0)!=(0|0);
   if ($26) {
    $27 = HEAP32[$ast>>2]|0;
    $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
    $29 = ($28|0)!=(0|0);
    if ($29) {
     $30 = $1;
     $31 = $1;
     $32 = ((($31)) + 67|0);
     $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
     $34 = (__set_current_error($30,11,$33)|0);
     $35 = ($34<<24>>24)!=(0);
     if (!($35)) {
      break;
     }
     $36 = $1;
     $37 = HEAP32[$ast>>2]|0;
     $38 = HEAPU8[$37>>0]|(HEAPU8[$37+1>>0]<<8)|(HEAPU8[$37+2>>0]<<16)|(HEAPU8[$37+3>>0]<<24);
     $39 = ((($38)) + 9|0);
     $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8)|(HEAPU8[$39+2>>0]<<16)|(HEAPU8[$39+3>>0]<<24);
     $41 = HEAP32[$ast>>2]|0;
     $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
     $43 = ((($42)) + 13|0);
     $44 = HEAPU8[$43>>0]|(HEAPU8[$43+1>>0]<<8);
     $45 = HEAP32[$ast>>2]|0;
     $46 = HEAPU8[$45>>0]|(HEAPU8[$45+1>>0]<<8)|(HEAPU8[$45+2>>0]<<16)|(HEAPU8[$45+3>>0]<<24);
     $47 = ((($46)) + 15|0);
     $48 = HEAPU8[$47>>0]|(HEAPU8[$47+1>>0]<<8);
     __set_error_pos($36,$40,$44,$48);
     $result = 3;
     break;
    }
   }
   $49 = $1;
   $50 = $1;
   $51 = ((($50)) + 67|0);
   $52 = HEAPU8[$51>>0]|(HEAPU8[$51+1>>0]<<8)|(HEAPU8[$51+2>>0]<<16)|(HEAPU8[$51+3>>0]<<24);
   $53 = (__set_current_error($49,11,$52)|0);
   $54 = ($53<<24>>24)!=(0);
   if ($54) {
    $55 = $1;
    __set_error_pos($55,0,0,0);
    $result = 3;
   }
  }
 } while(0);
 $837 = HEAP32[$ast>>2]|0;
 $838 = $2;
 HEAP32[$838>>2] = $837;
 $839 = $result;
 $0 = $839;
 $840 = $0;
 STACKTOP = sp;return ($840|0);
}
function __try_call_func_on_usertype_ref($s,$ast,$obj,$pathed,$ret) {
 $s = $s|0;
 $ast = $ast|0;
 $obj = $obj|0;
 $pathed = $pathed|0;
 $ret = $ret|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $8 = 0, $9 = 0, $fn = 0, $func = 0, $mod = 0, $mp = 0, $r = 0, $tmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $mod = sp + 40|0;
 $1 = $s;
 $2 = $ast;
 $3 = $obj;
 $4 = $pathed;
 $5 = $ret;
 $6 = $4;
 $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
 $tmp = $7;
 $8 = $tmp;
 $9 = ($8|0)!=(0|0);
 if ($9) {
  $10 = $tmp;
  $11 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
  $12 = ($11|0)==(9);
  if ($12) {
   $13 = $tmp;
   $14 = ((($13)) + 4|0);
   $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
   $16 = ((($15)) + 4|0);
   $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
   $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
   $19 = ($18|0)==(7);
   if ($19) {
    HEAP8[$mod>>0] = 0;
    $fn = 0;
    $func = 0;
    $20 = $3;
    $21 = ((($20)) + 4|0);
    $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
    $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
    $24 = (_strrchr($23,46)|0);
    $r = $24;
    $25 = $r;
    $26 = ($25|0)!=(0|0);
    if (!($26)) {
     $0 = 0;
     $69 = $0;
     STACKTOP = sp;return ($69|0);
    }
    $27 = $r;
    $28 = ((($27)) + 1|0);
    $r = $28;
    $29 = $1;
    $30 = $r;
    $31 = (__find_func($29,$30,$mod)|0);
    $fn = $31;
    $32 = $fn;
    $33 = ($32|0)!=(0|0);
    if ($33) {
     $34 = $fn;
     $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
     $36 = ($35|0)!=(0|0);
     if ($36) {
      $37 = HEAP8[$mod>>0]|0;
      $38 = ($37<<24>>24)!=(0);
      $39 = $fn;
      $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8)|(HEAPU8[$39+2>>0]<<16)|(HEAPU8[$39+3>>0]<<24);
      if ($38) {
       $mp = $40;
       $41 = $mp;
       $42 = ((($41)) + 4|0);
       $43 = HEAPU8[$42>>0]|(HEAPU8[$42+1>>0]<<8)|(HEAPU8[$42+2>>0]<<16)|(HEAPU8[$42+3>>0]<<24);
       $44 = $43;
       $45 = $44;
       $func = $45;
      } else {
       $46 = $40;
       $47 = $46;
       $func = $47;
      }
      $48 = $tmp;
      $49 = ((($48)) + 4|0);
      $50 = HEAPU8[$49>>0]|(HEAPU8[$49+1>>0]<<8)|(HEAPU8[$49+2>>0]<<16)|(HEAPU8[$49+3>>0]<<24);
      $51 = ((($50)) + 4|0);
      $52 = HEAPU8[$51>>0]|(HEAPU8[$51+1>>0]<<8)|(HEAPU8[$51+2>>0]<<16)|(HEAPU8[$51+3>>0]<<24);
      $53 = $1;
      $54 = ((($53)) + 88|0);
      HEAP8[$54>>0]=$52&255;HEAP8[$54+1>>0]=($52>>8)&255;HEAP8[$54+2>>0]=($52>>16)&255;HEAP8[$54+3>>0]=$52>>24;
      $55 = $1;
      $56 = ((($55)) + 126|0);
      $57 = HEAPU8[$56>>0]|(HEAPU8[$56+1>>0]<<8)|(HEAPU8[$56+2>>0]<<16)|(HEAPU8[$56+3>>0]<<24);
      $58 = $r;
      (__ls_pushback($57,$58)|0);
      $59 = $5;
      $60 = ($59|0)!=(0|0);
      $61 = $func;
      $62 = $1;
      $63 = $2;
      $64 = (FUNCTION_TABLE_iii[$61 & 255]($62,$63)|0);
      if ($60) {
       $65 = $5;
       HEAP32[$65>>2] = $64;
      }
      $66 = $1;
      $67 = ((($66)) + 126|0);
      $68 = HEAPU8[$67>>0]|(HEAPU8[$67+1>>0]<<8)|(HEAPU8[$67+2>>0]<<16)|(HEAPU8[$67+3>>0]<<24);
      (__ls_popback($68)|0);
      $0 = 1;
      $69 = $0;
      STACKTOP = sp;return ($69|0);
     }
    }
   }
  }
 }
 $0 = 0;
 $69 = $0;
 STACKTOP = sp;return ($69|0);
}
function __core_call($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0;
 var $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0;
 var $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0;
 var $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0;
 var $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0;
 var $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $__hr = 0, $__hr1 = 0, $__hr2 = 0, $ast = 0, $fp = 0, $is_a0 = 0, $is_a1 = 0, $obj = 0, $or$cond = 0, $or$cond3 = 0, $or$cond5 = 0, $pathed = 0, $result = 0, $ret = 0, $ret$byval_copy = 0, $routine = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ret$byval_copy = sp + 48|0;
 $ast = sp + 28|0;
 $ret = sp + 64|0;
 $is_a0 = sp + 57|0;
 $is_a1 = sp + 56|0;
 $1 = $s;
 $2 = $l;
 $result = 0;
 HEAP32[$ast>>2] = 0;
 $obj = 0;
 $routine = 0;
 $pathed = 0;
 $3 = $1;
 $4 = ($3|0)!=(0|0);
 $5 = $2;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),16474,(5283|0));
  // unreachable;
 }
 $7 = $2;
 $8 = HEAP32[$7>>2]|0;
 HEAP32[$ast>>2] = $8;
 $9 = HEAP32[$ast>>2]|0;
 $10 = ((($9)) + 8|0);
 $11 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
 HEAP32[$ast>>2] = $11;
 $12 = HEAP32[$ast>>2]|0;
 $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
 $obj = $13;
 L4: while(1) {
  $14 = $obj;
  $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
  switch ($15|0) {
  case 8:  {
   label = 5;
   break L4;
   break;
  }
  case 17:  {
   label = 39;
   break L4;
   break;
  }
  case 9:  {
   break;
  }
  default: {
   label = 73;
   break L4;
  }
  }
  $123 = $obj;
  $124 = ((($123)) + 4|0);
  $125 = HEAPU8[$124>>0]|(HEAPU8[$124+1>>0]<<8)|(HEAPU8[$124+2>>0]<<16)|(HEAPU8[$124+3>>0]<<24);
  $126 = ((($125)) + 4|0);
  $127 = HEAPU8[$126>>0]|(HEAPU8[$126+1>>0]<<8)|(HEAPU8[$126+2>>0]<<16)|(HEAPU8[$126+3>>0]<<24);
  $128 = HEAPU8[$127>>0]|(HEAPU8[$127+1>>0]<<8)|(HEAPU8[$127+2>>0]<<16)|(HEAPU8[$127+3>>0]<<24);
  $129 = ($128|0)==(17);
  if ($129) {
   $130 = $obj;
   $131 = ((($130)) + 4|0);
   $132 = HEAPU8[$131>>0]|(HEAPU8[$131+1>>0]<<8)|(HEAPU8[$131+2>>0]<<16)|(HEAPU8[$131+3>>0]<<24);
   $133 = ((($132)) + 4|0);
   $134 = HEAPU8[$133>>0]|(HEAPU8[$133+1>>0]<<8)|(HEAPU8[$133+2>>0]<<16)|(HEAPU8[$133+3>>0]<<24);
   $135 = ((($134)) + 4|0);
   $136 = HEAPU8[$135>>0]|(HEAPU8[$135+1>>0]<<8)|(HEAPU8[$135+2>>0]<<16)|(HEAPU8[$135+3>>0]<<24);
   $137 = ((($136)) + 58|0);
   $138 = HEAPU8[$137>>0]|(HEAPU8[$137+1>>0]<<8)|(HEAPU8[$137+2>>0]<<16)|(HEAPU8[$137+3>>0]<<24);
   $139 = ($138|0)==(2);
   if ($139) {
    $140 = $obj;
    $141 = ((($140)) + 4|0);
    $142 = HEAPU8[$141>>0]|(HEAPU8[$141+1>>0]<<8)|(HEAPU8[$141+2>>0]<<16)|(HEAPU8[$141+3>>0]<<24);
    $143 = ((($142)) + 8|0);
    $144 = HEAP8[$143>>0]|0;
    $145 = $144 & 3;
    $146 = ($145<<24>>24)!=(0);
    $147 = $146 ^ 1;
    $148 = $147 ^ 1;
    $149 = $148 ? 1 : 0;
    $fp = $149;
    $150 = $1;
    $151 = $obj;
    $152 = ((($151)) + 4|0);
    $153 = HEAPU8[$152>>0]|(HEAPU8[$152+1>>0]<<8)|(HEAPU8[$152+2>>0]<<16)|(HEAPU8[$152+3>>0]<<24);
    $154 = HEAPU8[$153>>0]|(HEAPU8[$153+1>>0]<<8)|(HEAPU8[$153+2>>0]<<16)|(HEAPU8[$153+3>>0]<<24);
    $155 = $fp;
    $156 = (__search_identifier_in_scope_chain($150,0,$154,$155,0,0)|0);
    $pathed = $156;
    $157 = $pathed;
    $158 = ($157|0)!=(0|0);
    if ($158) {
     $159 = $pathed;
     $160 = HEAPU8[$159>>0]|(HEAPU8[$159+1>>0]<<8)|(HEAPU8[$159+2>>0]<<16)|(HEAPU8[$159+3>>0]<<24);
     $161 = ($160|0)!=(0|0);
     if ($161) {
      $162 = $pathed;
      $163 = HEAPU8[$162>>0]|(HEAPU8[$162+1>>0]<<8)|(HEAPU8[$162+2>>0]<<16)|(HEAPU8[$162+3>>0]<<24);
      $obj = $163;
     }
    }
    $164 = $obj;
    $165 = ($164|0)!=(0|0);
    if (!($165)) {
     continue;
    }
    $166 = $obj;
    $167 = HEAPU8[$166>>0]|(HEAPU8[$166+1>>0]<<8)|(HEAPU8[$166+2>>0]<<16)|(HEAPU8[$166+3>>0]<<24);
    $168 = ($167|0)==(9);
    if (!($168)) {
     continue;
    }
   }
  }
  $169 = $obj;
  $170 = ((($169)) + 4|0);
  $171 = HEAPU8[$170>>0]|(HEAPU8[$170+1>>0]<<8)|(HEAPU8[$170+2>>0]<<16)|(HEAPU8[$170+3>>0]<<24);
  $172 = ((($171)) + 4|0);
  $173 = HEAPU8[$172>>0]|(HEAPU8[$172+1>>0]<<8)|(HEAPU8[$172+2>>0]<<16)|(HEAPU8[$172+3>>0]<<24);
  $174 = HEAPU8[$173>>0]|(HEAPU8[$173+1>>0]<<8)|(HEAPU8[$173+2>>0]<<16)|(HEAPU8[$173+3>>0]<<24);
  $175 = ($174|0)==(17);
  if (!($175)) {
   label = 36;
   break;
  }
  $176 = $obj;
  $177 = ((($176)) + 4|0);
  $178 = HEAPU8[$177>>0]|(HEAPU8[$177+1>>0]<<8)|(HEAPU8[$177+2>>0]<<16)|(HEAPU8[$177+3>>0]<<24);
  $179 = ((($178)) + 4|0);
  $180 = HEAPU8[$179>>0]|(HEAPU8[$179+1>>0]<<8)|(HEAPU8[$179+2>>0]<<16)|(HEAPU8[$179+3>>0]<<24);
  $obj = $180;
 }
 do {
  if ((label|0) == 5) {
   $16 = $obj;
   $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
   $18 = ($17|0)==(8);
   if ($18) {
    $19 = $obj;
    $20 = ((($19)) + 4|0);
    $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
    $22 = ((($21)) + 4|0);
    $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
    $24 = ($23|0)==(7|0);
    if ($24) {
     $25 = $1;
     $26 = $2;
     $27 = (_mb_attempt_open_bracket($25,$26)|0);
     $__hr = $27;
     $28 = $__hr;
     $29 = ($28|0)!=(0);
     if ($29) {
      $30 = $__hr;
      $0 = $30;
      $380 = $0;
      STACKTOP = sp;return ($380|0);
     }
     $31 = HEAP32[$ast>>2]|0;
     $32 = ((($31)) + 8|0);
     $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
     HEAP32[$ast>>2] = $33;
     $34 = HEAP32[$ast>>2]|0;
     $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
     $obj = $35;
     $36 = $obj;
     $37 = ($36|0)!=(0|0);
     if ($37) {
      $38 = $obj;
      $39 = HEAPU8[$38>>0]|(HEAPU8[$38+1>>0]<<8)|(HEAPU8[$38+2>>0]<<16)|(HEAPU8[$38+3>>0]<<24);
      $40 = ($39|0)==(9);
      if ($40) {
       $41 = $1;
       $42 = $obj;
       $43 = ((($42)) + 4|0);
       $44 = HEAPU8[$43>>0]|(HEAPU8[$43+1>>0]<<8)|(HEAPU8[$43+2>>0]<<16)|(HEAPU8[$43+3>>0]<<24);
       $45 = HEAPU8[$44>>0]|(HEAPU8[$44+1>>0]<<8)|(HEAPU8[$44+2>>0]<<16)|(HEAPU8[$44+3>>0]<<24);
       $46 = $obj;
       $47 = ((($46)) + 4|0);
       $48 = HEAPU8[$47>>0]|(HEAPU8[$47+1>>0]<<8)|(HEAPU8[$47+2>>0]<<16)|(HEAPU8[$47+3>>0]<<24);
       $49 = ((($48)) + 8|0);
       $50 = HEAP8[$49>>0]|0;
       $51 = $50 & 3;
       $52 = ($51<<24>>24)!=(0);
       $53 = $52 ^ 1;
       $54 = $53 ^ 1;
       $55 = $54 ? 1 : 0;
       $56 = (__search_identifier_in_scope_chain($41,0,$45,$55,0,0)|0);
       $pathed = $56;
       $57 = $pathed;
       $58 = ($57|0)!=(0|0);
       if ($58) {
        $59 = $pathed;
        $60 = HEAPU8[$59>>0]|(HEAPU8[$59+1>>0]<<8)|(HEAPU8[$59+2>>0]<<16)|(HEAPU8[$59+3>>0]<<24);
        $61 = ($60|0)!=(0|0);
        if ($61) {
         $62 = $pathed;
         $63 = HEAPU8[$62>>0]|(HEAPU8[$62+1>>0]<<8)|(HEAPU8[$62+2>>0]<<16)|(HEAPU8[$62+3>>0]<<24);
         $obj = $63;
        }
       }
      }
     }
     $64 = $obj;
     $65 = ($64|0)!=(0|0);
     if ($65) {
      $66 = $obj;
      $67 = HEAPU8[$66>>0]|(HEAPU8[$66+1>>0]<<8)|(HEAPU8[$66+2>>0]<<16)|(HEAPU8[$66+3>>0]<<24);
      $68 = ($67|0)!=(17);
      if (!($68)) {
       HEAP8[$ret>>0]=8192&255;HEAP8[$ret+1>>0]=(8192>>8)&255;HEAP8[$ret+2>>0]=(8192>>16)&255;HEAP8[$ret+3>>0]=8192>>24;
       $100 = $obj;
       $101 = ((($100)) + 4|0);
       $102 = HEAPU8[$101>>0]|(HEAPU8[$101+1>>0]<<8)|(HEAPU8[$101+2>>0]<<16)|(HEAPU8[$101+3>>0]<<24);
       $103 = ((($ret)) + 4|0);
       HEAP8[$103>>0]=$102&255;HEAP8[$103+1>>0]=($102>>8)&255;HEAP8[$103+2>>0]=($102>>16)&255;HEAP8[$103+3>>0]=$102>>24;
       $104 = HEAP32[$ast>>2]|0;
       $105 = ((($104)) + 8|0);
       $106 = HEAPU8[$105>>0]|(HEAPU8[$105+1>>0]<<8)|(HEAPU8[$105+2>>0]<<16)|(HEAPU8[$105+3>>0]<<24);
       HEAP32[$ast>>2] = $106;
       $107 = HEAP32[$ast>>2]|0;
       $108 = $2;
       HEAP32[$108>>2] = $107;
       $109 = $1;
       $110 = $2;
       $111 = (_mb_attempt_close_bracket($109,$110)|0);
       $__hr1 = $111;
       $112 = $__hr1;
       $113 = ($112|0)!=(0);
       if ($113) {
        $114 = $__hr1;
        $0 = $114;
        $380 = $0;
        STACKTOP = sp;return ($380|0);
       }
       $115 = $1;
       $116 = $2;
       ;HEAP32[$ret$byval_copy>>2]=HEAP32[$ret>>2]|0;HEAP32[$ret$byval_copy+4>>2]=HEAP32[$ret+4>>2]|0;
       $117 = (_mb_push_value($115,$116,$ret$byval_copy)|0);
       $__hr2 = $117;
       $118 = $__hr2;
       $119 = ($118|0)!=(0);
       if (!($119)) {
        $121 = $2;
        $122 = HEAP32[$121>>2]|0;
        HEAP32[$ast>>2] = $122;
        label = 73;
        break;
       }
       $120 = $__hr2;
       $0 = $120;
       $380 = $0;
       STACKTOP = sp;return ($380|0);
      }
     }
     $69 = HEAP32[$ast>>2]|0;
     $70 = ($69|0)!=(0|0);
     if ($70) {
      $71 = HEAP32[$ast>>2]|0;
      $72 = HEAPU8[$71>>0]|(HEAPU8[$71+1>>0]<<8)|(HEAPU8[$71+2>>0]<<16)|(HEAPU8[$71+3>>0]<<24);
      $73 = ($72|0)!=(0|0);
      if ($73) {
       $74 = $1;
       $75 = $1;
       $76 = ((($75)) + 67|0);
       $77 = HEAPU8[$76>>0]|(HEAPU8[$76+1>>0]<<8)|(HEAPU8[$76+2>>0]<<16)|(HEAPU8[$76+3>>0]<<24);
       $78 = (__set_current_error($74,54,$77)|0);
       $79 = ($78<<24>>24)!=(0);
       if (!($79)) {
        break;
       }
       $80 = $1;
       $81 = HEAP32[$ast>>2]|0;
       $82 = HEAPU8[$81>>0]|(HEAPU8[$81+1>>0]<<8)|(HEAPU8[$81+2>>0]<<16)|(HEAPU8[$81+3>>0]<<24);
       $83 = ((($82)) + 9|0);
       $84 = HEAPU8[$83>>0]|(HEAPU8[$83+1>>0]<<8)|(HEAPU8[$83+2>>0]<<16)|(HEAPU8[$83+3>>0]<<24);
       $85 = HEAP32[$ast>>2]|0;
       $86 = HEAPU8[$85>>0]|(HEAPU8[$85+1>>0]<<8)|(HEAPU8[$85+2>>0]<<16)|(HEAPU8[$85+3>>0]<<24);
       $87 = ((($86)) + 13|0);
       $88 = HEAPU8[$87>>0]|(HEAPU8[$87+1>>0]<<8);
       $89 = HEAP32[$ast>>2]|0;
       $90 = HEAPU8[$89>>0]|(HEAPU8[$89+1>>0]<<8)|(HEAPU8[$89+2>>0]<<16)|(HEAPU8[$89+3>>0]<<24);
       $91 = ((($90)) + 15|0);
       $92 = HEAPU8[$91>>0]|(HEAPU8[$91+1>>0]<<8);
       __set_error_pos($80,$84,$88,$92);
       $result = 3;
       break;
      }
     }
     $93 = $1;
     $94 = $1;
     $95 = ((($94)) + 67|0);
     $96 = HEAPU8[$95>>0]|(HEAPU8[$95+1>>0]<<8)|(HEAPU8[$95+2>>0]<<16)|(HEAPU8[$95+3>>0]<<24);
     $97 = (__set_current_error($93,54,$96)|0);
     $98 = ($97<<24>>24)!=(0);
     if ($98) {
      $99 = $1;
      __set_error_pos($99,0,0,0);
      $result = 3;
     }
    } else {
     label = 73;
    }
   } else {
    label = 73;
   }
  }
  else if ((label|0) == 36) {
   $181 = $1;
   $182 = $obj;
   $183 = ((($182)) + 4|0);
   $184 = HEAPU8[$183>>0]|(HEAPU8[$183+1>>0]<<8)|(HEAPU8[$183+2>>0]<<16)|(HEAPU8[$183+3>>0]<<24);
   $185 = HEAPU8[$184>>0]|(HEAPU8[$184+1>>0]<<8)|(HEAPU8[$184+2>>0]<<16)|(HEAPU8[$184+3>>0]<<24);
   $186 = $obj;
   $187 = ((($186)) + 4|0);
   $188 = HEAPU8[$187>>0]|(HEAPU8[$187+1>>0]<<8)|(HEAPU8[$187+2>>0]<<16)|(HEAPU8[$187+3>>0]<<24);
   $189 = ((($188)) + 8|0);
   $190 = HEAP8[$189>>0]|0;
   $191 = $190 & 3;
   $192 = ($191<<24>>24)!=(0);
   $193 = $192 ^ 1;
   $194 = $193 ^ 1;
   $195 = $194 ? 1 : 0;
   $196 = (__search_identifier_in_scope_chain($181,0,$185,$195,0,0)|0);
   $pathed = $196;
   $197 = $pathed;
   $198 = ($197|0)!=(0|0);
   if ($198) {
    $199 = $pathed;
    $200 = HEAPU8[$199>>0]|(HEAPU8[$199+1>>0]<<8)|(HEAPU8[$199+2>>0]<<16)|(HEAPU8[$199+3>>0]<<24);
    $201 = ($200|0)!=(0|0);
    if ($201) {
     $202 = $pathed;
     $203 = HEAPU8[$202>>0]|(HEAPU8[$202+1>>0]<<8)|(HEAPU8[$202+2>>0]<<16)|(HEAPU8[$202+3>>0]<<24);
     $obj = $203;
     label = 39;
    } else {
     label = 39;
    }
   } else {
    label = 39;
   }
  }
 } while(0);
 if ((label|0) == 39) {
  $204 = $obj;
  $205 = ($204|0)!=(0|0);
  do {
   if ($205) {
    $206 = $obj;
    $207 = ($206|0)!=(0|0);
    if ($207) {
     $208 = $obj;
     $209 = HEAPU8[$208>>0]|(HEAPU8[$208+1>>0]<<8)|(HEAPU8[$208+2>>0]<<16)|(HEAPU8[$208+3>>0]<<24);
     $210 = ($209|0)==(17);
     if ($210) {
      $211 = $obj;
      $235 = $211;
      break;
     }
    }
    $212 = $obj;
    $213 = ($212|0)!=(0|0);
    if ($213) {
     $214 = $obj;
     $215 = HEAPU8[$214>>0]|(HEAPU8[$214+1>>0]<<8)|(HEAPU8[$214+2>>0]<<16)|(HEAPU8[$214+3>>0]<<24);
     $216 = ($215|0)==(9);
     if ($216) {
      $217 = $obj;
      $218 = ((($217)) + 4|0);
      $219 = HEAPU8[$218>>0]|(HEAPU8[$218+1>>0]<<8)|(HEAPU8[$218+2>>0]<<16)|(HEAPU8[$218+3>>0]<<24);
      $220 = ((($219)) + 4|0);
      $221 = HEAPU8[$220>>0]|(HEAPU8[$220+1>>0]<<8)|(HEAPU8[$220+2>>0]<<16)|(HEAPU8[$220+3>>0]<<24);
      $222 = ($221|0)!=(0|0);
      if ($222) {
       $223 = $obj;
       $224 = ((($223)) + 4|0);
       $225 = HEAPU8[$224>>0]|(HEAPU8[$224+1>>0]<<8)|(HEAPU8[$224+2>>0]<<16)|(HEAPU8[$224+3>>0]<<24);
       $226 = ((($225)) + 4|0);
       $227 = HEAPU8[$226>>0]|(HEAPU8[$226+1>>0]<<8)|(HEAPU8[$226+2>>0]<<16)|(HEAPU8[$226+3>>0]<<24);
       $228 = HEAPU8[$227>>0]|(HEAPU8[$227+1>>0]<<8)|(HEAPU8[$227+2>>0]<<16)|(HEAPU8[$227+3>>0]<<24);
       $229 = ($228|0)==(17);
       if ($229) {
        $230 = $obj;
        $231 = ((($230)) + 4|0);
        $232 = HEAPU8[$231>>0]|(HEAPU8[$231+1>>0]<<8)|(HEAPU8[$231+2>>0]<<16)|(HEAPU8[$231+3>>0]<<24);
        $233 = ((($232)) + 4|0);
        $234 = HEAPU8[$233>>0]|(HEAPU8[$233+1>>0]<<8)|(HEAPU8[$233+2>>0]<<16)|(HEAPU8[$233+3>>0]<<24);
        $235 = $234;
       } else {
        $235 = 0;
       }
      } else {
       $235 = 0;
      }
     } else {
      $235 = 0;
     }
    } else {
     $235 = 0;
    }
   } else {
    $235 = 0;
   }
  } while(0);
  $obj = $235;
  $236 = $obj;
  $237 = ((($236)) + 4|0);
  $238 = HEAPU8[$237>>0]|(HEAPU8[$237+1>>0]<<8)|(HEAPU8[$237+2>>0]<<16)|(HEAPU8[$237+3>>0]<<24);
  $routine = $238;
  $239 = $routine;
  $240 = ((($239)) + 58|0);
  $241 = HEAPU8[$240>>0]|(HEAPU8[$240+1>>0]<<8)|(HEAPU8[$240+2>>0]<<16)|(HEAPU8[$240+3>>0]<<24);
  $242 = ($241|0)!=(2);
  if ($242) {
   HEAP8[$is_a0>>0] = 0;
   HEAP8[$is_a1>>0] = 0;
   $243 = $1;
   $244 = ((($243)) + 93|0);
   $245 = HEAPU8[$244>>0]|(HEAPU8[$244+1>>0]<<8)|(HEAPU8[$244+2>>0]<<16)|(HEAPU8[$244+3>>0]<<24);
   $246 = ($245|0)!=(0|0);
   if ($246) {
    $247 = $routine;
    $248 = ((($247)) + 53|0);
    $249 = HEAPU8[$248>>0]|(HEAPU8[$248+1>>0]<<8)|(HEAPU8[$248+2>>0]<<16)|(HEAPU8[$248+3>>0]<<24);
    $250 = ($249|0)!=(0|0);
    if ($250) {
     $251 = $1;
     $252 = ((($251)) + 93|0);
     $253 = HEAPU8[$252>>0]|(HEAPU8[$252+1>>0]<<8)|(HEAPU8[$252+2>>0]<<16)|(HEAPU8[$252+3>>0]<<24);
     $254 = ((($253)) + 21|0);
     $255 = HEAPU8[$254>>0]|(HEAPU8[$254+1>>0]<<8)|(HEAPU8[$254+2>>0]<<16)|(HEAPU8[$254+3>>0]<<24);
     $256 = $routine;
     $257 = ((($256)) + 53|0);
     $258 = HEAPU8[$257>>0]|(HEAPU8[$257+1>>0]<<8)|(HEAPU8[$257+2>>0]<<16)|(HEAPU8[$257+3>>0]<<24);
     $259 = ((($258)) + 21|0);
     $260 = HEAPU8[$259>>0]|(HEAPU8[$259+1>>0]<<8)|(HEAPU8[$259+2>>0]<<16)|(HEAPU8[$259+3>>0]<<24);
     (__traverse_class($255,0,157,-1,1,$260,$is_a0)|0);
     $261 = $routine;
     $262 = ((($261)) + 53|0);
     $263 = HEAPU8[$262>>0]|(HEAPU8[$262+1>>0]<<8)|(HEAPU8[$262+2>>0]<<16)|(HEAPU8[$262+3>>0]<<24);
     $264 = ((($263)) + 21|0);
     $265 = HEAPU8[$264>>0]|(HEAPU8[$264+1>>0]<<8)|(HEAPU8[$264+2>>0]<<16)|(HEAPU8[$264+3>>0]<<24);
     $266 = $1;
     $267 = ((($266)) + 93|0);
     $268 = HEAPU8[$267>>0]|(HEAPU8[$267+1>>0]<<8)|(HEAPU8[$267+2>>0]<<16)|(HEAPU8[$267+3>>0]<<24);
     $269 = ((($268)) + 21|0);
     $270 = HEAPU8[$269>>0]|(HEAPU8[$269+1>>0]<<8)|(HEAPU8[$269+2>>0]<<16)|(HEAPU8[$269+3>>0]<<24);
     (__traverse_class($265,0,157,-1,1,$270,$is_a1)|0);
    }
   }
   $271 = $routine;
   $272 = ((($271)) + 53|0);
   $273 = HEAPU8[$272>>0]|(HEAPU8[$272+1>>0]<<8)|(HEAPU8[$272+2>>0]<<16)|(HEAPU8[$272+3>>0]<<24);
   $274 = ($273|0)!=(0|0);
   do {
    if ($274) {
     $275 = $1;
     $276 = ((($275)) + 93|0);
     $277 = HEAPU8[$276>>0]|(HEAPU8[$276+1>>0]<<8)|(HEAPU8[$276+2>>0]<<16)|(HEAPU8[$276+3>>0]<<24);
     $278 = ($277|0)!=(0|0);
     if ($278) {
      $279 = $1;
      $280 = ((($279)) + 93|0);
      $281 = HEAPU8[$280>>0]|(HEAPU8[$280+1>>0]<<8)|(HEAPU8[$280+2>>0]<<16)|(HEAPU8[$280+3>>0]<<24);
      $282 = ($281|0)==(0|0);
      $283 = HEAP8[$is_a0>>0]|0;
      $284 = ($283<<24>>24)!=(0);
      $or$cond3 = $282 | $284;
      $285 = HEAP8[$is_a1>>0]|0;
      $286 = ($285<<24>>24)!=(0);
      $or$cond5 = $or$cond3 | $286;
      if ($or$cond5) {
       label = 58;
       break;
      }
      $287 = $1;
      $288 = ((($287)) + 93|0);
      $289 = HEAPU8[$288>>0]|(HEAPU8[$288+1>>0]<<8)|(HEAPU8[$288+2>>0]<<16)|(HEAPU8[$288+3>>0]<<24);
      $290 = ((($289)) + 21|0);
      $291 = HEAPU8[$290>>0]|(HEAPU8[$290+1>>0]<<8)|(HEAPU8[$290+2>>0]<<16)|(HEAPU8[$290+3>>0]<<24);
      $292 = $routine;
      $293 = ((($292)) + 53|0);
      $294 = HEAPU8[$293>>0]|(HEAPU8[$293+1>>0]<<8)|(HEAPU8[$293+2>>0]<<16)|(HEAPU8[$293+3>>0]<<24);
      $295 = ($291|0)!=($294|0);
      if (!($295)) {
       label = 58;
       break;
      }
      $296 = $routine;
      $297 = ((($296)) + 53|0);
      $298 = HEAPU8[$297>>0]|(HEAPU8[$297+1>>0]<<8)|(HEAPU8[$297+2>>0]<<16)|(HEAPU8[$297+3>>0]<<24);
      $299 = ((($298)) + 21|0);
      $300 = HEAPU8[$299>>0]|(HEAPU8[$299+1>>0]<<8)|(HEAPU8[$299+2>>0]<<16)|(HEAPU8[$299+3>>0]<<24);
      $301 = $1;
      $302 = ((($301)) + 93|0);
      $303 = HEAPU8[$302>>0]|(HEAPU8[$302+1>>0]<<8)|(HEAPU8[$302+2>>0]<<16)|(HEAPU8[$302+3>>0]<<24);
      $304 = ($300|0)!=($303|0);
      if (!($304)) {
       label = 58;
       break;
      }
     }
     $305 = $1;
     $306 = $routine;
     $307 = ((($306)) + 53|0);
     $308 = HEAPU8[$307>>0]|(HEAPU8[$307+1>>0]<<8)|(HEAPU8[$307+2>>0]<<16)|(HEAPU8[$307+3>>0]<<24);
     $309 = $routine;
     $310 = ((($309)) + 45|0);
     $311 = HEAPU8[$310>>0]|(HEAPU8[$310+1>>0]<<8)|(HEAPU8[$310+2>>0]<<16)|(HEAPU8[$310+3>>0]<<24);
     $312 = (__search_identifier_in_class($305,$308,$311,0,0)|0);
     $pathed = $312;
    } else {
     label = 58;
    }
   } while(0);
   if ((label|0) == 58) {
    $313 = $1;
    $314 = $routine;
    $315 = ((($314)) + 45|0);
    $316 = HEAPU8[$315>>0]|(HEAPU8[$315+1>>0]<<8)|(HEAPU8[$315+2>>0]<<16)|(HEAPU8[$315+3>>0]<<24);
    $317 = (__search_identifier_in_scope_chain($313,0,$316,0,0,0)|0);
    $pathed = $317;
   }
   $318 = $pathed;
   $319 = ($318|0)!=(0|0);
   if ($319) {
    $320 = $pathed;
    $321 = HEAPU8[$320>>0]|(HEAPU8[$320+1>>0]<<8)|(HEAPU8[$320+2>>0]<<16)|(HEAPU8[$320+3>>0]<<24);
    $322 = ($321|0)!=(0|0);
    if ($322) {
     $323 = $pathed;
     $324 = HEAPU8[$323>>0]|(HEAPU8[$323+1>>0]<<8)|(HEAPU8[$323+2>>0]<<16)|(HEAPU8[$323+3>>0]<<24);
     $obj = $324;
     $325 = $obj;
     $326 = ($325|0)!=(0|0);
     do {
      if ($326) {
       $327 = $obj;
       $328 = ($327|0)!=(0|0);
       if ($328) {
        $329 = $obj;
        $330 = HEAPU8[$329>>0]|(HEAPU8[$329+1>>0]<<8)|(HEAPU8[$329+2>>0]<<16)|(HEAPU8[$329+3>>0]<<24);
        $331 = ($330|0)==(17);
        if ($331) {
         $332 = $obj;
         $356 = $332;
         break;
        }
       }
       $333 = $obj;
       $334 = ($333|0)!=(0|0);
       if ($334) {
        $335 = $obj;
        $336 = HEAPU8[$335>>0]|(HEAPU8[$335+1>>0]<<8)|(HEAPU8[$335+2>>0]<<16)|(HEAPU8[$335+3>>0]<<24);
        $337 = ($336|0)==(9);
        if ($337) {
         $338 = $obj;
         $339 = ((($338)) + 4|0);
         $340 = HEAPU8[$339>>0]|(HEAPU8[$339+1>>0]<<8)|(HEAPU8[$339+2>>0]<<16)|(HEAPU8[$339+3>>0]<<24);
         $341 = ((($340)) + 4|0);
         $342 = HEAPU8[$341>>0]|(HEAPU8[$341+1>>0]<<8)|(HEAPU8[$341+2>>0]<<16)|(HEAPU8[$341+3>>0]<<24);
         $343 = ($342|0)!=(0|0);
         if ($343) {
          $344 = $obj;
          $345 = ((($344)) + 4|0);
          $346 = HEAPU8[$345>>0]|(HEAPU8[$345+1>>0]<<8)|(HEAPU8[$345+2>>0]<<16)|(HEAPU8[$345+3>>0]<<24);
          $347 = ((($346)) + 4|0);
          $348 = HEAPU8[$347>>0]|(HEAPU8[$347+1>>0]<<8)|(HEAPU8[$347+2>>0]<<16)|(HEAPU8[$347+3>>0]<<24);
          $349 = HEAPU8[$348>>0]|(HEAPU8[$348+1>>0]<<8)|(HEAPU8[$348+2>>0]<<16)|(HEAPU8[$348+3>>0]<<24);
          $350 = ($349|0)==(17);
          if ($350) {
           $351 = $obj;
           $352 = ((($351)) + 4|0);
           $353 = HEAPU8[$352>>0]|(HEAPU8[$352+1>>0]<<8)|(HEAPU8[$352+2>>0]<<16)|(HEAPU8[$352+3>>0]<<24);
           $354 = ((($353)) + 4|0);
           $355 = HEAPU8[$354>>0]|(HEAPU8[$354+1>>0]<<8)|(HEAPU8[$354+2>>0]<<16)|(HEAPU8[$354+3>>0]<<24);
           $356 = $355;
          } else {
           $356 = 0;
          }
         } else {
          $356 = 0;
         }
        } else {
         $356 = 0;
        }
       } else {
        $356 = 0;
       }
      } else {
       $356 = 0;
      }
     } while(0);
     $obj = $356;
     $357 = $obj;
     $358 = ((($357)) + 4|0);
     $359 = HEAPU8[$358>>0]|(HEAPU8[$358+1>>0]<<8)|(HEAPU8[$358+2>>0]<<16)|(HEAPU8[$358+3>>0]<<24);
     $routine = $359;
    }
   }
  }
  $360 = $1;
  $361 = ((($360)) + 97|0);
  $362 = HEAP8[$361>>0]|0;
  $363 = $362 & -2;
  $364 = $363 | 1;
  HEAP8[$361>>0] = $364;
  $365 = $1;
  $366 = $routine;
  $367 = (__eval_routine($365,$ast,0,0,$366,143,144)|0);
  $result = $367;
  $368 = $1;
  $369 = ((($368)) + 97|0);
  $370 = HEAP8[$369>>0]|0;
  $371 = $370 & -2;
  HEAP8[$369>>0] = $371;
  $372 = HEAP32[$ast>>2]|0;
  $373 = ($372|0)!=(0|0);
  if ($373) {
   $374 = HEAP32[$ast>>2]|0;
   $375 = ((($374)) + 4|0);
   $376 = HEAPU8[$375>>0]|(HEAPU8[$375+1>>0]<<8)|(HEAPU8[$375+2>>0]<<16)|(HEAPU8[$375+3>>0]<<24);
   HEAP32[$ast>>2] = $376;
   label = 73;
  } else {
   label = 73;
  }
 }
 if ((label|0) == 73) {
  $377 = HEAP32[$ast>>2]|0;
  $378 = $2;
  HEAP32[$378>>2] = $377;
 }
 $379 = $result;
 $0 = $379;
 $380 = $0;
 STACKTOP = sp;return ($380|0);
}
function __is_valid_class_accessor_following_routine($s,$var,$ast,$out) {
 $s = $s|0;
 $var = $var|0;
 $ast = $ast|0;
 $out = $out|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $8 = 0, $9 = 0, $fn = 0, $instance = 0, $or$cond = 0, $or$cond3 = 0, $or$cond5 = 0;
 var $or$cond7 = 0, $or$cond9 = 0, $result = 0, $running = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $var;
 $2 = $ast;
 $3 = $out;
 $result = 0;
 $running = 0;
 $4 = $0;
 $5 = ($4|0)!=(0|0);
 $6 = $1;
 $7 = ($6|0)!=(0|0);
 $or$cond = $5 & $7;
 if ($or$cond) {
 }
 $8 = $0;
 $9 = ($8|0)!=(0|0);
 $10 = $1;
 $11 = ($10|0)!=(0|0);
 $or$cond3 = $9 & $11;
 $12 = $2;
 $13 = ($12|0)!=(0|0);
 $or$cond5 = $or$cond3 & $13;
 if (!($or$cond5)) {
  ___assert_fail((5177|0),(4322|0),8718,(5193|0));
  // unreachable;
 }
 $14 = $0;
 $15 = ((($14)) + 75|0);
 $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
 $running = $16;
 $17 = $3;
 $18 = ($17|0)!=(0|0);
 if ($18) {
  $19 = $3;
  HEAP32[$19>>2] = 0;
 }
 $20 = $1;
 $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
 $22 = HEAP8[$21>>0]|0;
 $23 = (__is_accessor_char($22)|0);
 $24 = $23&255;
 $25 = ($24|0)!=(0);
 $26 = $2;
 $27 = ($26|0)!=(0|0);
 $or$cond7 = $25 & $27;
 if (!($or$cond7)) {
  $74 = $result;
  STACKTOP = sp;return ($74|0);
 }
 $28 = $2;
 $29 = ((($28)) + 4|0);
 $30 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8)|(HEAPU8[$29+2>>0]<<16)|(HEAPU8[$29+3>>0]<<24);
 $31 = ($30|0)!=(0|0);
 if (!($31)) {
  $74 = $result;
  STACKTOP = sp;return ($74|0);
 }
 $32 = $2;
 $33 = ((($32)) + 4|0);
 $34 = HEAPU8[$33>>0]|(HEAPU8[$33+1>>0]<<8)|(HEAPU8[$33+2>>0]<<16)|(HEAPU8[$33+3>>0]<<24);
 $35 = $0;
 $36 = ((($35)) + 17|0);
 $37 = HEAPU8[$36>>0]|(HEAPU8[$36+1>>0]<<8)|(HEAPU8[$36+2>>0]<<16)|(HEAPU8[$36+3>>0]<<24);
 $38 = ($34|0)!=($37|0);
 if (!($38)) {
  $74 = $result;
  STACKTOP = sp;return ($74|0);
 }
 $39 = $2;
 $40 = ((($39)) + 4|0);
 $41 = HEAPU8[$40>>0]|(HEAPU8[$40+1>>0]<<8)|(HEAPU8[$40+2>>0]<<16)|(HEAPU8[$40+3>>0]<<24);
 $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
 $43 = HEAPU8[$42>>0]|(HEAPU8[$42+1>>0]<<8)|(HEAPU8[$42+2>>0]<<16)|(HEAPU8[$42+3>>0]<<24);
 $44 = ($43|0)==(8);
 if (!($44)) {
  $74 = $result;
  STACKTOP = sp;return ($74|0);
 }
 $45 = $2;
 $46 = ((($45)) + 4|0);
 $47 = HEAPU8[$46>>0]|(HEAPU8[$46+1>>0]<<8)|(HEAPU8[$46+2>>0]<<16)|(HEAPU8[$46+3>>0]<<24);
 $48 = HEAPU8[$47>>0]|(HEAPU8[$47+1>>0]<<8)|(HEAPU8[$47+2>>0]<<16)|(HEAPU8[$47+3>>0]<<24);
 $49 = ((($48)) + 4|0);
 $50 = HEAPU8[$49>>0]|(HEAPU8[$49+1>>0]<<8)|(HEAPU8[$49+2>>0]<<16)|(HEAPU8[$49+3>>0]<<24);
 $51 = ((($50)) + 4|0);
 $52 = HEAPU8[$51>>0]|(HEAPU8[$51+1>>0]<<8)|(HEAPU8[$51+2>>0]<<16)|(HEAPU8[$51+3>>0]<<24);
 $53 = ($52|0)==(8|0);
 if (!($53)) {
  $74 = $result;
  STACKTOP = sp;return ($74|0);
 }
 $54 = $running;
 $55 = ((($54)) + 20|0);
 $56 = HEAPU8[$55>>0]|(HEAPU8[$55+1>>0]<<8)|(HEAPU8[$55+2>>0]<<16)|(HEAPU8[$55+3>>0]<<24);
 $57 = ($56|0)==(4096);
 if (!($57)) {
  $74 = $result;
  STACKTOP = sp;return ($74|0);
 }
 $58 = $running;
 $59 = ((($58)) + 20|0);
 $60 = ((($59)) + 4|0);
 $61 = HEAPU8[$60>>0]|(HEAPU8[$60+1>>0]<<8)|(HEAPU8[$60+2>>0]<<16)|(HEAPU8[$60+3>>0]<<24);
 $instance = $61;
 $62 = $0;
 $63 = $instance;
 $64 = $1;
 $65 = HEAPU8[$64>>0]|(HEAPU8[$64+1>>0]<<8)|(HEAPU8[$64+2>>0]<<16)|(HEAPU8[$64+3>>0]<<24);
 $66 = ((($65)) + 1|0);
 $67 = (__search_identifier_in_class($62,$63,$66,0,0)|0);
 $fn = $67;
 $result = 1;
 $68 = $fn;
 $69 = ($68|0)!=(0|0);
 $70 = $3;
 $71 = ($70|0)!=(0|0);
 $or$cond9 = $69 & $71;
 if (!($or$cond9)) {
  $74 = $result;
  STACKTOP = sp;return ($74|0);
 }
 $72 = $fn;
 $73 = $3;
 HEAP32[$73>>2] = $72;
 $74 = $result;
 STACKTOP = sp;return ($74|0);
}
function __core_enddef($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $ast = 0, $or$cond = 0, $result = 0, $sub_stack = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $l;
 $result = 103;
 $ast = 0;
 $sub_stack = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),16675,(5164|0));
  // unreachable;
 }
 $6 = $0;
 $7 = ((($6)) + 102|0);
 $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
 $sub_stack = $8;
 $9 = $sub_stack;
 $10 = (__ls_popback($9)|0);
 $ast = $10;
 $11 = $ast;
 $12 = ($11|0)!=(0|0);
 $13 = $ast;
 if ($12) {
  $44 = $1;
  HEAP32[$44>>2] = $13;
  $45 = $result;
  STACKTOP = sp;return ($45|0);
 }
 $14 = ($13|0)!=(0|0);
 if ($14) {
  $15 = $ast;
  $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
  $17 = ($16|0)!=(0|0);
  if ($17) {
   $18 = $0;
   $19 = $0;
   $20 = ((($19)) + 67|0);
   $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
   $22 = (__set_current_error($18,29,$21)|0);
   $23 = ($22<<24>>24)!=(0);
   if (!($23)) {
    $45 = $result;
    STACKTOP = sp;return ($45|0);
   }
   $24 = $0;
   $25 = $ast;
   $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
   $27 = ((($26)) + 9|0);
   $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
   $29 = $ast;
   $30 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8)|(HEAPU8[$29+2>>0]<<16)|(HEAPU8[$29+3>>0]<<24);
   $31 = ((($30)) + 13|0);
   $32 = HEAPU8[$31>>0]|(HEAPU8[$31+1>>0]<<8);
   $33 = $ast;
   $34 = HEAPU8[$33>>0]|(HEAPU8[$33+1>>0]<<8)|(HEAPU8[$33+2>>0]<<16)|(HEAPU8[$33+3>>0]<<24);
   $35 = ((($34)) + 15|0);
   $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8);
   __set_error_pos($24,$28,$32,$36);
   $result = 3;
   $45 = $result;
   STACKTOP = sp;return ($45|0);
  }
 }
 $37 = $0;
 $38 = $0;
 $39 = ((($38)) + 67|0);
 $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8)|(HEAPU8[$39+2>>0]<<16)|(HEAPU8[$39+3>>0]<<24);
 $41 = (__set_current_error($37,29,$40)|0);
 $42 = ($41<<24>>24)!=(0);
 if (!($42)) {
  $45 = $result;
  STACKTOP = sp;return ($45|0);
 }
 $43 = $0;
 __set_error_pos($43,0,0,0);
 $result = 3;
 $45 = $result;
 STACKTOP = sp;return ($45|0);
}
function __is_operator($op) {
 $op = $op|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $or$cond = 0, $or$cond11 = 0, $or$cond13 = 0, $or$cond15 = 0, $or$cond17 = 0, $or$cond19 = 0, $or$cond21 = 0, $or$cond23 = 0, $or$cond25 = 0, $or$cond27 = 0, $or$cond29 = 0, $or$cond3 = 0, $or$cond31 = 0, $or$cond5 = 0, $or$cond7 = 0, $or$cond9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $op;
 $1 = $0;
 $2 = ($1|0)==(9|0);
 $3 = $0;
 $4 = ($3|0)==(1|0);
 $or$cond = $2 | $4;
 $5 = $0;
 $6 = ($5|0)==(2|0);
 $or$cond3 = $or$cond | $6;
 $7 = $0;
 $8 = ($7|0)==(3|0);
 $or$cond5 = $or$cond3 | $8;
 $9 = $0;
 $10 = ($9|0)==(4|0);
 $or$cond7 = $or$cond5 | $10;
 $11 = $0;
 $12 = ($11|0)==(5|0);
 $or$cond9 = $or$cond7 | $12;
 $13 = $0;
 $14 = ($13|0)==(6|0);
 $or$cond11 = $or$cond9 | $14;
 $15 = $0;
 $16 = ($15|0)==(7|0);
 $or$cond13 = $or$cond11 | $16;
 $17 = $0;
 $18 = ($17|0)==(8|0);
 $or$cond15 = $or$cond13 | $18;
 $19 = $0;
 $20 = ($19|0)==(14|0);
 $or$cond17 = $or$cond15 | $20;
 $21 = $0;
 $22 = ($21|0)==(11|0);
 $or$cond19 = $or$cond17 | $22;
 $23 = $0;
 $24 = ($23|0)==(10|0);
 $or$cond21 = $or$cond19 | $24;
 $25 = $0;
 $26 = ($25|0)==(13|0);
 $or$cond23 = $or$cond21 | $26;
 $27 = $0;
 $28 = ($27|0)==(12|0);
 $or$cond25 = $or$cond23 | $28;
 $29 = $0;
 $30 = ($29|0)==(15|0);
 $or$cond27 = $or$cond25 | $30;
 $31 = $0;
 $32 = ($31|0)==(16|0);
 $or$cond29 = $or$cond27 | $32;
 $33 = $0;
 $34 = ($33|0)==(17|0);
 $or$cond31 = $or$cond29 | $34;
 if ($or$cond31) {
  $38 = 1;
  $37 = $38&1;
  $39 = $37&255;
  STACKTOP = sp;return ($39|0);
 }
 $35 = $0;
 $36 = ($35|0)==(20|0);
 $38 = $36;
 $37 = $38&1;
 $39 = $37&255;
 STACKTOP = sp;return ($39|0);
}
function __skip_to($s,$l,$f,$t) {
 $s = $s|0;
 $l = $l|0;
 $f = $f|0;
 $t = $t|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $7 = 0, $8 = 0, $9 = 0, $ast = 0, $obj = 0, $or$cond = 0, $result = 0, $tmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $l;
 $2 = $f;
 $3 = $t;
 $result = 0;
 $ast = 0;
 $tmp = 0;
 $obj = 0;
 $4 = $0;
 $5 = ($4|0)!=(0|0);
 $6 = $1;
 $7 = ($6|0)!=(0|0);
 $or$cond = $5 & $7;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),11620,(4865|0));
  // unreachable;
 }
 $8 = $1;
 $9 = HEAP32[$8>>2]|0;
 $ast = $9;
 while(1) {
  $10 = $ast;
  $11 = ($10|0)!=(0|0);
  if (!($11)) {
   label = 5;
   break;
  }
  $43 = $ast;
  $tmp = $43;
  $44 = $ast;
  $45 = HEAPU8[$44>>0]|(HEAPU8[$44+1>>0]<<8)|(HEAPU8[$44+2>>0]<<16)|(HEAPU8[$44+3>>0]<<24);
  $obj = $45;
  $46 = $ast;
  $47 = $1;
  HEAP32[$47>>2] = $46;
  $48 = $ast;
  $49 = ((($48)) + 8|0);
  $50 = HEAPU8[$49>>0]|(HEAPU8[$49+1>>0]<<8)|(HEAPU8[$49+2>>0]<<16)|(HEAPU8[$49+3>>0]<<24);
  $ast = $50;
  $51 = $obj;
  $52 = HEAPU8[$51>>0]|(HEAPU8[$51+1>>0]<<8)|(HEAPU8[$51+2>>0]<<16)|(HEAPU8[$51+3>>0]<<24);
  $53 = ($52|0)==(8);
  if ($53) {
   $54 = $obj;
   $55 = ((($54)) + 4|0);
   $56 = HEAPU8[$55>>0]|(HEAPU8[$55+1>>0]<<8)|(HEAPU8[$55+2>>0]<<16)|(HEAPU8[$55+3>>0]<<24);
   $57 = ((($56)) + 4|0);
   $58 = HEAPU8[$57>>0]|(HEAPU8[$57+1>>0]<<8)|(HEAPU8[$57+2>>0]<<16)|(HEAPU8[$57+3>>0]<<24);
   $59 = $2;
   $60 = ($58|0)==($59|0);
   if ($60) {
    label = 14;
    break;
   }
  }
  $61 = $obj;
  $62 = HEAPU8[$61>>0]|(HEAPU8[$61+1>>0]<<8)|(HEAPU8[$61+2>>0]<<16)|(HEAPU8[$61+3>>0]<<24);
  $63 = $3;
  $64 = ($62|0)!=($63|0);
  if (!($64)) {
   label = 14;
   break;
  }
 }
 if ((label|0) == 5) {
  $12 = $tmp;
  $13 = ($12|0)!=(0|0);
  if ($13) {
   $14 = $tmp;
   $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
   $16 = ($15|0)!=(0|0);
   if ($16) {
    $17 = $0;
    $18 = $0;
    $19 = ((($18)) + 67|0);
    $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8)|(HEAPU8[$19+2>>0]<<16)|(HEAPU8[$19+3>>0]<<24);
    $21 = (__set_current_error($17,11,$20)|0);
    $22 = ($21<<24>>24)!=(0);
    if (!($22)) {
     $65 = $result;
     STACKTOP = sp;return ($65|0);
    }
    $23 = $0;
    $24 = $tmp;
    $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
    $26 = ((($25)) + 9|0);
    $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
    $28 = $tmp;
    $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
    $30 = ((($29)) + 13|0);
    $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8);
    $32 = $tmp;
    $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
    $34 = ((($33)) + 15|0);
    $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8);
    __set_error_pos($23,$27,$31,$35);
    $result = 3;
    $65 = $result;
    STACKTOP = sp;return ($65|0);
   }
  }
  $36 = $0;
  $37 = $0;
  $38 = ((($37)) + 67|0);
  $39 = HEAPU8[$38>>0]|(HEAPU8[$38+1>>0]<<8)|(HEAPU8[$38+2>>0]<<16)|(HEAPU8[$38+3>>0]<<24);
  $40 = (__set_current_error($36,11,$39)|0);
  $41 = ($40<<24>>24)!=(0);
  if (!($41)) {
   $65 = $result;
   STACKTOP = sp;return ($65|0);
  }
  $42 = $0;
  __set_error_pos($42,0,0,0);
  $result = 3;
  $65 = $result;
  STACKTOP = sp;return ($65|0);
 }
 else if ((label|0) == 14) {
  $65 = $result;
  STACKTOP = sp;return ($65|0);
 }
 return (0)|0;
}
function __destroy_lazy_objects($s) {
 $s = $s|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__lst = 0;
 var $__opresult = 0, $__tmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $0;
 $2 = ($1|0)!=(0|0);
 if (!($2)) {
  ___assert_fail((4803|0),(4322|0),10699,(4819|0));
  // unreachable;
 }
 $3 = $0;
 $4 = ((($3)) + 43|0);
 $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
 $__lst = $5;
 $__opresult = 0;
 $__tmp = 0;
 $6 = $0;
 $7 = ((($6)) + 43|0);
 $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
 $9 = ($8|0)!=(0|0);
 if (!($9)) {
  ___assert_fail((4841|0),(4322|0),10701,(4819|0));
  // unreachable;
 }
 $10 = $__lst;
 $11 = ((($10)) + 8|0);
 $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
 $__lst = $12;
 while(1) {
  $13 = $__lst;
  $14 = ($13|0)!=(0|0);
  if (!($14)) {
   label = 13;
   break;
  }
  $15 = $__lst;
  $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
  $17 = $__lst;
  $18 = ((($17)) + 12|0);
  $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
  $20 = $0;
  __try_clear_intermediate_value($16,$19,$20);
  $21 = $__lst;
  $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
  $23 = $__lst;
  $24 = ((($23)) + 12|0);
  $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
  $26 = (__destroy_object($22,$25)|0);
  $__opresult = $26;
  $27 = $__lst;
  $__tmp = $27;
  $28 = $__lst;
  $29 = ((($28)) + 8|0);
  $30 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8)|(HEAPU8[$29+2>>0]<<16)|(HEAPU8[$29+3>>0]<<24);
  $__lst = $30;
  $31 = $__opresult;
  $32 = (-1)==($31|0);
  if (!($32)) {
   continue;
  }
  $33 = $__lst;
  $34 = $__tmp;
  $35 = ((($34)) + 4|0);
  $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
  $37 = ((($36)) + 8|0);
  HEAP8[$37>>0]=$33&255;HEAP8[$37+1>>0]=($33>>8)&255;HEAP8[$37+2>>0]=($33>>16)&255;HEAP8[$37+3>>0]=$33>>24;
  $38 = $__lst;
  $39 = ($38|0)!=(0|0);
  if ($39) {
   $40 = $__tmp;
   $41 = ((($40)) + 4|0);
   $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
   $43 = $__lst;
   $44 = ((($43)) + 4|0);
   HEAP8[$44>>0]=$42&255;HEAP8[$44+1>>0]=($42>>8)&255;HEAP8[$44+2>>0]=($42>>16)&255;HEAP8[$44+3>>0]=$42>>24;
  }
  $45 = $__tmp;
  $46 = ($45|0)!=(0|0);
  if (!($46)) {
   label = 12;
   break;
  }
  $47 = $__tmp;
  _mb_free($47);
  $__tmp = 0;
  $48 = $0;
  $49 = ((($48)) + 43|0);
  $50 = HEAPU8[$49>>0]|(HEAPU8[$49+1>>0]<<8)|(HEAPU8[$49+2>>0]<<16)|(HEAPU8[$49+3>>0]<<24);
  $51 = HEAPU8[$50>>0]|(HEAPU8[$50+1>>0]<<8)|(HEAPU8[$50+2>>0]<<16)|(HEAPU8[$50+3>>0]<<24);
  $52 = ((($51)) + -1|0);
  $53 = $0;
  $54 = ((($53)) + 43|0);
  $55 = HEAPU8[$54>>0]|(HEAPU8[$54+1>>0]<<8)|(HEAPU8[$54+2>>0]<<16)|(HEAPU8[$54+3>>0]<<24);
  HEAP8[$55>>0]=$52&255;HEAP8[$55+1>>0]=($52>>8)&255;HEAP8[$55+2>>0]=($52>>16)&255;HEAP8[$55+3>>0]=$52>>24;
 }
 if ((label|0) == 12) {
  ___assert_fail((4369|0),(4322|0),10701,(4819|0));
  // unreachable;
 }
 else if ((label|0) == 13) {
  $56 = $0;
  $57 = ((($56)) + 43|0);
  $58 = HEAPU8[$57>>0]|(HEAPU8[$57+1>>0]<<8)|(HEAPU8[$57+2>>0]<<16)|(HEAPU8[$57+3>>0]<<24);
  __ls_clear($58);
  STACKTOP = sp;return;
 }
}
function __post_stepped($s,$ast) {
 $s = $s|0;
 $ast = $ast|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $obj = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = sp + 8|0;
 $0 = $s;
 HEAP32[$1>>2] = $ast;
 $result = 0;
 $obj = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 if (!($3)) {
  ___assert_fail((4803|0),(4322|0),11017,(4805|0));
  // unreachable;
 }
 $4 = $0;
 $5 = ((($4)) + 159|0);
 $6 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
 $7 = ($6|0)!=(0|0);
 if (!($7)) {
  $40 = $result;
  STACKTOP = sp;return ($40|0);
 }
 $8 = HEAP32[$1>>2]|0;
 $9 = ($8|0)!=(0|0);
 if ($9) {
  $10 = HEAP32[$1>>2]|0;
  $11 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
  $12 = ($11|0)!=(0|0);
  if ($12) {
   $13 = HEAP32[$1>>2]|0;
   $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
   $obj = $14;
   $15 = $0;
   $16 = ((($15)) + 159|0);
   $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
   $18 = $0;
   $19 = $0;
   $20 = ((($19)) + 67|0);
   $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
   $22 = $obj;
   $23 = ((($22)) + 9|0);
   $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
   $25 = $obj;
   $26 = ((($25)) + 13|0);
   $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8);
   $28 = $obj;
   $29 = ((($28)) + 15|0);
   $30 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8);
   $31 = (FUNCTION_TABLE_iiiiiii[$17 & 255]($18,$1,$21,$24,$27,$30)|0);
   $result = $31;
   $40 = $result;
   STACKTOP = sp;return ($40|0);
  }
 }
 $32 = $0;
 $33 = ((($32)) + 159|0);
 $34 = HEAPU8[$33>>0]|(HEAPU8[$33+1>>0]<<8)|(HEAPU8[$33+2>>0]<<16)|(HEAPU8[$33+3>>0]<<24);
 $35 = $0;
 $36 = $0;
 $37 = ((($36)) + 67|0);
 $38 = HEAPU8[$37>>0]|(HEAPU8[$37+1>>0]<<8)|(HEAPU8[$37+2>>0]<<16)|(HEAPU8[$37+3>>0]<<24);
 $39 = (FUNCTION_TABLE_iiiiiii[$34 & 255]($35,$1,$38,-1,0,0)|0);
 $result = $39;
 $40 = $result;
 STACKTOP = sp;return ($40|0);
}
function __core_add($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0.0, $283 = 0, $284 = 0, $285 = 0.0, $286 = 0, $287 = 0, $288 = 0.0, $289 = 0.0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0;
 var $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0.0, $302 = 0, $303 = 0, $304 = 0.0, $305 = 0.0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0.0;
 var $314 = 0.0, $315 = 0.0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0.0, $321 = 0.0, $322 = 0.0, $323 = 0.0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0.0;
 var $332 = 0, $333 = 0.0, $334 = 0, $335 = 0, $336 = 0.0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0.0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $_str1 = 0, $_str2 = 0, $opnd1 = 0, $opnd12 = 0, $opnd15 = 0, $opnd2 = 0, $opnd23 = 0, $opnd26 = 0, $opndv1 = 0, $opndv2 = 0, $or$cond = 0, $result = 0, $ret = 0, $retval = 0;
 var $tpptr = 0, $tpptr1 = 0, $tpptr4 = 0, $val = 0, $val7 = 0, $vfst = 0, $vscd = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vfst = sp + 120|0;
 $vscd = sp + 112|0;
 $ret = sp + 104|0;
 $opndv1 = sp + 85|0;
 $opndv2 = sp + 68|0;
 $0 = $s;
 $1 = $l;
 $result = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),15020,(5154|0));
  // unreachable;
 }
 $6 = $1;
 $7 = HEAP32[$6>>2]|0;
 $tpptr = $7;
 $8 = $tpptr;
 $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
 $opnd1 = $9;
 $10 = $tpptr;
 $11 = ((($10)) + 4|0);
 $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
 $opnd2 = $12;
 $13 = $tpptr;
 $14 = ((($13)) + 8|0);
 $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
 $retval = $15;
 $16 = $opnd1;
 $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
 $18 = ($17|0)==(9);
 if ($18) {
  $19 = $opnd1;
  $20 = ((($19)) + 4|0);
  $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
  $22 = ((($21)) + 4|0);
  $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
  $opnd1 = $23;
 }
 $24 = $opnd2;
 $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
 $26 = ($25|0)==(9);
 if ($26) {
  $27 = $opnd2;
  $28 = ((($27)) + 4|0);
  $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
  $30 = ((($29)) + 4|0);
  $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8)|(HEAPU8[$30+2>>0]<<16)|(HEAPU8[$30+3>>0]<<24);
  $opnd2 = $31;
 }
 $32 = ((($vfst)) + 4|0);
 ;HEAP8[$32>>0]=0|0;HEAP8[$32+1>>0]=0|0;HEAP8[$32+2>>0]=0|0;HEAP8[$32+3>>0]=0|0;
 HEAP8[$vfst>>0]=0&255;HEAP8[$vfst+1>>0]=(0>>8)&255;HEAP8[$vfst+2>>0]=(0>>16)&255;HEAP8[$vfst+3>>0]=0>>24;
 $33 = ((($vscd)) + 4|0);
 ;HEAP8[$33>>0]=0|0;HEAP8[$33+1>>0]=0|0;HEAP8[$33+2>>0]=0|0;HEAP8[$33+3>>0]=0|0;
 HEAP8[$vscd>>0]=0&255;HEAP8[$vscd+1>>0]=(0>>8)&255;HEAP8[$vscd+2>>0]=(0>>16)&255;HEAP8[$vscd+3>>0]=0>>24;
 $34 = ((($ret)) + 4|0);
 ;HEAP8[$34>>0]=0|0;HEAP8[$34+1>>0]=0|0;HEAP8[$34+2>>0]=0|0;HEAP8[$34+3>>0]=0|0;
 HEAP8[$ret>>0]=0&255;HEAP8[$ret+1>>0]=(0>>8)&255;HEAP8[$ret+2>>0]=(0>>16)&255;HEAP8[$ret+3>>0]=0>>24;
 $35 = $opnd1;
 $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
 $37 = ($36|0)==(7);
 if ($37) {
  $38 = $opnd1;
  $39 = ((($38)) + 4|0);
  $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8)|(HEAPU8[$39+2>>0]<<16)|(HEAPU8[$39+3>>0]<<24);
  $41 = ((($40)) + 45|0);
  $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
  $43 = ($42|0)!=(0|0);
  if ($43) {
   $44 = $opnd1;
   $45 = ((($44)) + 4|0);
   $46 = HEAPU8[$45>>0]|(HEAPU8[$45+1>>0]<<8)|(HEAPU8[$45+2>>0]<<16)|(HEAPU8[$45+3>>0]<<24);
   $47 = ((($46)) + 45|0);
   $48 = HEAPU8[$47>>0]|(HEAPU8[$47+1>>0]<<8)|(HEAPU8[$47+2>>0]<<16)|(HEAPU8[$47+3>>0]<<24);
   $49 = ((($48)) + 4|0);
   $50 = HEAPU8[$49>>0]|(HEAPU8[$49+1>>0]<<8)|(HEAPU8[$49+2>>0]<<16)|(HEAPU8[$49+3>>0]<<24);
   $51 = ($50|0)!=(0|0);
   if ($51) {
    $52 = $opnd1;
    (__internal_object_to_public_value($52,$vfst)|0);
    $53 = $opnd2;
    (__internal_object_to_public_value($53,$vscd)|0);
    $54 = $opnd1;
    $55 = ((($54)) + 4|0);
    $56 = HEAPU8[$55>>0]|(HEAPU8[$55+1>>0]<<8)|(HEAPU8[$55+2>>0]<<16)|(HEAPU8[$55+3>>0]<<24);
    $57 = ((($56)) + 45|0);
    $58 = HEAPU8[$57>>0]|(HEAPU8[$57+1>>0]<<8)|(HEAPU8[$57+2>>0]<<16)|(HEAPU8[$57+3>>0]<<24);
    $59 = ((($58)) + 4|0);
    $60 = HEAPU8[$59>>0]|(HEAPU8[$59+1>>0]<<8)|(HEAPU8[$59+2>>0]<<16)|(HEAPU8[$59+3>>0]<<24);
    $61 = $0;
    $62 = $1;
    $63 = (FUNCTION_TABLE_iiiiii[$60 & 0]($61,$62,$vfst,$vscd,$ret)|0);
    $result = $63;
    $64 = $retval;
    (__public_value_to_internal_object($ret,$64)|0);
    $345 = $result;
    STACKTOP = sp;return ($345|0);
   }
  }
 }
 $65 = $opnd2;
 $66 = HEAPU8[$65>>0]|(HEAPU8[$65+1>>0]<<8)|(HEAPU8[$65+2>>0]<<16)|(HEAPU8[$65+3>>0]<<24);
 $67 = ($66|0)==(7);
 if ($67) {
  $68 = $opnd2;
  $69 = ((($68)) + 4|0);
  $70 = HEAPU8[$69>>0]|(HEAPU8[$69+1>>0]<<8)|(HEAPU8[$69+2>>0]<<16)|(HEAPU8[$69+3>>0]<<24);
  $71 = ((($70)) + 45|0);
  $72 = HEAPU8[$71>>0]|(HEAPU8[$71+1>>0]<<8)|(HEAPU8[$71+2>>0]<<16)|(HEAPU8[$71+3>>0]<<24);
  $73 = ($72|0)!=(0|0);
  if ($73) {
   $74 = $opnd2;
   $75 = ((($74)) + 4|0);
   $76 = HEAPU8[$75>>0]|(HEAPU8[$75+1>>0]<<8)|(HEAPU8[$75+2>>0]<<16)|(HEAPU8[$75+3>>0]<<24);
   $77 = ((($76)) + 45|0);
   $78 = HEAPU8[$77>>0]|(HEAPU8[$77+1>>0]<<8)|(HEAPU8[$77+2>>0]<<16)|(HEAPU8[$77+3>>0]<<24);
   $79 = ((($78)) + 4|0);
   $80 = HEAPU8[$79>>0]|(HEAPU8[$79+1>>0]<<8)|(HEAPU8[$79+2>>0]<<16)|(HEAPU8[$79+3>>0]<<24);
   $81 = ($80|0)!=(0|0);
   if ($81) {
    $82 = $opnd1;
    (__internal_object_to_public_value($82,$vfst)|0);
    $83 = $opnd2;
    (__internal_object_to_public_value($83,$vscd)|0);
    $84 = $opnd2;
    $85 = ((($84)) + 4|0);
    $86 = HEAPU8[$85>>0]|(HEAPU8[$85+1>>0]<<8)|(HEAPU8[$85+2>>0]<<16)|(HEAPU8[$85+3>>0]<<24);
    $87 = ((($86)) + 45|0);
    $88 = HEAPU8[$87>>0]|(HEAPU8[$87+1>>0]<<8)|(HEAPU8[$87+2>>0]<<16)|(HEAPU8[$87+3>>0]<<24);
    $89 = ((($88)) + 4|0);
    $90 = HEAPU8[$89>>0]|(HEAPU8[$89+1>>0]<<8)|(HEAPU8[$89+2>>0]<<16)|(HEAPU8[$89+3>>0]<<24);
    $91 = $0;
    $92 = $1;
    $93 = (FUNCTION_TABLE_iiiiii[$90 & 0]($91,$92,$vfst,$vscd,$ret)|0);
    $result = $93;
    $94 = $retval;
    (__public_value_to_internal_object($ret,$94)|0);
    $345 = $result;
    STACKTOP = sp;return ($345|0);
   }
  }
 }
 $95 = $1;
 $96 = HEAP32[$95>>2]|0;
 $97 = HEAPU8[$96>>0]|(HEAPU8[$96+1>>0]<<8)|(HEAPU8[$96+2>>0]<<16)|(HEAPU8[$96+3>>0]<<24);
 $98 = (__is_string($97)|0);
 $99 = $98&255;
 $100 = ($99|0)!=(0);
 if (!($100)) {
  $101 = $1;
  $102 = HEAP32[$101>>2]|0;
  $103 = ((($102)) + 4|0);
  $104 = HEAPU8[$103>>0]|(HEAPU8[$103+1>>0]<<8)|(HEAPU8[$103+2>>0]<<16)|(HEAPU8[$103+3>>0]<<24);
  $105 = (__is_string($104)|0);
  $106 = $105&255;
  $107 = ($106|0)!=(0);
  if (!($107)) {
   $213 = $1;
   $214 = HEAP32[$213>>2]|0;
   $tpptr4 = $214;
   $215 = $tpptr4;
   $216 = HEAPU8[$215>>0]|(HEAPU8[$215+1>>0]<<8)|(HEAPU8[$215+2>>0]<<16)|(HEAPU8[$215+3>>0]<<24);
   $opnd15 = $216;
   $217 = $tpptr4;
   $218 = ((($217)) + 4|0);
   $219 = HEAPU8[$218>>0]|(HEAPU8[$218+1>>0]<<8)|(HEAPU8[$218+2>>0]<<16)|(HEAPU8[$218+3>>0]<<24);
   $opnd26 = $219;
   $220 = $tpptr4;
   $221 = ((($220)) + 8|0);
   $222 = HEAPU8[$221>>0]|(HEAPU8[$221+1>>0]<<8)|(HEAPU8[$221+2>>0]<<16)|(HEAPU8[$221+3>>0]<<24);
   $val7 = $222;
   $223 = $opnd15;
   $224 = HEAPU8[$223>>0]|(HEAPU8[$223+1>>0]<<8)|(HEAPU8[$223+2>>0]<<16)|(HEAPU8[$223+3>>0]<<24);
   $225 = ($224|0)==(2);
   if ($225) {
    $236 = 1;
   } else {
    $226 = $opnd15;
    $227 = HEAPU8[$226>>0]|(HEAPU8[$226+1>>0]<<8)|(HEAPU8[$226+2>>0]<<16)|(HEAPU8[$226+3>>0]<<24);
    $228 = ($227|0)==(9);
    if ($228) {
     $229 = $opnd15;
     $230 = ((($229)) + 4|0);
     $231 = HEAPU8[$230>>0]|(HEAPU8[$230+1>>0]<<8)|(HEAPU8[$230+2>>0]<<16)|(HEAPU8[$230+3>>0]<<24);
     $232 = ((($231)) + 4|0);
     $233 = HEAPU8[$232>>0]|(HEAPU8[$232+1>>0]<<8)|(HEAPU8[$232+2>>0]<<16)|(HEAPU8[$232+3>>0]<<24);
     $234 = HEAPU8[$233>>0]|(HEAPU8[$233+1>>0]<<8)|(HEAPU8[$233+2>>0]<<16)|(HEAPU8[$233+3>>0]<<24);
     $235 = ($234|0)==(2);
     $236 = $235;
    } else {
     $236 = 0;
    }
   }
   $237 = $236 ? 2 : 3;
   HEAP8[$opndv1>>0]=$237&255;HEAP8[$opndv1+1>>0]=($237>>8)&255;HEAP8[$opndv1+2>>0]=($237>>16)&255;HEAP8[$opndv1+3>>0]=$237>>24;
   $238 = ((($opndv1)) + 4|0);
   $239 = $opnd15;
   $240 = HEAPU8[$239>>0]|(HEAPU8[$239+1>>0]<<8)|(HEAPU8[$239+2>>0]<<16)|(HEAPU8[$239+3>>0]<<24);
   $241 = ($240|0)==(9);
   $242 = $opnd15;
   $243 = ((($242)) + 4|0);
   if ($241) {
    $244 = HEAPU8[$243>>0]|(HEAPU8[$243+1>>0]<<8)|(HEAPU8[$243+2>>0]<<16)|(HEAPU8[$243+3>>0]<<24);
    $245 = ((($244)) + 4|0);
    $246 = HEAPU8[$245>>0]|(HEAPU8[$245+1>>0]<<8)|(HEAPU8[$245+2>>0]<<16)|(HEAPU8[$245+3>>0]<<24);
    $247 = ((($246)) + 4|0);
    ;HEAP8[$238>>0]=HEAP8[$247>>0]|0;HEAP8[$238+1>>0]=HEAP8[$247+1>>0]|0;HEAP8[$238+2>>0]=HEAP8[$247+2>>0]|0;HEAP8[$238+3>>0]=HEAP8[$247+3>>0]|0;
   } else {
    ;HEAP8[$238>>0]=HEAP8[$243>>0]|0;HEAP8[$238+1>>0]=HEAP8[$243+1>>0]|0;HEAP8[$238+2>>0]=HEAP8[$243+2>>0]|0;HEAP8[$238+3>>0]=HEAP8[$243+3>>0]|0;
   }
   $248 = $opnd26;
   $249 = HEAPU8[$248>>0]|(HEAPU8[$248+1>>0]<<8)|(HEAPU8[$248+2>>0]<<16)|(HEAPU8[$248+3>>0]<<24);
   $250 = ($249|0)==(2);
   if ($250) {
    $261 = 1;
   } else {
    $251 = $opnd26;
    $252 = HEAPU8[$251>>0]|(HEAPU8[$251+1>>0]<<8)|(HEAPU8[$251+2>>0]<<16)|(HEAPU8[$251+3>>0]<<24);
    $253 = ($252|0)==(9);
    if ($253) {
     $254 = $opnd26;
     $255 = ((($254)) + 4|0);
     $256 = HEAPU8[$255>>0]|(HEAPU8[$255+1>>0]<<8)|(HEAPU8[$255+2>>0]<<16)|(HEAPU8[$255+3>>0]<<24);
     $257 = ((($256)) + 4|0);
     $258 = HEAPU8[$257>>0]|(HEAPU8[$257+1>>0]<<8)|(HEAPU8[$257+2>>0]<<16)|(HEAPU8[$257+3>>0]<<24);
     $259 = HEAPU8[$258>>0]|(HEAPU8[$258+1>>0]<<8)|(HEAPU8[$258+2>>0]<<16)|(HEAPU8[$258+3>>0]<<24);
     $260 = ($259|0)==(2);
     $261 = $260;
    } else {
     $261 = 0;
    }
   }
   $262 = $261 ? 2 : 3;
   HEAP8[$opndv2>>0]=$262&255;HEAP8[$opndv2+1>>0]=($262>>8)&255;HEAP8[$opndv2+2>>0]=($262>>16)&255;HEAP8[$opndv2+3>>0]=$262>>24;
   $263 = ((($opndv2)) + 4|0);
   $264 = $opnd26;
   $265 = HEAPU8[$264>>0]|(HEAPU8[$264+1>>0]<<8)|(HEAPU8[$264+2>>0]<<16)|(HEAPU8[$264+3>>0]<<24);
   $266 = ($265|0)==(9);
   $267 = $opnd26;
   $268 = ((($267)) + 4|0);
   if ($266) {
    $269 = HEAPU8[$268>>0]|(HEAPU8[$268+1>>0]<<8)|(HEAPU8[$268+2>>0]<<16)|(HEAPU8[$268+3>>0]<<24);
    $270 = ((($269)) + 4|0);
    $271 = HEAPU8[$270>>0]|(HEAPU8[$270+1>>0]<<8)|(HEAPU8[$270+2>>0]<<16)|(HEAPU8[$270+3>>0]<<24);
    $272 = ((($271)) + 4|0);
    ;HEAP8[$263>>0]=HEAP8[$272>>0]|0;HEAP8[$263+1>>0]=HEAP8[$272+1>>0]|0;HEAP8[$263+2>>0]=HEAP8[$272+2>>0]|0;HEAP8[$263+3>>0]=HEAP8[$272+3>>0]|0;
   } else {
    ;HEAP8[$263>>0]=HEAP8[$268>>0]|0;HEAP8[$263+1>>0]=HEAP8[$268+1>>0]|0;HEAP8[$263+2>>0]=HEAP8[$268+2>>0]|0;HEAP8[$263+3>>0]=HEAP8[$268+3>>0]|0;
   }
   $273 = HEAPU8[$opndv1>>0]|(HEAPU8[$opndv1+1>>0]<<8)|(HEAPU8[$opndv1+2>>0]<<16)|(HEAPU8[$opndv1+3>>0]<<24);
   $274 = ($273|0)==(2);
   do {
    if ($274) {
     $275 = HEAPU8[$opndv2>>0]|(HEAPU8[$opndv2+1>>0]<<8)|(HEAPU8[$opndv2+2>>0]<<16)|(HEAPU8[$opndv2+3>>0]<<24);
     $276 = ($275|0)==(2);
     if ($276) {
      $277 = ((($opndv1)) + 4|0);
      $278 = HEAPU8[$277>>0]|(HEAPU8[$277+1>>0]<<8)|(HEAPU8[$277+2>>0]<<16)|(HEAPU8[$277+3>>0]<<24);
      $279 = ((($opndv2)) + 4|0);
      $280 = HEAPU8[$279>>0]|(HEAPU8[$279+1>>0]<<8)|(HEAPU8[$279+2>>0]<<16)|(HEAPU8[$279+3>>0]<<24);
      $281 = (($278) + ($280))|0;
      $282 = (+($281|0));
      $283 = ((($opndv1)) + 4|0);
      $284 = HEAPU8[$283>>0]|(HEAPU8[$283+1>>0]<<8)|(HEAPU8[$283+2>>0]<<16)|(HEAPU8[$283+3>>0]<<24);
      $285 = (+($284|0));
      $286 = ((($opndv2)) + 4|0);
      $287 = HEAPU8[$286>>0]|(HEAPU8[$286+1>>0]<<8)|(HEAPU8[$286+2>>0]<<16)|(HEAPU8[$286+3>>0]<<24);
      $288 = (+($287|0));
      $289 = $285 + $288;
      $290 = $282 == $289;
      $291 = $val7;
      if ($290) {
       HEAP8[$291>>0]=2&255;HEAP8[$291+1>>0]=(2>>8)&255;HEAP8[$291+2>>0]=(2>>16)&255;HEAP8[$291+3>>0]=2>>24;
       $292 = ((($opndv1)) + 4|0);
       $293 = HEAPU8[$292>>0]|(HEAPU8[$292+1>>0]<<8)|(HEAPU8[$292+2>>0]<<16)|(HEAPU8[$292+3>>0]<<24);
       $294 = ((($opndv2)) + 4|0);
       $295 = HEAPU8[$294>>0]|(HEAPU8[$294+1>>0]<<8)|(HEAPU8[$294+2>>0]<<16)|(HEAPU8[$294+3>>0]<<24);
       $296 = (($293) + ($295))|0;
       $297 = $val7;
       $298 = ((($297)) + 4|0);
       HEAP8[$298>>0]=$296&255;HEAP8[$298+1>>0]=($296>>8)&255;HEAP8[$298+2>>0]=($296>>16)&255;HEAP8[$298+3>>0]=$296>>24;
       break;
      } else {
       HEAP8[$291>>0]=3&255;HEAP8[$291+1>>0]=(3>>8)&255;HEAP8[$291+2>>0]=(3>>16)&255;HEAP8[$291+3>>0]=3>>24;
       $299 = ((($opndv1)) + 4|0);
       $300 = HEAPU8[$299>>0]|(HEAPU8[$299+1>>0]<<8)|(HEAPU8[$299+2>>0]<<16)|(HEAPU8[$299+3>>0]<<24);
       $301 = (+($300|0));
       $302 = ((($opndv2)) + 4|0);
       $303 = HEAPU8[$302>>0]|(HEAPU8[$302+1>>0]<<8)|(HEAPU8[$302+2>>0]<<16)|(HEAPU8[$302+3>>0]<<24);
       $304 = (+($303|0));
       $305 = $301 + $304;
       $306 = $val7;
       $307 = ((($306)) + 4|0);
       HEAPF32[tempDoublePtr>>2]=$305;HEAP8[$307>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$307+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$307+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$307+3>>0]=HEAP8[tempDoublePtr+3>>0];
       break;
      }
     } else {
      label = 48;
     }
    } else {
     label = 48;
    }
   } while(0);
   if ((label|0) == 48) {
    $308 = $val7;
    HEAP8[$308>>0]=3&255;HEAP8[$308+1>>0]=(3>>8)&255;HEAP8[$308+2>>0]=(3>>16)&255;HEAP8[$308+3>>0]=3>>24;
    $309 = HEAPU8[$opndv1>>0]|(HEAPU8[$opndv1+1>>0]<<8)|(HEAPU8[$opndv1+2>>0]<<16)|(HEAPU8[$opndv1+3>>0]<<24);
    $310 = ($309|0)==(2);
    $311 = ((($opndv1)) + 4|0);
    $312 = HEAPU8[$311>>0]|(HEAPU8[$311+1>>0]<<8)|(HEAPU8[$311+2>>0]<<16)|(HEAPU8[$311+3>>0]<<24);
    $313 = (+($312|0));
    HEAP8[tempDoublePtr>>0]=HEAP8[$311>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$311+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$311+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$311+3>>0];$314 = +HEAPF32[tempDoublePtr>>2];
    $315 = $310 ? $313 : $314;
    $316 = HEAPU8[$opndv2>>0]|(HEAPU8[$opndv2+1>>0]<<8)|(HEAPU8[$opndv2+2>>0]<<16)|(HEAPU8[$opndv2+3>>0]<<24);
    $317 = ($316|0)==(2);
    $318 = ((($opndv2)) + 4|0);
    $319 = HEAPU8[$318>>0]|(HEAPU8[$318+1>>0]<<8)|(HEAPU8[$318+2>>0]<<16)|(HEAPU8[$318+3>>0]<<24);
    $320 = (+($319|0));
    HEAP8[tempDoublePtr>>0]=HEAP8[$318>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$318+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$318+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$318+3>>0];$321 = +HEAPF32[tempDoublePtr>>2];
    $322 = $317 ? $320 : $321;
    $323 = $315 + $322;
    $324 = $val7;
    $325 = ((($324)) + 4|0);
    HEAPF32[tempDoublePtr>>2]=$323;HEAP8[$325>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$325+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$325+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$325+3>>0]=HEAP8[tempDoublePtr+3>>0];
   }
   $326 = $val7;
   $327 = HEAPU8[$326>>0]|(HEAPU8[$326+1>>0]<<8)|(HEAPU8[$326+2>>0]<<16)|(HEAPU8[$326+3>>0]<<24);
   $328 = ($327|0)==(3);
   if (!($328)) {
    $345 = $result;
    STACKTOP = sp;return ($345|0);
   }
   $329 = $val7;
   $330 = ((($329)) + 4|0);
   HEAP8[tempDoublePtr>>0]=HEAP8[$330>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$330+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$330+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$330+3>>0];$331 = +HEAPF32[tempDoublePtr>>2];
   $332 = (~~(($331)));
   $333 = (+($332|0));
   $334 = $val7;
   $335 = ((($334)) + 4|0);
   HEAP8[tempDoublePtr>>0]=HEAP8[$335>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$335+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$335+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$335+3>>0];$336 = +HEAPF32[tempDoublePtr>>2];
   $337 = $333 == $336;
   if (!($337)) {
    $345 = $result;
    STACKTOP = sp;return ($345|0);
   }
   $338 = $val7;
   HEAP8[$338>>0]=2&255;HEAP8[$338+1>>0]=(2>>8)&255;HEAP8[$338+2>>0]=(2>>16)&255;HEAP8[$338+3>>0]=2>>24;
   $339 = $val7;
   $340 = ((($339)) + 4|0);
   HEAP8[tempDoublePtr>>0]=HEAP8[$340>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$340+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$340+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$340+3>>0];$341 = +HEAPF32[tempDoublePtr>>2];
   $342 = (~~(($341)));
   $343 = $val7;
   $344 = ((($343)) + 4|0);
   HEAP8[$344>>0]=$342&255;HEAP8[$344+1>>0]=($342>>8)&255;HEAP8[$344+2>>0]=($342>>16)&255;HEAP8[$344+3>>0]=$342>>24;
   $345 = $result;
   STACKTOP = sp;return ($345|0);
  }
 }
 $108 = $1;
 $109 = HEAP32[$108>>2]|0;
 $110 = HEAPU8[$109>>0]|(HEAPU8[$109+1>>0]<<8)|(HEAPU8[$109+2>>0]<<16)|(HEAPU8[$109+3>>0]<<24);
 $111 = (__is_string($110)|0);
 $112 = $111&255;
 $113 = ($112|0)!=(0);
 if ($113) {
  $114 = $1;
  $115 = HEAP32[$114>>2]|0;
  $116 = ((($115)) + 4|0);
  $117 = HEAPU8[$116>>0]|(HEAPU8[$116+1>>0]<<8)|(HEAPU8[$116+2>>0]<<16)|(HEAPU8[$116+3>>0]<<24);
  $118 = (__is_string($117)|0);
  $119 = $118&255;
  $120 = ($119|0)!=(0);
  if ($120) {
   $_str1 = 0;
   $_str2 = 0;
   $121 = $1;
   $122 = HEAP32[$121>>2]|0;
   $tpptr1 = $122;
   $123 = $tpptr1;
   $124 = HEAPU8[$123>>0]|(HEAPU8[$123+1>>0]<<8)|(HEAPU8[$123+2>>0]<<16)|(HEAPU8[$123+3>>0]<<24);
   $opnd12 = $124;
   $125 = $tpptr1;
   $126 = ((($125)) + 4|0);
   $127 = HEAPU8[$126>>0]|(HEAPU8[$126+1>>0]<<8)|(HEAPU8[$126+2>>0]<<16)|(HEAPU8[$126+3>>0]<<24);
   $opnd23 = $127;
   $128 = $tpptr1;
   $129 = ((($128)) + 8|0);
   $130 = HEAPU8[$129>>0]|(HEAPU8[$129+1>>0]<<8)|(HEAPU8[$129+2>>0]<<16)|(HEAPU8[$129+3>>0]<<24);
   $val = $130;
   $131 = $val;
   HEAP8[$131>>0]=4&255;HEAP8[$131+1>>0]=(4>>8)&255;HEAP8[$131+2>>0]=(4>>16)&255;HEAP8[$131+3>>0]=4>>24;
   $132 = $val;
   $133 = ((($132)) + 4|0);
   $134 = HEAPU8[$133>>0]|(HEAPU8[$133+1>>0]<<8)|(HEAPU8[$133+2>>0]<<16)|(HEAPU8[$133+3>>0]<<24);
   $135 = ($134|0)!=(0|0);
   do {
    if ($135) {
     $136 = $val;
     $137 = ((($136)) + 4|0);
     $138 = HEAPU8[$137>>0]|(HEAPU8[$137+1>>0]<<8)|(HEAPU8[$137+2>>0]<<16)|(HEAPU8[$137+3>>0]<<24);
     $139 = ($138|0)!=(0|0);
     if ($139) {
      $140 = $val;
      $141 = ((($140)) + 4|0);
      $142 = HEAPU8[$141>>0]|(HEAPU8[$141+1>>0]<<8)|(HEAPU8[$141+2>>0]<<16)|(HEAPU8[$141+3>>0]<<24);
      _mb_free($142);
      $143 = $val;
      $144 = ((($143)) + 4|0);
      HEAP8[$144>>0]=0&255;HEAP8[$144+1>>0]=(0>>8)&255;HEAP8[$144+2>>0]=(0>>16)&255;HEAP8[$144+3>>0]=0>>24;
      break;
     } else {
      ___assert_fail((4369|0),(4322|0),15026,(5154|0));
      // unreachable;
     }
    }
   } while(0);
   $145 = $opnd12;
   $146 = (__extract_string($145)|0);
   $_str1 = $146;
   $147 = $opnd23;
   $148 = (__extract_string($147)|0);
   $_str2 = $148;
   $149 = $_str1;
   $150 = (_strlen($149)|0);
   $151 = $_str2;
   $152 = (_strlen($151)|0);
   $153 = (($150) + ($152))|0;
   $154 = (($153) + 1)|0;
   $155 = (_mb_malloc($154)|0);
   $156 = $val;
   $157 = ((($156)) + 4|0);
   HEAP8[$157>>0]=$155&255;HEAP8[$157+1>>0]=($155>>8)&255;HEAP8[$157+2>>0]=($155>>16)&255;HEAP8[$157+3>>0]=$155>>24;
   $158 = $val;
   $159 = ((($158)) + 4|0);
   $160 = HEAPU8[$159>>0]|(HEAPU8[$159+1>>0]<<8)|(HEAPU8[$159+2>>0]<<16)|(HEAPU8[$159+3>>0]<<24);
   $161 = $_str1;
   $162 = (_strlen($161)|0);
   $163 = $_str2;
   $164 = (_strlen($163)|0);
   $165 = (($162) + ($164))|0;
   $166 = (($165) + 1)|0;
   _memset(($160|0),0,($166|0))|0;
   $167 = $val;
   $168 = ((($167)) + 4|0);
   $169 = HEAPU8[$168>>0]|(HEAPU8[$168+1>>0]<<8)|(HEAPU8[$168+2>>0]<<16)|(HEAPU8[$168+3>>0]<<24);
   $170 = $_str1;
   (_strcat($169,$170)|0);
   $171 = $val;
   $172 = ((($171)) + 4|0);
   $173 = HEAPU8[$172>>0]|(HEAPU8[$172+1>>0]<<8)|(HEAPU8[$172+2>>0]<<16)|(HEAPU8[$172+3>>0]<<24);
   $174 = $_str2;
   (_strcat($173,$174)|0);
   $345 = $result;
   STACKTOP = sp;return ($345|0);
  }
 }
 $175 = $1;
 $176 = ($175|0)!=(0|0);
 if ($176) {
  $177 = $1;
  $178 = HEAP32[$177>>2]|0;
  $179 = ($178|0)!=(0|0);
  if ($179) {
   $180 = $1;
   $181 = HEAP32[$180>>2]|0;
   $182 = HEAPU8[$181>>0]|(HEAPU8[$181+1>>0]<<8)|(HEAPU8[$181+2>>0]<<16)|(HEAPU8[$181+3>>0]<<24);
   $183 = ($182|0)!=(0|0);
   if ($183) {
    $184 = $0;
    $185 = $0;
    $186 = ((($185)) + 67|0);
    $187 = HEAPU8[$186>>0]|(HEAPU8[$186+1>>0]<<8)|(HEAPU8[$186+2>>0]<<16)|(HEAPU8[$186+3>>0]<<24);
    $188 = (__set_current_error($184,18,$187)|0);
    $189 = ($188<<24>>24)!=(0);
    if (!($189)) {
     $345 = $result;
     STACKTOP = sp;return ($345|0);
    }
    $190 = $0;
    $191 = $1;
    $192 = HEAP32[$191>>2]|0;
    $193 = HEAPU8[$192>>0]|(HEAPU8[$192+1>>0]<<8)|(HEAPU8[$192+2>>0]<<16)|(HEAPU8[$192+3>>0]<<24);
    $194 = ((($193)) + 9|0);
    $195 = HEAPU8[$194>>0]|(HEAPU8[$194+1>>0]<<8)|(HEAPU8[$194+2>>0]<<16)|(HEAPU8[$194+3>>0]<<24);
    $196 = $1;
    $197 = HEAP32[$196>>2]|0;
    $198 = HEAPU8[$197>>0]|(HEAPU8[$197+1>>0]<<8)|(HEAPU8[$197+2>>0]<<16)|(HEAPU8[$197+3>>0]<<24);
    $199 = ((($198)) + 13|0);
    $200 = HEAPU8[$199>>0]|(HEAPU8[$199+1>>0]<<8);
    $201 = $1;
    $202 = HEAP32[$201>>2]|0;
    $203 = HEAPU8[$202>>0]|(HEAPU8[$202+1>>0]<<8)|(HEAPU8[$202+2>>0]<<16)|(HEAPU8[$202+3>>0]<<24);
    $204 = ((($203)) + 15|0);
    $205 = HEAPU8[$204>>0]|(HEAPU8[$204+1>>0]<<8);
    __set_error_pos($190,$195,$200,$205);
    $result = 3;
    $345 = $result;
    STACKTOP = sp;return ($345|0);
   }
  }
 }
 $206 = $0;
 $207 = $0;
 $208 = ((($207)) + 67|0);
 $209 = HEAPU8[$208>>0]|(HEAPU8[$208+1>>0]<<8)|(HEAPU8[$208+2>>0]<<16)|(HEAPU8[$208+3>>0]<<24);
 $210 = (__set_current_error($206,18,$209)|0);
 $211 = ($210<<24>>24)!=(0);
 if (!($211)) {
  $345 = $result;
  STACKTOP = sp;return ($345|0);
 }
 $212 = $0;
 __set_error_pos($212,0,0,0);
 $result = 3;
 $345 = $result;
 STACKTOP = sp;return ($345|0);
}
function __core_min($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0.0, $165 = 0, $166 = 0, $167 = 0.0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0.0, $171 = 0.0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0.0, $184 = 0, $185 = 0, $186 = 0.0, $187 = 0.0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0.0, $196 = 0.0, $197 = 0.0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0.0, $203 = 0.0, $204 = 0.0, $205 = 0.0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0.0, $214 = 0, $215 = 0.0, $216 = 0, $217 = 0, $218 = 0.0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0.0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $opnd1 = 0, $opnd12 = 0, $opnd2 = 0, $opnd23 = 0, $opndv1 = 0, $opndv2 = 0, $or$cond = 0, $result = 0, $ret = 0, $retval = 0, $tpptr = 0, $tpptr1 = 0;
 var $val = 0, $vfst = 0, $vscd = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vfst = sp + 96|0;
 $vscd = sp + 88|0;
 $ret = sp + 80|0;
 $opndv1 = sp + 61|0;
 $opndv2 = sp + 44|0;
 $0 = $s;
 $1 = $l;
 $result = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),15042,(5144|0));
  // unreachable;
 }
 $6 = $1;
 $7 = HEAP32[$6>>2]|0;
 $tpptr = $7;
 $8 = $tpptr;
 $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
 $opnd1 = $9;
 $10 = $tpptr;
 $11 = ((($10)) + 4|0);
 $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
 $opnd2 = $12;
 $13 = $tpptr;
 $14 = ((($13)) + 8|0);
 $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
 $retval = $15;
 $16 = $opnd1;
 $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
 $18 = ($17|0)==(9);
 if ($18) {
  $19 = $opnd1;
  $20 = ((($19)) + 4|0);
  $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
  $22 = ((($21)) + 4|0);
  $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
  $opnd1 = $23;
 }
 $24 = $opnd2;
 $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
 $26 = ($25|0)==(9);
 if ($26) {
  $27 = $opnd2;
  $28 = ((($27)) + 4|0);
  $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
  $30 = ((($29)) + 4|0);
  $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8)|(HEAPU8[$30+2>>0]<<16)|(HEAPU8[$30+3>>0]<<24);
  $opnd2 = $31;
 }
 $32 = ((($vfst)) + 4|0);
 ;HEAP8[$32>>0]=0|0;HEAP8[$32+1>>0]=0|0;HEAP8[$32+2>>0]=0|0;HEAP8[$32+3>>0]=0|0;
 HEAP8[$vfst>>0]=0&255;HEAP8[$vfst+1>>0]=(0>>8)&255;HEAP8[$vfst+2>>0]=(0>>16)&255;HEAP8[$vfst+3>>0]=0>>24;
 $33 = ((($vscd)) + 4|0);
 ;HEAP8[$33>>0]=0|0;HEAP8[$33+1>>0]=0|0;HEAP8[$33+2>>0]=0|0;HEAP8[$33+3>>0]=0|0;
 HEAP8[$vscd>>0]=0&255;HEAP8[$vscd+1>>0]=(0>>8)&255;HEAP8[$vscd+2>>0]=(0>>16)&255;HEAP8[$vscd+3>>0]=0>>24;
 $34 = ((($ret)) + 4|0);
 ;HEAP8[$34>>0]=0|0;HEAP8[$34+1>>0]=0|0;HEAP8[$34+2>>0]=0|0;HEAP8[$34+3>>0]=0|0;
 HEAP8[$ret>>0]=0&255;HEAP8[$ret+1>>0]=(0>>8)&255;HEAP8[$ret+2>>0]=(0>>16)&255;HEAP8[$ret+3>>0]=0>>24;
 $35 = $opnd1;
 $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
 $37 = ($36|0)==(7);
 if ($37) {
  $38 = $opnd1;
  $39 = ((($38)) + 4|0);
  $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8)|(HEAPU8[$39+2>>0]<<16)|(HEAPU8[$39+3>>0]<<24);
  $41 = ((($40)) + 45|0);
  $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
  $43 = ($42|0)!=(0|0);
  if ($43) {
   $44 = $opnd1;
   $45 = ((($44)) + 4|0);
   $46 = HEAPU8[$45>>0]|(HEAPU8[$45+1>>0]<<8)|(HEAPU8[$45+2>>0]<<16)|(HEAPU8[$45+3>>0]<<24);
   $47 = ((($46)) + 45|0);
   $48 = HEAPU8[$47>>0]|(HEAPU8[$47+1>>0]<<8)|(HEAPU8[$47+2>>0]<<16)|(HEAPU8[$47+3>>0]<<24);
   $49 = ((($48)) + 8|0);
   $50 = HEAPU8[$49>>0]|(HEAPU8[$49+1>>0]<<8)|(HEAPU8[$49+2>>0]<<16)|(HEAPU8[$49+3>>0]<<24);
   $51 = ($50|0)!=(0|0);
   if ($51) {
    $52 = $opnd1;
    (__internal_object_to_public_value($52,$vfst)|0);
    $53 = $opnd2;
    (__internal_object_to_public_value($53,$vscd)|0);
    $54 = $opnd1;
    $55 = ((($54)) + 4|0);
    $56 = HEAPU8[$55>>0]|(HEAPU8[$55+1>>0]<<8)|(HEAPU8[$55+2>>0]<<16)|(HEAPU8[$55+3>>0]<<24);
    $57 = ((($56)) + 45|0);
    $58 = HEAPU8[$57>>0]|(HEAPU8[$57+1>>0]<<8)|(HEAPU8[$57+2>>0]<<16)|(HEAPU8[$57+3>>0]<<24);
    $59 = ((($58)) + 8|0);
    $60 = HEAPU8[$59>>0]|(HEAPU8[$59+1>>0]<<8)|(HEAPU8[$59+2>>0]<<16)|(HEAPU8[$59+3>>0]<<24);
    $61 = $0;
    $62 = $1;
    $63 = (FUNCTION_TABLE_iiiiii[$60 & 0]($61,$62,$vfst,$vscd,$ret)|0);
    $result = $63;
    $64 = $retval;
    (__public_value_to_internal_object($ret,$64)|0);
    $227 = $result;
    STACKTOP = sp;return ($227|0);
   }
  }
 }
 $65 = $opnd2;
 $66 = HEAPU8[$65>>0]|(HEAPU8[$65+1>>0]<<8)|(HEAPU8[$65+2>>0]<<16)|(HEAPU8[$65+3>>0]<<24);
 $67 = ($66|0)==(7);
 if ($67) {
  $68 = $opnd2;
  $69 = ((($68)) + 4|0);
  $70 = HEAPU8[$69>>0]|(HEAPU8[$69+1>>0]<<8)|(HEAPU8[$69+2>>0]<<16)|(HEAPU8[$69+3>>0]<<24);
  $71 = ((($70)) + 45|0);
  $72 = HEAPU8[$71>>0]|(HEAPU8[$71+1>>0]<<8)|(HEAPU8[$71+2>>0]<<16)|(HEAPU8[$71+3>>0]<<24);
  $73 = ($72|0)!=(0|0);
  if ($73) {
   $74 = $opnd2;
   $75 = ((($74)) + 4|0);
   $76 = HEAPU8[$75>>0]|(HEAPU8[$75+1>>0]<<8)|(HEAPU8[$75+2>>0]<<16)|(HEAPU8[$75+3>>0]<<24);
   $77 = ((($76)) + 45|0);
   $78 = HEAPU8[$77>>0]|(HEAPU8[$77+1>>0]<<8)|(HEAPU8[$77+2>>0]<<16)|(HEAPU8[$77+3>>0]<<24);
   $79 = ((($78)) + 8|0);
   $80 = HEAPU8[$79>>0]|(HEAPU8[$79+1>>0]<<8)|(HEAPU8[$79+2>>0]<<16)|(HEAPU8[$79+3>>0]<<24);
   $81 = ($80|0)!=(0|0);
   if ($81) {
    $82 = $opnd1;
    (__internal_object_to_public_value($82,$vfst)|0);
    $83 = $opnd2;
    (__internal_object_to_public_value($83,$vscd)|0);
    $84 = $opnd2;
    $85 = ((($84)) + 4|0);
    $86 = HEAPU8[$85>>0]|(HEAPU8[$85+1>>0]<<8)|(HEAPU8[$85+2>>0]<<16)|(HEAPU8[$85+3>>0]<<24);
    $87 = ((($86)) + 45|0);
    $88 = HEAPU8[$87>>0]|(HEAPU8[$87+1>>0]<<8)|(HEAPU8[$87+2>>0]<<16)|(HEAPU8[$87+3>>0]<<24);
    $89 = ((($88)) + 8|0);
    $90 = HEAPU8[$89>>0]|(HEAPU8[$89+1>>0]<<8)|(HEAPU8[$89+2>>0]<<16)|(HEAPU8[$89+3>>0]<<24);
    $91 = $0;
    $92 = $1;
    $93 = (FUNCTION_TABLE_iiiiii[$90 & 0]($91,$92,$vfst,$vscd,$ret)|0);
    $result = $93;
    $94 = $retval;
    (__public_value_to_internal_object($ret,$94)|0);
    $227 = $result;
    STACKTOP = sp;return ($227|0);
   }
  }
 }
 $95 = $1;
 $96 = HEAP32[$95>>2]|0;
 $tpptr1 = $96;
 $97 = $tpptr1;
 $98 = HEAPU8[$97>>0]|(HEAPU8[$97+1>>0]<<8)|(HEAPU8[$97+2>>0]<<16)|(HEAPU8[$97+3>>0]<<24);
 $opnd12 = $98;
 $99 = $tpptr1;
 $100 = ((($99)) + 4|0);
 $101 = HEAPU8[$100>>0]|(HEAPU8[$100+1>>0]<<8)|(HEAPU8[$100+2>>0]<<16)|(HEAPU8[$100+3>>0]<<24);
 $opnd23 = $101;
 $102 = $tpptr1;
 $103 = ((($102)) + 8|0);
 $104 = HEAPU8[$103>>0]|(HEAPU8[$103+1>>0]<<8)|(HEAPU8[$103+2>>0]<<16)|(HEAPU8[$103+3>>0]<<24);
 $val = $104;
 $105 = $opnd12;
 $106 = HEAPU8[$105>>0]|(HEAPU8[$105+1>>0]<<8)|(HEAPU8[$105+2>>0]<<16)|(HEAPU8[$105+3>>0]<<24);
 $107 = ($106|0)==(2);
 if ($107) {
  $118 = 1;
 } else {
  $108 = $opnd12;
  $109 = HEAPU8[$108>>0]|(HEAPU8[$108+1>>0]<<8)|(HEAPU8[$108+2>>0]<<16)|(HEAPU8[$108+3>>0]<<24);
  $110 = ($109|0)==(9);
  if ($110) {
   $111 = $opnd12;
   $112 = ((($111)) + 4|0);
   $113 = HEAPU8[$112>>0]|(HEAPU8[$112+1>>0]<<8)|(HEAPU8[$112+2>>0]<<16)|(HEAPU8[$112+3>>0]<<24);
   $114 = ((($113)) + 4|0);
   $115 = HEAPU8[$114>>0]|(HEAPU8[$114+1>>0]<<8)|(HEAPU8[$114+2>>0]<<16)|(HEAPU8[$114+3>>0]<<24);
   $116 = HEAPU8[$115>>0]|(HEAPU8[$115+1>>0]<<8)|(HEAPU8[$115+2>>0]<<16)|(HEAPU8[$115+3>>0]<<24);
   $117 = ($116|0)==(2);
   $118 = $117;
  } else {
   $118 = 0;
  }
 }
 $119 = $118 ? 2 : 3;
 HEAP8[$opndv1>>0]=$119&255;HEAP8[$opndv1+1>>0]=($119>>8)&255;HEAP8[$opndv1+2>>0]=($119>>16)&255;HEAP8[$opndv1+3>>0]=$119>>24;
 $120 = ((($opndv1)) + 4|0);
 $121 = $opnd12;
 $122 = HEAPU8[$121>>0]|(HEAPU8[$121+1>>0]<<8)|(HEAPU8[$121+2>>0]<<16)|(HEAPU8[$121+3>>0]<<24);
 $123 = ($122|0)==(9);
 $124 = $opnd12;
 $125 = ((($124)) + 4|0);
 if ($123) {
  $126 = HEAPU8[$125>>0]|(HEAPU8[$125+1>>0]<<8)|(HEAPU8[$125+2>>0]<<16)|(HEAPU8[$125+3>>0]<<24);
  $127 = ((($126)) + 4|0);
  $128 = HEAPU8[$127>>0]|(HEAPU8[$127+1>>0]<<8)|(HEAPU8[$127+2>>0]<<16)|(HEAPU8[$127+3>>0]<<24);
  $129 = ((($128)) + 4|0);
  ;HEAP8[$120>>0]=HEAP8[$129>>0]|0;HEAP8[$120+1>>0]=HEAP8[$129+1>>0]|0;HEAP8[$120+2>>0]=HEAP8[$129+2>>0]|0;HEAP8[$120+3>>0]=HEAP8[$129+3>>0]|0;
 } else {
  ;HEAP8[$120>>0]=HEAP8[$125>>0]|0;HEAP8[$120+1>>0]=HEAP8[$125+1>>0]|0;HEAP8[$120+2>>0]=HEAP8[$125+2>>0]|0;HEAP8[$120+3>>0]=HEAP8[$125+3>>0]|0;
 }
 $130 = $opnd23;
 $131 = HEAPU8[$130>>0]|(HEAPU8[$130+1>>0]<<8)|(HEAPU8[$130+2>>0]<<16)|(HEAPU8[$130+3>>0]<<24);
 $132 = ($131|0)==(2);
 if ($132) {
  $143 = 1;
 } else {
  $133 = $opnd23;
  $134 = HEAPU8[$133>>0]|(HEAPU8[$133+1>>0]<<8)|(HEAPU8[$133+2>>0]<<16)|(HEAPU8[$133+3>>0]<<24);
  $135 = ($134|0)==(9);
  if ($135) {
   $136 = $opnd23;
   $137 = ((($136)) + 4|0);
   $138 = HEAPU8[$137>>0]|(HEAPU8[$137+1>>0]<<8)|(HEAPU8[$137+2>>0]<<16)|(HEAPU8[$137+3>>0]<<24);
   $139 = ((($138)) + 4|0);
   $140 = HEAPU8[$139>>0]|(HEAPU8[$139+1>>0]<<8)|(HEAPU8[$139+2>>0]<<16)|(HEAPU8[$139+3>>0]<<24);
   $141 = HEAPU8[$140>>0]|(HEAPU8[$140+1>>0]<<8)|(HEAPU8[$140+2>>0]<<16)|(HEAPU8[$140+3>>0]<<24);
   $142 = ($141|0)==(2);
   $143 = $142;
  } else {
   $143 = 0;
  }
 }
 $144 = $143 ? 2 : 3;
 HEAP8[$opndv2>>0]=$144&255;HEAP8[$opndv2+1>>0]=($144>>8)&255;HEAP8[$opndv2+2>>0]=($144>>16)&255;HEAP8[$opndv2+3>>0]=$144>>24;
 $145 = ((($opndv2)) + 4|0);
 $146 = $opnd23;
 $147 = HEAPU8[$146>>0]|(HEAPU8[$146+1>>0]<<8)|(HEAPU8[$146+2>>0]<<16)|(HEAPU8[$146+3>>0]<<24);
 $148 = ($147|0)==(9);
 $149 = $opnd23;
 $150 = ((($149)) + 4|0);
 if ($148) {
  $151 = HEAPU8[$150>>0]|(HEAPU8[$150+1>>0]<<8)|(HEAPU8[$150+2>>0]<<16)|(HEAPU8[$150+3>>0]<<24);
  $152 = ((($151)) + 4|0);
  $153 = HEAPU8[$152>>0]|(HEAPU8[$152+1>>0]<<8)|(HEAPU8[$152+2>>0]<<16)|(HEAPU8[$152+3>>0]<<24);
  $154 = ((($153)) + 4|0);
  ;HEAP8[$145>>0]=HEAP8[$154>>0]|0;HEAP8[$145+1>>0]=HEAP8[$154+1>>0]|0;HEAP8[$145+2>>0]=HEAP8[$154+2>>0]|0;HEAP8[$145+3>>0]=HEAP8[$154+3>>0]|0;
 } else {
  ;HEAP8[$145>>0]=HEAP8[$150>>0]|0;HEAP8[$145+1>>0]=HEAP8[$150+1>>0]|0;HEAP8[$145+2>>0]=HEAP8[$150+2>>0]|0;HEAP8[$145+3>>0]=HEAP8[$150+3>>0]|0;
 }
 $155 = HEAPU8[$opndv1>>0]|(HEAPU8[$opndv1+1>>0]<<8)|(HEAPU8[$opndv1+2>>0]<<16)|(HEAPU8[$opndv1+3>>0]<<24);
 $156 = ($155|0)==(2);
 do {
  if ($156) {
   $157 = HEAPU8[$opndv2>>0]|(HEAPU8[$opndv2+1>>0]<<8)|(HEAPU8[$opndv2+2>>0]<<16)|(HEAPU8[$opndv2+3>>0]<<24);
   $158 = ($157|0)==(2);
   if ($158) {
    $159 = ((($opndv1)) + 4|0);
    $160 = HEAPU8[$159>>0]|(HEAPU8[$159+1>>0]<<8)|(HEAPU8[$159+2>>0]<<16)|(HEAPU8[$159+3>>0]<<24);
    $161 = ((($opndv2)) + 4|0);
    $162 = HEAPU8[$161>>0]|(HEAPU8[$161+1>>0]<<8)|(HEAPU8[$161+2>>0]<<16)|(HEAPU8[$161+3>>0]<<24);
    $163 = (($160) - ($162))|0;
    $164 = (+($163|0));
    $165 = ((($opndv1)) + 4|0);
    $166 = HEAPU8[$165>>0]|(HEAPU8[$165+1>>0]<<8)|(HEAPU8[$165+2>>0]<<16)|(HEAPU8[$165+3>>0]<<24);
    $167 = (+($166|0));
    $168 = ((($opndv2)) + 4|0);
    $169 = HEAPU8[$168>>0]|(HEAPU8[$168+1>>0]<<8)|(HEAPU8[$168+2>>0]<<16)|(HEAPU8[$168+3>>0]<<24);
    $170 = (+($169|0));
    $171 = $167 - $170;
    $172 = $164 == $171;
    $173 = $val;
    if ($172) {
     HEAP8[$173>>0]=2&255;HEAP8[$173+1>>0]=(2>>8)&255;HEAP8[$173+2>>0]=(2>>16)&255;HEAP8[$173+3>>0]=2>>24;
     $174 = ((($opndv1)) + 4|0);
     $175 = HEAPU8[$174>>0]|(HEAPU8[$174+1>>0]<<8)|(HEAPU8[$174+2>>0]<<16)|(HEAPU8[$174+3>>0]<<24);
     $176 = ((($opndv2)) + 4|0);
     $177 = HEAPU8[$176>>0]|(HEAPU8[$176+1>>0]<<8)|(HEAPU8[$176+2>>0]<<16)|(HEAPU8[$176+3>>0]<<24);
     $178 = (($175) - ($177))|0;
     $179 = $val;
     $180 = ((($179)) + 4|0);
     HEAP8[$180>>0]=$178&255;HEAP8[$180+1>>0]=($178>>8)&255;HEAP8[$180+2>>0]=($178>>16)&255;HEAP8[$180+3>>0]=$178>>24;
     break;
    } else {
     HEAP8[$173>>0]=3&255;HEAP8[$173+1>>0]=(3>>8)&255;HEAP8[$173+2>>0]=(3>>16)&255;HEAP8[$173+3>>0]=3>>24;
     $181 = ((($opndv1)) + 4|0);
     $182 = HEAPU8[$181>>0]|(HEAPU8[$181+1>>0]<<8)|(HEAPU8[$181+2>>0]<<16)|(HEAPU8[$181+3>>0]<<24);
     $183 = (+($182|0));
     $184 = ((($opndv2)) + 4|0);
     $185 = HEAPU8[$184>>0]|(HEAPU8[$184+1>>0]<<8)|(HEAPU8[$184+2>>0]<<16)|(HEAPU8[$184+3>>0]<<24);
     $186 = (+($185|0));
     $187 = $183 - $186;
     $188 = $val;
     $189 = ((($188)) + 4|0);
     HEAPF32[tempDoublePtr>>2]=$187;HEAP8[$189>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$189+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$189+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$189+3>>0]=HEAP8[tempDoublePtr+3>>0];
     break;
    }
   } else {
    label = 32;
   }
  } else {
   label = 32;
  }
 } while(0);
 if ((label|0) == 32) {
  $190 = $val;
  HEAP8[$190>>0]=3&255;HEAP8[$190+1>>0]=(3>>8)&255;HEAP8[$190+2>>0]=(3>>16)&255;HEAP8[$190+3>>0]=3>>24;
  $191 = HEAPU8[$opndv1>>0]|(HEAPU8[$opndv1+1>>0]<<8)|(HEAPU8[$opndv1+2>>0]<<16)|(HEAPU8[$opndv1+3>>0]<<24);
  $192 = ($191|0)==(2);
  $193 = ((($opndv1)) + 4|0);
  $194 = HEAPU8[$193>>0]|(HEAPU8[$193+1>>0]<<8)|(HEAPU8[$193+2>>0]<<16)|(HEAPU8[$193+3>>0]<<24);
  $195 = (+($194|0));
  HEAP8[tempDoublePtr>>0]=HEAP8[$193>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$193+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$193+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$193+3>>0];$196 = +HEAPF32[tempDoublePtr>>2];
  $197 = $192 ? $195 : $196;
  $198 = HEAPU8[$opndv2>>0]|(HEAPU8[$opndv2+1>>0]<<8)|(HEAPU8[$opndv2+2>>0]<<16)|(HEAPU8[$opndv2+3>>0]<<24);
  $199 = ($198|0)==(2);
  $200 = ((($opndv2)) + 4|0);
  $201 = HEAPU8[$200>>0]|(HEAPU8[$200+1>>0]<<8)|(HEAPU8[$200+2>>0]<<16)|(HEAPU8[$200+3>>0]<<24);
  $202 = (+($201|0));
  HEAP8[tempDoublePtr>>0]=HEAP8[$200>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$200+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$200+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$200+3>>0];$203 = +HEAPF32[tempDoublePtr>>2];
  $204 = $199 ? $202 : $203;
  $205 = $197 - $204;
  $206 = $val;
  $207 = ((($206)) + 4|0);
  HEAPF32[tempDoublePtr>>2]=$205;HEAP8[$207>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$207+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$207+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$207+3>>0]=HEAP8[tempDoublePtr+3>>0];
 }
 $208 = $val;
 $209 = HEAPU8[$208>>0]|(HEAPU8[$208+1>>0]<<8)|(HEAPU8[$208+2>>0]<<16)|(HEAPU8[$208+3>>0]<<24);
 $210 = ($209|0)==(3);
 if (!($210)) {
  $227 = $result;
  STACKTOP = sp;return ($227|0);
 }
 $211 = $val;
 $212 = ((($211)) + 4|0);
 HEAP8[tempDoublePtr>>0]=HEAP8[$212>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$212+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$212+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$212+3>>0];$213 = +HEAPF32[tempDoublePtr>>2];
 $214 = (~~(($213)));
 $215 = (+($214|0));
 $216 = $val;
 $217 = ((($216)) + 4|0);
 HEAP8[tempDoublePtr>>0]=HEAP8[$217>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$217+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$217+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$217+3>>0];$218 = +HEAPF32[tempDoublePtr>>2];
 $219 = $215 == $218;
 if (!($219)) {
  $227 = $result;
  STACKTOP = sp;return ($227|0);
 }
 $220 = $val;
 HEAP8[$220>>0]=2&255;HEAP8[$220+1>>0]=(2>>8)&255;HEAP8[$220+2>>0]=(2>>16)&255;HEAP8[$220+3>>0]=2>>24;
 $221 = $val;
 $222 = ((($221)) + 4|0);
 HEAP8[tempDoublePtr>>0]=HEAP8[$222>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$222+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$222+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$222+3>>0];$223 = +HEAPF32[tempDoublePtr>>2];
 $224 = (~~(($223)));
 $225 = $val;
 $226 = ((($225)) + 4|0);
 HEAP8[$226>>0]=$224&255;HEAP8[$226+1>>0]=($224>>8)&255;HEAP8[$226+2>>0]=($224>>16)&255;HEAP8[$226+3>>0]=$224>>24;
 $227 = $result;
 STACKTOP = sp;return ($227|0);
}
function __core_mul($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0.0, $165 = 0, $166 = 0, $167 = 0.0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0.0, $171 = 0.0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0.0, $184 = 0, $185 = 0, $186 = 0.0, $187 = 0.0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0.0, $196 = 0.0, $197 = 0.0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0.0, $203 = 0.0, $204 = 0.0, $205 = 0.0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0.0, $214 = 0, $215 = 0.0, $216 = 0, $217 = 0, $218 = 0.0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0.0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $opnd1 = 0, $opnd12 = 0, $opnd2 = 0, $opnd23 = 0, $opndv1 = 0, $opndv2 = 0, $or$cond = 0, $result = 0, $ret = 0, $retval = 0, $tpptr = 0, $tpptr1 = 0;
 var $val = 0, $vfst = 0, $vscd = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vfst = sp + 96|0;
 $vscd = sp + 88|0;
 $ret = sp + 80|0;
 $opndv1 = sp + 61|0;
 $opndv2 = sp + 44|0;
 $0 = $s;
 $1 = $l;
 $result = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),15058,(5134|0));
  // unreachable;
 }
 $6 = $1;
 $7 = HEAP32[$6>>2]|0;
 $tpptr = $7;
 $8 = $tpptr;
 $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
 $opnd1 = $9;
 $10 = $tpptr;
 $11 = ((($10)) + 4|0);
 $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
 $opnd2 = $12;
 $13 = $tpptr;
 $14 = ((($13)) + 8|0);
 $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
 $retval = $15;
 $16 = $opnd1;
 $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
 $18 = ($17|0)==(9);
 if ($18) {
  $19 = $opnd1;
  $20 = ((($19)) + 4|0);
  $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
  $22 = ((($21)) + 4|0);
  $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
  $opnd1 = $23;
 }
 $24 = $opnd2;
 $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
 $26 = ($25|0)==(9);
 if ($26) {
  $27 = $opnd2;
  $28 = ((($27)) + 4|0);
  $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
  $30 = ((($29)) + 4|0);
  $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8)|(HEAPU8[$30+2>>0]<<16)|(HEAPU8[$30+3>>0]<<24);
  $opnd2 = $31;
 }
 $32 = ((($vfst)) + 4|0);
 ;HEAP8[$32>>0]=0|0;HEAP8[$32+1>>0]=0|0;HEAP8[$32+2>>0]=0|0;HEAP8[$32+3>>0]=0|0;
 HEAP8[$vfst>>0]=0&255;HEAP8[$vfst+1>>0]=(0>>8)&255;HEAP8[$vfst+2>>0]=(0>>16)&255;HEAP8[$vfst+3>>0]=0>>24;
 $33 = ((($vscd)) + 4|0);
 ;HEAP8[$33>>0]=0|0;HEAP8[$33+1>>0]=0|0;HEAP8[$33+2>>0]=0|0;HEAP8[$33+3>>0]=0|0;
 HEAP8[$vscd>>0]=0&255;HEAP8[$vscd+1>>0]=(0>>8)&255;HEAP8[$vscd+2>>0]=(0>>16)&255;HEAP8[$vscd+3>>0]=0>>24;
 $34 = ((($ret)) + 4|0);
 ;HEAP8[$34>>0]=0|0;HEAP8[$34+1>>0]=0|0;HEAP8[$34+2>>0]=0|0;HEAP8[$34+3>>0]=0|0;
 HEAP8[$ret>>0]=0&255;HEAP8[$ret+1>>0]=(0>>8)&255;HEAP8[$ret+2>>0]=(0>>16)&255;HEAP8[$ret+3>>0]=0>>24;
 $35 = $opnd1;
 $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
 $37 = ($36|0)==(7);
 if ($37) {
  $38 = $opnd1;
  $39 = ((($38)) + 4|0);
  $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8)|(HEAPU8[$39+2>>0]<<16)|(HEAPU8[$39+3>>0]<<24);
  $41 = ((($40)) + 45|0);
  $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
  $43 = ($42|0)!=(0|0);
  if ($43) {
   $44 = $opnd1;
   $45 = ((($44)) + 4|0);
   $46 = HEAPU8[$45>>0]|(HEAPU8[$45+1>>0]<<8)|(HEAPU8[$45+2>>0]<<16)|(HEAPU8[$45+3>>0]<<24);
   $47 = ((($46)) + 45|0);
   $48 = HEAPU8[$47>>0]|(HEAPU8[$47+1>>0]<<8)|(HEAPU8[$47+2>>0]<<16)|(HEAPU8[$47+3>>0]<<24);
   $49 = ((($48)) + 12|0);
   $50 = HEAPU8[$49>>0]|(HEAPU8[$49+1>>0]<<8)|(HEAPU8[$49+2>>0]<<16)|(HEAPU8[$49+3>>0]<<24);
   $51 = ($50|0)!=(0|0);
   if ($51) {
    $52 = $opnd1;
    (__internal_object_to_public_value($52,$vfst)|0);
    $53 = $opnd2;
    (__internal_object_to_public_value($53,$vscd)|0);
    $54 = $opnd1;
    $55 = ((($54)) + 4|0);
    $56 = HEAPU8[$55>>0]|(HEAPU8[$55+1>>0]<<8)|(HEAPU8[$55+2>>0]<<16)|(HEAPU8[$55+3>>0]<<24);
    $57 = ((($56)) + 45|0);
    $58 = HEAPU8[$57>>0]|(HEAPU8[$57+1>>0]<<8)|(HEAPU8[$57+2>>0]<<16)|(HEAPU8[$57+3>>0]<<24);
    $59 = ((($58)) + 12|0);
    $60 = HEAPU8[$59>>0]|(HEAPU8[$59+1>>0]<<8)|(HEAPU8[$59+2>>0]<<16)|(HEAPU8[$59+3>>0]<<24);
    $61 = $0;
    $62 = $1;
    $63 = (FUNCTION_TABLE_iiiiii[$60 & 0]($61,$62,$vfst,$vscd,$ret)|0);
    $result = $63;
    $64 = $retval;
    (__public_value_to_internal_object($ret,$64)|0);
    $227 = $result;
    STACKTOP = sp;return ($227|0);
   }
  }
 }
 $65 = $opnd2;
 $66 = HEAPU8[$65>>0]|(HEAPU8[$65+1>>0]<<8)|(HEAPU8[$65+2>>0]<<16)|(HEAPU8[$65+3>>0]<<24);
 $67 = ($66|0)==(7);
 if ($67) {
  $68 = $opnd2;
  $69 = ((($68)) + 4|0);
  $70 = HEAPU8[$69>>0]|(HEAPU8[$69+1>>0]<<8)|(HEAPU8[$69+2>>0]<<16)|(HEAPU8[$69+3>>0]<<24);
  $71 = ((($70)) + 45|0);
  $72 = HEAPU8[$71>>0]|(HEAPU8[$71+1>>0]<<8)|(HEAPU8[$71+2>>0]<<16)|(HEAPU8[$71+3>>0]<<24);
  $73 = ($72|0)!=(0|0);
  if ($73) {
   $74 = $opnd2;
   $75 = ((($74)) + 4|0);
   $76 = HEAPU8[$75>>0]|(HEAPU8[$75+1>>0]<<8)|(HEAPU8[$75+2>>0]<<16)|(HEAPU8[$75+3>>0]<<24);
   $77 = ((($76)) + 45|0);
   $78 = HEAPU8[$77>>0]|(HEAPU8[$77+1>>0]<<8)|(HEAPU8[$77+2>>0]<<16)|(HEAPU8[$77+3>>0]<<24);
   $79 = ((($78)) + 12|0);
   $80 = HEAPU8[$79>>0]|(HEAPU8[$79+1>>0]<<8)|(HEAPU8[$79+2>>0]<<16)|(HEAPU8[$79+3>>0]<<24);
   $81 = ($80|0)!=(0|0);
   if ($81) {
    $82 = $opnd1;
    (__internal_object_to_public_value($82,$vfst)|0);
    $83 = $opnd2;
    (__internal_object_to_public_value($83,$vscd)|0);
    $84 = $opnd2;
    $85 = ((($84)) + 4|0);
    $86 = HEAPU8[$85>>0]|(HEAPU8[$85+1>>0]<<8)|(HEAPU8[$85+2>>0]<<16)|(HEAPU8[$85+3>>0]<<24);
    $87 = ((($86)) + 45|0);
    $88 = HEAPU8[$87>>0]|(HEAPU8[$87+1>>0]<<8)|(HEAPU8[$87+2>>0]<<16)|(HEAPU8[$87+3>>0]<<24);
    $89 = ((($88)) + 12|0);
    $90 = HEAPU8[$89>>0]|(HEAPU8[$89+1>>0]<<8)|(HEAPU8[$89+2>>0]<<16)|(HEAPU8[$89+3>>0]<<24);
    $91 = $0;
    $92 = $1;
    $93 = (FUNCTION_TABLE_iiiiii[$90 & 0]($91,$92,$vfst,$vscd,$ret)|0);
    $result = $93;
    $94 = $retval;
    (__public_value_to_internal_object($ret,$94)|0);
    $227 = $result;
    STACKTOP = sp;return ($227|0);
   }
  }
 }
 $95 = $1;
 $96 = HEAP32[$95>>2]|0;
 $tpptr1 = $96;
 $97 = $tpptr1;
 $98 = HEAPU8[$97>>0]|(HEAPU8[$97+1>>0]<<8)|(HEAPU8[$97+2>>0]<<16)|(HEAPU8[$97+3>>0]<<24);
 $opnd12 = $98;
 $99 = $tpptr1;
 $100 = ((($99)) + 4|0);
 $101 = HEAPU8[$100>>0]|(HEAPU8[$100+1>>0]<<8)|(HEAPU8[$100+2>>0]<<16)|(HEAPU8[$100+3>>0]<<24);
 $opnd23 = $101;
 $102 = $tpptr1;
 $103 = ((($102)) + 8|0);
 $104 = HEAPU8[$103>>0]|(HEAPU8[$103+1>>0]<<8)|(HEAPU8[$103+2>>0]<<16)|(HEAPU8[$103+3>>0]<<24);
 $val = $104;
 $105 = $opnd12;
 $106 = HEAPU8[$105>>0]|(HEAPU8[$105+1>>0]<<8)|(HEAPU8[$105+2>>0]<<16)|(HEAPU8[$105+3>>0]<<24);
 $107 = ($106|0)==(2);
 if ($107) {
  $118 = 1;
 } else {
  $108 = $opnd12;
  $109 = HEAPU8[$108>>0]|(HEAPU8[$108+1>>0]<<8)|(HEAPU8[$108+2>>0]<<16)|(HEAPU8[$108+3>>0]<<24);
  $110 = ($109|0)==(9);
  if ($110) {
   $111 = $opnd12;
   $112 = ((($111)) + 4|0);
   $113 = HEAPU8[$112>>0]|(HEAPU8[$112+1>>0]<<8)|(HEAPU8[$112+2>>0]<<16)|(HEAPU8[$112+3>>0]<<24);
   $114 = ((($113)) + 4|0);
   $115 = HEAPU8[$114>>0]|(HEAPU8[$114+1>>0]<<8)|(HEAPU8[$114+2>>0]<<16)|(HEAPU8[$114+3>>0]<<24);
   $116 = HEAPU8[$115>>0]|(HEAPU8[$115+1>>0]<<8)|(HEAPU8[$115+2>>0]<<16)|(HEAPU8[$115+3>>0]<<24);
   $117 = ($116|0)==(2);
   $118 = $117;
  } else {
   $118 = 0;
  }
 }
 $119 = $118 ? 2 : 3;
 HEAP8[$opndv1>>0]=$119&255;HEAP8[$opndv1+1>>0]=($119>>8)&255;HEAP8[$opndv1+2>>0]=($119>>16)&255;HEAP8[$opndv1+3>>0]=$119>>24;
 $120 = ((($opndv1)) + 4|0);
 $121 = $opnd12;
 $122 = HEAPU8[$121>>0]|(HEAPU8[$121+1>>0]<<8)|(HEAPU8[$121+2>>0]<<16)|(HEAPU8[$121+3>>0]<<24);
 $123 = ($122|0)==(9);
 $124 = $opnd12;
 $125 = ((($124)) + 4|0);
 if ($123) {
  $126 = HEAPU8[$125>>0]|(HEAPU8[$125+1>>0]<<8)|(HEAPU8[$125+2>>0]<<16)|(HEAPU8[$125+3>>0]<<24);
  $127 = ((($126)) + 4|0);
  $128 = HEAPU8[$127>>0]|(HEAPU8[$127+1>>0]<<8)|(HEAPU8[$127+2>>0]<<16)|(HEAPU8[$127+3>>0]<<24);
  $129 = ((($128)) + 4|0);
  ;HEAP8[$120>>0]=HEAP8[$129>>0]|0;HEAP8[$120+1>>0]=HEAP8[$129+1>>0]|0;HEAP8[$120+2>>0]=HEAP8[$129+2>>0]|0;HEAP8[$120+3>>0]=HEAP8[$129+3>>0]|0;
 } else {
  ;HEAP8[$120>>0]=HEAP8[$125>>0]|0;HEAP8[$120+1>>0]=HEAP8[$125+1>>0]|0;HEAP8[$120+2>>0]=HEAP8[$125+2>>0]|0;HEAP8[$120+3>>0]=HEAP8[$125+3>>0]|0;
 }
 $130 = $opnd23;
 $131 = HEAPU8[$130>>0]|(HEAPU8[$130+1>>0]<<8)|(HEAPU8[$130+2>>0]<<16)|(HEAPU8[$130+3>>0]<<24);
 $132 = ($131|0)==(2);
 if ($132) {
  $143 = 1;
 } else {
  $133 = $opnd23;
  $134 = HEAPU8[$133>>0]|(HEAPU8[$133+1>>0]<<8)|(HEAPU8[$133+2>>0]<<16)|(HEAPU8[$133+3>>0]<<24);
  $135 = ($134|0)==(9);
  if ($135) {
   $136 = $opnd23;
   $137 = ((($136)) + 4|0);
   $138 = HEAPU8[$137>>0]|(HEAPU8[$137+1>>0]<<8)|(HEAPU8[$137+2>>0]<<16)|(HEAPU8[$137+3>>0]<<24);
   $139 = ((($138)) + 4|0);
   $140 = HEAPU8[$139>>0]|(HEAPU8[$139+1>>0]<<8)|(HEAPU8[$139+2>>0]<<16)|(HEAPU8[$139+3>>0]<<24);
   $141 = HEAPU8[$140>>0]|(HEAPU8[$140+1>>0]<<8)|(HEAPU8[$140+2>>0]<<16)|(HEAPU8[$140+3>>0]<<24);
   $142 = ($141|0)==(2);
   $143 = $142;
  } else {
   $143 = 0;
  }
 }
 $144 = $143 ? 2 : 3;
 HEAP8[$opndv2>>0]=$144&255;HEAP8[$opndv2+1>>0]=($144>>8)&255;HEAP8[$opndv2+2>>0]=($144>>16)&255;HEAP8[$opndv2+3>>0]=$144>>24;
 $145 = ((($opndv2)) + 4|0);
 $146 = $opnd23;
 $147 = HEAPU8[$146>>0]|(HEAPU8[$146+1>>0]<<8)|(HEAPU8[$146+2>>0]<<16)|(HEAPU8[$146+3>>0]<<24);
 $148 = ($147|0)==(9);
 $149 = $opnd23;
 $150 = ((($149)) + 4|0);
 if ($148) {
  $151 = HEAPU8[$150>>0]|(HEAPU8[$150+1>>0]<<8)|(HEAPU8[$150+2>>0]<<16)|(HEAPU8[$150+3>>0]<<24);
  $152 = ((($151)) + 4|0);
  $153 = HEAPU8[$152>>0]|(HEAPU8[$152+1>>0]<<8)|(HEAPU8[$152+2>>0]<<16)|(HEAPU8[$152+3>>0]<<24);
  $154 = ((($153)) + 4|0);
  ;HEAP8[$145>>0]=HEAP8[$154>>0]|0;HEAP8[$145+1>>0]=HEAP8[$154+1>>0]|0;HEAP8[$145+2>>0]=HEAP8[$154+2>>0]|0;HEAP8[$145+3>>0]=HEAP8[$154+3>>0]|0;
 } else {
  ;HEAP8[$145>>0]=HEAP8[$150>>0]|0;HEAP8[$145+1>>0]=HEAP8[$150+1>>0]|0;HEAP8[$145+2>>0]=HEAP8[$150+2>>0]|0;HEAP8[$145+3>>0]=HEAP8[$150+3>>0]|0;
 }
 $155 = HEAPU8[$opndv1>>0]|(HEAPU8[$opndv1+1>>0]<<8)|(HEAPU8[$opndv1+2>>0]<<16)|(HEAPU8[$opndv1+3>>0]<<24);
 $156 = ($155|0)==(2);
 do {
  if ($156) {
   $157 = HEAPU8[$opndv2>>0]|(HEAPU8[$opndv2+1>>0]<<8)|(HEAPU8[$opndv2+2>>0]<<16)|(HEAPU8[$opndv2+3>>0]<<24);
   $158 = ($157|0)==(2);
   if ($158) {
    $159 = ((($opndv1)) + 4|0);
    $160 = HEAPU8[$159>>0]|(HEAPU8[$159+1>>0]<<8)|(HEAPU8[$159+2>>0]<<16)|(HEAPU8[$159+3>>0]<<24);
    $161 = ((($opndv2)) + 4|0);
    $162 = HEAPU8[$161>>0]|(HEAPU8[$161+1>>0]<<8)|(HEAPU8[$161+2>>0]<<16)|(HEAPU8[$161+3>>0]<<24);
    $163 = Math_imul($160, $162)|0;
    $164 = (+($163|0));
    $165 = ((($opndv1)) + 4|0);
    $166 = HEAPU8[$165>>0]|(HEAPU8[$165+1>>0]<<8)|(HEAPU8[$165+2>>0]<<16)|(HEAPU8[$165+3>>0]<<24);
    $167 = (+($166|0));
    $168 = ((($opndv2)) + 4|0);
    $169 = HEAPU8[$168>>0]|(HEAPU8[$168+1>>0]<<8)|(HEAPU8[$168+2>>0]<<16)|(HEAPU8[$168+3>>0]<<24);
    $170 = (+($169|0));
    $171 = $167 * $170;
    $172 = $164 == $171;
    $173 = $val;
    if ($172) {
     HEAP8[$173>>0]=2&255;HEAP8[$173+1>>0]=(2>>8)&255;HEAP8[$173+2>>0]=(2>>16)&255;HEAP8[$173+3>>0]=2>>24;
     $174 = ((($opndv1)) + 4|0);
     $175 = HEAPU8[$174>>0]|(HEAPU8[$174+1>>0]<<8)|(HEAPU8[$174+2>>0]<<16)|(HEAPU8[$174+3>>0]<<24);
     $176 = ((($opndv2)) + 4|0);
     $177 = HEAPU8[$176>>0]|(HEAPU8[$176+1>>0]<<8)|(HEAPU8[$176+2>>0]<<16)|(HEAPU8[$176+3>>0]<<24);
     $178 = Math_imul($175, $177)|0;
     $179 = $val;
     $180 = ((($179)) + 4|0);
     HEAP8[$180>>0]=$178&255;HEAP8[$180+1>>0]=($178>>8)&255;HEAP8[$180+2>>0]=($178>>16)&255;HEAP8[$180+3>>0]=$178>>24;
     break;
    } else {
     HEAP8[$173>>0]=3&255;HEAP8[$173+1>>0]=(3>>8)&255;HEAP8[$173+2>>0]=(3>>16)&255;HEAP8[$173+3>>0]=3>>24;
     $181 = ((($opndv1)) + 4|0);
     $182 = HEAPU8[$181>>0]|(HEAPU8[$181+1>>0]<<8)|(HEAPU8[$181+2>>0]<<16)|(HEAPU8[$181+3>>0]<<24);
     $183 = (+($182|0));
     $184 = ((($opndv2)) + 4|0);
     $185 = HEAPU8[$184>>0]|(HEAPU8[$184+1>>0]<<8)|(HEAPU8[$184+2>>0]<<16)|(HEAPU8[$184+3>>0]<<24);
     $186 = (+($185|0));
     $187 = $183 * $186;
     $188 = $val;
     $189 = ((($188)) + 4|0);
     HEAPF32[tempDoublePtr>>2]=$187;HEAP8[$189>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$189+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$189+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$189+3>>0]=HEAP8[tempDoublePtr+3>>0];
     break;
    }
   } else {
    label = 32;
   }
  } else {
   label = 32;
  }
 } while(0);
 if ((label|0) == 32) {
  $190 = $val;
  HEAP8[$190>>0]=3&255;HEAP8[$190+1>>0]=(3>>8)&255;HEAP8[$190+2>>0]=(3>>16)&255;HEAP8[$190+3>>0]=3>>24;
  $191 = HEAPU8[$opndv1>>0]|(HEAPU8[$opndv1+1>>0]<<8)|(HEAPU8[$opndv1+2>>0]<<16)|(HEAPU8[$opndv1+3>>0]<<24);
  $192 = ($191|0)==(2);
  $193 = ((($opndv1)) + 4|0);
  $194 = HEAPU8[$193>>0]|(HEAPU8[$193+1>>0]<<8)|(HEAPU8[$193+2>>0]<<16)|(HEAPU8[$193+3>>0]<<24);
  $195 = (+($194|0));
  HEAP8[tempDoublePtr>>0]=HEAP8[$193>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$193+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$193+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$193+3>>0];$196 = +HEAPF32[tempDoublePtr>>2];
  $197 = $192 ? $195 : $196;
  $198 = HEAPU8[$opndv2>>0]|(HEAPU8[$opndv2+1>>0]<<8)|(HEAPU8[$opndv2+2>>0]<<16)|(HEAPU8[$opndv2+3>>0]<<24);
  $199 = ($198|0)==(2);
  $200 = ((($opndv2)) + 4|0);
  $201 = HEAPU8[$200>>0]|(HEAPU8[$200+1>>0]<<8)|(HEAPU8[$200+2>>0]<<16)|(HEAPU8[$200+3>>0]<<24);
  $202 = (+($201|0));
  HEAP8[tempDoublePtr>>0]=HEAP8[$200>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$200+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$200+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$200+3>>0];$203 = +HEAPF32[tempDoublePtr>>2];
  $204 = $199 ? $202 : $203;
  $205 = $197 * $204;
  $206 = $val;
  $207 = ((($206)) + 4|0);
  HEAPF32[tempDoublePtr>>2]=$205;HEAP8[$207>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$207+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$207+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$207+3>>0]=HEAP8[tempDoublePtr+3>>0];
 }
 $208 = $val;
 $209 = HEAPU8[$208>>0]|(HEAPU8[$208+1>>0]<<8)|(HEAPU8[$208+2>>0]<<16)|(HEAPU8[$208+3>>0]<<24);
 $210 = ($209|0)==(3);
 if (!($210)) {
  $227 = $result;
  STACKTOP = sp;return ($227|0);
 }
 $211 = $val;
 $212 = ((($211)) + 4|0);
 HEAP8[tempDoublePtr>>0]=HEAP8[$212>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$212+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$212+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$212+3>>0];$213 = +HEAPF32[tempDoublePtr>>2];
 $214 = (~~(($213)));
 $215 = (+($214|0));
 $216 = $val;
 $217 = ((($216)) + 4|0);
 HEAP8[tempDoublePtr>>0]=HEAP8[$217>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$217+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$217+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$217+3>>0];$218 = +HEAPF32[tempDoublePtr>>2];
 $219 = $215 == $218;
 if (!($219)) {
  $227 = $result;
  STACKTOP = sp;return ($227|0);
 }
 $220 = $val;
 HEAP8[$220>>0]=2&255;HEAP8[$220+1>>0]=(2>>8)&255;HEAP8[$220+2>>0]=(2>>16)&255;HEAP8[$220+3>>0]=2>>24;
 $221 = $val;
 $222 = ((($221)) + 4|0);
 HEAP8[tempDoublePtr>>0]=HEAP8[$222>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$222+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$222+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$222+3>>0];$223 = +HEAPF32[tempDoublePtr>>2];
 $224 = (~~(($223)));
 $225 = $val;
 $226 = ((($225)) + 4|0);
 HEAP8[$226>>0]=$224&255;HEAP8[$226+1>>0]=($224>>8)&255;HEAP8[$226+2>>0]=($224>>16)&255;HEAP8[$226+3>>0]=$224>>24;
 $227 = $result;
 STACKTOP = sp;return ($227|0);
}
function __core_div($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0.0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0.0, $174 = 0, $175 = 0, $176 = 0.0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0.0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0.0, $291 = 0, $292 = 0, $293 = 0.0, $294 = 0, $295 = 0, $296 = 0.0;
 var $297 = 0.0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0.0, $31 = 0, $310 = 0, $311 = 0, $312 = 0.0, $313 = 0.0;
 var $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0.0, $322 = 0.0, $323 = 0.0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0.0, $329 = 0.0, $33 = 0, $330 = 0.0, $331 = 0.0;
 var $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0.0, $34 = 0, $340 = 0, $341 = 0.0, $342 = 0, $343 = 0, $344 = 0.0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0.0, $35 = 0;
 var $350 = 0, $351 = 0, $352 = 0, $353 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__u = 0, $__u4 = 0, $opnd1 = 0, $opnd12 = 0, $opnd18 = 0, $opnd2 = 0;
 var $opnd23 = 0, $opnd29 = 0, $opndv1 = 0, $opndv15 = 0, $opndv2 = 0, $opndv26 = 0, $or$cond = 0, $result = 0, $ret = 0, $retval = 0, $tpptr = 0, $tpptr1 = 0, $tpptr7 = 0, $val = 0, $val10 = 0, $vfst = 0, $vscd = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vfst = sp + 160|0;
 $vscd = sp + 152|0;
 $ret = sp + 144|0;
 $opndv1 = sp + 121|0;
 $opndv2 = sp + 104|0;
 $__u = sp + 100|0;
 $__u4 = sp + 96|0;
 $opndv15 = sp + 77|0;
 $opndv26 = sp + 60|0;
 $0 = $s;
 $1 = $l;
 $result = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),15074,(5124|0));
  // unreachable;
 }
 $6 = $1;
 $7 = HEAP32[$6>>2]|0;
 $tpptr = $7;
 $8 = $tpptr;
 $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
 $opnd1 = $9;
 $10 = $tpptr;
 $11 = ((($10)) + 4|0);
 $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
 $opnd2 = $12;
 $13 = $tpptr;
 $14 = ((($13)) + 8|0);
 $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
 $retval = $15;
 $16 = $opnd1;
 $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
 $18 = ($17|0)==(9);
 if ($18) {
  $19 = $opnd1;
  $20 = ((($19)) + 4|0);
  $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
  $22 = ((($21)) + 4|0);
  $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
  $opnd1 = $23;
 }
 $24 = $opnd2;
 $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
 $26 = ($25|0)==(9);
 if ($26) {
  $27 = $opnd2;
  $28 = ((($27)) + 4|0);
  $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
  $30 = ((($29)) + 4|0);
  $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8)|(HEAPU8[$30+2>>0]<<16)|(HEAPU8[$30+3>>0]<<24);
  $opnd2 = $31;
 }
 $32 = ((($vfst)) + 4|0);
 ;HEAP8[$32>>0]=0|0;HEAP8[$32+1>>0]=0|0;HEAP8[$32+2>>0]=0|0;HEAP8[$32+3>>0]=0|0;
 HEAP8[$vfst>>0]=0&255;HEAP8[$vfst+1>>0]=(0>>8)&255;HEAP8[$vfst+2>>0]=(0>>16)&255;HEAP8[$vfst+3>>0]=0>>24;
 $33 = ((($vscd)) + 4|0);
 ;HEAP8[$33>>0]=0|0;HEAP8[$33+1>>0]=0|0;HEAP8[$33+2>>0]=0|0;HEAP8[$33+3>>0]=0|0;
 HEAP8[$vscd>>0]=0&255;HEAP8[$vscd+1>>0]=(0>>8)&255;HEAP8[$vscd+2>>0]=(0>>16)&255;HEAP8[$vscd+3>>0]=0>>24;
 $34 = ((($ret)) + 4|0);
 ;HEAP8[$34>>0]=0|0;HEAP8[$34+1>>0]=0|0;HEAP8[$34+2>>0]=0|0;HEAP8[$34+3>>0]=0|0;
 HEAP8[$ret>>0]=0&255;HEAP8[$ret+1>>0]=(0>>8)&255;HEAP8[$ret+2>>0]=(0>>16)&255;HEAP8[$ret+3>>0]=0>>24;
 $35 = $opnd1;
 $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
 $37 = ($36|0)==(7);
 if ($37) {
  $38 = $opnd1;
  $39 = ((($38)) + 4|0);
  $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8)|(HEAPU8[$39+2>>0]<<16)|(HEAPU8[$39+3>>0]<<24);
  $41 = ((($40)) + 45|0);
  $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
  $43 = ($42|0)!=(0|0);
  if ($43) {
   $44 = $opnd1;
   $45 = ((($44)) + 4|0);
   $46 = HEAPU8[$45>>0]|(HEAPU8[$45+1>>0]<<8)|(HEAPU8[$45+2>>0]<<16)|(HEAPU8[$45+3>>0]<<24);
   $47 = ((($46)) + 45|0);
   $48 = HEAPU8[$47>>0]|(HEAPU8[$47+1>>0]<<8)|(HEAPU8[$47+2>>0]<<16)|(HEAPU8[$47+3>>0]<<24);
   $49 = ((($48)) + 16|0);
   $50 = HEAPU8[$49>>0]|(HEAPU8[$49+1>>0]<<8)|(HEAPU8[$49+2>>0]<<16)|(HEAPU8[$49+3>>0]<<24);
   $51 = ($50|0)!=(0|0);
   if ($51) {
    $52 = $opnd1;
    (__internal_object_to_public_value($52,$vfst)|0);
    $53 = $opnd2;
    (__internal_object_to_public_value($53,$vscd)|0);
    $54 = $opnd1;
    $55 = ((($54)) + 4|0);
    $56 = HEAPU8[$55>>0]|(HEAPU8[$55+1>>0]<<8)|(HEAPU8[$55+2>>0]<<16)|(HEAPU8[$55+3>>0]<<24);
    $57 = ((($56)) + 45|0);
    $58 = HEAPU8[$57>>0]|(HEAPU8[$57+1>>0]<<8)|(HEAPU8[$57+2>>0]<<16)|(HEAPU8[$57+3>>0]<<24);
    $59 = ((($58)) + 16|0);
    $60 = HEAPU8[$59>>0]|(HEAPU8[$59+1>>0]<<8)|(HEAPU8[$59+2>>0]<<16)|(HEAPU8[$59+3>>0]<<24);
    $61 = $0;
    $62 = $1;
    $63 = (FUNCTION_TABLE_iiiiii[$60 & 0]($61,$62,$vfst,$vscd,$ret)|0);
    $result = $63;
    $64 = $retval;
    (__public_value_to_internal_object($ret,$64)|0);
    $353 = $result;
    STACKTOP = sp;return ($353|0);
   }
  }
 }
 $65 = $opnd2;
 $66 = HEAPU8[$65>>0]|(HEAPU8[$65+1>>0]<<8)|(HEAPU8[$65+2>>0]<<16)|(HEAPU8[$65+3>>0]<<24);
 $67 = ($66|0)==(7);
 if ($67) {
  $68 = $opnd2;
  $69 = ((($68)) + 4|0);
  $70 = HEAPU8[$69>>0]|(HEAPU8[$69+1>>0]<<8)|(HEAPU8[$69+2>>0]<<16)|(HEAPU8[$69+3>>0]<<24);
  $71 = ((($70)) + 45|0);
  $72 = HEAPU8[$71>>0]|(HEAPU8[$71+1>>0]<<8)|(HEAPU8[$71+2>>0]<<16)|(HEAPU8[$71+3>>0]<<24);
  $73 = ($72|0)!=(0|0);
  if ($73) {
   $74 = $opnd2;
   $75 = ((($74)) + 4|0);
   $76 = HEAPU8[$75>>0]|(HEAPU8[$75+1>>0]<<8)|(HEAPU8[$75+2>>0]<<16)|(HEAPU8[$75+3>>0]<<24);
   $77 = ((($76)) + 45|0);
   $78 = HEAPU8[$77>>0]|(HEAPU8[$77+1>>0]<<8)|(HEAPU8[$77+2>>0]<<16)|(HEAPU8[$77+3>>0]<<24);
   $79 = ((($78)) + 16|0);
   $80 = HEAPU8[$79>>0]|(HEAPU8[$79+1>>0]<<8)|(HEAPU8[$79+2>>0]<<16)|(HEAPU8[$79+3>>0]<<24);
   $81 = ($80|0)!=(0|0);
   if ($81) {
    $82 = $opnd1;
    (__internal_object_to_public_value($82,$vfst)|0);
    $83 = $opnd2;
    (__internal_object_to_public_value($83,$vscd)|0);
    $84 = $opnd2;
    $85 = ((($84)) + 4|0);
    $86 = HEAPU8[$85>>0]|(HEAPU8[$85+1>>0]<<8)|(HEAPU8[$85+2>>0]<<16)|(HEAPU8[$85+3>>0]<<24);
    $87 = ((($86)) + 45|0);
    $88 = HEAPU8[$87>>0]|(HEAPU8[$87+1>>0]<<8)|(HEAPU8[$87+2>>0]<<16)|(HEAPU8[$87+3>>0]<<24);
    $89 = ((($88)) + 16|0);
    $90 = HEAPU8[$89>>0]|(HEAPU8[$89+1>>0]<<8)|(HEAPU8[$89+2>>0]<<16)|(HEAPU8[$89+3>>0]<<24);
    $91 = $0;
    $92 = $1;
    $93 = (FUNCTION_TABLE_iiiiii[$90 & 0]($91,$92,$vfst,$vscd,$ret)|0);
    $result = $93;
    $94 = $retval;
    (__public_value_to_internal_object($ret,$94)|0);
    $353 = $result;
    STACKTOP = sp;return ($353|0);
   }
  }
 }
 $95 = $1;
 $96 = HEAP32[$95>>2]|0;
 $tpptr1 = $96;
 $97 = $tpptr1;
 $98 = HEAPU8[$97>>0]|(HEAPU8[$97+1>>0]<<8)|(HEAPU8[$97+2>>0]<<16)|(HEAPU8[$97+3>>0]<<24);
 $opnd12 = $98;
 $99 = $tpptr1;
 $100 = ((($99)) + 4|0);
 $101 = HEAPU8[$100>>0]|(HEAPU8[$100+1>>0]<<8)|(HEAPU8[$100+2>>0]<<16)|(HEAPU8[$100+3>>0]<<24);
 $opnd23 = $101;
 $102 = $tpptr1;
 $103 = ((($102)) + 8|0);
 $104 = HEAPU8[$103>>0]|(HEAPU8[$103+1>>0]<<8)|(HEAPU8[$103+2>>0]<<16)|(HEAPU8[$103+3>>0]<<24);
 $val = $104;
 $105 = $opnd12;
 $106 = HEAPU8[$105>>0]|(HEAPU8[$105+1>>0]<<8)|(HEAPU8[$105+2>>0]<<16)|(HEAPU8[$105+3>>0]<<24);
 $107 = ($106|0)==(2);
 if ($107) {
  $118 = 1;
 } else {
  $108 = $opnd12;
  $109 = HEAPU8[$108>>0]|(HEAPU8[$108+1>>0]<<8)|(HEAPU8[$108+2>>0]<<16)|(HEAPU8[$108+3>>0]<<24);
  $110 = ($109|0)==(9);
  if ($110) {
   $111 = $opnd12;
   $112 = ((($111)) + 4|0);
   $113 = HEAPU8[$112>>0]|(HEAPU8[$112+1>>0]<<8)|(HEAPU8[$112+2>>0]<<16)|(HEAPU8[$112+3>>0]<<24);
   $114 = ((($113)) + 4|0);
   $115 = HEAPU8[$114>>0]|(HEAPU8[$114+1>>0]<<8)|(HEAPU8[$114+2>>0]<<16)|(HEAPU8[$114+3>>0]<<24);
   $116 = HEAPU8[$115>>0]|(HEAPU8[$115+1>>0]<<8)|(HEAPU8[$115+2>>0]<<16)|(HEAPU8[$115+3>>0]<<24);
   $117 = ($116|0)==(2);
   $118 = $117;
  } else {
   $118 = 0;
  }
 }
 $119 = $118 ? 2 : 3;
 HEAP8[$opndv1>>0]=$119&255;HEAP8[$opndv1+1>>0]=($119>>8)&255;HEAP8[$opndv1+2>>0]=($119>>16)&255;HEAP8[$opndv1+3>>0]=$119>>24;
 $120 = ((($opndv1)) + 4|0);
 $121 = $opnd12;
 $122 = HEAPU8[$121>>0]|(HEAPU8[$121+1>>0]<<8)|(HEAPU8[$121+2>>0]<<16)|(HEAPU8[$121+3>>0]<<24);
 $123 = ($122|0)==(9);
 $124 = $opnd12;
 $125 = ((($124)) + 4|0);
 if ($123) {
  $126 = HEAPU8[$125>>0]|(HEAPU8[$125+1>>0]<<8)|(HEAPU8[$125+2>>0]<<16)|(HEAPU8[$125+3>>0]<<24);
  $127 = ((($126)) + 4|0);
  $128 = HEAPU8[$127>>0]|(HEAPU8[$127+1>>0]<<8)|(HEAPU8[$127+2>>0]<<16)|(HEAPU8[$127+3>>0]<<24);
  $129 = ((($128)) + 4|0);
  ;HEAP8[$120>>0]=HEAP8[$129>>0]|0;HEAP8[$120+1>>0]=HEAP8[$129+1>>0]|0;HEAP8[$120+2>>0]=HEAP8[$129+2>>0]|0;HEAP8[$120+3>>0]=HEAP8[$129+3>>0]|0;
 } else {
  ;HEAP8[$120>>0]=HEAP8[$125>>0]|0;HEAP8[$120+1>>0]=HEAP8[$125+1>>0]|0;HEAP8[$120+2>>0]=HEAP8[$125+2>>0]|0;HEAP8[$120+3>>0]=HEAP8[$125+3>>0]|0;
 }
 $130 = $opnd23;
 $131 = HEAPU8[$130>>0]|(HEAPU8[$130+1>>0]<<8)|(HEAPU8[$130+2>>0]<<16)|(HEAPU8[$130+3>>0]<<24);
 $132 = ($131|0)==(2);
 if ($132) {
  $143 = 1;
 } else {
  $133 = $opnd23;
  $134 = HEAPU8[$133>>0]|(HEAPU8[$133+1>>0]<<8)|(HEAPU8[$133+2>>0]<<16)|(HEAPU8[$133+3>>0]<<24);
  $135 = ($134|0)==(9);
  if ($135) {
   $136 = $opnd23;
   $137 = ((($136)) + 4|0);
   $138 = HEAPU8[$137>>0]|(HEAPU8[$137+1>>0]<<8)|(HEAPU8[$137+2>>0]<<16)|(HEAPU8[$137+3>>0]<<24);
   $139 = ((($138)) + 4|0);
   $140 = HEAPU8[$139>>0]|(HEAPU8[$139+1>>0]<<8)|(HEAPU8[$139+2>>0]<<16)|(HEAPU8[$139+3>>0]<<24);
   $141 = HEAPU8[$140>>0]|(HEAPU8[$140+1>>0]<<8)|(HEAPU8[$140+2>>0]<<16)|(HEAPU8[$140+3>>0]<<24);
   $142 = ($141|0)==(2);
   $143 = $142;
  } else {
   $143 = 0;
  }
 }
 $144 = $143 ? 2 : 3;
 HEAP8[$opndv2>>0]=$144&255;HEAP8[$opndv2+1>>0]=($144>>8)&255;HEAP8[$opndv2+2>>0]=($144>>16)&255;HEAP8[$opndv2+3>>0]=$144>>24;
 $145 = ((($opndv2)) + 4|0);
 $146 = $opnd23;
 $147 = HEAPU8[$146>>0]|(HEAPU8[$146+1>>0]<<8)|(HEAPU8[$146+2>>0]<<16)|(HEAPU8[$146+3>>0]<<24);
 $148 = ($147|0)==(9);
 $149 = $opnd23;
 $150 = ((($149)) + 4|0);
 if ($148) {
  $151 = HEAPU8[$150>>0]|(HEAPU8[$150+1>>0]<<8)|(HEAPU8[$150+2>>0]<<16)|(HEAPU8[$150+3>>0]<<24);
  $152 = ((($151)) + 4|0);
  $153 = HEAPU8[$152>>0]|(HEAPU8[$152+1>>0]<<8)|(HEAPU8[$152+2>>0]<<16)|(HEAPU8[$152+3>>0]<<24);
  $154 = ((($153)) + 4|0);
  ;HEAP8[$145>>0]=HEAP8[$154>>0]|0;HEAP8[$145+1>>0]=HEAP8[$154+1>>0]|0;HEAP8[$145+2>>0]=HEAP8[$154+2>>0]|0;HEAP8[$145+3>>0]=HEAP8[$154+3>>0]|0;
 } else {
  ;HEAP8[$145>>0]=HEAP8[$150>>0]|0;HEAP8[$145+1>>0]=HEAP8[$150+1>>0]|0;HEAP8[$145+2>>0]=HEAP8[$150+2>>0]|0;HEAP8[$145+3>>0]=HEAP8[$150+3>>0]|0;
 }
 $155 = HEAPU8[$opndv2>>0]|(HEAPU8[$opndv2+1>>0]<<8)|(HEAPU8[$opndv2+2>>0]<<16)|(HEAPU8[$opndv2+3>>0]<<24);
 $156 = ($155|0)==(2);
 if ($156) {
  $157 = ((($opndv2)) + 4|0);
  $158 = HEAPU8[$157>>0]|(HEAPU8[$157+1>>0]<<8)|(HEAPU8[$157+2>>0]<<16)|(HEAPU8[$157+3>>0]<<24);
  $159 = ($158|0)==(0);
  if (!($159)) {
   label = 29;
  }
 } else {
  label = 29;
 }
 do {
  if ((label|0) == 29) {
   $160 = HEAPU8[$opndv2>>0]|(HEAPU8[$opndv2+1>>0]<<8)|(HEAPU8[$opndv2+2>>0]<<16)|(HEAPU8[$opndv2+3>>0]<<24);
   $161 = ($160|0)==(3);
   if ($161) {
    $162 = ((($opndv2)) + 4|0);
    HEAP8[tempDoublePtr>>0]=HEAP8[$162>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$162+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$162+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$162+3>>0];$163 = +HEAPF32[tempDoublePtr>>2];
    $164 = $163 == 0.0;
    if ($164) {
     break;
    }
   }
   $221 = $1;
   $222 = HEAP32[$221>>2]|0;
   $tpptr7 = $222;
   $223 = $tpptr7;
   $224 = HEAPU8[$223>>0]|(HEAPU8[$223+1>>0]<<8)|(HEAPU8[$223+2>>0]<<16)|(HEAPU8[$223+3>>0]<<24);
   $opnd18 = $224;
   $225 = $tpptr7;
   $226 = ((($225)) + 4|0);
   $227 = HEAPU8[$226>>0]|(HEAPU8[$226+1>>0]<<8)|(HEAPU8[$226+2>>0]<<16)|(HEAPU8[$226+3>>0]<<24);
   $opnd29 = $227;
   $228 = $tpptr7;
   $229 = ((($228)) + 8|0);
   $230 = HEAPU8[$229>>0]|(HEAPU8[$229+1>>0]<<8)|(HEAPU8[$229+2>>0]<<16)|(HEAPU8[$229+3>>0]<<24);
   $val10 = $230;
   $231 = $opnd18;
   $232 = HEAPU8[$231>>0]|(HEAPU8[$231+1>>0]<<8)|(HEAPU8[$231+2>>0]<<16)|(HEAPU8[$231+3>>0]<<24);
   $233 = ($232|0)==(2);
   if ($233) {
    $244 = 1;
   } else {
    $234 = $opnd18;
    $235 = HEAPU8[$234>>0]|(HEAPU8[$234+1>>0]<<8)|(HEAPU8[$234+2>>0]<<16)|(HEAPU8[$234+3>>0]<<24);
    $236 = ($235|0)==(9);
    if ($236) {
     $237 = $opnd18;
     $238 = ((($237)) + 4|0);
     $239 = HEAPU8[$238>>0]|(HEAPU8[$238+1>>0]<<8)|(HEAPU8[$238+2>>0]<<16)|(HEAPU8[$238+3>>0]<<24);
     $240 = ((($239)) + 4|0);
     $241 = HEAPU8[$240>>0]|(HEAPU8[$240+1>>0]<<8)|(HEAPU8[$240+2>>0]<<16)|(HEAPU8[$240+3>>0]<<24);
     $242 = HEAPU8[$241>>0]|(HEAPU8[$241+1>>0]<<8)|(HEAPU8[$241+2>>0]<<16)|(HEAPU8[$241+3>>0]<<24);
     $243 = ($242|0)==(2);
     $244 = $243;
    } else {
     $244 = 0;
    }
   }
   $245 = $244 ? 2 : 3;
   HEAP8[$opndv15>>0]=$245&255;HEAP8[$opndv15+1>>0]=($245>>8)&255;HEAP8[$opndv15+2>>0]=($245>>16)&255;HEAP8[$opndv15+3>>0]=$245>>24;
   $246 = ((($opndv15)) + 4|0);
   $247 = $opnd18;
   $248 = HEAPU8[$247>>0]|(HEAPU8[$247+1>>0]<<8)|(HEAPU8[$247+2>>0]<<16)|(HEAPU8[$247+3>>0]<<24);
   $249 = ($248|0)==(9);
   $250 = $opnd18;
   $251 = ((($250)) + 4|0);
   if ($249) {
    $252 = HEAPU8[$251>>0]|(HEAPU8[$251+1>>0]<<8)|(HEAPU8[$251+2>>0]<<16)|(HEAPU8[$251+3>>0]<<24);
    $253 = ((($252)) + 4|0);
    $254 = HEAPU8[$253>>0]|(HEAPU8[$253+1>>0]<<8)|(HEAPU8[$253+2>>0]<<16)|(HEAPU8[$253+3>>0]<<24);
    $255 = ((($254)) + 4|0);
    ;HEAP8[$246>>0]=HEAP8[$255>>0]|0;HEAP8[$246+1>>0]=HEAP8[$255+1>>0]|0;HEAP8[$246+2>>0]=HEAP8[$255+2>>0]|0;HEAP8[$246+3>>0]=HEAP8[$255+3>>0]|0;
   } else {
    ;HEAP8[$246>>0]=HEAP8[$251>>0]|0;HEAP8[$246+1>>0]=HEAP8[$251+1>>0]|0;HEAP8[$246+2>>0]=HEAP8[$251+2>>0]|0;HEAP8[$246+3>>0]=HEAP8[$251+3>>0]|0;
   }
   $256 = $opnd29;
   $257 = HEAPU8[$256>>0]|(HEAPU8[$256+1>>0]<<8)|(HEAPU8[$256+2>>0]<<16)|(HEAPU8[$256+3>>0]<<24);
   $258 = ($257|0)==(2);
   if ($258) {
    $269 = 1;
   } else {
    $259 = $opnd29;
    $260 = HEAPU8[$259>>0]|(HEAPU8[$259+1>>0]<<8)|(HEAPU8[$259+2>>0]<<16)|(HEAPU8[$259+3>>0]<<24);
    $261 = ($260|0)==(9);
    if ($261) {
     $262 = $opnd29;
     $263 = ((($262)) + 4|0);
     $264 = HEAPU8[$263>>0]|(HEAPU8[$263+1>>0]<<8)|(HEAPU8[$263+2>>0]<<16)|(HEAPU8[$263+3>>0]<<24);
     $265 = ((($264)) + 4|0);
     $266 = HEAPU8[$265>>0]|(HEAPU8[$265+1>>0]<<8)|(HEAPU8[$265+2>>0]<<16)|(HEAPU8[$265+3>>0]<<24);
     $267 = HEAPU8[$266>>0]|(HEAPU8[$266+1>>0]<<8)|(HEAPU8[$266+2>>0]<<16)|(HEAPU8[$266+3>>0]<<24);
     $268 = ($267|0)==(2);
     $269 = $268;
    } else {
     $269 = 0;
    }
   }
   $270 = $269 ? 2 : 3;
   HEAP8[$opndv26>>0]=$270&255;HEAP8[$opndv26+1>>0]=($270>>8)&255;HEAP8[$opndv26+2>>0]=($270>>16)&255;HEAP8[$opndv26+3>>0]=$270>>24;
   $271 = ((($opndv26)) + 4|0);
   $272 = $opnd29;
   $273 = HEAPU8[$272>>0]|(HEAPU8[$272+1>>0]<<8)|(HEAPU8[$272+2>>0]<<16)|(HEAPU8[$272+3>>0]<<24);
   $274 = ($273|0)==(9);
   $275 = $opnd29;
   $276 = ((($275)) + 4|0);
   if ($274) {
    $277 = HEAPU8[$276>>0]|(HEAPU8[$276+1>>0]<<8)|(HEAPU8[$276+2>>0]<<16)|(HEAPU8[$276+3>>0]<<24);
    $278 = ((($277)) + 4|0);
    $279 = HEAPU8[$278>>0]|(HEAPU8[$278+1>>0]<<8)|(HEAPU8[$278+2>>0]<<16)|(HEAPU8[$278+3>>0]<<24);
    $280 = ((($279)) + 4|0);
    ;HEAP8[$271>>0]=HEAP8[$280>>0]|0;HEAP8[$271+1>>0]=HEAP8[$280+1>>0]|0;HEAP8[$271+2>>0]=HEAP8[$280+2>>0]|0;HEAP8[$271+3>>0]=HEAP8[$280+3>>0]|0;
   } else {
    ;HEAP8[$271>>0]=HEAP8[$276>>0]|0;HEAP8[$271+1>>0]=HEAP8[$276+1>>0]|0;HEAP8[$271+2>>0]=HEAP8[$276+2>>0]|0;HEAP8[$271+3>>0]=HEAP8[$276+3>>0]|0;
   }
   $281 = HEAPU8[$opndv15>>0]|(HEAPU8[$opndv15+1>>0]<<8)|(HEAPU8[$opndv15+2>>0]<<16)|(HEAPU8[$opndv15+3>>0]<<24);
   $282 = ($281|0)==(2);
   do {
    if ($282) {
     $283 = HEAPU8[$opndv26>>0]|(HEAPU8[$opndv26+1>>0]<<8)|(HEAPU8[$opndv26+2>>0]<<16)|(HEAPU8[$opndv26+3>>0]<<24);
     $284 = ($283|0)==(2);
     if ($284) {
      $285 = ((($opndv15)) + 4|0);
      $286 = HEAPU8[$285>>0]|(HEAPU8[$285+1>>0]<<8)|(HEAPU8[$285+2>>0]<<16)|(HEAPU8[$285+3>>0]<<24);
      $287 = ((($opndv26)) + 4|0);
      $288 = HEAPU8[$287>>0]|(HEAPU8[$287+1>>0]<<8)|(HEAPU8[$287+2>>0]<<16)|(HEAPU8[$287+3>>0]<<24);
      $289 = (($286|0) / ($288|0))&-1;
      $290 = (+($289|0));
      $291 = ((($opndv15)) + 4|0);
      $292 = HEAPU8[$291>>0]|(HEAPU8[$291+1>>0]<<8)|(HEAPU8[$291+2>>0]<<16)|(HEAPU8[$291+3>>0]<<24);
      $293 = (+($292|0));
      $294 = ((($opndv26)) + 4|0);
      $295 = HEAPU8[$294>>0]|(HEAPU8[$294+1>>0]<<8)|(HEAPU8[$294+2>>0]<<16)|(HEAPU8[$294+3>>0]<<24);
      $296 = (+($295|0));
      $297 = $293 / $296;
      $298 = $290 == $297;
      $299 = $val10;
      if ($298) {
       HEAP8[$299>>0]=2&255;HEAP8[$299+1>>0]=(2>>8)&255;HEAP8[$299+2>>0]=(2>>16)&255;HEAP8[$299+3>>0]=2>>24;
       $300 = ((($opndv15)) + 4|0);
       $301 = HEAPU8[$300>>0]|(HEAPU8[$300+1>>0]<<8)|(HEAPU8[$300+2>>0]<<16)|(HEAPU8[$300+3>>0]<<24);
       $302 = ((($opndv26)) + 4|0);
       $303 = HEAPU8[$302>>0]|(HEAPU8[$302+1>>0]<<8)|(HEAPU8[$302+2>>0]<<16)|(HEAPU8[$302+3>>0]<<24);
       $304 = (($301|0) / ($303|0))&-1;
       $305 = $val10;
       $306 = ((($305)) + 4|0);
       HEAP8[$306>>0]=$304&255;HEAP8[$306+1>>0]=($304>>8)&255;HEAP8[$306+2>>0]=($304>>16)&255;HEAP8[$306+3>>0]=$304>>24;
       break;
      } else {
       HEAP8[$299>>0]=3&255;HEAP8[$299+1>>0]=(3>>8)&255;HEAP8[$299+2>>0]=(3>>16)&255;HEAP8[$299+3>>0]=3>>24;
       $307 = ((($opndv15)) + 4|0);
       $308 = HEAPU8[$307>>0]|(HEAPU8[$307+1>>0]<<8)|(HEAPU8[$307+2>>0]<<16)|(HEAPU8[$307+3>>0]<<24);
       $309 = (+($308|0));
       $310 = ((($opndv26)) + 4|0);
       $311 = HEAPU8[$310>>0]|(HEAPU8[$310+1>>0]<<8)|(HEAPU8[$310+2>>0]<<16)|(HEAPU8[$310+3>>0]<<24);
       $312 = (+($311|0));
       $313 = $309 / $312;
       $314 = $val10;
       $315 = ((($314)) + 4|0);
       HEAPF32[tempDoublePtr>>2]=$313;HEAP8[$315>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$315+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$315+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$315+3>>0]=HEAP8[tempDoublePtr+3>>0];
       break;
      }
     } else {
      label = 61;
     }
    } else {
     label = 61;
    }
   } while(0);
   if ((label|0) == 61) {
    $316 = $val10;
    HEAP8[$316>>0]=3&255;HEAP8[$316+1>>0]=(3>>8)&255;HEAP8[$316+2>>0]=(3>>16)&255;HEAP8[$316+3>>0]=3>>24;
    $317 = HEAPU8[$opndv15>>0]|(HEAPU8[$opndv15+1>>0]<<8)|(HEAPU8[$opndv15+2>>0]<<16)|(HEAPU8[$opndv15+3>>0]<<24);
    $318 = ($317|0)==(2);
    $319 = ((($opndv15)) + 4|0);
    $320 = HEAPU8[$319>>0]|(HEAPU8[$319+1>>0]<<8)|(HEAPU8[$319+2>>0]<<16)|(HEAPU8[$319+3>>0]<<24);
    $321 = (+($320|0));
    HEAP8[tempDoublePtr>>0]=HEAP8[$319>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$319+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$319+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$319+3>>0];$322 = +HEAPF32[tempDoublePtr>>2];
    $323 = $318 ? $321 : $322;
    $324 = HEAPU8[$opndv26>>0]|(HEAPU8[$opndv26+1>>0]<<8)|(HEAPU8[$opndv26+2>>0]<<16)|(HEAPU8[$opndv26+3>>0]<<24);
    $325 = ($324|0)==(2);
    $326 = ((($opndv26)) + 4|0);
    $327 = HEAPU8[$326>>0]|(HEAPU8[$326+1>>0]<<8)|(HEAPU8[$326+2>>0]<<16)|(HEAPU8[$326+3>>0]<<24);
    $328 = (+($327|0));
    HEAP8[tempDoublePtr>>0]=HEAP8[$326>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$326+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$326+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$326+3>>0];$329 = +HEAPF32[tempDoublePtr>>2];
    $330 = $325 ? $328 : $329;
    $331 = $323 / $330;
    $332 = $val10;
    $333 = ((($332)) + 4|0);
    HEAPF32[tempDoublePtr>>2]=$331;HEAP8[$333>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$333+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$333+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$333+3>>0]=HEAP8[tempDoublePtr+3>>0];
   }
   $334 = $val10;
   $335 = HEAPU8[$334>>0]|(HEAPU8[$334+1>>0]<<8)|(HEAPU8[$334+2>>0]<<16)|(HEAPU8[$334+3>>0]<<24);
   $336 = ($335|0)==(3);
   if (!($336)) {
    $353 = $result;
    STACKTOP = sp;return ($353|0);
   }
   $337 = $val10;
   $338 = ((($337)) + 4|0);
   HEAP8[tempDoublePtr>>0]=HEAP8[$338>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$338+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$338+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$338+3>>0];$339 = +HEAPF32[tempDoublePtr>>2];
   $340 = (~~(($339)));
   $341 = (+($340|0));
   $342 = $val10;
   $343 = ((($342)) + 4|0);
   HEAP8[tempDoublePtr>>0]=HEAP8[$343>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$343+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$343+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$343+3>>0];$344 = +HEAPF32[tempDoublePtr>>2];
   $345 = $341 == $344;
   if (!($345)) {
    $353 = $result;
    STACKTOP = sp;return ($353|0);
   }
   $346 = $val10;
   HEAP8[$346>>0]=2&255;HEAP8[$346+1>>0]=(2>>8)&255;HEAP8[$346+2>>0]=(2>>16)&255;HEAP8[$346+3>>0]=2>>24;
   $347 = $val10;
   $348 = ((($347)) + 4|0);
   HEAP8[tempDoublePtr>>0]=HEAP8[$348>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$348+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$348+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$348+3>>0];$349 = +HEAPF32[tempDoublePtr>>2];
   $350 = (~~(($349)));
   $351 = $val10;
   $352 = ((($351)) + 4|0);
   HEAP8[$352>>0]=$350&255;HEAP8[$352+1>>0]=($350>>8)&255;HEAP8[$352+2>>0]=($350>>16)&255;HEAP8[$352+3>>0]=$350>>24;
   $353 = $result;
   STACKTOP = sp;return ($353|0);
  }
 } while(0);
 $165 = HEAPU8[$opndv1>>0]|(HEAPU8[$opndv1+1>>0]<<8)|(HEAPU8[$opndv1+2>>0]<<16)|(HEAPU8[$opndv1+3>>0]<<24);
 $166 = ($165|0)==(2);
 if ($166) {
  $167 = ((($opndv1)) + 4|0);
  $168 = HEAPU8[$167>>0]|(HEAPU8[$167+1>>0]<<8)|(HEAPU8[$167+2>>0]<<16)|(HEAPU8[$167+3>>0]<<24);
  $169 = ($168|0)==(0);
  if ($169) {
   label = 35;
  } else {
   label = 33;
  }
 } else {
  label = 33;
 }
 do {
  if ((label|0) == 33) {
   $170 = HEAPU8[$opndv1>>0]|(HEAPU8[$opndv1+1>>0]<<8)|(HEAPU8[$opndv1+2>>0]<<16)|(HEAPU8[$opndv1+3>>0]<<24);
   $171 = ($170|0)==(3);
   if ($171) {
    $172 = ((($opndv1)) + 4|0);
    HEAP8[tempDoublePtr>>0]=HEAP8[$172>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$172+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$172+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$172+3>>0];$173 = +HEAPF32[tempDoublePtr>>2];
    $174 = $173 == 0.0;
    if ($174) {
     label = 35;
     break;
    }
   }
   $179 = $val;
   HEAP8[$179>>0]=3&255;HEAP8[$179+1>>0]=(3>>8)&255;HEAP8[$179+2>>0]=(3>>16)&255;HEAP8[$179+3>>0]=3>>24;
   HEAP8[$__u4>>0]=2139095040&255;HEAP8[$__u4+1>>0]=(2139095040>>8)&255;HEAP8[$__u4+2>>0]=(2139095040>>16)&255;HEAP8[$__u4+3>>0]=2139095040>>24;
   HEAP8[tempDoublePtr>>0]=HEAP8[$__u4>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$__u4+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$__u4+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$__u4+3>>0];$180 = +HEAPF32[tempDoublePtr>>2];
   $181 = $val;
   $182 = ((($181)) + 4|0);
   HEAPF32[tempDoublePtr>>2]=$180;HEAP8[$182>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$182+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$182+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$182+3>>0]=HEAP8[tempDoublePtr+3>>0];
  }
 } while(0);
 if ((label|0) == 35) {
  $175 = $val;
  HEAP8[$175>>0]=3&255;HEAP8[$175+1>>0]=(3>>8)&255;HEAP8[$175+2>>0]=(3>>16)&255;HEAP8[$175+3>>0]=3>>24;
  HEAP8[$__u>>0]=2143289344&255;HEAP8[$__u+1>>0]=(2143289344>>8)&255;HEAP8[$__u+2>>0]=(2143289344>>16)&255;HEAP8[$__u+3>>0]=2143289344>>24;
  HEAP8[tempDoublePtr>>0]=HEAP8[$__u>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$__u+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$__u+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$__u+3>>0];$176 = +HEAPF32[tempDoublePtr>>2];
  $177 = $val;
  $178 = ((($177)) + 4|0);
  HEAPF32[tempDoublePtr>>2]=$176;HEAP8[$178>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$178+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$178+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$178+3>>0]=HEAP8[tempDoublePtr+3>>0];
 }
 $183 = $1;
 $184 = ($183|0)!=(0|0);
 if ($184) {
  $185 = $1;
  $186 = HEAP32[$185>>2]|0;
  $187 = ($186|0)!=(0|0);
  if ($187) {
   $188 = $1;
   $189 = HEAP32[$188>>2]|0;
   $190 = HEAPU8[$189>>0]|(HEAPU8[$189+1>>0]<<8)|(HEAPU8[$189+2>>0]<<16)|(HEAPU8[$189+3>>0]<<24);
   $191 = ($190|0)!=(0|0);
   if ($191) {
    $192 = $0;
    $193 = $0;
    $194 = ((($193)) + 67|0);
    $195 = HEAPU8[$194>>0]|(HEAPU8[$194+1>>0]<<8)|(HEAPU8[$194+2>>0]<<16)|(HEAPU8[$194+3>>0]<<24);
    $196 = (__set_current_error($192,49,$195)|0);
    $197 = ($196<<24>>24)!=(0);
    if (!($197)) {
     $353 = $result;
     STACKTOP = sp;return ($353|0);
    }
    $198 = $0;
    $199 = $1;
    $200 = HEAP32[$199>>2]|0;
    $201 = HEAPU8[$200>>0]|(HEAPU8[$200+1>>0]<<8)|(HEAPU8[$200+2>>0]<<16)|(HEAPU8[$200+3>>0]<<24);
    $202 = ((($201)) + 9|0);
    $203 = HEAPU8[$202>>0]|(HEAPU8[$202+1>>0]<<8)|(HEAPU8[$202+2>>0]<<16)|(HEAPU8[$202+3>>0]<<24);
    $204 = $1;
    $205 = HEAP32[$204>>2]|0;
    $206 = HEAPU8[$205>>0]|(HEAPU8[$205+1>>0]<<8)|(HEAPU8[$205+2>>0]<<16)|(HEAPU8[$205+3>>0]<<24);
    $207 = ((($206)) + 13|0);
    $208 = HEAPU8[$207>>0]|(HEAPU8[$207+1>>0]<<8);
    $209 = $1;
    $210 = HEAP32[$209>>2]|0;
    $211 = HEAPU8[$210>>0]|(HEAPU8[$210+1>>0]<<8)|(HEAPU8[$210+2>>0]<<16)|(HEAPU8[$210+3>>0]<<24);
    $212 = ((($211)) + 15|0);
    $213 = HEAPU8[$212>>0]|(HEAPU8[$212+1>>0]<<8);
    __set_error_pos($198,$203,$208,$213);
    $353 = $result;
    STACKTOP = sp;return ($353|0);
   }
  }
 }
 $214 = $0;
 $215 = $0;
 $216 = ((($215)) + 67|0);
 $217 = HEAPU8[$216>>0]|(HEAPU8[$216+1>>0]<<8)|(HEAPU8[$216+2>>0]<<16)|(HEAPU8[$216+3>>0]<<24);
 $218 = (__set_current_error($214,49,$217)|0);
 $219 = ($218<<24>>24)!=(0);
 if (!($219)) {
  $353 = $result;
  STACKTOP = sp;return ($353|0);
 }
 $220 = $0;
 __set_error_pos($220,0,0,0);
 $353 = $result;
 STACKTOP = sp;return ($353|0);
}
function __core_mod($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0.0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0.0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0.0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0.0, $86 = 0, $87 = 0, $88 = 0.0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0.0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__u = 0, $__u1 = 0, $opnd1 = 0, $opnd15 = 0, $opnd2 = 0, $opnd26 = 0, $opndv1 = 0, $opndv12 = 0, $opndv2 = 0, $opndv23 = 0, $or$cond = 0, $result = 0, $tpptr = 0, $tpptr4 = 0, $val = 0, $val7 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $opndv1 = sp + 105|0;
 $opndv2 = sp + 88|0;
 $__u = sp + 84|0;
 $__u1 = sp + 80|0;
 $opndv12 = sp + 61|0;
 $opndv23 = sp + 44|0;
 $0 = $s;
 $1 = $l;
 $result = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),15089,(5114|0));
  // unreachable;
 }
 $6 = $1;
 $7 = HEAP32[$6>>2]|0;
 $tpptr = $7;
 $8 = $tpptr;
 $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
 $opnd1 = $9;
 $10 = $tpptr;
 $11 = ((($10)) + 4|0);
 $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
 $opnd2 = $12;
 $13 = $tpptr;
 $14 = ((($13)) + 8|0);
 $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
 $val = $15;
 $16 = $opnd1;
 $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
 $18 = ($17|0)==(2);
 if ($18) {
  $29 = 1;
 } else {
  $19 = $opnd1;
  $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8)|(HEAPU8[$19+2>>0]<<16)|(HEAPU8[$19+3>>0]<<24);
  $21 = ($20|0)==(9);
  if ($21) {
   $22 = $opnd1;
   $23 = ((($22)) + 4|0);
   $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
   $25 = ((($24)) + 4|0);
   $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
   $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
   $28 = ($27|0)==(2);
   $29 = $28;
  } else {
   $29 = 0;
  }
 }
 $30 = $29 ? 2 : 3;
 HEAP8[$opndv1>>0]=$30&255;HEAP8[$opndv1+1>>0]=($30>>8)&255;HEAP8[$opndv1+2>>0]=($30>>16)&255;HEAP8[$opndv1+3>>0]=$30>>24;
 $31 = ((($opndv1)) + 4|0);
 $32 = $opnd1;
 $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
 $34 = ($33|0)==(9);
 $35 = $opnd1;
 $36 = ((($35)) + 4|0);
 if ($34) {
  $37 = HEAPU8[$36>>0]|(HEAPU8[$36+1>>0]<<8)|(HEAPU8[$36+2>>0]<<16)|(HEAPU8[$36+3>>0]<<24);
  $38 = ((($37)) + 4|0);
  $39 = HEAPU8[$38>>0]|(HEAPU8[$38+1>>0]<<8)|(HEAPU8[$38+2>>0]<<16)|(HEAPU8[$38+3>>0]<<24);
  $40 = ((($39)) + 4|0);
  ;HEAP8[$31>>0]=HEAP8[$40>>0]|0;HEAP8[$31+1>>0]=HEAP8[$40+1>>0]|0;HEAP8[$31+2>>0]=HEAP8[$40+2>>0]|0;HEAP8[$31+3>>0]=HEAP8[$40+3>>0]|0;
 } else {
  ;HEAP8[$31>>0]=HEAP8[$36>>0]|0;HEAP8[$31+1>>0]=HEAP8[$36+1>>0]|0;HEAP8[$31+2>>0]=HEAP8[$36+2>>0]|0;HEAP8[$31+3>>0]=HEAP8[$36+3>>0]|0;
 }
 $41 = $opnd2;
 $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
 $43 = ($42|0)==(2);
 if ($43) {
  $54 = 1;
 } else {
  $44 = $opnd2;
  $45 = HEAPU8[$44>>0]|(HEAPU8[$44+1>>0]<<8)|(HEAPU8[$44+2>>0]<<16)|(HEAPU8[$44+3>>0]<<24);
  $46 = ($45|0)==(9);
  if ($46) {
   $47 = $opnd2;
   $48 = ((($47)) + 4|0);
   $49 = HEAPU8[$48>>0]|(HEAPU8[$48+1>>0]<<8)|(HEAPU8[$48+2>>0]<<16)|(HEAPU8[$48+3>>0]<<24);
   $50 = ((($49)) + 4|0);
   $51 = HEAPU8[$50>>0]|(HEAPU8[$50+1>>0]<<8)|(HEAPU8[$50+2>>0]<<16)|(HEAPU8[$50+3>>0]<<24);
   $52 = HEAPU8[$51>>0]|(HEAPU8[$51+1>>0]<<8)|(HEAPU8[$51+2>>0]<<16)|(HEAPU8[$51+3>>0]<<24);
   $53 = ($52|0)==(2);
   $54 = $53;
  } else {
   $54 = 0;
  }
 }
 $55 = $54 ? 2 : 3;
 HEAP8[$opndv2>>0]=$55&255;HEAP8[$opndv2+1>>0]=($55>>8)&255;HEAP8[$opndv2+2>>0]=($55>>16)&255;HEAP8[$opndv2+3>>0]=$55>>24;
 $56 = ((($opndv2)) + 4|0);
 $57 = $opnd2;
 $58 = HEAPU8[$57>>0]|(HEAPU8[$57+1>>0]<<8)|(HEAPU8[$57+2>>0]<<16)|(HEAPU8[$57+3>>0]<<24);
 $59 = ($58|0)==(9);
 $60 = $opnd2;
 $61 = ((($60)) + 4|0);
 if ($59) {
  $62 = HEAPU8[$61>>0]|(HEAPU8[$61+1>>0]<<8)|(HEAPU8[$61+2>>0]<<16)|(HEAPU8[$61+3>>0]<<24);
  $63 = ((($62)) + 4|0);
  $64 = HEAPU8[$63>>0]|(HEAPU8[$63+1>>0]<<8)|(HEAPU8[$63+2>>0]<<16)|(HEAPU8[$63+3>>0]<<24);
  $65 = ((($64)) + 4|0);
  ;HEAP8[$56>>0]=HEAP8[$65>>0]|0;HEAP8[$56+1>>0]=HEAP8[$65+1>>0]|0;HEAP8[$56+2>>0]=HEAP8[$65+2>>0]|0;HEAP8[$56+3>>0]=HEAP8[$65+3>>0]|0;
 } else {
  ;HEAP8[$56>>0]=HEAP8[$61>>0]|0;HEAP8[$56+1>>0]=HEAP8[$61+1>>0]|0;HEAP8[$56+2>>0]=HEAP8[$61+2>>0]|0;HEAP8[$56+3>>0]=HEAP8[$61+3>>0]|0;
 }
 $66 = HEAPU8[$opndv2>>0]|(HEAPU8[$opndv2+1>>0]<<8)|(HEAPU8[$opndv2+2>>0]<<16)|(HEAPU8[$opndv2+3>>0]<<24);
 $67 = ($66|0)==(2);
 if ($67) {
  $68 = ((($opndv2)) + 4|0);
  $69 = HEAPU8[$68>>0]|(HEAPU8[$68+1>>0]<<8)|(HEAPU8[$68+2>>0]<<16)|(HEAPU8[$68+3>>0]<<24);
  $70 = ($69|0)==(0);
  if (!($70)) {
   label = 17;
  }
 } else {
  label = 17;
 }
 do {
  if ((label|0) == 17) {
   $71 = HEAPU8[$opndv2>>0]|(HEAPU8[$opndv2+1>>0]<<8)|(HEAPU8[$opndv2+2>>0]<<16)|(HEAPU8[$opndv2+3>>0]<<24);
   $72 = ($71|0)==(3);
   if ($72) {
    $73 = ((($opndv2)) + 4|0);
    HEAP8[tempDoublePtr>>0]=HEAP8[$73>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$73+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$73+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$73+3>>0];$74 = +HEAPF32[tempDoublePtr>>2];
    $75 = (~~(($74)));
    $76 = ($75|0)==(0);
    if ($76) {
     break;
    }
   }
   $133 = $1;
   $134 = HEAP32[$133>>2]|0;
   $tpptr4 = $134;
   $135 = $tpptr4;
   $136 = HEAPU8[$135>>0]|(HEAPU8[$135+1>>0]<<8)|(HEAPU8[$135+2>>0]<<16)|(HEAPU8[$135+3>>0]<<24);
   $opnd15 = $136;
   $137 = $tpptr4;
   $138 = ((($137)) + 4|0);
   $139 = HEAPU8[$138>>0]|(HEAPU8[$138+1>>0]<<8)|(HEAPU8[$138+2>>0]<<16)|(HEAPU8[$138+3>>0]<<24);
   $opnd26 = $139;
   $140 = $tpptr4;
   $141 = ((($140)) + 8|0);
   $142 = HEAPU8[$141>>0]|(HEAPU8[$141+1>>0]<<8)|(HEAPU8[$141+2>>0]<<16)|(HEAPU8[$141+3>>0]<<24);
   $val7 = $142;
   $143 = $opnd15;
   $144 = HEAPU8[$143>>0]|(HEAPU8[$143+1>>0]<<8)|(HEAPU8[$143+2>>0]<<16)|(HEAPU8[$143+3>>0]<<24);
   $145 = ($144|0)==(2);
   if ($145) {
    $156 = 1;
   } else {
    $146 = $opnd15;
    $147 = HEAPU8[$146>>0]|(HEAPU8[$146+1>>0]<<8)|(HEAPU8[$146+2>>0]<<16)|(HEAPU8[$146+3>>0]<<24);
    $148 = ($147|0)==(9);
    if ($148) {
     $149 = $opnd15;
     $150 = ((($149)) + 4|0);
     $151 = HEAPU8[$150>>0]|(HEAPU8[$150+1>>0]<<8)|(HEAPU8[$150+2>>0]<<16)|(HEAPU8[$150+3>>0]<<24);
     $152 = ((($151)) + 4|0);
     $153 = HEAPU8[$152>>0]|(HEAPU8[$152+1>>0]<<8)|(HEAPU8[$152+2>>0]<<16)|(HEAPU8[$152+3>>0]<<24);
     $154 = HEAPU8[$153>>0]|(HEAPU8[$153+1>>0]<<8)|(HEAPU8[$153+2>>0]<<16)|(HEAPU8[$153+3>>0]<<24);
     $155 = ($154|0)==(2);
     $156 = $155;
    } else {
     $156 = 0;
    }
   }
   $157 = $156 ? 2 : 3;
   HEAP8[$opndv12>>0]=$157&255;HEAP8[$opndv12+1>>0]=($157>>8)&255;HEAP8[$opndv12+2>>0]=($157>>16)&255;HEAP8[$opndv12+3>>0]=$157>>24;
   $158 = ((($opndv12)) + 4|0);
   $159 = $opnd15;
   $160 = HEAPU8[$159>>0]|(HEAPU8[$159+1>>0]<<8)|(HEAPU8[$159+2>>0]<<16)|(HEAPU8[$159+3>>0]<<24);
   $161 = ($160|0)==(9);
   $162 = $opnd15;
   $163 = ((($162)) + 4|0);
   if ($161) {
    $164 = HEAPU8[$163>>0]|(HEAPU8[$163+1>>0]<<8)|(HEAPU8[$163+2>>0]<<16)|(HEAPU8[$163+3>>0]<<24);
    $165 = ((($164)) + 4|0);
    $166 = HEAPU8[$165>>0]|(HEAPU8[$165+1>>0]<<8)|(HEAPU8[$165+2>>0]<<16)|(HEAPU8[$165+3>>0]<<24);
    $167 = ((($166)) + 4|0);
    ;HEAP8[$158>>0]=HEAP8[$167>>0]|0;HEAP8[$158+1>>0]=HEAP8[$167+1>>0]|0;HEAP8[$158+2>>0]=HEAP8[$167+2>>0]|0;HEAP8[$158+3>>0]=HEAP8[$167+3>>0]|0;
   } else {
    ;HEAP8[$158>>0]=HEAP8[$163>>0]|0;HEAP8[$158+1>>0]=HEAP8[$163+1>>0]|0;HEAP8[$158+2>>0]=HEAP8[$163+2>>0]|0;HEAP8[$158+3>>0]=HEAP8[$163+3>>0]|0;
   }
   $168 = $opnd26;
   $169 = HEAPU8[$168>>0]|(HEAPU8[$168+1>>0]<<8)|(HEAPU8[$168+2>>0]<<16)|(HEAPU8[$168+3>>0]<<24);
   $170 = ($169|0)==(2);
   if ($170) {
    $181 = 1;
   } else {
    $171 = $opnd26;
    $172 = HEAPU8[$171>>0]|(HEAPU8[$171+1>>0]<<8)|(HEAPU8[$171+2>>0]<<16)|(HEAPU8[$171+3>>0]<<24);
    $173 = ($172|0)==(9);
    if ($173) {
     $174 = $opnd26;
     $175 = ((($174)) + 4|0);
     $176 = HEAPU8[$175>>0]|(HEAPU8[$175+1>>0]<<8)|(HEAPU8[$175+2>>0]<<16)|(HEAPU8[$175+3>>0]<<24);
     $177 = ((($176)) + 4|0);
     $178 = HEAPU8[$177>>0]|(HEAPU8[$177+1>>0]<<8)|(HEAPU8[$177+2>>0]<<16)|(HEAPU8[$177+3>>0]<<24);
     $179 = HEAPU8[$178>>0]|(HEAPU8[$178+1>>0]<<8)|(HEAPU8[$178+2>>0]<<16)|(HEAPU8[$178+3>>0]<<24);
     $180 = ($179|0)==(2);
     $181 = $180;
    } else {
     $181 = 0;
    }
   }
   $182 = $181 ? 2 : 3;
   HEAP8[$opndv23>>0]=$182&255;HEAP8[$opndv23+1>>0]=($182>>8)&255;HEAP8[$opndv23+2>>0]=($182>>16)&255;HEAP8[$opndv23+3>>0]=$182>>24;
   $183 = ((($opndv23)) + 4|0);
   $184 = $opnd26;
   $185 = HEAPU8[$184>>0]|(HEAPU8[$184+1>>0]<<8)|(HEAPU8[$184+2>>0]<<16)|(HEAPU8[$184+3>>0]<<24);
   $186 = ($185|0)==(9);
   $187 = $opnd26;
   $188 = ((($187)) + 4|0);
   if ($186) {
    $189 = HEAPU8[$188>>0]|(HEAPU8[$188+1>>0]<<8)|(HEAPU8[$188+2>>0]<<16)|(HEAPU8[$188+3>>0]<<24);
    $190 = ((($189)) + 4|0);
    $191 = HEAPU8[$190>>0]|(HEAPU8[$190+1>>0]<<8)|(HEAPU8[$190+2>>0]<<16)|(HEAPU8[$190+3>>0]<<24);
    $192 = ((($191)) + 4|0);
    ;HEAP8[$183>>0]=HEAP8[$192>>0]|0;HEAP8[$183+1>>0]=HEAP8[$192+1>>0]|0;HEAP8[$183+2>>0]=HEAP8[$192+2>>0]|0;HEAP8[$183+3>>0]=HEAP8[$192+3>>0]|0;
   } else {
    ;HEAP8[$183>>0]=HEAP8[$188>>0]|0;HEAP8[$183+1>>0]=HEAP8[$188+1>>0]|0;HEAP8[$183+2>>0]=HEAP8[$188+2>>0]|0;HEAP8[$183+3>>0]=HEAP8[$188+3>>0]|0;
   }
   $193 = HEAPU8[$opndv12>>0]|(HEAPU8[$opndv12+1>>0]<<8)|(HEAPU8[$opndv12+2>>0]<<16)|(HEAPU8[$opndv12+3>>0]<<24);
   $194 = ($193|0)==(2);
   if ($194) {
    $195 = HEAPU8[$opndv23>>0]|(HEAPU8[$opndv23+1>>0]<<8)|(HEAPU8[$opndv23+2>>0]<<16)|(HEAPU8[$opndv23+3>>0]<<24);
    $196 = ($195|0)==(2);
    if ($196) {
     $197 = $val7;
     HEAP8[$197>>0]=2&255;HEAP8[$197+1>>0]=(2>>8)&255;HEAP8[$197+2>>0]=(2>>16)&255;HEAP8[$197+3>>0]=2>>24;
     $198 = ((($opndv12)) + 4|0);
     $199 = HEAPU8[$198>>0]|(HEAPU8[$198+1>>0]<<8)|(HEAPU8[$198+2>>0]<<16)|(HEAPU8[$198+3>>0]<<24);
     $200 = ((($opndv23)) + 4|0);
     $201 = HEAPU8[$200>>0]|(HEAPU8[$200+1>>0]<<8)|(HEAPU8[$200+2>>0]<<16)|(HEAPU8[$200+3>>0]<<24);
     $202 = (($199|0) % ($201|0))&-1;
     $203 = $val7;
     $204 = ((($203)) + 4|0);
     HEAP8[$204>>0]=$202&255;HEAP8[$204+1>>0]=($202>>8)&255;HEAP8[$204+2>>0]=($202>>16)&255;HEAP8[$204+3>>0]=$202>>24;
     $223 = $result;
     STACKTOP = sp;return ($223|0);
    }
   }
   $205 = $val7;
   HEAP8[$205>>0]=2&255;HEAP8[$205+1>>0]=(2>>8)&255;HEAP8[$205+2>>0]=(2>>16)&255;HEAP8[$205+3>>0]=2>>24;
   $206 = HEAPU8[$opndv12>>0]|(HEAPU8[$opndv12+1>>0]<<8)|(HEAPU8[$opndv12+2>>0]<<16)|(HEAPU8[$opndv12+3>>0]<<24);
   $207 = ($206|0)==(2);
   $208 = ((($opndv12)) + 4|0);
   $209 = HEAPU8[$208>>0]|(HEAPU8[$208+1>>0]<<8)|(HEAPU8[$208+2>>0]<<16)|(HEAPU8[$208+3>>0]<<24);
   HEAP8[tempDoublePtr>>0]=HEAP8[$208>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$208+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$208+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$208+3>>0];$210 = +HEAPF32[tempDoublePtr>>2];
   $211 = (~~(($210)));
   $212 = $207 ? $209 : $211;
   $213 = HEAPU8[$opndv23>>0]|(HEAPU8[$opndv23+1>>0]<<8)|(HEAPU8[$opndv23+2>>0]<<16)|(HEAPU8[$opndv23+3>>0]<<24);
   $214 = ($213|0)==(2);
   $215 = ((($opndv23)) + 4|0);
   $216 = HEAPU8[$215>>0]|(HEAPU8[$215+1>>0]<<8)|(HEAPU8[$215+2>>0]<<16)|(HEAPU8[$215+3>>0]<<24);
   HEAP8[tempDoublePtr>>0]=HEAP8[$215>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$215+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$215+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$215+3>>0];$217 = +HEAPF32[tempDoublePtr>>2];
   $218 = (~~(($217)));
   $219 = $214 ? $216 : $218;
   $220 = (($212|0) % ($219|0))&-1;
   $221 = $val7;
   $222 = ((($221)) + 4|0);
   HEAP8[$222>>0]=$220&255;HEAP8[$222+1>>0]=($220>>8)&255;HEAP8[$222+2>>0]=($220>>16)&255;HEAP8[$222+3>>0]=$220>>24;
   $223 = $result;
   STACKTOP = sp;return ($223|0);
  }
 } while(0);
 $77 = HEAPU8[$opndv1>>0]|(HEAPU8[$opndv1+1>>0]<<8)|(HEAPU8[$opndv1+2>>0]<<16)|(HEAPU8[$opndv1+3>>0]<<24);
 $78 = ($77|0)==(2);
 if ($78) {
  $79 = ((($opndv1)) + 4|0);
  $80 = HEAPU8[$79>>0]|(HEAPU8[$79+1>>0]<<8)|(HEAPU8[$79+2>>0]<<16)|(HEAPU8[$79+3>>0]<<24);
  $81 = ($80|0)==(0);
  if ($81) {
   label = 23;
  } else {
   label = 21;
  }
 } else {
  label = 21;
 }
 do {
  if ((label|0) == 21) {
   $82 = HEAPU8[$opndv1>>0]|(HEAPU8[$opndv1+1>>0]<<8)|(HEAPU8[$opndv1+2>>0]<<16)|(HEAPU8[$opndv1+3>>0]<<24);
   $83 = ($82|0)==(3);
   if ($83) {
    $84 = ((($opndv1)) + 4|0);
    HEAP8[tempDoublePtr>>0]=HEAP8[$84>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$84+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$84+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$84+3>>0];$85 = +HEAPF32[tempDoublePtr>>2];
    $86 = $85 == 0.0;
    if ($86) {
     label = 23;
     break;
    }
   }
   $91 = $val;
   HEAP8[$91>>0]=3&255;HEAP8[$91+1>>0]=(3>>8)&255;HEAP8[$91+2>>0]=(3>>16)&255;HEAP8[$91+3>>0]=3>>24;
   HEAP8[$__u1>>0]=2139095040&255;HEAP8[$__u1+1>>0]=(2139095040>>8)&255;HEAP8[$__u1+2>>0]=(2139095040>>16)&255;HEAP8[$__u1+3>>0]=2139095040>>24;
   HEAP8[tempDoublePtr>>0]=HEAP8[$__u1>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$__u1+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$__u1+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$__u1+3>>0];$92 = +HEAPF32[tempDoublePtr>>2];
   $93 = $val;
   $94 = ((($93)) + 4|0);
   HEAPF32[tempDoublePtr>>2]=$92;HEAP8[$94>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$94+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$94+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$94+3>>0]=HEAP8[tempDoublePtr+3>>0];
  }
 } while(0);
 if ((label|0) == 23) {
  $87 = $val;
  HEAP8[$87>>0]=3&255;HEAP8[$87+1>>0]=(3>>8)&255;HEAP8[$87+2>>0]=(3>>16)&255;HEAP8[$87+3>>0]=3>>24;
  HEAP8[$__u>>0]=2143289344&255;HEAP8[$__u+1>>0]=(2143289344>>8)&255;HEAP8[$__u+2>>0]=(2143289344>>16)&255;HEAP8[$__u+3>>0]=2143289344>>24;
  HEAP8[tempDoublePtr>>0]=HEAP8[$__u>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$__u+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$__u+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$__u+3>>0];$88 = +HEAPF32[tempDoublePtr>>2];
  $89 = $val;
  $90 = ((($89)) + 4|0);
  HEAPF32[tempDoublePtr>>2]=$88;HEAP8[$90>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$90+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$90+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$90+3>>0]=HEAP8[tempDoublePtr+3>>0];
 }
 $95 = $1;
 $96 = ($95|0)!=(0|0);
 if ($96) {
  $97 = $1;
  $98 = HEAP32[$97>>2]|0;
  $99 = ($98|0)!=(0|0);
  if ($99) {
   $100 = $1;
   $101 = HEAP32[$100>>2]|0;
   $102 = HEAPU8[$101>>0]|(HEAPU8[$101+1>>0]<<8)|(HEAPU8[$101+2>>0]<<16)|(HEAPU8[$101+3>>0]<<24);
   $103 = ($102|0)!=(0|0);
   if ($103) {
    $104 = $0;
    $105 = $0;
    $106 = ((($105)) + 67|0);
    $107 = HEAPU8[$106>>0]|(HEAPU8[$106+1>>0]<<8)|(HEAPU8[$106+2>>0]<<16)|(HEAPU8[$106+3>>0]<<24);
    $108 = (__set_current_error($104,49,$107)|0);
    $109 = ($108<<24>>24)!=(0);
    if (!($109)) {
     $223 = $result;
     STACKTOP = sp;return ($223|0);
    }
    $110 = $0;
    $111 = $1;
    $112 = HEAP32[$111>>2]|0;
    $113 = HEAPU8[$112>>0]|(HEAPU8[$112+1>>0]<<8)|(HEAPU8[$112+2>>0]<<16)|(HEAPU8[$112+3>>0]<<24);
    $114 = ((($113)) + 9|0);
    $115 = HEAPU8[$114>>0]|(HEAPU8[$114+1>>0]<<8)|(HEAPU8[$114+2>>0]<<16)|(HEAPU8[$114+3>>0]<<24);
    $116 = $1;
    $117 = HEAP32[$116>>2]|0;
    $118 = HEAPU8[$117>>0]|(HEAPU8[$117+1>>0]<<8)|(HEAPU8[$117+2>>0]<<16)|(HEAPU8[$117+3>>0]<<24);
    $119 = ((($118)) + 13|0);
    $120 = HEAPU8[$119>>0]|(HEAPU8[$119+1>>0]<<8);
    $121 = $1;
    $122 = HEAP32[$121>>2]|0;
    $123 = HEAPU8[$122>>0]|(HEAPU8[$122+1>>0]<<8)|(HEAPU8[$122+2>>0]<<16)|(HEAPU8[$122+3>>0]<<24);
    $124 = ((($123)) + 15|0);
    $125 = HEAPU8[$124>>0]|(HEAPU8[$124+1>>0]<<8);
    __set_error_pos($110,$115,$120,$125);
    $223 = $result;
    STACKTOP = sp;return ($223|0);
   }
  }
 }
 $126 = $0;
 $127 = $0;
 $128 = ((($127)) + 67|0);
 $129 = HEAPU8[$128>>0]|(HEAPU8[$128+1>>0]<<8)|(HEAPU8[$128+2>>0]<<16)|(HEAPU8[$128+3>>0]<<24);
 $130 = (__set_current_error($126,49,$129)|0);
 $131 = ($130<<24>>24)!=(0);
 if (!($131)) {
  $223 = $result;
  STACKTOP = sp;return ($223|0);
 }
 $132 = $0;
 __set_error_pos($132,0,0,0);
 $223 = $result;
 STACKTOP = sp;return ($223|0);
}
function __core_pow($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0.0, $101 = 0.0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0.0, $11 = 0, $110 = 0, $111 = 0.0, $112 = 0, $113 = 0, $114 = 0.0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0.0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0.0, $74 = 0.0, $75 = 0, $76 = 0, $77 = 0.0;
 var $78 = 0.0, $79 = 0.0, $8 = 0, $80 = 0.0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0.0, $89 = 0.0, $9 = 0, $90 = 0.0, $91 = 0.0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0.0, $97 = 0.0, $98 = 0.0, $99 = 0.0, $opnd1 = 0, $opnd2 = 0, $opndv1 = 0, $opndv2 = 0, $or$cond = 0, $result = 0, $tpptr = 0, $val = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $opndv1 = sp + 45|0;
 $opndv2 = sp + 28|0;
 $0 = $s;
 $1 = $l;
 $result = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),15102,(5104|0));
  // unreachable;
 }
 $6 = $1;
 $7 = HEAP32[$6>>2]|0;
 $tpptr = $7;
 $8 = $tpptr;
 $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
 $opnd1 = $9;
 $10 = $tpptr;
 $11 = ((($10)) + 4|0);
 $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
 $opnd2 = $12;
 $13 = $tpptr;
 $14 = ((($13)) + 8|0);
 $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
 $val = $15;
 $16 = $opnd1;
 $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
 $18 = ($17|0)==(2);
 if ($18) {
  $29 = 1;
 } else {
  $19 = $opnd1;
  $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8)|(HEAPU8[$19+2>>0]<<16)|(HEAPU8[$19+3>>0]<<24);
  $21 = ($20|0)==(9);
  if ($21) {
   $22 = $opnd1;
   $23 = ((($22)) + 4|0);
   $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
   $25 = ((($24)) + 4|0);
   $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
   $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
   $28 = ($27|0)==(2);
   $29 = $28;
  } else {
   $29 = 0;
  }
 }
 $30 = $29 ? 2 : 3;
 HEAP8[$opndv1>>0]=$30&255;HEAP8[$opndv1+1>>0]=($30>>8)&255;HEAP8[$opndv1+2>>0]=($30>>16)&255;HEAP8[$opndv1+3>>0]=$30>>24;
 $31 = ((($opndv1)) + 4|0);
 $32 = $opnd1;
 $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
 $34 = ($33|0)==(9);
 $35 = $opnd1;
 $36 = ((($35)) + 4|0);
 if ($34) {
  $37 = HEAPU8[$36>>0]|(HEAPU8[$36+1>>0]<<8)|(HEAPU8[$36+2>>0]<<16)|(HEAPU8[$36+3>>0]<<24);
  $38 = ((($37)) + 4|0);
  $39 = HEAPU8[$38>>0]|(HEAPU8[$38+1>>0]<<8)|(HEAPU8[$38+2>>0]<<16)|(HEAPU8[$38+3>>0]<<24);
  $40 = ((($39)) + 4|0);
  ;HEAP8[$31>>0]=HEAP8[$40>>0]|0;HEAP8[$31+1>>0]=HEAP8[$40+1>>0]|0;HEAP8[$31+2>>0]=HEAP8[$40+2>>0]|0;HEAP8[$31+3>>0]=HEAP8[$40+3>>0]|0;
 } else {
  ;HEAP8[$31>>0]=HEAP8[$36>>0]|0;HEAP8[$31+1>>0]=HEAP8[$36+1>>0]|0;HEAP8[$31+2>>0]=HEAP8[$36+2>>0]|0;HEAP8[$31+3>>0]=HEAP8[$36+3>>0]|0;
 }
 $41 = $opnd2;
 $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
 $43 = ($42|0)==(2);
 if ($43) {
  $54 = 1;
 } else {
  $44 = $opnd2;
  $45 = HEAPU8[$44>>0]|(HEAPU8[$44+1>>0]<<8)|(HEAPU8[$44+2>>0]<<16)|(HEAPU8[$44+3>>0]<<24);
  $46 = ($45|0)==(9);
  if ($46) {
   $47 = $opnd2;
   $48 = ((($47)) + 4|0);
   $49 = HEAPU8[$48>>0]|(HEAPU8[$48+1>>0]<<8)|(HEAPU8[$48+2>>0]<<16)|(HEAPU8[$48+3>>0]<<24);
   $50 = ((($49)) + 4|0);
   $51 = HEAPU8[$50>>0]|(HEAPU8[$50+1>>0]<<8)|(HEAPU8[$50+2>>0]<<16)|(HEAPU8[$50+3>>0]<<24);
   $52 = HEAPU8[$51>>0]|(HEAPU8[$51+1>>0]<<8)|(HEAPU8[$51+2>>0]<<16)|(HEAPU8[$51+3>>0]<<24);
   $53 = ($52|0)==(2);
   $54 = $53;
  } else {
   $54 = 0;
  }
 }
 $55 = $54 ? 2 : 3;
 HEAP8[$opndv2>>0]=$55&255;HEAP8[$opndv2+1>>0]=($55>>8)&255;HEAP8[$opndv2+2>>0]=($55>>16)&255;HEAP8[$opndv2+3>>0]=$55>>24;
 $56 = ((($opndv2)) + 4|0);
 $57 = $opnd2;
 $58 = HEAPU8[$57>>0]|(HEAPU8[$57+1>>0]<<8)|(HEAPU8[$57+2>>0]<<16)|(HEAPU8[$57+3>>0]<<24);
 $59 = ($58|0)==(9);
 $60 = $opnd2;
 $61 = ((($60)) + 4|0);
 if ($59) {
  $62 = HEAPU8[$61>>0]|(HEAPU8[$61+1>>0]<<8)|(HEAPU8[$61+2>>0]<<16)|(HEAPU8[$61+3>>0]<<24);
  $63 = ((($62)) + 4|0);
  $64 = HEAPU8[$63>>0]|(HEAPU8[$63+1>>0]<<8)|(HEAPU8[$63+2>>0]<<16)|(HEAPU8[$63+3>>0]<<24);
  $65 = ((($64)) + 4|0);
  ;HEAP8[$56>>0]=HEAP8[$65>>0]|0;HEAP8[$56+1>>0]=HEAP8[$65+1>>0]|0;HEAP8[$56+2>>0]=HEAP8[$65+2>>0]|0;HEAP8[$56+3>>0]=HEAP8[$65+3>>0]|0;
 } else {
  ;HEAP8[$56>>0]=HEAP8[$61>>0]|0;HEAP8[$56+1>>0]=HEAP8[$61+1>>0]|0;HEAP8[$56+2>>0]=HEAP8[$61+2>>0]|0;HEAP8[$56+3>>0]=HEAP8[$61+3>>0]|0;
 }
 $66 = HEAPU8[$opndv1>>0]|(HEAPU8[$opndv1+1>>0]<<8)|(HEAPU8[$opndv1+2>>0]<<16)|(HEAPU8[$opndv1+3>>0]<<24);
 $67 = ($66|0)==(2);
 if ($67) {
  $68 = HEAPU8[$opndv2>>0]|(HEAPU8[$opndv2+1>>0]<<8)|(HEAPU8[$opndv2+2>>0]<<16)|(HEAPU8[$opndv2+3>>0]<<24);
  $69 = ($68|0)==(2);
  if ($69) {
   $70 = $val;
   HEAP8[$70>>0]=3&255;HEAP8[$70+1>>0]=(3>>8)&255;HEAP8[$70+2>>0]=(3>>16)&255;HEAP8[$70+3>>0]=3>>24;
   $71 = ((($opndv1)) + 4|0);
   $72 = HEAPU8[$71>>0]|(HEAPU8[$71+1>>0]<<8)|(HEAPU8[$71+2>>0]<<16)|(HEAPU8[$71+3>>0]<<24);
   $73 = (+($72|0));
   $74 = $73;
   $75 = ((($opndv2)) + 4|0);
   $76 = HEAPU8[$75>>0]|(HEAPU8[$75+1>>0]<<8)|(HEAPU8[$75+2>>0]<<16)|(HEAPU8[$75+3>>0]<<24);
   $77 = (+($76|0));
   $78 = $77;
   $79 = (+Math_pow((+$74),(+$78)));
   $80 = $79;
   $81 = $val;
   $82 = ((($81)) + 4|0);
   HEAPF32[tempDoublePtr>>2]=$80;HEAP8[$82>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$82+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$82+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$82+3>>0]=HEAP8[tempDoublePtr+3>>0];
  } else {
   label = 18;
  }
 } else {
  label = 18;
 }
 if ((label|0) == 18) {
  $83 = $val;
  HEAP8[$83>>0]=3&255;HEAP8[$83+1>>0]=(3>>8)&255;HEAP8[$83+2>>0]=(3>>16)&255;HEAP8[$83+3>>0]=3>>24;
  $84 = HEAPU8[$opndv1>>0]|(HEAPU8[$opndv1+1>>0]<<8)|(HEAPU8[$opndv1+2>>0]<<16)|(HEAPU8[$opndv1+3>>0]<<24);
  $85 = ($84|0)==(2);
  $86 = ((($opndv1)) + 4|0);
  $87 = HEAPU8[$86>>0]|(HEAPU8[$86+1>>0]<<8)|(HEAPU8[$86+2>>0]<<16)|(HEAPU8[$86+3>>0]<<24);
  $88 = (+($87|0));
  HEAP8[tempDoublePtr>>0]=HEAP8[$86>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$86+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$86+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$86+3>>0];$89 = +HEAPF32[tempDoublePtr>>2];
  $90 = $85 ? $88 : $89;
  $91 = $90;
  $92 = HEAPU8[$opndv2>>0]|(HEAPU8[$opndv2+1>>0]<<8)|(HEAPU8[$opndv2+2>>0]<<16)|(HEAPU8[$opndv2+3>>0]<<24);
  $93 = ($92|0)==(2);
  $94 = ((($opndv2)) + 4|0);
  $95 = HEAPU8[$94>>0]|(HEAPU8[$94+1>>0]<<8)|(HEAPU8[$94+2>>0]<<16)|(HEAPU8[$94+3>>0]<<24);
  $96 = (+($95|0));
  HEAP8[tempDoublePtr>>0]=HEAP8[$94>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$94+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$94+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$94+3>>0];$97 = +HEAPF32[tempDoublePtr>>2];
  $98 = $93 ? $96 : $97;
  $99 = $98;
  $100 = (+Math_pow((+$91),(+$99)));
  $101 = $100;
  $102 = $val;
  $103 = ((($102)) + 4|0);
  HEAPF32[tempDoublePtr>>2]=$101;HEAP8[$103>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$103+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$103+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$103+3>>0]=HEAP8[tempDoublePtr+3>>0];
 }
 $104 = $val;
 $105 = HEAPU8[$104>>0]|(HEAPU8[$104+1>>0]<<8)|(HEAPU8[$104+2>>0]<<16)|(HEAPU8[$104+3>>0]<<24);
 $106 = ($105|0)==(3);
 if (!($106)) {
  $123 = $result;
  STACKTOP = sp;return ($123|0);
 }
 $107 = $val;
 $108 = ((($107)) + 4|0);
 HEAP8[tempDoublePtr>>0]=HEAP8[$108>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$108+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$108+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$108+3>>0];$109 = +HEAPF32[tempDoublePtr>>2];
 $110 = (~~(($109)));
 $111 = (+($110|0));
 $112 = $val;
 $113 = ((($112)) + 4|0);
 HEAP8[tempDoublePtr>>0]=HEAP8[$113>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$113+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$113+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$113+3>>0];$114 = +HEAPF32[tempDoublePtr>>2];
 $115 = $111 == $114;
 if (!($115)) {
  $123 = $result;
  STACKTOP = sp;return ($123|0);
 }
 $116 = $val;
 HEAP8[$116>>0]=2&255;HEAP8[$116+1>>0]=(2>>8)&255;HEAP8[$116+2>>0]=(2>>16)&255;HEAP8[$116+3>>0]=2>>24;
 $117 = $val;
 $118 = ((($117)) + 4|0);
 HEAP8[tempDoublePtr>>0]=HEAP8[$118>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$118+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$118+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$118+3>>0];$119 = +HEAPF32[tempDoublePtr>>2];
 $120 = (~~(($119)));
 $121 = $val;
 $122 = ((($121)) + 4|0);
 HEAP8[$122>>0]=$120&255;HEAP8[$122+1>>0]=($120>>8)&255;HEAP8[$122+2>>0]=($120>>16)&255;HEAP8[$122+3>>0]=$120>>24;
 $123 = $result;
 STACKTOP = sp;return ($123|0);
}
function __core_equal($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0.0, $205 = 0;
 var $206 = 0, $207 = 0.0, $208 = 0, $209 = 0, $21 = 0, $210 = 0.0, $211 = 0, $212 = 0, $213 = 0.0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0.0, $227 = 0, $228 = 0, $229 = 0.0, $23 = 0, $230 = 0, $231 = 0, $232 = 0.0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0.0, $241 = 0.0;
 var $242 = 0.0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0.0, $248 = 0.0, $249 = 0.0, $25 = 0, $250 = 0, $251 = 0, $252 = 0.0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0.0, $261 = 0, $262 = 0.0, $263 = 0, $264 = 0, $265 = 0.0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0.0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0.0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0;
 var $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0;
 var $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0;
 var $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0;
 var $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $_str1 = 0, $_str2 = 0, $opnd1 = 0, $opnd13 = 0, $opnd19 = 0, $opnd2 = 0, $opnd210 = 0, $opnd24 = 0, $opndv1 = 0, $opndv16 = 0, $opndv2 = 0, $opndv27 = 0, $or$cond = 0, $result = 0, $tpptr = 0;
 var $tpptr2 = 0, $tpptr8 = 0, $tpr = 0, $val = 0, $val1 = 0, $val11 = 0, $val5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $opndv1 = sp + 127|0;
 $opndv2 = sp + 110|0;
 $opndv16 = sp + 93|0;
 $opndv27 = sp + 76|0;
 $0 = $s;
 $1 = $l;
 $result = 0;
 $tpr = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),15226,(5092|0));
  // unreachable;
 }
 $6 = $1;
 $7 = HEAP32[$6>>2]|0;
 $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
 $9 = (__is_string($8)|0);
 $10 = $9&255;
 $11 = ($10|0)!=(0);
 if (!($11)) {
  $12 = $1;
  $13 = HEAP32[$12>>2]|0;
  $14 = ((($13)) + 4|0);
  $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
  $16 = (__is_string($15)|0);
  $17 = $16&255;
  $18 = ($17|0)!=(0);
  if (!($18)) {
   $121 = $1;
   $122 = HEAP32[$121>>2]|0;
   $123 = HEAPU8[$122>>0]|(HEAPU8[$122+1>>0]<<8)|(HEAPU8[$122+2>>0]<<16)|(HEAPU8[$122+3>>0]<<24);
   $124 = (__is_number($123)|0);
   $125 = $124&255;
   $126 = ($125|0)!=(0);
   if ($126) {
    $127 = $1;
    $128 = HEAP32[$127>>2]|0;
    $129 = ((($128)) + 4|0);
    $130 = HEAPU8[$129>>0]|(HEAPU8[$129+1>>0]<<8)|(HEAPU8[$129+2>>0]<<16)|(HEAPU8[$129+3>>0]<<24);
    $131 = (__is_number($130)|0);
    $132 = $131&255;
    $133 = ($132|0)!=(0);
    if ($133) {
     $134 = $1;
     $135 = HEAP32[$134>>2]|0;
     $tpptr2 = $135;
     $136 = $tpptr2;
     $137 = HEAPU8[$136>>0]|(HEAPU8[$136+1>>0]<<8)|(HEAPU8[$136+2>>0]<<16)|(HEAPU8[$136+3>>0]<<24);
     $opnd13 = $137;
     $138 = $tpptr2;
     $139 = ((($138)) + 4|0);
     $140 = HEAPU8[$139>>0]|(HEAPU8[$139+1>>0]<<8)|(HEAPU8[$139+2>>0]<<16)|(HEAPU8[$139+3>>0]<<24);
     $opnd24 = $140;
     $141 = $tpptr2;
     $142 = ((($141)) + 8|0);
     $143 = HEAPU8[$142>>0]|(HEAPU8[$142+1>>0]<<8)|(HEAPU8[$142+2>>0]<<16)|(HEAPU8[$142+3>>0]<<24);
     $val5 = $143;
     $144 = $opnd13;
     $145 = HEAPU8[$144>>0]|(HEAPU8[$144+1>>0]<<8)|(HEAPU8[$144+2>>0]<<16)|(HEAPU8[$144+3>>0]<<24);
     $146 = ($145|0)==(2);
     if ($146) {
      $157 = 1;
     } else {
      $147 = $opnd13;
      $148 = HEAPU8[$147>>0]|(HEAPU8[$147+1>>0]<<8)|(HEAPU8[$147+2>>0]<<16)|(HEAPU8[$147+3>>0]<<24);
      $149 = ($148|0)==(9);
      if ($149) {
       $150 = $opnd13;
       $151 = ((($150)) + 4|0);
       $152 = HEAPU8[$151>>0]|(HEAPU8[$151+1>>0]<<8)|(HEAPU8[$151+2>>0]<<16)|(HEAPU8[$151+3>>0]<<24);
       $153 = ((($152)) + 4|0);
       $154 = HEAPU8[$153>>0]|(HEAPU8[$153+1>>0]<<8)|(HEAPU8[$153+2>>0]<<16)|(HEAPU8[$153+3>>0]<<24);
       $155 = HEAPU8[$154>>0]|(HEAPU8[$154+1>>0]<<8)|(HEAPU8[$154+2>>0]<<16)|(HEAPU8[$154+3>>0]<<24);
       $156 = ($155|0)==(2);
       $157 = $156;
      } else {
       $157 = 0;
      }
     }
     $158 = $157 ? 2 : 3;
     HEAP8[$opndv1>>0]=$158&255;HEAP8[$opndv1+1>>0]=($158>>8)&255;HEAP8[$opndv1+2>>0]=($158>>16)&255;HEAP8[$opndv1+3>>0]=$158>>24;
     $159 = ((($opndv1)) + 4|0);
     $160 = $opnd13;
     $161 = HEAPU8[$160>>0]|(HEAPU8[$160+1>>0]<<8)|(HEAPU8[$160+2>>0]<<16)|(HEAPU8[$160+3>>0]<<24);
     $162 = ($161|0)==(9);
     $163 = $opnd13;
     $164 = ((($163)) + 4|0);
     if ($162) {
      $165 = HEAPU8[$164>>0]|(HEAPU8[$164+1>>0]<<8)|(HEAPU8[$164+2>>0]<<16)|(HEAPU8[$164+3>>0]<<24);
      $166 = ((($165)) + 4|0);
      $167 = HEAPU8[$166>>0]|(HEAPU8[$166+1>>0]<<8)|(HEAPU8[$166+2>>0]<<16)|(HEAPU8[$166+3>>0]<<24);
      $168 = ((($167)) + 4|0);
      ;HEAP8[$159>>0]=HEAP8[$168>>0]|0;HEAP8[$159+1>>0]=HEAP8[$168+1>>0]|0;HEAP8[$159+2>>0]=HEAP8[$168+2>>0]|0;HEAP8[$159+3>>0]=HEAP8[$168+3>>0]|0;
     } else {
      ;HEAP8[$159>>0]=HEAP8[$164>>0]|0;HEAP8[$159+1>>0]=HEAP8[$164+1>>0]|0;HEAP8[$159+2>>0]=HEAP8[$164+2>>0]|0;HEAP8[$159+3>>0]=HEAP8[$164+3>>0]|0;
     }
     $169 = $opnd24;
     $170 = HEAPU8[$169>>0]|(HEAPU8[$169+1>>0]<<8)|(HEAPU8[$169+2>>0]<<16)|(HEAPU8[$169+3>>0]<<24);
     $171 = ($170|0)==(2);
     if ($171) {
      $182 = 1;
     } else {
      $172 = $opnd24;
      $173 = HEAPU8[$172>>0]|(HEAPU8[$172+1>>0]<<8)|(HEAPU8[$172+2>>0]<<16)|(HEAPU8[$172+3>>0]<<24);
      $174 = ($173|0)==(9);
      if ($174) {
       $175 = $opnd24;
       $176 = ((($175)) + 4|0);
       $177 = HEAPU8[$176>>0]|(HEAPU8[$176+1>>0]<<8)|(HEAPU8[$176+2>>0]<<16)|(HEAPU8[$176+3>>0]<<24);
       $178 = ((($177)) + 4|0);
       $179 = HEAPU8[$178>>0]|(HEAPU8[$178+1>>0]<<8)|(HEAPU8[$178+2>>0]<<16)|(HEAPU8[$178+3>>0]<<24);
       $180 = HEAPU8[$179>>0]|(HEAPU8[$179+1>>0]<<8)|(HEAPU8[$179+2>>0]<<16)|(HEAPU8[$179+3>>0]<<24);
       $181 = ($180|0)==(2);
       $182 = $181;
      } else {
       $182 = 0;
      }
     }
     $183 = $182 ? 2 : 3;
     HEAP8[$opndv2>>0]=$183&255;HEAP8[$opndv2+1>>0]=($183>>8)&255;HEAP8[$opndv2+2>>0]=($183>>16)&255;HEAP8[$opndv2+3>>0]=$183>>24;
     $184 = ((($opndv2)) + 4|0);
     $185 = $opnd24;
     $186 = HEAPU8[$185>>0]|(HEAPU8[$185+1>>0]<<8)|(HEAPU8[$185+2>>0]<<16)|(HEAPU8[$185+3>>0]<<24);
     $187 = ($186|0)==(9);
     $188 = $opnd24;
     $189 = ((($188)) + 4|0);
     if ($187) {
      $190 = HEAPU8[$189>>0]|(HEAPU8[$189+1>>0]<<8)|(HEAPU8[$189+2>>0]<<16)|(HEAPU8[$189+3>>0]<<24);
      $191 = ((($190)) + 4|0);
      $192 = HEAPU8[$191>>0]|(HEAPU8[$191+1>>0]<<8)|(HEAPU8[$191+2>>0]<<16)|(HEAPU8[$191+3>>0]<<24);
      $193 = ((($192)) + 4|0);
      ;HEAP8[$184>>0]=HEAP8[$193>>0]|0;HEAP8[$184+1>>0]=HEAP8[$193+1>>0]|0;HEAP8[$184+2>>0]=HEAP8[$193+2>>0]|0;HEAP8[$184+3>>0]=HEAP8[$193+3>>0]|0;
     } else {
      ;HEAP8[$184>>0]=HEAP8[$189>>0]|0;HEAP8[$184+1>>0]=HEAP8[$189+1>>0]|0;HEAP8[$184+2>>0]=HEAP8[$189+2>>0]|0;HEAP8[$184+3>>0]=HEAP8[$189+3>>0]|0;
     }
     $194 = HEAPU8[$opndv1>>0]|(HEAPU8[$opndv1+1>>0]<<8)|(HEAPU8[$opndv1+2>>0]<<16)|(HEAPU8[$opndv1+3>>0]<<24);
     $195 = ($194|0)==(2);
     do {
      if ($195) {
       $196 = HEAPU8[$opndv2>>0]|(HEAPU8[$opndv2+1>>0]<<8)|(HEAPU8[$opndv2+2>>0]<<16)|(HEAPU8[$opndv2+3>>0]<<24);
       $197 = ($196|0)==(2);
       if ($197) {
        $198 = ((($opndv1)) + 4|0);
        $199 = HEAPU8[$198>>0]|(HEAPU8[$198+1>>0]<<8)|(HEAPU8[$198+2>>0]<<16)|(HEAPU8[$198+3>>0]<<24);
        $200 = ((($opndv2)) + 4|0);
        $201 = HEAPU8[$200>>0]|(HEAPU8[$200+1>>0]<<8)|(HEAPU8[$200+2>>0]<<16)|(HEAPU8[$200+3>>0]<<24);
        $202 = ($199|0)==($201|0);
        $203 = $202&1;
        $204 = (+($203|0));
        $205 = ((($opndv1)) + 4|0);
        $206 = HEAPU8[$205>>0]|(HEAPU8[$205+1>>0]<<8)|(HEAPU8[$205+2>>0]<<16)|(HEAPU8[$205+3>>0]<<24);
        $207 = (+($206|0));
        $208 = $204 == $207;
        $209 = $208&1;
        $210 = (+($209|0));
        $211 = ((($opndv2)) + 4|0);
        $212 = HEAPU8[$211>>0]|(HEAPU8[$211+1>>0]<<8)|(HEAPU8[$211+2>>0]<<16)|(HEAPU8[$211+3>>0]<<24);
        $213 = (+($212|0));
        $214 = $210 == $213;
        $215 = $val5;
        if ($214) {
         HEAP8[$215>>0]=2&255;HEAP8[$215+1>>0]=(2>>8)&255;HEAP8[$215+2>>0]=(2>>16)&255;HEAP8[$215+3>>0]=2>>24;
         $216 = ((($opndv1)) + 4|0);
         $217 = HEAPU8[$216>>0]|(HEAPU8[$216+1>>0]<<8)|(HEAPU8[$216+2>>0]<<16)|(HEAPU8[$216+3>>0]<<24);
         $218 = ((($opndv2)) + 4|0);
         $219 = HEAPU8[$218>>0]|(HEAPU8[$218+1>>0]<<8)|(HEAPU8[$218+2>>0]<<16)|(HEAPU8[$218+3>>0]<<24);
         $220 = ($217|0)==($219|0);
         $221 = $220&1;
         $222 = $val5;
         $223 = ((($222)) + 4|0);
         HEAP8[$223>>0]=$221&255;HEAP8[$223+1>>0]=($221>>8)&255;HEAP8[$223+2>>0]=($221>>16)&255;HEAP8[$223+3>>0]=$221>>24;
         break;
        } else {
         HEAP8[$215>>0]=3&255;HEAP8[$215+1>>0]=(3>>8)&255;HEAP8[$215+2>>0]=(3>>16)&255;HEAP8[$215+3>>0]=3>>24;
         $224 = ((($opndv1)) + 4|0);
         $225 = HEAPU8[$224>>0]|(HEAPU8[$224+1>>0]<<8)|(HEAPU8[$224+2>>0]<<16)|(HEAPU8[$224+3>>0]<<24);
         $226 = (+($225|0));
         $227 = ((($opndv2)) + 4|0);
         $228 = HEAPU8[$227>>0]|(HEAPU8[$227+1>>0]<<8)|(HEAPU8[$227+2>>0]<<16)|(HEAPU8[$227+3>>0]<<24);
         $229 = (+($228|0));
         $230 = $226 == $229;
         $231 = $230&1;
         $232 = (+($231|0));
         $233 = $val5;
         $234 = ((($233)) + 4|0);
         HEAPF32[tempDoublePtr>>2]=$232;HEAP8[$234>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$234+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$234+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$234+3>>0]=HEAP8[tempDoublePtr+3>>0];
         break;
        }
       } else {
        label = 37;
       }
      } else {
       label = 37;
      }
     } while(0);
     if ((label|0) == 37) {
      $235 = $val5;
      HEAP8[$235>>0]=3&255;HEAP8[$235+1>>0]=(3>>8)&255;HEAP8[$235+2>>0]=(3>>16)&255;HEAP8[$235+3>>0]=3>>24;
      $236 = HEAPU8[$opndv1>>0]|(HEAPU8[$opndv1+1>>0]<<8)|(HEAPU8[$opndv1+2>>0]<<16)|(HEAPU8[$opndv1+3>>0]<<24);
      $237 = ($236|0)==(2);
      $238 = ((($opndv1)) + 4|0);
      $239 = HEAPU8[$238>>0]|(HEAPU8[$238+1>>0]<<8)|(HEAPU8[$238+2>>0]<<16)|(HEAPU8[$238+3>>0]<<24);
      $240 = (+($239|0));
      HEAP8[tempDoublePtr>>0]=HEAP8[$238>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$238+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$238+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$238+3>>0];$241 = +HEAPF32[tempDoublePtr>>2];
      $242 = $237 ? $240 : $241;
      $243 = HEAPU8[$opndv2>>0]|(HEAPU8[$opndv2+1>>0]<<8)|(HEAPU8[$opndv2+2>>0]<<16)|(HEAPU8[$opndv2+3>>0]<<24);
      $244 = ($243|0)==(2);
      $245 = ((($opndv2)) + 4|0);
      $246 = HEAPU8[$245>>0]|(HEAPU8[$245+1>>0]<<8)|(HEAPU8[$245+2>>0]<<16)|(HEAPU8[$245+3>>0]<<24);
      $247 = (+($246|0));
      HEAP8[tempDoublePtr>>0]=HEAP8[$245>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$245+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$245+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$245+3>>0];$248 = +HEAPF32[tempDoublePtr>>2];
      $249 = $244 ? $247 : $248;
      $250 = $242 == $249;
      $251 = $250&1;
      $252 = (+($251|0));
      $253 = $val5;
      $254 = ((($253)) + 4|0);
      HEAPF32[tempDoublePtr>>2]=$252;HEAP8[$254>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$254+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$254+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$254+3>>0]=HEAP8[tempDoublePtr+3>>0];
     }
     $255 = $val5;
     $256 = HEAPU8[$255>>0]|(HEAPU8[$255+1>>0]<<8)|(HEAPU8[$255+2>>0]<<16)|(HEAPU8[$255+3>>0]<<24);
     $257 = ($256|0)==(3);
     if ($257) {
      $258 = $val5;
      $259 = ((($258)) + 4|0);
      HEAP8[tempDoublePtr>>0]=HEAP8[$259>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$259+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$259+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$259+3>>0];$260 = +HEAPF32[tempDoublePtr>>2];
      $261 = (~~(($260)));
      $262 = (+($261|0));
      $263 = $val5;
      $264 = ((($263)) + 4|0);
      HEAP8[tempDoublePtr>>0]=HEAP8[$264>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$264+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$264+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$264+3>>0];$265 = +HEAPF32[tempDoublePtr>>2];
      $266 = $262 == $265;
      if ($266) {
       $267 = $val5;
       HEAP8[$267>>0]=2&255;HEAP8[$267+1>>0]=(2>>8)&255;HEAP8[$267+2>>0]=(2>>16)&255;HEAP8[$267+3>>0]=2>>24;
       $268 = $val5;
       $269 = ((($268)) + 4|0);
       HEAP8[tempDoublePtr>>0]=HEAP8[$269>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$269+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$269+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$269+3>>0];$270 = +HEAPF32[tempDoublePtr>>2];
       $271 = (~~(($270)));
       $272 = $val5;
       $273 = ((($272)) + 4|0);
       HEAP8[$273>>0]=$271&255;HEAP8[$273+1>>0]=($271>>8)&255;HEAP8[$273+2>>0]=($271>>16)&255;HEAP8[$273+3>>0]=$271>>24;
      }
     }
     $274 = $1;
     $275 = HEAP32[$274>>2]|0;
     $tpr = $275;
     $276 = $tpr;
     $277 = ((($276)) + 8|0);
     $278 = HEAPU8[$277>>0]|(HEAPU8[$277+1>>0]<<8)|(HEAPU8[$277+2>>0]<<16)|(HEAPU8[$277+3>>0]<<24);
     $279 = HEAPU8[$278>>0]|(HEAPU8[$278+1>>0]<<8)|(HEAPU8[$278+2>>0]<<16)|(HEAPU8[$278+3>>0]<<24);
     $280 = ($279|0)!=(2);
     if (!($280)) {
      $364 = $result;
      STACKTOP = sp;return ($364|0);
     }
     $281 = $tpr;
     $282 = ((($281)) + 8|0);
     $283 = HEAPU8[$282>>0]|(HEAPU8[$282+1>>0]<<8)|(HEAPU8[$282+2>>0]<<16)|(HEAPU8[$282+3>>0]<<24);
     HEAP8[$283>>0]=2&255;HEAP8[$283+1>>0]=(2>>8)&255;HEAP8[$283+2>>0]=(2>>16)&255;HEAP8[$283+3>>0]=2>>24;
     $284 = $tpr;
     $285 = ((($284)) + 8|0);
     $286 = HEAPU8[$285>>0]|(HEAPU8[$285+1>>0]<<8)|(HEAPU8[$285+2>>0]<<16)|(HEAPU8[$285+3>>0]<<24);
     $287 = ((($286)) + 4|0);
     HEAP8[tempDoublePtr>>0]=HEAP8[$287>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$287+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$287+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$287+3>>0];$288 = +HEAPF32[tempDoublePtr>>2];
     $289 = $288 != 0.0;
     $290 = $289&1;
     $291 = $tpr;
     $292 = ((($291)) + 8|0);
     $293 = HEAPU8[$292>>0]|(HEAPU8[$292+1>>0]<<8)|(HEAPU8[$292+2>>0]<<16)|(HEAPU8[$292+3>>0]<<24);
     $294 = ((($293)) + 4|0);
     HEAP8[$294>>0]=$290&255;HEAP8[$294+1>>0]=($290>>8)&255;HEAP8[$294+2>>0]=($290>>16)&255;HEAP8[$294+3>>0]=$290>>24;
     $364 = $result;
     STACKTOP = sp;return ($364|0);
    }
   }
   $295 = $1;
   $296 = HEAP32[$295>>2]|0;
   $tpptr8 = $296;
   $297 = $tpptr8;
   $298 = HEAPU8[$297>>0]|(HEAPU8[$297+1>>0]<<8)|(HEAPU8[$297+2>>0]<<16)|(HEAPU8[$297+3>>0]<<24);
   $opnd19 = $298;
   $299 = $tpptr8;
   $300 = ((($299)) + 4|0);
   $301 = HEAPU8[$300>>0]|(HEAPU8[$300+1>>0]<<8)|(HEAPU8[$300+2>>0]<<16)|(HEAPU8[$300+3>>0]<<24);
   $opnd210 = $301;
   $302 = $tpptr8;
   $303 = ((($302)) + 8|0);
   $304 = HEAPU8[$303>>0]|(HEAPU8[$303+1>>0]<<8)|(HEAPU8[$303+2>>0]<<16)|(HEAPU8[$303+3>>0]<<24);
   $val11 = $304;
   $305 = $opnd19;
   $306 = HEAPU8[$305>>0]|(HEAPU8[$305+1>>0]<<8)|(HEAPU8[$305+2>>0]<<16)|(HEAPU8[$305+3>>0]<<24);
   $307 = ($306|0)==(9);
   $308 = $opnd19;
   if ($307) {
    $309 = ((($308)) + 4|0);
    $310 = HEAPU8[$309>>0]|(HEAPU8[$309+1>>0]<<8)|(HEAPU8[$309+2>>0]<<16)|(HEAPU8[$309+3>>0]<<24);
    $311 = ((($310)) + 4|0);
    $312 = HEAPU8[$311>>0]|(HEAPU8[$311+1>>0]<<8)|(HEAPU8[$311+2>>0]<<16)|(HEAPU8[$311+3>>0]<<24);
    $313 = HEAPU8[$312>>0]|(HEAPU8[$312+1>>0]<<8)|(HEAPU8[$312+2>>0]<<16)|(HEAPU8[$312+3>>0]<<24);
    $315 = $313;
   } else {
    $314 = HEAPU8[$308>>0]|(HEAPU8[$308+1>>0]<<8)|(HEAPU8[$308+2>>0]<<16)|(HEAPU8[$308+3>>0]<<24);
    $315 = $314;
   }
   HEAP8[$opndv16>>0]=$315&255;HEAP8[$opndv16+1>>0]=($315>>8)&255;HEAP8[$opndv16+2>>0]=($315>>16)&255;HEAP8[$opndv16+3>>0]=$315>>24;
   $316 = ((($opndv16)) + 4|0);
   $317 = $opnd19;
   $318 = HEAPU8[$317>>0]|(HEAPU8[$317+1>>0]<<8)|(HEAPU8[$317+2>>0]<<16)|(HEAPU8[$317+3>>0]<<24);
   $319 = ($318|0)==(9);
   $320 = $opnd19;
   $321 = ((($320)) + 4|0);
   if ($319) {
    $322 = HEAPU8[$321>>0]|(HEAPU8[$321+1>>0]<<8)|(HEAPU8[$321+2>>0]<<16)|(HEAPU8[$321+3>>0]<<24);
    $323 = ((($322)) + 4|0);
    $324 = HEAPU8[$323>>0]|(HEAPU8[$323+1>>0]<<8)|(HEAPU8[$323+2>>0]<<16)|(HEAPU8[$323+3>>0]<<24);
    $325 = ((($324)) + 4|0);
    ;HEAP8[$316>>0]=HEAP8[$325>>0]|0;HEAP8[$316+1>>0]=HEAP8[$325+1>>0]|0;HEAP8[$316+2>>0]=HEAP8[$325+2>>0]|0;HEAP8[$316+3>>0]=HEAP8[$325+3>>0]|0;
   } else {
    ;HEAP8[$316>>0]=HEAP8[$321>>0]|0;HEAP8[$316+1>>0]=HEAP8[$321+1>>0]|0;HEAP8[$316+2>>0]=HEAP8[$321+2>>0]|0;HEAP8[$316+3>>0]=HEAP8[$321+3>>0]|0;
   }
   $326 = $opnd210;
   $327 = HEAPU8[$326>>0]|(HEAPU8[$326+1>>0]<<8)|(HEAPU8[$326+2>>0]<<16)|(HEAPU8[$326+3>>0]<<24);
   $328 = ($327|0)==(9);
   $329 = $opnd210;
   if ($328) {
    $330 = ((($329)) + 4|0);
    $331 = HEAPU8[$330>>0]|(HEAPU8[$330+1>>0]<<8)|(HEAPU8[$330+2>>0]<<16)|(HEAPU8[$330+3>>0]<<24);
    $332 = ((($331)) + 4|0);
    $333 = HEAPU8[$332>>0]|(HEAPU8[$332+1>>0]<<8)|(HEAPU8[$332+2>>0]<<16)|(HEAPU8[$332+3>>0]<<24);
    $334 = HEAPU8[$333>>0]|(HEAPU8[$333+1>>0]<<8)|(HEAPU8[$333+2>>0]<<16)|(HEAPU8[$333+3>>0]<<24);
    $336 = $334;
   } else {
    $335 = HEAPU8[$329>>0]|(HEAPU8[$329+1>>0]<<8)|(HEAPU8[$329+2>>0]<<16)|(HEAPU8[$329+3>>0]<<24);
    $336 = $335;
   }
   HEAP8[$opndv27>>0]=$336&255;HEAP8[$opndv27+1>>0]=($336>>8)&255;HEAP8[$opndv27+2>>0]=($336>>16)&255;HEAP8[$opndv27+3>>0]=$336>>24;
   $337 = ((($opndv27)) + 4|0);
   $338 = $opnd210;
   $339 = HEAPU8[$338>>0]|(HEAPU8[$338+1>>0]<<8)|(HEAPU8[$338+2>>0]<<16)|(HEAPU8[$338+3>>0]<<24);
   $340 = ($339|0)==(9);
   $341 = $opnd210;
   $342 = ((($341)) + 4|0);
   if ($340) {
    $343 = HEAPU8[$342>>0]|(HEAPU8[$342+1>>0]<<8)|(HEAPU8[$342+2>>0]<<16)|(HEAPU8[$342+3>>0]<<24);
    $344 = ((($343)) + 4|0);
    $345 = HEAPU8[$344>>0]|(HEAPU8[$344+1>>0]<<8)|(HEAPU8[$344+2>>0]<<16)|(HEAPU8[$344+3>>0]<<24);
    $346 = ((($345)) + 4|0);
    ;HEAP8[$337>>0]=HEAP8[$346>>0]|0;HEAP8[$337+1>>0]=HEAP8[$346+1>>0]|0;HEAP8[$337+2>>0]=HEAP8[$346+2>>0]|0;HEAP8[$337+3>>0]=HEAP8[$346+3>>0]|0;
   } else {
    ;HEAP8[$337>>0]=HEAP8[$342>>0]|0;HEAP8[$337+1>>0]=HEAP8[$342+1>>0]|0;HEAP8[$337+2>>0]=HEAP8[$342+2>>0]|0;HEAP8[$337+3>>0]=HEAP8[$342+3>>0]|0;
   }
   $347 = $val11;
   HEAP8[$347>>0]=2&255;HEAP8[$347+1>>0]=(2>>8)&255;HEAP8[$347+2>>0]=(2>>16)&255;HEAP8[$347+3>>0]=2>>24;
   $348 = HEAPU8[$opndv16>>0]|(HEAPU8[$opndv16+1>>0]<<8)|(HEAPU8[$opndv16+2>>0]<<16)|(HEAPU8[$opndv16+3>>0]<<24);
   $349 = HEAPU8[$opndv27>>0]|(HEAPU8[$opndv27+1>>0]<<8)|(HEAPU8[$opndv27+2>>0]<<16)|(HEAPU8[$opndv27+3>>0]<<24);
   $350 = ($348|0)==($349|0);
   if ($350) {
    $351 = ((($opndv16)) + 4|0);
    $352 = ((($opndv27)) + 4|0);
    $353 = (_mb_memcmp($351,$352,4)|0);
    $354 = ($353|0)==(0);
    $355 = $354&1;
    $356 = $val11;
    $357 = ((($356)) + 4|0);
    HEAP8[$357>>0]=$355&255;HEAP8[$357+1>>0]=($355>>8)&255;HEAP8[$357+2>>0]=($355>>16)&255;HEAP8[$357+3>>0]=$355>>24;
    $364 = $result;
    STACKTOP = sp;return ($364|0);
   } else {
    $358 = HEAPU8[$opndv16>>0]|(HEAPU8[$opndv16+1>>0]<<8)|(HEAPU8[$opndv16+2>>0]<<16)|(HEAPU8[$opndv16+3>>0]<<24);
    $359 = HEAPU8[$opndv27>>0]|(HEAPU8[$opndv27+1>>0]<<8)|(HEAPU8[$opndv27+2>>0]<<16)|(HEAPU8[$opndv27+3>>0]<<24);
    $360 = ($358|0)==($359|0);
    $361 = $360&1;
    $362 = $val11;
    $363 = ((($362)) + 4|0);
    HEAP8[$363>>0]=$361&255;HEAP8[$363+1>>0]=($361>>8)&255;HEAP8[$363+2>>0]=($361>>16)&255;HEAP8[$363+3>>0]=$361>>24;
    $364 = $result;
    STACKTOP = sp;return ($364|0);
   }
  }
 }
 $19 = $1;
 $20 = HEAP32[$19>>2]|0;
 $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
 $22 = (__is_string($21)|0);
 $23 = $22&255;
 $24 = ($23|0)!=(0);
 if ($24) {
  $25 = $1;
  $26 = HEAP32[$25>>2]|0;
  $27 = ((($26)) + 4|0);
  $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
  $29 = (__is_string($28)|0);
  $30 = $29&255;
  $31 = ($30|0)!=(0);
  if ($31) {
   $_str1 = 0;
   $_str2 = 0;
   $32 = $1;
   $33 = HEAP32[$32>>2]|0;
   $tpptr = $33;
   $34 = $tpptr;
   $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
   $opnd1 = $35;
   $36 = $tpptr;
   $37 = ((($36)) + 4|0);
   $38 = HEAPU8[$37>>0]|(HEAPU8[$37+1>>0]<<8)|(HEAPU8[$37+2>>0]<<16)|(HEAPU8[$37+3>>0]<<24);
   $opnd2 = $38;
   $39 = $tpptr;
   $40 = ((($39)) + 8|0);
   $41 = HEAPU8[$40>>0]|(HEAPU8[$40+1>>0]<<8)|(HEAPU8[$40+2>>0]<<16)|(HEAPU8[$40+3>>0]<<24);
   $val = $41;
   $42 = $val;
   HEAP8[$42>>0]=2&255;HEAP8[$42+1>>0]=(2>>8)&255;HEAP8[$42+2>>0]=(2>>16)&255;HEAP8[$42+3>>0]=2>>24;
   $43 = $opnd1;
   $44 = (__extract_string($43)|0);
   $_str1 = $44;
   $45 = $opnd2;
   $46 = (__extract_string($45)|0);
   $_str2 = $46;
   $47 = $_str1;
   $48 = $_str2;
   $49 = (_strcmp($47,$48)|0);
   $50 = ($49|0)==(0);
   $51 = $50&1;
   $52 = $val;
   $53 = ((($52)) + 4|0);
   HEAP8[$53>>0]=$51&255;HEAP8[$53+1>>0]=($51>>8)&255;HEAP8[$53+2>>0]=($51>>16)&255;HEAP8[$53+3>>0]=$51>>24;
   $364 = $result;
   STACKTOP = sp;return ($364|0);
  }
 }
 $54 = $1;
 $55 = HEAP32[$54>>2]|0;
 $56 = HEAPU8[$55>>0]|(HEAPU8[$55+1>>0]<<8)|(HEAPU8[$55+2>>0]<<16)|(HEAPU8[$55+3>>0]<<24);
 $57 = (__is_nil($56)|0);
 $58 = $57&255;
 $59 = ($58|0)!=(0);
 if (!($59)) {
  $60 = $1;
  $61 = HEAP32[$60>>2]|0;
  $62 = ((($61)) + 4|0);
  $63 = HEAPU8[$62>>0]|(HEAPU8[$62+1>>0]<<8)|(HEAPU8[$62+2>>0]<<16)|(HEAPU8[$62+3>>0]<<24);
  $64 = (__is_nil($63)|0);
  $65 = $64&255;
  $66 = ($65|0)!=(0);
  if (!($66)) {
   $76 = $1;
   $77 = HEAP32[$76>>2]|0;
   $78 = ((($77)) + 8|0);
   $79 = HEAPU8[$78>>0]|(HEAPU8[$78+1>>0]<<8)|(HEAPU8[$78+2>>0]<<16)|(HEAPU8[$78+3>>0]<<24);
   $val1 = $79;
   $80 = $val1;
   HEAP8[$80>>0]=2&255;HEAP8[$80+1>>0]=(2>>8)&255;HEAP8[$80+2>>0]=(2>>16)&255;HEAP8[$80+3>>0]=2>>24;
   $81 = $val1;
   $82 = ((($81)) + 4|0);
   HEAP8[$82>>0]=0&255;HEAP8[$82+1>>0]=(0>>8)&255;HEAP8[$82+2>>0]=(0>>16)&255;HEAP8[$82+3>>0]=0>>24;
   $83 = $1;
   $84 = ($83|0)!=(0|0);
   if ($84) {
    $85 = $1;
    $86 = HEAP32[$85>>2]|0;
    $87 = ($86|0)!=(0|0);
    if ($87) {
     $88 = $1;
     $89 = HEAP32[$88>>2]|0;
     $90 = HEAPU8[$89>>0]|(HEAPU8[$89+1>>0]<<8)|(HEAPU8[$89+2>>0]<<16)|(HEAPU8[$89+3>>0]<<24);
     $91 = ($90|0)!=(0|0);
     if ($91) {
      $92 = $0;
      $93 = $0;
      $94 = ((($93)) + 67|0);
      $95 = HEAPU8[$94>>0]|(HEAPU8[$94+1>>0]<<8)|(HEAPU8[$94+2>>0]<<16)|(HEAPU8[$94+3>>0]<<24);
      $96 = (__set_current_error($92,18,$95)|0);
      $97 = ($96<<24>>24)!=(0);
      if (!($97)) {
       $364 = $result;
       STACKTOP = sp;return ($364|0);
      }
      $98 = $0;
      $99 = $1;
      $100 = HEAP32[$99>>2]|0;
      $101 = HEAPU8[$100>>0]|(HEAPU8[$100+1>>0]<<8)|(HEAPU8[$100+2>>0]<<16)|(HEAPU8[$100+3>>0]<<24);
      $102 = ((($101)) + 9|0);
      $103 = HEAPU8[$102>>0]|(HEAPU8[$102+1>>0]<<8)|(HEAPU8[$102+2>>0]<<16)|(HEAPU8[$102+3>>0]<<24);
      $104 = $1;
      $105 = HEAP32[$104>>2]|0;
      $106 = HEAPU8[$105>>0]|(HEAPU8[$105+1>>0]<<8)|(HEAPU8[$105+2>>0]<<16)|(HEAPU8[$105+3>>0]<<24);
      $107 = ((($106)) + 13|0);
      $108 = HEAPU8[$107>>0]|(HEAPU8[$107+1>>0]<<8);
      $109 = $1;
      $110 = HEAP32[$109>>2]|0;
      $111 = HEAPU8[$110>>0]|(HEAPU8[$110+1>>0]<<8)|(HEAPU8[$110+2>>0]<<16)|(HEAPU8[$110+3>>0]<<24);
      $112 = ((($111)) + 15|0);
      $113 = HEAPU8[$112>>0]|(HEAPU8[$112+1>>0]<<8);
      __set_error_pos($98,$103,$108,$113);
      $364 = $result;
      STACKTOP = sp;return ($364|0);
     }
    }
   }
   $114 = $0;
   $115 = $0;
   $116 = ((($115)) + 67|0);
   $117 = HEAPU8[$116>>0]|(HEAPU8[$116+1>>0]<<8)|(HEAPU8[$116+2>>0]<<16)|(HEAPU8[$116+3>>0]<<24);
   $118 = (__set_current_error($114,18,$117)|0);
   $119 = ($118<<24>>24)!=(0);
   if (!($119)) {
    $364 = $result;
    STACKTOP = sp;return ($364|0);
   }
   $120 = $0;
   __set_error_pos($120,0,0,0);
   $364 = $result;
   STACKTOP = sp;return ($364|0);
  }
 }
 $67 = $1;
 $68 = HEAP32[$67>>2]|0;
 $tpr = $68;
 $69 = $tpr;
 $70 = ((($69)) + 8|0);
 $71 = HEAPU8[$70>>0]|(HEAPU8[$70+1>>0]<<8)|(HEAPU8[$70+2>>0]<<16)|(HEAPU8[$70+3>>0]<<24);
 HEAP8[$71>>0]=2&255;HEAP8[$71+1>>0]=(2>>8)&255;HEAP8[$71+2>>0]=(2>>16)&255;HEAP8[$71+3>>0]=2>>24;
 $72 = $tpr;
 $73 = ((($72)) + 8|0);
 $74 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
 $75 = ((($74)) + 4|0);
 HEAP8[$75>>0]=0&255;HEAP8[$75+1>>0]=(0>>8)&255;HEAP8[$75+2>>0]=(0>>16)&255;HEAP8[$75+3>>0]=0>>24;
 $364 = $result;
 STACKTOP = sp;return ($364|0);
}
function __core_less($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0.0, $191 = 0, $192 = 0, $193 = 0.0, $194 = 0, $195 = 0, $196 = 0.0, $197 = 0, $198 = 0, $199 = 0.0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0.0, $213 = 0, $214 = 0, $215 = 0.0, $216 = 0, $217 = 0, $218 = 0.0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0.0, $227 = 0.0, $228 = 0.0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0.0, $234 = 0.0, $235 = 0.0, $236 = 0, $237 = 0, $238 = 0.0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0.0, $247 = 0, $248 = 0.0, $249 = 0, $25 = 0, $250 = 0, $251 = 0.0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0.0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0.0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0;
 var $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0;
 var $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0;
 var $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0;
 var $350 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $_str1 = 0, $_str2 = 0, $opnd1 = 0, $opnd110 = 0, $opnd14 = 0, $opnd2 = 0, $opnd211 = 0, $opnd25 = 0, $opndv1 = 0;
 var $opndv17 = 0, $opndv2 = 0, $opndv28 = 0, $or$cond = 0, $result = 0, $tpptr = 0, $tpptr3 = 0, $tpptr9 = 0, $tpr = 0, $val = 0, $val1 = 0, $val12 = 0, $val2 = 0, $val6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $opndv1 = sp + 131|0;
 $opndv2 = sp + 114|0;
 $opndv17 = sp + 97|0;
 $opndv28 = sp + 80|0;
 $0 = $s;
 $1 = $l;
 $result = 0;
 $tpr = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),15259,(5081|0));
  // unreachable;
 }
 $6 = $1;
 $7 = HEAP32[$6>>2]|0;
 $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
 $9 = (__is_string($8)|0);
 $10 = $9&255;
 $11 = ($10|0)!=(0);
 if (!($11)) {
  $12 = $1;
  $13 = HEAP32[$12>>2]|0;
  $14 = ((($13)) + 4|0);
  $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
  $16 = (__is_string($15)|0);
  $17 = $16&255;
  $18 = ($17|0)!=(0);
  if (!($18)) {
   $107 = $1;
   $108 = HEAP32[$107>>2]|0;
   $109 = HEAPU8[$108>>0]|(HEAPU8[$108+1>>0]<<8)|(HEAPU8[$108+2>>0]<<16)|(HEAPU8[$108+3>>0]<<24);
   $110 = (__is_number($109)|0);
   $111 = $110&255;
   $112 = ($111|0)!=(0);
   if ($112) {
    $113 = $1;
    $114 = HEAP32[$113>>2]|0;
    $115 = ((($114)) + 4|0);
    $116 = HEAPU8[$115>>0]|(HEAPU8[$115+1>>0]<<8)|(HEAPU8[$115+2>>0]<<16)|(HEAPU8[$115+3>>0]<<24);
    $117 = (__is_number($116)|0);
    $118 = $117&255;
    $119 = ($118|0)!=(0);
    if ($119) {
     $120 = $1;
     $121 = HEAP32[$120>>2]|0;
     $tpptr3 = $121;
     $122 = $tpptr3;
     $123 = HEAPU8[$122>>0]|(HEAPU8[$122+1>>0]<<8)|(HEAPU8[$122+2>>0]<<16)|(HEAPU8[$122+3>>0]<<24);
     $opnd14 = $123;
     $124 = $tpptr3;
     $125 = ((($124)) + 4|0);
     $126 = HEAPU8[$125>>0]|(HEAPU8[$125+1>>0]<<8)|(HEAPU8[$125+2>>0]<<16)|(HEAPU8[$125+3>>0]<<24);
     $opnd25 = $126;
     $127 = $tpptr3;
     $128 = ((($127)) + 8|0);
     $129 = HEAPU8[$128>>0]|(HEAPU8[$128+1>>0]<<8)|(HEAPU8[$128+2>>0]<<16)|(HEAPU8[$128+3>>0]<<24);
     $val6 = $129;
     $130 = $opnd14;
     $131 = HEAPU8[$130>>0]|(HEAPU8[$130+1>>0]<<8)|(HEAPU8[$130+2>>0]<<16)|(HEAPU8[$130+3>>0]<<24);
     $132 = ($131|0)==(2);
     if ($132) {
      $143 = 1;
     } else {
      $133 = $opnd14;
      $134 = HEAPU8[$133>>0]|(HEAPU8[$133+1>>0]<<8)|(HEAPU8[$133+2>>0]<<16)|(HEAPU8[$133+3>>0]<<24);
      $135 = ($134|0)==(9);
      if ($135) {
       $136 = $opnd14;
       $137 = ((($136)) + 4|0);
       $138 = HEAPU8[$137>>0]|(HEAPU8[$137+1>>0]<<8)|(HEAPU8[$137+2>>0]<<16)|(HEAPU8[$137+3>>0]<<24);
       $139 = ((($138)) + 4|0);
       $140 = HEAPU8[$139>>0]|(HEAPU8[$139+1>>0]<<8)|(HEAPU8[$139+2>>0]<<16)|(HEAPU8[$139+3>>0]<<24);
       $141 = HEAPU8[$140>>0]|(HEAPU8[$140+1>>0]<<8)|(HEAPU8[$140+2>>0]<<16)|(HEAPU8[$140+3>>0]<<24);
       $142 = ($141|0)==(2);
       $143 = $142;
      } else {
       $143 = 0;
      }
     }
     $144 = $143 ? 2 : 3;
     HEAP8[$opndv1>>0]=$144&255;HEAP8[$opndv1+1>>0]=($144>>8)&255;HEAP8[$opndv1+2>>0]=($144>>16)&255;HEAP8[$opndv1+3>>0]=$144>>24;
     $145 = ((($opndv1)) + 4|0);
     $146 = $opnd14;
     $147 = HEAPU8[$146>>0]|(HEAPU8[$146+1>>0]<<8)|(HEAPU8[$146+2>>0]<<16)|(HEAPU8[$146+3>>0]<<24);
     $148 = ($147|0)==(9);
     $149 = $opnd14;
     $150 = ((($149)) + 4|0);
     if ($148) {
      $151 = HEAPU8[$150>>0]|(HEAPU8[$150+1>>0]<<8)|(HEAPU8[$150+2>>0]<<16)|(HEAPU8[$150+3>>0]<<24);
      $152 = ((($151)) + 4|0);
      $153 = HEAPU8[$152>>0]|(HEAPU8[$152+1>>0]<<8)|(HEAPU8[$152+2>>0]<<16)|(HEAPU8[$152+3>>0]<<24);
      $154 = ((($153)) + 4|0);
      ;HEAP8[$145>>0]=HEAP8[$154>>0]|0;HEAP8[$145+1>>0]=HEAP8[$154+1>>0]|0;HEAP8[$145+2>>0]=HEAP8[$154+2>>0]|0;HEAP8[$145+3>>0]=HEAP8[$154+3>>0]|0;
     } else {
      ;HEAP8[$145>>0]=HEAP8[$150>>0]|0;HEAP8[$145+1>>0]=HEAP8[$150+1>>0]|0;HEAP8[$145+2>>0]=HEAP8[$150+2>>0]|0;HEAP8[$145+3>>0]=HEAP8[$150+3>>0]|0;
     }
     $155 = $opnd25;
     $156 = HEAPU8[$155>>0]|(HEAPU8[$155+1>>0]<<8)|(HEAPU8[$155+2>>0]<<16)|(HEAPU8[$155+3>>0]<<24);
     $157 = ($156|0)==(2);
     if ($157) {
      $168 = 1;
     } else {
      $158 = $opnd25;
      $159 = HEAPU8[$158>>0]|(HEAPU8[$158+1>>0]<<8)|(HEAPU8[$158+2>>0]<<16)|(HEAPU8[$158+3>>0]<<24);
      $160 = ($159|0)==(9);
      if ($160) {
       $161 = $opnd25;
       $162 = ((($161)) + 4|0);
       $163 = HEAPU8[$162>>0]|(HEAPU8[$162+1>>0]<<8)|(HEAPU8[$162+2>>0]<<16)|(HEAPU8[$162+3>>0]<<24);
       $164 = ((($163)) + 4|0);
       $165 = HEAPU8[$164>>0]|(HEAPU8[$164+1>>0]<<8)|(HEAPU8[$164+2>>0]<<16)|(HEAPU8[$164+3>>0]<<24);
       $166 = HEAPU8[$165>>0]|(HEAPU8[$165+1>>0]<<8)|(HEAPU8[$165+2>>0]<<16)|(HEAPU8[$165+3>>0]<<24);
       $167 = ($166|0)==(2);
       $168 = $167;
      } else {
       $168 = 0;
      }
     }
     $169 = $168 ? 2 : 3;
     HEAP8[$opndv2>>0]=$169&255;HEAP8[$opndv2+1>>0]=($169>>8)&255;HEAP8[$opndv2+2>>0]=($169>>16)&255;HEAP8[$opndv2+3>>0]=$169>>24;
     $170 = ((($opndv2)) + 4|0);
     $171 = $opnd25;
     $172 = HEAPU8[$171>>0]|(HEAPU8[$171+1>>0]<<8)|(HEAPU8[$171+2>>0]<<16)|(HEAPU8[$171+3>>0]<<24);
     $173 = ($172|0)==(9);
     $174 = $opnd25;
     $175 = ((($174)) + 4|0);
     if ($173) {
      $176 = HEAPU8[$175>>0]|(HEAPU8[$175+1>>0]<<8)|(HEAPU8[$175+2>>0]<<16)|(HEAPU8[$175+3>>0]<<24);
      $177 = ((($176)) + 4|0);
      $178 = HEAPU8[$177>>0]|(HEAPU8[$177+1>>0]<<8)|(HEAPU8[$177+2>>0]<<16)|(HEAPU8[$177+3>>0]<<24);
      $179 = ((($178)) + 4|0);
      ;HEAP8[$170>>0]=HEAP8[$179>>0]|0;HEAP8[$170+1>>0]=HEAP8[$179+1>>0]|0;HEAP8[$170+2>>0]=HEAP8[$179+2>>0]|0;HEAP8[$170+3>>0]=HEAP8[$179+3>>0]|0;
     } else {
      ;HEAP8[$170>>0]=HEAP8[$175>>0]|0;HEAP8[$170+1>>0]=HEAP8[$175+1>>0]|0;HEAP8[$170+2>>0]=HEAP8[$175+2>>0]|0;HEAP8[$170+3>>0]=HEAP8[$175+3>>0]|0;
     }
     $180 = HEAPU8[$opndv1>>0]|(HEAPU8[$opndv1+1>>0]<<8)|(HEAPU8[$opndv1+2>>0]<<16)|(HEAPU8[$opndv1+3>>0]<<24);
     $181 = ($180|0)==(2);
     do {
      if ($181) {
       $182 = HEAPU8[$opndv2>>0]|(HEAPU8[$opndv2+1>>0]<<8)|(HEAPU8[$opndv2+2>>0]<<16)|(HEAPU8[$opndv2+3>>0]<<24);
       $183 = ($182|0)==(2);
       if ($183) {
        $184 = ((($opndv1)) + 4|0);
        $185 = HEAPU8[$184>>0]|(HEAPU8[$184+1>>0]<<8)|(HEAPU8[$184+2>>0]<<16)|(HEAPU8[$184+3>>0]<<24);
        $186 = ((($opndv2)) + 4|0);
        $187 = HEAPU8[$186>>0]|(HEAPU8[$186+1>>0]<<8)|(HEAPU8[$186+2>>0]<<16)|(HEAPU8[$186+3>>0]<<24);
        $188 = ($185|0)<($187|0);
        $189 = $188&1;
        $190 = (+($189|0));
        $191 = ((($opndv1)) + 4|0);
        $192 = HEAPU8[$191>>0]|(HEAPU8[$191+1>>0]<<8)|(HEAPU8[$191+2>>0]<<16)|(HEAPU8[$191+3>>0]<<24);
        $193 = (+($192|0));
        $194 = ((($opndv2)) + 4|0);
        $195 = HEAPU8[$194>>0]|(HEAPU8[$194+1>>0]<<8)|(HEAPU8[$194+2>>0]<<16)|(HEAPU8[$194+3>>0]<<24);
        $196 = (+($195|0));
        $197 = $193 < $196;
        $198 = $197&1;
        $199 = (+($198|0));
        $200 = $190 == $199;
        $201 = $val6;
        if ($200) {
         HEAP8[$201>>0]=2&255;HEAP8[$201+1>>0]=(2>>8)&255;HEAP8[$201+2>>0]=(2>>16)&255;HEAP8[$201+3>>0]=2>>24;
         $202 = ((($opndv1)) + 4|0);
         $203 = HEAPU8[$202>>0]|(HEAPU8[$202+1>>0]<<8)|(HEAPU8[$202+2>>0]<<16)|(HEAPU8[$202+3>>0]<<24);
         $204 = ((($opndv2)) + 4|0);
         $205 = HEAPU8[$204>>0]|(HEAPU8[$204+1>>0]<<8)|(HEAPU8[$204+2>>0]<<16)|(HEAPU8[$204+3>>0]<<24);
         $206 = ($203|0)<($205|0);
         $207 = $206&1;
         $208 = $val6;
         $209 = ((($208)) + 4|0);
         HEAP8[$209>>0]=$207&255;HEAP8[$209+1>>0]=($207>>8)&255;HEAP8[$209+2>>0]=($207>>16)&255;HEAP8[$209+3>>0]=$207>>24;
         break;
        } else {
         HEAP8[$201>>0]=3&255;HEAP8[$201+1>>0]=(3>>8)&255;HEAP8[$201+2>>0]=(3>>16)&255;HEAP8[$201+3>>0]=3>>24;
         $210 = ((($opndv1)) + 4|0);
         $211 = HEAPU8[$210>>0]|(HEAPU8[$210+1>>0]<<8)|(HEAPU8[$210+2>>0]<<16)|(HEAPU8[$210+3>>0]<<24);
         $212 = (+($211|0));
         $213 = ((($opndv2)) + 4|0);
         $214 = HEAPU8[$213>>0]|(HEAPU8[$213+1>>0]<<8)|(HEAPU8[$213+2>>0]<<16)|(HEAPU8[$213+3>>0]<<24);
         $215 = (+($214|0));
         $216 = $212 < $215;
         $217 = $216&1;
         $218 = (+($217|0));
         $219 = $val6;
         $220 = ((($219)) + 4|0);
         HEAPF32[tempDoublePtr>>2]=$218;HEAP8[$220>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$220+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$220+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$220+3>>0]=HEAP8[tempDoublePtr+3>>0];
         break;
        }
       } else {
        label = 37;
       }
      } else {
       label = 37;
      }
     } while(0);
     if ((label|0) == 37) {
      $221 = $val6;
      HEAP8[$221>>0]=3&255;HEAP8[$221+1>>0]=(3>>8)&255;HEAP8[$221+2>>0]=(3>>16)&255;HEAP8[$221+3>>0]=3>>24;
      $222 = HEAPU8[$opndv1>>0]|(HEAPU8[$opndv1+1>>0]<<8)|(HEAPU8[$opndv1+2>>0]<<16)|(HEAPU8[$opndv1+3>>0]<<24);
      $223 = ($222|0)==(2);
      $224 = ((($opndv1)) + 4|0);
      $225 = HEAPU8[$224>>0]|(HEAPU8[$224+1>>0]<<8)|(HEAPU8[$224+2>>0]<<16)|(HEAPU8[$224+3>>0]<<24);
      $226 = (+($225|0));
      HEAP8[tempDoublePtr>>0]=HEAP8[$224>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$224+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$224+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$224+3>>0];$227 = +HEAPF32[tempDoublePtr>>2];
      $228 = $223 ? $226 : $227;
      $229 = HEAPU8[$opndv2>>0]|(HEAPU8[$opndv2+1>>0]<<8)|(HEAPU8[$opndv2+2>>0]<<16)|(HEAPU8[$opndv2+3>>0]<<24);
      $230 = ($229|0)==(2);
      $231 = ((($opndv2)) + 4|0);
      $232 = HEAPU8[$231>>0]|(HEAPU8[$231+1>>0]<<8)|(HEAPU8[$231+2>>0]<<16)|(HEAPU8[$231+3>>0]<<24);
      $233 = (+($232|0));
      HEAP8[tempDoublePtr>>0]=HEAP8[$231>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$231+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$231+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$231+3>>0];$234 = +HEAPF32[tempDoublePtr>>2];
      $235 = $230 ? $233 : $234;
      $236 = $228 < $235;
      $237 = $236&1;
      $238 = (+($237|0));
      $239 = $val6;
      $240 = ((($239)) + 4|0);
      HEAPF32[tempDoublePtr>>2]=$238;HEAP8[$240>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$240+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$240+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$240+3>>0]=HEAP8[tempDoublePtr+3>>0];
     }
     $241 = $val6;
     $242 = HEAPU8[$241>>0]|(HEAPU8[$241+1>>0]<<8)|(HEAPU8[$241+2>>0]<<16)|(HEAPU8[$241+3>>0]<<24);
     $243 = ($242|0)==(3);
     if ($243) {
      $244 = $val6;
      $245 = ((($244)) + 4|0);
      HEAP8[tempDoublePtr>>0]=HEAP8[$245>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$245+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$245+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$245+3>>0];$246 = +HEAPF32[tempDoublePtr>>2];
      $247 = (~~(($246)));
      $248 = (+($247|0));
      $249 = $val6;
      $250 = ((($249)) + 4|0);
      HEAP8[tempDoublePtr>>0]=HEAP8[$250>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$250+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$250+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$250+3>>0];$251 = +HEAPF32[tempDoublePtr>>2];
      $252 = $248 == $251;
      if ($252) {
       $253 = $val6;
       HEAP8[$253>>0]=2&255;HEAP8[$253+1>>0]=(2>>8)&255;HEAP8[$253+2>>0]=(2>>16)&255;HEAP8[$253+3>>0]=2>>24;
       $254 = $val6;
       $255 = ((($254)) + 4|0);
       HEAP8[tempDoublePtr>>0]=HEAP8[$255>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$255+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$255+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$255+3>>0];$256 = +HEAPF32[tempDoublePtr>>2];
       $257 = (~~(($256)));
       $258 = $val6;
       $259 = ((($258)) + 4|0);
       HEAP8[$259>>0]=$257&255;HEAP8[$259+1>>0]=($257>>8)&255;HEAP8[$259+2>>0]=($257>>16)&255;HEAP8[$259+3>>0]=$257>>24;
      }
     }
     $260 = $1;
     $261 = HEAP32[$260>>2]|0;
     $tpr = $261;
     $262 = $tpr;
     $263 = ((($262)) + 8|0);
     $264 = HEAPU8[$263>>0]|(HEAPU8[$263+1>>0]<<8)|(HEAPU8[$263+2>>0]<<16)|(HEAPU8[$263+3>>0]<<24);
     $265 = HEAPU8[$264>>0]|(HEAPU8[$264+1>>0]<<8)|(HEAPU8[$264+2>>0]<<16)|(HEAPU8[$264+3>>0]<<24);
     $266 = ($265|0)!=(2);
     if (!($266)) {
      $350 = $result;
      STACKTOP = sp;return ($350|0);
     }
     $267 = $tpr;
     $268 = ((($267)) + 8|0);
     $269 = HEAPU8[$268>>0]|(HEAPU8[$268+1>>0]<<8)|(HEAPU8[$268+2>>0]<<16)|(HEAPU8[$268+3>>0]<<24);
     HEAP8[$269>>0]=2&255;HEAP8[$269+1>>0]=(2>>8)&255;HEAP8[$269+2>>0]=(2>>16)&255;HEAP8[$269+3>>0]=2>>24;
     $270 = $tpr;
     $271 = ((($270)) + 8|0);
     $272 = HEAPU8[$271>>0]|(HEAPU8[$271+1>>0]<<8)|(HEAPU8[$271+2>>0]<<16)|(HEAPU8[$271+3>>0]<<24);
     $273 = ((($272)) + 4|0);
     HEAP8[tempDoublePtr>>0]=HEAP8[$273>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$273+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$273+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$273+3>>0];$274 = +HEAPF32[tempDoublePtr>>2];
     $275 = $274 != 0.0;
     $276 = $275&1;
     $277 = $tpr;
     $278 = ((($277)) + 8|0);
     $279 = HEAPU8[$278>>0]|(HEAPU8[$278+1>>0]<<8)|(HEAPU8[$278+2>>0]<<16)|(HEAPU8[$278+3>>0]<<24);
     $280 = ((($279)) + 4|0);
     HEAP8[$280>>0]=$276&255;HEAP8[$280+1>>0]=($276>>8)&255;HEAP8[$280+2>>0]=($276>>16)&255;HEAP8[$280+3>>0]=$276>>24;
     $350 = $result;
     STACKTOP = sp;return ($350|0);
    }
   }
   $281 = $1;
   $282 = HEAP32[$281>>2]|0;
   $tpptr9 = $282;
   $283 = $tpptr9;
   $284 = HEAPU8[$283>>0]|(HEAPU8[$283+1>>0]<<8)|(HEAPU8[$283+2>>0]<<16)|(HEAPU8[$283+3>>0]<<24);
   $opnd110 = $284;
   $285 = $tpptr9;
   $286 = ((($285)) + 4|0);
   $287 = HEAPU8[$286>>0]|(HEAPU8[$286+1>>0]<<8)|(HEAPU8[$286+2>>0]<<16)|(HEAPU8[$286+3>>0]<<24);
   $opnd211 = $287;
   $288 = $tpptr9;
   $289 = ((($288)) + 8|0);
   $290 = HEAPU8[$289>>0]|(HEAPU8[$289+1>>0]<<8)|(HEAPU8[$289+2>>0]<<16)|(HEAPU8[$289+3>>0]<<24);
   $val12 = $290;
   $291 = $opnd110;
   $292 = HEAPU8[$291>>0]|(HEAPU8[$291+1>>0]<<8)|(HEAPU8[$291+2>>0]<<16)|(HEAPU8[$291+3>>0]<<24);
   $293 = ($292|0)==(9);
   $294 = $opnd110;
   if ($293) {
    $295 = ((($294)) + 4|0);
    $296 = HEAPU8[$295>>0]|(HEAPU8[$295+1>>0]<<8)|(HEAPU8[$295+2>>0]<<16)|(HEAPU8[$295+3>>0]<<24);
    $297 = ((($296)) + 4|0);
    $298 = HEAPU8[$297>>0]|(HEAPU8[$297+1>>0]<<8)|(HEAPU8[$297+2>>0]<<16)|(HEAPU8[$297+3>>0]<<24);
    $299 = HEAPU8[$298>>0]|(HEAPU8[$298+1>>0]<<8)|(HEAPU8[$298+2>>0]<<16)|(HEAPU8[$298+3>>0]<<24);
    $301 = $299;
   } else {
    $300 = HEAPU8[$294>>0]|(HEAPU8[$294+1>>0]<<8)|(HEAPU8[$294+2>>0]<<16)|(HEAPU8[$294+3>>0]<<24);
    $301 = $300;
   }
   HEAP8[$opndv17>>0]=$301&255;HEAP8[$opndv17+1>>0]=($301>>8)&255;HEAP8[$opndv17+2>>0]=($301>>16)&255;HEAP8[$opndv17+3>>0]=$301>>24;
   $302 = ((($opndv17)) + 4|0);
   $303 = $opnd110;
   $304 = HEAPU8[$303>>0]|(HEAPU8[$303+1>>0]<<8)|(HEAPU8[$303+2>>0]<<16)|(HEAPU8[$303+3>>0]<<24);
   $305 = ($304|0)==(9);
   $306 = $opnd110;
   $307 = ((($306)) + 4|0);
   if ($305) {
    $308 = HEAPU8[$307>>0]|(HEAPU8[$307+1>>0]<<8)|(HEAPU8[$307+2>>0]<<16)|(HEAPU8[$307+3>>0]<<24);
    $309 = ((($308)) + 4|0);
    $310 = HEAPU8[$309>>0]|(HEAPU8[$309+1>>0]<<8)|(HEAPU8[$309+2>>0]<<16)|(HEAPU8[$309+3>>0]<<24);
    $311 = ((($310)) + 4|0);
    ;HEAP8[$302>>0]=HEAP8[$311>>0]|0;HEAP8[$302+1>>0]=HEAP8[$311+1>>0]|0;HEAP8[$302+2>>0]=HEAP8[$311+2>>0]|0;HEAP8[$302+3>>0]=HEAP8[$311+3>>0]|0;
   } else {
    ;HEAP8[$302>>0]=HEAP8[$307>>0]|0;HEAP8[$302+1>>0]=HEAP8[$307+1>>0]|0;HEAP8[$302+2>>0]=HEAP8[$307+2>>0]|0;HEAP8[$302+3>>0]=HEAP8[$307+3>>0]|0;
   }
   $312 = $opnd211;
   $313 = HEAPU8[$312>>0]|(HEAPU8[$312+1>>0]<<8)|(HEAPU8[$312+2>>0]<<16)|(HEAPU8[$312+3>>0]<<24);
   $314 = ($313|0)==(9);
   $315 = $opnd211;
   if ($314) {
    $316 = ((($315)) + 4|0);
    $317 = HEAPU8[$316>>0]|(HEAPU8[$316+1>>0]<<8)|(HEAPU8[$316+2>>0]<<16)|(HEAPU8[$316+3>>0]<<24);
    $318 = ((($317)) + 4|0);
    $319 = HEAPU8[$318>>0]|(HEAPU8[$318+1>>0]<<8)|(HEAPU8[$318+2>>0]<<16)|(HEAPU8[$318+3>>0]<<24);
    $320 = HEAPU8[$319>>0]|(HEAPU8[$319+1>>0]<<8)|(HEAPU8[$319+2>>0]<<16)|(HEAPU8[$319+3>>0]<<24);
    $322 = $320;
   } else {
    $321 = HEAPU8[$315>>0]|(HEAPU8[$315+1>>0]<<8)|(HEAPU8[$315+2>>0]<<16)|(HEAPU8[$315+3>>0]<<24);
    $322 = $321;
   }
   HEAP8[$opndv28>>0]=$322&255;HEAP8[$opndv28+1>>0]=($322>>8)&255;HEAP8[$opndv28+2>>0]=($322>>16)&255;HEAP8[$opndv28+3>>0]=$322>>24;
   $323 = ((($opndv28)) + 4|0);
   $324 = $opnd211;
   $325 = HEAPU8[$324>>0]|(HEAPU8[$324+1>>0]<<8)|(HEAPU8[$324+2>>0]<<16)|(HEAPU8[$324+3>>0]<<24);
   $326 = ($325|0)==(9);
   $327 = $opnd211;
   $328 = ((($327)) + 4|0);
   if ($326) {
    $329 = HEAPU8[$328>>0]|(HEAPU8[$328+1>>0]<<8)|(HEAPU8[$328+2>>0]<<16)|(HEAPU8[$328+3>>0]<<24);
    $330 = ((($329)) + 4|0);
    $331 = HEAPU8[$330>>0]|(HEAPU8[$330+1>>0]<<8)|(HEAPU8[$330+2>>0]<<16)|(HEAPU8[$330+3>>0]<<24);
    $332 = ((($331)) + 4|0);
    ;HEAP8[$323>>0]=HEAP8[$332>>0]|0;HEAP8[$323+1>>0]=HEAP8[$332+1>>0]|0;HEAP8[$323+2>>0]=HEAP8[$332+2>>0]|0;HEAP8[$323+3>>0]=HEAP8[$332+3>>0]|0;
   } else {
    ;HEAP8[$323>>0]=HEAP8[$328>>0]|0;HEAP8[$323+1>>0]=HEAP8[$328+1>>0]|0;HEAP8[$323+2>>0]=HEAP8[$328+2>>0]|0;HEAP8[$323+3>>0]=HEAP8[$328+3>>0]|0;
   }
   $333 = $val12;
   HEAP8[$333>>0]=2&255;HEAP8[$333+1>>0]=(2>>8)&255;HEAP8[$333+2>>0]=(2>>16)&255;HEAP8[$333+3>>0]=2>>24;
   $334 = HEAPU8[$opndv17>>0]|(HEAPU8[$opndv17+1>>0]<<8)|(HEAPU8[$opndv17+2>>0]<<16)|(HEAPU8[$opndv17+3>>0]<<24);
   $335 = HEAPU8[$opndv28>>0]|(HEAPU8[$opndv28+1>>0]<<8)|(HEAPU8[$opndv28+2>>0]<<16)|(HEAPU8[$opndv28+3>>0]<<24);
   $336 = ($334|0)==($335|0);
   if ($336) {
    $337 = ((($opndv17)) + 4|0);
    $338 = ((($opndv28)) + 4|0);
    $339 = (_mb_memcmp($337,$338,4)|0);
    $340 = ($339|0)<(0);
    $341 = $340&1;
    $342 = $val12;
    $343 = ((($342)) + 4|0);
    HEAP8[$343>>0]=$341&255;HEAP8[$343+1>>0]=($341>>8)&255;HEAP8[$343+2>>0]=($341>>16)&255;HEAP8[$343+3>>0]=$341>>24;
    $350 = $result;
    STACKTOP = sp;return ($350|0);
   } else {
    $344 = HEAPU8[$opndv17>>0]|(HEAPU8[$opndv17+1>>0]<<8)|(HEAPU8[$opndv17+2>>0]<<16)|(HEAPU8[$opndv17+3>>0]<<24);
    $345 = HEAPU8[$opndv28>>0]|(HEAPU8[$opndv28+1>>0]<<8)|(HEAPU8[$opndv28+2>>0]<<16)|(HEAPU8[$opndv28+3>>0]<<24);
    $346 = ($344|0)<($345|0);
    $347 = $346&1;
    $348 = $val12;
    $349 = ((($348)) + 4|0);
    HEAP8[$349>>0]=$347&255;HEAP8[$349+1>>0]=($347>>8)&255;HEAP8[$349+2>>0]=($347>>16)&255;HEAP8[$349+3>>0]=$347>>24;
    $350 = $result;
    STACKTOP = sp;return ($350|0);
   }
  }
 }
 $19 = $1;
 $20 = HEAP32[$19>>2]|0;
 $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
 $22 = (__is_string($21)|0);
 $23 = $22&255;
 $24 = ($23|0)!=(0);
 if ($24) {
  $25 = $1;
  $26 = HEAP32[$25>>2]|0;
  $27 = ((($26)) + 4|0);
  $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
  $29 = (__is_string($28)|0);
  $30 = $29&255;
  $31 = ($30|0)!=(0);
  if ($31) {
   $_str1 = 0;
   $_str2 = 0;
   $32 = $1;
   $33 = HEAP32[$32>>2]|0;
   $tpptr = $33;
   $34 = $tpptr;
   $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
   $opnd1 = $35;
   $36 = $tpptr;
   $37 = ((($36)) + 4|0);
   $38 = HEAPU8[$37>>0]|(HEAPU8[$37+1>>0]<<8)|(HEAPU8[$37+2>>0]<<16)|(HEAPU8[$37+3>>0]<<24);
   $opnd2 = $38;
   $39 = $tpptr;
   $40 = ((($39)) + 8|0);
   $41 = HEAPU8[$40>>0]|(HEAPU8[$40+1>>0]<<8)|(HEAPU8[$40+2>>0]<<16)|(HEAPU8[$40+3>>0]<<24);
   $val = $41;
   $42 = $val;
   HEAP8[$42>>0]=2&255;HEAP8[$42+1>>0]=(2>>8)&255;HEAP8[$42+2>>0]=(2>>16)&255;HEAP8[$42+3>>0]=2>>24;
   $43 = $opnd1;
   $44 = (__extract_string($43)|0);
   $_str1 = $44;
   $45 = $opnd2;
   $46 = (__extract_string($45)|0);
   $_str2 = $46;
   $47 = $_str1;
   $48 = $_str2;
   $49 = (_strcmp($47,$48)|0);
   $50 = ($49|0)<(0);
   $51 = $50&1;
   $52 = $val;
   $53 = ((($52)) + 4|0);
   HEAP8[$53>>0]=$51&255;HEAP8[$53+1>>0]=($51>>8)&255;HEAP8[$53+2>>0]=($51>>16)&255;HEAP8[$53+3>>0]=$51>>24;
   $350 = $result;
   STACKTOP = sp;return ($350|0);
  }
 }
 $54 = $1;
 $55 = HEAP32[$54>>2]|0;
 $56 = HEAPU8[$55>>0]|(HEAPU8[$55+1>>0]<<8)|(HEAPU8[$55+2>>0]<<16)|(HEAPU8[$55+3>>0]<<24);
 $57 = (__is_string($56)|0);
 $58 = ($57<<24>>24)!=(0);
 $59 = $1;
 $60 = HEAP32[$59>>2]|0;
 $61 = ((($60)) + 8|0);
 $62 = HEAPU8[$61>>0]|(HEAPU8[$61+1>>0]<<8)|(HEAPU8[$61+2>>0]<<16)|(HEAPU8[$61+3>>0]<<24);
 if ($58) {
  $val1 = $62;
  $63 = $val1;
  HEAP8[$63>>0]=2&255;HEAP8[$63+1>>0]=(2>>8)&255;HEAP8[$63+2>>0]=(2>>16)&255;HEAP8[$63+3>>0]=2>>24;
  $64 = $val1;
  $65 = ((($64)) + 4|0);
  HEAP8[$65>>0]=0&255;HEAP8[$65+1>>0]=(0>>8)&255;HEAP8[$65+2>>0]=(0>>16)&255;HEAP8[$65+3>>0]=0>>24;
 } else {
  $val2 = $62;
  $66 = $val2;
  HEAP8[$66>>0]=2&255;HEAP8[$66+1>>0]=(2>>8)&255;HEAP8[$66+2>>0]=(2>>16)&255;HEAP8[$66+3>>0]=2>>24;
  $67 = $val2;
  $68 = ((($67)) + 4|0);
  HEAP8[$68>>0]=1&255;HEAP8[$68+1>>0]=(1>>8)&255;HEAP8[$68+2>>0]=(1>>16)&255;HEAP8[$68+3>>0]=1>>24;
 }
 $69 = $1;
 $70 = ($69|0)!=(0|0);
 if ($70) {
  $71 = $1;
  $72 = HEAP32[$71>>2]|0;
  $73 = ($72|0)!=(0|0);
  if ($73) {
   $74 = $1;
   $75 = HEAP32[$74>>2]|0;
   $76 = HEAPU8[$75>>0]|(HEAPU8[$75+1>>0]<<8)|(HEAPU8[$75+2>>0]<<16)|(HEAPU8[$75+3>>0]<<24);
   $77 = ($76|0)!=(0|0);
   if ($77) {
    $78 = $0;
    $79 = $0;
    $80 = ((($79)) + 67|0);
    $81 = HEAPU8[$80>>0]|(HEAPU8[$80+1>>0]<<8)|(HEAPU8[$80+2>>0]<<16)|(HEAPU8[$80+3>>0]<<24);
    $82 = (__set_current_error($78,18,$81)|0);
    $83 = ($82<<24>>24)!=(0);
    if (!($83)) {
     $350 = $result;
     STACKTOP = sp;return ($350|0);
    }
    $84 = $0;
    $85 = $1;
    $86 = HEAP32[$85>>2]|0;
    $87 = HEAPU8[$86>>0]|(HEAPU8[$86+1>>0]<<8)|(HEAPU8[$86+2>>0]<<16)|(HEAPU8[$86+3>>0]<<24);
    $88 = ((($87)) + 9|0);
    $89 = HEAPU8[$88>>0]|(HEAPU8[$88+1>>0]<<8)|(HEAPU8[$88+2>>0]<<16)|(HEAPU8[$88+3>>0]<<24);
    $90 = $1;
    $91 = HEAP32[$90>>2]|0;
    $92 = HEAPU8[$91>>0]|(HEAPU8[$91+1>>0]<<8)|(HEAPU8[$91+2>>0]<<16)|(HEAPU8[$91+3>>0]<<24);
    $93 = ((($92)) + 13|0);
    $94 = HEAPU8[$93>>0]|(HEAPU8[$93+1>>0]<<8);
    $95 = $1;
    $96 = HEAP32[$95>>2]|0;
    $97 = HEAPU8[$96>>0]|(HEAPU8[$96+1>>0]<<8)|(HEAPU8[$96+2>>0]<<16)|(HEAPU8[$96+3>>0]<<24);
    $98 = ((($97)) + 15|0);
    $99 = HEAPU8[$98>>0]|(HEAPU8[$98+1>>0]<<8);
    __set_error_pos($84,$89,$94,$99);
    $350 = $result;
    STACKTOP = sp;return ($350|0);
   }
  }
 }
 $100 = $0;
 $101 = $0;
 $102 = ((($101)) + 67|0);
 $103 = HEAPU8[$102>>0]|(HEAPU8[$102+1>>0]<<8)|(HEAPU8[$102+2>>0]<<16)|(HEAPU8[$102+3>>0]<<24);
 $104 = (__set_current_error($100,18,$103)|0);
 $105 = ($104<<24>>24)!=(0);
 if (!($105)) {
  $350 = $result;
  STACKTOP = sp;return ($350|0);
 }
 $106 = $0;
 __set_error_pos($106,0,0,0);
 $350 = $result;
 STACKTOP = sp;return ($350|0);
}
function __core_greater($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0.0, $191 = 0, $192 = 0, $193 = 0.0, $194 = 0, $195 = 0, $196 = 0.0, $197 = 0, $198 = 0, $199 = 0.0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0.0, $213 = 0, $214 = 0, $215 = 0.0, $216 = 0, $217 = 0, $218 = 0.0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0.0, $227 = 0.0, $228 = 0.0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0.0, $234 = 0.0, $235 = 0.0, $236 = 0, $237 = 0, $238 = 0.0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0.0, $247 = 0, $248 = 0.0, $249 = 0, $25 = 0, $250 = 0, $251 = 0.0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0.0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0.0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0;
 var $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0;
 var $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0;
 var $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0;
 var $350 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $_str1 = 0, $_str2 = 0, $opnd1 = 0, $opnd110 = 0, $opnd14 = 0, $opnd2 = 0, $opnd211 = 0, $opnd25 = 0, $opndv1 = 0;
 var $opndv17 = 0, $opndv2 = 0, $opndv28 = 0, $or$cond = 0, $result = 0, $tpptr = 0, $tpptr3 = 0, $tpptr9 = 0, $tpr = 0, $val = 0, $val1 = 0, $val12 = 0, $val2 = 0, $val6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $opndv1 = sp + 131|0;
 $opndv2 = sp + 114|0;
 $opndv17 = sp + 97|0;
 $opndv28 = sp + 80|0;
 $0 = $s;
 $1 = $l;
 $result = 0;
 $tpr = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),15292,(5067|0));
  // unreachable;
 }
 $6 = $1;
 $7 = HEAP32[$6>>2]|0;
 $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
 $9 = (__is_string($8)|0);
 $10 = $9&255;
 $11 = ($10|0)!=(0);
 if (!($11)) {
  $12 = $1;
  $13 = HEAP32[$12>>2]|0;
  $14 = ((($13)) + 4|0);
  $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
  $16 = (__is_string($15)|0);
  $17 = $16&255;
  $18 = ($17|0)!=(0);
  if (!($18)) {
   $107 = $1;
   $108 = HEAP32[$107>>2]|0;
   $109 = HEAPU8[$108>>0]|(HEAPU8[$108+1>>0]<<8)|(HEAPU8[$108+2>>0]<<16)|(HEAPU8[$108+3>>0]<<24);
   $110 = (__is_number($109)|0);
   $111 = $110&255;
   $112 = ($111|0)!=(0);
   if ($112) {
    $113 = $1;
    $114 = HEAP32[$113>>2]|0;
    $115 = ((($114)) + 4|0);
    $116 = HEAPU8[$115>>0]|(HEAPU8[$115+1>>0]<<8)|(HEAPU8[$115+2>>0]<<16)|(HEAPU8[$115+3>>0]<<24);
    $117 = (__is_number($116)|0);
    $118 = $117&255;
    $119 = ($118|0)!=(0);
    if ($119) {
     $120 = $1;
     $121 = HEAP32[$120>>2]|0;
     $tpptr3 = $121;
     $122 = $tpptr3;
     $123 = HEAPU8[$122>>0]|(HEAPU8[$122+1>>0]<<8)|(HEAPU8[$122+2>>0]<<16)|(HEAPU8[$122+3>>0]<<24);
     $opnd14 = $123;
     $124 = $tpptr3;
     $125 = ((($124)) + 4|0);
     $126 = HEAPU8[$125>>0]|(HEAPU8[$125+1>>0]<<8)|(HEAPU8[$125+2>>0]<<16)|(HEAPU8[$125+3>>0]<<24);
     $opnd25 = $126;
     $127 = $tpptr3;
     $128 = ((($127)) + 8|0);
     $129 = HEAPU8[$128>>0]|(HEAPU8[$128+1>>0]<<8)|(HEAPU8[$128+2>>0]<<16)|(HEAPU8[$128+3>>0]<<24);
     $val6 = $129;
     $130 = $opnd14;
     $131 = HEAPU8[$130>>0]|(HEAPU8[$130+1>>0]<<8)|(HEAPU8[$130+2>>0]<<16)|(HEAPU8[$130+3>>0]<<24);
     $132 = ($131|0)==(2);
     if ($132) {
      $143 = 1;
     } else {
      $133 = $opnd14;
      $134 = HEAPU8[$133>>0]|(HEAPU8[$133+1>>0]<<8)|(HEAPU8[$133+2>>0]<<16)|(HEAPU8[$133+3>>0]<<24);
      $135 = ($134|0)==(9);
      if ($135) {
       $136 = $opnd14;
       $137 = ((($136)) + 4|0);
       $138 = HEAPU8[$137>>0]|(HEAPU8[$137+1>>0]<<8)|(HEAPU8[$137+2>>0]<<16)|(HEAPU8[$137+3>>0]<<24);
       $139 = ((($138)) + 4|0);
       $140 = HEAPU8[$139>>0]|(HEAPU8[$139+1>>0]<<8)|(HEAPU8[$139+2>>0]<<16)|(HEAPU8[$139+3>>0]<<24);
       $141 = HEAPU8[$140>>0]|(HEAPU8[$140+1>>0]<<8)|(HEAPU8[$140+2>>0]<<16)|(HEAPU8[$140+3>>0]<<24);
       $142 = ($141|0)==(2);
       $143 = $142;
      } else {
       $143 = 0;
      }
     }
     $144 = $143 ? 2 : 3;
     HEAP8[$opndv1>>0]=$144&255;HEAP8[$opndv1+1>>0]=($144>>8)&255;HEAP8[$opndv1+2>>0]=($144>>16)&255;HEAP8[$opndv1+3>>0]=$144>>24;
     $145 = ((($opndv1)) + 4|0);
     $146 = $opnd14;
     $147 = HEAPU8[$146>>0]|(HEAPU8[$146+1>>0]<<8)|(HEAPU8[$146+2>>0]<<16)|(HEAPU8[$146+3>>0]<<24);
     $148 = ($147|0)==(9);
     $149 = $opnd14;
     $150 = ((($149)) + 4|0);
     if ($148) {
      $151 = HEAPU8[$150>>0]|(HEAPU8[$150+1>>0]<<8)|(HEAPU8[$150+2>>0]<<16)|(HEAPU8[$150+3>>0]<<24);
      $152 = ((($151)) + 4|0);
      $153 = HEAPU8[$152>>0]|(HEAPU8[$152+1>>0]<<8)|(HEAPU8[$152+2>>0]<<16)|(HEAPU8[$152+3>>0]<<24);
      $154 = ((($153)) + 4|0);
      ;HEAP8[$145>>0]=HEAP8[$154>>0]|0;HEAP8[$145+1>>0]=HEAP8[$154+1>>0]|0;HEAP8[$145+2>>0]=HEAP8[$154+2>>0]|0;HEAP8[$145+3>>0]=HEAP8[$154+3>>0]|0;
     } else {
      ;HEAP8[$145>>0]=HEAP8[$150>>0]|0;HEAP8[$145+1>>0]=HEAP8[$150+1>>0]|0;HEAP8[$145+2>>0]=HEAP8[$150+2>>0]|0;HEAP8[$145+3>>0]=HEAP8[$150+3>>0]|0;
     }
     $155 = $opnd25;
     $156 = HEAPU8[$155>>0]|(HEAPU8[$155+1>>0]<<8)|(HEAPU8[$155+2>>0]<<16)|(HEAPU8[$155+3>>0]<<24);
     $157 = ($156|0)==(2);
     if ($157) {
      $168 = 1;
     } else {
      $158 = $opnd25;
      $159 = HEAPU8[$158>>0]|(HEAPU8[$158+1>>0]<<8)|(HEAPU8[$158+2>>0]<<16)|(HEAPU8[$158+3>>0]<<24);
      $160 = ($159|0)==(9);
      if ($160) {
       $161 = $opnd25;
       $162 = ((($161)) + 4|0);
       $163 = HEAPU8[$162>>0]|(HEAPU8[$162+1>>0]<<8)|(HEAPU8[$162+2>>0]<<16)|(HEAPU8[$162+3>>0]<<24);
       $164 = ((($163)) + 4|0);
       $165 = HEAPU8[$164>>0]|(HEAPU8[$164+1>>0]<<8)|(HEAPU8[$164+2>>0]<<16)|(HEAPU8[$164+3>>0]<<24);
       $166 = HEAPU8[$165>>0]|(HEAPU8[$165+1>>0]<<8)|(HEAPU8[$165+2>>0]<<16)|(HEAPU8[$165+3>>0]<<24);
       $167 = ($166|0)==(2);
       $168 = $167;
      } else {
       $168 = 0;
      }
     }
     $169 = $168 ? 2 : 3;
     HEAP8[$opndv2>>0]=$169&255;HEAP8[$opndv2+1>>0]=($169>>8)&255;HEAP8[$opndv2+2>>0]=($169>>16)&255;HEAP8[$opndv2+3>>0]=$169>>24;
     $170 = ((($opndv2)) + 4|0);
     $171 = $opnd25;
     $172 = HEAPU8[$171>>0]|(HEAPU8[$171+1>>0]<<8)|(HEAPU8[$171+2>>0]<<16)|(HEAPU8[$171+3>>0]<<24);
     $173 = ($172|0)==(9);
     $174 = $opnd25;
     $175 = ((($174)) + 4|0);
     if ($173) {
      $176 = HEAPU8[$175>>0]|(HEAPU8[$175+1>>0]<<8)|(HEAPU8[$175+2>>0]<<16)|(HEAPU8[$175+3>>0]<<24);
      $177 = ((($176)) + 4|0);
      $178 = HEAPU8[$177>>0]|(HEAPU8[$177+1>>0]<<8)|(HEAPU8[$177+2>>0]<<16)|(HEAPU8[$177+3>>0]<<24);
      $179 = ((($178)) + 4|0);
      ;HEAP8[$170>>0]=HEAP8[$179>>0]|0;HEAP8[$170+1>>0]=HEAP8[$179+1>>0]|0;HEAP8[$170+2>>0]=HEAP8[$179+2>>0]|0;HEAP8[$170+3>>0]=HEAP8[$179+3>>0]|0;
     } else {
      ;HEAP8[$170>>0]=HEAP8[$175>>0]|0;HEAP8[$170+1>>0]=HEAP8[$175+1>>0]|0;HEAP8[$170+2>>0]=HEAP8[$175+2>>0]|0;HEAP8[$170+3>>0]=HEAP8[$175+3>>0]|0;
     }
     $180 = HEAPU8[$opndv1>>0]|(HEAPU8[$opndv1+1>>0]<<8)|(HEAPU8[$opndv1+2>>0]<<16)|(HEAPU8[$opndv1+3>>0]<<24);
     $181 = ($180|0)==(2);
     do {
      if ($181) {
       $182 = HEAPU8[$opndv2>>0]|(HEAPU8[$opndv2+1>>0]<<8)|(HEAPU8[$opndv2+2>>0]<<16)|(HEAPU8[$opndv2+3>>0]<<24);
       $183 = ($182|0)==(2);
       if ($183) {
        $184 = ((($opndv1)) + 4|0);
        $185 = HEAPU8[$184>>0]|(HEAPU8[$184+1>>0]<<8)|(HEAPU8[$184+2>>0]<<16)|(HEAPU8[$184+3>>0]<<24);
        $186 = ((($opndv2)) + 4|0);
        $187 = HEAPU8[$186>>0]|(HEAPU8[$186+1>>0]<<8)|(HEAPU8[$186+2>>0]<<16)|(HEAPU8[$186+3>>0]<<24);
        $188 = ($185|0)>($187|0);
        $189 = $188&1;
        $190 = (+($189|0));
        $191 = ((($opndv1)) + 4|0);
        $192 = HEAPU8[$191>>0]|(HEAPU8[$191+1>>0]<<8)|(HEAPU8[$191+2>>0]<<16)|(HEAPU8[$191+3>>0]<<24);
        $193 = (+($192|0));
        $194 = ((($opndv2)) + 4|0);
        $195 = HEAPU8[$194>>0]|(HEAPU8[$194+1>>0]<<8)|(HEAPU8[$194+2>>0]<<16)|(HEAPU8[$194+3>>0]<<24);
        $196 = (+($195|0));
        $197 = $193 > $196;
        $198 = $197&1;
        $199 = (+($198|0));
        $200 = $190 == $199;
        $201 = $val6;
        if ($200) {
         HEAP8[$201>>0]=2&255;HEAP8[$201+1>>0]=(2>>8)&255;HEAP8[$201+2>>0]=(2>>16)&255;HEAP8[$201+3>>0]=2>>24;
         $202 = ((($opndv1)) + 4|0);
         $203 = HEAPU8[$202>>0]|(HEAPU8[$202+1>>0]<<8)|(HEAPU8[$202+2>>0]<<16)|(HEAPU8[$202+3>>0]<<24);
         $204 = ((($opndv2)) + 4|0);
         $205 = HEAPU8[$204>>0]|(HEAPU8[$204+1>>0]<<8)|(HEAPU8[$204+2>>0]<<16)|(HEAPU8[$204+3>>0]<<24);
         $206 = ($203|0)>($205|0);
         $207 = $206&1;
         $208 = $val6;
         $209 = ((($208)) + 4|0);
         HEAP8[$209>>0]=$207&255;HEAP8[$209+1>>0]=($207>>8)&255;HEAP8[$209+2>>0]=($207>>16)&255;HEAP8[$209+3>>0]=$207>>24;
         break;
        } else {
         HEAP8[$201>>0]=3&255;HEAP8[$201+1>>0]=(3>>8)&255;HEAP8[$201+2>>0]=(3>>16)&255;HEAP8[$201+3>>0]=3>>24;
         $210 = ((($opndv1)) + 4|0);
         $211 = HEAPU8[$210>>0]|(HEAPU8[$210+1>>0]<<8)|(HEAPU8[$210+2>>0]<<16)|(HEAPU8[$210+3>>0]<<24);
         $212 = (+($211|0));
         $213 = ((($opndv2)) + 4|0);
         $214 = HEAPU8[$213>>0]|(HEAPU8[$213+1>>0]<<8)|(HEAPU8[$213+2>>0]<<16)|(HEAPU8[$213+3>>0]<<24);
         $215 = (+($214|0));
         $216 = $212 > $215;
         $217 = $216&1;
         $218 = (+($217|0));
         $219 = $val6;
         $220 = ((($219)) + 4|0);
         HEAPF32[tempDoublePtr>>2]=$218;HEAP8[$220>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$220+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$220+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$220+3>>0]=HEAP8[tempDoublePtr+3>>0];
         break;
        }
       } else {
        label = 37;
       }
      } else {
       label = 37;
      }
     } while(0);
     if ((label|0) == 37) {
      $221 = $val6;
      HEAP8[$221>>0]=3&255;HEAP8[$221+1>>0]=(3>>8)&255;HEAP8[$221+2>>0]=(3>>16)&255;HEAP8[$221+3>>0]=3>>24;
      $222 = HEAPU8[$opndv1>>0]|(HEAPU8[$opndv1+1>>0]<<8)|(HEAPU8[$opndv1+2>>0]<<16)|(HEAPU8[$opndv1+3>>0]<<24);
      $223 = ($222|0)==(2);
      $224 = ((($opndv1)) + 4|0);
      $225 = HEAPU8[$224>>0]|(HEAPU8[$224+1>>0]<<8)|(HEAPU8[$224+2>>0]<<16)|(HEAPU8[$224+3>>0]<<24);
      $226 = (+($225|0));
      HEAP8[tempDoublePtr>>0]=HEAP8[$224>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$224+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$224+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$224+3>>0];$227 = +HEAPF32[tempDoublePtr>>2];
      $228 = $223 ? $226 : $227;
      $229 = HEAPU8[$opndv2>>0]|(HEAPU8[$opndv2+1>>0]<<8)|(HEAPU8[$opndv2+2>>0]<<16)|(HEAPU8[$opndv2+3>>0]<<24);
      $230 = ($229|0)==(2);
      $231 = ((($opndv2)) + 4|0);
      $232 = HEAPU8[$231>>0]|(HEAPU8[$231+1>>0]<<8)|(HEAPU8[$231+2>>0]<<16)|(HEAPU8[$231+3>>0]<<24);
      $233 = (+($232|0));
      HEAP8[tempDoublePtr>>0]=HEAP8[$231>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$231+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$231+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$231+3>>0];$234 = +HEAPF32[tempDoublePtr>>2];
      $235 = $230 ? $233 : $234;
      $236 = $228 > $235;
      $237 = $236&1;
      $238 = (+($237|0));
      $239 = $val6;
      $240 = ((($239)) + 4|0);
      HEAPF32[tempDoublePtr>>2]=$238;HEAP8[$240>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$240+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$240+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$240+3>>0]=HEAP8[tempDoublePtr+3>>0];
     }
     $241 = $val6;
     $242 = HEAPU8[$241>>0]|(HEAPU8[$241+1>>0]<<8)|(HEAPU8[$241+2>>0]<<16)|(HEAPU8[$241+3>>0]<<24);
     $243 = ($242|0)==(3);
     if ($243) {
      $244 = $val6;
      $245 = ((($244)) + 4|0);
      HEAP8[tempDoublePtr>>0]=HEAP8[$245>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$245+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$245+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$245+3>>0];$246 = +HEAPF32[tempDoublePtr>>2];
      $247 = (~~(($246)));
      $248 = (+($247|0));
      $249 = $val6;
      $250 = ((($249)) + 4|0);
      HEAP8[tempDoublePtr>>0]=HEAP8[$250>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$250+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$250+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$250+3>>0];$251 = +HEAPF32[tempDoublePtr>>2];
      $252 = $248 == $251;
      if ($252) {
       $253 = $val6;
       HEAP8[$253>>0]=2&255;HEAP8[$253+1>>0]=(2>>8)&255;HEAP8[$253+2>>0]=(2>>16)&255;HEAP8[$253+3>>0]=2>>24;
       $254 = $val6;
       $255 = ((($254)) + 4|0);
       HEAP8[tempDoublePtr>>0]=HEAP8[$255>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$255+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$255+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$255+3>>0];$256 = +HEAPF32[tempDoublePtr>>2];
       $257 = (~~(($256)));
       $258 = $val6;
       $259 = ((($258)) + 4|0);
       HEAP8[$259>>0]=$257&255;HEAP8[$259+1>>0]=($257>>8)&255;HEAP8[$259+2>>0]=($257>>16)&255;HEAP8[$259+3>>0]=$257>>24;
      }
     }
     $260 = $1;
     $261 = HEAP32[$260>>2]|0;
     $tpr = $261;
     $262 = $tpr;
     $263 = ((($262)) + 8|0);
     $264 = HEAPU8[$263>>0]|(HEAPU8[$263+1>>0]<<8)|(HEAPU8[$263+2>>0]<<16)|(HEAPU8[$263+3>>0]<<24);
     $265 = HEAPU8[$264>>0]|(HEAPU8[$264+1>>0]<<8)|(HEAPU8[$264+2>>0]<<16)|(HEAPU8[$264+3>>0]<<24);
     $266 = ($265|0)!=(2);
     if (!($266)) {
      $350 = $result;
      STACKTOP = sp;return ($350|0);
     }
     $267 = $tpr;
     $268 = ((($267)) + 8|0);
     $269 = HEAPU8[$268>>0]|(HEAPU8[$268+1>>0]<<8)|(HEAPU8[$268+2>>0]<<16)|(HEAPU8[$268+3>>0]<<24);
     HEAP8[$269>>0]=2&255;HEAP8[$269+1>>0]=(2>>8)&255;HEAP8[$269+2>>0]=(2>>16)&255;HEAP8[$269+3>>0]=2>>24;
     $270 = $tpr;
     $271 = ((($270)) + 8|0);
     $272 = HEAPU8[$271>>0]|(HEAPU8[$271+1>>0]<<8)|(HEAPU8[$271+2>>0]<<16)|(HEAPU8[$271+3>>0]<<24);
     $273 = ((($272)) + 4|0);
     HEAP8[tempDoublePtr>>0]=HEAP8[$273>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$273+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$273+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$273+3>>0];$274 = +HEAPF32[tempDoublePtr>>2];
     $275 = $274 != 0.0;
     $276 = $275&1;
     $277 = $tpr;
     $278 = ((($277)) + 8|0);
     $279 = HEAPU8[$278>>0]|(HEAPU8[$278+1>>0]<<8)|(HEAPU8[$278+2>>0]<<16)|(HEAPU8[$278+3>>0]<<24);
     $280 = ((($279)) + 4|0);
     HEAP8[$280>>0]=$276&255;HEAP8[$280+1>>0]=($276>>8)&255;HEAP8[$280+2>>0]=($276>>16)&255;HEAP8[$280+3>>0]=$276>>24;
     $350 = $result;
     STACKTOP = sp;return ($350|0);
    }
   }
   $281 = $1;
   $282 = HEAP32[$281>>2]|0;
   $tpptr9 = $282;
   $283 = $tpptr9;
   $284 = HEAPU8[$283>>0]|(HEAPU8[$283+1>>0]<<8)|(HEAPU8[$283+2>>0]<<16)|(HEAPU8[$283+3>>0]<<24);
   $opnd110 = $284;
   $285 = $tpptr9;
   $286 = ((($285)) + 4|0);
   $287 = HEAPU8[$286>>0]|(HEAPU8[$286+1>>0]<<8)|(HEAPU8[$286+2>>0]<<16)|(HEAPU8[$286+3>>0]<<24);
   $opnd211 = $287;
   $288 = $tpptr9;
   $289 = ((($288)) + 8|0);
   $290 = HEAPU8[$289>>0]|(HEAPU8[$289+1>>0]<<8)|(HEAPU8[$289+2>>0]<<16)|(HEAPU8[$289+3>>0]<<24);
   $val12 = $290;
   $291 = $opnd110;
   $292 = HEAPU8[$291>>0]|(HEAPU8[$291+1>>0]<<8)|(HEAPU8[$291+2>>0]<<16)|(HEAPU8[$291+3>>0]<<24);
   $293 = ($292|0)==(9);
   $294 = $opnd110;
   if ($293) {
    $295 = ((($294)) + 4|0);
    $296 = HEAPU8[$295>>0]|(HEAPU8[$295+1>>0]<<8)|(HEAPU8[$295+2>>0]<<16)|(HEAPU8[$295+3>>0]<<24);
    $297 = ((($296)) + 4|0);
    $298 = HEAPU8[$297>>0]|(HEAPU8[$297+1>>0]<<8)|(HEAPU8[$297+2>>0]<<16)|(HEAPU8[$297+3>>0]<<24);
    $299 = HEAPU8[$298>>0]|(HEAPU8[$298+1>>0]<<8)|(HEAPU8[$298+2>>0]<<16)|(HEAPU8[$298+3>>0]<<24);
    $301 = $299;
   } else {
    $300 = HEAPU8[$294>>0]|(HEAPU8[$294+1>>0]<<8)|(HEAPU8[$294+2>>0]<<16)|(HEAPU8[$294+3>>0]<<24);
    $301 = $300;
   }
   HEAP8[$opndv17>>0]=$301&255;HEAP8[$opndv17+1>>0]=($301>>8)&255;HEAP8[$opndv17+2>>0]=($301>>16)&255;HEAP8[$opndv17+3>>0]=$301>>24;
   $302 = ((($opndv17)) + 4|0);
   $303 = $opnd110;
   $304 = HEAPU8[$303>>0]|(HEAPU8[$303+1>>0]<<8)|(HEAPU8[$303+2>>0]<<16)|(HEAPU8[$303+3>>0]<<24);
   $305 = ($304|0)==(9);
   $306 = $opnd110;
   $307 = ((($306)) + 4|0);
   if ($305) {
    $308 = HEAPU8[$307>>0]|(HEAPU8[$307+1>>0]<<8)|(HEAPU8[$307+2>>0]<<16)|(HEAPU8[$307+3>>0]<<24);
    $309 = ((($308)) + 4|0);
    $310 = HEAPU8[$309>>0]|(HEAPU8[$309+1>>0]<<8)|(HEAPU8[$309+2>>0]<<16)|(HEAPU8[$309+3>>0]<<24);
    $311 = ((($310)) + 4|0);
    ;HEAP8[$302>>0]=HEAP8[$311>>0]|0;HEAP8[$302+1>>0]=HEAP8[$311+1>>0]|0;HEAP8[$302+2>>0]=HEAP8[$311+2>>0]|0;HEAP8[$302+3>>0]=HEAP8[$311+3>>0]|0;
   } else {
    ;HEAP8[$302>>0]=HEAP8[$307>>0]|0;HEAP8[$302+1>>0]=HEAP8[$307+1>>0]|0;HEAP8[$302+2>>0]=HEAP8[$307+2>>0]|0;HEAP8[$302+3>>0]=HEAP8[$307+3>>0]|0;
   }
   $312 = $opnd211;
   $313 = HEAPU8[$312>>0]|(HEAPU8[$312+1>>0]<<8)|(HEAPU8[$312+2>>0]<<16)|(HEAPU8[$312+3>>0]<<24);
   $314 = ($313|0)==(9);
   $315 = $opnd211;
   if ($314) {
    $316 = ((($315)) + 4|0);
    $317 = HEAPU8[$316>>0]|(HEAPU8[$316+1>>0]<<8)|(HEAPU8[$316+2>>0]<<16)|(HEAPU8[$316+3>>0]<<24);
    $318 = ((($317)) + 4|0);
    $319 = HEAPU8[$318>>0]|(HEAPU8[$318+1>>0]<<8)|(HEAPU8[$318+2>>0]<<16)|(HEAPU8[$318+3>>0]<<24);
    $320 = HEAPU8[$319>>0]|(HEAPU8[$319+1>>0]<<8)|(HEAPU8[$319+2>>0]<<16)|(HEAPU8[$319+3>>0]<<24);
    $322 = $320;
   } else {
    $321 = HEAPU8[$315>>0]|(HEAPU8[$315+1>>0]<<8)|(HEAPU8[$315+2>>0]<<16)|(HEAPU8[$315+3>>0]<<24);
    $322 = $321;
   }
   HEAP8[$opndv28>>0]=$322&255;HEAP8[$opndv28+1>>0]=($322>>8)&255;HEAP8[$opndv28+2>>0]=($322>>16)&255;HEAP8[$opndv28+3>>0]=$322>>24;
   $323 = ((($opndv28)) + 4|0);
   $324 = $opnd211;
   $325 = HEAPU8[$324>>0]|(HEAPU8[$324+1>>0]<<8)|(HEAPU8[$324+2>>0]<<16)|(HEAPU8[$324+3>>0]<<24);
   $326 = ($325|0)==(9);
   $327 = $opnd211;
   $328 = ((($327)) + 4|0);
   if ($326) {
    $329 = HEAPU8[$328>>0]|(HEAPU8[$328+1>>0]<<8)|(HEAPU8[$328+2>>0]<<16)|(HEAPU8[$328+3>>0]<<24);
    $330 = ((($329)) + 4|0);
    $331 = HEAPU8[$330>>0]|(HEAPU8[$330+1>>0]<<8)|(HEAPU8[$330+2>>0]<<16)|(HEAPU8[$330+3>>0]<<24);
    $332 = ((($331)) + 4|0);
    ;HEAP8[$323>>0]=HEAP8[$332>>0]|0;HEAP8[$323+1>>0]=HEAP8[$332+1>>0]|0;HEAP8[$323+2>>0]=HEAP8[$332+2>>0]|0;HEAP8[$323+3>>0]=HEAP8[$332+3>>0]|0;
   } else {
    ;HEAP8[$323>>0]=HEAP8[$328>>0]|0;HEAP8[$323+1>>0]=HEAP8[$328+1>>0]|0;HEAP8[$323+2>>0]=HEAP8[$328+2>>0]|0;HEAP8[$323+3>>0]=HEAP8[$328+3>>0]|0;
   }
   $333 = $val12;
   HEAP8[$333>>0]=2&255;HEAP8[$333+1>>0]=(2>>8)&255;HEAP8[$333+2>>0]=(2>>16)&255;HEAP8[$333+3>>0]=2>>24;
   $334 = HEAPU8[$opndv17>>0]|(HEAPU8[$opndv17+1>>0]<<8)|(HEAPU8[$opndv17+2>>0]<<16)|(HEAPU8[$opndv17+3>>0]<<24);
   $335 = HEAPU8[$opndv28>>0]|(HEAPU8[$opndv28+1>>0]<<8)|(HEAPU8[$opndv28+2>>0]<<16)|(HEAPU8[$opndv28+3>>0]<<24);
   $336 = ($334|0)==($335|0);
   if ($336) {
    $337 = ((($opndv17)) + 4|0);
    $338 = ((($opndv28)) + 4|0);
    $339 = (_mb_memcmp($337,$338,4)|0);
    $340 = ($339|0)>(0);
    $341 = $340&1;
    $342 = $val12;
    $343 = ((($342)) + 4|0);
    HEAP8[$343>>0]=$341&255;HEAP8[$343+1>>0]=($341>>8)&255;HEAP8[$343+2>>0]=($341>>16)&255;HEAP8[$343+3>>0]=$341>>24;
    $350 = $result;
    STACKTOP = sp;return ($350|0);
   } else {
    $344 = HEAPU8[$opndv17>>0]|(HEAPU8[$opndv17+1>>0]<<8)|(HEAPU8[$opndv17+2>>0]<<16)|(HEAPU8[$opndv17+3>>0]<<24);
    $345 = HEAPU8[$opndv28>>0]|(HEAPU8[$opndv28+1>>0]<<8)|(HEAPU8[$opndv28+2>>0]<<16)|(HEAPU8[$opndv28+3>>0]<<24);
    $346 = ($344|0)>($345|0);
    $347 = $346&1;
    $348 = $val12;
    $349 = ((($348)) + 4|0);
    HEAP8[$349>>0]=$347&255;HEAP8[$349+1>>0]=($347>>8)&255;HEAP8[$349+2>>0]=($347>>16)&255;HEAP8[$349+3>>0]=$347>>24;
    $350 = $result;
    STACKTOP = sp;return ($350|0);
   }
  }
 }
 $19 = $1;
 $20 = HEAP32[$19>>2]|0;
 $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
 $22 = (__is_string($21)|0);
 $23 = $22&255;
 $24 = ($23|0)!=(0);
 if ($24) {
  $25 = $1;
  $26 = HEAP32[$25>>2]|0;
  $27 = ((($26)) + 4|0);
  $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
  $29 = (__is_string($28)|0);
  $30 = $29&255;
  $31 = ($30|0)!=(0);
  if ($31) {
   $_str1 = 0;
   $_str2 = 0;
   $32 = $1;
   $33 = HEAP32[$32>>2]|0;
   $tpptr = $33;
   $34 = $tpptr;
   $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
   $opnd1 = $35;
   $36 = $tpptr;
   $37 = ((($36)) + 4|0);
   $38 = HEAPU8[$37>>0]|(HEAPU8[$37+1>>0]<<8)|(HEAPU8[$37+2>>0]<<16)|(HEAPU8[$37+3>>0]<<24);
   $opnd2 = $38;
   $39 = $tpptr;
   $40 = ((($39)) + 8|0);
   $41 = HEAPU8[$40>>0]|(HEAPU8[$40+1>>0]<<8)|(HEAPU8[$40+2>>0]<<16)|(HEAPU8[$40+3>>0]<<24);
   $val = $41;
   $42 = $val;
   HEAP8[$42>>0]=2&255;HEAP8[$42+1>>0]=(2>>8)&255;HEAP8[$42+2>>0]=(2>>16)&255;HEAP8[$42+3>>0]=2>>24;
   $43 = $opnd1;
   $44 = (__extract_string($43)|0);
   $_str1 = $44;
   $45 = $opnd2;
   $46 = (__extract_string($45)|0);
   $_str2 = $46;
   $47 = $_str1;
   $48 = $_str2;
   $49 = (_strcmp($47,$48)|0);
   $50 = ($49|0)>(0);
   $51 = $50&1;
   $52 = $val;
   $53 = ((($52)) + 4|0);
   HEAP8[$53>>0]=$51&255;HEAP8[$53+1>>0]=($51>>8)&255;HEAP8[$53+2>>0]=($51>>16)&255;HEAP8[$53+3>>0]=$51>>24;
   $350 = $result;
   STACKTOP = sp;return ($350|0);
  }
 }
 $54 = $1;
 $55 = HEAP32[$54>>2]|0;
 $56 = HEAPU8[$55>>0]|(HEAPU8[$55+1>>0]<<8)|(HEAPU8[$55+2>>0]<<16)|(HEAPU8[$55+3>>0]<<24);
 $57 = (__is_string($56)|0);
 $58 = ($57<<24>>24)!=(0);
 $59 = $1;
 $60 = HEAP32[$59>>2]|0;
 $61 = ((($60)) + 8|0);
 $62 = HEAPU8[$61>>0]|(HEAPU8[$61+1>>0]<<8)|(HEAPU8[$61+2>>0]<<16)|(HEAPU8[$61+3>>0]<<24);
 if ($58) {
  $val1 = $62;
  $63 = $val1;
  HEAP8[$63>>0]=2&255;HEAP8[$63+1>>0]=(2>>8)&255;HEAP8[$63+2>>0]=(2>>16)&255;HEAP8[$63+3>>0]=2>>24;
  $64 = $val1;
  $65 = ((($64)) + 4|0);
  HEAP8[$65>>0]=1&255;HEAP8[$65+1>>0]=(1>>8)&255;HEAP8[$65+2>>0]=(1>>16)&255;HEAP8[$65+3>>0]=1>>24;
 } else {
  $val2 = $62;
  $66 = $val2;
  HEAP8[$66>>0]=2&255;HEAP8[$66+1>>0]=(2>>8)&255;HEAP8[$66+2>>0]=(2>>16)&255;HEAP8[$66+3>>0]=2>>24;
  $67 = $val2;
  $68 = ((($67)) + 4|0);
  HEAP8[$68>>0]=0&255;HEAP8[$68+1>>0]=(0>>8)&255;HEAP8[$68+2>>0]=(0>>16)&255;HEAP8[$68+3>>0]=0>>24;
 }
 $69 = $1;
 $70 = ($69|0)!=(0|0);
 if ($70) {
  $71 = $1;
  $72 = HEAP32[$71>>2]|0;
  $73 = ($72|0)!=(0|0);
  if ($73) {
   $74 = $1;
   $75 = HEAP32[$74>>2]|0;
   $76 = HEAPU8[$75>>0]|(HEAPU8[$75+1>>0]<<8)|(HEAPU8[$75+2>>0]<<16)|(HEAPU8[$75+3>>0]<<24);
   $77 = ($76|0)!=(0|0);
   if ($77) {
    $78 = $0;
    $79 = $0;
    $80 = ((($79)) + 67|0);
    $81 = HEAPU8[$80>>0]|(HEAPU8[$80+1>>0]<<8)|(HEAPU8[$80+2>>0]<<16)|(HEAPU8[$80+3>>0]<<24);
    $82 = (__set_current_error($78,18,$81)|0);
    $83 = ($82<<24>>24)!=(0);
    if (!($83)) {
     $350 = $result;
     STACKTOP = sp;return ($350|0);
    }
    $84 = $0;
    $85 = $1;
    $86 = HEAP32[$85>>2]|0;
    $87 = HEAPU8[$86>>0]|(HEAPU8[$86+1>>0]<<8)|(HEAPU8[$86+2>>0]<<16)|(HEAPU8[$86+3>>0]<<24);
    $88 = ((($87)) + 9|0);
    $89 = HEAPU8[$88>>0]|(HEAPU8[$88+1>>0]<<8)|(HEAPU8[$88+2>>0]<<16)|(HEAPU8[$88+3>>0]<<24);
    $90 = $1;
    $91 = HEAP32[$90>>2]|0;
    $92 = HEAPU8[$91>>0]|(HEAPU8[$91+1>>0]<<8)|(HEAPU8[$91+2>>0]<<16)|(HEAPU8[$91+3>>0]<<24);
    $93 = ((($92)) + 13|0);
    $94 = HEAPU8[$93>>0]|(HEAPU8[$93+1>>0]<<8);
    $95 = $1;
    $96 = HEAP32[$95>>2]|0;
    $97 = HEAPU8[$96>>0]|(HEAPU8[$96+1>>0]<<8)|(HEAPU8[$96+2>>0]<<16)|(HEAPU8[$96+3>>0]<<24);
    $98 = ((($97)) + 15|0);
    $99 = HEAPU8[$98>>0]|(HEAPU8[$98+1>>0]<<8);
    __set_error_pos($84,$89,$94,$99);
    $350 = $result;
    STACKTOP = sp;return ($350|0);
   }
  }
 }
 $100 = $0;
 $101 = $0;
 $102 = ((($101)) + 67|0);
 $103 = HEAPU8[$102>>0]|(HEAPU8[$102+1>>0]<<8)|(HEAPU8[$102+2>>0]<<16)|(HEAPU8[$102+3>>0]<<24);
 $104 = (__set_current_error($100,18,$103)|0);
 $105 = ($104<<24>>24)!=(0);
 if (!($105)) {
  $350 = $result;
  STACKTOP = sp;return ($350|0);
 }
 $106 = $0;
 __set_error_pos($106,0,0,0);
 $350 = $result;
 STACKTOP = sp;return ($350|0);
}
function __core_less_equal($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0.0, $191 = 0, $192 = 0, $193 = 0.0, $194 = 0, $195 = 0, $196 = 0.0, $197 = 0, $198 = 0, $199 = 0.0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0.0, $213 = 0, $214 = 0, $215 = 0.0, $216 = 0, $217 = 0, $218 = 0.0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0.0, $227 = 0.0, $228 = 0.0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0.0, $234 = 0.0, $235 = 0.0, $236 = 0, $237 = 0, $238 = 0.0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0.0, $247 = 0, $248 = 0.0, $249 = 0, $25 = 0, $250 = 0, $251 = 0.0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0.0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0.0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0;
 var $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0;
 var $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0;
 var $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0;
 var $350 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $_str1 = 0, $_str2 = 0, $opnd1 = 0, $opnd110 = 0, $opnd14 = 0, $opnd2 = 0, $opnd211 = 0, $opnd25 = 0, $opndv1 = 0;
 var $opndv17 = 0, $opndv2 = 0, $opndv28 = 0, $or$cond = 0, $result = 0, $tpptr = 0, $tpptr3 = 0, $tpptr9 = 0, $tpr = 0, $val = 0, $val1 = 0, $val12 = 0, $val2 = 0, $val6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $opndv1 = sp + 131|0;
 $opndv2 = sp + 114|0;
 $opndv17 = sp + 97|0;
 $opndv28 = sp + 80|0;
 $0 = $s;
 $1 = $l;
 $result = 0;
 $tpr = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),15325,(5050|0));
  // unreachable;
 }
 $6 = $1;
 $7 = HEAP32[$6>>2]|0;
 $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
 $9 = (__is_string($8)|0);
 $10 = $9&255;
 $11 = ($10|0)!=(0);
 if (!($11)) {
  $12 = $1;
  $13 = HEAP32[$12>>2]|0;
  $14 = ((($13)) + 4|0);
  $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
  $16 = (__is_string($15)|0);
  $17 = $16&255;
  $18 = ($17|0)!=(0);
  if (!($18)) {
   $107 = $1;
   $108 = HEAP32[$107>>2]|0;
   $109 = HEAPU8[$108>>0]|(HEAPU8[$108+1>>0]<<8)|(HEAPU8[$108+2>>0]<<16)|(HEAPU8[$108+3>>0]<<24);
   $110 = (__is_number($109)|0);
   $111 = $110&255;
   $112 = ($111|0)!=(0);
   if ($112) {
    $113 = $1;
    $114 = HEAP32[$113>>2]|0;
    $115 = ((($114)) + 4|0);
    $116 = HEAPU8[$115>>0]|(HEAPU8[$115+1>>0]<<8)|(HEAPU8[$115+2>>0]<<16)|(HEAPU8[$115+3>>0]<<24);
    $117 = (__is_number($116)|0);
    $118 = $117&255;
    $119 = ($118|0)!=(0);
    if ($119) {
     $120 = $1;
     $121 = HEAP32[$120>>2]|0;
     $tpptr3 = $121;
     $122 = $tpptr3;
     $123 = HEAPU8[$122>>0]|(HEAPU8[$122+1>>0]<<8)|(HEAPU8[$122+2>>0]<<16)|(HEAPU8[$122+3>>0]<<24);
     $opnd14 = $123;
     $124 = $tpptr3;
     $125 = ((($124)) + 4|0);
     $126 = HEAPU8[$125>>0]|(HEAPU8[$125+1>>0]<<8)|(HEAPU8[$125+2>>0]<<16)|(HEAPU8[$125+3>>0]<<24);
     $opnd25 = $126;
     $127 = $tpptr3;
     $128 = ((($127)) + 8|0);
     $129 = HEAPU8[$128>>0]|(HEAPU8[$128+1>>0]<<8)|(HEAPU8[$128+2>>0]<<16)|(HEAPU8[$128+3>>0]<<24);
     $val6 = $129;
     $130 = $opnd14;
     $131 = HEAPU8[$130>>0]|(HEAPU8[$130+1>>0]<<8)|(HEAPU8[$130+2>>0]<<16)|(HEAPU8[$130+3>>0]<<24);
     $132 = ($131|0)==(2);
     if ($132) {
      $143 = 1;
     } else {
      $133 = $opnd14;
      $134 = HEAPU8[$133>>0]|(HEAPU8[$133+1>>0]<<8)|(HEAPU8[$133+2>>0]<<16)|(HEAPU8[$133+3>>0]<<24);
      $135 = ($134|0)==(9);
      if ($135) {
       $136 = $opnd14;
       $137 = ((($136)) + 4|0);
       $138 = HEAPU8[$137>>0]|(HEAPU8[$137+1>>0]<<8)|(HEAPU8[$137+2>>0]<<16)|(HEAPU8[$137+3>>0]<<24);
       $139 = ((($138)) + 4|0);
       $140 = HEAPU8[$139>>0]|(HEAPU8[$139+1>>0]<<8)|(HEAPU8[$139+2>>0]<<16)|(HEAPU8[$139+3>>0]<<24);
       $141 = HEAPU8[$140>>0]|(HEAPU8[$140+1>>0]<<8)|(HEAPU8[$140+2>>0]<<16)|(HEAPU8[$140+3>>0]<<24);
       $142 = ($141|0)==(2);
       $143 = $142;
      } else {
       $143 = 0;
      }
     }
     $144 = $143 ? 2 : 3;
     HEAP8[$opndv1>>0]=$144&255;HEAP8[$opndv1+1>>0]=($144>>8)&255;HEAP8[$opndv1+2>>0]=($144>>16)&255;HEAP8[$opndv1+3>>0]=$144>>24;
     $145 = ((($opndv1)) + 4|0);
     $146 = $opnd14;
     $147 = HEAPU8[$146>>0]|(HEAPU8[$146+1>>0]<<8)|(HEAPU8[$146+2>>0]<<16)|(HEAPU8[$146+3>>0]<<24);
     $148 = ($147|0)==(9);
     $149 = $opnd14;
     $150 = ((($149)) + 4|0);
     if ($148) {
      $151 = HEAPU8[$150>>0]|(HEAPU8[$150+1>>0]<<8)|(HEAPU8[$150+2>>0]<<16)|(HEAPU8[$150+3>>0]<<24);
      $152 = ((($151)) + 4|0);
      $153 = HEAPU8[$152>>0]|(HEAPU8[$152+1>>0]<<8)|(HEAPU8[$152+2>>0]<<16)|(HEAPU8[$152+3>>0]<<24);
      $154 = ((($153)) + 4|0);
      ;HEAP8[$145>>0]=HEAP8[$154>>0]|0;HEAP8[$145+1>>0]=HEAP8[$154+1>>0]|0;HEAP8[$145+2>>0]=HEAP8[$154+2>>0]|0;HEAP8[$145+3>>0]=HEAP8[$154+3>>0]|0;
     } else {
      ;HEAP8[$145>>0]=HEAP8[$150>>0]|0;HEAP8[$145+1>>0]=HEAP8[$150+1>>0]|0;HEAP8[$145+2>>0]=HEAP8[$150+2>>0]|0;HEAP8[$145+3>>0]=HEAP8[$150+3>>0]|0;
     }
     $155 = $opnd25;
     $156 = HEAPU8[$155>>0]|(HEAPU8[$155+1>>0]<<8)|(HEAPU8[$155+2>>0]<<16)|(HEAPU8[$155+3>>0]<<24);
     $157 = ($156|0)==(2);
     if ($157) {
      $168 = 1;
     } else {
      $158 = $opnd25;
      $159 = HEAPU8[$158>>0]|(HEAPU8[$158+1>>0]<<8)|(HEAPU8[$158+2>>0]<<16)|(HEAPU8[$158+3>>0]<<24);
      $160 = ($159|0)==(9);
      if ($160) {
       $161 = $opnd25;
       $162 = ((($161)) + 4|0);
       $163 = HEAPU8[$162>>0]|(HEAPU8[$162+1>>0]<<8)|(HEAPU8[$162+2>>0]<<16)|(HEAPU8[$162+3>>0]<<24);
       $164 = ((($163)) + 4|0);
       $165 = HEAPU8[$164>>0]|(HEAPU8[$164+1>>0]<<8)|(HEAPU8[$164+2>>0]<<16)|(HEAPU8[$164+3>>0]<<24);
       $166 = HEAPU8[$165>>0]|(HEAPU8[$165+1>>0]<<8)|(HEAPU8[$165+2>>0]<<16)|(HEAPU8[$165+3>>0]<<24);
       $167 = ($166|0)==(2);
       $168 = $167;
      } else {
       $168 = 0;
      }
     }
     $169 = $168 ? 2 : 3;
     HEAP8[$opndv2>>0]=$169&255;HEAP8[$opndv2+1>>0]=($169>>8)&255;HEAP8[$opndv2+2>>0]=($169>>16)&255;HEAP8[$opndv2+3>>0]=$169>>24;
     $170 = ((($opndv2)) + 4|0);
     $171 = $opnd25;
     $172 = HEAPU8[$171>>0]|(HEAPU8[$171+1>>0]<<8)|(HEAPU8[$171+2>>0]<<16)|(HEAPU8[$171+3>>0]<<24);
     $173 = ($172|0)==(9);
     $174 = $opnd25;
     $175 = ((($174)) + 4|0);
     if ($173) {
      $176 = HEAPU8[$175>>0]|(HEAPU8[$175+1>>0]<<8)|(HEAPU8[$175+2>>0]<<16)|(HEAPU8[$175+3>>0]<<24);
      $177 = ((($176)) + 4|0);
      $178 = HEAPU8[$177>>0]|(HEAPU8[$177+1>>0]<<8)|(HEAPU8[$177+2>>0]<<16)|(HEAPU8[$177+3>>0]<<24);
      $179 = ((($178)) + 4|0);
      ;HEAP8[$170>>0]=HEAP8[$179>>0]|0;HEAP8[$170+1>>0]=HEAP8[$179+1>>0]|0;HEAP8[$170+2>>0]=HEAP8[$179+2>>0]|0;HEAP8[$170+3>>0]=HEAP8[$179+3>>0]|0;
     } else {
      ;HEAP8[$170>>0]=HEAP8[$175>>0]|0;HEAP8[$170+1>>0]=HEAP8[$175+1>>0]|0;HEAP8[$170+2>>0]=HEAP8[$175+2>>0]|0;HEAP8[$170+3>>0]=HEAP8[$175+3>>0]|0;
     }
     $180 = HEAPU8[$opndv1>>0]|(HEAPU8[$opndv1+1>>0]<<8)|(HEAPU8[$opndv1+2>>0]<<16)|(HEAPU8[$opndv1+3>>0]<<24);
     $181 = ($180|0)==(2);
     do {
      if ($181) {
       $182 = HEAPU8[$opndv2>>0]|(HEAPU8[$opndv2+1>>0]<<8)|(HEAPU8[$opndv2+2>>0]<<16)|(HEAPU8[$opndv2+3>>0]<<24);
       $183 = ($182|0)==(2);
       if ($183) {
        $184 = ((($opndv1)) + 4|0);
        $185 = HEAPU8[$184>>0]|(HEAPU8[$184+1>>0]<<8)|(HEAPU8[$184+2>>0]<<16)|(HEAPU8[$184+3>>0]<<24);
        $186 = ((($opndv2)) + 4|0);
        $187 = HEAPU8[$186>>0]|(HEAPU8[$186+1>>0]<<8)|(HEAPU8[$186+2>>0]<<16)|(HEAPU8[$186+3>>0]<<24);
        $188 = ($185|0)<=($187|0);
        $189 = $188&1;
        $190 = (+($189|0));
        $191 = ((($opndv1)) + 4|0);
        $192 = HEAPU8[$191>>0]|(HEAPU8[$191+1>>0]<<8)|(HEAPU8[$191+2>>0]<<16)|(HEAPU8[$191+3>>0]<<24);
        $193 = (+($192|0));
        $194 = ((($opndv2)) + 4|0);
        $195 = HEAPU8[$194>>0]|(HEAPU8[$194+1>>0]<<8)|(HEAPU8[$194+2>>0]<<16)|(HEAPU8[$194+3>>0]<<24);
        $196 = (+($195|0));
        $197 = $193 <= $196;
        $198 = $197&1;
        $199 = (+($198|0));
        $200 = $190 == $199;
        $201 = $val6;
        if ($200) {
         HEAP8[$201>>0]=2&255;HEAP8[$201+1>>0]=(2>>8)&255;HEAP8[$201+2>>0]=(2>>16)&255;HEAP8[$201+3>>0]=2>>24;
         $202 = ((($opndv1)) + 4|0);
         $203 = HEAPU8[$202>>0]|(HEAPU8[$202+1>>0]<<8)|(HEAPU8[$202+2>>0]<<16)|(HEAPU8[$202+3>>0]<<24);
         $204 = ((($opndv2)) + 4|0);
         $205 = HEAPU8[$204>>0]|(HEAPU8[$204+1>>0]<<8)|(HEAPU8[$204+2>>0]<<16)|(HEAPU8[$204+3>>0]<<24);
         $206 = ($203|0)<=($205|0);
         $207 = $206&1;
         $208 = $val6;
         $209 = ((($208)) + 4|0);
         HEAP8[$209>>0]=$207&255;HEAP8[$209+1>>0]=($207>>8)&255;HEAP8[$209+2>>0]=($207>>16)&255;HEAP8[$209+3>>0]=$207>>24;
         break;
        } else {
         HEAP8[$201>>0]=3&255;HEAP8[$201+1>>0]=(3>>8)&255;HEAP8[$201+2>>0]=(3>>16)&255;HEAP8[$201+3>>0]=3>>24;
         $210 = ((($opndv1)) + 4|0);
         $211 = HEAPU8[$210>>0]|(HEAPU8[$210+1>>0]<<8)|(HEAPU8[$210+2>>0]<<16)|(HEAPU8[$210+3>>0]<<24);
         $212 = (+($211|0));
         $213 = ((($opndv2)) + 4|0);
         $214 = HEAPU8[$213>>0]|(HEAPU8[$213+1>>0]<<8)|(HEAPU8[$213+2>>0]<<16)|(HEAPU8[$213+3>>0]<<24);
         $215 = (+($214|0));
         $216 = $212 <= $215;
         $217 = $216&1;
         $218 = (+($217|0));
         $219 = $val6;
         $220 = ((($219)) + 4|0);
         HEAPF32[tempDoublePtr>>2]=$218;HEAP8[$220>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$220+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$220+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$220+3>>0]=HEAP8[tempDoublePtr+3>>0];
         break;
        }
       } else {
        label = 37;
       }
      } else {
       label = 37;
      }
     } while(0);
     if ((label|0) == 37) {
      $221 = $val6;
      HEAP8[$221>>0]=3&255;HEAP8[$221+1>>0]=(3>>8)&255;HEAP8[$221+2>>0]=(3>>16)&255;HEAP8[$221+3>>0]=3>>24;
      $222 = HEAPU8[$opndv1>>0]|(HEAPU8[$opndv1+1>>0]<<8)|(HEAPU8[$opndv1+2>>0]<<16)|(HEAPU8[$opndv1+3>>0]<<24);
      $223 = ($222|0)==(2);
      $224 = ((($opndv1)) + 4|0);
      $225 = HEAPU8[$224>>0]|(HEAPU8[$224+1>>0]<<8)|(HEAPU8[$224+2>>0]<<16)|(HEAPU8[$224+3>>0]<<24);
      $226 = (+($225|0));
      HEAP8[tempDoublePtr>>0]=HEAP8[$224>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$224+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$224+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$224+3>>0];$227 = +HEAPF32[tempDoublePtr>>2];
      $228 = $223 ? $226 : $227;
      $229 = HEAPU8[$opndv2>>0]|(HEAPU8[$opndv2+1>>0]<<8)|(HEAPU8[$opndv2+2>>0]<<16)|(HEAPU8[$opndv2+3>>0]<<24);
      $230 = ($229|0)==(2);
      $231 = ((($opndv2)) + 4|0);
      $232 = HEAPU8[$231>>0]|(HEAPU8[$231+1>>0]<<8)|(HEAPU8[$231+2>>0]<<16)|(HEAPU8[$231+3>>0]<<24);
      $233 = (+($232|0));
      HEAP8[tempDoublePtr>>0]=HEAP8[$231>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$231+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$231+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$231+3>>0];$234 = +HEAPF32[tempDoublePtr>>2];
      $235 = $230 ? $233 : $234;
      $236 = $228 <= $235;
      $237 = $236&1;
      $238 = (+($237|0));
      $239 = $val6;
      $240 = ((($239)) + 4|0);
      HEAPF32[tempDoublePtr>>2]=$238;HEAP8[$240>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$240+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$240+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$240+3>>0]=HEAP8[tempDoublePtr+3>>0];
     }
     $241 = $val6;
     $242 = HEAPU8[$241>>0]|(HEAPU8[$241+1>>0]<<8)|(HEAPU8[$241+2>>0]<<16)|(HEAPU8[$241+3>>0]<<24);
     $243 = ($242|0)==(3);
     if ($243) {
      $244 = $val6;
      $245 = ((($244)) + 4|0);
      HEAP8[tempDoublePtr>>0]=HEAP8[$245>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$245+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$245+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$245+3>>0];$246 = +HEAPF32[tempDoublePtr>>2];
      $247 = (~~(($246)));
      $248 = (+($247|0));
      $249 = $val6;
      $250 = ((($249)) + 4|0);
      HEAP8[tempDoublePtr>>0]=HEAP8[$250>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$250+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$250+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$250+3>>0];$251 = +HEAPF32[tempDoublePtr>>2];
      $252 = $248 == $251;
      if ($252) {
       $253 = $val6;
       HEAP8[$253>>0]=2&255;HEAP8[$253+1>>0]=(2>>8)&255;HEAP8[$253+2>>0]=(2>>16)&255;HEAP8[$253+3>>0]=2>>24;
       $254 = $val6;
       $255 = ((($254)) + 4|0);
       HEAP8[tempDoublePtr>>0]=HEAP8[$255>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$255+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$255+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$255+3>>0];$256 = +HEAPF32[tempDoublePtr>>2];
       $257 = (~~(($256)));
       $258 = $val6;
       $259 = ((($258)) + 4|0);
       HEAP8[$259>>0]=$257&255;HEAP8[$259+1>>0]=($257>>8)&255;HEAP8[$259+2>>0]=($257>>16)&255;HEAP8[$259+3>>0]=$257>>24;
      }
     }
     $260 = $1;
     $261 = HEAP32[$260>>2]|0;
     $tpr = $261;
     $262 = $tpr;
     $263 = ((($262)) + 8|0);
     $264 = HEAPU8[$263>>0]|(HEAPU8[$263+1>>0]<<8)|(HEAPU8[$263+2>>0]<<16)|(HEAPU8[$263+3>>0]<<24);
     $265 = HEAPU8[$264>>0]|(HEAPU8[$264+1>>0]<<8)|(HEAPU8[$264+2>>0]<<16)|(HEAPU8[$264+3>>0]<<24);
     $266 = ($265|0)!=(2);
     if (!($266)) {
      $350 = $result;
      STACKTOP = sp;return ($350|0);
     }
     $267 = $tpr;
     $268 = ((($267)) + 8|0);
     $269 = HEAPU8[$268>>0]|(HEAPU8[$268+1>>0]<<8)|(HEAPU8[$268+2>>0]<<16)|(HEAPU8[$268+3>>0]<<24);
     HEAP8[$269>>0]=2&255;HEAP8[$269+1>>0]=(2>>8)&255;HEAP8[$269+2>>0]=(2>>16)&255;HEAP8[$269+3>>0]=2>>24;
     $270 = $tpr;
     $271 = ((($270)) + 8|0);
     $272 = HEAPU8[$271>>0]|(HEAPU8[$271+1>>0]<<8)|(HEAPU8[$271+2>>0]<<16)|(HEAPU8[$271+3>>0]<<24);
     $273 = ((($272)) + 4|0);
     HEAP8[tempDoublePtr>>0]=HEAP8[$273>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$273+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$273+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$273+3>>0];$274 = +HEAPF32[tempDoublePtr>>2];
     $275 = $274 != 0.0;
     $276 = $275&1;
     $277 = $tpr;
     $278 = ((($277)) + 8|0);
     $279 = HEAPU8[$278>>0]|(HEAPU8[$278+1>>0]<<8)|(HEAPU8[$278+2>>0]<<16)|(HEAPU8[$278+3>>0]<<24);
     $280 = ((($279)) + 4|0);
     HEAP8[$280>>0]=$276&255;HEAP8[$280+1>>0]=($276>>8)&255;HEAP8[$280+2>>0]=($276>>16)&255;HEAP8[$280+3>>0]=$276>>24;
     $350 = $result;
     STACKTOP = sp;return ($350|0);
    }
   }
   $281 = $1;
   $282 = HEAP32[$281>>2]|0;
   $tpptr9 = $282;
   $283 = $tpptr9;
   $284 = HEAPU8[$283>>0]|(HEAPU8[$283+1>>0]<<8)|(HEAPU8[$283+2>>0]<<16)|(HEAPU8[$283+3>>0]<<24);
   $opnd110 = $284;
   $285 = $tpptr9;
   $286 = ((($285)) + 4|0);
   $287 = HEAPU8[$286>>0]|(HEAPU8[$286+1>>0]<<8)|(HEAPU8[$286+2>>0]<<16)|(HEAPU8[$286+3>>0]<<24);
   $opnd211 = $287;
   $288 = $tpptr9;
   $289 = ((($288)) + 8|0);
   $290 = HEAPU8[$289>>0]|(HEAPU8[$289+1>>0]<<8)|(HEAPU8[$289+2>>0]<<16)|(HEAPU8[$289+3>>0]<<24);
   $val12 = $290;
   $291 = $opnd110;
   $292 = HEAPU8[$291>>0]|(HEAPU8[$291+1>>0]<<8)|(HEAPU8[$291+2>>0]<<16)|(HEAPU8[$291+3>>0]<<24);
   $293 = ($292|0)==(9);
   $294 = $opnd110;
   if ($293) {
    $295 = ((($294)) + 4|0);
    $296 = HEAPU8[$295>>0]|(HEAPU8[$295+1>>0]<<8)|(HEAPU8[$295+2>>0]<<16)|(HEAPU8[$295+3>>0]<<24);
    $297 = ((($296)) + 4|0);
    $298 = HEAPU8[$297>>0]|(HEAPU8[$297+1>>0]<<8)|(HEAPU8[$297+2>>0]<<16)|(HEAPU8[$297+3>>0]<<24);
    $299 = HEAPU8[$298>>0]|(HEAPU8[$298+1>>0]<<8)|(HEAPU8[$298+2>>0]<<16)|(HEAPU8[$298+3>>0]<<24);
    $301 = $299;
   } else {
    $300 = HEAPU8[$294>>0]|(HEAPU8[$294+1>>0]<<8)|(HEAPU8[$294+2>>0]<<16)|(HEAPU8[$294+3>>0]<<24);
    $301 = $300;
   }
   HEAP8[$opndv17>>0]=$301&255;HEAP8[$opndv17+1>>0]=($301>>8)&255;HEAP8[$opndv17+2>>0]=($301>>16)&255;HEAP8[$opndv17+3>>0]=$301>>24;
   $302 = ((($opndv17)) + 4|0);
   $303 = $opnd110;
   $304 = HEAPU8[$303>>0]|(HEAPU8[$303+1>>0]<<8)|(HEAPU8[$303+2>>0]<<16)|(HEAPU8[$303+3>>0]<<24);
   $305 = ($304|0)==(9);
   $306 = $opnd110;
   $307 = ((($306)) + 4|0);
   if ($305) {
    $308 = HEAPU8[$307>>0]|(HEAPU8[$307+1>>0]<<8)|(HEAPU8[$307+2>>0]<<16)|(HEAPU8[$307+3>>0]<<24);
    $309 = ((($308)) + 4|0);
    $310 = HEAPU8[$309>>0]|(HEAPU8[$309+1>>0]<<8)|(HEAPU8[$309+2>>0]<<16)|(HEAPU8[$309+3>>0]<<24);
    $311 = ((($310)) + 4|0);
    ;HEAP8[$302>>0]=HEAP8[$311>>0]|0;HEAP8[$302+1>>0]=HEAP8[$311+1>>0]|0;HEAP8[$302+2>>0]=HEAP8[$311+2>>0]|0;HEAP8[$302+3>>0]=HEAP8[$311+3>>0]|0;
   } else {
    ;HEAP8[$302>>0]=HEAP8[$307>>0]|0;HEAP8[$302+1>>0]=HEAP8[$307+1>>0]|0;HEAP8[$302+2>>0]=HEAP8[$307+2>>0]|0;HEAP8[$302+3>>0]=HEAP8[$307+3>>0]|0;
   }
   $312 = $opnd211;
   $313 = HEAPU8[$312>>0]|(HEAPU8[$312+1>>0]<<8)|(HEAPU8[$312+2>>0]<<16)|(HEAPU8[$312+3>>0]<<24);
   $314 = ($313|0)==(9);
   $315 = $opnd211;
   if ($314) {
    $316 = ((($315)) + 4|0);
    $317 = HEAPU8[$316>>0]|(HEAPU8[$316+1>>0]<<8)|(HEAPU8[$316+2>>0]<<16)|(HEAPU8[$316+3>>0]<<24);
    $318 = ((($317)) + 4|0);
    $319 = HEAPU8[$318>>0]|(HEAPU8[$318+1>>0]<<8)|(HEAPU8[$318+2>>0]<<16)|(HEAPU8[$318+3>>0]<<24);
    $320 = HEAPU8[$319>>0]|(HEAPU8[$319+1>>0]<<8)|(HEAPU8[$319+2>>0]<<16)|(HEAPU8[$319+3>>0]<<24);
    $322 = $320;
   } else {
    $321 = HEAPU8[$315>>0]|(HEAPU8[$315+1>>0]<<8)|(HEAPU8[$315+2>>0]<<16)|(HEAPU8[$315+3>>0]<<24);
    $322 = $321;
   }
   HEAP8[$opndv28>>0]=$322&255;HEAP8[$opndv28+1>>0]=($322>>8)&255;HEAP8[$opndv28+2>>0]=($322>>16)&255;HEAP8[$opndv28+3>>0]=$322>>24;
   $323 = ((($opndv28)) + 4|0);
   $324 = $opnd211;
   $325 = HEAPU8[$324>>0]|(HEAPU8[$324+1>>0]<<8)|(HEAPU8[$324+2>>0]<<16)|(HEAPU8[$324+3>>0]<<24);
   $326 = ($325|0)==(9);
   $327 = $opnd211;
   $328 = ((($327)) + 4|0);
   if ($326) {
    $329 = HEAPU8[$328>>0]|(HEAPU8[$328+1>>0]<<8)|(HEAPU8[$328+2>>0]<<16)|(HEAPU8[$328+3>>0]<<24);
    $330 = ((($329)) + 4|0);
    $331 = HEAPU8[$330>>0]|(HEAPU8[$330+1>>0]<<8)|(HEAPU8[$330+2>>0]<<16)|(HEAPU8[$330+3>>0]<<24);
    $332 = ((($331)) + 4|0);
    ;HEAP8[$323>>0]=HEAP8[$332>>0]|0;HEAP8[$323+1>>0]=HEAP8[$332+1>>0]|0;HEAP8[$323+2>>0]=HEAP8[$332+2>>0]|0;HEAP8[$323+3>>0]=HEAP8[$332+3>>0]|0;
   } else {
    ;HEAP8[$323>>0]=HEAP8[$328>>0]|0;HEAP8[$323+1>>0]=HEAP8[$328+1>>0]|0;HEAP8[$323+2>>0]=HEAP8[$328+2>>0]|0;HEAP8[$323+3>>0]=HEAP8[$328+3>>0]|0;
   }
   $333 = $val12;
   HEAP8[$333>>0]=2&255;HEAP8[$333+1>>0]=(2>>8)&255;HEAP8[$333+2>>0]=(2>>16)&255;HEAP8[$333+3>>0]=2>>24;
   $334 = HEAPU8[$opndv17>>0]|(HEAPU8[$opndv17+1>>0]<<8)|(HEAPU8[$opndv17+2>>0]<<16)|(HEAPU8[$opndv17+3>>0]<<24);
   $335 = HEAPU8[$opndv28>>0]|(HEAPU8[$opndv28+1>>0]<<8)|(HEAPU8[$opndv28+2>>0]<<16)|(HEAPU8[$opndv28+3>>0]<<24);
   $336 = ($334|0)==($335|0);
   if ($336) {
    $337 = ((($opndv17)) + 4|0);
    $338 = ((($opndv28)) + 4|0);
    $339 = (_mb_memcmp($337,$338,4)|0);
    $340 = ($339|0)<=(0);
    $341 = $340&1;
    $342 = $val12;
    $343 = ((($342)) + 4|0);
    HEAP8[$343>>0]=$341&255;HEAP8[$343+1>>0]=($341>>8)&255;HEAP8[$343+2>>0]=($341>>16)&255;HEAP8[$343+3>>0]=$341>>24;
    $350 = $result;
    STACKTOP = sp;return ($350|0);
   } else {
    $344 = HEAPU8[$opndv17>>0]|(HEAPU8[$opndv17+1>>0]<<8)|(HEAPU8[$opndv17+2>>0]<<16)|(HEAPU8[$opndv17+3>>0]<<24);
    $345 = HEAPU8[$opndv28>>0]|(HEAPU8[$opndv28+1>>0]<<8)|(HEAPU8[$opndv28+2>>0]<<16)|(HEAPU8[$opndv28+3>>0]<<24);
    $346 = ($344|0)<=($345|0);
    $347 = $346&1;
    $348 = $val12;
    $349 = ((($348)) + 4|0);
    HEAP8[$349>>0]=$347&255;HEAP8[$349+1>>0]=($347>>8)&255;HEAP8[$349+2>>0]=($347>>16)&255;HEAP8[$349+3>>0]=$347>>24;
    $350 = $result;
    STACKTOP = sp;return ($350|0);
   }
  }
 }
 $19 = $1;
 $20 = HEAP32[$19>>2]|0;
 $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
 $22 = (__is_string($21)|0);
 $23 = $22&255;
 $24 = ($23|0)!=(0);
 if ($24) {
  $25 = $1;
  $26 = HEAP32[$25>>2]|0;
  $27 = ((($26)) + 4|0);
  $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
  $29 = (__is_string($28)|0);
  $30 = $29&255;
  $31 = ($30|0)!=(0);
  if ($31) {
   $_str1 = 0;
   $_str2 = 0;
   $32 = $1;
   $33 = HEAP32[$32>>2]|0;
   $tpptr = $33;
   $34 = $tpptr;
   $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
   $opnd1 = $35;
   $36 = $tpptr;
   $37 = ((($36)) + 4|0);
   $38 = HEAPU8[$37>>0]|(HEAPU8[$37+1>>0]<<8)|(HEAPU8[$37+2>>0]<<16)|(HEAPU8[$37+3>>0]<<24);
   $opnd2 = $38;
   $39 = $tpptr;
   $40 = ((($39)) + 8|0);
   $41 = HEAPU8[$40>>0]|(HEAPU8[$40+1>>0]<<8)|(HEAPU8[$40+2>>0]<<16)|(HEAPU8[$40+3>>0]<<24);
   $val = $41;
   $42 = $val;
   HEAP8[$42>>0]=2&255;HEAP8[$42+1>>0]=(2>>8)&255;HEAP8[$42+2>>0]=(2>>16)&255;HEAP8[$42+3>>0]=2>>24;
   $43 = $opnd1;
   $44 = (__extract_string($43)|0);
   $_str1 = $44;
   $45 = $opnd2;
   $46 = (__extract_string($45)|0);
   $_str2 = $46;
   $47 = $_str1;
   $48 = $_str2;
   $49 = (_strcmp($47,$48)|0);
   $50 = ($49|0)<=(0);
   $51 = $50&1;
   $52 = $val;
   $53 = ((($52)) + 4|0);
   HEAP8[$53>>0]=$51&255;HEAP8[$53+1>>0]=($51>>8)&255;HEAP8[$53+2>>0]=($51>>16)&255;HEAP8[$53+3>>0]=$51>>24;
   $350 = $result;
   STACKTOP = sp;return ($350|0);
  }
 }
 $54 = $1;
 $55 = HEAP32[$54>>2]|0;
 $56 = HEAPU8[$55>>0]|(HEAPU8[$55+1>>0]<<8)|(HEAPU8[$55+2>>0]<<16)|(HEAPU8[$55+3>>0]<<24);
 $57 = (__is_string($56)|0);
 $58 = ($57<<24>>24)!=(0);
 $59 = $1;
 $60 = HEAP32[$59>>2]|0;
 $61 = ((($60)) + 8|0);
 $62 = HEAPU8[$61>>0]|(HEAPU8[$61+1>>0]<<8)|(HEAPU8[$61+2>>0]<<16)|(HEAPU8[$61+3>>0]<<24);
 if ($58) {
  $val1 = $62;
  $63 = $val1;
  HEAP8[$63>>0]=2&255;HEAP8[$63+1>>0]=(2>>8)&255;HEAP8[$63+2>>0]=(2>>16)&255;HEAP8[$63+3>>0]=2>>24;
  $64 = $val1;
  $65 = ((($64)) + 4|0);
  HEAP8[$65>>0]=0&255;HEAP8[$65+1>>0]=(0>>8)&255;HEAP8[$65+2>>0]=(0>>16)&255;HEAP8[$65+3>>0]=0>>24;
 } else {
  $val2 = $62;
  $66 = $val2;
  HEAP8[$66>>0]=2&255;HEAP8[$66+1>>0]=(2>>8)&255;HEAP8[$66+2>>0]=(2>>16)&255;HEAP8[$66+3>>0]=2>>24;
  $67 = $val2;
  $68 = ((($67)) + 4|0);
  HEAP8[$68>>0]=1&255;HEAP8[$68+1>>0]=(1>>8)&255;HEAP8[$68+2>>0]=(1>>16)&255;HEAP8[$68+3>>0]=1>>24;
 }
 $69 = $1;
 $70 = ($69|0)!=(0|0);
 if ($70) {
  $71 = $1;
  $72 = HEAP32[$71>>2]|0;
  $73 = ($72|0)!=(0|0);
  if ($73) {
   $74 = $1;
   $75 = HEAP32[$74>>2]|0;
   $76 = HEAPU8[$75>>0]|(HEAPU8[$75+1>>0]<<8)|(HEAPU8[$75+2>>0]<<16)|(HEAPU8[$75+3>>0]<<24);
   $77 = ($76|0)!=(0|0);
   if ($77) {
    $78 = $0;
    $79 = $0;
    $80 = ((($79)) + 67|0);
    $81 = HEAPU8[$80>>0]|(HEAPU8[$80+1>>0]<<8)|(HEAPU8[$80+2>>0]<<16)|(HEAPU8[$80+3>>0]<<24);
    $82 = (__set_current_error($78,18,$81)|0);
    $83 = ($82<<24>>24)!=(0);
    if (!($83)) {
     $350 = $result;
     STACKTOP = sp;return ($350|0);
    }
    $84 = $0;
    $85 = $1;
    $86 = HEAP32[$85>>2]|0;
    $87 = HEAPU8[$86>>0]|(HEAPU8[$86+1>>0]<<8)|(HEAPU8[$86+2>>0]<<16)|(HEAPU8[$86+3>>0]<<24);
    $88 = ((($87)) + 9|0);
    $89 = HEAPU8[$88>>0]|(HEAPU8[$88+1>>0]<<8)|(HEAPU8[$88+2>>0]<<16)|(HEAPU8[$88+3>>0]<<24);
    $90 = $1;
    $91 = HEAP32[$90>>2]|0;
    $92 = HEAPU8[$91>>0]|(HEAPU8[$91+1>>0]<<8)|(HEAPU8[$91+2>>0]<<16)|(HEAPU8[$91+3>>0]<<24);
    $93 = ((($92)) + 13|0);
    $94 = HEAPU8[$93>>0]|(HEAPU8[$93+1>>0]<<8);
    $95 = $1;
    $96 = HEAP32[$95>>2]|0;
    $97 = HEAPU8[$96>>0]|(HEAPU8[$96+1>>0]<<8)|(HEAPU8[$96+2>>0]<<16)|(HEAPU8[$96+3>>0]<<24);
    $98 = ((($97)) + 15|0);
    $99 = HEAPU8[$98>>0]|(HEAPU8[$98+1>>0]<<8);
    __set_error_pos($84,$89,$94,$99);
    $350 = $result;
    STACKTOP = sp;return ($350|0);
   }
  }
 }
 $100 = $0;
 $101 = $0;
 $102 = ((($101)) + 67|0);
 $103 = HEAPU8[$102>>0]|(HEAPU8[$102+1>>0]<<8)|(HEAPU8[$102+2>>0]<<16)|(HEAPU8[$102+3>>0]<<24);
 $104 = (__set_current_error($100,18,$103)|0);
 $105 = ($104<<24>>24)!=(0);
 if (!($105)) {
  $350 = $result;
  STACKTOP = sp;return ($350|0);
 }
 $106 = $0;
 __set_error_pos($106,0,0,0);
 $350 = $result;
 STACKTOP = sp;return ($350|0);
}
function __core_greater_equal($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0.0, $191 = 0, $192 = 0, $193 = 0.0, $194 = 0, $195 = 0, $196 = 0.0, $197 = 0, $198 = 0, $199 = 0.0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0.0, $213 = 0, $214 = 0, $215 = 0.0, $216 = 0, $217 = 0, $218 = 0.0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0.0, $227 = 0.0, $228 = 0.0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0.0, $234 = 0.0, $235 = 0.0, $236 = 0, $237 = 0, $238 = 0.0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0.0, $247 = 0, $248 = 0.0, $249 = 0, $25 = 0, $250 = 0, $251 = 0.0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0.0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0.0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0;
 var $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0;
 var $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0;
 var $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0;
 var $350 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $_str1 = 0, $_str2 = 0, $opnd1 = 0, $opnd110 = 0, $opnd14 = 0, $opnd2 = 0, $opnd211 = 0, $opnd25 = 0, $opndv1 = 0;
 var $opndv17 = 0, $opndv2 = 0, $opndv28 = 0, $or$cond = 0, $result = 0, $tpptr = 0, $tpptr3 = 0, $tpptr9 = 0, $tpr = 0, $val = 0, $val1 = 0, $val12 = 0, $val2 = 0, $val6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $opndv1 = sp + 131|0;
 $opndv2 = sp + 114|0;
 $opndv17 = sp + 97|0;
 $opndv28 = sp + 80|0;
 $0 = $s;
 $1 = $l;
 $result = 0;
 $tpr = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),15358,(5030|0));
  // unreachable;
 }
 $6 = $1;
 $7 = HEAP32[$6>>2]|0;
 $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
 $9 = (__is_string($8)|0);
 $10 = $9&255;
 $11 = ($10|0)!=(0);
 if (!($11)) {
  $12 = $1;
  $13 = HEAP32[$12>>2]|0;
  $14 = ((($13)) + 4|0);
  $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
  $16 = (__is_string($15)|0);
  $17 = $16&255;
  $18 = ($17|0)!=(0);
  if (!($18)) {
   $107 = $1;
   $108 = HEAP32[$107>>2]|0;
   $109 = HEAPU8[$108>>0]|(HEAPU8[$108+1>>0]<<8)|(HEAPU8[$108+2>>0]<<16)|(HEAPU8[$108+3>>0]<<24);
   $110 = (__is_number($109)|0);
   $111 = $110&255;
   $112 = ($111|0)!=(0);
   if ($112) {
    $113 = $1;
    $114 = HEAP32[$113>>2]|0;
    $115 = ((($114)) + 4|0);
    $116 = HEAPU8[$115>>0]|(HEAPU8[$115+1>>0]<<8)|(HEAPU8[$115+2>>0]<<16)|(HEAPU8[$115+3>>0]<<24);
    $117 = (__is_number($116)|0);
    $118 = $117&255;
    $119 = ($118|0)!=(0);
    if ($119) {
     $120 = $1;
     $121 = HEAP32[$120>>2]|0;
     $tpptr3 = $121;
     $122 = $tpptr3;
     $123 = HEAPU8[$122>>0]|(HEAPU8[$122+1>>0]<<8)|(HEAPU8[$122+2>>0]<<16)|(HEAPU8[$122+3>>0]<<24);
     $opnd14 = $123;
     $124 = $tpptr3;
     $125 = ((($124)) + 4|0);
     $126 = HEAPU8[$125>>0]|(HEAPU8[$125+1>>0]<<8)|(HEAPU8[$125+2>>0]<<16)|(HEAPU8[$125+3>>0]<<24);
     $opnd25 = $126;
     $127 = $tpptr3;
     $128 = ((($127)) + 8|0);
     $129 = HEAPU8[$128>>0]|(HEAPU8[$128+1>>0]<<8)|(HEAPU8[$128+2>>0]<<16)|(HEAPU8[$128+3>>0]<<24);
     $val6 = $129;
     $130 = $opnd14;
     $131 = HEAPU8[$130>>0]|(HEAPU8[$130+1>>0]<<8)|(HEAPU8[$130+2>>0]<<16)|(HEAPU8[$130+3>>0]<<24);
     $132 = ($131|0)==(2);
     if ($132) {
      $143 = 1;
     } else {
      $133 = $opnd14;
      $134 = HEAPU8[$133>>0]|(HEAPU8[$133+1>>0]<<8)|(HEAPU8[$133+2>>0]<<16)|(HEAPU8[$133+3>>0]<<24);
      $135 = ($134|0)==(9);
      if ($135) {
       $136 = $opnd14;
       $137 = ((($136)) + 4|0);
       $138 = HEAPU8[$137>>0]|(HEAPU8[$137+1>>0]<<8)|(HEAPU8[$137+2>>0]<<16)|(HEAPU8[$137+3>>0]<<24);
       $139 = ((($138)) + 4|0);
       $140 = HEAPU8[$139>>0]|(HEAPU8[$139+1>>0]<<8)|(HEAPU8[$139+2>>0]<<16)|(HEAPU8[$139+3>>0]<<24);
       $141 = HEAPU8[$140>>0]|(HEAPU8[$140+1>>0]<<8)|(HEAPU8[$140+2>>0]<<16)|(HEAPU8[$140+3>>0]<<24);
       $142 = ($141|0)==(2);
       $143 = $142;
      } else {
       $143 = 0;
      }
     }
     $144 = $143 ? 2 : 3;
     HEAP8[$opndv1>>0]=$144&255;HEAP8[$opndv1+1>>0]=($144>>8)&255;HEAP8[$opndv1+2>>0]=($144>>16)&255;HEAP8[$opndv1+3>>0]=$144>>24;
     $145 = ((($opndv1)) + 4|0);
     $146 = $opnd14;
     $147 = HEAPU8[$146>>0]|(HEAPU8[$146+1>>0]<<8)|(HEAPU8[$146+2>>0]<<16)|(HEAPU8[$146+3>>0]<<24);
     $148 = ($147|0)==(9);
     $149 = $opnd14;
     $150 = ((($149)) + 4|0);
     if ($148) {
      $151 = HEAPU8[$150>>0]|(HEAPU8[$150+1>>0]<<8)|(HEAPU8[$150+2>>0]<<16)|(HEAPU8[$150+3>>0]<<24);
      $152 = ((($151)) + 4|0);
      $153 = HEAPU8[$152>>0]|(HEAPU8[$152+1>>0]<<8)|(HEAPU8[$152+2>>0]<<16)|(HEAPU8[$152+3>>0]<<24);
      $154 = ((($153)) + 4|0);
      ;HEAP8[$145>>0]=HEAP8[$154>>0]|0;HEAP8[$145+1>>0]=HEAP8[$154+1>>0]|0;HEAP8[$145+2>>0]=HEAP8[$154+2>>0]|0;HEAP8[$145+3>>0]=HEAP8[$154+3>>0]|0;
     } else {
      ;HEAP8[$145>>0]=HEAP8[$150>>0]|0;HEAP8[$145+1>>0]=HEAP8[$150+1>>0]|0;HEAP8[$145+2>>0]=HEAP8[$150+2>>0]|0;HEAP8[$145+3>>0]=HEAP8[$150+3>>0]|0;
     }
     $155 = $opnd25;
     $156 = HEAPU8[$155>>0]|(HEAPU8[$155+1>>0]<<8)|(HEAPU8[$155+2>>0]<<16)|(HEAPU8[$155+3>>0]<<24);
     $157 = ($156|0)==(2);
     if ($157) {
      $168 = 1;
     } else {
      $158 = $opnd25;
      $159 = HEAPU8[$158>>0]|(HEAPU8[$158+1>>0]<<8)|(HEAPU8[$158+2>>0]<<16)|(HEAPU8[$158+3>>0]<<24);
      $160 = ($159|0)==(9);
      if ($160) {
       $161 = $opnd25;
       $162 = ((($161)) + 4|0);
       $163 = HEAPU8[$162>>0]|(HEAPU8[$162+1>>0]<<8)|(HEAPU8[$162+2>>0]<<16)|(HEAPU8[$162+3>>0]<<24);
       $164 = ((($163)) + 4|0);
       $165 = HEAPU8[$164>>0]|(HEAPU8[$164+1>>0]<<8)|(HEAPU8[$164+2>>0]<<16)|(HEAPU8[$164+3>>0]<<24);
       $166 = HEAPU8[$165>>0]|(HEAPU8[$165+1>>0]<<8)|(HEAPU8[$165+2>>0]<<16)|(HEAPU8[$165+3>>0]<<24);
       $167 = ($166|0)==(2);
       $168 = $167;
      } else {
       $168 = 0;
      }
     }
     $169 = $168 ? 2 : 3;
     HEAP8[$opndv2>>0]=$169&255;HEAP8[$opndv2+1>>0]=($169>>8)&255;HEAP8[$opndv2+2>>0]=($169>>16)&255;HEAP8[$opndv2+3>>0]=$169>>24;
     $170 = ((($opndv2)) + 4|0);
     $171 = $opnd25;
     $172 = HEAPU8[$171>>0]|(HEAPU8[$171+1>>0]<<8)|(HEAPU8[$171+2>>0]<<16)|(HEAPU8[$171+3>>0]<<24);
     $173 = ($172|0)==(9);
     $174 = $opnd25;
     $175 = ((($174)) + 4|0);
     if ($173) {
      $176 = HEAPU8[$175>>0]|(HEAPU8[$175+1>>0]<<8)|(HEAPU8[$175+2>>0]<<16)|(HEAPU8[$175+3>>0]<<24);
      $177 = ((($176)) + 4|0);
      $178 = HEAPU8[$177>>0]|(HEAPU8[$177+1>>0]<<8)|(HEAPU8[$177+2>>0]<<16)|(HEAPU8[$177+3>>0]<<24);
      $179 = ((($178)) + 4|0);
      ;HEAP8[$170>>0]=HEAP8[$179>>0]|0;HEAP8[$170+1>>0]=HEAP8[$179+1>>0]|0;HEAP8[$170+2>>0]=HEAP8[$179+2>>0]|0;HEAP8[$170+3>>0]=HEAP8[$179+3>>0]|0;
     } else {
      ;HEAP8[$170>>0]=HEAP8[$175>>0]|0;HEAP8[$170+1>>0]=HEAP8[$175+1>>0]|0;HEAP8[$170+2>>0]=HEAP8[$175+2>>0]|0;HEAP8[$170+3>>0]=HEAP8[$175+3>>0]|0;
     }
     $180 = HEAPU8[$opndv1>>0]|(HEAPU8[$opndv1+1>>0]<<8)|(HEAPU8[$opndv1+2>>0]<<16)|(HEAPU8[$opndv1+3>>0]<<24);
     $181 = ($180|0)==(2);
     do {
      if ($181) {
       $182 = HEAPU8[$opndv2>>0]|(HEAPU8[$opndv2+1>>0]<<8)|(HEAPU8[$opndv2+2>>0]<<16)|(HEAPU8[$opndv2+3>>0]<<24);
       $183 = ($182|0)==(2);
       if ($183) {
        $184 = ((($opndv1)) + 4|0);
        $185 = HEAPU8[$184>>0]|(HEAPU8[$184+1>>0]<<8)|(HEAPU8[$184+2>>0]<<16)|(HEAPU8[$184+3>>0]<<24);
        $186 = ((($opndv2)) + 4|0);
        $187 = HEAPU8[$186>>0]|(HEAPU8[$186+1>>0]<<8)|(HEAPU8[$186+2>>0]<<16)|(HEAPU8[$186+3>>0]<<24);
        $188 = ($185|0)>=($187|0);
        $189 = $188&1;
        $190 = (+($189|0));
        $191 = ((($opndv1)) + 4|0);
        $192 = HEAPU8[$191>>0]|(HEAPU8[$191+1>>0]<<8)|(HEAPU8[$191+2>>0]<<16)|(HEAPU8[$191+3>>0]<<24);
        $193 = (+($192|0));
        $194 = ((($opndv2)) + 4|0);
        $195 = HEAPU8[$194>>0]|(HEAPU8[$194+1>>0]<<8)|(HEAPU8[$194+2>>0]<<16)|(HEAPU8[$194+3>>0]<<24);
        $196 = (+($195|0));
        $197 = $193 >= $196;
        $198 = $197&1;
        $199 = (+($198|0));
        $200 = $190 == $199;
        $201 = $val6;
        if ($200) {
         HEAP8[$201>>0]=2&255;HEAP8[$201+1>>0]=(2>>8)&255;HEAP8[$201+2>>0]=(2>>16)&255;HEAP8[$201+3>>0]=2>>24;
         $202 = ((($opndv1)) + 4|0);
         $203 = HEAPU8[$202>>0]|(HEAPU8[$202+1>>0]<<8)|(HEAPU8[$202+2>>0]<<16)|(HEAPU8[$202+3>>0]<<24);
         $204 = ((($opndv2)) + 4|0);
         $205 = HEAPU8[$204>>0]|(HEAPU8[$204+1>>0]<<8)|(HEAPU8[$204+2>>0]<<16)|(HEAPU8[$204+3>>0]<<24);
         $206 = ($203|0)>=($205|0);
         $207 = $206&1;
         $208 = $val6;
         $209 = ((($208)) + 4|0);
         HEAP8[$209>>0]=$207&255;HEAP8[$209+1>>0]=($207>>8)&255;HEAP8[$209+2>>0]=($207>>16)&255;HEAP8[$209+3>>0]=$207>>24;
         break;
        } else {
         HEAP8[$201>>0]=3&255;HEAP8[$201+1>>0]=(3>>8)&255;HEAP8[$201+2>>0]=(3>>16)&255;HEAP8[$201+3>>0]=3>>24;
         $210 = ((($opndv1)) + 4|0);
         $211 = HEAPU8[$210>>0]|(HEAPU8[$210+1>>0]<<8)|(HEAPU8[$210+2>>0]<<16)|(HEAPU8[$210+3>>0]<<24);
         $212 = (+($211|0));
         $213 = ((($opndv2)) + 4|0);
         $214 = HEAPU8[$213>>0]|(HEAPU8[$213+1>>0]<<8)|(HEAPU8[$213+2>>0]<<16)|(HEAPU8[$213+3>>0]<<24);
         $215 = (+($214|0));
         $216 = $212 >= $215;
         $217 = $216&1;
         $218 = (+($217|0));
         $219 = $val6;
         $220 = ((($219)) + 4|0);
         HEAPF32[tempDoublePtr>>2]=$218;HEAP8[$220>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$220+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$220+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$220+3>>0]=HEAP8[tempDoublePtr+3>>0];
         break;
        }
       } else {
        label = 37;
       }
      } else {
       label = 37;
      }
     } while(0);
     if ((label|0) == 37) {
      $221 = $val6;
      HEAP8[$221>>0]=3&255;HEAP8[$221+1>>0]=(3>>8)&255;HEAP8[$221+2>>0]=(3>>16)&255;HEAP8[$221+3>>0]=3>>24;
      $222 = HEAPU8[$opndv1>>0]|(HEAPU8[$opndv1+1>>0]<<8)|(HEAPU8[$opndv1+2>>0]<<16)|(HEAPU8[$opndv1+3>>0]<<24);
      $223 = ($222|0)==(2);
      $224 = ((($opndv1)) + 4|0);
      $225 = HEAPU8[$224>>0]|(HEAPU8[$224+1>>0]<<8)|(HEAPU8[$224+2>>0]<<16)|(HEAPU8[$224+3>>0]<<24);
      $226 = (+($225|0));
      HEAP8[tempDoublePtr>>0]=HEAP8[$224>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$224+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$224+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$224+3>>0];$227 = +HEAPF32[tempDoublePtr>>2];
      $228 = $223 ? $226 : $227;
      $229 = HEAPU8[$opndv2>>0]|(HEAPU8[$opndv2+1>>0]<<8)|(HEAPU8[$opndv2+2>>0]<<16)|(HEAPU8[$opndv2+3>>0]<<24);
      $230 = ($229|0)==(2);
      $231 = ((($opndv2)) + 4|0);
      $232 = HEAPU8[$231>>0]|(HEAPU8[$231+1>>0]<<8)|(HEAPU8[$231+2>>0]<<16)|(HEAPU8[$231+3>>0]<<24);
      $233 = (+($232|0));
      HEAP8[tempDoublePtr>>0]=HEAP8[$231>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$231+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$231+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$231+3>>0];$234 = +HEAPF32[tempDoublePtr>>2];
      $235 = $230 ? $233 : $234;
      $236 = $228 >= $235;
      $237 = $236&1;
      $238 = (+($237|0));
      $239 = $val6;
      $240 = ((($239)) + 4|0);
      HEAPF32[tempDoublePtr>>2]=$238;HEAP8[$240>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$240+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$240+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$240+3>>0]=HEAP8[tempDoublePtr+3>>0];
     }
     $241 = $val6;
     $242 = HEAPU8[$241>>0]|(HEAPU8[$241+1>>0]<<8)|(HEAPU8[$241+2>>0]<<16)|(HEAPU8[$241+3>>0]<<24);
     $243 = ($242|0)==(3);
     if ($243) {
      $244 = $val6;
      $245 = ((($244)) + 4|0);
      HEAP8[tempDoublePtr>>0]=HEAP8[$245>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$245+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$245+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$245+3>>0];$246 = +HEAPF32[tempDoublePtr>>2];
      $247 = (~~(($246)));
      $248 = (+($247|0));
      $249 = $val6;
      $250 = ((($249)) + 4|0);
      HEAP8[tempDoublePtr>>0]=HEAP8[$250>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$250+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$250+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$250+3>>0];$251 = +HEAPF32[tempDoublePtr>>2];
      $252 = $248 == $251;
      if ($252) {
       $253 = $val6;
       HEAP8[$253>>0]=2&255;HEAP8[$253+1>>0]=(2>>8)&255;HEAP8[$253+2>>0]=(2>>16)&255;HEAP8[$253+3>>0]=2>>24;
       $254 = $val6;
       $255 = ((($254)) + 4|0);
       HEAP8[tempDoublePtr>>0]=HEAP8[$255>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$255+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$255+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$255+3>>0];$256 = +HEAPF32[tempDoublePtr>>2];
       $257 = (~~(($256)));
       $258 = $val6;
       $259 = ((($258)) + 4|0);
       HEAP8[$259>>0]=$257&255;HEAP8[$259+1>>0]=($257>>8)&255;HEAP8[$259+2>>0]=($257>>16)&255;HEAP8[$259+3>>0]=$257>>24;
      }
     }
     $260 = $1;
     $261 = HEAP32[$260>>2]|0;
     $tpr = $261;
     $262 = $tpr;
     $263 = ((($262)) + 8|0);
     $264 = HEAPU8[$263>>0]|(HEAPU8[$263+1>>0]<<8)|(HEAPU8[$263+2>>0]<<16)|(HEAPU8[$263+3>>0]<<24);
     $265 = HEAPU8[$264>>0]|(HEAPU8[$264+1>>0]<<8)|(HEAPU8[$264+2>>0]<<16)|(HEAPU8[$264+3>>0]<<24);
     $266 = ($265|0)!=(2);
     if (!($266)) {
      $350 = $result;
      STACKTOP = sp;return ($350|0);
     }
     $267 = $tpr;
     $268 = ((($267)) + 8|0);
     $269 = HEAPU8[$268>>0]|(HEAPU8[$268+1>>0]<<8)|(HEAPU8[$268+2>>0]<<16)|(HEAPU8[$268+3>>0]<<24);
     HEAP8[$269>>0]=2&255;HEAP8[$269+1>>0]=(2>>8)&255;HEAP8[$269+2>>0]=(2>>16)&255;HEAP8[$269+3>>0]=2>>24;
     $270 = $tpr;
     $271 = ((($270)) + 8|0);
     $272 = HEAPU8[$271>>0]|(HEAPU8[$271+1>>0]<<8)|(HEAPU8[$271+2>>0]<<16)|(HEAPU8[$271+3>>0]<<24);
     $273 = ((($272)) + 4|0);
     HEAP8[tempDoublePtr>>0]=HEAP8[$273>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$273+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$273+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$273+3>>0];$274 = +HEAPF32[tempDoublePtr>>2];
     $275 = $274 != 0.0;
     $276 = $275&1;
     $277 = $tpr;
     $278 = ((($277)) + 8|0);
     $279 = HEAPU8[$278>>0]|(HEAPU8[$278+1>>0]<<8)|(HEAPU8[$278+2>>0]<<16)|(HEAPU8[$278+3>>0]<<24);
     $280 = ((($279)) + 4|0);
     HEAP8[$280>>0]=$276&255;HEAP8[$280+1>>0]=($276>>8)&255;HEAP8[$280+2>>0]=($276>>16)&255;HEAP8[$280+3>>0]=$276>>24;
     $350 = $result;
     STACKTOP = sp;return ($350|0);
    }
   }
   $281 = $1;
   $282 = HEAP32[$281>>2]|0;
   $tpptr9 = $282;
   $283 = $tpptr9;
   $284 = HEAPU8[$283>>0]|(HEAPU8[$283+1>>0]<<8)|(HEAPU8[$283+2>>0]<<16)|(HEAPU8[$283+3>>0]<<24);
   $opnd110 = $284;
   $285 = $tpptr9;
   $286 = ((($285)) + 4|0);
   $287 = HEAPU8[$286>>0]|(HEAPU8[$286+1>>0]<<8)|(HEAPU8[$286+2>>0]<<16)|(HEAPU8[$286+3>>0]<<24);
   $opnd211 = $287;
   $288 = $tpptr9;
   $289 = ((($288)) + 8|0);
   $290 = HEAPU8[$289>>0]|(HEAPU8[$289+1>>0]<<8)|(HEAPU8[$289+2>>0]<<16)|(HEAPU8[$289+3>>0]<<24);
   $val12 = $290;
   $291 = $opnd110;
   $292 = HEAPU8[$291>>0]|(HEAPU8[$291+1>>0]<<8)|(HEAPU8[$291+2>>0]<<16)|(HEAPU8[$291+3>>0]<<24);
   $293 = ($292|0)==(9);
   $294 = $opnd110;
   if ($293) {
    $295 = ((($294)) + 4|0);
    $296 = HEAPU8[$295>>0]|(HEAPU8[$295+1>>0]<<8)|(HEAPU8[$295+2>>0]<<16)|(HEAPU8[$295+3>>0]<<24);
    $297 = ((($296)) + 4|0);
    $298 = HEAPU8[$297>>0]|(HEAPU8[$297+1>>0]<<8)|(HEAPU8[$297+2>>0]<<16)|(HEAPU8[$297+3>>0]<<24);
    $299 = HEAPU8[$298>>0]|(HEAPU8[$298+1>>0]<<8)|(HEAPU8[$298+2>>0]<<16)|(HEAPU8[$298+3>>0]<<24);
    $301 = $299;
   } else {
    $300 = HEAPU8[$294>>0]|(HEAPU8[$294+1>>0]<<8)|(HEAPU8[$294+2>>0]<<16)|(HEAPU8[$294+3>>0]<<24);
    $301 = $300;
   }
   HEAP8[$opndv17>>0]=$301&255;HEAP8[$opndv17+1>>0]=($301>>8)&255;HEAP8[$opndv17+2>>0]=($301>>16)&255;HEAP8[$opndv17+3>>0]=$301>>24;
   $302 = ((($opndv17)) + 4|0);
   $303 = $opnd110;
   $304 = HEAPU8[$303>>0]|(HEAPU8[$303+1>>0]<<8)|(HEAPU8[$303+2>>0]<<16)|(HEAPU8[$303+3>>0]<<24);
   $305 = ($304|0)==(9);
   $306 = $opnd110;
   $307 = ((($306)) + 4|0);
   if ($305) {
    $308 = HEAPU8[$307>>0]|(HEAPU8[$307+1>>0]<<8)|(HEAPU8[$307+2>>0]<<16)|(HEAPU8[$307+3>>0]<<24);
    $309 = ((($308)) + 4|0);
    $310 = HEAPU8[$309>>0]|(HEAPU8[$309+1>>0]<<8)|(HEAPU8[$309+2>>0]<<16)|(HEAPU8[$309+3>>0]<<24);
    $311 = ((($310)) + 4|0);
    ;HEAP8[$302>>0]=HEAP8[$311>>0]|0;HEAP8[$302+1>>0]=HEAP8[$311+1>>0]|0;HEAP8[$302+2>>0]=HEAP8[$311+2>>0]|0;HEAP8[$302+3>>0]=HEAP8[$311+3>>0]|0;
   } else {
    ;HEAP8[$302>>0]=HEAP8[$307>>0]|0;HEAP8[$302+1>>0]=HEAP8[$307+1>>0]|0;HEAP8[$302+2>>0]=HEAP8[$307+2>>0]|0;HEAP8[$302+3>>0]=HEAP8[$307+3>>0]|0;
   }
   $312 = $opnd211;
   $313 = HEAPU8[$312>>0]|(HEAPU8[$312+1>>0]<<8)|(HEAPU8[$312+2>>0]<<16)|(HEAPU8[$312+3>>0]<<24);
   $314 = ($313|0)==(9);
   $315 = $opnd211;
   if ($314) {
    $316 = ((($315)) + 4|0);
    $317 = HEAPU8[$316>>0]|(HEAPU8[$316+1>>0]<<8)|(HEAPU8[$316+2>>0]<<16)|(HEAPU8[$316+3>>0]<<24);
    $318 = ((($317)) + 4|0);
    $319 = HEAPU8[$318>>0]|(HEAPU8[$318+1>>0]<<8)|(HEAPU8[$318+2>>0]<<16)|(HEAPU8[$318+3>>0]<<24);
    $320 = HEAPU8[$319>>0]|(HEAPU8[$319+1>>0]<<8)|(HEAPU8[$319+2>>0]<<16)|(HEAPU8[$319+3>>0]<<24);
    $322 = $320;
   } else {
    $321 = HEAPU8[$315>>0]|(HEAPU8[$315+1>>0]<<8)|(HEAPU8[$315+2>>0]<<16)|(HEAPU8[$315+3>>0]<<24);
    $322 = $321;
   }
   HEAP8[$opndv28>>0]=$322&255;HEAP8[$opndv28+1>>0]=($322>>8)&255;HEAP8[$opndv28+2>>0]=($322>>16)&255;HEAP8[$opndv28+3>>0]=$322>>24;
   $323 = ((($opndv28)) + 4|0);
   $324 = $opnd211;
   $325 = HEAPU8[$324>>0]|(HEAPU8[$324+1>>0]<<8)|(HEAPU8[$324+2>>0]<<16)|(HEAPU8[$324+3>>0]<<24);
   $326 = ($325|0)==(9);
   $327 = $opnd211;
   $328 = ((($327)) + 4|0);
   if ($326) {
    $329 = HEAPU8[$328>>0]|(HEAPU8[$328+1>>0]<<8)|(HEAPU8[$328+2>>0]<<16)|(HEAPU8[$328+3>>0]<<24);
    $330 = ((($329)) + 4|0);
    $331 = HEAPU8[$330>>0]|(HEAPU8[$330+1>>0]<<8)|(HEAPU8[$330+2>>0]<<16)|(HEAPU8[$330+3>>0]<<24);
    $332 = ((($331)) + 4|0);
    ;HEAP8[$323>>0]=HEAP8[$332>>0]|0;HEAP8[$323+1>>0]=HEAP8[$332+1>>0]|0;HEAP8[$323+2>>0]=HEAP8[$332+2>>0]|0;HEAP8[$323+3>>0]=HEAP8[$332+3>>0]|0;
   } else {
    ;HEAP8[$323>>0]=HEAP8[$328>>0]|0;HEAP8[$323+1>>0]=HEAP8[$328+1>>0]|0;HEAP8[$323+2>>0]=HEAP8[$328+2>>0]|0;HEAP8[$323+3>>0]=HEAP8[$328+3>>0]|0;
   }
   $333 = $val12;
   HEAP8[$333>>0]=2&255;HEAP8[$333+1>>0]=(2>>8)&255;HEAP8[$333+2>>0]=(2>>16)&255;HEAP8[$333+3>>0]=2>>24;
   $334 = HEAPU8[$opndv17>>0]|(HEAPU8[$opndv17+1>>0]<<8)|(HEAPU8[$opndv17+2>>0]<<16)|(HEAPU8[$opndv17+3>>0]<<24);
   $335 = HEAPU8[$opndv28>>0]|(HEAPU8[$opndv28+1>>0]<<8)|(HEAPU8[$opndv28+2>>0]<<16)|(HEAPU8[$opndv28+3>>0]<<24);
   $336 = ($334|0)==($335|0);
   if ($336) {
    $337 = ((($opndv17)) + 4|0);
    $338 = ((($opndv28)) + 4|0);
    $339 = (_mb_memcmp($337,$338,4)|0);
    $340 = ($339|0)>=(0);
    $341 = $340&1;
    $342 = $val12;
    $343 = ((($342)) + 4|0);
    HEAP8[$343>>0]=$341&255;HEAP8[$343+1>>0]=($341>>8)&255;HEAP8[$343+2>>0]=($341>>16)&255;HEAP8[$343+3>>0]=$341>>24;
    $350 = $result;
    STACKTOP = sp;return ($350|0);
   } else {
    $344 = HEAPU8[$opndv17>>0]|(HEAPU8[$opndv17+1>>0]<<8)|(HEAPU8[$opndv17+2>>0]<<16)|(HEAPU8[$opndv17+3>>0]<<24);
    $345 = HEAPU8[$opndv28>>0]|(HEAPU8[$opndv28+1>>0]<<8)|(HEAPU8[$opndv28+2>>0]<<16)|(HEAPU8[$opndv28+3>>0]<<24);
    $346 = ($344|0)>=($345|0);
    $347 = $346&1;
    $348 = $val12;
    $349 = ((($348)) + 4|0);
    HEAP8[$349>>0]=$347&255;HEAP8[$349+1>>0]=($347>>8)&255;HEAP8[$349+2>>0]=($347>>16)&255;HEAP8[$349+3>>0]=$347>>24;
    $350 = $result;
    STACKTOP = sp;return ($350|0);
   }
  }
 }
 $19 = $1;
 $20 = HEAP32[$19>>2]|0;
 $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
 $22 = (__is_string($21)|0);
 $23 = $22&255;
 $24 = ($23|0)!=(0);
 if ($24) {
  $25 = $1;
  $26 = HEAP32[$25>>2]|0;
  $27 = ((($26)) + 4|0);
  $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
  $29 = (__is_string($28)|0);
  $30 = $29&255;
  $31 = ($30|0)!=(0);
  if ($31) {
   $_str1 = 0;
   $_str2 = 0;
   $32 = $1;
   $33 = HEAP32[$32>>2]|0;
   $tpptr = $33;
   $34 = $tpptr;
   $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
   $opnd1 = $35;
   $36 = $tpptr;
   $37 = ((($36)) + 4|0);
   $38 = HEAPU8[$37>>0]|(HEAPU8[$37+1>>0]<<8)|(HEAPU8[$37+2>>0]<<16)|(HEAPU8[$37+3>>0]<<24);
   $opnd2 = $38;
   $39 = $tpptr;
   $40 = ((($39)) + 8|0);
   $41 = HEAPU8[$40>>0]|(HEAPU8[$40+1>>0]<<8)|(HEAPU8[$40+2>>0]<<16)|(HEAPU8[$40+3>>0]<<24);
   $val = $41;
   $42 = $val;
   HEAP8[$42>>0]=2&255;HEAP8[$42+1>>0]=(2>>8)&255;HEAP8[$42+2>>0]=(2>>16)&255;HEAP8[$42+3>>0]=2>>24;
   $43 = $opnd1;
   $44 = (__extract_string($43)|0);
   $_str1 = $44;
   $45 = $opnd2;
   $46 = (__extract_string($45)|0);
   $_str2 = $46;
   $47 = $_str1;
   $48 = $_str2;
   $49 = (_strcmp($47,$48)|0);
   $50 = ($49|0)>=(0);
   $51 = $50&1;
   $52 = $val;
   $53 = ((($52)) + 4|0);
   HEAP8[$53>>0]=$51&255;HEAP8[$53+1>>0]=($51>>8)&255;HEAP8[$53+2>>0]=($51>>16)&255;HEAP8[$53+3>>0]=$51>>24;
   $350 = $result;
   STACKTOP = sp;return ($350|0);
  }
 }
 $54 = $1;
 $55 = HEAP32[$54>>2]|0;
 $56 = HEAPU8[$55>>0]|(HEAPU8[$55+1>>0]<<8)|(HEAPU8[$55+2>>0]<<16)|(HEAPU8[$55+3>>0]<<24);
 $57 = (__is_string($56)|0);
 $58 = ($57<<24>>24)!=(0);
 $59 = $1;
 $60 = HEAP32[$59>>2]|0;
 $61 = ((($60)) + 8|0);
 $62 = HEAPU8[$61>>0]|(HEAPU8[$61+1>>0]<<8)|(HEAPU8[$61+2>>0]<<16)|(HEAPU8[$61+3>>0]<<24);
 if ($58) {
  $val1 = $62;
  $63 = $val1;
  HEAP8[$63>>0]=2&255;HEAP8[$63+1>>0]=(2>>8)&255;HEAP8[$63+2>>0]=(2>>16)&255;HEAP8[$63+3>>0]=2>>24;
  $64 = $val1;
  $65 = ((($64)) + 4|0);
  HEAP8[$65>>0]=1&255;HEAP8[$65+1>>0]=(1>>8)&255;HEAP8[$65+2>>0]=(1>>16)&255;HEAP8[$65+3>>0]=1>>24;
 } else {
  $val2 = $62;
  $66 = $val2;
  HEAP8[$66>>0]=2&255;HEAP8[$66+1>>0]=(2>>8)&255;HEAP8[$66+2>>0]=(2>>16)&255;HEAP8[$66+3>>0]=2>>24;
  $67 = $val2;
  $68 = ((($67)) + 4|0);
  HEAP8[$68>>0]=0&255;HEAP8[$68+1>>0]=(0>>8)&255;HEAP8[$68+2>>0]=(0>>16)&255;HEAP8[$68+3>>0]=0>>24;
 }
 $69 = $1;
 $70 = ($69|0)!=(0|0);
 if ($70) {
  $71 = $1;
  $72 = HEAP32[$71>>2]|0;
  $73 = ($72|0)!=(0|0);
  if ($73) {
   $74 = $1;
   $75 = HEAP32[$74>>2]|0;
   $76 = HEAPU8[$75>>0]|(HEAPU8[$75+1>>0]<<8)|(HEAPU8[$75+2>>0]<<16)|(HEAPU8[$75+3>>0]<<24);
   $77 = ($76|0)!=(0|0);
   if ($77) {
    $78 = $0;
    $79 = $0;
    $80 = ((($79)) + 67|0);
    $81 = HEAPU8[$80>>0]|(HEAPU8[$80+1>>0]<<8)|(HEAPU8[$80+2>>0]<<16)|(HEAPU8[$80+3>>0]<<24);
    $82 = (__set_current_error($78,18,$81)|0);
    $83 = ($82<<24>>24)!=(0);
    if (!($83)) {
     $350 = $result;
     STACKTOP = sp;return ($350|0);
    }
    $84 = $0;
    $85 = $1;
    $86 = HEAP32[$85>>2]|0;
    $87 = HEAPU8[$86>>0]|(HEAPU8[$86+1>>0]<<8)|(HEAPU8[$86+2>>0]<<16)|(HEAPU8[$86+3>>0]<<24);
    $88 = ((($87)) + 9|0);
    $89 = HEAPU8[$88>>0]|(HEAPU8[$88+1>>0]<<8)|(HEAPU8[$88+2>>0]<<16)|(HEAPU8[$88+3>>0]<<24);
    $90 = $1;
    $91 = HEAP32[$90>>2]|0;
    $92 = HEAPU8[$91>>0]|(HEAPU8[$91+1>>0]<<8)|(HEAPU8[$91+2>>0]<<16)|(HEAPU8[$91+3>>0]<<24);
    $93 = ((($92)) + 13|0);
    $94 = HEAPU8[$93>>0]|(HEAPU8[$93+1>>0]<<8);
    $95 = $1;
    $96 = HEAP32[$95>>2]|0;
    $97 = HEAPU8[$96>>0]|(HEAPU8[$96+1>>0]<<8)|(HEAPU8[$96+2>>0]<<16)|(HEAPU8[$96+3>>0]<<24);
    $98 = ((($97)) + 15|0);
    $99 = HEAPU8[$98>>0]|(HEAPU8[$98+1>>0]<<8);
    __set_error_pos($84,$89,$94,$99);
    $350 = $result;
    STACKTOP = sp;return ($350|0);
   }
  }
 }
 $100 = $0;
 $101 = $0;
 $102 = ((($101)) + 67|0);
 $103 = HEAPU8[$102>>0]|(HEAPU8[$102+1>>0]<<8)|(HEAPU8[$102+2>>0]<<16)|(HEAPU8[$102+3>>0]<<24);
 $104 = (__set_current_error($100,18,$103)|0);
 $105 = ($104<<24>>24)!=(0);
 if (!($105)) {
  $350 = $result;
  STACKTOP = sp;return ($350|0);
 }
 $106 = $0;
 __set_error_pos($106,0,0,0);
 $350 = $result;
 STACKTOP = sp;return ($350|0);
}
function __core_not_equal($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0.0, $205 = 0;
 var $206 = 0, $207 = 0.0, $208 = 0, $209 = 0, $21 = 0, $210 = 0.0, $211 = 0, $212 = 0, $213 = 0.0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0.0, $227 = 0, $228 = 0, $229 = 0.0, $23 = 0, $230 = 0, $231 = 0, $232 = 0.0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0.0, $241 = 0.0;
 var $242 = 0.0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0.0, $248 = 0.0, $249 = 0.0, $25 = 0, $250 = 0, $251 = 0, $252 = 0.0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0.0, $261 = 0, $262 = 0.0, $263 = 0, $264 = 0, $265 = 0.0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0.0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0.0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0;
 var $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0;
 var $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0;
 var $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0;
 var $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $_str1 = 0, $_str2 = 0, $opnd1 = 0, $opnd13 = 0, $opnd19 = 0, $opnd2 = 0, $opnd210 = 0, $opnd24 = 0, $opndv1 = 0, $opndv16 = 0, $opndv2 = 0, $opndv27 = 0, $or$cond = 0, $result = 0, $tpptr = 0;
 var $tpptr2 = 0, $tpptr8 = 0, $tpr = 0, $val = 0, $val1 = 0, $val11 = 0, $val5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $opndv1 = sp + 127|0;
 $opndv2 = sp + 110|0;
 $opndv16 = sp + 93|0;
 $opndv27 = sp + 76|0;
 $0 = $s;
 $1 = $l;
 $result = 0;
 $tpr = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),15391,(4956|0));
  // unreachable;
 }
 $6 = $1;
 $7 = HEAP32[$6>>2]|0;
 $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
 $9 = (__is_string($8)|0);
 $10 = $9&255;
 $11 = ($10|0)!=(0);
 if (!($11)) {
  $12 = $1;
  $13 = HEAP32[$12>>2]|0;
  $14 = ((($13)) + 4|0);
  $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
  $16 = (__is_string($15)|0);
  $17 = $16&255;
  $18 = ($17|0)!=(0);
  if (!($18)) {
   $121 = $1;
   $122 = HEAP32[$121>>2]|0;
   $123 = HEAPU8[$122>>0]|(HEAPU8[$122+1>>0]<<8)|(HEAPU8[$122+2>>0]<<16)|(HEAPU8[$122+3>>0]<<24);
   $124 = (__is_number($123)|0);
   $125 = $124&255;
   $126 = ($125|0)!=(0);
   if ($126) {
    $127 = $1;
    $128 = HEAP32[$127>>2]|0;
    $129 = ((($128)) + 4|0);
    $130 = HEAPU8[$129>>0]|(HEAPU8[$129+1>>0]<<8)|(HEAPU8[$129+2>>0]<<16)|(HEAPU8[$129+3>>0]<<24);
    $131 = (__is_number($130)|0);
    $132 = $131&255;
    $133 = ($132|0)!=(0);
    if ($133) {
     $134 = $1;
     $135 = HEAP32[$134>>2]|0;
     $tpptr2 = $135;
     $136 = $tpptr2;
     $137 = HEAPU8[$136>>0]|(HEAPU8[$136+1>>0]<<8)|(HEAPU8[$136+2>>0]<<16)|(HEAPU8[$136+3>>0]<<24);
     $opnd13 = $137;
     $138 = $tpptr2;
     $139 = ((($138)) + 4|0);
     $140 = HEAPU8[$139>>0]|(HEAPU8[$139+1>>0]<<8)|(HEAPU8[$139+2>>0]<<16)|(HEAPU8[$139+3>>0]<<24);
     $opnd24 = $140;
     $141 = $tpptr2;
     $142 = ((($141)) + 8|0);
     $143 = HEAPU8[$142>>0]|(HEAPU8[$142+1>>0]<<8)|(HEAPU8[$142+2>>0]<<16)|(HEAPU8[$142+3>>0]<<24);
     $val5 = $143;
     $144 = $opnd13;
     $145 = HEAPU8[$144>>0]|(HEAPU8[$144+1>>0]<<8)|(HEAPU8[$144+2>>0]<<16)|(HEAPU8[$144+3>>0]<<24);
     $146 = ($145|0)==(2);
     if ($146) {
      $157 = 1;
     } else {
      $147 = $opnd13;
      $148 = HEAPU8[$147>>0]|(HEAPU8[$147+1>>0]<<8)|(HEAPU8[$147+2>>0]<<16)|(HEAPU8[$147+3>>0]<<24);
      $149 = ($148|0)==(9);
      if ($149) {
       $150 = $opnd13;
       $151 = ((($150)) + 4|0);
       $152 = HEAPU8[$151>>0]|(HEAPU8[$151+1>>0]<<8)|(HEAPU8[$151+2>>0]<<16)|(HEAPU8[$151+3>>0]<<24);
       $153 = ((($152)) + 4|0);
       $154 = HEAPU8[$153>>0]|(HEAPU8[$153+1>>0]<<8)|(HEAPU8[$153+2>>0]<<16)|(HEAPU8[$153+3>>0]<<24);
       $155 = HEAPU8[$154>>0]|(HEAPU8[$154+1>>0]<<8)|(HEAPU8[$154+2>>0]<<16)|(HEAPU8[$154+3>>0]<<24);
       $156 = ($155|0)==(2);
       $157 = $156;
      } else {
       $157 = 0;
      }
     }
     $158 = $157 ? 2 : 3;
     HEAP8[$opndv1>>0]=$158&255;HEAP8[$opndv1+1>>0]=($158>>8)&255;HEAP8[$opndv1+2>>0]=($158>>16)&255;HEAP8[$opndv1+3>>0]=$158>>24;
     $159 = ((($opndv1)) + 4|0);
     $160 = $opnd13;
     $161 = HEAPU8[$160>>0]|(HEAPU8[$160+1>>0]<<8)|(HEAPU8[$160+2>>0]<<16)|(HEAPU8[$160+3>>0]<<24);
     $162 = ($161|0)==(9);
     $163 = $opnd13;
     $164 = ((($163)) + 4|0);
     if ($162) {
      $165 = HEAPU8[$164>>0]|(HEAPU8[$164+1>>0]<<8)|(HEAPU8[$164+2>>0]<<16)|(HEAPU8[$164+3>>0]<<24);
      $166 = ((($165)) + 4|0);
      $167 = HEAPU8[$166>>0]|(HEAPU8[$166+1>>0]<<8)|(HEAPU8[$166+2>>0]<<16)|(HEAPU8[$166+3>>0]<<24);
      $168 = ((($167)) + 4|0);
      ;HEAP8[$159>>0]=HEAP8[$168>>0]|0;HEAP8[$159+1>>0]=HEAP8[$168+1>>0]|0;HEAP8[$159+2>>0]=HEAP8[$168+2>>0]|0;HEAP8[$159+3>>0]=HEAP8[$168+3>>0]|0;
     } else {
      ;HEAP8[$159>>0]=HEAP8[$164>>0]|0;HEAP8[$159+1>>0]=HEAP8[$164+1>>0]|0;HEAP8[$159+2>>0]=HEAP8[$164+2>>0]|0;HEAP8[$159+3>>0]=HEAP8[$164+3>>0]|0;
     }
     $169 = $opnd24;
     $170 = HEAPU8[$169>>0]|(HEAPU8[$169+1>>0]<<8)|(HEAPU8[$169+2>>0]<<16)|(HEAPU8[$169+3>>0]<<24);
     $171 = ($170|0)==(2);
     if ($171) {
      $182 = 1;
     } else {
      $172 = $opnd24;
      $173 = HEAPU8[$172>>0]|(HEAPU8[$172+1>>0]<<8)|(HEAPU8[$172+2>>0]<<16)|(HEAPU8[$172+3>>0]<<24);
      $174 = ($173|0)==(9);
      if ($174) {
       $175 = $opnd24;
       $176 = ((($175)) + 4|0);
       $177 = HEAPU8[$176>>0]|(HEAPU8[$176+1>>0]<<8)|(HEAPU8[$176+2>>0]<<16)|(HEAPU8[$176+3>>0]<<24);
       $178 = ((($177)) + 4|0);
       $179 = HEAPU8[$178>>0]|(HEAPU8[$178+1>>0]<<8)|(HEAPU8[$178+2>>0]<<16)|(HEAPU8[$178+3>>0]<<24);
       $180 = HEAPU8[$179>>0]|(HEAPU8[$179+1>>0]<<8)|(HEAPU8[$179+2>>0]<<16)|(HEAPU8[$179+3>>0]<<24);
       $181 = ($180|0)==(2);
       $182 = $181;
      } else {
       $182 = 0;
      }
     }
     $183 = $182 ? 2 : 3;
     HEAP8[$opndv2>>0]=$183&255;HEAP8[$opndv2+1>>0]=($183>>8)&255;HEAP8[$opndv2+2>>0]=($183>>16)&255;HEAP8[$opndv2+3>>0]=$183>>24;
     $184 = ((($opndv2)) + 4|0);
     $185 = $opnd24;
     $186 = HEAPU8[$185>>0]|(HEAPU8[$185+1>>0]<<8)|(HEAPU8[$185+2>>0]<<16)|(HEAPU8[$185+3>>0]<<24);
     $187 = ($186|0)==(9);
     $188 = $opnd24;
     $189 = ((($188)) + 4|0);
     if ($187) {
      $190 = HEAPU8[$189>>0]|(HEAPU8[$189+1>>0]<<8)|(HEAPU8[$189+2>>0]<<16)|(HEAPU8[$189+3>>0]<<24);
      $191 = ((($190)) + 4|0);
      $192 = HEAPU8[$191>>0]|(HEAPU8[$191+1>>0]<<8)|(HEAPU8[$191+2>>0]<<16)|(HEAPU8[$191+3>>0]<<24);
      $193 = ((($192)) + 4|0);
      ;HEAP8[$184>>0]=HEAP8[$193>>0]|0;HEAP8[$184+1>>0]=HEAP8[$193+1>>0]|0;HEAP8[$184+2>>0]=HEAP8[$193+2>>0]|0;HEAP8[$184+3>>0]=HEAP8[$193+3>>0]|0;
     } else {
      ;HEAP8[$184>>0]=HEAP8[$189>>0]|0;HEAP8[$184+1>>0]=HEAP8[$189+1>>0]|0;HEAP8[$184+2>>0]=HEAP8[$189+2>>0]|0;HEAP8[$184+3>>0]=HEAP8[$189+3>>0]|0;
     }
     $194 = HEAPU8[$opndv1>>0]|(HEAPU8[$opndv1+1>>0]<<8)|(HEAPU8[$opndv1+2>>0]<<16)|(HEAPU8[$opndv1+3>>0]<<24);
     $195 = ($194|0)==(2);
     do {
      if ($195) {
       $196 = HEAPU8[$opndv2>>0]|(HEAPU8[$opndv2+1>>0]<<8)|(HEAPU8[$opndv2+2>>0]<<16)|(HEAPU8[$opndv2+3>>0]<<24);
       $197 = ($196|0)==(2);
       if ($197) {
        $198 = ((($opndv1)) + 4|0);
        $199 = HEAPU8[$198>>0]|(HEAPU8[$198+1>>0]<<8)|(HEAPU8[$198+2>>0]<<16)|(HEAPU8[$198+3>>0]<<24);
        $200 = ((($opndv2)) + 4|0);
        $201 = HEAPU8[$200>>0]|(HEAPU8[$200+1>>0]<<8)|(HEAPU8[$200+2>>0]<<16)|(HEAPU8[$200+3>>0]<<24);
        $202 = ($199|0)!=($201|0);
        $203 = $202&1;
        $204 = (+($203|0));
        $205 = ((($opndv1)) + 4|0);
        $206 = HEAPU8[$205>>0]|(HEAPU8[$205+1>>0]<<8)|(HEAPU8[$205+2>>0]<<16)|(HEAPU8[$205+3>>0]<<24);
        $207 = (+($206|0));
        $208 = $204 == $207;
        $209 = $208&1;
        $210 = (+($209|0));
        $211 = ((($opndv2)) + 4|0);
        $212 = HEAPU8[$211>>0]|(HEAPU8[$211+1>>0]<<8)|(HEAPU8[$211+2>>0]<<16)|(HEAPU8[$211+3>>0]<<24);
        $213 = (+($212|0));
        $214 = $210 != $213;
        $215 = $val5;
        if ($214) {
         HEAP8[$215>>0]=2&255;HEAP8[$215+1>>0]=(2>>8)&255;HEAP8[$215+2>>0]=(2>>16)&255;HEAP8[$215+3>>0]=2>>24;
         $216 = ((($opndv1)) + 4|0);
         $217 = HEAPU8[$216>>0]|(HEAPU8[$216+1>>0]<<8)|(HEAPU8[$216+2>>0]<<16)|(HEAPU8[$216+3>>0]<<24);
         $218 = ((($opndv2)) + 4|0);
         $219 = HEAPU8[$218>>0]|(HEAPU8[$218+1>>0]<<8)|(HEAPU8[$218+2>>0]<<16)|(HEAPU8[$218+3>>0]<<24);
         $220 = ($217|0)!=($219|0);
         $221 = $220&1;
         $222 = $val5;
         $223 = ((($222)) + 4|0);
         HEAP8[$223>>0]=$221&255;HEAP8[$223+1>>0]=($221>>8)&255;HEAP8[$223+2>>0]=($221>>16)&255;HEAP8[$223+3>>0]=$221>>24;
         break;
        } else {
         HEAP8[$215>>0]=3&255;HEAP8[$215+1>>0]=(3>>8)&255;HEAP8[$215+2>>0]=(3>>16)&255;HEAP8[$215+3>>0]=3>>24;
         $224 = ((($opndv1)) + 4|0);
         $225 = HEAPU8[$224>>0]|(HEAPU8[$224+1>>0]<<8)|(HEAPU8[$224+2>>0]<<16)|(HEAPU8[$224+3>>0]<<24);
         $226 = (+($225|0));
         $227 = ((($opndv2)) + 4|0);
         $228 = HEAPU8[$227>>0]|(HEAPU8[$227+1>>0]<<8)|(HEAPU8[$227+2>>0]<<16)|(HEAPU8[$227+3>>0]<<24);
         $229 = (+($228|0));
         $230 = $226 != $229;
         $231 = $230&1;
         $232 = (+($231|0));
         $233 = $val5;
         $234 = ((($233)) + 4|0);
         HEAPF32[tempDoublePtr>>2]=$232;HEAP8[$234>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$234+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$234+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$234+3>>0]=HEAP8[tempDoublePtr+3>>0];
         break;
        }
       } else {
        label = 37;
       }
      } else {
       label = 37;
      }
     } while(0);
     if ((label|0) == 37) {
      $235 = $val5;
      HEAP8[$235>>0]=3&255;HEAP8[$235+1>>0]=(3>>8)&255;HEAP8[$235+2>>0]=(3>>16)&255;HEAP8[$235+3>>0]=3>>24;
      $236 = HEAPU8[$opndv1>>0]|(HEAPU8[$opndv1+1>>0]<<8)|(HEAPU8[$opndv1+2>>0]<<16)|(HEAPU8[$opndv1+3>>0]<<24);
      $237 = ($236|0)==(2);
      $238 = ((($opndv1)) + 4|0);
      $239 = HEAPU8[$238>>0]|(HEAPU8[$238+1>>0]<<8)|(HEAPU8[$238+2>>0]<<16)|(HEAPU8[$238+3>>0]<<24);
      $240 = (+($239|0));
      HEAP8[tempDoublePtr>>0]=HEAP8[$238>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$238+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$238+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$238+3>>0];$241 = +HEAPF32[tempDoublePtr>>2];
      $242 = $237 ? $240 : $241;
      $243 = HEAPU8[$opndv2>>0]|(HEAPU8[$opndv2+1>>0]<<8)|(HEAPU8[$opndv2+2>>0]<<16)|(HEAPU8[$opndv2+3>>0]<<24);
      $244 = ($243|0)==(2);
      $245 = ((($opndv2)) + 4|0);
      $246 = HEAPU8[$245>>0]|(HEAPU8[$245+1>>0]<<8)|(HEAPU8[$245+2>>0]<<16)|(HEAPU8[$245+3>>0]<<24);
      $247 = (+($246|0));
      HEAP8[tempDoublePtr>>0]=HEAP8[$245>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$245+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$245+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$245+3>>0];$248 = +HEAPF32[tempDoublePtr>>2];
      $249 = $244 ? $247 : $248;
      $250 = $242 != $249;
      $251 = $250&1;
      $252 = (+($251|0));
      $253 = $val5;
      $254 = ((($253)) + 4|0);
      HEAPF32[tempDoublePtr>>2]=$252;HEAP8[$254>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$254+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$254+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$254+3>>0]=HEAP8[tempDoublePtr+3>>0];
     }
     $255 = $val5;
     $256 = HEAPU8[$255>>0]|(HEAPU8[$255+1>>0]<<8)|(HEAPU8[$255+2>>0]<<16)|(HEAPU8[$255+3>>0]<<24);
     $257 = ($256|0)==(3);
     if ($257) {
      $258 = $val5;
      $259 = ((($258)) + 4|0);
      HEAP8[tempDoublePtr>>0]=HEAP8[$259>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$259+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$259+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$259+3>>0];$260 = +HEAPF32[tempDoublePtr>>2];
      $261 = (~~(($260)));
      $262 = (+($261|0));
      $263 = $val5;
      $264 = ((($263)) + 4|0);
      HEAP8[tempDoublePtr>>0]=HEAP8[$264>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$264+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$264+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$264+3>>0];$265 = +HEAPF32[tempDoublePtr>>2];
      $266 = $262 == $265;
      if ($266) {
       $267 = $val5;
       HEAP8[$267>>0]=2&255;HEAP8[$267+1>>0]=(2>>8)&255;HEAP8[$267+2>>0]=(2>>16)&255;HEAP8[$267+3>>0]=2>>24;
       $268 = $val5;
       $269 = ((($268)) + 4|0);
       HEAP8[tempDoublePtr>>0]=HEAP8[$269>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$269+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$269+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$269+3>>0];$270 = +HEAPF32[tempDoublePtr>>2];
       $271 = (~~(($270)));
       $272 = $val5;
       $273 = ((($272)) + 4|0);
       HEAP8[$273>>0]=$271&255;HEAP8[$273+1>>0]=($271>>8)&255;HEAP8[$273+2>>0]=($271>>16)&255;HEAP8[$273+3>>0]=$271>>24;
      }
     }
     $274 = $1;
     $275 = HEAP32[$274>>2]|0;
     $tpr = $275;
     $276 = $tpr;
     $277 = ((($276)) + 8|0);
     $278 = HEAPU8[$277>>0]|(HEAPU8[$277+1>>0]<<8)|(HEAPU8[$277+2>>0]<<16)|(HEAPU8[$277+3>>0]<<24);
     $279 = HEAPU8[$278>>0]|(HEAPU8[$278+1>>0]<<8)|(HEAPU8[$278+2>>0]<<16)|(HEAPU8[$278+3>>0]<<24);
     $280 = ($279|0)!=(2);
     if (!($280)) {
      $364 = $result;
      STACKTOP = sp;return ($364|0);
     }
     $281 = $tpr;
     $282 = ((($281)) + 8|0);
     $283 = HEAPU8[$282>>0]|(HEAPU8[$282+1>>0]<<8)|(HEAPU8[$282+2>>0]<<16)|(HEAPU8[$282+3>>0]<<24);
     HEAP8[$283>>0]=2&255;HEAP8[$283+1>>0]=(2>>8)&255;HEAP8[$283+2>>0]=(2>>16)&255;HEAP8[$283+3>>0]=2>>24;
     $284 = $tpr;
     $285 = ((($284)) + 8|0);
     $286 = HEAPU8[$285>>0]|(HEAPU8[$285+1>>0]<<8)|(HEAPU8[$285+2>>0]<<16)|(HEAPU8[$285+3>>0]<<24);
     $287 = ((($286)) + 4|0);
     HEAP8[tempDoublePtr>>0]=HEAP8[$287>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$287+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$287+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$287+3>>0];$288 = +HEAPF32[tempDoublePtr>>2];
     $289 = $288 != 0.0;
     $290 = $289&1;
     $291 = $tpr;
     $292 = ((($291)) + 8|0);
     $293 = HEAPU8[$292>>0]|(HEAPU8[$292+1>>0]<<8)|(HEAPU8[$292+2>>0]<<16)|(HEAPU8[$292+3>>0]<<24);
     $294 = ((($293)) + 4|0);
     HEAP8[$294>>0]=$290&255;HEAP8[$294+1>>0]=($290>>8)&255;HEAP8[$294+2>>0]=($290>>16)&255;HEAP8[$294+3>>0]=$290>>24;
     $364 = $result;
     STACKTOP = sp;return ($364|0);
    }
   }
   $295 = $1;
   $296 = HEAP32[$295>>2]|0;
   $tpptr8 = $296;
   $297 = $tpptr8;
   $298 = HEAPU8[$297>>0]|(HEAPU8[$297+1>>0]<<8)|(HEAPU8[$297+2>>0]<<16)|(HEAPU8[$297+3>>0]<<24);
   $opnd19 = $298;
   $299 = $tpptr8;
   $300 = ((($299)) + 4|0);
   $301 = HEAPU8[$300>>0]|(HEAPU8[$300+1>>0]<<8)|(HEAPU8[$300+2>>0]<<16)|(HEAPU8[$300+3>>0]<<24);
   $opnd210 = $301;
   $302 = $tpptr8;
   $303 = ((($302)) + 8|0);
   $304 = HEAPU8[$303>>0]|(HEAPU8[$303+1>>0]<<8)|(HEAPU8[$303+2>>0]<<16)|(HEAPU8[$303+3>>0]<<24);
   $val11 = $304;
   $305 = $opnd19;
   $306 = HEAPU8[$305>>0]|(HEAPU8[$305+1>>0]<<8)|(HEAPU8[$305+2>>0]<<16)|(HEAPU8[$305+3>>0]<<24);
   $307 = ($306|0)==(9);
   $308 = $opnd19;
   if ($307) {
    $309 = ((($308)) + 4|0);
    $310 = HEAPU8[$309>>0]|(HEAPU8[$309+1>>0]<<8)|(HEAPU8[$309+2>>0]<<16)|(HEAPU8[$309+3>>0]<<24);
    $311 = ((($310)) + 4|0);
    $312 = HEAPU8[$311>>0]|(HEAPU8[$311+1>>0]<<8)|(HEAPU8[$311+2>>0]<<16)|(HEAPU8[$311+3>>0]<<24);
    $313 = HEAPU8[$312>>0]|(HEAPU8[$312+1>>0]<<8)|(HEAPU8[$312+2>>0]<<16)|(HEAPU8[$312+3>>0]<<24);
    $315 = $313;
   } else {
    $314 = HEAPU8[$308>>0]|(HEAPU8[$308+1>>0]<<8)|(HEAPU8[$308+2>>0]<<16)|(HEAPU8[$308+3>>0]<<24);
    $315 = $314;
   }
   HEAP8[$opndv16>>0]=$315&255;HEAP8[$opndv16+1>>0]=($315>>8)&255;HEAP8[$opndv16+2>>0]=($315>>16)&255;HEAP8[$opndv16+3>>0]=$315>>24;
   $316 = ((($opndv16)) + 4|0);
   $317 = $opnd19;
   $318 = HEAPU8[$317>>0]|(HEAPU8[$317+1>>0]<<8)|(HEAPU8[$317+2>>0]<<16)|(HEAPU8[$317+3>>0]<<24);
   $319 = ($318|0)==(9);
   $320 = $opnd19;
   $321 = ((($320)) + 4|0);
   if ($319) {
    $322 = HEAPU8[$321>>0]|(HEAPU8[$321+1>>0]<<8)|(HEAPU8[$321+2>>0]<<16)|(HEAPU8[$321+3>>0]<<24);
    $323 = ((($322)) + 4|0);
    $324 = HEAPU8[$323>>0]|(HEAPU8[$323+1>>0]<<8)|(HEAPU8[$323+2>>0]<<16)|(HEAPU8[$323+3>>0]<<24);
    $325 = ((($324)) + 4|0);
    ;HEAP8[$316>>0]=HEAP8[$325>>0]|0;HEAP8[$316+1>>0]=HEAP8[$325+1>>0]|0;HEAP8[$316+2>>0]=HEAP8[$325+2>>0]|0;HEAP8[$316+3>>0]=HEAP8[$325+3>>0]|0;
   } else {
    ;HEAP8[$316>>0]=HEAP8[$321>>0]|0;HEAP8[$316+1>>0]=HEAP8[$321+1>>0]|0;HEAP8[$316+2>>0]=HEAP8[$321+2>>0]|0;HEAP8[$316+3>>0]=HEAP8[$321+3>>0]|0;
   }
   $326 = $opnd210;
   $327 = HEAPU8[$326>>0]|(HEAPU8[$326+1>>0]<<8)|(HEAPU8[$326+2>>0]<<16)|(HEAPU8[$326+3>>0]<<24);
   $328 = ($327|0)==(9);
   $329 = $opnd210;
   if ($328) {
    $330 = ((($329)) + 4|0);
    $331 = HEAPU8[$330>>0]|(HEAPU8[$330+1>>0]<<8)|(HEAPU8[$330+2>>0]<<16)|(HEAPU8[$330+3>>0]<<24);
    $332 = ((($331)) + 4|0);
    $333 = HEAPU8[$332>>0]|(HEAPU8[$332+1>>0]<<8)|(HEAPU8[$332+2>>0]<<16)|(HEAPU8[$332+3>>0]<<24);
    $334 = HEAPU8[$333>>0]|(HEAPU8[$333+1>>0]<<8)|(HEAPU8[$333+2>>0]<<16)|(HEAPU8[$333+3>>0]<<24);
    $336 = $334;
   } else {
    $335 = HEAPU8[$329>>0]|(HEAPU8[$329+1>>0]<<8)|(HEAPU8[$329+2>>0]<<16)|(HEAPU8[$329+3>>0]<<24);
    $336 = $335;
   }
   HEAP8[$opndv27>>0]=$336&255;HEAP8[$opndv27+1>>0]=($336>>8)&255;HEAP8[$opndv27+2>>0]=($336>>16)&255;HEAP8[$opndv27+3>>0]=$336>>24;
   $337 = ((($opndv27)) + 4|0);
   $338 = $opnd210;
   $339 = HEAPU8[$338>>0]|(HEAPU8[$338+1>>0]<<8)|(HEAPU8[$338+2>>0]<<16)|(HEAPU8[$338+3>>0]<<24);
   $340 = ($339|0)==(9);
   $341 = $opnd210;
   $342 = ((($341)) + 4|0);
   if ($340) {
    $343 = HEAPU8[$342>>0]|(HEAPU8[$342+1>>0]<<8)|(HEAPU8[$342+2>>0]<<16)|(HEAPU8[$342+3>>0]<<24);
    $344 = ((($343)) + 4|0);
    $345 = HEAPU8[$344>>0]|(HEAPU8[$344+1>>0]<<8)|(HEAPU8[$344+2>>0]<<16)|(HEAPU8[$344+3>>0]<<24);
    $346 = ((($345)) + 4|0);
    ;HEAP8[$337>>0]=HEAP8[$346>>0]|0;HEAP8[$337+1>>0]=HEAP8[$346+1>>0]|0;HEAP8[$337+2>>0]=HEAP8[$346+2>>0]|0;HEAP8[$337+3>>0]=HEAP8[$346+3>>0]|0;
   } else {
    ;HEAP8[$337>>0]=HEAP8[$342>>0]|0;HEAP8[$337+1>>0]=HEAP8[$342+1>>0]|0;HEAP8[$337+2>>0]=HEAP8[$342+2>>0]|0;HEAP8[$337+3>>0]=HEAP8[$342+3>>0]|0;
   }
   $347 = $val11;
   HEAP8[$347>>0]=2&255;HEAP8[$347+1>>0]=(2>>8)&255;HEAP8[$347+2>>0]=(2>>16)&255;HEAP8[$347+3>>0]=2>>24;
   $348 = HEAPU8[$opndv16>>0]|(HEAPU8[$opndv16+1>>0]<<8)|(HEAPU8[$opndv16+2>>0]<<16)|(HEAPU8[$opndv16+3>>0]<<24);
   $349 = HEAPU8[$opndv27>>0]|(HEAPU8[$opndv27+1>>0]<<8)|(HEAPU8[$opndv27+2>>0]<<16)|(HEAPU8[$opndv27+3>>0]<<24);
   $350 = ($348|0)==($349|0);
   if ($350) {
    $351 = ((($opndv16)) + 4|0);
    $352 = ((($opndv27)) + 4|0);
    $353 = (_mb_memcmp($351,$352,4)|0);
    $354 = ($353|0)!=(0);
    $355 = $354&1;
    $356 = $val11;
    $357 = ((($356)) + 4|0);
    HEAP8[$357>>0]=$355&255;HEAP8[$357+1>>0]=($355>>8)&255;HEAP8[$357+2>>0]=($355>>16)&255;HEAP8[$357+3>>0]=$355>>24;
    $364 = $result;
    STACKTOP = sp;return ($364|0);
   } else {
    $358 = HEAPU8[$opndv16>>0]|(HEAPU8[$opndv16+1>>0]<<8)|(HEAPU8[$opndv16+2>>0]<<16)|(HEAPU8[$opndv16+3>>0]<<24);
    $359 = HEAPU8[$opndv27>>0]|(HEAPU8[$opndv27+1>>0]<<8)|(HEAPU8[$opndv27+2>>0]<<16)|(HEAPU8[$opndv27+3>>0]<<24);
    $360 = ($358|0)!=($359|0);
    $361 = $360&1;
    $362 = $val11;
    $363 = ((($362)) + 4|0);
    HEAP8[$363>>0]=$361&255;HEAP8[$363+1>>0]=($361>>8)&255;HEAP8[$363+2>>0]=($361>>16)&255;HEAP8[$363+3>>0]=$361>>24;
    $364 = $result;
    STACKTOP = sp;return ($364|0);
   }
  }
 }
 $19 = $1;
 $20 = HEAP32[$19>>2]|0;
 $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
 $22 = (__is_string($21)|0);
 $23 = $22&255;
 $24 = ($23|0)!=(0);
 if ($24) {
  $25 = $1;
  $26 = HEAP32[$25>>2]|0;
  $27 = ((($26)) + 4|0);
  $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
  $29 = (__is_string($28)|0);
  $30 = $29&255;
  $31 = ($30|0)!=(0);
  if ($31) {
   $_str1 = 0;
   $_str2 = 0;
   $32 = $1;
   $33 = HEAP32[$32>>2]|0;
   $tpptr = $33;
   $34 = $tpptr;
   $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
   $opnd1 = $35;
   $36 = $tpptr;
   $37 = ((($36)) + 4|0);
   $38 = HEAPU8[$37>>0]|(HEAPU8[$37+1>>0]<<8)|(HEAPU8[$37+2>>0]<<16)|(HEAPU8[$37+3>>0]<<24);
   $opnd2 = $38;
   $39 = $tpptr;
   $40 = ((($39)) + 8|0);
   $41 = HEAPU8[$40>>0]|(HEAPU8[$40+1>>0]<<8)|(HEAPU8[$40+2>>0]<<16)|(HEAPU8[$40+3>>0]<<24);
   $val = $41;
   $42 = $val;
   HEAP8[$42>>0]=2&255;HEAP8[$42+1>>0]=(2>>8)&255;HEAP8[$42+2>>0]=(2>>16)&255;HEAP8[$42+3>>0]=2>>24;
   $43 = $opnd1;
   $44 = (__extract_string($43)|0);
   $_str1 = $44;
   $45 = $opnd2;
   $46 = (__extract_string($45)|0);
   $_str2 = $46;
   $47 = $_str1;
   $48 = $_str2;
   $49 = (_strcmp($47,$48)|0);
   $50 = ($49|0)!=(0);
   $51 = $50&1;
   $52 = $val;
   $53 = ((($52)) + 4|0);
   HEAP8[$53>>0]=$51&255;HEAP8[$53+1>>0]=($51>>8)&255;HEAP8[$53+2>>0]=($51>>16)&255;HEAP8[$53+3>>0]=$51>>24;
   $364 = $result;
   STACKTOP = sp;return ($364|0);
  }
 }
 $54 = $1;
 $55 = HEAP32[$54>>2]|0;
 $56 = HEAPU8[$55>>0]|(HEAPU8[$55+1>>0]<<8)|(HEAPU8[$55+2>>0]<<16)|(HEAPU8[$55+3>>0]<<24);
 $57 = (__is_nil($56)|0);
 $58 = $57&255;
 $59 = ($58|0)!=(0);
 if (!($59)) {
  $60 = $1;
  $61 = HEAP32[$60>>2]|0;
  $62 = ((($61)) + 4|0);
  $63 = HEAPU8[$62>>0]|(HEAPU8[$62+1>>0]<<8)|(HEAPU8[$62+2>>0]<<16)|(HEAPU8[$62+3>>0]<<24);
  $64 = (__is_nil($63)|0);
  $65 = $64&255;
  $66 = ($65|0)!=(0);
  if (!($66)) {
   $76 = $1;
   $77 = HEAP32[$76>>2]|0;
   $78 = ((($77)) + 8|0);
   $79 = HEAPU8[$78>>0]|(HEAPU8[$78+1>>0]<<8)|(HEAPU8[$78+2>>0]<<16)|(HEAPU8[$78+3>>0]<<24);
   $val1 = $79;
   $80 = $val1;
   HEAP8[$80>>0]=2&255;HEAP8[$80+1>>0]=(2>>8)&255;HEAP8[$80+2>>0]=(2>>16)&255;HEAP8[$80+3>>0]=2>>24;
   $81 = $val1;
   $82 = ((($81)) + 4|0);
   HEAP8[$82>>0]=1&255;HEAP8[$82+1>>0]=(1>>8)&255;HEAP8[$82+2>>0]=(1>>16)&255;HEAP8[$82+3>>0]=1>>24;
   $83 = $1;
   $84 = ($83|0)!=(0|0);
   if ($84) {
    $85 = $1;
    $86 = HEAP32[$85>>2]|0;
    $87 = ($86|0)!=(0|0);
    if ($87) {
     $88 = $1;
     $89 = HEAP32[$88>>2]|0;
     $90 = HEAPU8[$89>>0]|(HEAPU8[$89+1>>0]<<8)|(HEAPU8[$89+2>>0]<<16)|(HEAPU8[$89+3>>0]<<24);
     $91 = ($90|0)!=(0|0);
     if ($91) {
      $92 = $0;
      $93 = $0;
      $94 = ((($93)) + 67|0);
      $95 = HEAPU8[$94>>0]|(HEAPU8[$94+1>>0]<<8)|(HEAPU8[$94+2>>0]<<16)|(HEAPU8[$94+3>>0]<<24);
      $96 = (__set_current_error($92,18,$95)|0);
      $97 = ($96<<24>>24)!=(0);
      if (!($97)) {
       $364 = $result;
       STACKTOP = sp;return ($364|0);
      }
      $98 = $0;
      $99 = $1;
      $100 = HEAP32[$99>>2]|0;
      $101 = HEAPU8[$100>>0]|(HEAPU8[$100+1>>0]<<8)|(HEAPU8[$100+2>>0]<<16)|(HEAPU8[$100+3>>0]<<24);
      $102 = ((($101)) + 9|0);
      $103 = HEAPU8[$102>>0]|(HEAPU8[$102+1>>0]<<8)|(HEAPU8[$102+2>>0]<<16)|(HEAPU8[$102+3>>0]<<24);
      $104 = $1;
      $105 = HEAP32[$104>>2]|0;
      $106 = HEAPU8[$105>>0]|(HEAPU8[$105+1>>0]<<8)|(HEAPU8[$105+2>>0]<<16)|(HEAPU8[$105+3>>0]<<24);
      $107 = ((($106)) + 13|0);
      $108 = HEAPU8[$107>>0]|(HEAPU8[$107+1>>0]<<8);
      $109 = $1;
      $110 = HEAP32[$109>>2]|0;
      $111 = HEAPU8[$110>>0]|(HEAPU8[$110+1>>0]<<8)|(HEAPU8[$110+2>>0]<<16)|(HEAPU8[$110+3>>0]<<24);
      $112 = ((($111)) + 15|0);
      $113 = HEAPU8[$112>>0]|(HEAPU8[$112+1>>0]<<8);
      __set_error_pos($98,$103,$108,$113);
      $364 = $result;
      STACKTOP = sp;return ($364|0);
     }
    }
   }
   $114 = $0;
   $115 = $0;
   $116 = ((($115)) + 67|0);
   $117 = HEAPU8[$116>>0]|(HEAPU8[$116+1>>0]<<8)|(HEAPU8[$116+2>>0]<<16)|(HEAPU8[$116+3>>0]<<24);
   $118 = (__set_current_error($114,18,$117)|0);
   $119 = ($118<<24>>24)!=(0);
   if (!($119)) {
    $364 = $result;
    STACKTOP = sp;return ($364|0);
   }
   $120 = $0;
   __set_error_pos($120,0,0,0);
   $364 = $result;
   STACKTOP = sp;return ($364|0);
  }
 }
 $67 = $1;
 $68 = HEAP32[$67>>2]|0;
 $tpr = $68;
 $69 = $tpr;
 $70 = ((($69)) + 8|0);
 $71 = HEAPU8[$70>>0]|(HEAPU8[$70+1>>0]<<8)|(HEAPU8[$70+2>>0]<<16)|(HEAPU8[$70+3>>0]<<24);
 HEAP8[$71>>0]=2&255;HEAP8[$71+1>>0]=(2>>8)&255;HEAP8[$71+2>>0]=(2>>16)&255;HEAP8[$71+3>>0]=2>>24;
 $72 = $tpr;
 $73 = ((($72)) + 8|0);
 $74 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
 $75 = ((($74)) + 4|0);
 HEAP8[$75>>0]=1&255;HEAP8[$75+1>>0]=(1>>8)&255;HEAP8[$75+2>>0]=(1>>16)&255;HEAP8[$75+3>>0]=1>>24;
 $364 = $result;
 STACKTOP = sp;return ($364|0);
}
function __core_and($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0.0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0.0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0.0, $122 = 0, $123 = 0, $124 = 0, $125 = 0.0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0.0;
 var $134 = 0, $135 = 0.0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0.0, $142 = 0.0, $143 = 0.0, $144 = 0, $145 = 0, $146 = 0, $147 = 0.0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0.0, $156 = 0, $157 = 0.0, $158 = 0, $159 = 0, $16 = 0, $160 = 0.0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0.0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0.0, $95 = 0, $96 = 0, $97 = 0.0, $98 = 0, $99 = 0, $opnd1 = 0, $opnd2 = 0, $opndv1 = 0, $opndv2 = 0, $or$cond = 0, $result = 0, $tpptr = 0, $val = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $opndv1 = sp + 45|0;
 $opndv2 = sp + 28|0;
 $0 = $s;
 $1 = $l;
 $result = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),15423,(4946|0));
  // unreachable;
 }
 $6 = $1;
 $7 = HEAP32[$6>>2]|0;
 $tpptr = $7;
 $8 = $tpptr;
 $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
 $opnd1 = $9;
 $10 = $tpptr;
 $11 = ((($10)) + 4|0);
 $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
 $opnd2 = $12;
 $13 = $tpptr;
 $14 = ((($13)) + 8|0);
 $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
 $val = $15;
 $16 = $opnd1;
 $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
 $18 = ($17|0)==(2);
 if ($18) {
  $29 = 1;
 } else {
  $19 = $opnd1;
  $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8)|(HEAPU8[$19+2>>0]<<16)|(HEAPU8[$19+3>>0]<<24);
  $21 = ($20|0)==(9);
  if ($21) {
   $22 = $opnd1;
   $23 = ((($22)) + 4|0);
   $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
   $25 = ((($24)) + 4|0);
   $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
   $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
   $28 = ($27|0)==(2);
   $29 = $28;
  } else {
   $29 = 0;
  }
 }
 $30 = $29 ? 2 : 3;
 HEAP8[$opndv1>>0]=$30&255;HEAP8[$opndv1+1>>0]=($30>>8)&255;HEAP8[$opndv1+2>>0]=($30>>16)&255;HEAP8[$opndv1+3>>0]=$30>>24;
 $31 = ((($opndv1)) + 4|0);
 $32 = $opnd1;
 $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
 $34 = ($33|0)==(9);
 $35 = $opnd1;
 $36 = ((($35)) + 4|0);
 if ($34) {
  $37 = HEAPU8[$36>>0]|(HEAPU8[$36+1>>0]<<8)|(HEAPU8[$36+2>>0]<<16)|(HEAPU8[$36+3>>0]<<24);
  $38 = ((($37)) + 4|0);
  $39 = HEAPU8[$38>>0]|(HEAPU8[$38+1>>0]<<8)|(HEAPU8[$38+2>>0]<<16)|(HEAPU8[$38+3>>0]<<24);
  $40 = ((($39)) + 4|0);
  ;HEAP8[$31>>0]=HEAP8[$40>>0]|0;HEAP8[$31+1>>0]=HEAP8[$40+1>>0]|0;HEAP8[$31+2>>0]=HEAP8[$40+2>>0]|0;HEAP8[$31+3>>0]=HEAP8[$40+3>>0]|0;
 } else {
  ;HEAP8[$31>>0]=HEAP8[$36>>0]|0;HEAP8[$31+1>>0]=HEAP8[$36+1>>0]|0;HEAP8[$31+2>>0]=HEAP8[$36+2>>0]|0;HEAP8[$31+3>>0]=HEAP8[$36+3>>0]|0;
 }
 $41 = $opnd2;
 $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
 $43 = ($42|0)==(2);
 if ($43) {
  $54 = 1;
 } else {
  $44 = $opnd2;
  $45 = HEAPU8[$44>>0]|(HEAPU8[$44+1>>0]<<8)|(HEAPU8[$44+2>>0]<<16)|(HEAPU8[$44+3>>0]<<24);
  $46 = ($45|0)==(9);
  if ($46) {
   $47 = $opnd2;
   $48 = ((($47)) + 4|0);
   $49 = HEAPU8[$48>>0]|(HEAPU8[$48+1>>0]<<8)|(HEAPU8[$48+2>>0]<<16)|(HEAPU8[$48+3>>0]<<24);
   $50 = ((($49)) + 4|0);
   $51 = HEAPU8[$50>>0]|(HEAPU8[$50+1>>0]<<8)|(HEAPU8[$50+2>>0]<<16)|(HEAPU8[$50+3>>0]<<24);
   $52 = HEAPU8[$51>>0]|(HEAPU8[$51+1>>0]<<8)|(HEAPU8[$51+2>>0]<<16)|(HEAPU8[$51+3>>0]<<24);
   $53 = ($52|0)==(2);
   $54 = $53;
  } else {
   $54 = 0;
  }
 }
 $55 = $54 ? 2 : 3;
 HEAP8[$opndv2>>0]=$55&255;HEAP8[$opndv2+1>>0]=($55>>8)&255;HEAP8[$opndv2+2>>0]=($55>>16)&255;HEAP8[$opndv2+3>>0]=$55>>24;
 $56 = ((($opndv2)) + 4|0);
 $57 = $opnd2;
 $58 = HEAPU8[$57>>0]|(HEAPU8[$57+1>>0]<<8)|(HEAPU8[$57+2>>0]<<16)|(HEAPU8[$57+3>>0]<<24);
 $59 = ($58|0)==(9);
 $60 = $opnd2;
 $61 = ((($60)) + 4|0);
 if ($59) {
  $62 = HEAPU8[$61>>0]|(HEAPU8[$61+1>>0]<<8)|(HEAPU8[$61+2>>0]<<16)|(HEAPU8[$61+3>>0]<<24);
  $63 = ((($62)) + 4|0);
  $64 = HEAPU8[$63>>0]|(HEAPU8[$63+1>>0]<<8)|(HEAPU8[$63+2>>0]<<16)|(HEAPU8[$63+3>>0]<<24);
  $65 = ((($64)) + 4|0);
  ;HEAP8[$56>>0]=HEAP8[$65>>0]|0;HEAP8[$56+1>>0]=HEAP8[$65+1>>0]|0;HEAP8[$56+2>>0]=HEAP8[$65+2>>0]|0;HEAP8[$56+3>>0]=HEAP8[$65+3>>0]|0;
 } else {
  ;HEAP8[$56>>0]=HEAP8[$61>>0]|0;HEAP8[$56+1>>0]=HEAP8[$61+1>>0]|0;HEAP8[$56+2>>0]=HEAP8[$61+2>>0]|0;HEAP8[$56+3>>0]=HEAP8[$61+3>>0]|0;
 }
 $66 = HEAPU8[$opndv1>>0]|(HEAPU8[$opndv1+1>>0]<<8)|(HEAPU8[$opndv1+2>>0]<<16)|(HEAPU8[$opndv1+3>>0]<<24);
 $67 = ($66|0)==(0);
 if ($67) {
  HEAP8[$opndv1>>0]=2&255;HEAP8[$opndv1+1>>0]=(2>>8)&255;HEAP8[$opndv1+2>>0]=(2>>16)&255;HEAP8[$opndv1+3>>0]=2>>24;
  $68 = ((($opndv1)) + 4|0);
  HEAP8[$68>>0]=0&255;HEAP8[$68+1>>0]=(0>>8)&255;HEAP8[$68+2>>0]=(0>>16)&255;HEAP8[$68+3>>0]=0>>24;
 } else {
  $69 = HEAPU8[$opndv1>>0]|(HEAPU8[$opndv1+1>>0]<<8)|(HEAPU8[$opndv1+2>>0]<<16)|(HEAPU8[$opndv1+3>>0]<<24);
  $70 = ($69|0)!=(2);
  if ($70) {
   $71 = HEAPU8[$opndv1>>0]|(HEAPU8[$opndv1+1>>0]<<8)|(HEAPU8[$opndv1+2>>0]<<16)|(HEAPU8[$opndv1+3>>0]<<24);
   $72 = ($71|0)!=(3);
   if ($72) {
    HEAP8[$opndv1>>0]=2&255;HEAP8[$opndv1+1>>0]=(2>>8)&255;HEAP8[$opndv1+2>>0]=(2>>16)&255;HEAP8[$opndv1+3>>0]=2>>24;
    $73 = ((($opndv1)) + 4|0);
    HEAP8[$73>>0]=1&255;HEAP8[$73+1>>0]=(1>>8)&255;HEAP8[$73+2>>0]=(1>>16)&255;HEAP8[$73+3>>0]=1>>24;
   }
  }
 }
 $74 = HEAPU8[$opndv2>>0]|(HEAPU8[$opndv2+1>>0]<<8)|(HEAPU8[$opndv2+2>>0]<<16)|(HEAPU8[$opndv2+3>>0]<<24);
 $75 = ($74|0)==(0);
 if ($75) {
  HEAP8[$opndv2>>0]=2&255;HEAP8[$opndv2+1>>0]=(2>>8)&255;HEAP8[$opndv2+2>>0]=(2>>16)&255;HEAP8[$opndv2+3>>0]=2>>24;
  $76 = ((($opndv2)) + 4|0);
  HEAP8[$76>>0]=0&255;HEAP8[$76+1>>0]=(0>>8)&255;HEAP8[$76+2>>0]=(0>>16)&255;HEAP8[$76+3>>0]=0>>24;
 } else {
  $77 = HEAPU8[$opndv2>>0]|(HEAPU8[$opndv2+1>>0]<<8)|(HEAPU8[$opndv2+2>>0]<<16)|(HEAPU8[$opndv2+3>>0]<<24);
  $78 = ($77|0)!=(2);
  if ($78) {
   $79 = HEAPU8[$opndv2>>0]|(HEAPU8[$opndv2+1>>0]<<8)|(HEAPU8[$opndv2+2>>0]<<16)|(HEAPU8[$opndv2+3>>0]<<24);
   $80 = ($79|0)!=(3);
   if ($80) {
    HEAP8[$opndv2>>0]=2&255;HEAP8[$opndv2+1>>0]=(2>>8)&255;HEAP8[$opndv2+2>>0]=(2>>16)&255;HEAP8[$opndv2+3>>0]=2>>24;
    $81 = ((($opndv2)) + 4|0);
    HEAP8[$81>>0]=1&255;HEAP8[$81+1>>0]=(1>>8)&255;HEAP8[$81+2>>0]=(1>>16)&255;HEAP8[$81+3>>0]=1>>24;
   }
  }
 }
 $82 = HEAPU8[$opndv1>>0]|(HEAPU8[$opndv1+1>>0]<<8)|(HEAPU8[$opndv1+2>>0]<<16)|(HEAPU8[$opndv1+3>>0]<<24);
 $83 = ($82|0)==(2);
 do {
  if ($83) {
   $84 = HEAPU8[$opndv2>>0]|(HEAPU8[$opndv2+1>>0]<<8)|(HEAPU8[$opndv2+2>>0]<<16)|(HEAPU8[$opndv2+3>>0]<<24);
   $85 = ($84|0)==(2);
   if ($85) {
    $86 = ((($opndv1)) + 4|0);
    $87 = HEAPU8[$86>>0]|(HEAPU8[$86+1>>0]<<8)|(HEAPU8[$86+2>>0]<<16)|(HEAPU8[$86+3>>0]<<24);
    $88 = ($87|0)!=(0);
    $89 = ((($opndv2)) + 4|0);
    $90 = HEAPU8[$89>>0]|(HEAPU8[$89+1>>0]<<8)|(HEAPU8[$89+2>>0]<<16)|(HEAPU8[$89+3>>0]<<24);
    $91 = ($90|0)!=(0);
    $92 = $88 ? $91 : 0;
    $93 = $92&1;
    $94 = (+($93|0));
    $95 = ((($opndv1)) + 4|0);
    $96 = HEAPU8[$95>>0]|(HEAPU8[$95+1>>0]<<8)|(HEAPU8[$95+2>>0]<<16)|(HEAPU8[$95+3>>0]<<24);
    $97 = (+($96|0));
    $98 = $94 == $97;
    if ($98) {
     $99 = ((($opndv2)) + 4|0);
     $100 = HEAPU8[$99>>0]|(HEAPU8[$99+1>>0]<<8)|(HEAPU8[$99+2>>0]<<16)|(HEAPU8[$99+3>>0]<<24);
     $101 = (+($100|0));
     $102 = $101 != 0.0;
     if ($102) {
      $103 = $val;
      HEAP8[$103>>0]=2&255;HEAP8[$103+1>>0]=(2>>8)&255;HEAP8[$103+2>>0]=(2>>16)&255;HEAP8[$103+3>>0]=2>>24;
      $104 = ((($opndv1)) + 4|0);
      $105 = HEAPU8[$104>>0]|(HEAPU8[$104+1>>0]<<8)|(HEAPU8[$104+2>>0]<<16)|(HEAPU8[$104+3>>0]<<24);
      $106 = ($105|0)!=(0);
      $107 = ((($opndv2)) + 4|0);
      $108 = HEAPU8[$107>>0]|(HEAPU8[$107+1>>0]<<8)|(HEAPU8[$107+2>>0]<<16)|(HEAPU8[$107+3>>0]<<24);
      $109 = ($108|0)!=(0);
      $110 = $106 ? $109 : 0;
      $111 = $110&1;
      $112 = $val;
      $113 = ((($112)) + 4|0);
      HEAP8[$113>>0]=$111&255;HEAP8[$113+1>>0]=($111>>8)&255;HEAP8[$113+2>>0]=($111>>16)&255;HEAP8[$113+3>>0]=$111>>24;
      break;
     }
    }
    $114 = $val;
    HEAP8[$114>>0]=3&255;HEAP8[$114+1>>0]=(3>>8)&255;HEAP8[$114+2>>0]=(3>>16)&255;HEAP8[$114+3>>0]=3>>24;
    $115 = ((($opndv1)) + 4|0);
    $116 = HEAPU8[$115>>0]|(HEAPU8[$115+1>>0]<<8)|(HEAPU8[$115+2>>0]<<16)|(HEAPU8[$115+3>>0]<<24);
    $117 = (+($116|0));
    $118 = $117 != 0.0;
    if ($118) {
     $119 = ((($opndv2)) + 4|0);
     $120 = HEAPU8[$119>>0]|(HEAPU8[$119+1>>0]<<8)|(HEAPU8[$119+2>>0]<<16)|(HEAPU8[$119+3>>0]<<24);
     $121 = (+($120|0));
     $122 = $121 != 0.0;
     $124 = $122;
    } else {
     $124 = 0;
    }
    $123 = $124&1;
    $125 = (+($123|0));
    $126 = $val;
    $127 = ((($126)) + 4|0);
    HEAPF32[tempDoublePtr>>2]=$125;HEAP8[$127>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$127+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$127+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$127+3>>0]=HEAP8[tempDoublePtr+3>>0];
   } else {
    label = 33;
   }
  } else {
   label = 33;
  }
 } while(0);
 if ((label|0) == 33) {
  $128 = $val;
  HEAP8[$128>>0]=3&255;HEAP8[$128+1>>0]=(3>>8)&255;HEAP8[$128+2>>0]=(3>>16)&255;HEAP8[$128+3>>0]=3>>24;
  $129 = HEAPU8[$opndv1>>0]|(HEAPU8[$opndv1+1>>0]<<8)|(HEAPU8[$opndv1+2>>0]<<16)|(HEAPU8[$opndv1+3>>0]<<24);
  $130 = ($129|0)==(2);
  $131 = ((($opndv1)) + 4|0);
  if ($130) {
   $132 = HEAPU8[$131>>0]|(HEAPU8[$131+1>>0]<<8)|(HEAPU8[$131+2>>0]<<16)|(HEAPU8[$131+3>>0]<<24);
   $133 = (+($132|0));
   $134 = $133 != 0.0;
   if ($134) {
    label = 36;
   } else {
    $146 = 0;
   }
  } else {
   HEAP8[tempDoublePtr>>0]=HEAP8[$131>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$131+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$131+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$131+3>>0];$135 = +HEAPF32[tempDoublePtr>>2];
   $136 = $135 != 0.0;
   if ($136) {
    label = 36;
   } else {
    $146 = 0;
   }
  }
  if ((label|0) == 36) {
   $137 = HEAPU8[$opndv2>>0]|(HEAPU8[$opndv2+1>>0]<<8)|(HEAPU8[$opndv2+2>>0]<<16)|(HEAPU8[$opndv2+3>>0]<<24);
   $138 = ($137|0)==(2);
   $139 = ((($opndv2)) + 4|0);
   $140 = HEAPU8[$139>>0]|(HEAPU8[$139+1>>0]<<8)|(HEAPU8[$139+2>>0]<<16)|(HEAPU8[$139+3>>0]<<24);
   $141 = (+($140|0));
   HEAP8[tempDoublePtr>>0]=HEAP8[$139>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$139+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$139+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$139+3>>0];$142 = +HEAPF32[tempDoublePtr>>2];
   $143 = $138 ? $141 : $142;
   $144 = $143 != 0.0;
   $146 = $144;
  }
  $145 = $146&1;
  $147 = (+($145|0));
  $148 = $val;
  $149 = ((($148)) + 4|0);
  HEAPF32[tempDoublePtr>>2]=$147;HEAP8[$149>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$149+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$149+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$149+3>>0]=HEAP8[tempDoublePtr+3>>0];
 }
 $150 = $val;
 $151 = HEAPU8[$150>>0]|(HEAPU8[$150+1>>0]<<8)|(HEAPU8[$150+2>>0]<<16)|(HEAPU8[$150+3>>0]<<24);
 $152 = ($151|0)==(3);
 if (!($152)) {
  $169 = $result;
  STACKTOP = sp;return ($169|0);
 }
 $153 = $val;
 $154 = ((($153)) + 4|0);
 HEAP8[tempDoublePtr>>0]=HEAP8[$154>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$154+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$154+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$154+3>>0];$155 = +HEAPF32[tempDoublePtr>>2];
 $156 = (~~(($155)));
 $157 = (+($156|0));
 $158 = $val;
 $159 = ((($158)) + 4|0);
 HEAP8[tempDoublePtr>>0]=HEAP8[$159>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$159+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$159+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$159+3>>0];$160 = +HEAPF32[tempDoublePtr>>2];
 $161 = $157 == $160;
 if (!($161)) {
  $169 = $result;
  STACKTOP = sp;return ($169|0);
 }
 $162 = $val;
 HEAP8[$162>>0]=2&255;HEAP8[$162+1>>0]=(2>>8)&255;HEAP8[$162+2>>0]=(2>>16)&255;HEAP8[$162+3>>0]=2>>24;
 $163 = $val;
 $164 = ((($163)) + 4|0);
 HEAP8[tempDoublePtr>>0]=HEAP8[$164>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$164+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$164+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$164+3>>0];$165 = +HEAPF32[tempDoublePtr>>2];
 $166 = (~~(($165)));
 $167 = $val;
 $168 = ((($167)) + 4|0);
 HEAP8[$168>>0]=$166&255;HEAP8[$168+1>>0]=($166>>8)&255;HEAP8[$168+2>>0]=($166>>16)&255;HEAP8[$168+3>>0]=$166>>24;
 $169 = $result;
 STACKTOP = sp;return ($169|0);
}
function __core_or($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0.0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0.0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0.0, $122 = 0, $123 = 0, $124 = 0, $125 = 0.0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0.0;
 var $134 = 0, $135 = 0.0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0.0, $142 = 0.0, $143 = 0.0, $144 = 0, $145 = 0, $146 = 0, $147 = 0.0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0.0, $156 = 0, $157 = 0.0, $158 = 0, $159 = 0, $16 = 0, $160 = 0.0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0.0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0.0, $95 = 0, $96 = 0, $97 = 0.0, $98 = 0, $99 = 0, $opnd1 = 0, $opnd2 = 0, $opndv1 = 0, $opndv2 = 0, $or$cond = 0, $result = 0, $tpptr = 0, $val = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $opndv1 = sp + 45|0;
 $opndv2 = sp + 28|0;
 $0 = $s;
 $1 = $l;
 $result = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),15434,(4937|0));
  // unreachable;
 }
 $6 = $1;
 $7 = HEAP32[$6>>2]|0;
 $tpptr = $7;
 $8 = $tpptr;
 $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
 $opnd1 = $9;
 $10 = $tpptr;
 $11 = ((($10)) + 4|0);
 $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
 $opnd2 = $12;
 $13 = $tpptr;
 $14 = ((($13)) + 8|0);
 $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
 $val = $15;
 $16 = $opnd1;
 $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
 $18 = ($17|0)==(2);
 if ($18) {
  $29 = 1;
 } else {
  $19 = $opnd1;
  $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8)|(HEAPU8[$19+2>>0]<<16)|(HEAPU8[$19+3>>0]<<24);
  $21 = ($20|0)==(9);
  if ($21) {
   $22 = $opnd1;
   $23 = ((($22)) + 4|0);
   $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
   $25 = ((($24)) + 4|0);
   $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
   $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
   $28 = ($27|0)==(2);
   $29 = $28;
  } else {
   $29 = 0;
  }
 }
 $30 = $29 ? 2 : 3;
 HEAP8[$opndv1>>0]=$30&255;HEAP8[$opndv1+1>>0]=($30>>8)&255;HEAP8[$opndv1+2>>0]=($30>>16)&255;HEAP8[$opndv1+3>>0]=$30>>24;
 $31 = ((($opndv1)) + 4|0);
 $32 = $opnd1;
 $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
 $34 = ($33|0)==(9);
 $35 = $opnd1;
 $36 = ((($35)) + 4|0);
 if ($34) {
  $37 = HEAPU8[$36>>0]|(HEAPU8[$36+1>>0]<<8)|(HEAPU8[$36+2>>0]<<16)|(HEAPU8[$36+3>>0]<<24);
  $38 = ((($37)) + 4|0);
  $39 = HEAPU8[$38>>0]|(HEAPU8[$38+1>>0]<<8)|(HEAPU8[$38+2>>0]<<16)|(HEAPU8[$38+3>>0]<<24);
  $40 = ((($39)) + 4|0);
  ;HEAP8[$31>>0]=HEAP8[$40>>0]|0;HEAP8[$31+1>>0]=HEAP8[$40+1>>0]|0;HEAP8[$31+2>>0]=HEAP8[$40+2>>0]|0;HEAP8[$31+3>>0]=HEAP8[$40+3>>0]|0;
 } else {
  ;HEAP8[$31>>0]=HEAP8[$36>>0]|0;HEAP8[$31+1>>0]=HEAP8[$36+1>>0]|0;HEAP8[$31+2>>0]=HEAP8[$36+2>>0]|0;HEAP8[$31+3>>0]=HEAP8[$36+3>>0]|0;
 }
 $41 = $opnd2;
 $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
 $43 = ($42|0)==(2);
 if ($43) {
  $54 = 1;
 } else {
  $44 = $opnd2;
  $45 = HEAPU8[$44>>0]|(HEAPU8[$44+1>>0]<<8)|(HEAPU8[$44+2>>0]<<16)|(HEAPU8[$44+3>>0]<<24);
  $46 = ($45|0)==(9);
  if ($46) {
   $47 = $opnd2;
   $48 = ((($47)) + 4|0);
   $49 = HEAPU8[$48>>0]|(HEAPU8[$48+1>>0]<<8)|(HEAPU8[$48+2>>0]<<16)|(HEAPU8[$48+3>>0]<<24);
   $50 = ((($49)) + 4|0);
   $51 = HEAPU8[$50>>0]|(HEAPU8[$50+1>>0]<<8)|(HEAPU8[$50+2>>0]<<16)|(HEAPU8[$50+3>>0]<<24);
   $52 = HEAPU8[$51>>0]|(HEAPU8[$51+1>>0]<<8)|(HEAPU8[$51+2>>0]<<16)|(HEAPU8[$51+3>>0]<<24);
   $53 = ($52|0)==(2);
   $54 = $53;
  } else {
   $54 = 0;
  }
 }
 $55 = $54 ? 2 : 3;
 HEAP8[$opndv2>>0]=$55&255;HEAP8[$opndv2+1>>0]=($55>>8)&255;HEAP8[$opndv2+2>>0]=($55>>16)&255;HEAP8[$opndv2+3>>0]=$55>>24;
 $56 = ((($opndv2)) + 4|0);
 $57 = $opnd2;
 $58 = HEAPU8[$57>>0]|(HEAPU8[$57+1>>0]<<8)|(HEAPU8[$57+2>>0]<<16)|(HEAPU8[$57+3>>0]<<24);
 $59 = ($58|0)==(9);
 $60 = $opnd2;
 $61 = ((($60)) + 4|0);
 if ($59) {
  $62 = HEAPU8[$61>>0]|(HEAPU8[$61+1>>0]<<8)|(HEAPU8[$61+2>>0]<<16)|(HEAPU8[$61+3>>0]<<24);
  $63 = ((($62)) + 4|0);
  $64 = HEAPU8[$63>>0]|(HEAPU8[$63+1>>0]<<8)|(HEAPU8[$63+2>>0]<<16)|(HEAPU8[$63+3>>0]<<24);
  $65 = ((($64)) + 4|0);
  ;HEAP8[$56>>0]=HEAP8[$65>>0]|0;HEAP8[$56+1>>0]=HEAP8[$65+1>>0]|0;HEAP8[$56+2>>0]=HEAP8[$65+2>>0]|0;HEAP8[$56+3>>0]=HEAP8[$65+3>>0]|0;
 } else {
  ;HEAP8[$56>>0]=HEAP8[$61>>0]|0;HEAP8[$56+1>>0]=HEAP8[$61+1>>0]|0;HEAP8[$56+2>>0]=HEAP8[$61+2>>0]|0;HEAP8[$56+3>>0]=HEAP8[$61+3>>0]|0;
 }
 $66 = HEAPU8[$opndv1>>0]|(HEAPU8[$opndv1+1>>0]<<8)|(HEAPU8[$opndv1+2>>0]<<16)|(HEAPU8[$opndv1+3>>0]<<24);
 $67 = ($66|0)==(0);
 if ($67) {
  HEAP8[$opndv1>>0]=2&255;HEAP8[$opndv1+1>>0]=(2>>8)&255;HEAP8[$opndv1+2>>0]=(2>>16)&255;HEAP8[$opndv1+3>>0]=2>>24;
  $68 = ((($opndv1)) + 4|0);
  HEAP8[$68>>0]=0&255;HEAP8[$68+1>>0]=(0>>8)&255;HEAP8[$68+2>>0]=(0>>16)&255;HEAP8[$68+3>>0]=0>>24;
 } else {
  $69 = HEAPU8[$opndv1>>0]|(HEAPU8[$opndv1+1>>0]<<8)|(HEAPU8[$opndv1+2>>0]<<16)|(HEAPU8[$opndv1+3>>0]<<24);
  $70 = ($69|0)!=(2);
  if ($70) {
   $71 = HEAPU8[$opndv1>>0]|(HEAPU8[$opndv1+1>>0]<<8)|(HEAPU8[$opndv1+2>>0]<<16)|(HEAPU8[$opndv1+3>>0]<<24);
   $72 = ($71|0)!=(3);
   if ($72) {
    HEAP8[$opndv1>>0]=2&255;HEAP8[$opndv1+1>>0]=(2>>8)&255;HEAP8[$opndv1+2>>0]=(2>>16)&255;HEAP8[$opndv1+3>>0]=2>>24;
    $73 = ((($opndv1)) + 4|0);
    HEAP8[$73>>0]=1&255;HEAP8[$73+1>>0]=(1>>8)&255;HEAP8[$73+2>>0]=(1>>16)&255;HEAP8[$73+3>>0]=1>>24;
   }
  }
 }
 $74 = HEAPU8[$opndv2>>0]|(HEAPU8[$opndv2+1>>0]<<8)|(HEAPU8[$opndv2+2>>0]<<16)|(HEAPU8[$opndv2+3>>0]<<24);
 $75 = ($74|0)==(0);
 if ($75) {
  HEAP8[$opndv2>>0]=2&255;HEAP8[$opndv2+1>>0]=(2>>8)&255;HEAP8[$opndv2+2>>0]=(2>>16)&255;HEAP8[$opndv2+3>>0]=2>>24;
  $76 = ((($opndv2)) + 4|0);
  HEAP8[$76>>0]=0&255;HEAP8[$76+1>>0]=(0>>8)&255;HEAP8[$76+2>>0]=(0>>16)&255;HEAP8[$76+3>>0]=0>>24;
 } else {
  $77 = HEAPU8[$opndv2>>0]|(HEAPU8[$opndv2+1>>0]<<8)|(HEAPU8[$opndv2+2>>0]<<16)|(HEAPU8[$opndv2+3>>0]<<24);
  $78 = ($77|0)!=(2);
  if ($78) {
   $79 = HEAPU8[$opndv2>>0]|(HEAPU8[$opndv2+1>>0]<<8)|(HEAPU8[$opndv2+2>>0]<<16)|(HEAPU8[$opndv2+3>>0]<<24);
   $80 = ($79|0)!=(3);
   if ($80) {
    HEAP8[$opndv2>>0]=2&255;HEAP8[$opndv2+1>>0]=(2>>8)&255;HEAP8[$opndv2+2>>0]=(2>>16)&255;HEAP8[$opndv2+3>>0]=2>>24;
    $81 = ((($opndv2)) + 4|0);
    HEAP8[$81>>0]=1&255;HEAP8[$81+1>>0]=(1>>8)&255;HEAP8[$81+2>>0]=(1>>16)&255;HEAP8[$81+3>>0]=1>>24;
   }
  }
 }
 $82 = HEAPU8[$opndv1>>0]|(HEAPU8[$opndv1+1>>0]<<8)|(HEAPU8[$opndv1+2>>0]<<16)|(HEAPU8[$opndv1+3>>0]<<24);
 $83 = ($82|0)==(2);
 do {
  if ($83) {
   $84 = HEAPU8[$opndv2>>0]|(HEAPU8[$opndv2+1>>0]<<8)|(HEAPU8[$opndv2+2>>0]<<16)|(HEAPU8[$opndv2+3>>0]<<24);
   $85 = ($84|0)==(2);
   if ($85) {
    $86 = ((($opndv1)) + 4|0);
    $87 = HEAPU8[$86>>0]|(HEAPU8[$86+1>>0]<<8)|(HEAPU8[$86+2>>0]<<16)|(HEAPU8[$86+3>>0]<<24);
    $88 = ($87|0)!=(0);
    $89 = ((($opndv2)) + 4|0);
    $90 = HEAPU8[$89>>0]|(HEAPU8[$89+1>>0]<<8)|(HEAPU8[$89+2>>0]<<16)|(HEAPU8[$89+3>>0]<<24);
    $91 = ($90|0)!=(0);
    $92 = $88 ? 1 : $91;
    $93 = $92&1;
    $94 = (+($93|0));
    $95 = ((($opndv1)) + 4|0);
    $96 = HEAPU8[$95>>0]|(HEAPU8[$95+1>>0]<<8)|(HEAPU8[$95+2>>0]<<16)|(HEAPU8[$95+3>>0]<<24);
    $97 = (+($96|0));
    $98 = $94 == $97;
    if (!($98)) {
     $99 = ((($opndv2)) + 4|0);
     $100 = HEAPU8[$99>>0]|(HEAPU8[$99+1>>0]<<8)|(HEAPU8[$99+2>>0]<<16)|(HEAPU8[$99+3>>0]<<24);
     $101 = (+($100|0));
     $102 = $101 != 0.0;
     if (!($102)) {
      $114 = $val;
      HEAP8[$114>>0]=3&255;HEAP8[$114+1>>0]=(3>>8)&255;HEAP8[$114+2>>0]=(3>>16)&255;HEAP8[$114+3>>0]=3>>24;
      $115 = ((($opndv1)) + 4|0);
      $116 = HEAPU8[$115>>0]|(HEAPU8[$115+1>>0]<<8)|(HEAPU8[$115+2>>0]<<16)|(HEAPU8[$115+3>>0]<<24);
      $117 = (+($116|0));
      $118 = $117 != 0.0;
      if ($118) {
       $124 = 1;
      } else {
       $119 = ((($opndv2)) + 4|0);
       $120 = HEAPU8[$119>>0]|(HEAPU8[$119+1>>0]<<8)|(HEAPU8[$119+2>>0]<<16)|(HEAPU8[$119+3>>0]<<24);
       $121 = (+($120|0));
       $122 = $121 != 0.0;
       $124 = $122;
      }
      $123 = $124&1;
      $125 = (+($123|0));
      $126 = $val;
      $127 = ((($126)) + 4|0);
      HEAPF32[tempDoublePtr>>2]=$125;HEAP8[$127>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$127+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$127+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$127+3>>0]=HEAP8[tempDoublePtr+3>>0];
      break;
     }
    }
    $103 = $val;
    HEAP8[$103>>0]=2&255;HEAP8[$103+1>>0]=(2>>8)&255;HEAP8[$103+2>>0]=(2>>16)&255;HEAP8[$103+3>>0]=2>>24;
    $104 = ((($opndv1)) + 4|0);
    $105 = HEAPU8[$104>>0]|(HEAPU8[$104+1>>0]<<8)|(HEAPU8[$104+2>>0]<<16)|(HEAPU8[$104+3>>0]<<24);
    $106 = ($105|0)!=(0);
    $107 = ((($opndv2)) + 4|0);
    $108 = HEAPU8[$107>>0]|(HEAPU8[$107+1>>0]<<8)|(HEAPU8[$107+2>>0]<<16)|(HEAPU8[$107+3>>0]<<24);
    $109 = ($108|0)!=(0);
    $110 = $106 ? 1 : $109;
    $111 = $110&1;
    $112 = $val;
    $113 = ((($112)) + 4|0);
    HEAP8[$113>>0]=$111&255;HEAP8[$113+1>>0]=($111>>8)&255;HEAP8[$113+2>>0]=($111>>16)&255;HEAP8[$113+3>>0]=$111>>24;
   } else {
    label = 33;
   }
  } else {
   label = 33;
  }
 } while(0);
 if ((label|0) == 33) {
  $128 = $val;
  HEAP8[$128>>0]=3&255;HEAP8[$128+1>>0]=(3>>8)&255;HEAP8[$128+2>>0]=(3>>16)&255;HEAP8[$128+3>>0]=3>>24;
  $129 = HEAPU8[$opndv1>>0]|(HEAPU8[$opndv1+1>>0]<<8)|(HEAPU8[$opndv1+2>>0]<<16)|(HEAPU8[$opndv1+3>>0]<<24);
  $130 = ($129|0)==(2);
  $131 = ((($opndv1)) + 4|0);
  if ($130) {
   $132 = HEAPU8[$131>>0]|(HEAPU8[$131+1>>0]<<8)|(HEAPU8[$131+2>>0]<<16)|(HEAPU8[$131+3>>0]<<24);
   $133 = (+($132|0));
   $134 = $133 != 0.0;
   if ($134) {
    $146 = 1;
   } else {
    label = 36;
   }
  } else {
   HEAP8[tempDoublePtr>>0]=HEAP8[$131>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$131+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$131+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$131+3>>0];$135 = +HEAPF32[tempDoublePtr>>2];
   $136 = $135 != 0.0;
   if ($136) {
    $146 = 1;
   } else {
    label = 36;
   }
  }
  if ((label|0) == 36) {
   $137 = HEAPU8[$opndv2>>0]|(HEAPU8[$opndv2+1>>0]<<8)|(HEAPU8[$opndv2+2>>0]<<16)|(HEAPU8[$opndv2+3>>0]<<24);
   $138 = ($137|0)==(2);
   $139 = ((($opndv2)) + 4|0);
   $140 = HEAPU8[$139>>0]|(HEAPU8[$139+1>>0]<<8)|(HEAPU8[$139+2>>0]<<16)|(HEAPU8[$139+3>>0]<<24);
   $141 = (+($140|0));
   HEAP8[tempDoublePtr>>0]=HEAP8[$139>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$139+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$139+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$139+3>>0];$142 = +HEAPF32[tempDoublePtr>>2];
   $143 = $138 ? $141 : $142;
   $144 = $143 != 0.0;
   $146 = $144;
  }
  $145 = $146&1;
  $147 = (+($145|0));
  $148 = $val;
  $149 = ((($148)) + 4|0);
  HEAPF32[tempDoublePtr>>2]=$147;HEAP8[$149>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$149+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$149+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$149+3>>0]=HEAP8[tempDoublePtr+3>>0];
 }
 $150 = $val;
 $151 = HEAPU8[$150>>0]|(HEAPU8[$150+1>>0]<<8)|(HEAPU8[$150+2>>0]<<16)|(HEAPU8[$150+3>>0]<<24);
 $152 = ($151|0)==(3);
 if (!($152)) {
  $169 = $result;
  STACKTOP = sp;return ($169|0);
 }
 $153 = $val;
 $154 = ((($153)) + 4|0);
 HEAP8[tempDoublePtr>>0]=HEAP8[$154>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$154+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$154+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$154+3>>0];$155 = +HEAPF32[tempDoublePtr>>2];
 $156 = (~~(($155)));
 $157 = (+($156|0));
 $158 = $val;
 $159 = ((($158)) + 4|0);
 HEAP8[tempDoublePtr>>0]=HEAP8[$159>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$159+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$159+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$159+3>>0];$160 = +HEAPF32[tempDoublePtr>>2];
 $161 = $157 == $160;
 if (!($161)) {
  $169 = $result;
  STACKTOP = sp;return ($169|0);
 }
 $162 = $val;
 HEAP8[$162>>0]=2&255;HEAP8[$162+1>>0]=(2>>8)&255;HEAP8[$162+2>>0]=(2>>16)&255;HEAP8[$162+3>>0]=2>>24;
 $163 = $val;
 $164 = ((($163)) + 4|0);
 HEAP8[tempDoublePtr>>0]=HEAP8[$164>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$164+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$164+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$164+3>>0];$165 = +HEAPF32[tempDoublePtr>>2];
 $166 = (~~(($165)));
 $167 = $val;
 $168 = ((($167)) + 4|0);
 HEAP8[$168>>0]=$166&255;HEAP8[$168+1>>0]=($166>>8)&255;HEAP8[$168+2>>0]=($166>>16)&255;HEAP8[$168+3>>0]=$166>>24;
 $169 = $result;
 STACKTOP = sp;return ($169|0);
}
function __core_is($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $fst = 0, $is_a = 0, $opnd1 = 0, $opnd2 = 0, $or$cond = 0, $or$cond3 = 0, $or$cond5 = 0, $result = 0, $ret = 0, $retval = 0, $scd = 0, $tpptr = 0, $val = 0, $vfst = 0, $vscd = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $is_a = sp + 64|0;
 $vfst = sp + 56|0;
 $vscd = sp + 48|0;
 $ret = sp + 40|0;
 $0 = $s;
 $1 = $l;
 $result = 0;
 $fst = 0;
 $scd = 0;
 $val = 0;
 HEAP8[$is_a>>0] = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),15511,(4874|0));
  // unreachable;
 }
 $6 = $1;
 $7 = HEAP32[$6>>2]|0;
 $tpptr = $7;
 $8 = $tpptr;
 $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
 $opnd1 = $9;
 $10 = $tpptr;
 $11 = ((($10)) + 4|0);
 $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
 $opnd2 = $12;
 $13 = $tpptr;
 $14 = ((($13)) + 8|0);
 $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
 $retval = $15;
 $16 = $opnd1;
 $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
 $18 = ($17|0)==(9);
 if ($18) {
  $19 = $opnd1;
  $20 = ((($19)) + 4|0);
  $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
  $22 = ((($21)) + 4|0);
  $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
  $opnd1 = $23;
 }
 $24 = $opnd2;
 $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
 $26 = ($25|0)==(9);
 if ($26) {
  $27 = $opnd2;
  $28 = ((($27)) + 4|0);
  $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
  $30 = ((($29)) + 4|0);
  $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8)|(HEAPU8[$30+2>>0]<<16)|(HEAPU8[$30+3>>0]<<24);
  $opnd2 = $31;
 }
 $32 = ((($vfst)) + 4|0);
 ;HEAP8[$32>>0]=0|0;HEAP8[$32+1>>0]=0|0;HEAP8[$32+2>>0]=0|0;HEAP8[$32+3>>0]=0|0;
 HEAP8[$vfst>>0]=0&255;HEAP8[$vfst+1>>0]=(0>>8)&255;HEAP8[$vfst+2>>0]=(0>>16)&255;HEAP8[$vfst+3>>0]=0>>24;
 $33 = ((($vscd)) + 4|0);
 ;HEAP8[$33>>0]=0|0;HEAP8[$33+1>>0]=0|0;HEAP8[$33+2>>0]=0|0;HEAP8[$33+3>>0]=0|0;
 HEAP8[$vscd>>0]=0&255;HEAP8[$vscd+1>>0]=(0>>8)&255;HEAP8[$vscd+2>>0]=(0>>16)&255;HEAP8[$vscd+3>>0]=0>>24;
 $34 = ((($ret)) + 4|0);
 ;HEAP8[$34>>0]=0|0;HEAP8[$34+1>>0]=0|0;HEAP8[$34+2>>0]=0|0;HEAP8[$34+3>>0]=0|0;
 HEAP8[$ret>>0]=0&255;HEAP8[$ret+1>>0]=(0>>8)&255;HEAP8[$ret+2>>0]=(0>>16)&255;HEAP8[$ret+3>>0]=0>>24;
 $35 = $opnd1;
 $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
 $37 = ($36|0)==(7);
 if ($37) {
  $38 = $opnd1;
  $39 = ((($38)) + 4|0);
  $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8)|(HEAPU8[$39+2>>0]<<16)|(HEAPU8[$39+3>>0]<<24);
  $41 = ((($40)) + 45|0);
  $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
  $43 = ($42|0)!=(0|0);
  if ($43) {
   $44 = $opnd1;
   $45 = ((($44)) + 4|0);
   $46 = HEAPU8[$45>>0]|(HEAPU8[$45+1>>0]<<8)|(HEAPU8[$45+2>>0]<<16)|(HEAPU8[$45+3>>0]<<24);
   $47 = ((($46)) + 45|0);
   $48 = HEAPU8[$47>>0]|(HEAPU8[$47+1>>0]<<8)|(HEAPU8[$47+2>>0]<<16)|(HEAPU8[$47+3>>0]<<24);
   $49 = HEAPU8[$48>>0]|(HEAPU8[$48+1>>0]<<8)|(HEAPU8[$48+2>>0]<<16)|(HEAPU8[$48+3>>0]<<24);
   $50 = ($49|0)!=(0|0);
   if ($50) {
    $51 = $opnd1;
    (__internal_object_to_public_value($51,$vfst)|0);
    $52 = $opnd2;
    (__internal_object_to_public_value($52,$vscd)|0);
    $53 = $opnd1;
    $54 = ((($53)) + 4|0);
    $55 = HEAPU8[$54>>0]|(HEAPU8[$54+1>>0]<<8)|(HEAPU8[$54+2>>0]<<16)|(HEAPU8[$54+3>>0]<<24);
    $56 = ((($55)) + 45|0);
    $57 = HEAPU8[$56>>0]|(HEAPU8[$56+1>>0]<<8)|(HEAPU8[$56+2>>0]<<16)|(HEAPU8[$56+3>>0]<<24);
    $58 = HEAPU8[$57>>0]|(HEAPU8[$57+1>>0]<<8)|(HEAPU8[$57+2>>0]<<16)|(HEAPU8[$57+3>>0]<<24);
    $59 = $0;
    $60 = $1;
    $61 = (FUNCTION_TABLE_iiiiii[$58 & 0]($59,$60,$vfst,$vscd,$ret)|0);
    $result = $61;
    $62 = $retval;
    (__public_value_to_internal_object($ret,$62)|0);
    $240 = $result;
    STACKTOP = sp;return ($240|0);
   }
  }
 }
 $63 = $opnd2;
 $64 = HEAPU8[$63>>0]|(HEAPU8[$63+1>>0]<<8)|(HEAPU8[$63+2>>0]<<16)|(HEAPU8[$63+3>>0]<<24);
 $65 = ($64|0)==(7);
 if ($65) {
  $66 = $opnd2;
  $67 = ((($66)) + 4|0);
  $68 = HEAPU8[$67>>0]|(HEAPU8[$67+1>>0]<<8)|(HEAPU8[$67+2>>0]<<16)|(HEAPU8[$67+3>>0]<<24);
  $69 = ((($68)) + 45|0);
  $70 = HEAPU8[$69>>0]|(HEAPU8[$69+1>>0]<<8)|(HEAPU8[$69+2>>0]<<16)|(HEAPU8[$69+3>>0]<<24);
  $71 = ($70|0)!=(0|0);
  if ($71) {
   $72 = $opnd2;
   $73 = ((($72)) + 4|0);
   $74 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
   $75 = ((($74)) + 45|0);
   $76 = HEAPU8[$75>>0]|(HEAPU8[$75+1>>0]<<8)|(HEAPU8[$75+2>>0]<<16)|(HEAPU8[$75+3>>0]<<24);
   $77 = HEAPU8[$76>>0]|(HEAPU8[$76+1>>0]<<8)|(HEAPU8[$76+2>>0]<<16)|(HEAPU8[$76+3>>0]<<24);
   $78 = ($77|0)!=(0|0);
   if ($78) {
    $79 = $opnd1;
    (__internal_object_to_public_value($79,$vfst)|0);
    $80 = $opnd2;
    (__internal_object_to_public_value($80,$vscd)|0);
    $81 = $opnd2;
    $82 = ((($81)) + 4|0);
    $83 = HEAPU8[$82>>0]|(HEAPU8[$82+1>>0]<<8)|(HEAPU8[$82+2>>0]<<16)|(HEAPU8[$82+3>>0]<<24);
    $84 = ((($83)) + 45|0);
    $85 = HEAPU8[$84>>0]|(HEAPU8[$84+1>>0]<<8)|(HEAPU8[$84+2>>0]<<16)|(HEAPU8[$84+3>>0]<<24);
    $86 = HEAPU8[$85>>0]|(HEAPU8[$85+1>>0]<<8)|(HEAPU8[$85+2>>0]<<16)|(HEAPU8[$85+3>>0]<<24);
    $87 = $0;
    $88 = $1;
    $89 = (FUNCTION_TABLE_iiiiii[$86 & 0]($87,$88,$vfst,$vscd,$ret)|0);
    $result = $89;
    $90 = $retval;
    (__public_value_to_internal_object($ret,$90)|0);
    $240 = $result;
    STACKTOP = sp;return ($240|0);
   }
  }
 }
 $91 = $1;
 $92 = HEAP32[$91>>2]|0;
 $93 = HEAPU8[$92>>0]|(HEAPU8[$92+1>>0]<<8)|(HEAPU8[$92+2>>0]<<16)|(HEAPU8[$92+3>>0]<<24);
 $fst = $93;
 $94 = $1;
 $95 = HEAP32[$94>>2]|0;
 $96 = ((($95)) + 4|0);
 $97 = HEAPU8[$96>>0]|(HEAPU8[$96+1>>0]<<8)|(HEAPU8[$96+2>>0]<<16)|(HEAPU8[$96+3>>0]<<24);
 $scd = $97;
 $98 = $1;
 $99 = HEAP32[$98>>2]|0;
 $100 = ((($99)) + 8|0);
 $101 = HEAPU8[$100>>0]|(HEAPU8[$100+1>>0]<<8)|(HEAPU8[$100+2>>0]<<16)|(HEAPU8[$100+3>>0]<<24);
 $val = $101;
 $102 = $fst;
 $103 = ($102|0)!=(0|0);
 if ($103) {
  $104 = $fst;
  $105 = HEAPU8[$104>>0]|(HEAPU8[$104+1>>0]<<8)|(HEAPU8[$104+2>>0]<<16)|(HEAPU8[$104+3>>0]<<24);
  $106 = ($105|0)==(9);
  if ($106) {
   $107 = $fst;
   $108 = ((($107)) + 4|0);
   $109 = HEAPU8[$108>>0]|(HEAPU8[$108+1>>0]<<8)|(HEAPU8[$108+2>>0]<<16)|(HEAPU8[$108+3>>0]<<24);
   $110 = ((($109)) + 4|0);
   $111 = HEAPU8[$110>>0]|(HEAPU8[$110+1>>0]<<8)|(HEAPU8[$110+2>>0]<<16)|(HEAPU8[$110+3>>0]<<24);
   $fst = $111;
  }
 }
 $112 = $scd;
 $113 = ($112|0)!=(0|0);
 if ($113) {
  $114 = $scd;
  $115 = HEAPU8[$114>>0]|(HEAPU8[$114+1>>0]<<8)|(HEAPU8[$114+2>>0]<<16)|(HEAPU8[$114+3>>0]<<24);
  $116 = ($115|0)==(9);
  if ($116) {
   $117 = $scd;
   $118 = ((($117)) + 4|0);
   $119 = HEAPU8[$118>>0]|(HEAPU8[$118+1>>0]<<8)|(HEAPU8[$118+2>>0]<<16)|(HEAPU8[$118+3>>0]<<24);
   $120 = ((($119)) + 4|0);
   $121 = HEAPU8[$120>>0]|(HEAPU8[$120+1>>0]<<8)|(HEAPU8[$120+2>>0]<<16)|(HEAPU8[$120+3>>0]<<24);
   $scd = $121;
  }
 }
 $122 = $fst;
 $123 = ($122|0)!=(0|0);
 $124 = $scd;
 $125 = ($124|0)!=(0|0);
 $or$cond3 = $123 & $125;
 if (!($or$cond3)) {
  $126 = $1;
  $127 = ($126|0)!=(0|0);
  if ($127) {
   $128 = $1;
   $129 = HEAP32[$128>>2]|0;
   $130 = ($129|0)!=(0|0);
   if ($130) {
    $131 = $1;
    $132 = HEAP32[$131>>2]|0;
    $133 = HEAPU8[$132>>0]|(HEAPU8[$132+1>>0]<<8)|(HEAPU8[$132+2>>0]<<16)|(HEAPU8[$132+3>>0]<<24);
    $134 = ($133|0)!=(0|0);
    if ($134) {
     $135 = $0;
     $136 = $0;
     $137 = ((($136)) + 67|0);
     $138 = HEAPU8[$137>>0]|(HEAPU8[$137+1>>0]<<8)|(HEAPU8[$137+2>>0]<<16)|(HEAPU8[$137+3>>0]<<24);
     $139 = (__set_current_error($135,11,$138)|0);
     $140 = ($139<<24>>24)!=(0);
     if (!($140)) {
      $240 = $result;
      STACKTOP = sp;return ($240|0);
     }
     $141 = $0;
     $142 = $1;
     $143 = HEAP32[$142>>2]|0;
     $144 = HEAPU8[$143>>0]|(HEAPU8[$143+1>>0]<<8)|(HEAPU8[$143+2>>0]<<16)|(HEAPU8[$143+3>>0]<<24);
     $145 = ((($144)) + 9|0);
     $146 = HEAPU8[$145>>0]|(HEAPU8[$145+1>>0]<<8)|(HEAPU8[$145+2>>0]<<16)|(HEAPU8[$145+3>>0]<<24);
     $147 = $1;
     $148 = HEAP32[$147>>2]|0;
     $149 = HEAPU8[$148>>0]|(HEAPU8[$148+1>>0]<<8)|(HEAPU8[$148+2>>0]<<16)|(HEAPU8[$148+3>>0]<<24);
     $150 = ((($149)) + 13|0);
     $151 = HEAPU8[$150>>0]|(HEAPU8[$150+1>>0]<<8);
     $152 = $1;
     $153 = HEAP32[$152>>2]|0;
     $154 = HEAPU8[$153>>0]|(HEAPU8[$153+1>>0]<<8)|(HEAPU8[$153+2>>0]<<16)|(HEAPU8[$153+3>>0]<<24);
     $155 = ((($154)) + 15|0);
     $156 = HEAPU8[$155>>0]|(HEAPU8[$155+1>>0]<<8);
     __set_error_pos($141,$146,$151,$156);
     $result = 3;
     $240 = $result;
     STACKTOP = sp;return ($240|0);
    }
   }
  }
  $157 = $0;
  $158 = $0;
  $159 = ((($158)) + 67|0);
  $160 = HEAPU8[$159>>0]|(HEAPU8[$159+1>>0]<<8)|(HEAPU8[$159+2>>0]<<16)|(HEAPU8[$159+3>>0]<<24);
  $161 = (__set_current_error($157,11,$160)|0);
  $162 = ($161<<24>>24)!=(0);
  if (!($162)) {
   $240 = $result;
   STACKTOP = sp;return ($240|0);
  }
  $163 = $0;
  __set_error_pos($163,0,0,0);
  $result = 3;
  $240 = $result;
  STACKTOP = sp;return ($240|0);
 }
 $164 = $scd;
 $165 = HEAPU8[$164>>0]|(HEAPU8[$164+1>>0]<<8)|(HEAPU8[$164+2>>0]<<16)|(HEAPU8[$164+3>>0]<<24);
 $166 = ($165|0)==(5);
 if ($166) {
  $167 = $val;
  HEAP8[$167>>0]=2&255;HEAP8[$167+1>>0]=(2>>8)&255;HEAP8[$167+2>>0]=(2>>16)&255;HEAP8[$167+3>>0]=2>>24;
  $168 = $fst;
  $169 = HEAPU8[$168>>0]|(HEAPU8[$168+1>>0]<<8)|(HEAPU8[$168+2>>0]<<16)|(HEAPU8[$168+3>>0]<<24);
  $170 = (__internal_type_to_public_type($169)|0);
  $171 = $scd;
  $172 = ((($171)) + 4|0);
  $173 = HEAPU8[$172>>0]|(HEAPU8[$172+1>>0]<<8)|(HEAPU8[$172+2>>0]<<16)|(HEAPU8[$172+3>>0]<<24);
  $174 = $170 & $173;
  $175 = ($174|0)!=(0);
  $176 = $175 ^ 1;
  $177 = $176 ^ 1;
  $178 = $177&1;
  $179 = $val;
  $180 = ((($179)) + 4|0);
  HEAP8[$180>>0]=$178&255;HEAP8[$180+1>>0]=($178>>8)&255;HEAP8[$180+2>>0]=($178>>16)&255;HEAP8[$180+3>>0]=$178>>24;
  $240 = $result;
  STACKTOP = sp;return ($240|0);
 }
 $181 = $fst;
 $182 = ($181|0)!=(0|0);
 if ($182) {
  $183 = $fst;
  $184 = HEAPU8[$183>>0]|(HEAPU8[$183+1>>0]<<8)|(HEAPU8[$183+2>>0]<<16)|(HEAPU8[$183+3>>0]<<24);
  $185 = ($184|0)==(16);
  $186 = $scd;
  $187 = ($186|0)!=(0|0);
  $or$cond5 = $185 & $187;
  if ($or$cond5) {
   $188 = $scd;
   $189 = HEAPU8[$188>>0]|(HEAPU8[$188+1>>0]<<8)|(HEAPU8[$188+2>>0]<<16)|(HEAPU8[$188+3>>0]<<24);
   $190 = ($189|0)==(16);
   if ($190) {
    $229 = $fst;
    $230 = ((($229)) + 4|0);
    $231 = HEAPU8[$230>>0]|(HEAPU8[$230+1>>0]<<8)|(HEAPU8[$230+2>>0]<<16)|(HEAPU8[$230+3>>0]<<24);
    $232 = $scd;
    $233 = ((($232)) + 4|0);
    $234 = HEAPU8[$233>>0]|(HEAPU8[$233+1>>0]<<8)|(HEAPU8[$233+2>>0]<<16)|(HEAPU8[$233+3>>0]<<24);
    (__traverse_class($231,0,157,-1,1,$234,$is_a)|0);
    $235 = $val;
    HEAP8[$235>>0]=2&255;HEAP8[$235+1>>0]=(2>>8)&255;HEAP8[$235+2>>0]=(2>>16)&255;HEAP8[$235+3>>0]=2>>24;
    $236 = HEAP8[$is_a>>0]|0;
    $237 = $236&255;
    $238 = $val;
    $239 = ((($238)) + 4|0);
    HEAP8[$239>>0]=$237&255;HEAP8[$239+1>>0]=($237>>8)&255;HEAP8[$239+2>>0]=($237>>16)&255;HEAP8[$239+3>>0]=$237>>24;
    $240 = $result;
    STACKTOP = sp;return ($240|0);
   }
  }
 }
 $191 = $1;
 $192 = ($191|0)!=(0|0);
 if ($192) {
  $193 = $1;
  $194 = HEAP32[$193>>2]|0;
  $195 = ($194|0)!=(0|0);
  if ($195) {
   $196 = $1;
   $197 = HEAP32[$196>>2]|0;
   $198 = HEAPU8[$197>>0]|(HEAPU8[$197+1>>0]<<8)|(HEAPU8[$197+2>>0]<<16)|(HEAPU8[$197+3>>0]<<24);
   $199 = ($198|0)!=(0|0);
   if ($199) {
    $200 = $0;
    $201 = $0;
    $202 = ((($201)) + 67|0);
    $203 = HEAPU8[$202>>0]|(HEAPU8[$202+1>>0]<<8)|(HEAPU8[$202+2>>0]<<16)|(HEAPU8[$202+3>>0]<<24);
    $204 = (__set_current_error($200,57,$203)|0);
    $205 = ($204<<24>>24)!=(0);
    if (!($205)) {
     $240 = $result;
     STACKTOP = sp;return ($240|0);
    }
    $206 = $0;
    $207 = $1;
    $208 = HEAP32[$207>>2]|0;
    $209 = HEAPU8[$208>>0]|(HEAPU8[$208+1>>0]<<8)|(HEAPU8[$208+2>>0]<<16)|(HEAPU8[$208+3>>0]<<24);
    $210 = ((($209)) + 9|0);
    $211 = HEAPU8[$210>>0]|(HEAPU8[$210+1>>0]<<8)|(HEAPU8[$210+2>>0]<<16)|(HEAPU8[$210+3>>0]<<24);
    $212 = $1;
    $213 = HEAP32[$212>>2]|0;
    $214 = HEAPU8[$213>>0]|(HEAPU8[$213+1>>0]<<8)|(HEAPU8[$213+2>>0]<<16)|(HEAPU8[$213+3>>0]<<24);
    $215 = ((($214)) + 13|0);
    $216 = HEAPU8[$215>>0]|(HEAPU8[$215+1>>0]<<8);
    $217 = $1;
    $218 = HEAP32[$217>>2]|0;
    $219 = HEAPU8[$218>>0]|(HEAPU8[$218+1>>0]<<8)|(HEAPU8[$218+2>>0]<<16)|(HEAPU8[$218+3>>0]<<24);
    $220 = ((($219)) + 15|0);
    $221 = HEAPU8[$220>>0]|(HEAPU8[$220+1>>0]<<8);
    __set_error_pos($206,$211,$216,$221);
    $result = 3;
    $240 = $result;
    STACKTOP = sp;return ($240|0);
   }
  }
 }
 $222 = $0;
 $223 = $0;
 $224 = ((($223)) + 67|0);
 $225 = HEAPU8[$224>>0]|(HEAPU8[$224+1>>0]<<8)|(HEAPU8[$224+2>>0]<<16)|(HEAPU8[$224+3>>0]<<24);
 $226 = (__set_current_error($222,57,$225)|0);
 $227 = ($226<<24>>24)!=(0);
 if (!($227)) {
  $240 = $result;
  STACKTOP = sp;return ($240|0);
 }
 $228 = $0;
 __set_error_pos($228,0,0,0);
 $result = 3;
 $240 = $result;
 STACKTOP = sp;return ($240|0);
}
function __is_a_class($instance,$m,$ret) {
 $instance = $instance|0;
 $m = $m|0;
 $ret = $ret|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $is_a = 0, $meta = 0, $or$cond = 0, $or$cond3 = 0, $or$cond5 = 0, $r = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $instance;
 $1 = $m;
 $2 = $ret;
 $3 = $1;
 $meta = $3;
 $4 = $2;
 $r = $4;
 $is_a = 0;
 $5 = $0;
 $6 = ($5|0)!=(0|0);
 $7 = $meta;
 $8 = ($7|0)!=(0|0);
 $or$cond = $6 & $8;
 if ($or$cond) {
 }
 $9 = $0;
 $10 = ($9|0)!=(0|0);
 $11 = $meta;
 $12 = ($11|0)!=(0|0);
 $or$cond3 = $10 & $12;
 $13 = $2;
 $14 = ($13|0)!=(0|0);
 $or$cond5 = $or$cond3 & $14;
 if (!($or$cond5)) {
  ___assert_fail((4901|0),(4322|0),8579,(4925|0));
  // unreachable;
 }
 while(1) {
  $15 = $0;
  $16 = $meta;
  $17 = ($15|0)==($16|0);
  if ($17) {
   break;
  }
  $18 = $0;
  $19 = $0;
  $20 = ((($19)) + 21|0);
  $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
  $22 = ($18|0)==($21|0);
  if ($22) {
   label = 10;
   break;
  }
  $23 = $0;
  $24 = ((($23)) + 21|0);
  $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
  $0 = $25;
 }
 if ((label|0) == 10) {
  $26 = $is_a;
  $27 = $r;
  HEAP8[$27>>0] = $26;
  $28 = $r;
  $29 = HEAP8[$28>>0]|0;
  $30 = ($29<<24>>24)!=(0);
  $31 = $30 ^ 1;
  $32 = $31&1;
  $33 = $32&255;
  STACKTOP = sp;return ($33|0);
 }
 $is_a = 1;
 $26 = $is_a;
 $27 = $r;
 HEAP8[$27>>0] = $26;
 $28 = $r;
 $29 = HEAP8[$28>>0]|0;
 $30 = ($29<<24>>24)!=(0);
 $31 = $30 ^ 1;
 $32 = $31&1;
 $33 = $32&255;
 STACKTOP = sp;return ($33|0);
}
function __traverse_class($c,$scope_walker,$meta_walker,$meta_depth,$meta_walk_on_self,$extra_data,$ret) {
 $c = $c|0;
 $scope_walker = $scope_walker|0;
 $meta_walker = $meta_walker|0;
 $meta_depth = $meta_depth|0;
 $meta_walk_on_self = $meta_walk_on_self|0;
 $extra_data = $extra_data|0;
 $ret = $ret|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__bucket = 0, $__lst = 0, $__opresult = 0, $__tmp = 0, $__ul = 0, $meta = 0, $node = 0, $or$cond = 0, $or$cond3 = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $c;
 $1 = $scope_walker;
 $2 = $meta_walker;
 $3 = $meta_depth;
 $4 = $meta_walk_on_self;
 $5 = $extra_data;
 $6 = $ret;
 $result = 1;
 $node = 0;
 $meta = 0;
 $7 = $0;
 $8 = ($7|0)!=(0|0);
 if (!($8)) {
  ___assert_fail((4883|0),(4322|0),8382,(4885|0));
  // unreachable;
 }
 $9 = $1;
 $10 = ($9|0)!=(0|0);
 L4: do {
  if ($10) {
   $__bucket = 0;
   $__ul = 0;
   $11 = $0;
   $12 = ((($11)) + 29|0);
   $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
   $14 = ((($13)) + 8|0);
   $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
   $16 = ((($15)) + 20|0);
   $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
   $18 = ($17|0)!=(0|0);
   if ($18) {
    $__ul = 0;
    L7: while(1) {
     $19 = $__ul;
     $20 = $0;
     $21 = ((($20)) + 29|0);
     $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
     $23 = ((($22)) + 8|0);
     $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
     $25 = ((($24)) + 12|0);
     $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
     $27 = ($19>>>0)<($26>>>0);
     if (!($27)) {
      break L4;
     }
     $28 = $__ul;
     $29 = $0;
     $30 = ((($29)) + 29|0);
     $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8)|(HEAPU8[$30+2>>0]<<16)|(HEAPU8[$30+3>>0]<<24);
     $32 = ((($31)) + 8|0);
     $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
     $34 = ((($33)) + 20|0);
     $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
     $36 = (($35) + ($28<<2)|0);
     $37 = HEAP32[$36>>2]|0;
     $__bucket = $37;
     $38 = $__bucket;
     $39 = ($38|0)!=(0|0);
     L10: do {
      if ($39) {
       $40 = $__bucket;
       $__lst = $40;
       $__opresult = 0;
       $__tmp = 0;
       $41 = $__bucket;
       $42 = ($41|0)!=(0|0);
       if (!($42)) {
        label = 9;
        break L7;
       }
       $43 = $__lst;
       $44 = ((($43)) + 8|0);
       $45 = HEAPU8[$44>>0]|(HEAPU8[$44+1>>0]<<8)|(HEAPU8[$44+2>>0]<<16)|(HEAPU8[$44+3>>0]<<24);
       $__lst = $45;
       while(1) {
        $46 = $__lst;
        $47 = ($46|0)!=(0|0);
        if (!($47)) {
         break L10;
        }
        $48 = $1;
        $49 = ($48|0)!=(0|0);
        if ($49) {
         $50 = $1;
         $51 = $__lst;
         $52 = HEAPU8[$51>>0]|(HEAPU8[$51+1>>0]<<8)|(HEAPU8[$51+2>>0]<<16)|(HEAPU8[$51+3>>0]<<24);
         $53 = $__lst;
         $54 = ((($53)) + 12|0);
         $55 = HEAPU8[$54>>0]|(HEAPU8[$54+1>>0]<<8)|(HEAPU8[$54+2>>0]<<16)|(HEAPU8[$54+3>>0]<<24);
         $56 = $5;
         (FUNCTION_TABLE_iiii[$50 & 255]($52,$55,$56)|0);
        }
        $57 = $__lst;
        $58 = HEAPU8[$57>>0]|(HEAPU8[$57+1>>0]<<8)|(HEAPU8[$57+2>>0]<<16)|(HEAPU8[$57+3>>0]<<24);
        $59 = $__lst;
        $60 = ((($59)) + 12|0);
        $61 = HEAPU8[$60>>0]|(HEAPU8[$60+1>>0]<<8)|(HEAPU8[$60+2>>0]<<16)|(HEAPU8[$60+3>>0]<<24);
        $62 = (__do_nothing_on_object($58,$61)|0);
        $__opresult = $62;
        $63 = $__lst;
        $__tmp = $63;
        $64 = $__lst;
        $65 = ((($64)) + 8|0);
        $66 = HEAPU8[$65>>0]|(HEAPU8[$65+1>>0]<<8)|(HEAPU8[$65+2>>0]<<16)|(HEAPU8[$65+3>>0]<<24);
        $__lst = $66;
        $67 = $__opresult;
        $68 = (-1)==($67|0);
        if (!($68)) {
         continue;
        }
        $69 = $__lst;
        $70 = $__tmp;
        $71 = ((($70)) + 4|0);
        $72 = HEAPU8[$71>>0]|(HEAPU8[$71+1>>0]<<8)|(HEAPU8[$71+2>>0]<<16)|(HEAPU8[$71+3>>0]<<24);
        $73 = ((($72)) + 8|0);
        HEAP8[$73>>0]=$69&255;HEAP8[$73+1>>0]=($69>>8)&255;HEAP8[$73+2>>0]=($69>>16)&255;HEAP8[$73+3>>0]=$69>>24;
        $74 = $__lst;
        $75 = ($74|0)!=(0|0);
        if ($75) {
         $76 = $__tmp;
         $77 = ((($76)) + 4|0);
         $78 = HEAPU8[$77>>0]|(HEAPU8[$77+1>>0]<<8)|(HEAPU8[$77+2>>0]<<16)|(HEAPU8[$77+3>>0]<<24);
         $79 = $__lst;
         $80 = ((($79)) + 4|0);
         HEAP8[$80>>0]=$78&255;HEAP8[$80+1>>0]=($78>>8)&255;HEAP8[$80+2>>0]=($78>>16)&255;HEAP8[$80+3>>0]=$78>>24;
        }
        $81 = $__tmp;
        $82 = ($81|0)!=(0|0);
        if (!($82)) {
         label = 19;
         break L7;
        }
        $83 = $__tmp;
        _mb_free($83);
        $__tmp = 0;
        $84 = $__bucket;
        $85 = HEAPU8[$84>>0]|(HEAPU8[$84+1>>0]<<8)|(HEAPU8[$84+2>>0]<<16)|(HEAPU8[$84+3>>0]<<24);
        $86 = ((($85)) + -1|0);
        $87 = $__bucket;
        HEAP8[$87>>0]=$86&255;HEAP8[$87+1>>0]=($86>>8)&255;HEAP8[$87+2>>0]=($86>>16)&255;HEAP8[$87+3>>0]=$86>>24;
       }
      }
     } while(0);
     $88 = $__ul;
     $89 = (($88) + 1)|0;
     $__ul = $89;
    }
    if ((label|0) == 9) {
     ___assert_fail((4526|0),(4322|0),8385,(4885|0));
     // unreachable;
    }
    else if ((label|0) == 19) {
     ___assert_fail((4369|0),(4322|0),8385,(4885|0));
     // unreachable;
    }
   }
  }
 } while(0);
 $90 = $4;
 $91 = ($90<<24>>24)!=(0);
 $92 = $2;
 $93 = ($92|0)!=(0|0);
 $or$cond3 = $91 & $93;
 if ($or$cond3) {
  $94 = $2;
  $95 = $0;
  $96 = $5;
  $97 = $6;
  $98 = (FUNCTION_TABLE_iiii[$94 & 255]($95,$96,$97)|0);
  $result = $98;
  $99 = $result;
  $100 = ($99<<24>>24)!=(0);
  if (!($100)) {
   $143 = $result;
   STACKTOP = sp;return ($143|0);
  }
 }
 $101 = $0;
 $102 = ((($101)) + 25|0);
 $103 = HEAPU8[$102>>0]|(HEAPU8[$102+1>>0]<<8)|(HEAPU8[$102+2>>0]<<16)|(HEAPU8[$102+3>>0]<<24);
 $104 = ($103|0)!=(0|0);
 if ($104) {
  $105 = $0;
  $106 = ((($105)) + 25|0);
  $107 = HEAPU8[$106>>0]|(HEAPU8[$106+1>>0]<<8)|(HEAPU8[$106+2>>0]<<16)|(HEAPU8[$106+3>>0]<<24);
  $108 = ((($107)) + 8|0);
  $109 = HEAPU8[$108>>0]|(HEAPU8[$108+1>>0]<<8)|(HEAPU8[$108+2>>0]<<16)|(HEAPU8[$108+3>>0]<<24);
  $110 = $109;
 } else {
  $110 = 0;
 }
 $node = $110;
 while(1) {
  $111 = $node;
  $112 = ($111|0)!=(0|0);
  if (!($112)) {
   label = 31;
   break;
  }
  $113 = $node;
  $114 = HEAPU8[$113>>0]|(HEAPU8[$113+1>>0]<<8)|(HEAPU8[$113+2>>0]<<16)|(HEAPU8[$113+3>>0]<<24);
  $meta = $114;
  $115 = $2;
  $116 = ($115|0)!=(0|0);
  $117 = $3;
  $118 = ($117|0)!=(0);
  $or$cond = $116 & $118;
  if ($or$cond) {
   $119 = $2;
   $120 = $meta;
   $121 = $5;
   $122 = $6;
   $123 = (FUNCTION_TABLE_iiii[$119 & 255]($120,$121,$122)|0);
   $result = $123;
   $124 = $result;
   $125 = ($124<<24>>24)!=(0);
   if (!($125)) {
    label = 31;
    break;
   }
  }
  $126 = $meta;
  $127 = $1;
  $128 = $2;
  $129 = $3;
  $130 = ($129|0)!=(0);
  $131 = $3;
  $132 = (($131) - 1)|0;
  $133 = $130 ? $132 : 0;
  $134 = $4;
  $135 = $5;
  $136 = $6;
  $137 = (__traverse_class($126,$127,$128,$133,$134,$135,$136)|0);
  $result = $137;
  $138 = $result;
  $139 = ($138<<24>>24)!=(0);
  if (!($139)) {
   label = 31;
   break;
  }
  $140 = $node;
  $141 = ((($140)) + 8|0);
  $142 = HEAPU8[$141>>0]|(HEAPU8[$141+1>>0]<<8)|(HEAPU8[$141+2>>0]<<16)|(HEAPU8[$141+3>>0]<<24);
  $node = $142;
 }
 if ((label|0) == 31) {
  $143 = $result;
  STACKTOP = sp;return ($143|0);
 }
 return (0)|0;
}
function __is_string($obj) {
 $obj = $obj|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $o = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $obj;
 $result = 0;
 $o = 0;
 $1 = $0;
 $2 = ($1|0)!=(0|0);
 if (!($2)) {
  ___assert_fail((4972|0),(4322|0),6189,(5019|0));
  // unreachable;
 }
 $3 = $0;
 $o = $3;
 $4 = $o;
 $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
 $6 = ($5|0)==(4);
 if ($6) {
  $result = 1;
  $19 = $result;
  STACKTOP = sp;return ($19|0);
 }
 $7 = $o;
 $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
 $9 = ($8|0)==(9);
 if (!($9)) {
  $19 = $result;
  STACKTOP = sp;return ($19|0);
 }
 $10 = $o;
 $11 = ((($10)) + 4|0);
 $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
 $13 = ((($12)) + 4|0);
 $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
 $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
 $16 = ($15|0)==(4);
 $17 = $16&1;
 $18 = $17&255;
 $result = $18;
 $19 = $result;
 STACKTOP = sp;return ($19|0);
}
function __extract_string($obj) {
 $obj = $obj|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $obj;
 $result = 0;
 $1 = $0;
 $2 = ($1|0)!=(0|0);
 if (!($2)) {
  ___assert_fail((4972|0),(4322|0),6204,(4995|0));
  // unreachable;
 }
 $3 = $0;
 $4 = HEAPU8[$3>>0]|(HEAPU8[$3+1>>0]<<8)|(HEAPU8[$3+2>>0]<<16)|(HEAPU8[$3+3>>0]<<24);
 $5 = ($4|0)==(4);
 $6 = $0;
 if ($5) {
  $7 = ((($6)) + 4|0);
  $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
  $result = $8;
 } else {
  $9 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
  $10 = ($9|0)==(9);
  if ($10) {
   $11 = $0;
   $12 = ((($11)) + 4|0);
   $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
   $14 = ((($13)) + 4|0);
   $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
   $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
   $17 = ($16|0)==(4);
   if ($17) {
    $18 = $0;
    $19 = ((($18)) + 4|0);
    $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8)|(HEAPU8[$19+2>>0]<<16)|(HEAPU8[$19+3>>0]<<24);
    $21 = ((($20)) + 4|0);
    $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
    $23 = ((($22)) + 4|0);
    $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
    $result = $24;
   }
  }
 }
 $25 = $result;
 $26 = ($25|0)!=(0|0);
 if ($26) {
  $27 = $result;
  STACKTOP = sp;return ($27|0);
 }
 $result = 5011;
 $27 = $result;
 STACKTOP = sp;return ($27|0);
}
function __is_nil($obj) {
 $obj = $obj|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $o = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $obj;
 $result = 0;
 $o = 0;
 $1 = $0;
 $2 = ($1|0)!=(0|0);
 if (!($2)) {
  ___assert_fail((4972|0),(4322|0),6157,(4987|0));
  // unreachable;
 }
 $3 = $0;
 $o = $3;
 $4 = $o;
 $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
 $6 = ($5|0)==(0);
 if ($6) {
  $result = 1;
  $19 = $result;
  STACKTOP = sp;return ($19|0);
 }
 $7 = $o;
 $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
 $9 = ($8|0)==(9);
 if (!($9)) {
  $19 = $result;
  STACKTOP = sp;return ($19|0);
 }
 $10 = $o;
 $11 = ((($10)) + 4|0);
 $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
 $13 = ((($12)) + 4|0);
 $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
 $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
 $16 = ($15|0)==(0);
 $17 = $16&1;
 $18 = $17&255;
 $result = $18;
 $19 = $result;
 STACKTOP = sp;return ($19|0);
}
function __is_number($obj) {
 $obj = $obj|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $o = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $obj;
 $result = 0;
 $o = 0;
 $1 = $0;
 $2 = ($1|0)!=(0|0);
 if (!($2)) {
  ___assert_fail((4972|0),(4322|0),6173,(4976|0));
  // unreachable;
 }
 $3 = $0;
 $o = $3;
 $4 = $o;
 $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
 $6 = ($5|0)==(2);
 if (!($6)) {
  $7 = $o;
  $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
  $9 = ($8|0)==(3);
  if (!($9)) {
   $10 = $o;
   $11 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
   $12 = ($11|0)==(9);
   if (!($12)) {
    $30 = $result;
    STACKTOP = sp;return ($30|0);
   }
   $13 = $o;
   $14 = ((($13)) + 4|0);
   $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
   $16 = ((($15)) + 4|0);
   $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
   $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
   $19 = ($18|0)==(2);
   if ($19) {
    $28 = 1;
   } else {
    $20 = $o;
    $21 = ((($20)) + 4|0);
    $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
    $23 = ((($22)) + 4|0);
    $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
    $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
    $26 = ($25|0)==(3);
    $28 = $26;
   }
   $27 = $28&1;
   $29 = $27&255;
   $result = $29;
   $30 = $result;
   STACKTOP = sp;return ($30|0);
  }
 }
 $result = 1;
 $30 = $result;
 STACKTOP = sp;return ($30|0);
}
function _mb_memcmp($l,$r,$s) {
 $l = $l|0;
 $r = $r|0;
 $s = $s|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $7 = 0, $8 = 0, $9 = 0, $i = 0, $lc = 0, $rc = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $l;
 $2 = $r;
 $3 = $s;
 $4 = $1;
 $lc = $4;
 $5 = $2;
 $rc = $5;
 $i = 0;
 $6 = (_mb_is_little_endian()|0);
 $7 = ($6<<24>>24)!=(0);
 L1: do {
  if ($7) {
   $8 = $3;
   $9 = (($8) - 1)|0;
   $i = $9;
   while(1) {
    $10 = $i;
    $11 = ($10|0)>=(0);
    if (!($11)) {
     break L1;
    }
    $12 = $i;
    $13 = $lc;
    $14 = (($13) + ($12)|0);
    $15 = HEAP8[$14>>0]|0;
    $16 = $15&255;
    $17 = $i;
    $18 = $rc;
    $19 = (($18) + ($17)|0);
    $20 = HEAP8[$19>>0]|0;
    $21 = $20&255;
    $22 = ($16|0)<($21|0);
    if ($22) {
     label = 5;
     break;
    }
    $23 = $i;
    $24 = $lc;
    $25 = (($24) + ($23)|0);
    $26 = HEAP8[$25>>0]|0;
    $27 = $26&255;
    $28 = $i;
    $29 = $rc;
    $30 = (($29) + ($28)|0);
    $31 = HEAP8[$30>>0]|0;
    $32 = $31&255;
    $33 = ($27|0)>($32|0);
    if ($33) {
     label = 7;
     break;
    }
    $34 = $i;
    $35 = (($34) + -1)|0;
    $i = $35;
   }
   if ((label|0) == 5) {
    $0 = -1;
    $63 = $0;
    STACKTOP = sp;return ($63|0);
   }
   else if ((label|0) == 7) {
    $0 = 1;
    $63 = $0;
    STACKTOP = sp;return ($63|0);
   }
  } else {
   $i = 0;
   while(1) {
    $36 = $i;
    $37 = $3;
    $38 = ($36|0)<($37|0);
    if (!($38)) {
     break L1;
    }
    $39 = $i;
    $40 = $lc;
    $41 = (($40) + ($39)|0);
    $42 = HEAP8[$41>>0]|0;
    $43 = $42&255;
    $44 = $i;
    $45 = $rc;
    $46 = (($45) + ($44)|0);
    $47 = HEAP8[$46>>0]|0;
    $48 = $47&255;
    $49 = ($43|0)<($48|0);
    if ($49) {
     label = 12;
     break;
    }
    $50 = $i;
    $51 = $lc;
    $52 = (($51) + ($50)|0);
    $53 = HEAP8[$52>>0]|0;
    $54 = $53&255;
    $55 = $i;
    $56 = $rc;
    $57 = (($56) + ($55)|0);
    $58 = HEAP8[$57>>0]|0;
    $59 = $58&255;
    $60 = ($54|0)>($59|0);
    if ($60) {
     label = 14;
     break;
    }
    $61 = $i;
    $62 = (($61) + 1)|0;
    $i = $62;
   }
   if ((label|0) == 12) {
    $0 = -1;
    $63 = $0;
    STACKTOP = sp;return ($63|0);
   }
   else if ((label|0) == 14) {
    $0 = 1;
    $63 = $0;
    STACKTOP = sp;return ($63|0);
   }
  }
 } while(0);
 $0 = 0;
 $63 = $0;
 STACKTOP = sp;return ($63|0);
}
function _mb_is_little_endian() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $i = sp;
 HEAP32[$i>>2] = 1;
 $0 = HEAP8[$i>>0]|0;
 $1 = $0 << 24 >> 24;
 $2 = ($1|0)==(1);
 $3 = $2&1;
 $4 = $3&255;
 STACKTOP = sp;return ($4|0);
}
function __is_accessor_char($c) {
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $c;
 $1 = $0;
 $2 = $1 << 24 >> 24;
 $3 = ($2|0)==(46);
 $4 = $3&1;
 $5 = $4&255;
 STACKTOP = sp;return ($5|0);
}
function __search_identifier_in_class($s,$instance,$n,$ht,$sp) {
 $s = $s|0;
 $instance = $instance|0;
 $n = $n|0;
 $ht = $ht|0;
 $sp = $sp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $7 = 0, $8 = 0, $9 = 0, $meta = 0, $node = 0, $or$cond = 0, $or$cond3 = 0, $or$cond5 = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $instance;
 $2 = $n;
 $3 = $ht;
 $4 = $sp;
 $result = 0;
 $node = 0;
 $meta = 0;
 $5 = $0;
 $6 = ($5|0)!=(0|0);
 $7 = $1;
 $8 = ($7|0)!=(0|0);
 $or$cond = $6 & $8;
 if ($or$cond) {
 }
 $9 = $0;
 $10 = ($9|0)!=(0|0);
 $11 = $1;
 $12 = ($11|0)!=(0|0);
 $or$cond3 = $10 & $12;
 $13 = $2;
 $14 = ($13|0)!=(0|0);
 $or$cond5 = $or$cond3 & $14;
 if (!($or$cond5)) {
  ___assert_fail((5236|0),(4322|0),9321,(5255|0));
  // unreachable;
 }
 $15 = $1;
 $16 = ((($15)) + 29|0);
 $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
 $18 = ((($17)) + 8|0);
 $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
 $20 = $2;
 $21 = (__ht_find($19,$20)|0);
 $result = $21;
 $22 = $result;
 $23 = ($22|0)!=(0|0);
 if ($23) {
  $24 = $3;
  $25 = ($24|0)!=(0|0);
  if ($25) {
   $26 = $1;
   $27 = ((($26)) + 29|0);
   $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
   $29 = ((($28)) + 8|0);
   $30 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8)|(HEAPU8[$29+2>>0]<<16)|(HEAPU8[$29+3>>0]<<24);
   $31 = $3;
   HEAP32[$31>>2] = $30;
  }
  $32 = $4;
  $33 = ($32|0)!=(0|0);
  if ($33) {
   $34 = $1;
   $35 = ((($34)) + 29|0);
   $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
   $37 = $4;
   HEAP32[$37>>2] = $36;
  }
 }
 $38 = $result;
 $39 = ($38|0)!=(0|0);
 if ($39) {
  $65 = $result;
  STACKTOP = sp;return ($65|0);
 }
 $40 = $1;
 $41 = ((($40)) + 25|0);
 $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
 $43 = ($42|0)!=(0|0);
 if ($43) {
  $44 = $1;
  $45 = ((($44)) + 25|0);
  $46 = HEAPU8[$45>>0]|(HEAPU8[$45+1>>0]<<8)|(HEAPU8[$45+2>>0]<<16)|(HEAPU8[$45+3>>0]<<24);
  $47 = ((($46)) + 8|0);
  $48 = HEAPU8[$47>>0]|(HEAPU8[$47+1>>0]<<8)|(HEAPU8[$47+2>>0]<<16)|(HEAPU8[$47+3>>0]<<24);
  $49 = $48;
 } else {
  $49 = 0;
 }
 $node = $49;
 while(1) {
  $50 = $node;
  $51 = ($50|0)!=(0|0);
  if (!($51)) {
   label = 17;
   break;
  }
  $52 = $node;
  $53 = HEAPU8[$52>>0]|(HEAPU8[$52+1>>0]<<8)|(HEAPU8[$52+2>>0]<<16)|(HEAPU8[$52+3>>0]<<24);
  $meta = $53;
  $54 = $0;
  $55 = $meta;
  $56 = $2;
  $57 = $3;
  $58 = $4;
  $59 = (__search_identifier_in_class($54,$55,$56,$57,$58)|0);
  $result = $59;
  $60 = $result;
  $61 = ($60|0)!=(0|0);
  if ($61) {
   label = 17;
   break;
  }
  $62 = $node;
  $63 = ((($62)) + 8|0);
  $64 = HEAPU8[$63>>0]|(HEAPU8[$63+1>>0]<<8)|(HEAPU8[$63+2>>0]<<16)|(HEAPU8[$63+3>>0]<<24);
  $node = $64;
 }
 if ((label|0) == 17) {
  $65 = $result;
  STACKTOP = sp;return ($65|0);
 }
 return (0)|0;
}
function __has_routine_lex_arg($s,$l,$va,$ca,$ia,$r) {
 $s = $s|0;
 $l = $l|0;
 $va = $va|0;
 $ca = $ca|0;
 $ia = $ia|0;
 $r = $r|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $l;
 $2 = $va;
 $3 = $ca;
 $4 = $ia;
 $5 = $r;
 $6 = $0;
 $7 = $1;
 $8 = (_mb_has_arg($6,$7)|0);
 STACKTOP = sp;return ($8|0);
}
function __pop_routine_lex_arg($s,$l,$va,$ca,$ia,$r,$val) {
 $s = $s|0;
 $l = $l|0;
 $va = $va|0;
 $ca = $ca|0;
 $ia = $ia|0;
 $r = $r|0;
 $val = $val|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $l;
 $2 = $va;
 $3 = $ca;
 $4 = $ia;
 $5 = $r;
 $6 = $val;
 $7 = $0;
 $8 = $1;
 $9 = $6;
 $10 = (_mb_pop_value($7,$8,$9)|0);
 STACKTOP = sp;return ($10|0);
}
function __find_func($s,$n,$mod) {
 $s = $s|0;
 $n = $n|0;
 $mod = $mod|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $mp = 0, $or$cond = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $n;
 $2 = $mod;
 $result = 0;
 $3 = $0;
 $4 = ($3|0)!=(0|0);
 $5 = $1;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if (!($or$cond)) {
  ___assert_fail((5294|0),(4322|0),11982,(5301|0));
  // unreachable;
 }
 $7 = $1;
 $8 = $1;
 $9 = (_strlen($8)|0);
 $10 = (($9) + 1)|0;
 $11 = (_mb_strdup($7,$10)|0);
 $1 = $11;
 $12 = $1;
 (_mb_strupr($12)|0);
 $13 = $0;
 $14 = ((($13)) + 47|0);
 $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
 $16 = $1;
 $17 = (__ht_find($15,$16)|0);
 $result = $17;
 $18 = $result;
 $19 = ($18|0)!=(0|0);
 if (!($19)) {
  $20 = $0;
  $21 = ((($20)) + 51|0);
  $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
  $23 = $1;
  $24 = (__ht_find($22,$23)|0);
  $result = $24;
 }
 $25 = $result;
 $26 = ($25|0)!=(0|0);
 if (!($26)) {
  $27 = $0;
  $28 = ((($27)) + 55|0);
  $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
  $30 = $1;
  $31 = (__ht_find($29,$30)|0);
  $result = $31;
  $32 = $result;
  $33 = ($32|0)!=(0|0);
  if ($33) {
   $34 = $result;
   $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
   $36 = ($35|0)!=(0|0);
   if ($36) {
    $mp = 0;
    $37 = $result;
    $38 = HEAPU8[$37>>0]|(HEAPU8[$37+1>>0]<<8)|(HEAPU8[$37+2>>0]<<16)|(HEAPU8[$37+3>>0]<<24);
    $result = $38;
    $39 = $result;
    $40 = ((($39)) + 8|0);
    $41 = HEAPU8[$40>>0]|(HEAPU8[$40+1>>0]<<8)|(HEAPU8[$40+2>>0]<<16)|(HEAPU8[$40+3>>0]<<24);
    $result = $41;
    while(1) {
     $42 = $result;
     $43 = ($42|0)!=(0|0);
     if (!($43)) {
      break;
     }
     $44 = $result;
     $45 = HEAPU8[$44>>0]|(HEAPU8[$44+1>>0]<<8)|(HEAPU8[$44+2>>0]<<16)|(HEAPU8[$44+3>>0]<<24);
     $mp = $45;
     $46 = $0;
     $47 = ((($46)) + 63|0);
     $48 = HEAPU8[$47>>0]|(HEAPU8[$47+1>>0]<<8)|(HEAPU8[$47+2>>0]<<16)|(HEAPU8[$47+3>>0]<<24);
     $49 = $mp;
     $50 = HEAPU8[$49>>0]|(HEAPU8[$49+1>>0]<<8)|(HEAPU8[$49+2>>0]<<16)|(HEAPU8[$49+3>>0]<<24);
     $51 = (__ls_find($48,$50,127,0)|0);
     $52 = ($51|0)!=(0|0);
     if ($52) {
      break;
     }
     $53 = $result;
     $54 = ((($53)) + 8|0);
     $55 = HEAPU8[$54>>0]|(HEAPU8[$54+1>>0]<<8)|(HEAPU8[$54+2>>0]<<16)|(HEAPU8[$54+3>>0]<<24);
     $result = $55;
    }
    $56 = $2;
    HEAP8[$56>>0] = 1;
   }
  }
 }
 $57 = $1;
 $58 = ($57|0)!=(0|0);
 if ($58) {
  $59 = $1;
  _mb_free($59);
  $1 = 0;
  $60 = $result;
  STACKTOP = sp;return ($60|0);
 } else {
  ___assert_fail((4369|0),(4322|0),12009,(5301|0));
  // unreachable;
 }
 return (0)|0;
}
function _mb_strupr($s) {
 $s = $s|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $t = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $0;
 $t = $1;
 while(1) {
  $2 = $0;
  $3 = HEAP8[$2>>0]|0;
  $4 = ($3<<24>>24)!=(0);
  if (!($4)) {
   break;
  }
  $5 = $0;
  $6 = HEAP8[$5>>0]|0;
  $7 = $6 << 24 >> 24;
  $8 = ($7|0)>=(97);
  if ($8) {
   $9 = $0;
   $10 = HEAP8[$9>>0]|0;
   $11 = $10 << 24 >> 24;
   $12 = ($11|0)<=(122);
   if ($12) {
    $13 = $0;
    $14 = HEAP8[$13>>0]|0;
    $15 = $14 << 24 >> 24;
    $16 = (($15) - 97)|0;
    $17 = (($16) + 65)|0;
    $22 = $17;
   } else {
    label = 6;
   }
  } else {
   label = 6;
  }
  if ((label|0) == 6) {
   label = 0;
   $18 = $0;
   $19 = HEAP8[$18>>0]|0;
   $20 = $19 << 24 >> 24;
   $22 = $20;
  }
  $21 = $22&255;
  $23 = $0;
  HEAP8[$23>>0] = $21;
  $24 = $0;
  $25 = ((($24)) + 1|0);
  $0 = $25;
 }
 $26 = $t;
 STACKTOP = sp;return ($26|0);
}
function __ls_find($list,$data,$cmp,$idx) {
 $list = $list|0;
 $data = $data|0;
 $cmp = $cmp|0;
 $idx = $idx|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond3 = 0, $or$cond5 = 0;
 var $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $list;
 $1 = $data;
 $2 = $cmp;
 $3 = $idx;
 $result = 0;
 $4 = $0;
 $5 = ($4|0)!=(0|0);
 $6 = $1;
 $7 = ($6|0)!=(0|0);
 $or$cond = $5 & $7;
 if ($or$cond) {
 }
 $8 = $0;
 $9 = ($8|0)!=(0|0);
 $10 = $1;
 $11 = ($10|0)!=(0|0);
 $or$cond3 = $9 & $11;
 $12 = $2;
 $13 = ($12|0)!=(0|0);
 $or$cond5 = $or$cond3 & $13;
 if (!($or$cond5)) {
  ___assert_fail((5312|0),(4322|0),2397,(5332|0));
  // unreachable;
 }
 $14 = $3;
 $15 = ($14|0)!=(0|0);
 if ($15) {
  $16 = $3;
  HEAP32[$16>>2] = 0;
 }
 $17 = $0;
 $18 = ((($17)) + 8|0);
 $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
 $0 = $19;
 while(1) {
  $20 = $0;
  $21 = ($20|0)!=(0|0);
  if (!($21)) {
   label = 13;
   break;
  }
  $22 = $2;
  $23 = $0;
  $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
  $25 = $1;
  $26 = (FUNCTION_TABLE_iii[$22 & 255]($24,$25)|0);
  $27 = ($26|0)!=(0);
  $28 = $0;
  if (!($27)) {
   break;
  }
  $29 = ((($28)) + 8|0);
  $30 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8)|(HEAPU8[$29+2>>0]<<16)|(HEAPU8[$29+3>>0]<<24);
  $0 = $30;
  $31 = $3;
  $32 = ($31|0)!=(0|0);
  if (!($32)) {
   continue;
  }
  $33 = $3;
  $34 = HEAP32[$33>>2]|0;
  $35 = (($34) + 1)|0;
  HEAP32[$33>>2] = $35;
 }
 if ((label|0) == 13) {
  $36 = $result;
  STACKTOP = sp;return ($36|0);
 }
 $result = $28;
 $36 = $result;
 STACKTOP = sp;return ($36|0);
}
function __search_array_in_scope_chain($s,$i,$o) {
 $s = $s|0;
 $i = $i|0;
 $o = $o|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $obj = 0, $or$cond = 0, $result = 0, $scp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $i;
 $2 = $o;
 $obj = 0;
 $scp = 0;
 $result = 0;
 $3 = $0;
 $4 = ($3|0)!=(0|0);
 $5 = $1;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if (!($or$cond)) {
  ___assert_fail((5603|0),(4322|0),9608,(5610|0));
  // unreachable;
 }
 $7 = $1;
 $result = $7;
 $8 = $result;
 $9 = ((($8)) + 17|0);
 $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
 $11 = ($10|0)!=(0|0);
 if ($11) {
  $12 = $0;
  $13 = $result;
  $14 = ((($13)) + 17|0);
  $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
  $16 = (__search_identifier_in_scope_chain($12,0,$15,0,0,0)|0);
  $scp = $16;
 }
 $17 = $scp;
 $18 = ($17|0)!=(0|0);
 if (!($18)) {
  $33 = $result;
  STACKTOP = sp;return ($33|0);
 }
 $19 = $scp;
 $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8)|(HEAPU8[$19+2>>0]<<16)|(HEAPU8[$19+3>>0]<<24);
 $obj = $20;
 $21 = $obj;
 $22 = ($21|0)!=(0|0);
 if (!($22)) {
  $33 = $result;
  STACKTOP = sp;return ($33|0);
 }
 $23 = $obj;
 $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
 $25 = ($24|0)==(10);
 if (!($25)) {
  $33 = $result;
  STACKTOP = sp;return ($33|0);
 }
 $26 = $obj;
 $27 = ((($26)) + 4|0);
 $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
 $result = $28;
 $29 = $2;
 $30 = ($29|0)!=(0|0);
 if (!($30)) {
  $33 = $result;
  STACKTOP = sp;return ($33|0);
 }
 $31 = $obj;
 $32 = $2;
 HEAP32[$32>>2] = $31;
 $33 = $result;
 STACKTOP = sp;return ($33|0);
}
function __get_array_index($s,$l,$c,$index,$literally) {
 $s = $s|0;
 $l = $l|0;
 $c = $c|0;
 $index = $index|0;
 $literally = $literally|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0;
 var $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0;
 var $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0;
 var $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0;
 var $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0;
 var $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0;
 var $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0;
 var $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0;
 var $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0;
 var $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;
 var $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $arr = 0, $ast = 0, $dcount = 0, $f = 0, $idx = 0, $len = 0, $or$cond = 0;
 var $or$cond3 = 0, $or$cond5 = 0, $or$cond7 = 0, $result = 0, $subscript = 0, $subscript_ptr = 0, $val = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ast = sp + 24|0;
 $subscript = sp + 56|0;
 $subscript_ptr = sp + 12|0;
 $val = sp + 52|0;
 $0 = $s;
 $1 = $l;
 $2 = $c;
 $3 = $index;
 $4 = $literally;
 $result = 0;
 HEAP32[$ast>>2] = 0;
 $arr = 0;
 $len = 0;
 HEAP32[$subscript_ptr>>2] = 0;
 $dcount = 0;
 $f = 1;
 $idx = 0;
 $5 = $0;
 $6 = ($5|0)!=(0|0);
 $7 = $1;
 $8 = ($7|0)!=(0|0);
 $or$cond = $6 & $8;
 if ($or$cond) {
 }
 $9 = $0;
 $10 = ($9|0)!=(0|0);
 $11 = $1;
 $12 = ($11|0)!=(0|0);
 $or$cond3 = $10 & $12;
 $13 = $3;
 $14 = ($13|0)!=(0|0);
 $or$cond5 = $or$cond3 & $14;
 if (!($or$cond5)) {
  ___assert_fail((5544|0),(4322|0),7268,(5560|0));
  // unreachable;
 }
 HEAP32[$subscript_ptr>>2] = $subscript;
 $15 = HEAP32[$subscript_ptr>>2]|0;
 dest=$15; stop=dest+17|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
 $16 = HEAP32[$subscript_ptr>>2]|0;
 HEAP8[$16>>0]=0&255;HEAP8[$16+1>>0]=(0>>8)&255;HEAP8[$16+2>>0]=(0>>16)&255;HEAP8[$16+3>>0]=0>>24;
 $17 = $4;
 $18 = ($17|0)!=(0|0);
 if ($18) {
  $19 = $4;
  HEAP8[$19>>0] = 0;
 }
 $20 = $1;
 $21 = HEAP32[$20>>2]|0;
 HEAP32[$ast>>2] = $21;
 $22 = $2;
 $23 = ($22|0)==(0|0);
 $24 = HEAP32[$ast>>2]|0;
 $25 = ($24|0)!=(0|0);
 $or$cond7 = $23 & $25;
 if ($or$cond7) {
  $26 = HEAP32[$ast>>2]|0;
  $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
  $28 = (__is_array($27)|0);
  $29 = $28&255;
  $30 = ($29|0)!=(0);
  if ($30) {
   $31 = HEAP32[$ast>>2]|0;
   $32 = HEAPU8[$31>>0]|(HEAPU8[$31+1>>0]<<8)|(HEAPU8[$31+2>>0]<<16)|(HEAPU8[$31+3>>0]<<24);
   $2 = $32;
  }
 }
 $33 = $2;
 $34 = (__is_array($33)|0);
 $35 = ($34<<24>>24)!=(0);
 if (!($35)) {
  $36 = HEAP32[$ast>>2]|0;
  $37 = ($36|0)!=(0|0);
  if ($37) {
   $38 = HEAP32[$ast>>2]|0;
   $39 = HEAPU8[$38>>0]|(HEAPU8[$38+1>>0]<<8)|(HEAPU8[$38+2>>0]<<16)|(HEAPU8[$38+3>>0]<<24);
   $40 = ($39|0)!=(0|0);
   if ($40) {
    $41 = $0;
    $42 = $0;
    $43 = ((($42)) + 67|0);
    $44 = HEAPU8[$43>>0]|(HEAPU8[$43+1>>0]<<8)|(HEAPU8[$43+2>>0]<<16)|(HEAPU8[$43+3>>0]<<24);
    $45 = (__set_current_error($41,24,$44)|0);
    $46 = ($45<<24>>24)!=(0);
    if (!($46)) {
     $430 = HEAP32[$ast>>2]|0;
     $431 = $1;
     HEAP32[$431>>2] = $430;
     $432 = $result;
     STACKTOP = sp;return ($432|0);
    }
    $47 = $0;
    $48 = HEAP32[$ast>>2]|0;
    $49 = HEAPU8[$48>>0]|(HEAPU8[$48+1>>0]<<8)|(HEAPU8[$48+2>>0]<<16)|(HEAPU8[$48+3>>0]<<24);
    $50 = ((($49)) + 9|0);
    $51 = HEAPU8[$50>>0]|(HEAPU8[$50+1>>0]<<8)|(HEAPU8[$50+2>>0]<<16)|(HEAPU8[$50+3>>0]<<24);
    $52 = HEAP32[$ast>>2]|0;
    $53 = HEAPU8[$52>>0]|(HEAPU8[$52+1>>0]<<8)|(HEAPU8[$52+2>>0]<<16)|(HEAPU8[$52+3>>0]<<24);
    $54 = ((($53)) + 13|0);
    $55 = HEAPU8[$54>>0]|(HEAPU8[$54+1>>0]<<8);
    $56 = HEAP32[$ast>>2]|0;
    $57 = HEAPU8[$56>>0]|(HEAPU8[$56+1>>0]<<8)|(HEAPU8[$56+2>>0]<<16)|(HEAPU8[$56+3>>0]<<24);
    $58 = ((($57)) + 15|0);
    $59 = HEAPU8[$58>>0]|(HEAPU8[$58+1>>0]<<8);
    __set_error_pos($47,$51,$55,$59);
    $result = 3;
    $430 = HEAP32[$ast>>2]|0;
    $431 = $1;
    HEAP32[$431>>2] = $430;
    $432 = $result;
    STACKTOP = sp;return ($432|0);
   }
  }
  $60 = $0;
  $61 = $0;
  $62 = ((($61)) + 67|0);
  $63 = HEAPU8[$62>>0]|(HEAPU8[$62+1>>0]<<8)|(HEAPU8[$62+2>>0]<<16)|(HEAPU8[$62+3>>0]<<24);
  $64 = (__set_current_error($60,24,$63)|0);
  $65 = ($64<<24>>24)!=(0);
  if (!($65)) {
   $430 = HEAP32[$ast>>2]|0;
   $431 = $1;
   HEAP32[$431>>2] = $430;
   $432 = $result;
   STACKTOP = sp;return ($432|0);
  }
  $66 = $0;
  __set_error_pos($66,0,0,0);
  $result = 3;
  $430 = HEAP32[$ast>>2]|0;
  $431 = $1;
  HEAP32[$431>>2] = $430;
  $432 = $result;
  STACKTOP = sp;return ($432|0);
 }
 $67 = $2;
 $68 = HEAPU8[$67>>0]|(HEAPU8[$67+1>>0]<<8)|(HEAPU8[$67+2>>0]<<16)|(HEAPU8[$67+3>>0]<<24);
 $69 = ($68|0)==(10);
 $70 = $2;
 if ($69) {
  $arr = $70;
 } else {
  $71 = ((($70)) + 4|0);
  $72 = HEAPU8[$71>>0]|(HEAPU8[$71+1>>0]<<8)|(HEAPU8[$71+2>>0]<<16)|(HEAPU8[$71+3>>0]<<24);
  $73 = ((($72)) + 4|0);
  $74 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
  $arr = $74;
 }
 $75 = $4;
 $76 = ($75|0)!=(0|0);
 if ($76) {
  $77 = HEAP32[$ast>>2]|0;
  $78 = ((($77)) + 8|0);
  $79 = HEAPU8[$78>>0]|(HEAPU8[$78+1>>0]<<8)|(HEAPU8[$78+2>>0]<<16)|(HEAPU8[$78+3>>0]<<24);
  $80 = ($79|0)!=(0|0);
  if ($80) {
   $81 = HEAP32[$ast>>2]|0;
   $82 = ((($81)) + 8|0);
   $83 = HEAPU8[$82>>0]|(HEAPU8[$82+1>>0]<<8)|(HEAPU8[$82+2>>0]<<16)|(HEAPU8[$82+3>>0]<<24);
   $84 = HEAPU8[$83>>0]|(HEAPU8[$83+1>>0]<<8)|(HEAPU8[$83+2>>0]<<16)|(HEAPU8[$83+3>>0]<<24);
   $85 = HEAPU8[$84>>0]|(HEAPU8[$84+1>>0]<<8)|(HEAPU8[$84+2>>0]<<16)|(HEAPU8[$84+3>>0]<<24);
   $86 = ($85|0)==(8);
   if ($86) {
    $87 = HEAP32[$ast>>2]|0;
    $88 = ((($87)) + 8|0);
    $89 = HEAPU8[$88>>0]|(HEAPU8[$88+1>>0]<<8)|(HEAPU8[$88+2>>0]<<16)|(HEAPU8[$88+3>>0]<<24);
    $90 = HEAPU8[$89>>0]|(HEAPU8[$89+1>>0]<<8)|(HEAPU8[$89+2>>0]<<16)|(HEAPU8[$89+3>>0]<<24);
    $91 = ((($90)) + 4|0);
    $92 = HEAPU8[$91>>0]|(HEAPU8[$91+1>>0]<<8)|(HEAPU8[$91+2>>0]<<16)|(HEAPU8[$91+3>>0]<<24);
    $93 = ((($92)) + 4|0);
    $94 = HEAPU8[$93>>0]|(HEAPU8[$93+1>>0]<<8)|(HEAPU8[$93+2>>0]<<16)|(HEAPU8[$93+3>>0]<<24);
    $95 = ($94|0)==(14|0);
    if ($95) {
     $96 = $4;
     HEAP8[$96>>0] = 1;
     $430 = HEAP32[$ast>>2]|0;
     $431 = $1;
     HEAP32[$431>>2] = $430;
     $432 = $result;
     STACKTOP = sp;return ($432|0);
    }
   }
  }
 }
 $97 = HEAP32[$ast>>2]|0;
 $98 = ((($97)) + 8|0);
 $99 = HEAPU8[$98>>0]|(HEAPU8[$98+1>>0]<<8)|(HEAPU8[$98+2>>0]<<16)|(HEAPU8[$98+3>>0]<<24);
 $100 = ($99|0)!=(0|0);
 if ($100) {
  $101 = HEAP32[$ast>>2]|0;
  $102 = ((($101)) + 8|0);
  $103 = HEAPU8[$102>>0]|(HEAPU8[$102+1>>0]<<8)|(HEAPU8[$102+2>>0]<<16)|(HEAPU8[$102+3>>0]<<24);
  $104 = HEAPU8[$103>>0]|(HEAPU8[$103+1>>0]<<8)|(HEAPU8[$103+2>>0]<<16)|(HEAPU8[$103+3>>0]<<24);
  $105 = HEAPU8[$104>>0]|(HEAPU8[$104+1>>0]<<8)|(HEAPU8[$104+2>>0]<<16)|(HEAPU8[$104+3>>0]<<24);
  $106 = ($105|0)!=(8);
  if (!($106)) {
   $107 = HEAP32[$ast>>2]|0;
   $108 = ((($107)) + 8|0);
   $109 = HEAPU8[$108>>0]|(HEAPU8[$108+1>>0]<<8)|(HEAPU8[$108+2>>0]<<16)|(HEAPU8[$108+3>>0]<<24);
   $110 = HEAPU8[$109>>0]|(HEAPU8[$109+1>>0]<<8)|(HEAPU8[$109+2>>0]<<16)|(HEAPU8[$109+3>>0]<<24);
   $111 = ((($110)) + 4|0);
   $112 = HEAPU8[$111>>0]|(HEAPU8[$111+1>>0]<<8)|(HEAPU8[$111+2>>0]<<16)|(HEAPU8[$111+3>>0]<<24);
   $113 = ((($112)) + 4|0);
   $114 = HEAPU8[$113>>0]|(HEAPU8[$113+1>>0]<<8)|(HEAPU8[$113+2>>0]<<16)|(HEAPU8[$113+3>>0]<<24);
   $115 = ($114|0)!=(7|0);
   if (!($115)) {
    $159 = HEAP32[$ast>>2]|0;
    $160 = ((($159)) + 8|0);
    $161 = HEAPU8[$160>>0]|(HEAPU8[$160+1>>0]<<8)|(HEAPU8[$160+2>>0]<<16)|(HEAPU8[$160+3>>0]<<24);
    HEAP32[$ast>>2] = $161;
    $162 = HEAP32[$ast>>2]|0;
    $163 = ((($162)) + 8|0);
    $164 = HEAPU8[$163>>0]|(HEAPU8[$163+1>>0]<<8)|(HEAPU8[$163+2>>0]<<16)|(HEAPU8[$163+3>>0]<<24);
    $165 = ($164|0)!=(0|0);
    $166 = HEAP32[$ast>>2]|0;
    if (!($165)) {
     $167 = ($166|0)!=(0|0);
     if ($167) {
      $168 = HEAP32[$ast>>2]|0;
      $169 = HEAPU8[$168>>0]|(HEAPU8[$168+1>>0]<<8)|(HEAPU8[$168+2>>0]<<16)|(HEAPU8[$168+3>>0]<<24);
      $170 = ($169|0)!=(0|0);
      if ($170) {
       $171 = $0;
       $172 = $0;
       $173 = ((($172)) + 67|0);
       $174 = HEAPU8[$173>>0]|(HEAPU8[$173+1>>0]<<8)|(HEAPU8[$173+2>>0]<<16)|(HEAPU8[$173+3>>0]<<24);
       $175 = (__set_current_error($171,24,$174)|0);
       $176 = ($175<<24>>24)!=(0);
       if (!($176)) {
        $430 = HEAP32[$ast>>2]|0;
        $431 = $1;
        HEAP32[$431>>2] = $430;
        $432 = $result;
        STACKTOP = sp;return ($432|0);
       }
       $177 = $0;
       $178 = HEAP32[$ast>>2]|0;
       $179 = HEAPU8[$178>>0]|(HEAPU8[$178+1>>0]<<8)|(HEAPU8[$178+2>>0]<<16)|(HEAPU8[$178+3>>0]<<24);
       $180 = ((($179)) + 9|0);
       $181 = HEAPU8[$180>>0]|(HEAPU8[$180+1>>0]<<8)|(HEAPU8[$180+2>>0]<<16)|(HEAPU8[$180+3>>0]<<24);
       $182 = HEAP32[$ast>>2]|0;
       $183 = HEAPU8[$182>>0]|(HEAPU8[$182+1>>0]<<8)|(HEAPU8[$182+2>>0]<<16)|(HEAPU8[$182+3>>0]<<24);
       $184 = ((($183)) + 13|0);
       $185 = HEAPU8[$184>>0]|(HEAPU8[$184+1>>0]<<8);
       $186 = HEAP32[$ast>>2]|0;
       $187 = HEAPU8[$186>>0]|(HEAPU8[$186+1>>0]<<8)|(HEAPU8[$186+2>>0]<<16)|(HEAPU8[$186+3>>0]<<24);
       $188 = ((($187)) + 15|0);
       $189 = HEAPU8[$188>>0]|(HEAPU8[$188+1>>0]<<8);
       __set_error_pos($177,$181,$185,$189);
       $result = 3;
       $430 = HEAP32[$ast>>2]|0;
       $431 = $1;
       HEAP32[$431>>2] = $430;
       $432 = $result;
       STACKTOP = sp;return ($432|0);
      }
     }
     $190 = $0;
     $191 = $0;
     $192 = ((($191)) + 67|0);
     $193 = HEAPU8[$192>>0]|(HEAPU8[$192+1>>0]<<8)|(HEAPU8[$192+2>>0]<<16)|(HEAPU8[$192+3>>0]<<24);
     $194 = (__set_current_error($190,24,$193)|0);
     $195 = ($194<<24>>24)!=(0);
     if (!($195)) {
      $430 = HEAP32[$ast>>2]|0;
      $431 = $1;
      HEAP32[$431>>2] = $430;
      $432 = $result;
      STACKTOP = sp;return ($432|0);
     }
     $196 = $0;
     __set_error_pos($196,0,0,0);
     $result = 3;
     $430 = HEAP32[$ast>>2]|0;
     $431 = $1;
     HEAP32[$431>>2] = $430;
     $432 = $result;
     STACKTOP = sp;return ($432|0);
    }
    $197 = ((($166)) + 8|0);
    $198 = HEAPU8[$197>>0]|(HEAPU8[$197+1>>0]<<8)|(HEAPU8[$197+2>>0]<<16)|(HEAPU8[$197+3>>0]<<24);
    HEAP32[$ast>>2] = $198;
    while(1) {
     $199 = HEAP32[$ast>>2]|0;
     $200 = HEAPU8[$199>>0]|(HEAPU8[$199+1>>0]<<8)|(HEAPU8[$199+2>>0]<<16)|(HEAPU8[$199+3>>0]<<24);
     $201 = HEAPU8[$200>>0]|(HEAPU8[$200+1>>0]<<8)|(HEAPU8[$200+2>>0]<<16)|(HEAPU8[$200+3>>0]<<24);
     $202 = ($201|0)!=(8);
     if (!($202)) {
      $203 = HEAP32[$ast>>2]|0;
      $204 = HEAPU8[$203>>0]|(HEAPU8[$203+1>>0]<<8)|(HEAPU8[$203+2>>0]<<16)|(HEAPU8[$203+3>>0]<<24);
      $205 = ((($204)) + 4|0);
      $206 = HEAPU8[$205>>0]|(HEAPU8[$205+1>>0]<<8)|(HEAPU8[$205+2>>0]<<16)|(HEAPU8[$205+3>>0]<<24);
      $207 = ((($206)) + 4|0);
      $208 = HEAPU8[$207>>0]|(HEAPU8[$207+1>>0]<<8)|(HEAPU8[$207+2>>0]<<16)|(HEAPU8[$207+3>>0]<<24);
      $209 = ($208|0)!=(8|0);
      if (!($209)) {
       label = 78;
       break;
      }
     }
     $210 = $0;
     $211 = (__calc_expression($210,$ast,$subscript_ptr)|0);
     $result = $211;
     $212 = $result;
     $213 = ($212|0)!=(0);
     if ($213) {
      label = 85;
      break;
     }
     $214 = HEAP32[$subscript_ptr>>2]|0;
     $len = $214;
     $215 = $len;
     $216 = (__try_get_value($215,$val,2)|0);
     $217 = ($216<<24>>24)!=(0);
     if (!($217)) {
      label = 47;
      break;
     }
     $249 = HEAPU8[$val>>0]|(HEAPU8[$val+1>>0]<<8)|(HEAPU8[$val+2>>0]<<16)|(HEAPU8[$val+3>>0]<<24);
     $250 = ($249|0)<(0);
     if ($250) {
      label = 54;
      break;
     }
     $282 = $dcount;
     $283 = (($282) + 1)|0;
     $284 = $arr;
     $285 = ((($284)) + 4|0);
     $286 = HEAPU8[$285>>0]|(HEAPU8[$285+1>>0]<<8)|(HEAPU8[$285+2>>0]<<16)|(HEAPU8[$285+3>>0]<<24);
     $287 = ((($286)) + 33|0);
     $288 = HEAP8[$287>>0]|0;
     $289 = $288&255;
     $290 = ($283|0)>($289|0);
     if ($290) {
      label = 61;
      break;
     }
     $322 = HEAPU8[$val>>0]|(HEAPU8[$val+1>>0]<<8)|(HEAPU8[$val+2>>0]<<16)|(HEAPU8[$val+3>>0]<<24);
     $323 = $dcount;
     $324 = $arr;
     $325 = ((($324)) + 4|0);
     $326 = HEAPU8[$325>>0]|(HEAPU8[$325+1>>0]<<8)|(HEAPU8[$325+2>>0]<<16)|(HEAPU8[$325+3>>0]<<24);
     $327 = ((($326)) + 34|0);
     $328 = (($327) + ($323<<2)|0);
     $329 = HEAPU8[$328>>0]|(HEAPU8[$328+1>>0]<<8)|(HEAPU8[$328+2>>0]<<16)|(HEAPU8[$328+3>>0]<<24);
     $330 = ($322>>>0)>=($329>>>0);
     if ($330) {
      label = 68;
      break;
     }
     $362 = HEAPU8[$val>>0]|(HEAPU8[$val+1>>0]<<8)|(HEAPU8[$val+2>>0]<<16)|(HEAPU8[$val+3>>0]<<24);
     $363 = $f;
     $364 = Math_imul($362, $363)|0;
     $365 = $idx;
     $366 = (($365) + ($364))|0;
     $idx = $366;
     $367 = HEAP32[$ast>>2]|0;
     $368 = HEAPU8[$367>>0]|(HEAPU8[$367+1>>0]<<8)|(HEAPU8[$367+2>>0]<<16)|(HEAPU8[$367+3>>0]<<24);
     $369 = HEAPU8[$368>>0]|(HEAPU8[$368+1>>0]<<8)|(HEAPU8[$368+2>>0]<<16)|(HEAPU8[$368+3>>0]<<24);
     $370 = ($369|0)==(19);
     do {
      if ($370) {
       $371 = HEAP32[$ast>>2]|0;
       $372 = HEAPU8[$371>>0]|(HEAPU8[$371+1>>0]<<8)|(HEAPU8[$371+2>>0]<<16)|(HEAPU8[$371+3>>0]<<24);
       $373 = ((($372)) + 4|0);
       $374 = HEAP8[$373>>0]|0;
       $375 = $374 << 24 >> 24;
       $376 = ($375|0)==(44);
       if (!($376)) {
        break;
       }
       $377 = HEAP32[$ast>>2]|0;
       $378 = ((($377)) + 8|0);
       $379 = HEAPU8[$378>>0]|(HEAPU8[$378+1>>0]<<8)|(HEAPU8[$378+2>>0]<<16)|(HEAPU8[$378+3>>0]<<24);
       HEAP32[$ast>>2] = $379;
      }
     } while(0);
     $380 = $dcount;
     $381 = $arr;
     $382 = ((($381)) + 4|0);
     $383 = HEAPU8[$382>>0]|(HEAPU8[$382+1>>0]<<8)|(HEAPU8[$382+2>>0]<<16)|(HEAPU8[$382+3>>0]<<24);
     $384 = ((($383)) + 34|0);
     $385 = (($384) + ($380<<2)|0);
     $386 = HEAPU8[$385>>0]|(HEAPU8[$385+1>>0]<<8)|(HEAPU8[$385+2>>0]<<16)|(HEAPU8[$385+3>>0]<<24);
     $387 = $f;
     $388 = Math_imul($387, $386)|0;
     $f = $388;
     $389 = $dcount;
     $390 = (($389) + 1)|0;
     $dcount = $390;
    }
    if ((label|0) == 47) {
     $218 = HEAP32[$ast>>2]|0;
     $219 = ($218|0)!=(0|0);
     if ($219) {
      $220 = HEAP32[$ast>>2]|0;
      $221 = HEAPU8[$220>>0]|(HEAPU8[$220+1>>0]<<8)|(HEAPU8[$220+2>>0]<<16)|(HEAPU8[$220+3>>0]<<24);
      $222 = ($221|0)!=(0|0);
      if ($222) {
       $223 = $0;
       $224 = $0;
       $225 = ((($224)) + 67|0);
       $226 = HEAPU8[$225>>0]|(HEAPU8[$225+1>>0]<<8)|(HEAPU8[$225+2>>0]<<16)|(HEAPU8[$225+3>>0]<<24);
       $227 = (__set_current_error($223,14,$226)|0);
       $228 = ($227<<24>>24)!=(0);
       if (!($228)) {
        $430 = HEAP32[$ast>>2]|0;
        $431 = $1;
        HEAP32[$431>>2] = $430;
        $432 = $result;
        STACKTOP = sp;return ($432|0);
       }
       $229 = $0;
       $230 = HEAP32[$ast>>2]|0;
       $231 = HEAPU8[$230>>0]|(HEAPU8[$230+1>>0]<<8)|(HEAPU8[$230+2>>0]<<16)|(HEAPU8[$230+3>>0]<<24);
       $232 = ((($231)) + 9|0);
       $233 = HEAPU8[$232>>0]|(HEAPU8[$232+1>>0]<<8)|(HEAPU8[$232+2>>0]<<16)|(HEAPU8[$232+3>>0]<<24);
       $234 = HEAP32[$ast>>2]|0;
       $235 = HEAPU8[$234>>0]|(HEAPU8[$234+1>>0]<<8)|(HEAPU8[$234+2>>0]<<16)|(HEAPU8[$234+3>>0]<<24);
       $236 = ((($235)) + 13|0);
       $237 = HEAPU8[$236>>0]|(HEAPU8[$236+1>>0]<<8);
       $238 = HEAP32[$ast>>2]|0;
       $239 = HEAPU8[$238>>0]|(HEAPU8[$238+1>>0]<<8)|(HEAPU8[$238+2>>0]<<16)|(HEAPU8[$238+3>>0]<<24);
       $240 = ((($239)) + 15|0);
       $241 = HEAPU8[$240>>0]|(HEAPU8[$240+1>>0]<<8);
       __set_error_pos($229,$233,$237,$241);
       $result = 3;
       $430 = HEAP32[$ast>>2]|0;
       $431 = $1;
       HEAP32[$431>>2] = $430;
       $432 = $result;
       STACKTOP = sp;return ($432|0);
      }
     }
     $242 = $0;
     $243 = $0;
     $244 = ((($243)) + 67|0);
     $245 = HEAPU8[$244>>0]|(HEAPU8[$244+1>>0]<<8)|(HEAPU8[$244+2>>0]<<16)|(HEAPU8[$244+3>>0]<<24);
     $246 = (__set_current_error($242,14,$245)|0);
     $247 = ($246<<24>>24)!=(0);
     if (!($247)) {
      $430 = HEAP32[$ast>>2]|0;
      $431 = $1;
      HEAP32[$431>>2] = $430;
      $432 = $result;
      STACKTOP = sp;return ($432|0);
     }
     $248 = $0;
     __set_error_pos($248,0,0,0);
     $result = 3;
     $430 = HEAP32[$ast>>2]|0;
     $431 = $1;
     HEAP32[$431>>2] = $430;
     $432 = $result;
     STACKTOP = sp;return ($432|0);
    }
    else if ((label|0) == 54) {
     $251 = HEAP32[$ast>>2]|0;
     $252 = ($251|0)!=(0|0);
     if ($252) {
      $253 = HEAP32[$ast>>2]|0;
      $254 = HEAPU8[$253>>0]|(HEAPU8[$253+1>>0]<<8)|(HEAPU8[$253+2>>0]<<16)|(HEAPU8[$253+3>>0]<<24);
      $255 = ($254|0)!=(0|0);
      if ($255) {
       $256 = $0;
       $257 = $0;
       $258 = ((($257)) + 67|0);
       $259 = HEAPU8[$258>>0]|(HEAPU8[$258+1>>0]<<8)|(HEAPU8[$258+2>>0]<<16)|(HEAPU8[$258+3>>0]<<24);
       $260 = (__set_current_error($256,20,$259)|0);
       $261 = ($260<<24>>24)!=(0);
       if (!($261)) {
        $430 = HEAP32[$ast>>2]|0;
        $431 = $1;
        HEAP32[$431>>2] = $430;
        $432 = $result;
        STACKTOP = sp;return ($432|0);
       }
       $262 = $0;
       $263 = HEAP32[$ast>>2]|0;
       $264 = HEAPU8[$263>>0]|(HEAPU8[$263+1>>0]<<8)|(HEAPU8[$263+2>>0]<<16)|(HEAPU8[$263+3>>0]<<24);
       $265 = ((($264)) + 9|0);
       $266 = HEAPU8[$265>>0]|(HEAPU8[$265+1>>0]<<8)|(HEAPU8[$265+2>>0]<<16)|(HEAPU8[$265+3>>0]<<24);
       $267 = HEAP32[$ast>>2]|0;
       $268 = HEAPU8[$267>>0]|(HEAPU8[$267+1>>0]<<8)|(HEAPU8[$267+2>>0]<<16)|(HEAPU8[$267+3>>0]<<24);
       $269 = ((($268)) + 13|0);
       $270 = HEAPU8[$269>>0]|(HEAPU8[$269+1>>0]<<8);
       $271 = HEAP32[$ast>>2]|0;
       $272 = HEAPU8[$271>>0]|(HEAPU8[$271+1>>0]<<8)|(HEAPU8[$271+2>>0]<<16)|(HEAPU8[$271+3>>0]<<24);
       $273 = ((($272)) + 15|0);
       $274 = HEAPU8[$273>>0]|(HEAPU8[$273+1>>0]<<8);
       __set_error_pos($262,$266,$270,$274);
       $result = 3;
       $430 = HEAP32[$ast>>2]|0;
       $431 = $1;
       HEAP32[$431>>2] = $430;
       $432 = $result;
       STACKTOP = sp;return ($432|0);
      }
     }
     $275 = $0;
     $276 = $0;
     $277 = ((($276)) + 67|0);
     $278 = HEAPU8[$277>>0]|(HEAPU8[$277+1>>0]<<8)|(HEAPU8[$277+2>>0]<<16)|(HEAPU8[$277+3>>0]<<24);
     $279 = (__set_current_error($275,20,$278)|0);
     $280 = ($279<<24>>24)!=(0);
     if (!($280)) {
      $430 = HEAP32[$ast>>2]|0;
      $431 = $1;
      HEAP32[$431>>2] = $430;
      $432 = $result;
      STACKTOP = sp;return ($432|0);
     }
     $281 = $0;
     __set_error_pos($281,0,0,0);
     $result = 3;
     $430 = HEAP32[$ast>>2]|0;
     $431 = $1;
     HEAP32[$431>>2] = $430;
     $432 = $result;
     STACKTOP = sp;return ($432|0);
    }
    else if ((label|0) == 61) {
     $291 = HEAP32[$ast>>2]|0;
     $292 = ($291|0)!=(0|0);
     if ($292) {
      $293 = HEAP32[$ast>>2]|0;
      $294 = HEAPU8[$293>>0]|(HEAPU8[$293+1>>0]<<8)|(HEAPU8[$293+2>>0]<<16)|(HEAPU8[$293+3>>0]<<24);
      $295 = ($294|0)!=(0|0);
      if ($295) {
       $296 = $0;
       $297 = $0;
       $298 = ((($297)) + 67|0);
       $299 = HEAPU8[$298>>0]|(HEAPU8[$298+1>>0]<<8)|(HEAPU8[$298+2>>0]<<16)|(HEAPU8[$298+3>>0]<<24);
       $300 = (__set_current_error($296,22,$299)|0);
       $301 = ($300<<24>>24)!=(0);
       if (!($301)) {
        $430 = HEAP32[$ast>>2]|0;
        $431 = $1;
        HEAP32[$431>>2] = $430;
        $432 = $result;
        STACKTOP = sp;return ($432|0);
       }
       $302 = $0;
       $303 = HEAP32[$ast>>2]|0;
       $304 = HEAPU8[$303>>0]|(HEAPU8[$303+1>>0]<<8)|(HEAPU8[$303+2>>0]<<16)|(HEAPU8[$303+3>>0]<<24);
       $305 = ((($304)) + 9|0);
       $306 = HEAPU8[$305>>0]|(HEAPU8[$305+1>>0]<<8)|(HEAPU8[$305+2>>0]<<16)|(HEAPU8[$305+3>>0]<<24);
       $307 = HEAP32[$ast>>2]|0;
       $308 = HEAPU8[$307>>0]|(HEAPU8[$307+1>>0]<<8)|(HEAPU8[$307+2>>0]<<16)|(HEAPU8[$307+3>>0]<<24);
       $309 = ((($308)) + 13|0);
       $310 = HEAPU8[$309>>0]|(HEAPU8[$309+1>>0]<<8);
       $311 = HEAP32[$ast>>2]|0;
       $312 = HEAPU8[$311>>0]|(HEAPU8[$311+1>>0]<<8)|(HEAPU8[$311+2>>0]<<16)|(HEAPU8[$311+3>>0]<<24);
       $313 = ((($312)) + 15|0);
       $314 = HEAPU8[$313>>0]|(HEAPU8[$313+1>>0]<<8);
       __set_error_pos($302,$306,$310,$314);
       $result = 3;
       $430 = HEAP32[$ast>>2]|0;
       $431 = $1;
       HEAP32[$431>>2] = $430;
       $432 = $result;
       STACKTOP = sp;return ($432|0);
      }
     }
     $315 = $0;
     $316 = $0;
     $317 = ((($316)) + 67|0);
     $318 = HEAPU8[$317>>0]|(HEAPU8[$317+1>>0]<<8)|(HEAPU8[$317+2>>0]<<16)|(HEAPU8[$317+3>>0]<<24);
     $319 = (__set_current_error($315,22,$318)|0);
     $320 = ($319<<24>>24)!=(0);
     if (!($320)) {
      $430 = HEAP32[$ast>>2]|0;
      $431 = $1;
      HEAP32[$431>>2] = $430;
      $432 = $result;
      STACKTOP = sp;return ($432|0);
     }
     $321 = $0;
     __set_error_pos($321,0,0,0);
     $result = 3;
     $430 = HEAP32[$ast>>2]|0;
     $431 = $1;
     HEAP32[$431>>2] = $430;
     $432 = $result;
     STACKTOP = sp;return ($432|0);
    }
    else if ((label|0) == 68) {
     $331 = HEAP32[$ast>>2]|0;
     $332 = ($331|0)!=(0|0);
     if ($332) {
      $333 = HEAP32[$ast>>2]|0;
      $334 = HEAPU8[$333>>0]|(HEAPU8[$333+1>>0]<<8)|(HEAPU8[$333+2>>0]<<16)|(HEAPU8[$333+3>>0]<<24);
      $335 = ($334|0)!=(0|0);
      if ($335) {
       $336 = $0;
       $337 = $0;
       $338 = ((($337)) + 67|0);
       $339 = HEAPU8[$338>>0]|(HEAPU8[$338+1>>0]<<8)|(HEAPU8[$338+2>>0]<<16)|(HEAPU8[$338+3>>0]<<24);
       $340 = (__set_current_error($336,20,$339)|0);
       $341 = ($340<<24>>24)!=(0);
       if (!($341)) {
        $430 = HEAP32[$ast>>2]|0;
        $431 = $1;
        HEAP32[$431>>2] = $430;
        $432 = $result;
        STACKTOP = sp;return ($432|0);
       }
       $342 = $0;
       $343 = HEAP32[$ast>>2]|0;
       $344 = HEAPU8[$343>>0]|(HEAPU8[$343+1>>0]<<8)|(HEAPU8[$343+2>>0]<<16)|(HEAPU8[$343+3>>0]<<24);
       $345 = ((($344)) + 9|0);
       $346 = HEAPU8[$345>>0]|(HEAPU8[$345+1>>0]<<8)|(HEAPU8[$345+2>>0]<<16)|(HEAPU8[$345+3>>0]<<24);
       $347 = HEAP32[$ast>>2]|0;
       $348 = HEAPU8[$347>>0]|(HEAPU8[$347+1>>0]<<8)|(HEAPU8[$347+2>>0]<<16)|(HEAPU8[$347+3>>0]<<24);
       $349 = ((($348)) + 13|0);
       $350 = HEAPU8[$349>>0]|(HEAPU8[$349+1>>0]<<8);
       $351 = HEAP32[$ast>>2]|0;
       $352 = HEAPU8[$351>>0]|(HEAPU8[$351+1>>0]<<8)|(HEAPU8[$351+2>>0]<<16)|(HEAPU8[$351+3>>0]<<24);
       $353 = ((($352)) + 15|0);
       $354 = HEAPU8[$353>>0]|(HEAPU8[$353+1>>0]<<8);
       __set_error_pos($342,$346,$350,$354);
       $result = 3;
       $430 = HEAP32[$ast>>2]|0;
       $431 = $1;
       HEAP32[$431>>2] = $430;
       $432 = $result;
       STACKTOP = sp;return ($432|0);
      }
     }
     $355 = $0;
     $356 = $0;
     $357 = ((($356)) + 67|0);
     $358 = HEAPU8[$357>>0]|(HEAPU8[$357+1>>0]<<8)|(HEAPU8[$357+2>>0]<<16)|(HEAPU8[$357+3>>0]<<24);
     $359 = (__set_current_error($355,20,$358)|0);
     $360 = ($359<<24>>24)!=(0);
     if (!($360)) {
      $430 = HEAP32[$ast>>2]|0;
      $431 = $1;
      HEAP32[$431>>2] = $430;
      $432 = $result;
      STACKTOP = sp;return ($432|0);
     }
     $361 = $0;
     __set_error_pos($361,0,0,0);
     $result = 3;
     $430 = HEAP32[$ast>>2]|0;
     $431 = $1;
     HEAP32[$431>>2] = $430;
     $432 = $result;
     STACKTOP = sp;return ($432|0);
    }
    else if ((label|0) == 78) {
     $391 = $idx;
     $392 = $3;
     HEAP32[$392>>2] = $391;
     $393 = $arr;
     $394 = ((($393)) + 4|0);
     $395 = HEAPU8[$394>>0]|(HEAPU8[$394+1>>0]<<8)|(HEAPU8[$394+2>>0]<<16)|(HEAPU8[$394+3>>0]<<24);
     $396 = ((($395)) + 25|0);
     $397 = HEAPU8[$396>>0]|(HEAPU8[$396+1>>0]<<8)|(HEAPU8[$396+2>>0]<<16)|(HEAPU8[$396+3>>0]<<24);
     $398 = ($397|0)!=(0|0);
     if ($398) {
      $430 = HEAP32[$ast>>2]|0;
      $431 = $1;
      HEAP32[$431>>2] = $430;
      $432 = $result;
      STACKTOP = sp;return ($432|0);
     }
     $399 = HEAP32[$ast>>2]|0;
     $400 = ($399|0)!=(0|0);
     if ($400) {
      $401 = HEAP32[$ast>>2]|0;
      $402 = HEAPU8[$401>>0]|(HEAPU8[$401+1>>0]<<8)|(HEAPU8[$401+2>>0]<<16)|(HEAPU8[$401+3>>0]<<24);
      $403 = ($402|0)!=(0|0);
      if ($403) {
       $404 = $0;
       $405 = $0;
       $406 = ((($405)) + 67|0);
       $407 = HEAPU8[$406>>0]|(HEAPU8[$406+1>>0]<<8)|(HEAPU8[$406+2>>0]<<16)|(HEAPU8[$406+3>>0]<<24);
       $408 = (__set_current_error($404,23,$407)|0);
       $409 = ($408<<24>>24)!=(0);
       if (!($409)) {
        $430 = HEAP32[$ast>>2]|0;
        $431 = $1;
        HEAP32[$431>>2] = $430;
        $432 = $result;
        STACKTOP = sp;return ($432|0);
       }
       $410 = $0;
       $411 = HEAP32[$ast>>2]|0;
       $412 = HEAPU8[$411>>0]|(HEAPU8[$411+1>>0]<<8)|(HEAPU8[$411+2>>0]<<16)|(HEAPU8[$411+3>>0]<<24);
       $413 = ((($412)) + 9|0);
       $414 = HEAPU8[$413>>0]|(HEAPU8[$413+1>>0]<<8)|(HEAPU8[$413+2>>0]<<16)|(HEAPU8[$413+3>>0]<<24);
       $415 = HEAP32[$ast>>2]|0;
       $416 = HEAPU8[$415>>0]|(HEAPU8[$415+1>>0]<<8)|(HEAPU8[$415+2>>0]<<16)|(HEAPU8[$415+3>>0]<<24);
       $417 = ((($416)) + 13|0);
       $418 = HEAPU8[$417>>0]|(HEAPU8[$417+1>>0]<<8);
       $419 = HEAP32[$ast>>2]|0;
       $420 = HEAPU8[$419>>0]|(HEAPU8[$419+1>>0]<<8)|(HEAPU8[$419+2>>0]<<16)|(HEAPU8[$419+3>>0]<<24);
       $421 = ((($420)) + 15|0);
       $422 = HEAPU8[$421>>0]|(HEAPU8[$421+1>>0]<<8);
       __set_error_pos($410,$414,$418,$422);
       $result = 3;
       $430 = HEAP32[$ast>>2]|0;
       $431 = $1;
       HEAP32[$431>>2] = $430;
       $432 = $result;
       STACKTOP = sp;return ($432|0);
      }
     }
     $423 = $0;
     $424 = $0;
     $425 = ((($424)) + 67|0);
     $426 = HEAPU8[$425>>0]|(HEAPU8[$425+1>>0]<<8)|(HEAPU8[$425+2>>0]<<16)|(HEAPU8[$425+3>>0]<<24);
     $427 = (__set_current_error($423,23,$426)|0);
     $428 = ($427<<24>>24)!=(0);
     if (!($428)) {
      $430 = HEAP32[$ast>>2]|0;
      $431 = $1;
      HEAP32[$431>>2] = $430;
      $432 = $result;
      STACKTOP = sp;return ($432|0);
     }
     $429 = $0;
     __set_error_pos($429,0,0,0);
     $result = 3;
     $430 = HEAP32[$ast>>2]|0;
     $431 = $1;
     HEAP32[$431>>2] = $430;
     $432 = $result;
     STACKTOP = sp;return ($432|0);
    }
    else if ((label|0) == 85) {
     $430 = HEAP32[$ast>>2]|0;
     $431 = $1;
     HEAP32[$431>>2] = $430;
     $432 = $result;
     STACKTOP = sp;return ($432|0);
    }
   }
  }
 }
 $116 = HEAP32[$ast>>2]|0;
 $117 = ($116|0)!=(0|0);
 if ($117) {
  $118 = HEAP32[$ast>>2]|0;
  $119 = ((($118)) + 8|0);
  $120 = HEAPU8[$119>>0]|(HEAPU8[$119+1>>0]<<8)|(HEAPU8[$119+2>>0]<<16)|(HEAPU8[$119+3>>0]<<24);
  $121 = ($120|0)!=(0|0);
  if ($121) {
   $122 = HEAP32[$ast>>2]|0;
   $123 = ((($122)) + 8|0);
   $124 = HEAPU8[$123>>0]|(HEAPU8[$123+1>>0]<<8)|(HEAPU8[$123+2>>0]<<16)|(HEAPU8[$123+3>>0]<<24);
   $125 = HEAPU8[$124>>0]|(HEAPU8[$124+1>>0]<<8)|(HEAPU8[$124+2>>0]<<16)|(HEAPU8[$124+3>>0]<<24);
   $126 = ($125|0)!=(0|0);
   if ($126) {
    $127 = $0;
    $128 = $0;
    $129 = ((($128)) + 67|0);
    $130 = HEAPU8[$129>>0]|(HEAPU8[$129+1>>0]<<8)|(HEAPU8[$129+2>>0]<<16)|(HEAPU8[$129+3>>0]<<24);
    $131 = (__set_current_error($127,33,$130)|0);
    $132 = ($131<<24>>24)!=(0);
    if (!($132)) {
     $430 = HEAP32[$ast>>2]|0;
     $431 = $1;
     HEAP32[$431>>2] = $430;
     $432 = $result;
     STACKTOP = sp;return ($432|0);
    }
    $133 = $0;
    $134 = HEAP32[$ast>>2]|0;
    $135 = ((($134)) + 8|0);
    $136 = HEAPU8[$135>>0]|(HEAPU8[$135+1>>0]<<8)|(HEAPU8[$135+2>>0]<<16)|(HEAPU8[$135+3>>0]<<24);
    $137 = HEAPU8[$136>>0]|(HEAPU8[$136+1>>0]<<8)|(HEAPU8[$136+2>>0]<<16)|(HEAPU8[$136+3>>0]<<24);
    $138 = ((($137)) + 9|0);
    $139 = HEAPU8[$138>>0]|(HEAPU8[$138+1>>0]<<8)|(HEAPU8[$138+2>>0]<<16)|(HEAPU8[$138+3>>0]<<24);
    $140 = HEAP32[$ast>>2]|0;
    $141 = ((($140)) + 8|0);
    $142 = HEAPU8[$141>>0]|(HEAPU8[$141+1>>0]<<8)|(HEAPU8[$141+2>>0]<<16)|(HEAPU8[$141+3>>0]<<24);
    $143 = HEAPU8[$142>>0]|(HEAPU8[$142+1>>0]<<8)|(HEAPU8[$142+2>>0]<<16)|(HEAPU8[$142+3>>0]<<24);
    $144 = ((($143)) + 13|0);
    $145 = HEAPU8[$144>>0]|(HEAPU8[$144+1>>0]<<8);
    $146 = HEAP32[$ast>>2]|0;
    $147 = ((($146)) + 8|0);
    $148 = HEAPU8[$147>>0]|(HEAPU8[$147+1>>0]<<8)|(HEAPU8[$147+2>>0]<<16)|(HEAPU8[$147+3>>0]<<24);
    $149 = HEAPU8[$148>>0]|(HEAPU8[$148+1>>0]<<8)|(HEAPU8[$148+2>>0]<<16)|(HEAPU8[$148+3>>0]<<24);
    $150 = ((($149)) + 15|0);
    $151 = HEAPU8[$150>>0]|(HEAPU8[$150+1>>0]<<8);
    __set_error_pos($133,$139,$145,$151);
    $result = 3;
    $430 = HEAP32[$ast>>2]|0;
    $431 = $1;
    HEAP32[$431>>2] = $430;
    $432 = $result;
    STACKTOP = sp;return ($432|0);
   }
  }
 }
 $152 = $0;
 $153 = $0;
 $154 = ((($153)) + 67|0);
 $155 = HEAPU8[$154>>0]|(HEAPU8[$154+1>>0]<<8)|(HEAPU8[$154+2>>0]<<16)|(HEAPU8[$154+3>>0]<<24);
 $156 = (__set_current_error($152,33,$155)|0);
 $157 = ($156<<24>>24)!=(0);
 if (!($157)) {
  $430 = HEAP32[$ast>>2]|0;
  $431 = $1;
  HEAP32[$431>>2] = $430;
  $432 = $result;
  STACKTOP = sp;return ($432|0);
 }
 $158 = $0;
 __set_error_pos($158,0,0,0);
 $result = 3;
 $430 = HEAP32[$ast>>2]|0;
 $431 = $1;
 HEAP32[$431>>2] = $430;
 $432 = $result;
 STACKTOP = sp;return ($432|0);
}
function __assign_with_it($tgt,$src) {
 $tgt = $tgt|0;
 $src = $src|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0;
 var $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $tgt;
 $2 = $src;
 $3 = $1;
 $4 = ($3|0)!=(0|0);
 $5 = $2;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if (!($or$cond)) {
  ___assert_fail((5351|0),(4322|0),8124,(5362|0));
  // unreachable;
 }
 $7 = $2;
 $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
 $9 = ($8|0)!=(12);
 if ($9) {
  $10 = $2;
  $11 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
  $12 = ($11|0)!=(14);
  if ($12) {
   $0 = 0;
   $99 = $0;
   STACKTOP = sp;return ($99|0);
  }
 }
 $13 = $2;
 $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
 L9: do {
  switch ($14|0) {
  case 12:  {
   $15 = $2;
   $16 = ((($15)) + 4|0);
   $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
   $18 = ((($17)) + 21|0);
   $19 = HEAP8[$18>>0]|0;
   $20 = $19 & 1;
   $21 = ($20<<24>>24)!=(0);
   if ($21) {
    $22 = $2;
    $23 = ((($22)) + 4|0);
    $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
    $25 = ((($24)) + 17|0);
    $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
    $27 = (__create_list_it($26,1)|0);
    $28 = $1;
    $29 = ((($28)) + 4|0);
    HEAP8[$29>>0]=$27&255;HEAP8[$29+1>>0]=($27>>8)&255;HEAP8[$29+2>>0]=($27>>16)&255;HEAP8[$29+3>>0]=$27>>24;
    break L9;
   } else {
    $30 = $1;
    $31 = ((($30)) + 4|0);
    $32 = $2;
    $33 = ((($32)) + 4|0);
    ;HEAP8[$31>>0]=HEAP8[$33>>0]|0;HEAP8[$31+1>>0]=HEAP8[$33+1>>0]|0;HEAP8[$31+2>>0]=HEAP8[$33+2>>0]|0;HEAP8[$31+3>>0]=HEAP8[$33+3>>0]|0;
    $34 = $1;
    $35 = ((($34)) + 4|0);
    $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
    $37 = ((($36)) + 21|0);
    $38 = HEAP8[$37>>0]|0;
    $39 = $38 & -2;
    $40 = $39 | 1;
    HEAP8[$37>>0] = $40;
    $41 = $1;
    $42 = ((($41)) + 4|0);
    $43 = HEAPU8[$42>>0]|(HEAPU8[$42+1>>0]<<8)|(HEAPU8[$42+2>>0]<<16)|(HEAPU8[$42+3>>0]<<24);
    $44 = ((($43)) + 17|0);
    $45 = HEAPU8[$44>>0]|(HEAPU8[$44+1>>0]<<8)|(HEAPU8[$44+2>>0]<<16)|(HEAPU8[$44+3>>0]<<24);
    $46 = ((($45)) + 17|0);
    $47 = $1;
    $48 = ((($47)) + 4|0);
    $49 = HEAPU8[$48>>0]|(HEAPU8[$48+1>>0]<<8)|(HEAPU8[$48+2>>0]<<16)|(HEAPU8[$48+3>>0]<<24);
    $50 = ((($49)) + 17|0);
    $51 = HEAPU8[$50>>0]|(HEAPU8[$50+1>>0]<<8)|(HEAPU8[$50+2>>0]<<16)|(HEAPU8[$50+3>>0]<<24);
    $52 = $1;
    $53 = ((($52)) + 4|0);
    $54 = HEAPU8[$53>>0]|(HEAPU8[$53+1>>0]<<8)|(HEAPU8[$53+2>>0]<<16)|(HEAPU8[$53+3>>0]<<24);
    $55 = ((($54)) + 17|0);
    $56 = HEAPU8[$55>>0]|(HEAPU8[$55+1>>0]<<8)|(HEAPU8[$55+2>>0]<<16)|(HEAPU8[$55+3>>0]<<24);
    (__lock_ref_object($46,$51,$56)|0);
    break L9;
   }
   break;
  }
  case 14:  {
   $57 = $2;
   $58 = ((($57)) + 4|0);
   $59 = HEAPU8[$58>>0]|(HEAPU8[$58+1>>0]<<8)|(HEAPU8[$58+2>>0]<<16)|(HEAPU8[$58+3>>0]<<24);
   $60 = ((($59)) + 21|0);
   $61 = HEAP8[$60>>0]|0;
   $62 = $61 & 1;
   $63 = ($62<<24>>24)!=(0);
   if ($63) {
    $64 = $2;
    $65 = ((($64)) + 4|0);
    $66 = HEAPU8[$65>>0]|(HEAPU8[$65+1>>0]<<8)|(HEAPU8[$65+2>>0]<<16)|(HEAPU8[$65+3>>0]<<24);
    $67 = ((($66)) + 17|0);
    $68 = HEAPU8[$67>>0]|(HEAPU8[$67+1>>0]<<8)|(HEAPU8[$67+2>>0]<<16)|(HEAPU8[$67+3>>0]<<24);
    $69 = (__create_dict_it($68,1)|0);
    $70 = $1;
    $71 = ((($70)) + 4|0);
    HEAP8[$71>>0]=$69&255;HEAP8[$71+1>>0]=($69>>8)&255;HEAP8[$71+2>>0]=($69>>16)&255;HEAP8[$71+3>>0]=$69>>24;
    break L9;
   } else {
    $72 = $1;
    $73 = ((($72)) + 4|0);
    $74 = $2;
    $75 = ((($74)) + 4|0);
    ;HEAP8[$73>>0]=HEAP8[$75>>0]|0;HEAP8[$73+1>>0]=HEAP8[$75+1>>0]|0;HEAP8[$73+2>>0]=HEAP8[$75+2>>0]|0;HEAP8[$73+3>>0]=HEAP8[$75+3>>0]|0;
    $76 = $1;
    $77 = ((($76)) + 4|0);
    $78 = HEAPU8[$77>>0]|(HEAPU8[$77+1>>0]<<8)|(HEAPU8[$77+2>>0]<<16)|(HEAPU8[$77+3>>0]<<24);
    $79 = ((($78)) + 21|0);
    $80 = HEAP8[$79>>0]|0;
    $81 = $80 & -2;
    $82 = $81 | 1;
    HEAP8[$79>>0] = $82;
    $83 = $1;
    $84 = ((($83)) + 4|0);
    $85 = HEAPU8[$84>>0]|(HEAPU8[$84+1>>0]<<8)|(HEAPU8[$84+2>>0]<<16)|(HEAPU8[$84+3>>0]<<24);
    $86 = ((($85)) + 17|0);
    $87 = HEAPU8[$86>>0]|(HEAPU8[$86+1>>0]<<8)|(HEAPU8[$86+2>>0]<<16)|(HEAPU8[$86+3>>0]<<24);
    $88 = ((($87)) + 17|0);
    $89 = $1;
    $90 = ((($89)) + 4|0);
    $91 = HEAPU8[$90>>0]|(HEAPU8[$90+1>>0]<<8)|(HEAPU8[$90+2>>0]<<16)|(HEAPU8[$90+3>>0]<<24);
    $92 = ((($91)) + 17|0);
    $93 = HEAPU8[$92>>0]|(HEAPU8[$92+1>>0]<<8)|(HEAPU8[$92+2>>0]<<16)|(HEAPU8[$92+3>>0]<<24);
    $94 = $1;
    $95 = ((($94)) + 4|0);
    $96 = HEAPU8[$95>>0]|(HEAPU8[$95+1>>0]<<8)|(HEAPU8[$95+2>>0]<<16)|(HEAPU8[$95+3>>0]<<24);
    $97 = ((($96)) + 17|0);
    $98 = HEAPU8[$97>>0]|(HEAPU8[$97+1>>0]<<8)|(HEAPU8[$97+2>>0]<<16)|(HEAPU8[$97+3>>0]<<24);
    (__lock_ref_object($88,$93,$98)|0);
    break L9;
   }
   break;
  }
  default: {
   ___assert_fail((5378|0),(4322|0),8151,(5362|0));
   // unreachable;
  }
  }
 } while(0);
 $0 = 1;
 $99 = $0;
 STACKTOP = sp;return ($99|0);
}
function __create_list_it($coll,$lock) {
 $coll = $coll|0;
 $lock = $lock|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $result = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $coll;
 $1 = $lock;
 $result = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 if (!($3)) {
  ___assert_fail((5397|0),(4322|0),7567,(5528|0));
  // unreachable;
 }
 $4 = (_mb_malloc(26)|0);
 $result = $4;
 $5 = $result;
 dest=$5; stop=dest+26|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
 $6 = $0;
 $7 = $result;
 $8 = ((($7)) + 17|0);
 HEAP8[$8>>0]=$6&255;HEAP8[$8+1>>0]=($6>>8)&255;HEAP8[$8+2>>0]=($6>>16)&255;HEAP8[$8+3>>0]=$6>>24;
 $9 = $1;
 $10 = $result;
 $11 = ((($10)) + 21|0);
 $12 = HEAP8[$11>>0]|0;
 $13 = $9 & 1;
 $14 = $12 & -2;
 $15 = $14 | $13;
 HEAP8[$11>>0] = $15;
 $16 = $0;
 $17 = ((($16)) + 35|0);
 $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
 $19 = ($18|0)!=(0|0);
 $20 = $0;
 if ($19) {
  $21 = ((($20)) + 35|0);
  $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
  $23 = HEAP32[$22>>2]|0;
  $24 = $0;
  $25 = ((($24)) + 31|0);
  $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
  $27 = ($26|0)!=(0);
  if ($27) {
   $28 = $0;
   $29 = ((($28)) + 31|0);
   $30 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8)|(HEAPU8[$29+2>>0]<<16)|(HEAPU8[$29+3>>0]<<24);
   $31 = ($30|0)>(0);
   $32 = $31 ? 1 : -1;
   $34 = $32;
  } else {
   $34 = 0;
  }
  $33 = (($23) - ($34))|0;
  $35 = $result;
  $36 = ((($35)) + 22|0);
  HEAP8[$36>>0]=$33&255;HEAP8[$36+1>>0]=($33>>8)&255;HEAP8[$36+2>>0]=($33>>16)&255;HEAP8[$36+3>>0]=$33>>24;
 } else {
  $37 = ((($20)) + 19|0);
  $38 = HEAPU8[$37>>0]|(HEAPU8[$37+1>>0]<<8)|(HEAPU8[$37+2>>0]<<16)|(HEAPU8[$37+3>>0]<<24);
  $39 = $result;
  $40 = ((($39)) + 22|0);
  HEAP8[$40>>0]=$38&255;HEAP8[$40+1>>0]=($38>>8)&255;HEAP8[$40+2>>0]=($38>>16)&255;HEAP8[$40+3>>0]=$38>>24;
 }
 $41 = $1;
 $42 = ($41<<24>>24)!=(0);
 if (!($42)) {
  $47 = $0;
  $48 = $0;
  $49 = $result;
  (__weak_ref($47,$48,$49)|0);
  $50 = $result;
  STACKTOP = sp;return ($50|0);
 }
 $43 = $0;
 $44 = ((($43)) + 17|0);
 $45 = $0;
 $46 = $0;
 (__lock_ref_object($44,$45,$46)|0);
 $47 = $0;
 $48 = $0;
 $49 = $result;
 (__weak_ref($47,$48,$49)|0);
 $50 = $result;
 STACKTOP = sp;return ($50|0);
}
function __lock_ref_object($lk,$ref,$obj) {
 $lk = $lk|0;
 $ref = $ref|0;
 $obj = $obj|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $lk;
 $1 = $ref;
 $2 = $obj;
 $3 = $0;
 $4 = ($3|0)!=(0|0);
 if (!($4)) {
  ___assert_fail((5508|0),(4322|0),6272,(5511|0));
  // unreachable;
 }
 $5 = $1;
 $6 = $2;
 (__ref($5,$6)|0);
 $7 = $0;
 $8 = HEAP16[$7>>1]|0;
 $9 = $8 << 16 >> 16;
 $10 = ($9|0)>=(0);
 $11 = $0;
 $12 = HEAP16[$11>>1]|0;
 if ($10) {
  $13 = (($12) + 1)<<16>>16;
  HEAP16[$11>>1] = $13;
  STACKTOP = sp;return 1;
 } else {
  $14 = (($12) + -1)<<16>>16;
  HEAP16[$11>>1] = $14;
  STACKTOP = sp;return 1;
 }
 return (0)|0;
}
function __create_dict_it($coll,$lock) {
 $coll = $coll|0;
 $lock = $lock|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $result = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $coll;
 $1 = $lock;
 $result = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 if (!($3)) {
  ___assert_fail((5397|0),(4322|0),7637,(5402|0));
  // unreachable;
 }
 $4 = (_mb_malloc(30)|0);
 $result = $4;
 $5 = $result;
 dest=$5; stop=dest+30|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
 $6 = $0;
 $7 = $result;
 $8 = ((($7)) + 17|0);
 HEAP8[$8>>0]=$6&255;HEAP8[$8+1>>0]=($6>>8)&255;HEAP8[$8+2>>0]=($6>>16)&255;HEAP8[$8+3>>0]=$6>>24;
 $9 = $1;
 $10 = $result;
 $11 = ((($10)) + 21|0);
 $12 = HEAP8[$11>>0]|0;
 $13 = $9 & 1;
 $14 = $12 & -2;
 $15 = $14 | $13;
 HEAP8[$11>>0] = $15;
 $16 = $result;
 $17 = ((($16)) + 22|0);
 HEAP8[$17>>0]=0&255;HEAP8[$17+1>>0]=(0>>8)&255;HEAP8[$17+2>>0]=(0>>16)&255;HEAP8[$17+3>>0]=0>>24;
 $18 = $result;
 $19 = ((($18)) + 26|0);
 HEAP8[$19>>0]=(-1)&255;HEAP8[$19+1>>0]=((-1)>>8)&255;HEAP8[$19+2>>0]=((-1)>>16)&255;HEAP8[$19+3>>0]=(-1)>>24;
 $20 = $1;
 $21 = ($20<<24>>24)!=(0);
 if (!($21)) {
  $26 = $0;
  $27 = $0;
  $28 = $result;
  (__weak_ref($26,$27,$28)|0);
  $29 = $result;
  STACKTOP = sp;return ($29|0);
 }
 $22 = $0;
 $23 = ((($22)) + 17|0);
 $24 = $0;
 $25 = $0;
 (__lock_ref_object($23,$24,$25)|0);
 $26 = $0;
 $27 = $0;
 $28 = $result;
 (__weak_ref($26,$27,$28)|0);
 $29 = $result;
 STACKTOP = sp;return ($29|0);
}
function __weak_ref($ref,$data,$weak) {
 $ref = $ref|0;
 $data = $data|0;
 $weak = $weak|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $before = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $ref;
 $1 = $data;
 $2 = $weak;
 $3 = $0;
 $4 = ((($3)) + 4|0);
 $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
 $6 = HEAP32[$5>>2]|0;
 $before = $6;
 $7 = $0;
 $8 = ((($7)) + 4|0);
 $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
 $10 = HEAP32[$9>>2]|0;
 $11 = (($10) + 1)|0;
 HEAP32[$9>>2] = $11;
 $12 = $before;
 $13 = $0;
 $14 = ((($13)) + 4|0);
 $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
 $16 = HEAP32[$15>>2]|0;
 $17 = ($12>>>0)>($16>>>0);
 if ($17) {
  ___assert_fail((5418|0),(4322|0),6400,(5498|0));
  // unreachable;
 } else {
  $18 = $2;
  $19 = $0;
  dest=$18; src=$19; stop=dest+17|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
  $20 = $0;
  $21 = ((($20)) + 4|0);
  $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
  $23 = HEAP32[$22>>2]|0;
  STACKTOP = sp;return ($23|0);
 }
 return (0)|0;
}
function __is_array($obj) {
 $obj = $obj|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $o = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $obj;
 $result = 0;
 $o = 0;
 $1 = $0;
 $o = $1;
 $2 = $o;
 $3 = ($2|0)!=(0|0);
 if ($3) {
  $4 = $o;
  $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
  $6 = ($5|0)==(10);
  if ($6) {
   $result = 1;
   $21 = $result;
   STACKTOP = sp;return ($21|0);
  }
 }
 $7 = $o;
 $8 = ($7|0)!=(0|0);
 if (!($8)) {
  $21 = $result;
  STACKTOP = sp;return ($21|0);
 }
 $9 = $o;
 $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
 $11 = ($10|0)==(9);
 if (!($11)) {
  $21 = $result;
  STACKTOP = sp;return ($21|0);
 }
 $12 = $o;
 $13 = ((($12)) + 4|0);
 $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
 $15 = ((($14)) + 4|0);
 $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
 $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
 $18 = ($17|0)==(10);
 $19 = $18&1;
 $20 = $19&255;
 $result = $20;
 $21 = $result;
 STACKTOP = sp;return ($21|0);
}
function __try_get_value($obj,$val,$expected) {
 $obj = $obj|0;
 $val = $val|0;
 $expected = $expected|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0.0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $or$cond = 0, $or$cond3 = 0, $or$cond5 = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $obj;
 $1 = $val;
 $2 = $expected;
 $result = 0;
 $3 = $0;
 $4 = ($3|0)!=(0|0);
 $5 = $1;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if (!($or$cond)) {
  ___assert_fail((5577|0),(4322|0),6137,(5588|0));
  // unreachable;
 }
 $7 = $0;
 $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
 $9 = ($8|0)==(2);
 if ($9) {
  $10 = $2;
  $11 = ($10|0)==(1);
  $12 = $2;
  $13 = ($12|0)==(2);
  $or$cond3 = $11 | $13;
  if ($or$cond3) {
   $14 = $0;
   $15 = ((($14)) + 4|0);
   $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
   $17 = $1;
   HEAP8[$17>>0]=$16&255;HEAP8[$17+1>>0]=($16>>8)&255;HEAP8[$17+2>>0]=($16>>16)&255;HEAP8[$17+3>>0]=$16>>24;
   $result = 1;
   $40 = $result;
   STACKTOP = sp;return ($40|0);
  }
 }
 $18 = $0;
 $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
 $20 = ($19|0)==(3);
 if ($20) {
  $21 = $2;
  $22 = ($21|0)==(1);
  $23 = $2;
  $24 = ($23|0)==(3);
  $or$cond5 = $22 | $24;
  if ($or$cond5) {
   $25 = $0;
   $26 = ((($25)) + 4|0);
   HEAP8[tempDoublePtr>>0]=HEAP8[$26>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$26+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$26+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$26+3>>0];$27 = +HEAPF32[tempDoublePtr>>2];
   $28 = $1;
   HEAPF32[tempDoublePtr>>2]=$27;HEAP8[$28>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$28+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$28+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$28+3>>0]=HEAP8[tempDoublePtr+3>>0];
   $result = 1;
   $40 = $result;
   STACKTOP = sp;return ($40|0);
  }
 }
 $29 = $0;
 $30 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8)|(HEAPU8[$29+2>>0]<<16)|(HEAPU8[$29+3>>0]<<24);
 $31 = ($30|0)==(9);
 if (!($31)) {
  $40 = $result;
  STACKTOP = sp;return ($40|0);
 }
 $32 = $0;
 $33 = ((($32)) + 4|0);
 $34 = HEAPU8[$33>>0]|(HEAPU8[$33+1>>0]<<8)|(HEAPU8[$33+2>>0]<<16)|(HEAPU8[$33+3>>0]<<24);
 $35 = ((($34)) + 4|0);
 $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
 $37 = $1;
 $38 = $2;
 $39 = (__try_get_value($36,$37,$38)|0);
 $result = $39;
 $40 = $result;
 STACKTOP = sp;return ($40|0);
}
function __core_if($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0;
 var $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0;
 var $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0;
 var $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0;
 var $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0;
 var $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0;
 var $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0;
 var $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0;
 var $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0;
 var $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0;
 var $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0;
 var $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0;
 var $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0;
 var $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0;
 var $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0;
 var $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0;
 var $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $ast = 0, $la = 0, $multi_line = 0, $obj = 0, $or$cond = 0, $or$cond10 = 0, $or$cond15 = 0, $or$cond17 = 0, $or$cond19 = 0, $or$cond21 = 0, $or$cond23 = 0, $or$cond8 = 0, $result = 0, $ret = 0, $running = 0, $skip = 0;
 var $val = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ast = sp + 20|0;
 $val = sp + 16|0;
 $0 = $s;
 $1 = $l;
 $result = 0;
 HEAP32[$ast>>2] = 0;
 HEAP32[$val>>2] = 0;
 $obj = 0;
 $multi_line = 0;
 $skip = 0;
 $running = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),15884,(6372|0));
  // unreachable;
 }
 $6 = $0;
 $7 = ((($6)) + 75|0);
 $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
 $running = $8;
 $9 = $1;
 $10 = HEAP32[$9>>2]|0;
 HEAP32[$ast>>2] = $10;
 $11 = HEAP32[$ast>>2]|0;
 $12 = ((($11)) + 8|0);
 $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
 HEAP32[$ast>>2] = $13;
 $14 = (__create_object()|0);
 HEAP32[$val>>2] = $14;
 while(1) {
  $15 = HEAP32[$val>>2]|0;
  dest=$15; stop=dest+17|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
  $16 = HEAP32[$val>>2]|0;
  HEAP8[$16>>0]=0&255;HEAP8[$16+1>>0]=(0>>8)&255;HEAP8[$16+2>>0]=(0>>16)&255;HEAP8[$16+3>>0]=0>>24;
  $17 = $0;
  $18 = (__calc_expression($17,$ast,$val)|0);
  $result = $18;
  $19 = HEAP32[$val>>2]|0;
  $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8)|(HEAPU8[$19+2>>0]<<16)|(HEAPU8[$19+3>>0]<<24);
  switch ($20|0) {
  case 7:  {
   $21 = HEAP32[$val>>2]|0;
   $22 = ((($21)) + 4|0);
   $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
   $24 = HEAP32[$val>>2]|0;
   $25 = ((($24)) + 4|0);
   $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
   (__ref($23,$26)|0);
   break;
  }
  case 10:  {
   $27 = HEAP32[$val>>2]|0;
   $28 = ((($27)) + 8|0);
   $29 = HEAP8[$28>>0]|0;
   $30 = $29 & 1;
   $31 = ($30<<24>>24)!=(0);
   if (!($31)) {
    $32 = HEAP32[$val>>2]|0;
    $33 = ((($32)) + 4|0);
    $34 = HEAPU8[$33>>0]|(HEAPU8[$33+1>>0]<<8)|(HEAPU8[$33+2>>0]<<16)|(HEAPU8[$33+3>>0]<<24);
    $35 = HEAP32[$val>>2]|0;
    $36 = ((($35)) + 4|0);
    $37 = HEAPU8[$36>>0]|(HEAPU8[$36+1>>0]<<8)|(HEAPU8[$36+2>>0]<<16)|(HEAPU8[$36+3>>0]<<24);
    (__ref($34,$37)|0);
   }
   break;
  }
  case 11:  {
   $38 = HEAP32[$val>>2]|0;
   $39 = ((($38)) + 4|0);
   $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8)|(HEAPU8[$39+2>>0]<<16)|(HEAPU8[$39+3>>0]<<24);
   $41 = HEAP32[$val>>2]|0;
   $42 = ((($41)) + 4|0);
   $43 = HEAPU8[$42>>0]|(HEAPU8[$42+1>>0]<<8)|(HEAPU8[$42+2>>0]<<16)|(HEAPU8[$42+3>>0]<<24);
   (__ref($40,$43)|0);
   break;
  }
  case 13:  {
   $44 = HEAP32[$val>>2]|0;
   $45 = ((($44)) + 4|0);
   $46 = HEAPU8[$45>>0]|(HEAPU8[$45+1>>0]<<8)|(HEAPU8[$45+2>>0]<<16)|(HEAPU8[$45+3>>0]<<24);
   $47 = HEAP32[$val>>2]|0;
   $48 = ((($47)) + 4|0);
   $49 = HEAPU8[$48>>0]|(HEAPU8[$48+1>>0]<<8)|(HEAPU8[$48+2>>0]<<16)|(HEAPU8[$48+3>>0]<<24);
   (__ref($46,$49)|0);
   break;
  }
  case 16:  {
   $50 = HEAP32[$val>>2]|0;
   $51 = ((($50)) + 4|0);
   $52 = HEAPU8[$51>>0]|(HEAPU8[$51+1>>0]<<8)|(HEAPU8[$51+2>>0]<<16)|(HEAPU8[$51+3>>0]<<24);
   $53 = HEAP32[$val>>2]|0;
   $54 = ((($53)) + 4|0);
   $55 = HEAPU8[$54>>0]|(HEAPU8[$54+1>>0]<<8)|(HEAPU8[$54+2>>0]<<16)|(HEAPU8[$54+3>>0]<<24);
   (__ref($52,$55)|0);
   break;
  }
  case 17:  {
   $56 = HEAP32[$val>>2]|0;
   $57 = ((($56)) + 8|0);
   $58 = HEAP8[$57>>0]|0;
   $59 = $58 & 1;
   $60 = ($59<<24>>24)!=(0);
   if (!($60)) {
    $61 = HEAP32[$val>>2]|0;
    $62 = ((($61)) + 4|0);
    $63 = HEAPU8[$62>>0]|(HEAPU8[$62+1>>0]<<8)|(HEAPU8[$62+2>>0]<<16)|(HEAPU8[$62+3>>0]<<24);
    $64 = ((($63)) + 58|0);
    $65 = HEAPU8[$64>>0]|(HEAPU8[$64+1>>0]<<8)|(HEAPU8[$64+2>>0]<<16)|(HEAPU8[$64+3>>0]<<24);
    $66 = ($65|0)==(2);
    if ($66) {
     $67 = HEAP32[$val>>2]|0;
     $68 = ((($67)) + 4|0);
     $69 = HEAPU8[$68>>0]|(HEAPU8[$68+1>>0]<<8)|(HEAPU8[$68+2>>0]<<16)|(HEAPU8[$68+3>>0]<<24);
     $70 = HEAP32[$val>>2]|0;
     $71 = ((($70)) + 4|0);
     $72 = HEAPU8[$71>>0]|(HEAPU8[$71+1>>0]<<8)|(HEAPU8[$71+2>>0]<<16)|(HEAPU8[$71+3>>0]<<24);
     (__ref($69,$72)|0);
    }
   }
   break;
  }
  default: {
  }
  }
  $73 = $result;
  $74 = ($73|0)==(0);
  $75 = HEAP32[$ast>>2]|0;
  $76 = ($75|0)!=(0|0);
  $or$cond21 = $74 & $76;
  if (!($or$cond21)) {
   break;
  }
  $77 = HEAP32[$ast>>2]|0;
  $78 = HEAPU8[$77>>0]|(HEAPU8[$77+1>>0]<<8)|(HEAPU8[$77+2>>0]<<16)|(HEAPU8[$77+3>>0]<<24);
  $obj = $78;
  $79 = HEAP32[$val>>2]|0;
  $80 = ((($79)) + 4|0);
  $81 = HEAPU8[$80>>0]|(HEAPU8[$80+1>>0]<<8)|(HEAPU8[$80+2>>0]<<16)|(HEAPU8[$80+3>>0]<<24);
  $82 = ($81|0)!=(0);
  if ($82) {
   label = 16;
   break;
  }
  $334 = HEAP32[$ast>>2]|0;
  $335 = ($334|0)!=(0|0);
  if ($335) {
   $336 = HEAP32[$ast>>2]|0;
   $337 = ((($336)) + 8|0);
   $338 = HEAPU8[$337>>0]|(HEAPU8[$337+1>>0]<<8)|(HEAPU8[$337+2>>0]<<16)|(HEAPU8[$337+3>>0]<<24);
   $339 = ($338|0)!=(0|0);
   if ($339) {
    $340 = HEAP32[$ast>>2]|0;
    $341 = ((($340)) + 8|0);
    $342 = HEAPU8[$341>>0]|(HEAPU8[$341+1>>0]<<8)|(HEAPU8[$341+2>>0]<<16)|(HEAPU8[$341+3>>0]<<24);
    $343 = HEAPU8[$342>>0]|(HEAPU8[$342+1>>0]<<8)|(HEAPU8[$342+2>>0]<<16)|(HEAPU8[$342+3>>0]<<24);
    $344 = ($343|0)!=(0|0);
    if ($344) {
     $345 = HEAP32[$ast>>2]|0;
     $346 = ((($345)) + 8|0);
     $347 = HEAPU8[$346>>0]|(HEAPU8[$346+1>>0]<<8)|(HEAPU8[$346+2>>0]<<16)|(HEAPU8[$346+3>>0]<<24);
     $348 = HEAPU8[$347>>0]|(HEAPU8[$347+1>>0]<<8)|(HEAPU8[$347+2>>0]<<16)|(HEAPU8[$347+3>>0]<<24);
     $349 = HEAPU8[$348>>0]|(HEAPU8[$348+1>>0]<<8)|(HEAPU8[$348+2>>0]<<16)|(HEAPU8[$348+3>>0]<<24);
     $350 = ($349|0)==(22);
     if ($350) {
      $multi_line = 1;
      $351 = $0;
      $352 = (__skip_if_chunk($351,$ast)|0);
      $result = $352;
      $353 = $result;
      $354 = ($353|0)!=(0);
      if ($354) {
       break;
      }
     }
    }
   }
  }
  $355 = $multi_line;
  $356 = $355&255;
  $357 = ($356|0)!=(0);
  $358 = HEAP32[$ast>>2]|0;
  $359 = ($358|0)!=(0|0);
  $or$cond8 = $357 & $359;
  if (!($or$cond8)) {
   label = 84;
   break;
  }
  $360 = HEAP32[$ast>>2]|0;
  $361 = HEAPU8[$360>>0]|(HEAPU8[$360+1>>0]<<8)|(HEAPU8[$360+2>>0]<<16)|(HEAPU8[$360+3>>0]<<24);
  $362 = HEAPU8[$361>>0]|(HEAPU8[$361+1>>0]<<8)|(HEAPU8[$361+2>>0]<<16)|(HEAPU8[$361+3>>0]<<24);
  $363 = ($362|0)==(8);
  if (!($363)) {
   label = 84;
   break;
  }
  $364 = HEAP32[$ast>>2]|0;
  $365 = HEAPU8[$364>>0]|(HEAPU8[$364+1>>0]<<8)|(HEAPU8[$364+2>>0]<<16)|(HEAPU8[$364+3>>0]<<24);
  $366 = ((($365)) + 4|0);
  $367 = HEAPU8[$366>>0]|(HEAPU8[$366+1>>0]<<8)|(HEAPU8[$366+2>>0]<<16)|(HEAPU8[$366+3>>0]<<24);
  $368 = ((($367)) + 4|0);
  $369 = HEAPU8[$368>>0]|(HEAPU8[$368+1>>0]<<8)|(HEAPU8[$368+2>>0]<<16)|(HEAPU8[$368+3>>0]<<24);
  $370 = ($369|0)==(25|0);
  if (!($370)) {
   label = 84;
   break;
  }
  $371 = HEAP32[$ast>>2]|0;
  $372 = ((($371)) + 8|0);
  $373 = HEAPU8[$372>>0]|(HEAPU8[$372+1>>0]<<8)|(HEAPU8[$372+2>>0]<<16)|(HEAPU8[$372+3>>0]<<24);
  HEAP32[$ast>>2] = $373;
 }
 L28: do {
  if ((label|0) == 16) {
   $skip = 1;
   $83 = $obj;
   $84 = HEAPU8[$83>>0]|(HEAPU8[$83+1>>0]<<8)|(HEAPU8[$83+2>>0]<<16)|(HEAPU8[$83+3>>0]<<24);
   $85 = ($84|0)==(8);
   if ($85) {
    $86 = $obj;
    $87 = ((($86)) + 4|0);
    $88 = HEAPU8[$87>>0]|(HEAPU8[$87+1>>0]<<8)|(HEAPU8[$87+2>>0]<<16)|(HEAPU8[$87+3>>0]<<24);
    $89 = ((($88)) + 4|0);
    $90 = HEAPU8[$89>>0]|(HEAPU8[$89+1>>0]<<8)|(HEAPU8[$89+2>>0]<<16)|(HEAPU8[$89+3>>0]<<24);
    $91 = ($90|0)==(24|0);
    if (!($91)) {
     label = 18;
    }
   } else {
    label = 18;
   }
   do {
    if ((label|0) == 18) {
     $92 = HEAP32[$ast>>2]|0;
     $93 = ((($92)) + 4|0);
     $94 = HEAPU8[$93>>0]|(HEAPU8[$93+1>>0]<<8)|(HEAPU8[$93+2>>0]<<16)|(HEAPU8[$93+3>>0]<<24);
     $95 = ($94|0)!=(0|0);
     if ($95) {
      $96 = HEAP32[$ast>>2]|0;
      $97 = ((($96)) + 4|0);
      $98 = HEAPU8[$97>>0]|(HEAPU8[$97+1>>0]<<8)|(HEAPU8[$97+2>>0]<<16)|(HEAPU8[$97+3>>0]<<24);
      $99 = HEAPU8[$98>>0]|(HEAPU8[$98+1>>0]<<8)|(HEAPU8[$98+2>>0]<<16)|(HEAPU8[$98+3>>0]<<24);
      $100 = HEAPU8[$99>>0]|(HEAPU8[$99+1>>0]<<8)|(HEAPU8[$99+2>>0]<<16)|(HEAPU8[$99+3>>0]<<24);
      $101 = ($100|0)==(8);
      if ($101) {
       $102 = HEAP32[$ast>>2]|0;
       $103 = ((($102)) + 4|0);
       $104 = HEAPU8[$103>>0]|(HEAPU8[$103+1>>0]<<8)|(HEAPU8[$103+2>>0]<<16)|(HEAPU8[$103+3>>0]<<24);
       $105 = HEAPU8[$104>>0]|(HEAPU8[$104+1>>0]<<8)|(HEAPU8[$104+2>>0]<<16)|(HEAPU8[$104+3>>0]<<24);
       $106 = ((($105)) + 4|0);
       $107 = HEAPU8[$106>>0]|(HEAPU8[$106+1>>0]<<8)|(HEAPU8[$106+2>>0]<<16)|(HEAPU8[$106+3>>0]<<24);
       $108 = ((($107)) + 4|0);
       $109 = HEAPU8[$108>>0]|(HEAPU8[$108+1>>0]<<8)|(HEAPU8[$108+2>>0]<<16)|(HEAPU8[$108+3>>0]<<24);
       $110 = ($109|0)==(24|0);
       if ($110) {
        $111 = HEAP32[$ast>>2]|0;
        $112 = ((($111)) + 4|0);
        $113 = HEAPU8[$112>>0]|(HEAPU8[$112+1>>0]<<8)|(HEAPU8[$112+2>>0]<<16)|(HEAPU8[$112+3>>0]<<24);
        HEAP32[$ast>>2] = $113;
        break;
       }
      }
     }
     $114 = HEAP32[$ast>>2]|0;
     $115 = ($114|0)!=(0|0);
     if ($115) {
      $116 = HEAP32[$ast>>2]|0;
      $117 = HEAPU8[$116>>0]|(HEAPU8[$116+1>>0]<<8)|(HEAPU8[$116+2>>0]<<16)|(HEAPU8[$116+3>>0]<<24);
      $118 = ($117|0)!=(0|0);
      if ($118) {
       $119 = $0;
       $120 = $0;
       $121 = ((($120)) + 67|0);
       $122 = HEAPU8[$121>>0]|(HEAPU8[$121+1>>0]<<8)|(HEAPU8[$121+2>>0]<<16)|(HEAPU8[$121+3>>0]<<24);
       $123 = (__set_current_error($119,39,$122)|0);
       $124 = ($123<<24>>24)!=(0);
       if (!($124)) {
        break L28;
       }
       $125 = $0;
       $126 = HEAP32[$ast>>2]|0;
       $127 = HEAPU8[$126>>0]|(HEAPU8[$126+1>>0]<<8)|(HEAPU8[$126+2>>0]<<16)|(HEAPU8[$126+3>>0]<<24);
       $128 = ((($127)) + 9|0);
       $129 = HEAPU8[$128>>0]|(HEAPU8[$128+1>>0]<<8)|(HEAPU8[$128+2>>0]<<16)|(HEAPU8[$128+3>>0]<<24);
       $130 = HEAP32[$ast>>2]|0;
       $131 = HEAPU8[$130>>0]|(HEAPU8[$130+1>>0]<<8)|(HEAPU8[$130+2>>0]<<16)|(HEAPU8[$130+3>>0]<<24);
       $132 = ((($131)) + 13|0);
       $133 = HEAPU8[$132>>0]|(HEAPU8[$132+1>>0]<<8);
       $134 = HEAP32[$ast>>2]|0;
       $135 = HEAPU8[$134>>0]|(HEAPU8[$134+1>>0]<<8)|(HEAPU8[$134+2>>0]<<16)|(HEAPU8[$134+3>>0]<<24);
       $136 = ((($135)) + 15|0);
       $137 = HEAPU8[$136>>0]|(HEAPU8[$136+1>>0]<<8);
       __set_error_pos($125,$129,$133,$137);
       $result = 3;
       break L28;
      }
     }
     $138 = $0;
     $139 = $0;
     $140 = ((($139)) + 67|0);
     $141 = HEAPU8[$140>>0]|(HEAPU8[$140+1>>0]<<8)|(HEAPU8[$140+2>>0]<<16)|(HEAPU8[$140+3>>0]<<24);
     $142 = (__set_current_error($138,39,$141)|0);
     $143 = ($142<<24>>24)!=(0);
     if (!($143)) {
      break L28;
     }
     $144 = $0;
     __set_error_pos($144,0,0,0);
     $result = 3;
     break L28;
    }
   } while(0);
   $145 = HEAP32[$ast>>2]|0;
   $146 = ($145|0)!=(0|0);
   if ($146) {
    $147 = HEAP32[$ast>>2]|0;
    $148 = ((($147)) + 8|0);
    $149 = HEAPU8[$148>>0]|(HEAPU8[$148+1>>0]<<8)|(HEAPU8[$148+2>>0]<<16)|(HEAPU8[$148+3>>0]<<24);
    $150 = ($149|0)!=(0|0);
    if ($150) {
     $151 = HEAP32[$ast>>2]|0;
     $152 = ((($151)) + 8|0);
     $153 = HEAPU8[$152>>0]|(HEAPU8[$152+1>>0]<<8)|(HEAPU8[$152+2>>0]<<16)|(HEAPU8[$152+3>>0]<<24);
     $154 = HEAPU8[$153>>0]|(HEAPU8[$153+1>>0]<<8)|(HEAPU8[$153+2>>0]<<16)|(HEAPU8[$153+3>>0]<<24);
     $155 = ($154|0)!=(0|0);
     if ($155) {
      $156 = HEAP32[$ast>>2]|0;
      $157 = ((($156)) + 8|0);
      $158 = HEAPU8[$157>>0]|(HEAPU8[$157+1>>0]<<8)|(HEAPU8[$157+2>>0]<<16)|(HEAPU8[$157+3>>0]<<24);
      $159 = HEAPU8[$158>>0]|(HEAPU8[$158+1>>0]<<8)|(HEAPU8[$158+2>>0]<<16)|(HEAPU8[$158+3>>0]<<24);
      $160 = HEAPU8[$159>>0]|(HEAPU8[$159+1>>0]<<8)|(HEAPU8[$159+2>>0]<<16)|(HEAPU8[$159+3>>0]<<24);
      $161 = ($160|0)==(22);
      if ($161) {
       $multi_line = 1;
      } else {
       label = 33;
      }
     } else {
      label = 33;
     }
    } else {
     label = 33;
    }
   } else {
    label = 33;
   }
   do {
    if ((label|0) == 33) {
     $162 = $0;
     $163 = ((($162)) + 92|0);
     $164 = HEAP8[$163>>0]|0;
     $165 = ($164<<24>>24)!=(0);
     if ($165) {
      $166 = $0;
      $167 = ((($166)) + 92|0);
      $168 = HEAP8[$167>>0]|0;
      $169 = $168&255;
      $170 = $169 & 1;
      $171 = ($170|0)!=(0);
      if (!($171)) {
       break;
      }
     }
     $172 = $0;
     $173 = ((($172)) + 102|0);
     $174 = HEAPU8[$173>>0]|(HEAPU8[$173+1>>0]<<8)|(HEAPU8[$173+2>>0]<<16)|(HEAPU8[$173+3>>0]<<24);
     $175 = (__ls_back($174)|0);
     $176 = $0;
     $177 = ((($176)) + 118|0);
     HEAP8[$177>>0]=$175&255;HEAP8[$177+1>>0]=($175>>8)&255;HEAP8[$177+2>>0]=($175>>16)&255;HEAP8[$177+3>>0]=$175>>24;
    }
   } while(0);
   while(1) {
    $178 = HEAP32[$ast>>2]|0;
    $179 = ((($178)) + 8|0);
    $180 = HEAPU8[$179>>0]|(HEAPU8[$179+1>>0]<<8)|(HEAPU8[$179+2>>0]<<16)|(HEAPU8[$179+3>>0]<<24);
    HEAP32[$ast>>2] = $180;
    while(1) {
     $181 = HEAP32[$ast>>2]|0;
     $182 = ($181|0)!=(0|0);
     if ($182) {
      $183 = HEAP32[$ast>>2]|0;
      $184 = HEAPU8[$183>>0]|(HEAPU8[$183+1>>0]<<8)|(HEAPU8[$183+2>>0]<<16)|(HEAPU8[$183+3>>0]<<24);
      $185 = ($184|0)!=(0|0);
      if ($185) {
       $186 = HEAP32[$ast>>2]|0;
       $187 = HEAPU8[$186>>0]|(HEAPU8[$186+1>>0]<<8)|(HEAPU8[$186+2>>0]<<16)|(HEAPU8[$186+3>>0]<<24);
       $188 = HEAPU8[$187>>0]|(HEAPU8[$187+1>>0]<<8)|(HEAPU8[$187+2>>0]<<16)|(HEAPU8[$187+3>>0]<<24);
       $189 = ($188|0)==(22);
       $582 = $189;
      } else {
       $582 = 0;
      }
     } else {
      $582 = 0;
     }
     $190 = HEAP32[$ast>>2]|0;
     if (!($582)) {
      break;
     }
     $191 = ((($190)) + 8|0);
     $192 = HEAPU8[$191>>0]|(HEAPU8[$191+1>>0]<<8)|(HEAPU8[$191+2>>0]<<16)|(HEAPU8[$191+3>>0]<<24);
     HEAP32[$ast>>2] = $192;
    }
    $193 = ($190|0)!=(0|0);
    if ($193) {
     $194 = HEAP32[$ast>>2]|0;
     $195 = HEAPU8[$194>>0]|(HEAPU8[$194+1>>0]<<8)|(HEAPU8[$194+2>>0]<<16)|(HEAPU8[$194+3>>0]<<24);
     $196 = HEAPU8[$195>>0]|(HEAPU8[$195+1>>0]<<8)|(HEAPU8[$195+2>>0]<<16)|(HEAPU8[$195+3>>0]<<24);
     $197 = ($196|0)==(8);
     if ($197) {
      $198 = HEAP32[$ast>>2]|0;
      $199 = HEAPU8[$198>>0]|(HEAPU8[$198+1>>0]<<8)|(HEAPU8[$198+2>>0]<<16)|(HEAPU8[$198+3>>0]<<24);
      $200 = ((($199)) + 4|0);
      $201 = HEAPU8[$200>>0]|(HEAPU8[$200+1>>0]<<8)|(HEAPU8[$200+2>>0]<<16)|(HEAPU8[$200+3>>0]<<24);
      $202 = ((($201)) + 4|0);
      $203 = HEAPU8[$202>>0]|(HEAPU8[$202+1>>0]<<8)|(HEAPU8[$202+2>>0]<<16)|(HEAPU8[$202+3>>0]<<24);
      $204 = ($203|0)==(27|0);
      if ($204) {
       label = 45;
       break;
      }
     }
    }
    $208 = HEAP32[$ast>>2]|0;
    $209 = ($208|0)!=(0|0);
    if (!($209)) {
     break;
    }
    $210 = $multi_line;
    $211 = $210&255;
    $212 = ($211|0)!=(0);
    if ($212) {
     $213 = HEAP32[$ast>>2]|0;
     $214 = HEAPU8[$213>>0]|(HEAPU8[$213+1>>0]<<8)|(HEAPU8[$213+2>>0]<<16)|(HEAPU8[$213+3>>0]<<24);
     $215 = HEAPU8[$214>>0]|(HEAPU8[$214+1>>0]<<8)|(HEAPU8[$214+2>>0]<<16)|(HEAPU8[$214+3>>0]<<24);
     $216 = ($215|0)==(8);
     if ($216) {
      $217 = HEAP32[$ast>>2]|0;
      $218 = HEAPU8[$217>>0]|(HEAPU8[$217+1>>0]<<8)|(HEAPU8[$217+2>>0]<<16)|(HEAPU8[$217+3>>0]<<24);
      $219 = ((($218)) + 4|0);
      $220 = HEAPU8[$219>>0]|(HEAPU8[$219+1>>0]<<8)|(HEAPU8[$219+2>>0]<<16)|(HEAPU8[$219+3>>0]<<24);
      $221 = ((($220)) + 4|0);
      $222 = HEAPU8[$221>>0]|(HEAPU8[$221+1>>0]<<8)|(HEAPU8[$221+2>>0]<<16)|(HEAPU8[$221+3>>0]<<24);
      $223 = ($222|0)==(26|0);
      if ($223) {
       break;
      }
     }
     $224 = HEAP32[$ast>>2]|0;
     $225 = HEAPU8[$224>>0]|(HEAPU8[$224+1>>0]<<8)|(HEAPU8[$224+2>>0]<<16)|(HEAPU8[$224+3>>0]<<24);
     $226 = HEAPU8[$225>>0]|(HEAPU8[$225+1>>0]<<8)|(HEAPU8[$225+2>>0]<<16)|(HEAPU8[$225+3>>0]<<24);
     $227 = ($226|0)==(8);
     if ($227) {
      $228 = HEAP32[$ast>>2]|0;
      $229 = HEAPU8[$228>>0]|(HEAPU8[$228+1>>0]<<8)|(HEAPU8[$228+2>>0]<<16)|(HEAPU8[$228+3>>0]<<24);
      $230 = ((($229)) + 4|0);
      $231 = HEAPU8[$230>>0]|(HEAPU8[$230+1>>0]<<8)|(HEAPU8[$230+2>>0]<<16)|(HEAPU8[$230+3>>0]<<24);
      $232 = ((($231)) + 4|0);
      $233 = HEAPU8[$232>>0]|(HEAPU8[$232+1>>0]<<8)|(HEAPU8[$232+2>>0]<<16)|(HEAPU8[$232+3>>0]<<24);
      $234 = ($233|0)==(25|0);
      if ($234) {
       break;
      }
     }
    }
    $235 = $0;
    $236 = (__execute_statement($235,$ast,1)|0);
    $result = $236;
    $237 = $result;
    $238 = ($237|0)!=(0);
    if ($238) {
     break L28;
    }
    $239 = HEAP32[$ast>>2]|0;
    $240 = ($239|0)!=(0|0);
    do {
     if ($240) {
      $241 = HEAP32[$ast>>2]|0;
      $242 = HEAPU8[$241>>0]|(HEAPU8[$241+1>>0]<<8)|(HEAPU8[$241+2>>0]<<16)|(HEAPU8[$241+3>>0]<<24);
      $obj = $242;
      $243 = $obj;
      $244 = HEAPU8[$243>>0]|(HEAPU8[$243+1>>0]<<8)|(HEAPU8[$243+2>>0]<<16)|(HEAPU8[$243+3>>0]<<24);
      $245 = ($244|0)==(20);
      if (!($245)) {
       $246 = $obj;
       $247 = HEAPU8[$246>>0]|(HEAPU8[$246+1>>0]<<8)|(HEAPU8[$246+2>>0]<<16)|(HEAPU8[$246+3>>0]<<24);
       $248 = ($247|0)==(21);
       if (!($248)) {
        $250 = HEAP32[$ast>>2]|0;
        $251 = ((($250)) + 4|0);
        $252 = HEAPU8[$251>>0]|(HEAPU8[$251+1>>0]<<8)|(HEAPU8[$251+2>>0]<<16)|(HEAPU8[$251+3>>0]<<24);
        HEAP32[$ast>>2] = $252;
        break;
       }
      }
      $249 = $0;
      (__execute_statement($249,$ast,1)|0);
     }
    } while(0);
    $253 = HEAP32[$ast>>2]|0;
    $254 = ($253|0)!=(0|0);
    if (!($254)) {
     break;
    }
    $255 = $multi_line;
    $256 = ($255<<24>>24)!=(0);
    if (!($256)) {
     $257 = HEAP32[$ast>>2]|0;
     $258 = HEAPU8[$257>>0]|(HEAPU8[$257+1>>0]<<8)|(HEAPU8[$257+2>>0]<<16)|(HEAPU8[$257+3>>0]<<24);
     $259 = HEAPU8[$258>>0]|(HEAPU8[$258+1>>0]<<8)|(HEAPU8[$258+2>>0]<<16)|(HEAPU8[$258+3>>0]<<24);
     $260 = ($259|0)==(19);
     if ($260) {
      $261 = HEAP32[$ast>>2]|0;
      $262 = HEAPU8[$261>>0]|(HEAPU8[$261+1>>0]<<8)|(HEAPU8[$261+2>>0]<<16)|(HEAPU8[$261+3>>0]<<24);
      $263 = ((($262)) + 4|0);
      $264 = HEAP8[$263>>0]|0;
      $265 = $264 << 24 >> 24;
      $266 = ($265|0)==(58);
      if ($266) {
       continue;
      }
     }
    }
    $267 = $multi_line;
    $268 = $267&255;
    $269 = ($268|0)!=(0);
    if (!($269)) {
     break;
    }
    $270 = HEAP32[$ast>>2]|0;
    $271 = ((($270)) + 8|0);
    $272 = HEAPU8[$271>>0]|(HEAPU8[$271+1>>0]<<8)|(HEAPU8[$271+2>>0]<<16)|(HEAPU8[$271+3>>0]<<24);
    $273 = ($272|0)!=(0|0);
    if (!($273)) {
     break;
    }
    $274 = HEAP32[$ast>>2]|0;
    $275 = ((($274)) + 8|0);
    $276 = HEAPU8[$275>>0]|(HEAPU8[$275+1>>0]<<8)|(HEAPU8[$275+2>>0]<<16)|(HEAPU8[$275+3>>0]<<24);
    $277 = HEAPU8[$276>>0]|(HEAPU8[$276+1>>0]<<8)|(HEAPU8[$276+2>>0]<<16)|(HEAPU8[$276+3>>0]<<24);
    $278 = HEAPU8[$277>>0]|(HEAPU8[$277+1>>0]<<8)|(HEAPU8[$277+2>>0]<<16)|(HEAPU8[$277+3>>0]<<24);
    $279 = ($278|0)==(8);
    if ($279) {
     $280 = HEAP32[$ast>>2]|0;
     $281 = ((($280)) + 8|0);
     $282 = HEAPU8[$281>>0]|(HEAPU8[$281+1>>0]<<8)|(HEAPU8[$281+2>>0]<<16)|(HEAPU8[$281+3>>0]<<24);
     $283 = HEAPU8[$282>>0]|(HEAPU8[$282+1>>0]<<8)|(HEAPU8[$282+2>>0]<<16)|(HEAPU8[$282+3>>0]<<24);
     $284 = ((($283)) + 4|0);
     $285 = HEAPU8[$284>>0]|(HEAPU8[$284+1>>0]<<8)|(HEAPU8[$284+2>>0]<<16)|(HEAPU8[$284+3>>0]<<24);
     $286 = ((($285)) + 4|0);
     $287 = HEAPU8[$286>>0]|(HEAPU8[$286+1>>0]<<8)|(HEAPU8[$286+2>>0]<<16)|(HEAPU8[$286+3>>0]<<24);
     $288 = ($287|0)==(25|0);
     if ($288) {
      break;
     }
    }
    $289 = HEAP32[$ast>>2]|0;
    $290 = ((($289)) + 8|0);
    $291 = HEAPU8[$290>>0]|(HEAPU8[$290+1>>0]<<8)|(HEAPU8[$290+2>>0]<<16)|(HEAPU8[$290+3>>0]<<24);
    $292 = HEAPU8[$291>>0]|(HEAPU8[$291+1>>0]<<8)|(HEAPU8[$291+2>>0]<<16)|(HEAPU8[$291+3>>0]<<24);
    $293 = HEAPU8[$292>>0]|(HEAPU8[$292+1>>0]<<8)|(HEAPU8[$292+2>>0]<<16)|(HEAPU8[$292+3>>0]<<24);
    $294 = ($293|0)==(8);
    if ($294) {
     $295 = HEAP32[$ast>>2]|0;
     $296 = ((($295)) + 8|0);
     $297 = HEAPU8[$296>>0]|(HEAPU8[$296+1>>0]<<8)|(HEAPU8[$296+2>>0]<<16)|(HEAPU8[$296+3>>0]<<24);
     $298 = HEAPU8[$297>>0]|(HEAPU8[$297+1>>0]<<8)|(HEAPU8[$297+2>>0]<<16)|(HEAPU8[$297+3>>0]<<24);
     $299 = ((($298)) + 4|0);
     $300 = HEAPU8[$299>>0]|(HEAPU8[$299+1>>0]<<8)|(HEAPU8[$299+2>>0]<<16)|(HEAPU8[$299+3>>0]<<24);
     $301 = ((($300)) + 4|0);
     $302 = HEAPU8[$301>>0]|(HEAPU8[$301+1>>0]<<8)|(HEAPU8[$301+2>>0]<<16)|(HEAPU8[$301+3>>0]<<24);
     $303 = ($302|0)==(26|0);
     if ($303) {
      break;
     }
    }
    $304 = HEAP32[$ast>>2]|0;
    $305 = ((($304)) + 8|0);
    $306 = HEAPU8[$305>>0]|(HEAPU8[$305+1>>0]<<8)|(HEAPU8[$305+2>>0]<<16)|(HEAPU8[$305+3>>0]<<24);
    $307 = HEAPU8[$306>>0]|(HEAPU8[$306+1>>0]<<8)|(HEAPU8[$306+2>>0]<<16)|(HEAPU8[$306+3>>0]<<24);
    $308 = HEAPU8[$307>>0]|(HEAPU8[$307+1>>0]<<8)|(HEAPU8[$307+2>>0]<<16)|(HEAPU8[$307+3>>0]<<24);
    $309 = ($308|0)==(8);
    if ($309) {
     $310 = HEAP32[$ast>>2]|0;
     $311 = ((($310)) + 8|0);
     $312 = HEAPU8[$311>>0]|(HEAPU8[$311+1>>0]<<8)|(HEAPU8[$311+2>>0]<<16)|(HEAPU8[$311+3>>0]<<24);
     $313 = HEAPU8[$312>>0]|(HEAPU8[$312+1>>0]<<8)|(HEAPU8[$312+2>>0]<<16)|(HEAPU8[$312+3>>0]<<24);
     $314 = ((($313)) + 4|0);
     $315 = HEAPU8[$314>>0]|(HEAPU8[$314+1>>0]<<8)|(HEAPU8[$314+2>>0]<<16)|(HEAPU8[$314+3>>0]<<24);
     $316 = ((($315)) + 4|0);
     $317 = HEAPU8[$316>>0]|(HEAPU8[$316+1>>0]<<8)|(HEAPU8[$316+2>>0]<<16)|(HEAPU8[$316+3>>0]<<24);
     $318 = ($317|0)==(27|0);
     $320 = $318;
    } else {
     $320 = 0;
    }
    $319 = $320 ^ 1;
    if (!($319)) {
     break;
    }
   }
   if ((label|0) == 45) {
    $205 = HEAP32[$ast>>2]|0;
    $206 = ((($205)) + 4|0);
    $207 = HEAPU8[$206>>0]|(HEAPU8[$206+1>>0]<<8)|(HEAPU8[$206+2>>0]<<16)|(HEAPU8[$206+3>>0]<<24);
    HEAP32[$ast>>2] = $207;
   }
   $321 = HEAP32[$ast>>2]|0;
   $322 = ($321|0)!=(0|0);
   if ($322) {
    $323 = HEAP32[$ast>>2]|0;
    $324 = HEAPU8[$323>>0]|(HEAPU8[$323+1>>0]<<8)|(HEAPU8[$323+2>>0]<<16)|(HEAPU8[$323+3>>0]<<24);
    $obj = $324;
    $325 = $obj;
    $326 = ($325|0)!=(0|0);
    if ($326) {
     $327 = $obj;
     $328 = HEAPU8[$327>>0]|(HEAPU8[$327+1>>0]<<8)|(HEAPU8[$327+2>>0]<<16)|(HEAPU8[$327+3>>0]<<24);
     $329 = ($328|0)==(22);
     if ($329) {
      break;
     }
    }
    $330 = $0;
    $331 = ((($330)) + 118|0);
    HEAP8[$331>>0]=0&255;HEAP8[$331+1>>0]=(0>>8)&255;HEAP8[$331+2>>0]=(0>>16)&255;HEAP8[$331+3>>0]=0>>24;
    $332 = $0;
    $333 = (__skip_to($332,$ast,0,22)|0);
    $result = $333;
   }
  }
  else if ((label|0) == 84) {
   $374 = $multi_line;
   $375 = $374&255;
   $376 = ($375|0)!=(0);
   $377 = HEAP32[$ast>>2]|0;
   $378 = ($377|0)!=(0|0);
   $or$cond10 = $376 & $378;
   if ($or$cond10) {
    $379 = HEAP32[$ast>>2]|0;
    $380 = HEAPU8[$379>>0]|(HEAPU8[$379+1>>0]<<8)|(HEAPU8[$379+2>>0]<<16)|(HEAPU8[$379+3>>0]<<24);
    $381 = HEAPU8[$380>>0]|(HEAPU8[$380+1>>0]<<8)|(HEAPU8[$380+2>>0]<<16)|(HEAPU8[$380+3>>0]<<24);
    $382 = ($381|0)==(8);
    if ($382) {
     $383 = HEAP32[$ast>>2]|0;
     $384 = HEAPU8[$383>>0]|(HEAPU8[$383+1>>0]<<8)|(HEAPU8[$383+2>>0]<<16)|(HEAPU8[$383+3>>0]<<24);
     $385 = ((($384)) + 4|0);
     $386 = HEAPU8[$385>>0]|(HEAPU8[$385+1>>0]<<8)|(HEAPU8[$385+2>>0]<<16)|(HEAPU8[$385+3>>0]<<24);
     $387 = ((($386)) + 4|0);
     $388 = HEAPU8[$387>>0]|(HEAPU8[$387+1>>0]<<8)|(HEAPU8[$387+2>>0]<<16)|(HEAPU8[$387+3>>0]<<24);
     $389 = ($388|0)==(27|0);
     if ($389) {
      break;
     }
    }
   }
   $390 = $0;
   $391 = (__skip_to($390,$ast,26,22)|0);
   $result = $391;
   $392 = $result;
   $393 = ($392|0)!=(0);
   if (!($393)) {
    $394 = HEAP32[$ast>>2]|0;
    $395 = HEAPU8[$394>>0]|(HEAPU8[$394+1>>0]<<8)|(HEAPU8[$394+2>>0]<<16)|(HEAPU8[$394+3>>0]<<24);
    $obj = $395;
    $396 = $obj;
    $397 = ($396|0)!=(0|0);
    if ($397) {
     $398 = $obj;
     $399 = HEAPU8[$398>>0]|(HEAPU8[$398+1>>0]<<8)|(HEAPU8[$398+2>>0]<<16)|(HEAPU8[$398+3>>0]<<24);
     $400 = ($399|0)==(22);
     if ($400) {
      break;
     }
    }
    $skip = 1;
    $401 = $obj;
    $402 = HEAPU8[$401>>0]|(HEAPU8[$401+1>>0]<<8)|(HEAPU8[$401+2>>0]<<16)|(HEAPU8[$401+3>>0]<<24);
    $403 = ($402|0)==(8);
    if ($403) {
     $404 = $obj;
     $405 = ((($404)) + 4|0);
     $406 = HEAPU8[$405>>0]|(HEAPU8[$405+1>>0]<<8)|(HEAPU8[$405+2>>0]<<16)|(HEAPU8[$405+3>>0]<<24);
     $407 = ((($406)) + 4|0);
     $408 = HEAPU8[$407>>0]|(HEAPU8[$407+1>>0]<<8)|(HEAPU8[$407+2>>0]<<16)|(HEAPU8[$407+3>>0]<<24);
     $409 = ($408|0)==(26|0);
     if ($409) {
      while(1) {
       $la = 0;
       $441 = HEAP32[$ast>>2]|0;
       $442 = ((($441)) + 8|0);
       $443 = HEAPU8[$442>>0]|(HEAPU8[$442+1>>0]<<8)|(HEAPU8[$442+2>>0]<<16)|(HEAPU8[$442+3>>0]<<24);
       HEAP32[$ast>>2] = $443;
       $la = $443;
       while(1) {
        $444 = HEAP32[$ast>>2]|0;
        $445 = ($444|0)!=(0|0);
        if ($445) {
         $446 = HEAP32[$ast>>2]|0;
         $447 = HEAPU8[$446>>0]|(HEAPU8[$446+1>>0]<<8)|(HEAPU8[$446+2>>0]<<16)|(HEAPU8[$446+3>>0]<<24);
         $448 = ($447|0)!=(0|0);
         if ($448) {
          $449 = HEAP32[$ast>>2]|0;
          $450 = HEAPU8[$449>>0]|(HEAPU8[$449+1>>0]<<8)|(HEAPU8[$449+2>>0]<<16)|(HEAPU8[$449+3>>0]<<24);
          $451 = HEAPU8[$450>>0]|(HEAPU8[$450+1>>0]<<8)|(HEAPU8[$450+2>>0]<<16)|(HEAPU8[$450+3>>0]<<24);
          $452 = ($451|0)==(22);
          $583 = $452;
         } else {
          $583 = 0;
         }
        } else {
         $583 = 0;
        }
        $453 = HEAP32[$ast>>2]|0;
        if (!($583)) {
         break;
        }
        $454 = ((($453)) + 8|0);
        $455 = HEAPU8[$454>>0]|(HEAPU8[$454+1>>0]<<8)|(HEAPU8[$454+2>>0]<<16)|(HEAPU8[$454+3>>0]<<24);
        HEAP32[$ast>>2] = $455;
        $456 = HEAP32[$ast>>2]|0;
        $457 = ($456|0)!=(0|0);
        if (!($457)) {
         continue;
        }
        $458 = HEAP32[$ast>>2]|0;
        $la = $458;
       }
       $459 = ($453|0)!=(0|0);
       if (!($459)) {
        break;
       }
       $492 = HEAP32[$ast>>2]|0;
       $493 = ($492|0)!=(0|0);
       if ($493) {
        $494 = HEAP32[$ast>>2]|0;
        $495 = HEAPU8[$494>>0]|(HEAPU8[$494+1>>0]<<8)|(HEAPU8[$494+2>>0]<<16)|(HEAPU8[$494+3>>0]<<24);
        $496 = HEAPU8[$495>>0]|(HEAPU8[$495+1>>0]<<8)|(HEAPU8[$495+2>>0]<<16)|(HEAPU8[$495+3>>0]<<24);
        $497 = ($496|0)==(8);
        if ($497) {
         $498 = HEAP32[$ast>>2]|0;
         $499 = HEAPU8[$498>>0]|(HEAPU8[$498+1>>0]<<8)|(HEAPU8[$498+2>>0]<<16)|(HEAPU8[$498+3>>0]<<24);
         $500 = ((($499)) + 4|0);
         $501 = HEAPU8[$500>>0]|(HEAPU8[$500+1>>0]<<8)|(HEAPU8[$500+2>>0]<<16)|(HEAPU8[$500+3>>0]<<24);
         $502 = ((($501)) + 4|0);
         $503 = HEAPU8[$502>>0]|(HEAPU8[$502+1>>0]<<8)|(HEAPU8[$502+2>>0]<<16)|(HEAPU8[$502+3>>0]<<24);
         $504 = ($503|0)==(27|0);
         if ($504) {
          label = 115;
          break;
         }
        }
       }
       $508 = $0;
       $509 = (__execute_statement($508,$ast,1)|0);
       $result = $509;
       $510 = $result;
       $511 = ($510|0)!=(0);
       if ($511) {
        break L28;
       }
       $512 = HEAP32[$ast>>2]|0;
       $513 = ($512|0)!=(0|0);
       if ($513) {
        $514 = HEAP32[$ast>>2]|0;
        $515 = ((($514)) + 4|0);
        $516 = HEAPU8[$515>>0]|(HEAPU8[$515+1>>0]<<8)|(HEAPU8[$515+2>>0]<<16)|(HEAPU8[$515+3>>0]<<24);
        HEAP32[$ast>>2] = $516;
       }
       $517 = HEAP32[$ast>>2]|0;
       $518 = ($517|0)!=(0|0);
       if (!($518)) {
        break L28;
       }
       $519 = $multi_line;
       $520 = ($519<<24>>24)!=(0);
       if (!($520)) {
        $521 = HEAP32[$ast>>2]|0;
        $522 = HEAPU8[$521>>0]|(HEAPU8[$521+1>>0]<<8)|(HEAPU8[$521+2>>0]<<16)|(HEAPU8[$521+3>>0]<<24);
        $523 = HEAPU8[$522>>0]|(HEAPU8[$522+1>>0]<<8)|(HEAPU8[$522+2>>0]<<16)|(HEAPU8[$522+3>>0]<<24);
        $524 = ($523|0)==(19);
        if ($524) {
         $525 = HEAP32[$ast>>2]|0;
         $526 = HEAPU8[$525>>0]|(HEAPU8[$525+1>>0]<<8)|(HEAPU8[$525+2>>0]<<16)|(HEAPU8[$525+3>>0]<<24);
         $527 = ((($526)) + 4|0);
         $528 = HEAP8[$527>>0]|0;
         $529 = $528 << 24 >> 24;
         $530 = ($529|0)==(58);
         if ($530) {
          continue;
         }
        }
       }
       $531 = $multi_line;
       $532 = $531&255;
       $533 = ($532|0)!=(0);
       if (!($533)) {
        break L28;
       }
       $534 = HEAP32[$ast>>2]|0;
       $535 = ((($534)) + 8|0);
       $536 = HEAPU8[$535>>0]|(HEAPU8[$535+1>>0]<<8)|(HEAPU8[$535+2>>0]<<16)|(HEAPU8[$535+3>>0]<<24);
       $537 = HEAPU8[$536>>0]|(HEAPU8[$536+1>>0]<<8)|(HEAPU8[$536+2>>0]<<16)|(HEAPU8[$536+3>>0]<<24);
       $538 = HEAPU8[$537>>0]|(HEAPU8[$537+1>>0]<<8)|(HEAPU8[$537+2>>0]<<16)|(HEAPU8[$537+3>>0]<<24);
       $539 = ($538|0)==(8);
       if ($539) {
        $540 = HEAP32[$ast>>2]|0;
        $541 = ((($540)) + 8|0);
        $542 = HEAPU8[$541>>0]|(HEAPU8[$541+1>>0]<<8)|(HEAPU8[$541+2>>0]<<16)|(HEAPU8[$541+3>>0]<<24);
        $543 = HEAPU8[$542>>0]|(HEAPU8[$542+1>>0]<<8)|(HEAPU8[$542+2>>0]<<16)|(HEAPU8[$542+3>>0]<<24);
        $544 = ((($543)) + 4|0);
        $545 = HEAPU8[$544>>0]|(HEAPU8[$544+1>>0]<<8)|(HEAPU8[$544+2>>0]<<16)|(HEAPU8[$544+3>>0]<<24);
        $546 = ((($545)) + 4|0);
        $547 = HEAPU8[$546>>0]|(HEAPU8[$546+1>>0]<<8)|(HEAPU8[$546+2>>0]<<16)|(HEAPU8[$546+3>>0]<<24);
        $548 = ($547|0)==(27|0);
        $550 = $548;
       } else {
        $550 = 0;
       }
       $549 = $550 ^ 1;
       if (!($549)) {
        break L28;
       }
      }
      if ((label|0) == 115) {
       $505 = HEAP32[$ast>>2]|0;
       $506 = ((($505)) + 4|0);
       $507 = HEAPU8[$506>>0]|(HEAPU8[$506+1>>0]<<8)|(HEAPU8[$506+2>>0]<<16)|(HEAPU8[$506+3>>0]<<24);
       HEAP32[$ast>>2] = $507;
       break;
      }
      $460 = $0;
      (_mb_get_last_error($460,0,0,0,0)|0);
      $461 = $la;
      $462 = ($461|0)!=(0|0);
      if ($462) {
       $463 = $la;
       $464 = HEAPU8[$463>>0]|(HEAPU8[$463+1>>0]<<8)|(HEAPU8[$463+2>>0]<<16)|(HEAPU8[$463+3>>0]<<24);
       $465 = ($464|0)!=(0|0);
       if ($465) {
        $466 = $0;
        $467 = $0;
        $468 = ((($467)) + 67|0);
        $469 = HEAPU8[$468>>0]|(HEAPU8[$468+1>>0]<<8)|(HEAPU8[$468+2>>0]<<16)|(HEAPU8[$468+3>>0]<<24);
        $470 = (__set_current_error($466,41,$469)|0);
        $471 = ($470<<24>>24)!=(0);
        if (!($471)) {
         break;
        }
        $472 = $0;
        $473 = $la;
        $474 = HEAPU8[$473>>0]|(HEAPU8[$473+1>>0]<<8)|(HEAPU8[$473+2>>0]<<16)|(HEAPU8[$473+3>>0]<<24);
        $475 = ((($474)) + 9|0);
        $476 = HEAPU8[$475>>0]|(HEAPU8[$475+1>>0]<<8)|(HEAPU8[$475+2>>0]<<16)|(HEAPU8[$475+3>>0]<<24);
        $477 = $la;
        $478 = HEAPU8[$477>>0]|(HEAPU8[$477+1>>0]<<8)|(HEAPU8[$477+2>>0]<<16)|(HEAPU8[$477+3>>0]<<24);
        $479 = ((($478)) + 13|0);
        $480 = HEAPU8[$479>>0]|(HEAPU8[$479+1>>0]<<8);
        $481 = $la;
        $482 = HEAPU8[$481>>0]|(HEAPU8[$481+1>>0]<<8)|(HEAPU8[$481+2>>0]<<16)|(HEAPU8[$481+3>>0]<<24);
        $483 = ((($482)) + 15|0);
        $484 = HEAPU8[$483>>0]|(HEAPU8[$483+1>>0]<<8);
        __set_error_pos($472,$476,$480,$484);
        $result = 3;
        break;
       }
      }
      $485 = $0;
      $486 = $0;
      $487 = ((($486)) + 67|0);
      $488 = HEAPU8[$487>>0]|(HEAPU8[$487+1>>0]<<8)|(HEAPU8[$487+2>>0]<<16)|(HEAPU8[$487+3>>0]<<24);
      $489 = (__set_current_error($485,41,$488)|0);
      $490 = ($489<<24>>24)!=(0);
      if (!($490)) {
       break;
      }
      $491 = $0;
      __set_error_pos($491,0,0,0);
      $result = 3;
      break;
     }
    }
    $410 = HEAP32[$ast>>2]|0;
    $411 = ($410|0)!=(0|0);
    if ($411) {
     $412 = HEAP32[$ast>>2]|0;
     $413 = HEAPU8[$412>>0]|(HEAPU8[$412+1>>0]<<8)|(HEAPU8[$412+2>>0]<<16)|(HEAPU8[$412+3>>0]<<24);
     $414 = ($413|0)!=(0|0);
     if ($414) {
      $415 = $0;
      $416 = $0;
      $417 = ((($416)) + 67|0);
      $418 = HEAPU8[$417>>0]|(HEAPU8[$417+1>>0]<<8)|(HEAPU8[$417+2>>0]<<16)|(HEAPU8[$417+3>>0]<<24);
      $419 = (__set_current_error($415,40,$418)|0);
      $420 = ($419<<24>>24)!=(0);
      if (!($420)) {
       break;
      }
      $421 = $0;
      $422 = HEAP32[$ast>>2]|0;
      $423 = HEAPU8[$422>>0]|(HEAPU8[$422+1>>0]<<8)|(HEAPU8[$422+2>>0]<<16)|(HEAPU8[$422+3>>0]<<24);
      $424 = ((($423)) + 9|0);
      $425 = HEAPU8[$424>>0]|(HEAPU8[$424+1>>0]<<8)|(HEAPU8[$424+2>>0]<<16)|(HEAPU8[$424+3>>0]<<24);
      $426 = HEAP32[$ast>>2]|0;
      $427 = HEAPU8[$426>>0]|(HEAPU8[$426+1>>0]<<8)|(HEAPU8[$426+2>>0]<<16)|(HEAPU8[$426+3>>0]<<24);
      $428 = ((($427)) + 13|0);
      $429 = HEAPU8[$428>>0]|(HEAPU8[$428+1>>0]<<8);
      $430 = HEAP32[$ast>>2]|0;
      $431 = HEAPU8[$430>>0]|(HEAPU8[$430+1>>0]<<8)|(HEAPU8[$430+2>>0]<<16)|(HEAPU8[$430+3>>0]<<24);
      $432 = ((($431)) + 15|0);
      $433 = HEAPU8[$432>>0]|(HEAPU8[$432+1>>0]<<8);
      __set_error_pos($421,$425,$429,$433);
      $result = 3;
      break;
     }
    }
    $434 = $0;
    $435 = $0;
    $436 = ((($435)) + 67|0);
    $437 = HEAPU8[$436>>0]|(HEAPU8[$436+1>>0]<<8)|(HEAPU8[$436+2>>0]<<16)|(HEAPU8[$436+3>>0]<<24);
    $438 = (__set_current_error($434,40,$437)|0);
    $439 = ($438<<24>>24)!=(0);
    if ($439) {
     $440 = $0;
     __set_error_pos($440,0,0,0);
     $result = 3;
    }
   }
  }
 } while(0);
 $551 = $result;
 $552 = ($551|0)==(103);
 if ($552) {
  $553 = HEAP32[$ast>>2]|0;
  $554 = ($553|0)!=(0|0);
  if ($554) {
   $555 = HEAP32[$ast>>2]|0;
   $556 = ((($555)) + 4|0);
   $557 = HEAPU8[$556>>0]|(HEAPU8[$556+1>>0]<<8)|(HEAPU8[$556+2>>0]<<16)|(HEAPU8[$556+3>>0]<<24);
   HEAP32[$ast>>2] = $557;
  }
 } else {
  $558 = $multi_line;
  $559 = ($558<<24>>24)!=(0);
  if ($559) {
   $ret = 0;
   $560 = $skip;
   $561 = ($560<<24>>24)!=(0);
   if ($561) {
    $562 = $0;
    $563 = (__skip_struct($562,$ast,23,24,27)|0);
    $ret = $563;
   }
   $564 = $result;
   $565 = ($564|0)!=(6);
   $566 = $result;
   $567 = ($566|0)!=(101);
   $or$cond15 = $565 & $567;
   $568 = $result;
   $569 = ($568|0)!=(102);
   $or$cond17 = $or$cond15 & $569;
   $570 = $result;
   $571 = ($570|0)!=(103);
   $or$cond19 = $or$cond17 & $571;
   $572 = $ret;
   $573 = ($572|0)!=(0);
   $or$cond23 = $or$cond19 & $573;
   if ($or$cond23) {
    $574 = $ret;
    $result = $574;
   }
  }
 }
 $575 = HEAP32[$ast>>2]|0;
 $576 = $1;
 HEAP32[$576>>2] = $575;
 $577 = HEAP32[$val>>2]|0;
 $578 = HEAPU8[$577>>0]|(HEAPU8[$577+1>>0]<<8)|(HEAPU8[$577+2>>0]<<16)|(HEAPU8[$577+3>>0]<<24);
 switch ($578|0) {
 case 14: case 12:  {
  $579 = HEAP32[$val>>2]|0;
  (__destroy_object_capsule_only($579,0)|0);
  $581 = $result;
  STACKTOP = sp;return ($581|0);
  break;
 }
 case 1:  {
  $581 = $result;
  STACKTOP = sp;return ($581|0);
  break;
 }
 default: {
  $580 = HEAP32[$val>>2]|0;
  (__destroy_object($580,0)|0);
  $581 = $result;
  STACKTOP = sp;return ($581|0);
 }
 }
 return (0)|0;
}
function __core_then($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $ast = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $l;
 $result = 0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 $ast = $3;
 $4 = $ast;
 $5 = ($4|0)!=(0|0);
 if ($5) {
  $6 = $ast;
  $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
  $8 = ($7|0)!=(0|0);
  if ($8) {
   $9 = $0;
   $10 = (__set_current_error($9,50,6361)|0);
   $11 = ($10<<24>>24)!=(0);
   if (!($11)) {
    $29 = $result;
    STACKTOP = sp;return ($29|0);
   }
   $12 = $0;
   $13 = $ast;
   $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
   $15 = ((($14)) + 9|0);
   $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
   $17 = $ast;
   $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
   $19 = ((($18)) + 13|0);
   $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8);
   $21 = $ast;
   $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
   $23 = ((($22)) + 15|0);
   $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8);
   __set_error_pos($12,$16,$20,$24);
   $result = 3;
   $29 = $result;
   STACKTOP = sp;return ($29|0);
  }
 }
 $25 = $0;
 $26 = (__set_current_error($25,50,6361)|0);
 $27 = ($26<<24>>24)!=(0);
 if (!($27)) {
  $29 = $result;
  STACKTOP = sp;return ($29|0);
 }
 $28 = $0;
 __set_error_pos($28,0,0,0);
 $result = 3;
 $29 = $result;
 STACKTOP = sp;return ($29|0);
}
function __core_elseif($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $ast = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $l;
 $result = 0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 $ast = $3;
 $4 = $ast;
 $5 = ($4|0)!=(0|0);
 if ($5) {
  $6 = $ast;
  $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
  $8 = ($7|0)!=(0|0);
  if ($8) {
   $9 = $0;
   $10 = (__set_current_error($9,50,6348)|0);
   $11 = ($10<<24>>24)!=(0);
   if (!($11)) {
    $29 = $result;
    STACKTOP = sp;return ($29|0);
   }
   $12 = $0;
   $13 = $ast;
   $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
   $15 = ((($14)) + 9|0);
   $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
   $17 = $ast;
   $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
   $19 = ((($18)) + 13|0);
   $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8);
   $21 = $ast;
   $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
   $23 = ((($22)) + 15|0);
   $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8);
   __set_error_pos($12,$16,$20,$24);
   $result = 3;
   $29 = $result;
   STACKTOP = sp;return ($29|0);
  }
 }
 $25 = $0;
 $26 = (__set_current_error($25,50,6348)|0);
 $27 = ($26<<24>>24)!=(0);
 if (!($27)) {
  $29 = $result;
  STACKTOP = sp;return ($29|0);
 }
 $28 = $0;
 __set_error_pos($28,0,0,0);
 $result = 3;
 $29 = $result;
 STACKTOP = sp;return ($29|0);
}
function __core_else($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $ast = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $l;
 $result = 0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 $ast = $3;
 $4 = $ast;
 $5 = ($4|0)!=(0|0);
 if ($5) {
  $6 = $ast;
  $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
  $8 = ($7|0)!=(0|0);
  if ($8) {
   $9 = $0;
   $10 = (__set_current_error($9,50,6337)|0);
   $11 = ($10<<24>>24)!=(0);
   if (!($11)) {
    $29 = $result;
    STACKTOP = sp;return ($29|0);
   }
   $12 = $0;
   $13 = $ast;
   $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
   $15 = ((($14)) + 9|0);
   $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
   $17 = $ast;
   $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
   $19 = ((($18)) + 13|0);
   $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8);
   $21 = $ast;
   $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
   $23 = ((($22)) + 15|0);
   $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8);
   __set_error_pos($12,$16,$20,$24);
   $result = 3;
   $29 = $result;
   STACKTOP = sp;return ($29|0);
  }
 }
 $25 = $0;
 $26 = (__set_current_error($25,50,6337)|0);
 $27 = ($26<<24>>24)!=(0);
 if (!($27)) {
  $29 = $result;
  STACKTOP = sp;return ($29|0);
 }
 $28 = $0;
 __set_error_pos($28,0,0,0);
 $result = 3;
 $29 = $result;
 STACKTOP = sp;return ($29|0);
}
function __core_endif($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $ast = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $l;
 $result = 0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 $ast = $3;
 $4 = $ast;
 $5 = ($4|0)!=(0|0);
 if ($5) {
  $6 = $ast;
  $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
  $8 = ($7|0)!=(0|0);
  if ($8) {
   $9 = $0;
   $10 = (__set_current_error($9,50,6325)|0);
   $11 = ($10<<24>>24)!=(0);
   if (!($11)) {
    $29 = $result;
    STACKTOP = sp;return ($29|0);
   }
   $12 = $0;
   $13 = $ast;
   $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
   $15 = ((($14)) + 9|0);
   $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
   $17 = $ast;
   $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
   $19 = ((($18)) + 13|0);
   $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8);
   $21 = $ast;
   $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
   $23 = ((($22)) + 15|0);
   $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8);
   __set_error_pos($12,$16,$20,$24);
   $result = 3;
   $29 = $result;
   STACKTOP = sp;return ($29|0);
  }
 }
 $25 = $0;
 $26 = (__set_current_error($25,50,6325)|0);
 $27 = ($26<<24>>24)!=(0);
 if (!($27)) {
  $29 = $result;
  STACKTOP = sp;return ($29|0);
 }
 $28 = $0;
 __set_error_pos($28,0,0,0);
 $result = 3;
 $29 = $result;
 STACKTOP = sp;return ($29|0);
}
function __core_for($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $9 = 0, $ast = 0, $obj = 0, $or$cond = 0, $result = 0, $var_loop = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ast = sp + 8|0;
 $0 = $s;
 $1 = $l;
 $result = 0;
 HEAP32[$ast>>2] = 0;
 $obj = 0;
 $var_loop = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),16106,(5898|0));
  // unreachable;
 }
 $6 = $1;
 $7 = HEAP32[$6>>2]|0;
 HEAP32[$ast>>2] = $7;
 $8 = HEAP32[$ast>>2]|0;
 $9 = ((($8)) + 8|0);
 $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
 HEAP32[$ast>>2] = $10;
 $11 = HEAP32[$ast>>2]|0;
 $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
 $obj = $12;
 $13 = $obj;
 $14 = ($13|0)!=(0|0);
 if ($14) {
  $15 = $obj;
  $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
  $17 = ($16|0)==(9);
  if ($17) {
   $49 = $obj;
   $50 = ((($49)) + 4|0);
   $51 = HEAPU8[$50>>0]|(HEAPU8[$50+1>>0]<<8)|(HEAPU8[$50+2>>0]<<16)|(HEAPU8[$50+3>>0]<<24);
   $var_loop = $51;
   $52 = HEAP32[$ast>>2]|0;
   $53 = ($52|0)!=(0|0);
   if ($53) {
    $54 = HEAP32[$ast>>2]|0;
    $55 = ((($54)) + 8|0);
    $56 = HEAPU8[$55>>0]|(HEAPU8[$55+1>>0]<<8)|(HEAPU8[$55+2>>0]<<16)|(HEAPU8[$55+3>>0]<<24);
    $57 = ($56|0)!=(0|0);
    if ($57) {
     $58 = HEAP32[$ast>>2]|0;
     $59 = ((($58)) + 8|0);
     $60 = HEAPU8[$59>>0]|(HEAPU8[$59+1>>0]<<8)|(HEAPU8[$59+2>>0]<<16)|(HEAPU8[$59+3>>0]<<24);
     $61 = HEAPU8[$60>>0]|(HEAPU8[$60+1>>0]<<8)|(HEAPU8[$60+2>>0]<<16)|(HEAPU8[$60+3>>0]<<24);
     $62 = HEAPU8[$61>>0]|(HEAPU8[$61+1>>0]<<8)|(HEAPU8[$61+2>>0]<<16)|(HEAPU8[$61+3>>0]<<24);
     $63 = ($62|0)==(8);
     if ($63) {
      $64 = HEAP32[$ast>>2]|0;
      $65 = ((($64)) + 8|0);
      $66 = HEAPU8[$65>>0]|(HEAPU8[$65+1>>0]<<8)|(HEAPU8[$65+2>>0]<<16)|(HEAPU8[$65+3>>0]<<24);
      $67 = HEAPU8[$66>>0]|(HEAPU8[$66+1>>0]<<8)|(HEAPU8[$66+2>>0]<<16)|(HEAPU8[$66+3>>0]<<24);
      $68 = ((($67)) + 4|0);
      $69 = HEAPU8[$68>>0]|(HEAPU8[$68+1>>0]<<8)|(HEAPU8[$68+2>>0]<<16)|(HEAPU8[$68+3>>0]<<24);
      $70 = ((($69)) + 4|0);
      $71 = HEAPU8[$70>>0]|(HEAPU8[$70+1>>0]<<8)|(HEAPU8[$70+2>>0]<<16)|(HEAPU8[$70+3>>0]<<24);
      $72 = ($71|0)==(29|0);
      if ($72) {
       $73 = $0;
       $74 = $var_loop;
       $75 = (__execute_ranged_for_loop($73,$ast,$74)|0);
       $result = $75;
       $79 = HEAP32[$ast>>2]|0;
       $80 = $1;
       HEAP32[$80>>2] = $79;
       $81 = $result;
       STACKTOP = sp;return ($81|0);
      }
     }
    }
   }
   $76 = $0;
   $77 = $var_loop;
   $78 = (__execute_normal_for_loop($76,$ast,$77)|0);
   $result = $78;
   $79 = HEAP32[$ast>>2]|0;
   $80 = $1;
   HEAP32[$80>>2] = $79;
   $81 = $result;
   STACKTOP = sp;return ($81|0);
  }
 }
 $18 = HEAP32[$ast>>2]|0;
 $19 = ($18|0)!=(0|0);
 if ($19) {
  $20 = HEAP32[$ast>>2]|0;
  $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
  $22 = ($21|0)!=(0|0);
  if ($22) {
   $23 = $0;
   $24 = $0;
   $25 = ((($24)) + 67|0);
   $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
   $27 = (__set_current_error($23,45,$26)|0);
   $28 = ($27<<24>>24)!=(0);
   if (!($28)) {
    $79 = HEAP32[$ast>>2]|0;
    $80 = $1;
    HEAP32[$80>>2] = $79;
    $81 = $result;
    STACKTOP = sp;return ($81|0);
   }
   $29 = $0;
   $30 = HEAP32[$ast>>2]|0;
   $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8)|(HEAPU8[$30+2>>0]<<16)|(HEAPU8[$30+3>>0]<<24);
   $32 = ((($31)) + 9|0);
   $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
   $34 = HEAP32[$ast>>2]|0;
   $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
   $36 = ((($35)) + 13|0);
   $37 = HEAPU8[$36>>0]|(HEAPU8[$36+1>>0]<<8);
   $38 = HEAP32[$ast>>2]|0;
   $39 = HEAPU8[$38>>0]|(HEAPU8[$38+1>>0]<<8)|(HEAPU8[$38+2>>0]<<16)|(HEAPU8[$38+3>>0]<<24);
   $40 = ((($39)) + 15|0);
   $41 = HEAPU8[$40>>0]|(HEAPU8[$40+1>>0]<<8);
   __set_error_pos($29,$33,$37,$41);
   $result = 3;
   $79 = HEAP32[$ast>>2]|0;
   $80 = $1;
   HEAP32[$80>>2] = $79;
   $81 = $result;
   STACKTOP = sp;return ($81|0);
  }
 }
 $42 = $0;
 $43 = $0;
 $44 = ((($43)) + 67|0);
 $45 = HEAPU8[$44>>0]|(HEAPU8[$44+1>>0]<<8)|(HEAPU8[$44+2>>0]<<16)|(HEAPU8[$44+3>>0]<<24);
 $46 = (__set_current_error($42,45,$45)|0);
 $47 = ($46<<24>>24)!=(0);
 if (!($47)) {
  $79 = HEAP32[$ast>>2]|0;
  $80 = $1;
  HEAP32[$80>>2] = $79;
  $81 = $result;
  STACKTOP = sp;return ($81|0);
 }
 $48 = $0;
 __set_error_pos($48,0,0,0);
 $result = 3;
 $79 = HEAP32[$ast>>2]|0;
 $80 = $1;
 HEAP32[$80>>2] = $79;
 $81 = $result;
 STACKTOP = sp;return ($81|0);
}
function __core_to($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $ast = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $l;
 $result = 0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 $ast = $3;
 $4 = $ast;
 $5 = ($4|0)!=(0|0);
 if ($5) {
  $6 = $ast;
  $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
  $8 = ($7|0)!=(0|0);
  if ($8) {
   $9 = $0;
   $10 = (__set_current_error($9,50,5889)|0);
   $11 = ($10<<24>>24)!=(0);
   if (!($11)) {
    $29 = $result;
    STACKTOP = sp;return ($29|0);
   }
   $12 = $0;
   $13 = $ast;
   $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
   $15 = ((($14)) + 9|0);
   $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
   $17 = $ast;
   $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
   $19 = ((($18)) + 13|0);
   $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8);
   $21 = $ast;
   $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
   $23 = ((($22)) + 15|0);
   $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8);
   __set_error_pos($12,$16,$20,$24);
   $result = 3;
   $29 = $result;
   STACKTOP = sp;return ($29|0);
  }
 }
 $25 = $0;
 $26 = (__set_current_error($25,50,5889)|0);
 $27 = ($26<<24>>24)!=(0);
 if (!($27)) {
  $29 = $result;
  STACKTOP = sp;return ($29|0);
 }
 $28 = $0;
 __set_error_pos($28,0,0,0);
 $result = 3;
 $29 = $result;
 STACKTOP = sp;return ($29|0);
}
function __core_step($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $ast = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $l;
 $result = 0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 $ast = $3;
 $4 = $ast;
 $5 = ($4|0)!=(0|0);
 if ($5) {
  $6 = $ast;
  $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
  $8 = ($7|0)!=(0|0);
  if ($8) {
   $9 = $0;
   $10 = (__set_current_error($9,50,5878)|0);
   $11 = ($10<<24>>24)!=(0);
   if (!($11)) {
    $29 = $result;
    STACKTOP = sp;return ($29|0);
   }
   $12 = $0;
   $13 = $ast;
   $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
   $15 = ((($14)) + 9|0);
   $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
   $17 = $ast;
   $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
   $19 = ((($18)) + 13|0);
   $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8);
   $21 = $ast;
   $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
   $23 = ((($22)) + 15|0);
   $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8);
   __set_error_pos($12,$16,$20,$24);
   $result = 3;
   $29 = $result;
   STACKTOP = sp;return ($29|0);
  }
 }
 $25 = $0;
 $26 = (__set_current_error($25,50,5878)|0);
 $27 = ($26<<24>>24)!=(0);
 if (!($27)) {
  $29 = $result;
  STACKTOP = sp;return ($29|0);
 }
 $28 = $0;
 __set_error_pos($28,0,0,0);
 $result = 3;
 $29 = $result;
 STACKTOP = sp;return ($29|0);
}
function __core_next($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $ast = 0, $obj = 0, $or$cond = 0, $result = 0, $running = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $l;
 $result = 0;
 $ast = 0;
 $obj = 0;
 $running = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),16169,(5867|0));
  // unreachable;
 }
 $6 = $0;
 $7 = ((($6)) + 75|0);
 $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
 $running = $8;
 $9 = $1;
 $10 = HEAP32[$9>>2]|0;
 $ast = $10;
 $result = 102;
 $11 = $ast;
 $12 = ((($11)) + 8|0);
 $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
 $ast = $13;
 $14 = $ast;
 $15 = ($14|0)!=(0|0);
 if ($15) {
  $16 = $ast;
  $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
  $obj = $17;
 }
 $18 = $obj;
 $19 = ($18|0)!=(0|0);
 if (!($19)) {
  $28 = $ast;
  $29 = $1;
  HEAP32[$29>>2] = $28;
  $30 = $result;
  STACKTOP = sp;return ($30|0);
 }
 $20 = $obj;
 $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
 $22 = ($21|0)==(9);
 if (!($22)) {
  $28 = $ast;
  $29 = $1;
  HEAP32[$29>>2] = $28;
  $30 = $result;
  STACKTOP = sp;return ($30|0);
 }
 $23 = $obj;
 $24 = ((($23)) + 4|0);
 $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
 $26 = $running;
 $27 = ((($26)) + 16|0);
 HEAP8[$27>>0]=$25&255;HEAP8[$27+1>>0]=($25>>8)&255;HEAP8[$27+2>>0]=($25>>16)&255;HEAP8[$27+3>>0]=$25>>24;
 $28 = $ast;
 $29 = $1;
 HEAP32[$29>>2] = $28;
 $30 = $result;
 STACKTOP = sp;return ($30|0);
}
function __core_while($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $ast = 0, $loop_begin_node = 0, $loop_cond = 0, $loop_cond_ptr = 0, $obj = 0, $or$cond = 0, $or$cond3 = 0, $result = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ast = sp + 12|0;
 $loop_cond = sp + 28|0;
 $loop_cond_ptr = sp;
 $0 = $s;
 $1 = $l;
 $result = 0;
 HEAP32[$ast>>2] = 0;
 $loop_begin_node = 0;
 $obj = 0;
 HEAP32[$loop_cond_ptr>>2] = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),16196,(5855|0));
  // unreachable;
 }
 $6 = $1;
 $7 = HEAP32[$6>>2]|0;
 HEAP32[$ast>>2] = $7;
 $8 = HEAP32[$ast>>2]|0;
 $9 = ((($8)) + 8|0);
 $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
 HEAP32[$ast>>2] = $10;
 HEAP32[$loop_cond_ptr>>2] = $loop_cond;
 $11 = HEAP32[$loop_cond_ptr>>2]|0;
 dest=$11; stop=dest+17|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
 $12 = HEAP32[$loop_cond_ptr>>2]|0;
 HEAP8[$12>>0]=0&255;HEAP8[$12+1>>0]=(0>>8)&255;HEAP8[$12+2>>0]=(0>>16)&255;HEAP8[$12+3>>0]=0>>24;
 $13 = HEAP32[$ast>>2]|0;
 $loop_begin_node = $13;
 L4: while(1) {
  $14 = $loop_begin_node;
  HEAP32[$ast>>2] = $14;
  $15 = $0;
  $16 = (__calc_expression($15,$ast,$loop_cond_ptr)|0);
  $result = $16;
  $17 = $result;
  $18 = ($17|0)!=(0);
  if ($18) {
   break;
  }
  $19 = HEAP32[$loop_cond_ptr>>2]|0;
  $20 = ((($19)) + 4|0);
  $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
  $22 = ($21|0)!=(0);
  if (!($22)) {
   label = 29;
   break;
  }
  $23 = HEAP32[$ast>>2]|0;
  $24 = ($23|0)!=(0|0);
  if (!($24)) {
   break;
  }
  $25 = HEAP32[$ast>>2]|0;
  $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
  $obj = $26;
  while(1) {
   $27 = $obj;
   $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
   $29 = ($28|0)==(8);
   if ($29) {
    $30 = $obj;
    $31 = ((($30)) + 4|0);
    $32 = HEAPU8[$31>>0]|(HEAPU8[$31+1>>0]<<8)|(HEAPU8[$31+2>>0]<<16)|(HEAPU8[$31+3>>0]<<24);
    $33 = ((($32)) + 4|0);
    $34 = HEAPU8[$33>>0]|(HEAPU8[$33+1>>0]<<8)|(HEAPU8[$33+2>>0]<<16)|(HEAPU8[$33+3>>0]<<24);
    $35 = ($34|0)==(34|0);
    $37 = $35;
   } else {
    $37 = 0;
   }
   $36 = $37 ^ 1;
   if (!($36)) {
    continue L4;
   }
   $38 = $0;
   $39 = (__execute_statement($38,$ast,1)|0);
   $result = $39;
   $40 = $result;
   $41 = ($40|0)==(101);
   if ($41) {
    label = 12;
    break L4;
   }
   $46 = $result;
   $47 = ($46|0)==(103);
   if ($47) {
    $48 = $0;
    $49 = ((($48)) + 98|0);
    $50 = HEAPU8[$49>>0]|(HEAPU8[$49+1>>0]<<8)|(HEAPU8[$49+2>>0]<<16)|(HEAPU8[$49+3>>0]<<24);
    $51 = ($50|0)!=(0|0);
    if ($51) {
     label = 16;
     break L4;
    }
   }
   $62 = $result;
   $63 = ($62|0)!=(0);
   $64 = $result;
   $65 = ($64|0)!=(103);
   $or$cond3 = $63 & $65;
   if ($or$cond3) {
    break L4;
   }
   $66 = HEAP32[$ast>>2]|0;
   $67 = ($66|0)!=(0|0);
   $68 = HEAP32[$ast>>2]|0;
   if (!($67)) {
    label = 22;
    break L4;
   }
   $99 = HEAPU8[$68>>0]|(HEAPU8[$68+1>>0]<<8)|(HEAPU8[$68+2>>0]<<16)|(HEAPU8[$68+3>>0]<<24);
   $obj = $99;
  }
 }
 do {
  if ((label|0) == 12) {
   $42 = $0;
   $43 = (__skip_struct($42,$ast,33,0,34)|0);
   $44 = ($43|0)!=(0);
   if (!($44)) {
    $45 = $0;
    (__skip_to($45,$ast,0,22)|0);
    $result = 0;
   }
  }
  else if ((label|0) == 16) {
   $52 = HEAP32[$ast>>2]|0;
   $53 = ($52|0)!=(0|0);
   if ($53) {
    $54 = HEAP32[$ast>>2]|0;
    $55 = ((($54)) + 4|0);
    $56 = HEAPU8[$55>>0]|(HEAPU8[$55+1>>0]<<8)|(HEAPU8[$55+2>>0]<<16)|(HEAPU8[$55+3>>0]<<24);
    HEAP32[$ast>>2] = $56;
   }
   $57 = HEAP32[$ast>>2]|0;
   $58 = ($57|0)!=(0|0);
   if ($58) {
    $59 = HEAP32[$ast>>2]|0;
    $60 = ((($59)) + 4|0);
    $61 = HEAPU8[$60>>0]|(HEAPU8[$60+1>>0]<<8)|(HEAPU8[$60+2>>0]<<16)|(HEAPU8[$60+3>>0]<<24);
    HEAP32[$ast>>2] = $61;
   }
  }
  else if ((label|0) == 22) {
   $69 = ($68|0)!=(0|0);
   if ($69) {
    $70 = HEAP32[$ast>>2]|0;
    $71 = HEAPU8[$70>>0]|(HEAPU8[$70+1>>0]<<8)|(HEAPU8[$70+2>>0]<<16)|(HEAPU8[$70+3>>0]<<24);
    $72 = ($71|0)!=(0|0);
    if ($72) {
     $73 = $0;
     $74 = $0;
     $75 = ((($74)) + 67|0);
     $76 = HEAPU8[$75>>0]|(HEAPU8[$75+1>>0]<<8)|(HEAPU8[$75+2>>0]<<16)|(HEAPU8[$75+3>>0]<<24);
     $77 = (__set_current_error($73,11,$76)|0);
     $78 = ($77<<24>>24)!=(0);
     if (!($78)) {
      break;
     }
     $79 = $0;
     $80 = HEAP32[$ast>>2]|0;
     $81 = HEAPU8[$80>>0]|(HEAPU8[$80+1>>0]<<8)|(HEAPU8[$80+2>>0]<<16)|(HEAPU8[$80+3>>0]<<24);
     $82 = ((($81)) + 9|0);
     $83 = HEAPU8[$82>>0]|(HEAPU8[$82+1>>0]<<8)|(HEAPU8[$82+2>>0]<<16)|(HEAPU8[$82+3>>0]<<24);
     $84 = HEAP32[$ast>>2]|0;
     $85 = HEAPU8[$84>>0]|(HEAPU8[$84+1>>0]<<8)|(HEAPU8[$84+2>>0]<<16)|(HEAPU8[$84+3>>0]<<24);
     $86 = ((($85)) + 13|0);
     $87 = HEAPU8[$86>>0]|(HEAPU8[$86+1>>0]<<8);
     $88 = HEAP32[$ast>>2]|0;
     $89 = HEAPU8[$88>>0]|(HEAPU8[$88+1>>0]<<8)|(HEAPU8[$88+2>>0]<<16)|(HEAPU8[$88+3>>0]<<24);
     $90 = ((($89)) + 15|0);
     $91 = HEAPU8[$90>>0]|(HEAPU8[$90+1>>0]<<8);
     __set_error_pos($79,$83,$87,$91);
     $result = 3;
     break;
    }
   }
   $92 = $0;
   $93 = $0;
   $94 = ((($93)) + 67|0);
   $95 = HEAPU8[$94>>0]|(HEAPU8[$94+1>>0]<<8)|(HEAPU8[$94+2>>0]<<16)|(HEAPU8[$94+3>>0]<<24);
   $96 = (__set_current_error($92,11,$95)|0);
   $97 = ($96<<24>>24)!=(0);
   if ($97) {
    $98 = $0;
    __set_error_pos($98,0,0,0);
    $result = 3;
   }
  }
  else if ((label|0) == 29) {
   $100 = $0;
   $101 = (__skip_struct($100,$ast,33,0,34)|0);
   $102 = ($101|0)!=(0);
   if (!($102)) {
    $103 = $0;
    (__skip_to($103,$ast,0,22)|0);
   }
  }
 } while(0);
 $104 = HEAP32[$ast>>2]|0;
 $105 = $1;
 HEAP32[$105>>2] = $104;
 $106 = $result;
 STACKTOP = sp;return ($106|0);
}
function __core_wend($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $ast = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $l;
 $result = 0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 $ast = $3;
 $4 = $ast;
 $5 = ($4|0)!=(0|0);
 if ($5) {
  $6 = $ast;
  $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
  $8 = ($7|0)!=(0|0);
  if ($8) {
   $9 = $0;
   $10 = (__set_current_error($9,50,5844)|0);
   $11 = ($10<<24>>24)!=(0);
   if (!($11)) {
    $29 = $result;
    STACKTOP = sp;return ($29|0);
   }
   $12 = $0;
   $13 = $ast;
   $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
   $15 = ((($14)) + 9|0);
   $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
   $17 = $ast;
   $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
   $19 = ((($18)) + 13|0);
   $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8);
   $21 = $ast;
   $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
   $23 = ((($22)) + 15|0);
   $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8);
   __set_error_pos($12,$16,$20,$24);
   $result = 3;
   $29 = $result;
   STACKTOP = sp;return ($29|0);
  }
 }
 $25 = $0;
 $26 = (__set_current_error($25,50,5844)|0);
 $27 = ($26<<24>>24)!=(0);
 if (!($27)) {
  $29 = $result;
  STACKTOP = sp;return ($29|0);
 }
 $28 = $0;
 __set_error_pos($28,0,0,0);
 $result = 3;
 $29 = $result;
 STACKTOP = sp;return ($29|0);
}
function __core_do($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $ast = 0, $loop_begin_node = 0, $loop_cond = 0, $loop_cond_ptr = 0, $obj = 0, $or$cond = 0, $or$cond3 = 0, $result = 0, dest = 0;
 var label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ast = sp + 12|0;
 $loop_cond = sp + 28|0;
 $loop_cond_ptr = sp;
 $0 = $s;
 $1 = $l;
 $result = 0;
 HEAP32[$ast>>2] = 0;
 $loop_begin_node = 0;
 $obj = 0;
 HEAP32[$loop_cond_ptr>>2] = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),16278,(5788|0));
  // unreachable;
 }
 $6 = $1;
 $7 = HEAP32[$6>>2]|0;
 HEAP32[$ast>>2] = $7;
 $8 = HEAP32[$ast>>2]|0;
 $9 = ((($8)) + 8|0);
 $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
 HEAP32[$ast>>2] = $10;
 $11 = HEAP32[$ast>>2]|0;
 $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
 $obj = $12;
 $13 = $obj;
 $14 = ($13|0)!=(0|0);
 L4: do {
  if ($14) {
   $15 = $obj;
   $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
   $17 = ($16|0)==(22);
   if ($17) {
    $49 = HEAP32[$ast>>2]|0;
    $50 = ((($49)) + 8|0);
    $51 = HEAPU8[$50>>0]|(HEAPU8[$50+1>>0]<<8)|(HEAPU8[$50+2>>0]<<16)|(HEAPU8[$50+3>>0]<<24);
    HEAP32[$ast>>2] = $51;
    HEAP32[$loop_cond_ptr>>2] = $loop_cond;
    $52 = HEAP32[$loop_cond_ptr>>2]|0;
    dest=$52; stop=dest+17|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
    $53 = HEAP32[$loop_cond_ptr>>2]|0;
    HEAP8[$53>>0]=0&255;HEAP8[$53+1>>0]=(0>>8)&255;HEAP8[$53+2>>0]=(0>>16)&255;HEAP8[$53+3>>0]=0>>24;
    $54 = HEAP32[$ast>>2]|0;
    $loop_begin_node = $54;
    L7: while(1) {
     $55 = $loop_begin_node;
     HEAP32[$ast>>2] = $55;
     $56 = HEAP32[$ast>>2]|0;
     $57 = ($56|0)!=(0|0);
     if ($57) {
      $58 = HEAP32[$ast>>2]|0;
      $59 = HEAPU8[$58>>0]|(HEAPU8[$58+1>>0]<<8)|(HEAPU8[$58+2>>0]<<16)|(HEAPU8[$58+3>>0]<<24);
      $60 = $59;
     } else {
      $60 = 0;
     }
     $obj = $60;
     while(1) {
      $61 = $obj;
      $62 = ($61|0)!=(0|0);
      if (!($62)) {
       break;
      }
      $63 = $obj;
      $64 = HEAPU8[$63>>0]|(HEAPU8[$63+1>>0]<<8)|(HEAPU8[$63+2>>0]<<16)|(HEAPU8[$63+3>>0]<<24);
      $65 = ($64|0)==(8);
      if ($65) {
       $66 = $obj;
       $67 = ((($66)) + 4|0);
       $68 = HEAPU8[$67>>0]|(HEAPU8[$67+1>>0]<<8)|(HEAPU8[$67+2>>0]<<16)|(HEAPU8[$67+3>>0]<<24);
       $69 = ((($68)) + 4|0);
       $70 = HEAPU8[$69>>0]|(HEAPU8[$69+1>>0]<<8)|(HEAPU8[$69+2>>0]<<16)|(HEAPU8[$69+3>>0]<<24);
       $71 = ($70|0)==(36|0);
       $73 = $71;
      } else {
       $73 = 0;
      }
      $72 = $73 ^ 1;
      if (!($72)) {
       break;
      }
      $74 = $0;
      $75 = (__execute_statement($74,$ast,1)|0);
      $result = $75;
      $76 = $result;
      $77 = ($76|0)==(101);
      if ($77) {
       label = 20;
       break L7;
      }
      $82 = $result;
      $83 = ($82|0)==(103);
      if ($83) {
       $84 = $0;
       $85 = ((($84)) + 98|0);
       $86 = HEAPU8[$85>>0]|(HEAPU8[$85+1>>0]<<8)|(HEAPU8[$85+2>>0]<<16)|(HEAPU8[$85+3>>0]<<24);
       $87 = ($86|0)!=(0|0);
       if ($87) {
        label = 24;
        break L7;
       }
      }
      $98 = $result;
      $99 = ($98|0)!=(0);
      $100 = $result;
      $101 = ($100|0)!=(103);
      $or$cond3 = $99 & $101;
      if ($or$cond3) {
       break L4;
      }
      $102 = HEAP32[$ast>>2]|0;
      $103 = ($102|0)!=(0|0);
      if ($103) {
       $104 = HEAP32[$ast>>2]|0;
       $105 = HEAPU8[$104>>0]|(HEAPU8[$104+1>>0]<<8)|(HEAPU8[$104+2>>0]<<16)|(HEAPU8[$104+3>>0]<<24);
       $106 = $105;
      } else {
       $106 = 0;
      }
      $obj = $106;
     }
     $107 = HEAP32[$ast>>2]|0;
     $108 = ($107|0)!=(0|0);
     if ($108) {
      $109 = HEAP32[$ast>>2]|0;
      $110 = HEAPU8[$109>>0]|(HEAPU8[$109+1>>0]<<8)|(HEAPU8[$109+2>>0]<<16)|(HEAPU8[$109+3>>0]<<24);
      $111 = $110;
     } else {
      $111 = 0;
     }
     $obj = $111;
     $112 = $obj;
     $113 = ($112|0)!=(0|0);
     if (!($113)) {
      label = 37;
      break;
     }
     $114 = $obj;
     $115 = HEAPU8[$114>>0]|(HEAPU8[$114+1>>0]<<8)|(HEAPU8[$114+2>>0]<<16)|(HEAPU8[$114+3>>0]<<24);
     $116 = ($115|0)==(8);
     if (!($116)) {
      label = 37;
      break;
     }
     $117 = $obj;
     $118 = ((($117)) + 4|0);
     $119 = HEAPU8[$118>>0]|(HEAPU8[$118+1>>0]<<8)|(HEAPU8[$118+2>>0]<<16)|(HEAPU8[$118+3>>0]<<24);
     $120 = ((($119)) + 4|0);
     $121 = HEAPU8[$120>>0]|(HEAPU8[$120+1>>0]<<8)|(HEAPU8[$120+2>>0]<<16)|(HEAPU8[$120+3>>0]<<24);
     $122 = ($121|0)==(36|0);
     if (!($122)) {
      label = 37;
      break;
     }
     $154 = HEAP32[$ast>>2]|0;
     $155 = ((($154)) + 8|0);
     $156 = HEAPU8[$155>>0]|(HEAPU8[$155+1>>0]<<8)|(HEAPU8[$155+2>>0]<<16)|(HEAPU8[$155+3>>0]<<24);
     HEAP32[$ast>>2] = $156;
     $157 = $0;
     $158 = (__calc_expression($157,$ast,$loop_cond_ptr)|0);
     $result = $158;
     $159 = $result;
     $160 = ($159|0)!=(0);
     if ($160) {
      break L4;
     }
     $161 = HEAP32[$loop_cond_ptr>>2]|0;
     $162 = ((($161)) + 4|0);
     $163 = HEAPU8[$162>>0]|(HEAPU8[$162+1>>0]<<8)|(HEAPU8[$162+2>>0]<<16)|(HEAPU8[$162+3>>0]<<24);
     $164 = ($163|0)!=(0);
     if ($164) {
      label = 45;
      break;
     }
    }
    if ((label|0) == 20) {
     $78 = $0;
     $79 = (__skip_struct($78,$ast,35,0,36)|0);
     $80 = ($79|0)!=(0);
     if ($80) {
      break;
     }
     $81 = $0;
     (__skip_to($81,$ast,0,22)|0);
     $result = 0;
     break;
    }
    else if ((label|0) == 24) {
     $88 = HEAP32[$ast>>2]|0;
     $89 = ($88|0)!=(0|0);
     if ($89) {
      $90 = HEAP32[$ast>>2]|0;
      $91 = ((($90)) + 4|0);
      $92 = HEAPU8[$91>>0]|(HEAPU8[$91+1>>0]<<8)|(HEAPU8[$91+2>>0]<<16)|(HEAPU8[$91+3>>0]<<24);
      HEAP32[$ast>>2] = $92;
     }
     $93 = HEAP32[$ast>>2]|0;
     $94 = ($93|0)!=(0|0);
     if (!($94)) {
      break;
     }
     $95 = HEAP32[$ast>>2]|0;
     $96 = ((($95)) + 4|0);
     $97 = HEAPU8[$96>>0]|(HEAPU8[$96+1>>0]<<8)|(HEAPU8[$96+2>>0]<<16)|(HEAPU8[$96+3>>0]<<24);
     HEAP32[$ast>>2] = $97;
     break;
    }
    else if ((label|0) == 37) {
     $123 = HEAP32[$ast>>2]|0;
     $124 = ($123|0)!=(0|0);
     if ($124) {
      $125 = HEAP32[$ast>>2]|0;
      $126 = HEAPU8[$125>>0]|(HEAPU8[$125+1>>0]<<8)|(HEAPU8[$125+2>>0]<<16)|(HEAPU8[$125+3>>0]<<24);
      $127 = ($126|0)!=(0|0);
      if ($127) {
       $128 = $0;
       $129 = $0;
       $130 = ((($129)) + 67|0);
       $131 = HEAPU8[$130>>0]|(HEAPU8[$130+1>>0]<<8)|(HEAPU8[$130+2>>0]<<16)|(HEAPU8[$130+3>>0]<<24);
       $132 = (__set_current_error($128,44,$131)|0);
       $133 = ($132<<24>>24)!=(0);
       if (!($133)) {
        break;
       }
       $134 = $0;
       $135 = HEAP32[$ast>>2]|0;
       $136 = HEAPU8[$135>>0]|(HEAPU8[$135+1>>0]<<8)|(HEAPU8[$135+2>>0]<<16)|(HEAPU8[$135+3>>0]<<24);
       $137 = ((($136)) + 9|0);
       $138 = HEAPU8[$137>>0]|(HEAPU8[$137+1>>0]<<8)|(HEAPU8[$137+2>>0]<<16)|(HEAPU8[$137+3>>0]<<24);
       $139 = HEAP32[$ast>>2]|0;
       $140 = HEAPU8[$139>>0]|(HEAPU8[$139+1>>0]<<8)|(HEAPU8[$139+2>>0]<<16)|(HEAPU8[$139+3>>0]<<24);
       $141 = ((($140)) + 13|0);
       $142 = HEAPU8[$141>>0]|(HEAPU8[$141+1>>0]<<8);
       $143 = HEAP32[$ast>>2]|0;
       $144 = HEAPU8[$143>>0]|(HEAPU8[$143+1>>0]<<8)|(HEAPU8[$143+2>>0]<<16)|(HEAPU8[$143+3>>0]<<24);
       $145 = ((($144)) + 15|0);
       $146 = HEAPU8[$145>>0]|(HEAPU8[$145+1>>0]<<8);
       __set_error_pos($134,$138,$142,$146);
       $result = 3;
       break;
      }
     }
     $147 = $0;
     $148 = $0;
     $149 = ((($148)) + 67|0);
     $150 = HEAPU8[$149>>0]|(HEAPU8[$149+1>>0]<<8)|(HEAPU8[$149+2>>0]<<16)|(HEAPU8[$149+3>>0]<<24);
     $151 = (__set_current_error($147,44,$150)|0);
     $152 = ($151<<24>>24)!=(0);
     if (!($152)) {
      break;
     }
     $153 = $0;
     __set_error_pos($153,0,0,0);
     $result = 3;
     break;
    }
    else if ((label|0) == 45) {
     $165 = HEAP32[$ast>>2]|0;
     $166 = ($165|0)!=(0|0);
     if (!($166)) {
      break;
     }
     $167 = $0;
     (__skip_to($167,$ast,0,22)|0);
     break;
    }
   } else {
    label = 5;
   }
  } else {
   label = 5;
  }
 } while(0);
 do {
  if ((label|0) == 5) {
   $18 = HEAP32[$ast>>2]|0;
   $19 = ($18|0)!=(0|0);
   if ($19) {
    $20 = HEAP32[$ast>>2]|0;
    $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
    $22 = ($21|0)!=(0|0);
    if ($22) {
     $23 = $0;
     $24 = $0;
     $25 = ((($24)) + 67|0);
     $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
     $27 = (__set_current_error($23,11,$26)|0);
     $28 = ($27<<24>>24)!=(0);
     if (!($28)) {
      break;
     }
     $29 = $0;
     $30 = HEAP32[$ast>>2]|0;
     $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8)|(HEAPU8[$30+2>>0]<<16)|(HEAPU8[$30+3>>0]<<24);
     $32 = ((($31)) + 9|0);
     $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
     $34 = HEAP32[$ast>>2]|0;
     $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
     $36 = ((($35)) + 13|0);
     $37 = HEAPU8[$36>>0]|(HEAPU8[$36+1>>0]<<8);
     $38 = HEAP32[$ast>>2]|0;
     $39 = HEAPU8[$38>>0]|(HEAPU8[$38+1>>0]<<8)|(HEAPU8[$38+2>>0]<<16)|(HEAPU8[$38+3>>0]<<24);
     $40 = ((($39)) + 15|0);
     $41 = HEAPU8[$40>>0]|(HEAPU8[$40+1>>0]<<8);
     __set_error_pos($29,$33,$37,$41);
     $result = 3;
     break;
    }
   }
   $42 = $0;
   $43 = $0;
   $44 = ((($43)) + 67|0);
   $45 = HEAPU8[$44>>0]|(HEAPU8[$44+1>>0]<<8)|(HEAPU8[$44+2>>0]<<16)|(HEAPU8[$44+3>>0]<<24);
   $46 = (__set_current_error($42,11,$45)|0);
   $47 = ($46<<24>>24)!=(0);
   if ($47) {
    $48 = $0;
    __set_error_pos($48,0,0,0);
    $result = 3;
   }
  }
 } while(0);
 $168 = HEAP32[$ast>>2]|0;
 $169 = $1;
 HEAP32[$169>>2] = $168;
 $170 = $result;
 STACKTOP = sp;return ($170|0);
}
function __core_until($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $ast = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $l;
 $result = 0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 $ast = $3;
 $4 = $ast;
 $5 = ($4|0)!=(0|0);
 if ($5) {
  $6 = $ast;
  $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
  $8 = ($7|0)!=(0|0);
  if ($8) {
   $9 = $0;
   $10 = (__set_current_error($9,50,5776)|0);
   $11 = ($10<<24>>24)!=(0);
   if (!($11)) {
    $29 = $result;
    STACKTOP = sp;return ($29|0);
   }
   $12 = $0;
   $13 = $ast;
   $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
   $15 = ((($14)) + 9|0);
   $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
   $17 = $ast;
   $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
   $19 = ((($18)) + 13|0);
   $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8);
   $21 = $ast;
   $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
   $23 = ((($22)) + 15|0);
   $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8);
   __set_error_pos($12,$16,$20,$24);
   $result = 3;
   $29 = $result;
   STACKTOP = sp;return ($29|0);
  }
 }
 $25 = $0;
 $26 = (__set_current_error($25,50,5776)|0);
 $27 = ($26<<24>>24)!=(0);
 if (!($27)) {
  $29 = $result;
  STACKTOP = sp;return ($29|0);
 }
 $28 = $0;
 __set_error_pos($28,0,0,0);
 $result = 3;
 $29 = $result;
 STACKTOP = sp;return ($29|0);
}
function __core_exit($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $or$cond = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $l;
 $result = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 if ($or$cond) {
  $result = 101;
  $6 = $result;
  STACKTOP = sp;return ($6|0);
 } else {
  ___assert_fail((4777|0),(4322|0),16361,(5765|0));
  // unreachable;
 }
 return (0)|0;
}
function __core_goto($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $ast = 0, $glbsyminscope = 0, $label = 0, $obj = 0, $or$cond = 0, $result = 0, $running = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $l;
 $result = 0;
 $running = 0;
 $ast = 0;
 $obj = 0;
 $label = 0;
 $glbsyminscope = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),16377,(5721|0));
  // unreachable;
 }
 $6 = $0;
 $7 = ((($6)) + 75|0);
 $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
 $running = $8;
 $9 = $1;
 $10 = HEAP32[$9>>2]|0;
 $ast = $10;
 $11 = $ast;
 $12 = ((($11)) + 8|0);
 $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
 $ast = $13;
 $14 = $0;
 $15 = ((($14)) + 92|0);
 $16 = HEAP8[$15>>0]|0;
 $17 = $16&255;
 $18 = $17 & -2;
 $19 = ($18|0)!=(0);
 if ($19) {
  $20 = $ast;
  $21 = ($20|0)!=(0|0);
  if ($21) {
   $22 = $ast;
   $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
   $24 = ($23|0)!=(0|0);
   if ($24) {
    $25 = $0;
    $26 = $0;
    $27 = ((($26)) + 67|0);
    $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
    $29 = (__set_current_error($25,52,$28)|0);
    $30 = ($29<<24>>24)!=(0);
    if (!($30)) {
     $178 = $ast;
     $179 = $1;
     HEAP32[$179>>2] = $178;
     $180 = $result;
     STACKTOP = sp;return ($180|0);
    }
    $31 = $0;
    $32 = $ast;
    $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
    $34 = ((($33)) + 9|0);
    $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
    $36 = $ast;
    $37 = HEAPU8[$36>>0]|(HEAPU8[$36+1>>0]<<8)|(HEAPU8[$36+2>>0]<<16)|(HEAPU8[$36+3>>0]<<24);
    $38 = ((($37)) + 13|0);
    $39 = HEAPU8[$38>>0]|(HEAPU8[$38+1>>0]<<8);
    $40 = $ast;
    $41 = HEAPU8[$40>>0]|(HEAPU8[$40+1>>0]<<8)|(HEAPU8[$40+2>>0]<<16)|(HEAPU8[$40+3>>0]<<24);
    $42 = ((($41)) + 15|0);
    $43 = HEAPU8[$42>>0]|(HEAPU8[$42+1>>0]<<8);
    __set_error_pos($31,$35,$39,$43);
    $result = 3;
    $178 = $ast;
    $179 = $1;
    HEAP32[$179>>2] = $178;
    $180 = $result;
    STACKTOP = sp;return ($180|0);
   }
  }
  $44 = $0;
  $45 = $0;
  $46 = ((($45)) + 67|0);
  $47 = HEAPU8[$46>>0]|(HEAPU8[$46+1>>0]<<8)|(HEAPU8[$46+2>>0]<<16)|(HEAPU8[$46+3>>0]<<24);
  $48 = (__set_current_error($44,52,$47)|0);
  $49 = ($48<<24>>24)!=(0);
  if (!($49)) {
   $178 = $ast;
   $179 = $1;
   HEAP32[$179>>2] = $178;
   $180 = $result;
   STACKTOP = sp;return ($180|0);
  }
  $50 = $0;
  __set_error_pos($50,0,0,0);
  $result = 3;
  $178 = $ast;
  $179 = $1;
  HEAP32[$179>>2] = $178;
  $180 = $result;
  STACKTOP = sp;return ($180|0);
 }
 $51 = $0;
 $52 = ((($51)) + 92|0);
 $53 = HEAP8[$52>>0]|0;
 $54 = $53&255;
 $55 = $54 | 1;
 $56 = $55&255;
 HEAP8[$52>>0] = $56;
 $57 = $ast;
 $58 = HEAPU8[$57>>0]|(HEAPU8[$57+1>>0]<<8)|(HEAPU8[$57+2>>0]<<16)|(HEAPU8[$57+3>>0]<<24);
 $obj = $58;
 $59 = $obj;
 $60 = HEAPU8[$59>>0]|(HEAPU8[$59+1>>0]<<8)|(HEAPU8[$59+2>>0]<<16)|(HEAPU8[$59+3>>0]<<24);
 $61 = ($60|0)!=(15);
 if ($61) {
  $62 = $ast;
  $63 = ($62|0)!=(0|0);
  if ($63) {
   $64 = $ast;
   $65 = HEAPU8[$64>>0]|(HEAPU8[$64+1>>0]<<8)|(HEAPU8[$64+2>>0]<<16)|(HEAPU8[$64+3>>0]<<24);
   $66 = ($65|0)!=(0|0);
   if ($66) {
    $67 = $0;
    $68 = $0;
    $69 = ((($68)) + 67|0);
    $70 = HEAPU8[$69>>0]|(HEAPU8[$69+1>>0]<<8)|(HEAPU8[$69+2>>0]<<16)|(HEAPU8[$69+3>>0]<<24);
    $71 = (__set_current_error($67,46,$70)|0);
    $72 = ($71<<24>>24)!=(0);
    if (!($72)) {
     $178 = $ast;
     $179 = $1;
     HEAP32[$179>>2] = $178;
     $180 = $result;
     STACKTOP = sp;return ($180|0);
    }
    $73 = $0;
    $74 = $ast;
    $75 = HEAPU8[$74>>0]|(HEAPU8[$74+1>>0]<<8)|(HEAPU8[$74+2>>0]<<16)|(HEAPU8[$74+3>>0]<<24);
    $76 = ((($75)) + 9|0);
    $77 = HEAPU8[$76>>0]|(HEAPU8[$76+1>>0]<<8)|(HEAPU8[$76+2>>0]<<16)|(HEAPU8[$76+3>>0]<<24);
    $78 = $ast;
    $79 = HEAPU8[$78>>0]|(HEAPU8[$78+1>>0]<<8)|(HEAPU8[$78+2>>0]<<16)|(HEAPU8[$78+3>>0]<<24);
    $80 = ((($79)) + 13|0);
    $81 = HEAPU8[$80>>0]|(HEAPU8[$80+1>>0]<<8);
    $82 = $ast;
    $83 = HEAPU8[$82>>0]|(HEAPU8[$82+1>>0]<<8)|(HEAPU8[$82+2>>0]<<16)|(HEAPU8[$82+3>>0]<<24);
    $84 = ((($83)) + 15|0);
    $85 = HEAPU8[$84>>0]|(HEAPU8[$84+1>>0]<<8);
    __set_error_pos($73,$77,$81,$85);
    $result = 3;
    $178 = $ast;
    $179 = $1;
    HEAP32[$179>>2] = $178;
    $180 = $result;
    STACKTOP = sp;return ($180|0);
   }
  }
  $86 = $0;
  $87 = $0;
  $88 = ((($87)) + 67|0);
  $89 = HEAPU8[$88>>0]|(HEAPU8[$88+1>>0]<<8)|(HEAPU8[$88+2>>0]<<16)|(HEAPU8[$88+3>>0]<<24);
  $90 = (__set_current_error($86,46,$89)|0);
  $91 = ($90<<24>>24)!=(0);
  if (!($91)) {
   $178 = $ast;
   $179 = $1;
   HEAP32[$179>>2] = $178;
   $180 = $result;
   STACKTOP = sp;return ($180|0);
  }
  $92 = $0;
  __set_error_pos($92,0,0,0);
  $result = 3;
  $178 = $ast;
  $179 = $1;
  HEAP32[$179>>2] = $178;
  $180 = $result;
  STACKTOP = sp;return ($180|0);
 }
 $93 = $obj;
 $94 = ((($93)) + 4|0);
 $95 = HEAPU8[$94>>0]|(HEAPU8[$94+1>>0]<<8)|(HEAPU8[$94+2>>0]<<16)|(HEAPU8[$94+3>>0]<<24);
 $label = $95;
 $96 = $label;
 $97 = ((($96)) + 4|0);
 $98 = HEAPU8[$97>>0]|(HEAPU8[$97+1>>0]<<8)|(HEAPU8[$97+2>>0]<<16)|(HEAPU8[$97+3>>0]<<24);
 $99 = ($98|0)!=(0|0);
 do {
  if (!($99)) {
   $100 = $running;
   $101 = ((($100)) + 8|0);
   $102 = HEAPU8[$101>>0]|(HEAPU8[$101+1>>0]<<8)|(HEAPU8[$101+2>>0]<<16)|(HEAPU8[$101+3>>0]<<24);
   $103 = $label;
   $104 = HEAPU8[$103>>0]|(HEAPU8[$103+1>>0]<<8)|(HEAPU8[$103+2>>0]<<16)|(HEAPU8[$103+3>>0]<<24);
   $105 = (__ht_find($102,$104)|0);
   $glbsyminscope = $105;
   $106 = $glbsyminscope;
   $107 = ($106|0)!=(0|0);
   if ($107) {
    $108 = $glbsyminscope;
    $109 = HEAPU8[$108>>0]|(HEAPU8[$108+1>>0]<<8)|(HEAPU8[$108+2>>0]<<16)|(HEAPU8[$108+3>>0]<<24);
    $110 = HEAPU8[$109>>0]|(HEAPU8[$109+1>>0]<<8)|(HEAPU8[$109+2>>0]<<16)|(HEAPU8[$109+3>>0]<<24);
    $111 = ($110|0)==(15);
    if ($111) {
     $143 = $glbsyminscope;
     $144 = HEAPU8[$143>>0]|(HEAPU8[$143+1>>0]<<8)|(HEAPU8[$143+2>>0]<<16)|(HEAPU8[$143+3>>0]<<24);
     $145 = ((($144)) + 4|0);
     $146 = HEAPU8[$145>>0]|(HEAPU8[$145+1>>0]<<8)|(HEAPU8[$145+2>>0]<<16)|(HEAPU8[$145+3>>0]<<24);
     $147 = ((($146)) + 4|0);
     $148 = HEAPU8[$147>>0]|(HEAPU8[$147+1>>0]<<8)|(HEAPU8[$147+2>>0]<<16)|(HEAPU8[$147+3>>0]<<24);
     $149 = $label;
     $150 = ((($149)) + 4|0);
     HEAP8[$150>>0]=$148&255;HEAP8[$150+1>>0]=($148>>8)&255;HEAP8[$150+2>>0]=($148>>16)&255;HEAP8[$150+3>>0]=$148>>24;
     break;
    }
   }
   $112 = $ast;
   $113 = ($112|0)!=(0|0);
   if ($113) {
    $114 = $ast;
    $115 = HEAPU8[$114>>0]|(HEAPU8[$114+1>>0]<<8)|(HEAPU8[$114+2>>0]<<16)|(HEAPU8[$114+3>>0]<<24);
    $116 = ($115|0)!=(0|0);
    if ($116) {
     $117 = $0;
     $118 = $0;
     $119 = ((($118)) + 67|0);
     $120 = HEAPU8[$119>>0]|(HEAPU8[$119+1>>0]<<8)|(HEAPU8[$119+2>>0]<<16)|(HEAPU8[$119+3>>0]<<24);
     $121 = (__set_current_error($117,28,$120)|0);
     $122 = ($121<<24>>24)!=(0);
     if (!($122)) {
      $178 = $ast;
      $179 = $1;
      HEAP32[$179>>2] = $178;
      $180 = $result;
      STACKTOP = sp;return ($180|0);
     }
     $123 = $0;
     $124 = $ast;
     $125 = HEAPU8[$124>>0]|(HEAPU8[$124+1>>0]<<8)|(HEAPU8[$124+2>>0]<<16)|(HEAPU8[$124+3>>0]<<24);
     $126 = ((($125)) + 9|0);
     $127 = HEAPU8[$126>>0]|(HEAPU8[$126+1>>0]<<8)|(HEAPU8[$126+2>>0]<<16)|(HEAPU8[$126+3>>0]<<24);
     $128 = $ast;
     $129 = HEAPU8[$128>>0]|(HEAPU8[$128+1>>0]<<8)|(HEAPU8[$128+2>>0]<<16)|(HEAPU8[$128+3>>0]<<24);
     $130 = ((($129)) + 13|0);
     $131 = HEAPU8[$130>>0]|(HEAPU8[$130+1>>0]<<8);
     $132 = $ast;
     $133 = HEAPU8[$132>>0]|(HEAPU8[$132+1>>0]<<8)|(HEAPU8[$132+2>>0]<<16)|(HEAPU8[$132+3>>0]<<24);
     $134 = ((($133)) + 15|0);
     $135 = HEAPU8[$134>>0]|(HEAPU8[$134+1>>0]<<8);
     __set_error_pos($123,$127,$131,$135);
     $result = 3;
     $178 = $ast;
     $179 = $1;
     HEAP32[$179>>2] = $178;
     $180 = $result;
     STACKTOP = sp;return ($180|0);
    }
   }
   $136 = $0;
   $137 = $0;
   $138 = ((($137)) + 67|0);
   $139 = HEAPU8[$138>>0]|(HEAPU8[$138+1>>0]<<8)|(HEAPU8[$138+2>>0]<<16)|(HEAPU8[$138+3>>0]<<24);
   $140 = (__set_current_error($136,28,$139)|0);
   $141 = ($140<<24>>24)!=(0);
   if (!($141)) {
    $178 = $ast;
    $179 = $1;
    HEAP32[$179>>2] = $178;
    $180 = $result;
    STACKTOP = sp;return ($180|0);
   }
   $142 = $0;
   __set_error_pos($142,0,0,0);
   $result = 3;
   $178 = $ast;
   $179 = $1;
   HEAP32[$179>>2] = $178;
   $180 = $result;
   STACKTOP = sp;return ($180|0);
  }
 } while(0);
 $151 = $label;
 $152 = ((($151)) + 4|0);
 $153 = HEAPU8[$152>>0]|(HEAPU8[$152+1>>0]<<8)|(HEAPU8[$152+2>>0]<<16)|(HEAPU8[$152+3>>0]<<24);
 $154 = ($153|0)!=(0|0);
 if ($154) {
 }
 $155 = $label;
 $156 = ((($155)) + 4|0);
 $157 = HEAPU8[$156>>0]|(HEAPU8[$156+1>>0]<<8)|(HEAPU8[$156+2>>0]<<16)|(HEAPU8[$156+3>>0]<<24);
 $158 = ($157|0)!=(0|0);
 if (!($158)) {
  ___assert_fail((5732|0),(4322|0),16400,(5721|0));
  // unreachable;
 }
 $159 = $label;
 $160 = ((($159)) + 4|0);
 $161 = HEAPU8[$160>>0]|(HEAPU8[$160+1>>0]<<8)|(HEAPU8[$160+2>>0]<<16)|(HEAPU8[$160+3>>0]<<24);
 $162 = ((($161)) + 4|0);
 $163 = HEAPU8[$162>>0]|(HEAPU8[$162+1>>0]<<8)|(HEAPU8[$162+2>>0]<<16)|(HEAPU8[$162+3>>0]<<24);
 $164 = ($163|0)!=(0|0);
 if (!($164)) {
  ___assert_fail((5732|0),(4322|0),16400,(5721|0));
  // unreachable;
 }
 $165 = $label;
 $166 = ((($165)) + 4|0);
 $167 = HEAPU8[$166>>0]|(HEAPU8[$166+1>>0]<<8)|(HEAPU8[$166+2>>0]<<16)|(HEAPU8[$166+3>>0]<<24);
 $168 = ((($167)) + 4|0);
 $169 = HEAPU8[$168>>0]|(HEAPU8[$168+1>>0]<<8)|(HEAPU8[$168+2>>0]<<16)|(HEAPU8[$168+3>>0]<<24);
 $ast = $169;
 $170 = $ast;
 $171 = ($170|0)!=(0|0);
 if (!($171)) {
  $178 = $ast;
  $179 = $1;
  HEAP32[$179>>2] = $178;
  $180 = $result;
  STACKTOP = sp;return ($180|0);
 }
 $172 = $ast;
 $173 = HEAPU8[$172>>0]|(HEAPU8[$172+1>>0]<<8)|(HEAPU8[$172+2>>0]<<16)|(HEAPU8[$172+3>>0]<<24);
 $174 = ($173|0)!=(0|0);
 if ($174) {
  $178 = $ast;
  $179 = $1;
  HEAP32[$179>>2] = $178;
  $180 = $result;
  STACKTOP = sp;return ($180|0);
 }
 $175 = $ast;
 $176 = ((($175)) + 8|0);
 $177 = HEAPU8[$176>>0]|(HEAPU8[$176+1>>0]<<8)|(HEAPU8[$176+2>>0]<<16)|(HEAPU8[$176+3>>0]<<24);
 $ast = $177;
 $178 = $ast;
 $179 = $1;
 HEAP32[$179>>2] = $178;
 $180 = $result;
 STACKTOP = sp;return ($180|0);
}
function __core_gosub($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $7 = 0, $8 = 0, $9 = 0, $ast = 0, $or$cond = 0, $result = 0, $running = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $l;
 $result = 0;
 $ast = 0;
 $running = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),16417,(5709|0));
  // unreachable;
 }
 $6 = $0;
 $7 = ((($6)) + 75|0);
 $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
 $running = $8;
 $9 = $1;
 $10 = HEAP32[$9>>2]|0;
 $ast = $10;
 $11 = $0;
 $12 = ((($11)) + 92|0);
 $13 = HEAP8[$12>>0]|0;
 $14 = $13&255;
 $15 = $14 & -2;
 $16 = ($15|0)!=(0);
 if (!($16)) {
  $48 = $0;
  $49 = ((($48)) + 92|0);
  $50 = HEAP8[$49>>0]|0;
  $51 = $50&255;
  $52 = $51 | 1;
  $53 = $52&255;
  HEAP8[$49>>0] = $53;
  $54 = $0;
  $55 = $1;
  $56 = (__core_goto($54,$55)|0);
  $result = $56;
  $57 = $result;
  $58 = ($57|0)==(0);
  if (!($58)) {
   $63 = $result;
   STACKTOP = sp;return ($63|0);
  }
  $59 = $0;
  $60 = ((($59)) + 102|0);
  $61 = HEAPU8[$60>>0]|(HEAPU8[$60+1>>0]<<8)|(HEAPU8[$60+2>>0]<<16)|(HEAPU8[$60+3>>0]<<24);
  $62 = $ast;
  (__ls_pushback($61,$62)|0);
  $63 = $result;
  STACKTOP = sp;return ($63|0);
 }
 $17 = $ast;
 $18 = ($17|0)!=(0|0);
 if ($18) {
  $19 = $ast;
  $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8)|(HEAPU8[$19+2>>0]<<16)|(HEAPU8[$19+3>>0]<<24);
  $21 = ($20|0)!=(0|0);
  if ($21) {
   $22 = $0;
   $23 = $0;
   $24 = ((($23)) + 67|0);
   $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
   $26 = (__set_current_error($22,52,$25)|0);
   $27 = ($26<<24>>24)!=(0);
   if (!($27)) {
    $63 = $result;
    STACKTOP = sp;return ($63|0);
   }
   $28 = $0;
   $29 = $ast;
   $30 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8)|(HEAPU8[$29+2>>0]<<16)|(HEAPU8[$29+3>>0]<<24);
   $31 = ((($30)) + 9|0);
   $32 = HEAPU8[$31>>0]|(HEAPU8[$31+1>>0]<<8)|(HEAPU8[$31+2>>0]<<16)|(HEAPU8[$31+3>>0]<<24);
   $33 = $ast;
   $34 = HEAPU8[$33>>0]|(HEAPU8[$33+1>>0]<<8)|(HEAPU8[$33+2>>0]<<16)|(HEAPU8[$33+3>>0]<<24);
   $35 = ((($34)) + 13|0);
   $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8);
   $37 = $ast;
   $38 = HEAPU8[$37>>0]|(HEAPU8[$37+1>>0]<<8)|(HEAPU8[$37+2>>0]<<16)|(HEAPU8[$37+3>>0]<<24);
   $39 = ((($38)) + 15|0);
   $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8);
   __set_error_pos($28,$32,$36,$40);
   $result = 3;
   $63 = $result;
   STACKTOP = sp;return ($63|0);
  }
 }
 $41 = $0;
 $42 = $0;
 $43 = ((($42)) + 67|0);
 $44 = HEAPU8[$43>>0]|(HEAPU8[$43+1>>0]<<8)|(HEAPU8[$43+2>>0]<<16)|(HEAPU8[$43+3>>0]<<24);
 $45 = (__set_current_error($41,52,$44)|0);
 $46 = ($45<<24>>24)!=(0);
 if (!($46)) {
  $63 = $result;
  STACKTOP = sp;return ($63|0);
 }
 $47 = $0;
 __set_error_pos($47,0,0,0);
 $result = 3;
 $63 = $result;
 STACKTOP = sp;return ($63|0);
}
function __core_return($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $8 = 0, $9 = 0, $__hr = 0, $__hr1 = 0, $arg = 0, $arg$byval_copy = 0, $ast = 0, $or$cond = 0, $result = 0;
 var $running = 0, $sub_stack = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $arg$byval_copy = sp + 40|0;
 $ast = sp + 16|0;
 $arg = sp + 48|0;
 $1 = $s;
 $2 = $l;
 $result = 103;
 HEAP32[$ast>>2] = 0;
 $sub_stack = 0;
 $running = 0;
 $3 = $1;
 $4 = ($3|0)!=(0|0);
 $5 = $2;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),16440,(5696|0));
  // unreachable;
 }
 $7 = ((($arg)) + 4|0);
 ;HEAP8[$7>>0]=0|0;HEAP8[$7+1>>0]=0|0;HEAP8[$7+2>>0]=0|0;HEAP8[$7+3>>0]=0|0;
 HEAP8[$arg>>0]=0&255;HEAP8[$arg+1>>0]=(0>>8)&255;HEAP8[$arg+2>>0]=(0>>16)&255;HEAP8[$arg+3>>0]=0>>24;
 $8 = $1;
 $9 = ((($8)) + 75|0);
 $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
 $running = $10;
 $11 = $1;
 $12 = ((($11)) + 102|0);
 $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
 $sub_stack = $13;
 $14 = $running;
 $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
 $16 = ($15|0)!=(0|0);
 if ($16) {
  $17 = $2;
  $18 = HEAP32[$17>>2]|0;
  HEAP32[$ast>>2] = $18;
  $19 = HEAP32[$ast>>2]|0;
  $20 = ((($19)) + 8|0);
  $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
  HEAP32[$ast>>2] = $21;
  $22 = $1;
  $23 = (_mb_has_arg($22,$ast)|0);
  $24 = ($23|0)!=(0);
  if ($24) {
   $25 = $1;
   $26 = (_mb_pop_value($25,$ast,$arg)|0);
   $__hr = $26;
   $27 = $__hr;
   $28 = ($27|0)!=(0);
   if ($28) {
    $29 = $__hr;
    $0 = $29;
    $72 = $0;
    STACKTOP = sp;return ($72|0);
   }
   $30 = $1;
   ;HEAP32[$arg$byval_copy>>2]=HEAP32[$arg>>2]|0;HEAP32[$arg$byval_copy+4>>2]=HEAP32[$arg+4>>2]|0;
   $31 = (_mb_push_value($30,$ast,$arg$byval_copy)|0);
   $__hr1 = $31;
   $32 = $__hr1;
   $33 = ($32|0)!=(0);
   if ($33) {
    $34 = $__hr1;
    $0 = $34;
    $72 = $0;
    STACKTOP = sp;return ($72|0);
   }
  }
 }
 $35 = $sub_stack;
 $36 = (__ls_popback($35)|0);
 HEAP32[$ast>>2] = $36;
 $37 = HEAP32[$ast>>2]|0;
 $38 = ($37|0)!=(0|0);
 $39 = HEAP32[$ast>>2]|0;
 do {
  if ($38) {
   $70 = $2;
   HEAP32[$70>>2] = $39;
  } else {
   $40 = ($39|0)!=(0|0);
   if ($40) {
    $41 = HEAP32[$ast>>2]|0;
    $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
    $43 = ($42|0)!=(0|0);
    if ($43) {
     $44 = $1;
     $45 = $1;
     $46 = ((($45)) + 67|0);
     $47 = HEAPU8[$46>>0]|(HEAPU8[$46+1>>0]<<8)|(HEAPU8[$46+2>>0]<<16)|(HEAPU8[$46+3>>0]<<24);
     $48 = (__set_current_error($44,29,$47)|0);
     $49 = ($48<<24>>24)!=(0);
     if (!($49)) {
      break;
     }
     $50 = $1;
     $51 = HEAP32[$ast>>2]|0;
     $52 = HEAPU8[$51>>0]|(HEAPU8[$51+1>>0]<<8)|(HEAPU8[$51+2>>0]<<16)|(HEAPU8[$51+3>>0]<<24);
     $53 = ((($52)) + 9|0);
     $54 = HEAPU8[$53>>0]|(HEAPU8[$53+1>>0]<<8)|(HEAPU8[$53+2>>0]<<16)|(HEAPU8[$53+3>>0]<<24);
     $55 = HEAP32[$ast>>2]|0;
     $56 = HEAPU8[$55>>0]|(HEAPU8[$55+1>>0]<<8)|(HEAPU8[$55+2>>0]<<16)|(HEAPU8[$55+3>>0]<<24);
     $57 = ((($56)) + 13|0);
     $58 = HEAPU8[$57>>0]|(HEAPU8[$57+1>>0]<<8);
     $59 = HEAP32[$ast>>2]|0;
     $60 = HEAPU8[$59>>0]|(HEAPU8[$59+1>>0]<<8)|(HEAPU8[$59+2>>0]<<16)|(HEAPU8[$59+3>>0]<<24);
     $61 = ((($60)) + 15|0);
     $62 = HEAPU8[$61>>0]|(HEAPU8[$61+1>>0]<<8);
     __set_error_pos($50,$54,$58,$62);
     $result = 3;
     break;
    }
   }
   $63 = $1;
   $64 = $1;
   $65 = ((($64)) + 67|0);
   $66 = HEAPU8[$65>>0]|(HEAPU8[$65+1>>0]<<8)|(HEAPU8[$65+2>>0]<<16)|(HEAPU8[$65+3>>0]<<24);
   $67 = (__set_current_error($63,29,$66)|0);
   $68 = ($67<<24>>24)!=(0);
   if ($68) {
    $69 = $1;
    __set_error_pos($69,0,0,0);
    $result = 3;
   }
  }
 } while(0);
 $71 = $result;
 $0 = $71;
 $72 = $0;
 STACKTOP = sp;return ($72|0);
}
function __core_end($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $__hr = 0, $__hr1 = 0, $or$cond = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $s;
 $2 = $l;
 $result = 0;
 $3 = $1;
 $4 = ($3|0)!=(0|0);
 $5 = $2;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),17202,(5686|0));
  // unreachable;
 }
 $7 = $1;
 $8 = $2;
 $9 = (_mb_attempt_func_begin($7,$8)|0);
 $__hr = $9;
 $10 = $__hr;
 $11 = ($10|0)!=(0);
 if ($11) {
  $12 = $__hr;
  $0 = $12;
  $20 = $0;
  STACKTOP = sp;return ($20|0);
 }
 $13 = $1;
 $14 = $2;
 $15 = (_mb_attempt_func_end($13,$14)|0);
 $__hr1 = $15;
 $16 = $__hr1;
 $17 = ($16|0)!=(0);
 if ($17) {
  $18 = $__hr1;
  $0 = $18;
  $20 = $0;
  STACKTOP = sp;return ($20|0);
 } else {
  $result = 6;
  $19 = $result;
  $0 = $19;
  $20 = $0;
  STACKTOP = sp;return ($20|0);
 }
 return (0)|0;
}
function __skip_struct($s,$l,$open_func,$post_open_func,$close_func) {
 $s = $s|0;
 $l = $l|0;
 $open_func = $open_func|0;
 $post_open_func = $post_open_func|0;
 $close_func = $close_func|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $ast = 0, $count = 0, $obj = 0, $obj_prev = 0, $or$cond = 0, $or$cond11 = 0, $or$cond3 = 0, $or$cond5 = 0, $or$cond7 = 0, $or$cond9 = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ast = sp + 8|0;
 $0 = $s;
 $1 = $l;
 $2 = $open_func;
 $3 = $post_open_func;
 $4 = $close_func;
 $result = 0;
 $count = 0;
 HEAP32[$ast>>2] = 0;
 $obj = 0;
 $obj_prev = 0;
 $5 = $0;
 $6 = ($5|0)!=(0|0);
 $7 = $1;
 $8 = ($7|0)!=(0|0);
 $or$cond = $6 & $8;
 $9 = $2;
 $10 = ($9|0)!=(0|0);
 $or$cond3 = $or$cond & $10;
 if ($or$cond3) {
 }
 $11 = $0;
 $12 = ($11|0)!=(0|0);
 $13 = $1;
 $14 = ($13|0)!=(0|0);
 $or$cond5 = $12 & $14;
 $15 = $2;
 $16 = ($15|0)!=(0|0);
 $or$cond7 = $or$cond5 & $16;
 $17 = $4;
 $18 = ($17|0)!=(0|0);
 $or$cond9 = $or$cond7 & $18;
 if (!($or$cond9)) {
  ___assert_fail((5797|0),(4322|0),11704,(5831|0));
  // unreachable;
 }
 $19 = $1;
 $20 = HEAP32[$19>>2]|0;
 HEAP32[$ast>>2] = $20;
 $count = 1;
 while(1) {
  $21 = HEAP32[$ast>>2]|0;
  $22 = ($21|0)!=(0|0);
  if (!($22)) {
   break;
  }
  $23 = HEAP32[$ast>>2]|0;
  $24 = ((($23)) + 8|0);
  $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
  $26 = ($25|0)!=(0|0);
  if (!($26)) {
   break;
  }
  $58 = HEAP32[$ast>>2]|0;
  $59 = HEAPU8[$58>>0]|(HEAPU8[$58+1>>0]<<8)|(HEAPU8[$58+2>>0]<<16)|(HEAPU8[$58+3>>0]<<24);
  $obj_prev = $59;
  $60 = HEAP32[$ast>>2]|0;
  $61 = ((($60)) + 8|0);
  $62 = HEAPU8[$61>>0]|(HEAPU8[$61+1>>0]<<8)|(HEAPU8[$61+2>>0]<<16)|(HEAPU8[$61+3>>0]<<24);
  HEAP32[$ast>>2] = $62;
  $63 = HEAP32[$ast>>2]|0;
  $64 = HEAPU8[$63>>0]|(HEAPU8[$63+1>>0]<<8)|(HEAPU8[$63+2>>0]<<16)|(HEAPU8[$63+3>>0]<<24);
  $obj = $64;
  $65 = $obj;
  $66 = HEAPU8[$65>>0]|(HEAPU8[$65+1>>0]<<8)|(HEAPU8[$65+2>>0]<<16)|(HEAPU8[$65+3>>0]<<24);
  $67 = ($66|0)==(8);
  do {
   if ($67) {
    $68 = $obj;
    $69 = ((($68)) + 4|0);
    $70 = HEAPU8[$69>>0]|(HEAPU8[$69+1>>0]<<8)|(HEAPU8[$69+2>>0]<<16)|(HEAPU8[$69+3>>0]<<24);
    $71 = ((($70)) + 4|0);
    $72 = HEAPU8[$71>>0]|(HEAPU8[$71+1>>0]<<8)|(HEAPU8[$71+2>>0]<<16)|(HEAPU8[$71+3>>0]<<24);
    $73 = $2;
    $74 = ($72|0)==($73|0);
    if ($74) {
     $75 = $3;
     $76 = ($75|0)!=(0|0);
     if ($76) {
      $77 = $3;
      $78 = (__skip_single_line_struct($ast,$77)|0);
      $79 = ($78<<24>>24)!=(0);
      if ($79) {
       break;
      }
     }
     $80 = $count;
     $81 = (($80) + 1)|0;
     $count = $81;
    } else {
     label = 19;
    }
   } else {
    label = 19;
   }
  } while(0);
  if ((label|0) == 19) {
   label = 0;
   $82 = $obj;
   $83 = HEAPU8[$82>>0]|(HEAPU8[$82+1>>0]<<8)|(HEAPU8[$82+2>>0]<<16)|(HEAPU8[$82+3>>0]<<24);
   $84 = ($83|0)==(8);
   if ($84) {
    $85 = $obj;
    $86 = ((($85)) + 4|0);
    $87 = HEAPU8[$86>>0]|(HEAPU8[$86+1>>0]<<8)|(HEAPU8[$86+2>>0]<<16)|(HEAPU8[$86+3>>0]<<24);
    $88 = ((($87)) + 4|0);
    $89 = HEAPU8[$88>>0]|(HEAPU8[$88+1>>0]<<8)|(HEAPU8[$88+2>>0]<<16)|(HEAPU8[$88+3>>0]<<24);
    $90 = $4;
    $91 = ($89|0)==($90|0);
    $92 = $obj_prev;
    $93 = ($92|0)!=(0|0);
    $or$cond11 = $91 & $93;
    if ($or$cond11) {
     $94 = $obj_prev;
     $95 = HEAPU8[$94>>0]|(HEAPU8[$94+1>>0]<<8)|(HEAPU8[$94+2>>0]<<16)|(HEAPU8[$94+3>>0]<<24);
     $96 = ($95|0)==(22);
     if ($96) {
      $97 = $count;
      $98 = (($97) + -1)|0;
      $count = $98;
     }
    }
   }
  }
  $99 = $count;
  $100 = ($99|0)!=(0);
  if (!($100)) {
   label = 24;
   break;
  }
 }
 if ((label|0) == 24) {
  $101 = HEAP32[$ast>>2]|0;
  $102 = $1;
  HEAP32[$102>>2] = $101;
  $103 = $result;
  STACKTOP = sp;return ($103|0);
 }
 $27 = HEAP32[$ast>>2]|0;
 $28 = ($27|0)!=(0|0);
 if ($28) {
  $29 = HEAP32[$ast>>2]|0;
  $30 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8)|(HEAPU8[$29+2>>0]<<16)|(HEAPU8[$29+3>>0]<<24);
  $31 = ($30|0)!=(0|0);
  if ($31) {
   $32 = $0;
   $33 = $0;
   $34 = ((($33)) + 67|0);
   $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
   $36 = (__set_current_error($32,27,$35)|0);
   $37 = ($36<<24>>24)!=(0);
   if (!($37)) {
    $101 = HEAP32[$ast>>2]|0;
    $102 = $1;
    HEAP32[$102>>2] = $101;
    $103 = $result;
    STACKTOP = sp;return ($103|0);
   }
   $38 = $0;
   $39 = HEAP32[$ast>>2]|0;
   $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8)|(HEAPU8[$39+2>>0]<<16)|(HEAPU8[$39+3>>0]<<24);
   $41 = ((($40)) + 9|0);
   $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
   $43 = HEAP32[$ast>>2]|0;
   $44 = HEAPU8[$43>>0]|(HEAPU8[$43+1>>0]<<8)|(HEAPU8[$43+2>>0]<<16)|(HEAPU8[$43+3>>0]<<24);
   $45 = ((($44)) + 13|0);
   $46 = HEAPU8[$45>>0]|(HEAPU8[$45+1>>0]<<8);
   $47 = HEAP32[$ast>>2]|0;
   $48 = HEAPU8[$47>>0]|(HEAPU8[$47+1>>0]<<8)|(HEAPU8[$47+2>>0]<<16)|(HEAPU8[$47+3>>0]<<24);
   $49 = ((($48)) + 15|0);
   $50 = HEAPU8[$49>>0]|(HEAPU8[$49+1>>0]<<8);
   __set_error_pos($38,$42,$46,$50);
   $result = 3;
   $101 = HEAP32[$ast>>2]|0;
   $102 = $1;
   HEAP32[$102>>2] = $101;
   $103 = $result;
   STACKTOP = sp;return ($103|0);
  }
 }
 $51 = $0;
 $52 = $0;
 $53 = ((($52)) + 67|0);
 $54 = HEAPU8[$53>>0]|(HEAPU8[$53+1>>0]<<8)|(HEAPU8[$53+2>>0]<<16)|(HEAPU8[$53+3>>0]<<24);
 $55 = (__set_current_error($51,27,$54)|0);
 $56 = ($55<<24>>24)!=(0);
 if (!($56)) {
  $101 = HEAP32[$ast>>2]|0;
  $102 = $1;
  HEAP32[$102>>2] = $101;
  $103 = $result;
  STACKTOP = sp;return ($103|0);
 }
 $57 = $0;
 __set_error_pos($57,0,0,0);
 $result = 3;
 $101 = HEAP32[$ast>>2]|0;
 $102 = $1;
 HEAP32[$102>>2] = $101;
 $103 = $result;
 STACKTOP = sp;return ($103|0);
}
function __skip_single_line_struct($ast,$func) {
 $ast = $ast|0;
 $func = $func|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $post = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $ast;
 $2 = $func;
 $3 = $1;
 $4 = HEAP32[$3>>2]|0;
 $post = $4;
 while(1) {
  $5 = $post;
  $6 = ($5|0)!=(0|0);
  if ($6) {
   $7 = $post;
   $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
   $9 = ($8|0)!=(0|0);
   if ($9) {
    $10 = $post;
    $11 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
    $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
    $13 = ($12|0)==(22);
    $15 = $13;
   } else {
    $15 = 0;
   }
   $14 = $15 ^ 1;
   $43 = $14;
  } else {
   $43 = 0;
  }
  $16 = $post;
  if (!($43)) {
   break;
  }
  $17 = ((($16)) + 8|0);
  $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
  $post = $18;
 }
 $19 = ($16|0)!=(0|0);
 do {
  if ($19) {
   $20 = $post;
   $21 = ((($20)) + 4|0);
   $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
   $23 = ($22|0)!=(0|0);
   if ($23) {
    $24 = $post;
    $25 = ((($24)) + 4|0);
    $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
    $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
    $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
    $29 = ($28|0)==(8);
    if ($29) {
     $30 = $post;
     $31 = ((($30)) + 4|0);
     $32 = HEAPU8[$31>>0]|(HEAPU8[$31+1>>0]<<8)|(HEAPU8[$31+2>>0]<<16)|(HEAPU8[$31+3>>0]<<24);
     $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
     $34 = ((($33)) + 4|0);
     $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
     $36 = ((($35)) + 4|0);
     $37 = HEAPU8[$36>>0]|(HEAPU8[$36+1>>0]<<8)|(HEAPU8[$36+2>>0]<<16)|(HEAPU8[$36+3>>0]<<24);
     $38 = $2;
     $39 = ($37|0)==($38|0);
     if ($39) {
      break;
     }
    }
    $40 = $post;
    $41 = $1;
    HEAP32[$41>>2] = $40;
    $0 = 1;
    $42 = $0;
    STACKTOP = sp;return ($42|0);
   }
  }
 } while(0);
 $0 = 0;
 $42 = $0;
 STACKTOP = sp;return ($42|0);
}
function __core_in($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $ast = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $l;
 $result = 0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 $ast = $3;
 $4 = $ast;
 $5 = ($4|0)!=(0|0);
 if ($5) {
  $6 = $ast;
  $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
  $8 = ($7|0)!=(0|0);
  if ($8) {
   $9 = $0;
   $10 = (__set_current_error($9,50,6316)|0);
   $11 = ($10<<24>>24)!=(0);
   if (!($11)) {
    $29 = $result;
    STACKTOP = sp;return ($29|0);
   }
   $12 = $0;
   $13 = $ast;
   $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
   $15 = ((($14)) + 9|0);
   $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
   $17 = $ast;
   $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
   $19 = ((($18)) + 13|0);
   $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8);
   $21 = $ast;
   $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
   $23 = ((($22)) + 15|0);
   $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8);
   __set_error_pos($12,$16,$20,$24);
   $result = 3;
   $29 = $result;
   STACKTOP = sp;return ($29|0);
  }
 }
 $25 = $0;
 $26 = (__set_current_error($25,50,6316)|0);
 $27 = ($26<<24>>24)!=(0);
 if (!($27)) {
  $29 = $result;
  STACKTOP = sp;return ($29|0);
 }
 $28 = $0;
 __set_error_pos($28,0,0,0);
 $result = 3;
 $29 = $result;
 STACKTOP = sp;return ($29|0);
}
function __execute_ranged_for_loop($s,$l,$var_loop) {
 $s = $s|0;
 $l = $l|0;
 $var_loop = $var_loop|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0;
 var $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0;
 var $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0;
 var $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0;
 var $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0;
 var $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0;
 var $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0;
 var $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0;
 var $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0;
 var $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0;
 var $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0;
 var $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0;
 var $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0;
 var $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0;
 var $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0;
 var $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0;
 var $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0;
 var $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0;
 var $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $ast = 0, $curr_obj = 0;
 var $curr_val = 0, $dit = 0, $it_obj = 0, $lit = 0, $moved_next = 0, $old_val = 0, $old_val_gc = 0, $or$cond = 0, $or$cond11 = 0, $or$cond3 = 0, $or$cond5 = 0, $or$cond7 = 0, $or$cond9 = 0, $os = 0, $pathed_var = 0, $range = 0, $range_ptr = 0, $ref_it = 0, $ref_val = 0, $result = 0;
 var $running = 0, $tdit = 0, $tlit = 0, $to_node = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ast = sp + 44|0;
 $range = sp + 136|0;
 $range_ptr = sp + 20|0;
 $ref_val = sp + 128|0;
 $ref_it = sp + 120|0;
 $moved_next = sp + 112|0;
 $curr_val = sp + 104|0;
 $curr_obj = sp + 81|0;
 $it_obj = sp + 64|0;
 $0 = $s;
 $1 = $l;
 $2 = $var_loop;
 $result = 3;
 HEAP32[$ast>>2] = 0;
 $running = 0;
 $pathed_var = 0;
 $old_val = 0;
 $old_val_gc = 0;
 $to_node = 0;
 HEAP32[$range_ptr>>2] = 0;
 $lit = 0;
 $dit = 0;
 $tlit = 0;
 $tdit = 0;
 $os = 0;
 $3 = $0;
 $4 = ($3|0)!=(0|0);
 $5 = $1;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if ($or$cond) {
 }
 $7 = $0;
 $8 = ($7|0)!=(0|0);
 $9 = $1;
 $10 = ($9|0)!=(0|0);
 $or$cond3 = $8 & $10;
 $11 = $2;
 $12 = ($11|0)!=(0|0);
 $or$cond5 = $or$cond3 & $12;
 if (!($or$cond5)) {
  ___assert_fail((5908|0),(4322|0),11435,(6169|0));
  // unreachable;
 }
 $13 = $0;
 $14 = ((($13)) + 75|0);
 $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
 $running = $15;
 $16 = $2;
 $17 = ((($16)) + 8|0);
 $18 = HEAP8[$17>>0]|0;
 $19 = $18 & 3;
 $20 = ($19<<24>>24)!=(0);
 if ($20) {
  $21 = $0;
  $22 = $2;
  $23 = (__search_var_in_scope_chain($21,$22,0)|0);
  $pathed_var = $23;
 }
 $24 = $pathed_var;
 $25 = ($24|0)!=(0|0);
 if ($25) {
  $26 = $pathed_var;
  $27 = ((($26)) + 4|0);
  $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
  $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
  L12: do {
   switch ($29|0) {
   case 7:  {
    $30 = $pathed_var;
    $31 = ((($30)) + 4|0);
    $32 = HEAPU8[$31>>0]|(HEAPU8[$31+1>>0]<<8)|(HEAPU8[$31+2>>0]<<16)|(HEAPU8[$31+3>>0]<<24);
    $33 = ((($32)) + 4|0);
    $34 = HEAPU8[$33>>0]|(HEAPU8[$33+1>>0]<<8)|(HEAPU8[$33+2>>0]<<16)|(HEAPU8[$33+3>>0]<<24);
    $35 = $pathed_var;
    $36 = ((($35)) + 4|0);
    $37 = HEAPU8[$36>>0]|(HEAPU8[$36+1>>0]<<8)|(HEAPU8[$36+2>>0]<<16)|(HEAPU8[$36+3>>0]<<24);
    $38 = ((($37)) + 4|0);
    $39 = HEAPU8[$38>>0]|(HEAPU8[$38+1>>0]<<8)|(HEAPU8[$38+2>>0]<<16)|(HEAPU8[$38+3>>0]<<24);
    (__unref($34,$39)|0);
    break;
   }
   case 10:  {
    $40 = $pathed_var;
    $41 = ((($40)) + 4|0);
    $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
    $43 = ((($42)) + 8|0);
    $44 = HEAP8[$43>>0]|0;
    $45 = $44 & 1;
    $46 = ($45<<24>>24)!=(0);
    if (!($46)) {
     $47 = $pathed_var;
     $48 = ((($47)) + 4|0);
     $49 = HEAPU8[$48>>0]|(HEAPU8[$48+1>>0]<<8)|(HEAPU8[$48+2>>0]<<16)|(HEAPU8[$48+3>>0]<<24);
     $50 = ((($49)) + 4|0);
     $51 = HEAPU8[$50>>0]|(HEAPU8[$50+1>>0]<<8)|(HEAPU8[$50+2>>0]<<16)|(HEAPU8[$50+3>>0]<<24);
     $52 = $pathed_var;
     $53 = ((($52)) + 4|0);
     $54 = HEAPU8[$53>>0]|(HEAPU8[$53+1>>0]<<8)|(HEAPU8[$53+2>>0]<<16)|(HEAPU8[$53+3>>0]<<24);
     $55 = ((($54)) + 4|0);
     $56 = HEAPU8[$55>>0]|(HEAPU8[$55+1>>0]<<8)|(HEAPU8[$55+2>>0]<<16)|(HEAPU8[$55+3>>0]<<24);
     (__unref($51,$56)|0);
    }
    break;
   }
   case 11:  {
    $57 = $pathed_var;
    $58 = ((($57)) + 4|0);
    $59 = HEAPU8[$58>>0]|(HEAPU8[$58+1>>0]<<8)|(HEAPU8[$58+2>>0]<<16)|(HEAPU8[$58+3>>0]<<24);
    $60 = ((($59)) + 4|0);
    $61 = HEAPU8[$60>>0]|(HEAPU8[$60+1>>0]<<8)|(HEAPU8[$60+2>>0]<<16)|(HEAPU8[$60+3>>0]<<24);
    $62 = $pathed_var;
    $63 = ((($62)) + 4|0);
    $64 = HEAPU8[$63>>0]|(HEAPU8[$63+1>>0]<<8)|(HEAPU8[$63+2>>0]<<16)|(HEAPU8[$63+3>>0]<<24);
    $65 = ((($64)) + 4|0);
    $66 = HEAPU8[$65>>0]|(HEAPU8[$65+1>>0]<<8)|(HEAPU8[$65+2>>0]<<16)|(HEAPU8[$65+3>>0]<<24);
    (__unref($61,$66)|0);
    break;
   }
   case 13:  {
    $67 = $pathed_var;
    $68 = ((($67)) + 4|0);
    $69 = HEAPU8[$68>>0]|(HEAPU8[$68+1>>0]<<8)|(HEAPU8[$68+2>>0]<<16)|(HEAPU8[$68+3>>0]<<24);
    $70 = ((($69)) + 4|0);
    $71 = HEAPU8[$70>>0]|(HEAPU8[$70+1>>0]<<8)|(HEAPU8[$70+2>>0]<<16)|(HEAPU8[$70+3>>0]<<24);
    $72 = $pathed_var;
    $73 = ((($72)) + 4|0);
    $74 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
    $75 = ((($74)) + 4|0);
    $76 = HEAPU8[$75>>0]|(HEAPU8[$75+1>>0]<<8)|(HEAPU8[$75+2>>0]<<16)|(HEAPU8[$75+3>>0]<<24);
    (__unref($71,$76)|0);
    break;
   }
   case 16:  {
    $77 = $pathed_var;
    $78 = ((($77)) + 4|0);
    $79 = HEAPU8[$78>>0]|(HEAPU8[$78+1>>0]<<8)|(HEAPU8[$78+2>>0]<<16)|(HEAPU8[$78+3>>0]<<24);
    $80 = ((($79)) + 8|0);
    $81 = HEAP8[$80>>0]|0;
    $82 = $81 & 1;
    $83 = ($82<<24>>24)!=(0);
    if (!($83)) {
     $84 = $pathed_var;
     $85 = ((($84)) + 4|0);
     $86 = HEAPU8[$85>>0]|(HEAPU8[$85+1>>0]<<8)|(HEAPU8[$85+2>>0]<<16)|(HEAPU8[$85+3>>0]<<24);
     $87 = ((($86)) + 4|0);
     $88 = HEAPU8[$87>>0]|(HEAPU8[$87+1>>0]<<8)|(HEAPU8[$87+2>>0]<<16)|(HEAPU8[$87+3>>0]<<24);
     $89 = $pathed_var;
     $90 = ((($89)) + 4|0);
     $91 = HEAPU8[$90>>0]|(HEAPU8[$90+1>>0]<<8)|(HEAPU8[$90+2>>0]<<16)|(HEAPU8[$90+3>>0]<<24);
     $92 = ((($91)) + 4|0);
     $93 = HEAPU8[$92>>0]|(HEAPU8[$92+1>>0]<<8)|(HEAPU8[$92+2>>0]<<16)|(HEAPU8[$92+3>>0]<<24);
     (__unref($88,$93)|0);
    }
    break;
   }
   case 17:  {
    $94 = $pathed_var;
    $95 = ((($94)) + 4|0);
    $96 = HEAPU8[$95>>0]|(HEAPU8[$95+1>>0]<<8)|(HEAPU8[$95+2>>0]<<16)|(HEAPU8[$95+3>>0]<<24);
    $97 = ((($96)) + 8|0);
    $98 = HEAP8[$97>>0]|0;
    $99 = $98 & 1;
    $100 = ($99<<24>>24)!=(0);
    if (!($100)) {
     $101 = $pathed_var;
     $102 = ((($101)) + 4|0);
     $103 = HEAPU8[$102>>0]|(HEAPU8[$102+1>>0]<<8)|(HEAPU8[$102+2>>0]<<16)|(HEAPU8[$102+3>>0]<<24);
     $104 = ((($103)) + 4|0);
     $105 = HEAPU8[$104>>0]|(HEAPU8[$104+1>>0]<<8)|(HEAPU8[$104+2>>0]<<16)|(HEAPU8[$104+3>>0]<<24);
     $106 = ((($105)) + 58|0);
     $107 = HEAPU8[$106>>0]|(HEAPU8[$106+1>>0]<<8)|(HEAPU8[$106+2>>0]<<16)|(HEAPU8[$106+3>>0]<<24);
     $108 = ($107|0)==(2);
     if ($108) {
      $109 = $pathed_var;
      $110 = ((($109)) + 4|0);
      $111 = HEAPU8[$110>>0]|(HEAPU8[$110+1>>0]<<8)|(HEAPU8[$110+2>>0]<<16)|(HEAPU8[$110+3>>0]<<24);
      $112 = ((($111)) + 4|0);
      $113 = HEAPU8[$112>>0]|(HEAPU8[$112+1>>0]<<8)|(HEAPU8[$112+2>>0]<<16)|(HEAPU8[$112+3>>0]<<24);
      $114 = $pathed_var;
      $115 = ((($114)) + 4|0);
      $116 = HEAPU8[$115>>0]|(HEAPU8[$115+1>>0]<<8)|(HEAPU8[$115+2>>0]<<16)|(HEAPU8[$115+3>>0]<<24);
      $117 = ((($116)) + 4|0);
      $118 = HEAPU8[$117>>0]|(HEAPU8[$117+1>>0]<<8)|(HEAPU8[$117+2>>0]<<16)|(HEAPU8[$117+3>>0]<<24);
      (__unref($113,$118)|0);
      break L12;
     }
    }
    $119 = $pathed_var;
    $120 = ((($119)) + 4|0);
    $121 = HEAPU8[$120>>0]|(HEAPU8[$120+1>>0]<<8)|(HEAPU8[$120+2>>0]<<16)|(HEAPU8[$120+3>>0]<<24);
    $122 = ((($121)) + 8|0);
    $123 = HEAP8[$122>>0]|0;
    $124 = $123 & 1;
    $125 = ($124<<24>>24)!=(0);
    if (!($125)) {
     $126 = $pathed_var;
     $127 = ((($126)) + 4|0);
     $128 = HEAPU8[$127>>0]|(HEAPU8[$127+1>>0]<<8)|(HEAPU8[$127+2>>0]<<16)|(HEAPU8[$127+3>>0]<<24);
     $129 = ((($128)) + 4|0);
     $130 = HEAPU8[$129>>0]|(HEAPU8[$129+1>>0]<<8)|(HEAPU8[$129+2>>0]<<16)|(HEAPU8[$129+3>>0]<<24);
     $131 = ((($130)) + 58|0);
     $132 = HEAPU8[$131>>0]|(HEAPU8[$131+1>>0]<<8)|(HEAPU8[$131+2>>0]<<16)|(HEAPU8[$131+3>>0]<<24);
     $133 = ($132|0)!=(2);
     if ($133) {
      $134 = $pathed_var;
      $135 = ((($134)) + 4|0);
      $136 = HEAPU8[$135>>0]|(HEAPU8[$135+1>>0]<<8)|(HEAPU8[$135+2>>0]<<16)|(HEAPU8[$135+3>>0]<<24);
      $137 = ((($136)) + 4|0);
      $138 = HEAPU8[$137>>0]|(HEAPU8[$137+1>>0]<<8)|(HEAPU8[$137+2>>0]<<16)|(HEAPU8[$137+3>>0]<<24);
      __destroy_routine(0,$138);
     }
    }
    break;
   }
   default: {
   }
   }
  } while(0);
  $139 = $pathed_var;
  $140 = ((($139)) + 4|0);
  $141 = HEAPU8[$140>>0]|(HEAPU8[$140+1>>0]<<8)|(HEAPU8[$140+2>>0]<<16)|(HEAPU8[$140+3>>0]<<24);
  dest=$141; stop=dest+17|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
  $142 = $pathed_var;
  $143 = ((($142)) + 4|0);
  $144 = HEAPU8[$143>>0]|(HEAPU8[$143+1>>0]<<8)|(HEAPU8[$143+2>>0]<<16)|(HEAPU8[$143+3>>0]<<24);
  HEAP8[$144>>0]=0&255;HEAP8[$144+1>>0]=(0>>8)&255;HEAP8[$144+2>>0]=(0>>16)&255;HEAP8[$144+3>>0]=0>>24;
 }
 $145 = $pathed_var;
 $146 = ($145|0)!=(0|0);
 if (!($146)) {
  $147 = $2;
  $pathed_var = $147;
 }
 $148 = $pathed_var;
 $149 = ((($148)) + 4|0);
 $150 = HEAPU8[$149>>0]|(HEAPU8[$149+1>>0]<<8)|(HEAPU8[$149+2>>0]<<16)|(HEAPU8[$149+3>>0]<<24);
 $old_val = $150;
 $151 = $old_val;
 $152 = (__is_ref($151)|0);
 $153 = ($152<<24>>24)!=(0);
 if ($153) {
  $154 = $old_val;
  $155 = ((($154)) + 4|0);
  $156 = HEAPU8[$155>>0]|(HEAPU8[$155+1>>0]<<8)|(HEAPU8[$155+2>>0]<<16)|(HEAPU8[$155+3>>0]<<24);
  $old_val_gc = $156;
  $157 = $old_val_gc;
  $158 = $old_val_gc;
  $159 = $old_val_gc;
  $160 = ((($159)) + 13|0);
  $161 = HEAPU8[$160>>0]|(HEAPU8[$160+1>>0]<<8)|(HEAPU8[$160+2>>0]<<16)|(HEAPU8[$160+3>>0]<<24);
  $162 = ((($161)) + 21|0);
  $163 = (__gc_remove($157,$158,$162)|0);
  $164 = ($163|0)!=(0);
  if (!($164)) {
   $old_val_gc = 0;
  }
 }
 HEAP32[$range_ptr>>2] = $range;
 $165 = HEAP32[$range_ptr>>2]|0;
 dest=$165; stop=dest+17|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
 $166 = HEAP32[$range_ptr>>2]|0;
 HEAP8[$166>>0]=0&255;HEAP8[$166+1>>0]=(0>>8)&255;HEAP8[$166+2>>0]=(0>>16)&255;HEAP8[$166+3>>0]=0>>24;
 $167 = ((($ref_val)) + 4|0);
 ;HEAP8[$167>>0]=0|0;HEAP8[$167+1>>0]=0|0;HEAP8[$167+2>>0]=0|0;HEAP8[$167+3>>0]=0|0;
 HEAP8[$ref_val>>0]=0&255;HEAP8[$ref_val+1>>0]=(0>>8)&255;HEAP8[$ref_val+2>>0]=(0>>16)&255;HEAP8[$ref_val+3>>0]=0>>24;
 $168 = ((($ref_it)) + 4|0);
 ;HEAP8[$168>>0]=0|0;HEAP8[$168+1>>0]=0|0;HEAP8[$168+2>>0]=0|0;HEAP8[$168+3>>0]=0|0;
 HEAP8[$ref_it>>0]=0&255;HEAP8[$ref_it+1>>0]=(0>>8)&255;HEAP8[$ref_it+2>>0]=(0>>16)&255;HEAP8[$ref_it+3>>0]=0>>24;
 $169 = $1;
 $170 = HEAP32[$169>>2]|0;
 HEAP32[$ast>>2] = $170;
 $171 = HEAP32[$ast>>2]|0;
 $172 = ((($171)) + 8|0);
 $173 = HEAPU8[$172>>0]|(HEAPU8[$172+1>>0]<<8)|(HEAPU8[$172+2>>0]<<16)|(HEAPU8[$172+3>>0]<<24);
 HEAP32[$ast>>2] = $173;
 $174 = HEAP32[$ast>>2]|0;
 $175 = ((($174)) + 8|0);
 $176 = HEAPU8[$175>>0]|(HEAPU8[$175+1>>0]<<8)|(HEAPU8[$175+2>>0]<<16)|(HEAPU8[$175+3>>0]<<24);
 HEAP32[$ast>>2] = $176;
 $177 = HEAP32[$ast>>2]|0;
 $178 = ($177|0)!=(0|0);
 L36: do {
  if ($178) {
   $210 = $0;
   $211 = (__calc_expression($210,$ast,$range_ptr)|0);
   $result = $211;
   $212 = $result;
   $213 = ($212|0)!=(0);
   if (!($213)) {
    $214 = HEAP32[$range_ptr>>2]|0;
    $215 = HEAPU8[$214>>0]|(HEAPU8[$214+1>>0]<<8)|(HEAPU8[$214+2>>0]<<16)|(HEAPU8[$214+3>>0]<<24);
    switch ($215|0) {
    case 7:  {
     $216 = HEAP32[$range_ptr>>2]|0;
     (__internal_object_to_public_value($216,$ref_val)|0);
     $217 = $0;
     $218 = (__try_overridden($217,$ast,$ref_val,6194,64)|0);
     $os = $218;
     $219 = $os;
     $220 = $219 & 1;
     $221 = ($220|0)!=(0);
     if ($221) {
      $222 = $os;
      $223 = $222 & 2;
      $224 = ($223|0)!=(0);
      if ($224) {
       $225 = $running;
       $226 = ((($225)) + 20|0);
       __swap_public_value($ref_it,$226);
      }
     }
     break;
    }
    case 11:  {
     $227 = HEAP32[$range_ptr>>2]|0;
     $228 = ((($227)) + 4|0);
     $229 = HEAPU8[$228>>0]|(HEAPU8[$228+1>>0]<<8)|(HEAPU8[$228+2>>0]<<16)|(HEAPU8[$228+3>>0]<<24);
     $230 = (__create_list_it($229,1)|0);
     $lit = $230;
     $tlit = $230;
     break;
    }
    case 13:  {
     $231 = HEAP32[$range_ptr>>2]|0;
     $232 = ((($231)) + 4|0);
     $233 = HEAPU8[$232>>0]|(HEAPU8[$232+1>>0]<<8)|(HEAPU8[$232+2>>0]<<16)|(HEAPU8[$232+3>>0]<<24);
     $234 = (__create_dict_it($233,1)|0);
     $dit = $234;
     $tdit = $234;
     break;
    }
    case 16:  {
     $235 = HEAP32[$range_ptr>>2]|0;
     (__internal_object_to_public_value($235,$ref_val)|0);
     $236 = $0;
     $237 = (__try_overridden($236,$ast,$ref_val,6194,64)|0);
     $os = $237;
     $238 = $os;
     $239 = $238 & 1;
     $240 = ($239|0)!=(0);
     if ($240) {
      $241 = $os;
      $242 = $241 & 2;
      $243 = ($242|0)!=(0);
      if ($243) {
       $244 = $running;
       $245 = ((($244)) + 20|0);
       __swap_public_value($ref_it,$245);
      }
     }
     break;
    }
    default: {
     $246 = HEAP32[$ast>>2]|0;
     $247 = ($246|0)!=(0|0);
     if ($247) {
      $248 = HEAP32[$ast>>2]|0;
      $249 = HEAPU8[$248>>0]|(HEAPU8[$248+1>>0]<<8)|(HEAPU8[$248+2>>0]<<16)|(HEAPU8[$248+3>>0]<<24);
      $250 = ($249|0)!=(0|0);
      if ($250) {
       $251 = $0;
       $252 = $0;
       $253 = ((($252)) + 67|0);
       $254 = HEAPU8[$253>>0]|(HEAPU8[$253+1>>0]<<8)|(HEAPU8[$253+2>>0]<<16)|(HEAPU8[$253+3>>0]<<24);
       $255 = (__set_current_error($251,64,$254)|0);
       $256 = ($255<<24>>24)!=(0);
       if (!($256)) {
        break L36;
       }
       $257 = $0;
       $258 = HEAP32[$ast>>2]|0;
       $259 = HEAPU8[$258>>0]|(HEAPU8[$258+1>>0]<<8)|(HEAPU8[$258+2>>0]<<16)|(HEAPU8[$258+3>>0]<<24);
       $260 = ((($259)) + 9|0);
       $261 = HEAPU8[$260>>0]|(HEAPU8[$260+1>>0]<<8)|(HEAPU8[$260+2>>0]<<16)|(HEAPU8[$260+3>>0]<<24);
       $262 = HEAP32[$ast>>2]|0;
       $263 = HEAPU8[$262>>0]|(HEAPU8[$262+1>>0]<<8)|(HEAPU8[$262+2>>0]<<16)|(HEAPU8[$262+3>>0]<<24);
       $264 = ((($263)) + 13|0);
       $265 = HEAPU8[$264>>0]|(HEAPU8[$264+1>>0]<<8);
       $266 = HEAP32[$ast>>2]|0;
       $267 = HEAPU8[$266>>0]|(HEAPU8[$266+1>>0]<<8)|(HEAPU8[$266+2>>0]<<16)|(HEAPU8[$266+3>>0]<<24);
       $268 = ((($267)) + 15|0);
       $269 = HEAPU8[$268>>0]|(HEAPU8[$268+1>>0]<<8);
       __set_error_pos($257,$261,$265,$269);
       $result = 3;
       break L36;
      }
     }
     $270 = $0;
     $271 = $0;
     $272 = ((($271)) + 67|0);
     $273 = HEAPU8[$272>>0]|(HEAPU8[$272+1>>0]<<8)|(HEAPU8[$272+2>>0]<<16)|(HEAPU8[$272+3>>0]<<24);
     $274 = (__set_current_error($270,64,$273)|0);
     $275 = ($274<<24>>24)!=(0);
     if (!($275)) {
      break L36;
     }
     $276 = $0;
     __set_error_pos($276,0,0,0);
     $result = 3;
     break L36;
    }
    }
    $277 = HEAP32[$ast>>2]|0;
    $to_node = $277;
    $278 = HEAP32[$range_ptr>>2]|0;
    $279 = HEAPU8[$278>>0]|(HEAPU8[$278+1>>0]<<8)|(HEAPU8[$278+2>>0]<<16)|(HEAPU8[$278+3>>0]<<24);
    switch ($279|0) {
    case 11:  {
     $280 = HEAP32[$range_ptr>>2]|0;
     $281 = ((($280)) + 4|0);
     $282 = HEAPU8[$281>>0]|(HEAPU8[$281+1>>0]<<8)|(HEAPU8[$281+2>>0]<<16)|(HEAPU8[$281+3>>0]<<24);
     $283 = HEAP32[$range_ptr>>2]|0;
     $284 = ((($283)) + 4|0);
     $285 = HEAPU8[$284>>0]|(HEAPU8[$284+1>>0]<<8)|(HEAPU8[$284+2>>0]<<16)|(HEAPU8[$284+3>>0]<<24);
     (__ref($282,$285)|0);
     break;
    }
    case 13:  {
     $286 = HEAP32[$range_ptr>>2]|0;
     $287 = ((($286)) + 4|0);
     $288 = HEAPU8[$287>>0]|(HEAPU8[$287+1>>0]<<8)|(HEAPU8[$287+2>>0]<<16)|(HEAPU8[$287+3>>0]<<24);
     $289 = HEAP32[$range_ptr>>2]|0;
     $290 = ((($289)) + 4|0);
     $291 = HEAPU8[$290>>0]|(HEAPU8[$290+1>>0]<<8)|(HEAPU8[$290+2>>0]<<16)|(HEAPU8[$290+3>>0]<<24);
     (__ref($288,$291)|0);
     break;
    }
    case 7:  {
     $292 = HEAP32[$range_ptr>>2]|0;
     $293 = ((($292)) + 4|0);
     $294 = HEAPU8[$293>>0]|(HEAPU8[$293+1>>0]<<8)|(HEAPU8[$293+2>>0]<<16)|(HEAPU8[$293+3>>0]<<24);
     $295 = HEAP32[$range_ptr>>2]|0;
     $296 = ((($295)) + 4|0);
     $297 = HEAPU8[$296>>0]|(HEAPU8[$296+1>>0]<<8)|(HEAPU8[$296+2>>0]<<16)|(HEAPU8[$296+3>>0]<<24);
     (__ref($294,$297)|0);
     break;
    }
    default: {
    }
    }
    while(1) {
     $298 = $to_node;
     HEAP32[$ast>>2] = $298;
     $299 = HEAPU8[$ref_it>>0]|(HEAPU8[$ref_it+1>>0]<<8)|(HEAPU8[$ref_it+2>>0]<<16)|(HEAPU8[$ref_it+3>>0]<<24);
     $300 = ($299|0)!=(0);
     if (!($300)) {
      $394 = $lit;
      $395 = ($394|0)!=(0|0);
      if ($395) {
       $396 = $lit;
       $397 = (__move_list_it_next($396)|0);
       $lit = $397;
      } else {
       $398 = $dit;
       $399 = ($398|0)!=(0|0);
       if ($399) {
        $400 = $dit;
        $401 = (__move_dict_it_next($400)|0);
        $dit = $401;
       }
      }
      $402 = $lit;
      $403 = ($402|0)!=(0|0);
      if ($403) {
       $404 = $lit;
       $405 = (__invalid_list_it($404)|0);
       $406 = $405&255;
       $407 = ($406|0)!=(0);
       if ($407) {
        label = 90;
        break;
       }
      }
      $408 = $dit;
      $409 = ($408|0)!=(0|0);
      if ($409) {
       $410 = $dit;
       $411 = (__invalid_dict_it($410)|0);
       $412 = $411&255;
       $413 = ($412|0)!=(0);
       if ($413) {
        label = 90;
        break;
       }
      }
      $445 = $lit;
      $446 = ($445|0)!=(0|0);
      $447 = $dit;
      $448 = ($447|0)!=(0|0);
      $or$cond9 = $446 | $448;
      if (!($or$cond9)) {
       label = 97;
       break;
      }
      $451 = $lit;
      $452 = ($451|0)!=(0|0);
      do {
       if ($452) {
        $453 = $lit;
        $454 = ((($453)) + 17|0);
        $455 = HEAPU8[$454>>0]|(HEAPU8[$454+1>>0]<<8)|(HEAPU8[$454+2>>0]<<16)|(HEAPU8[$454+3>>0]<<24);
        $456 = ((($455)) + 35|0);
        $457 = HEAPU8[$456>>0]|(HEAPU8[$456+1>>0]<<8)|(HEAPU8[$456+2>>0]<<16)|(HEAPU8[$456+3>>0]<<24);
        $458 = ($457|0)!=(0|0);
        if ($458) {
         label = 103;
        } else {
         $459 = $lit;
         $460 = ((($459)) + 22|0);
         $461 = HEAPU8[$460>>0]|(HEAPU8[$460+1>>0]<<8)|(HEAPU8[$460+2>>0]<<16)|(HEAPU8[$460+3>>0]<<24);
         $462 = ($461|0)!=(0|0);
         if ($462) {
          $463 = $lit;
          $464 = ((($463)) + 22|0);
          $465 = HEAPU8[$464>>0]|(HEAPU8[$464+1>>0]<<8)|(HEAPU8[$464+2>>0]<<16)|(HEAPU8[$464+3>>0]<<24);
          $466 = HEAPU8[$465>>0]|(HEAPU8[$465+1>>0]<<8)|(HEAPU8[$465+2>>0]<<16)|(HEAPU8[$465+3>>0]<<24);
          $467 = ($466|0)!=(0|0);
          if (!($467)) {
           label = 103;
           break;
          }
          $468 = $lit;
          $469 = ((($468)) + 22|0);
          $470 = HEAPU8[$469>>0]|(HEAPU8[$469+1>>0]<<8)|(HEAPU8[$469+2>>0]<<16)|(HEAPU8[$469+3>>0]<<24);
          $471 = HEAPU8[$470>>0]|(HEAPU8[$470+1>>0]<<8)|(HEAPU8[$470+2>>0]<<16)|(HEAPU8[$470+3>>0]<<24);
          $472 = $pathed_var;
          $473 = ((($472)) + 4|0);
          HEAP8[$473>>0]=$471&255;HEAP8[$473+1>>0]=($471>>8)&255;HEAP8[$473+2>>0]=($471>>16)&255;HEAP8[$473+3>>0]=$471>>24;
         } else {
          label = 103;
         }
        }
       } else {
        label = 103;
       }
      } while(0);
      L81: do {
       if ((label|0) == 103) {
        label = 0;
        $474 = $lit;
        $475 = ($474|0)!=(0|0);
        do {
         if ($475) {
          $476 = $lit;
          $477 = ((($476)) + 17|0);
          $478 = HEAPU8[$477>>0]|(HEAPU8[$477+1>>0]<<8)|(HEAPU8[$477+2>>0]<<16)|(HEAPU8[$477+3>>0]<<24);
          $479 = ((($478)) + 35|0);
          $480 = HEAPU8[$479>>0]|(HEAPU8[$479+1>>0]<<8)|(HEAPU8[$479+2>>0]<<16)|(HEAPU8[$479+3>>0]<<24);
          $481 = ($480|0)!=(0|0);
          if (!($481)) {
           break;
          }
          $482 = $pathed_var;
          $483 = ((($482)) + 4|0);
          $484 = HEAPU8[$483>>0]|(HEAPU8[$483+1>>0]<<8)|(HEAPU8[$483+2>>0]<<16)|(HEAPU8[$483+3>>0]<<24);
          (__dispose_object($484)|0);
          $485 = $pathed_var;
          $486 = ((($485)) + 4|0);
          $487 = HEAPU8[$486>>0]|(HEAPU8[$486+1>>0]<<8)|(HEAPU8[$486+2>>0]<<16)|(HEAPU8[$486+3>>0]<<24);
          HEAP8[$487>>0]=2&255;HEAP8[$487+1>>0]=(2>>8)&255;HEAP8[$487+2>>0]=(2>>16)&255;HEAP8[$487+3>>0]=2>>24;
          $488 = $lit;
          $489 = ((($488)) + 22|0);
          $490 = HEAPU8[$489>>0]|(HEAPU8[$489+1>>0]<<8)|(HEAPU8[$489+2>>0]<<16)|(HEAPU8[$489+3>>0]<<24);
          $491 = $pathed_var;
          $492 = ((($491)) + 4|0);
          $493 = HEAPU8[$492>>0]|(HEAPU8[$492+1>>0]<<8)|(HEAPU8[$492+2>>0]<<16)|(HEAPU8[$492+3>>0]<<24);
          $494 = ((($493)) + 4|0);
          HEAP8[$494>>0]=$490&255;HEAP8[$494+1>>0]=($490>>8)&255;HEAP8[$494+2>>0]=($490>>16)&255;HEAP8[$494+3>>0]=$490>>24;
          break L81;
         }
        } while(0);
        $495 = $dit;
        $496 = ($495|0)!=(0|0);
        if ($496) {
         $497 = $dit;
         $498 = ((($497)) + 26|0);
         $499 = HEAPU8[$498>>0]|(HEAPU8[$498+1>>0]<<8)|(HEAPU8[$498+2>>0]<<16)|(HEAPU8[$498+3>>0]<<24);
         $500 = ($499|0)!=(0|0);
         if (!($500)) {
          break;
         }
         $501 = $dit;
         $502 = ((($501)) + 26|0);
         $503 = HEAPU8[$502>>0]|(HEAPU8[$502+1>>0]<<8)|(HEAPU8[$502+2>>0]<<16)|(HEAPU8[$502+3>>0]<<24);
         $504 = ((($503)) + 12|0);
         $505 = HEAPU8[$504>>0]|(HEAPU8[$504+1>>0]<<8)|(HEAPU8[$504+2>>0]<<16)|(HEAPU8[$504+3>>0]<<24);
         $506 = ($505|0)!=(0|0);
         if (!($506)) {
          break;
         }
         $507 = $dit;
         $508 = ((($507)) + 26|0);
         $509 = HEAPU8[$508>>0]|(HEAPU8[$508+1>>0]<<8)|(HEAPU8[$508+2>>0]<<16)|(HEAPU8[$508+3>>0]<<24);
         $510 = ((($509)) + 12|0);
         $511 = HEAPU8[$510>>0]|(HEAPU8[$510+1>>0]<<8)|(HEAPU8[$510+2>>0]<<16)|(HEAPU8[$510+3>>0]<<24);
         $512 = $pathed_var;
         $513 = ((($512)) + 4|0);
         HEAP8[$513>>0]=$511&255;HEAP8[$513+1>>0]=($511>>8)&255;HEAP8[$513+2>>0]=($511>>16)&255;HEAP8[$513+3>>0]=$511>>24;
        }
       }
      } while(0);
      $514 = $0;
      $515 = $2;
      $516 = (__common_keep_looping($514,$ast,$515)|0);
      $result = $516;
      $517 = $result;
      $518 = ($517|0)==(101);
      if ($518) {
       label = 111;
       break;
      }
      $519 = $result;
      $520 = ($519|0)!=(0);
      $521 = $result;
      $522 = ($521|0)==(103);
      $or$cond11 = $520 | $522;
      if ($or$cond11) {
       break L36;
      } else {
       continue;
      }
     }
     $301 = ((($moved_next)) + 4|0);
     ;HEAP8[$301>>0]=0|0;HEAP8[$301+1>>0]=0|0;HEAP8[$301+2>>0]=0|0;HEAP8[$301+3>>0]=0|0;
     HEAP8[$moved_next>>0]=0&255;HEAP8[$moved_next+1>>0]=(0>>8)&255;HEAP8[$moved_next+2>>0]=(0>>16)&255;HEAP8[$moved_next+3>>0]=0>>24;
     $302 = ((($curr_val)) + 4|0);
     ;HEAP8[$302>>0]=0|0;HEAP8[$302+1>>0]=0|0;HEAP8[$302+2>>0]=0|0;HEAP8[$302+3>>0]=0|0;
     HEAP8[$curr_val>>0]=0&255;HEAP8[$curr_val+1>>0]=(0>>8)&255;HEAP8[$curr_val+2>>0]=(0>>16)&255;HEAP8[$curr_val+3>>0]=0>>24;
     dest=$curr_obj; stop=dest+17|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
     HEAP8[$curr_obj>>0]=0&255;HEAP8[$curr_obj+1>>0]=(0>>8)&255;HEAP8[$curr_obj+2>>0]=(0>>16)&255;HEAP8[$curr_obj+3>>0]=0>>24;
     $303 = $0;
     $304 = (__try_overridden($303,$ast,$ref_it,6199,64)|0);
     $os = $304;
     $305 = $os;
     $306 = $305 & 1;
     $307 = ($306|0)!=(0);
     if ($307) {
      $308 = $os;
      $309 = $308 & 2;
      $310 = ($309|0)!=(0);
      if ($310) {
       $311 = $running;
       $312 = ((($311)) + 20|0);
       __swap_public_value($moved_next,$312);
      }
     }
     $313 = HEAPU8[$moved_next>>0]|(HEAPU8[$moved_next+1>>0]<<8)|(HEAPU8[$moved_next+2>>0]<<16)|(HEAPU8[$moved_next+3>>0]<<24);
     $314 = ($313|0)==(2);
     if (!($314)) {
      label = 81;
      break;
     }
     $315 = ((($moved_next)) + 4|0);
     $316 = HEAPU8[$315>>0]|(HEAPU8[$315+1>>0]<<8)|(HEAPU8[$315+2>>0]<<16)|(HEAPU8[$315+3>>0]<<24);
     $317 = ($316|0)!=(0);
     if (!($317)) {
      label = 81;
      break;
     }
     $318 = $0;
     $319 = (__try_overridden($318,$ast,$ref_it,6206,128)|0);
     $os = $319;
     $320 = $os;
     $321 = $320 & 1;
     $322 = ($321|0)!=(0);
     if ($322) {
      $323 = $os;
      $324 = $323 & 2;
      $325 = ($324|0)!=(0);
      if ($325) {
       $326 = $running;
       $327 = ((($326)) + 20|0);
       __swap_public_value($curr_val,$327);
      }
     }
     (__public_value_to_internal_object($curr_val,$curr_obj)|0);
     $328 = $pathed_var;
     $329 = ((($328)) + 4|0);
     HEAP8[$329>>0]=$curr_obj&255;HEAP8[$329+1>>0]=($curr_obj>>8)&255;HEAP8[$329+2>>0]=($curr_obj>>16)&255;HEAP8[$329+3>>0]=$curr_obj>>24;
     $330 = $0;
     $331 = $2;
     $332 = (__common_keep_looping($330,$ast,$331)|0);
     $result = $332;
     $333 = HEAPU8[$curr_obj>>0]|(HEAPU8[$curr_obj+1>>0]<<8)|(HEAPU8[$curr_obj+2>>0]<<16)|(HEAPU8[$curr_obj+3>>0]<<24);
     L103: do {
      switch ($333|0) {
      case 7:  {
       $334 = ((($curr_obj)) + 4|0);
       $335 = HEAPU8[$334>>0]|(HEAPU8[$334+1>>0]<<8)|(HEAPU8[$334+2>>0]<<16)|(HEAPU8[$334+3>>0]<<24);
       $336 = ((($curr_obj)) + 4|0);
       $337 = HEAPU8[$336>>0]|(HEAPU8[$336+1>>0]<<8)|(HEAPU8[$336+2>>0]<<16)|(HEAPU8[$336+3>>0]<<24);
       (__unref($335,$337)|0);
       break;
      }
      case 10:  {
       $338 = ((($curr_obj)) + 8|0);
       $339 = HEAP8[$338>>0]|0;
       $340 = $339 & 1;
       $341 = ($340<<24>>24)!=(0);
       if (!($341)) {
        $342 = ((($curr_obj)) + 4|0);
        $343 = HEAPU8[$342>>0]|(HEAPU8[$342+1>>0]<<8)|(HEAPU8[$342+2>>0]<<16)|(HEAPU8[$342+3>>0]<<24);
        $344 = ((($curr_obj)) + 4|0);
        $345 = HEAPU8[$344>>0]|(HEAPU8[$344+1>>0]<<8)|(HEAPU8[$344+2>>0]<<16)|(HEAPU8[$344+3>>0]<<24);
        (__unref($343,$345)|0);
       }
       break;
      }
      case 11:  {
       $346 = ((($curr_obj)) + 4|0);
       $347 = HEAPU8[$346>>0]|(HEAPU8[$346+1>>0]<<8)|(HEAPU8[$346+2>>0]<<16)|(HEAPU8[$346+3>>0]<<24);
       $348 = ((($curr_obj)) + 4|0);
       $349 = HEAPU8[$348>>0]|(HEAPU8[$348+1>>0]<<8)|(HEAPU8[$348+2>>0]<<16)|(HEAPU8[$348+3>>0]<<24);
       (__unref($347,$349)|0);
       break;
      }
      case 13:  {
       $350 = ((($curr_obj)) + 4|0);
       $351 = HEAPU8[$350>>0]|(HEAPU8[$350+1>>0]<<8)|(HEAPU8[$350+2>>0]<<16)|(HEAPU8[$350+3>>0]<<24);
       $352 = ((($curr_obj)) + 4|0);
       $353 = HEAPU8[$352>>0]|(HEAPU8[$352+1>>0]<<8)|(HEAPU8[$352+2>>0]<<16)|(HEAPU8[$352+3>>0]<<24);
       (__unref($351,$353)|0);
       break;
      }
      case 16:  {
       $354 = ((($curr_obj)) + 8|0);
       $355 = HEAP8[$354>>0]|0;
       $356 = $355 & 1;
       $357 = ($356<<24>>24)!=(0);
       if (!($357)) {
        $358 = ((($curr_obj)) + 4|0);
        $359 = HEAPU8[$358>>0]|(HEAPU8[$358+1>>0]<<8)|(HEAPU8[$358+2>>0]<<16)|(HEAPU8[$358+3>>0]<<24);
        $360 = ((($curr_obj)) + 4|0);
        $361 = HEAPU8[$360>>0]|(HEAPU8[$360+1>>0]<<8)|(HEAPU8[$360+2>>0]<<16)|(HEAPU8[$360+3>>0]<<24);
        (__unref($359,$361)|0);
       }
       break;
      }
      case 17:  {
       $362 = ((($curr_obj)) + 8|0);
       $363 = HEAP8[$362>>0]|0;
       $364 = $363 & 1;
       $365 = ($364<<24>>24)!=(0);
       if (!($365)) {
        $366 = ((($curr_obj)) + 4|0);
        $367 = HEAPU8[$366>>0]|(HEAPU8[$366+1>>0]<<8)|(HEAPU8[$366+2>>0]<<16)|(HEAPU8[$366+3>>0]<<24);
        $368 = ((($367)) + 58|0);
        $369 = HEAPU8[$368>>0]|(HEAPU8[$368+1>>0]<<8)|(HEAPU8[$368+2>>0]<<16)|(HEAPU8[$368+3>>0]<<24);
        $370 = ($369|0)==(2);
        if ($370) {
         $371 = ((($curr_obj)) + 4|0);
         $372 = HEAPU8[$371>>0]|(HEAPU8[$371+1>>0]<<8)|(HEAPU8[$371+2>>0]<<16)|(HEAPU8[$371+3>>0]<<24);
         $373 = ((($curr_obj)) + 4|0);
         $374 = HEAPU8[$373>>0]|(HEAPU8[$373+1>>0]<<8)|(HEAPU8[$373+2>>0]<<16)|(HEAPU8[$373+3>>0]<<24);
         (__unref($372,$374)|0);
         break L103;
        }
       }
       $375 = ((($curr_obj)) + 8|0);
       $376 = HEAP8[$375>>0]|0;
       $377 = $376 & 1;
       $378 = ($377<<24>>24)!=(0);
       if (!($378)) {
        $379 = ((($curr_obj)) + 4|0);
        $380 = HEAPU8[$379>>0]|(HEAPU8[$379+1>>0]<<8)|(HEAPU8[$379+2>>0]<<16)|(HEAPU8[$379+3>>0]<<24);
        $381 = ((($380)) + 58|0);
        $382 = HEAPU8[$381>>0]|(HEAPU8[$381+1>>0]<<8)|(HEAPU8[$381+2>>0]<<16)|(HEAPU8[$381+3>>0]<<24);
        $383 = ($382|0)!=(2);
        if ($383) {
         $384 = ((($curr_obj)) + 4|0);
         $385 = HEAPU8[$384>>0]|(HEAPU8[$384+1>>0]<<8)|(HEAPU8[$384+2>>0]<<16)|(HEAPU8[$384+3>>0]<<24);
         __destroy_routine(0,$385);
        }
       }
       break;
      }
      default: {
      }
      }
     } while(0);
     $386 = $result;
     $387 = ($386|0)==(101);
     if ($387) {
      label = 79;
      break;
     }
     $388 = $result;
     $389 = ($388|0)!=(0);
     $390 = $result;
     $391 = ($390|0)==(103);
     $or$cond7 = $389 | $391;
     if ($or$cond7) {
      break L36;
     }
    }
    if ((label|0) == 79) {
     $result = 0;
     break;
    }
    else if ((label|0) == 81) {
     $392 = $0;
     $393 = (__common_end_looping($392,$ast)|0);
     $result = $393;
     break;
    }
    else if ((label|0) == 90) {
     $414 = HEAP32[$ast>>2]|0;
     $415 = ($414|0)!=(0|0);
     if ($415) {
      $416 = HEAP32[$ast>>2]|0;
      $417 = HEAPU8[$416>>0]|(HEAPU8[$416+1>>0]<<8)|(HEAPU8[$416+2>>0]<<16)|(HEAPU8[$416+3>>0]<<24);
      $418 = ($417|0)!=(0|0);
      if ($418) {
       $419 = $0;
       $420 = $0;
       $421 = ((($420)) + 67|0);
       $422 = HEAPU8[$421>>0]|(HEAPU8[$421+1>>0]<<8)|(HEAPU8[$421+2>>0]<<16)|(HEAPU8[$421+3>>0]<<24);
       $423 = (__set_current_error($419,63,$422)|0);
       $424 = ($423<<24>>24)!=(0);
       if (!($424)) {
        break;
       }
       $425 = $0;
       $426 = HEAP32[$ast>>2]|0;
       $427 = HEAPU8[$426>>0]|(HEAPU8[$426+1>>0]<<8)|(HEAPU8[$426+2>>0]<<16)|(HEAPU8[$426+3>>0]<<24);
       $428 = ((($427)) + 9|0);
       $429 = HEAPU8[$428>>0]|(HEAPU8[$428+1>>0]<<8)|(HEAPU8[$428+2>>0]<<16)|(HEAPU8[$428+3>>0]<<24);
       $430 = HEAP32[$ast>>2]|0;
       $431 = HEAPU8[$430>>0]|(HEAPU8[$430+1>>0]<<8)|(HEAPU8[$430+2>>0]<<16)|(HEAPU8[$430+3>>0]<<24);
       $432 = ((($431)) + 13|0);
       $433 = HEAPU8[$432>>0]|(HEAPU8[$432+1>>0]<<8);
       $434 = HEAP32[$ast>>2]|0;
       $435 = HEAPU8[$434>>0]|(HEAPU8[$434+1>>0]<<8)|(HEAPU8[$434+2>>0]<<16)|(HEAPU8[$434+3>>0]<<24);
       $436 = ((($435)) + 15|0);
       $437 = HEAPU8[$436>>0]|(HEAPU8[$436+1>>0]<<8);
       __set_error_pos($425,$429,$433,$437);
       $result = 3;
       break;
      }
     }
     $438 = $0;
     $439 = $0;
     $440 = ((($439)) + 67|0);
     $441 = HEAPU8[$440>>0]|(HEAPU8[$440+1>>0]<<8)|(HEAPU8[$440+2>>0]<<16)|(HEAPU8[$440+3>>0]<<24);
     $442 = (__set_current_error($438,63,$441)|0);
     $443 = ($442<<24>>24)!=(0);
     if (!($443)) {
      break;
     }
     $444 = $0;
     __set_error_pos($444,0,0,0);
     $result = 3;
     break;
    }
    else if ((label|0) == 97) {
     $449 = $0;
     $450 = (__common_end_looping($449,$ast)|0);
     $result = $450;
     break;
    }
    else if ((label|0) == 111) {
     $result = 0;
     break;
    }
   }
  } else {
   $179 = HEAP32[$ast>>2]|0;
   $180 = ($179|0)!=(0|0);
   if ($180) {
    $181 = HEAP32[$ast>>2]|0;
    $182 = HEAPU8[$181>>0]|(HEAPU8[$181+1>>0]<<8)|(HEAPU8[$181+2>>0]<<16)|(HEAPU8[$181+3>>0]<<24);
    $183 = ($182|0)!=(0|0);
    if ($183) {
     $184 = $0;
     $185 = $0;
     $186 = ((($185)) + 67|0);
     $187 = HEAPU8[$186>>0]|(HEAPU8[$186+1>>0]<<8)|(HEAPU8[$186+2>>0]<<16)|(HEAPU8[$186+3>>0]<<24);
     $188 = (__set_current_error($184,11,$187)|0);
     $189 = ($188<<24>>24)!=(0);
     if (!($189)) {
      break;
     }
     $190 = $0;
     $191 = HEAP32[$ast>>2]|0;
     $192 = HEAPU8[$191>>0]|(HEAPU8[$191+1>>0]<<8)|(HEAPU8[$191+2>>0]<<16)|(HEAPU8[$191+3>>0]<<24);
     $193 = ((($192)) + 9|0);
     $194 = HEAPU8[$193>>0]|(HEAPU8[$193+1>>0]<<8)|(HEAPU8[$193+2>>0]<<16)|(HEAPU8[$193+3>>0]<<24);
     $195 = HEAP32[$ast>>2]|0;
     $196 = HEAPU8[$195>>0]|(HEAPU8[$195+1>>0]<<8)|(HEAPU8[$195+2>>0]<<16)|(HEAPU8[$195+3>>0]<<24);
     $197 = ((($196)) + 13|0);
     $198 = HEAPU8[$197>>0]|(HEAPU8[$197+1>>0]<<8);
     $199 = HEAP32[$ast>>2]|0;
     $200 = HEAPU8[$199>>0]|(HEAPU8[$199+1>>0]<<8)|(HEAPU8[$199+2>>0]<<16)|(HEAPU8[$199+3>>0]<<24);
     $201 = ((($200)) + 15|0);
     $202 = HEAPU8[$201>>0]|(HEAPU8[$201+1>>0]<<8);
     __set_error_pos($190,$194,$198,$202);
     $result = 3;
     break;
    }
   }
   $203 = $0;
   $204 = $0;
   $205 = ((($204)) + 67|0);
   $206 = HEAPU8[$205>>0]|(HEAPU8[$205+1>>0]<<8)|(HEAPU8[$205+2>>0]<<16)|(HEAPU8[$205+3>>0]<<24);
   $207 = (__set_current_error($203,11,$206)|0);
   $208 = ($207<<24>>24)!=(0);
   if ($208) {
    $209 = $0;
    __set_error_pos($209,0,0,0);
    $result = 3;
   }
  }
 } while(0);
 $523 = HEAPU8[$ref_it>>0]|(HEAPU8[$ref_it+1>>0]<<8)|(HEAPU8[$ref_it+2>>0]<<16)|(HEAPU8[$ref_it+3>>0]<<24);
 $524 = ($523|0)!=(0);
 L140: do {
  if ($524) {
   dest=$it_obj; stop=dest+17|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
   HEAP8[$it_obj>>0]=0&255;HEAP8[$it_obj+1>>0]=(0>>8)&255;HEAP8[$it_obj+2>>0]=(0>>16)&255;HEAP8[$it_obj+3>>0]=0>>24;
   (__public_value_to_internal_object($ref_it,$it_obj)|0);
   $525 = HEAPU8[$it_obj>>0]|(HEAPU8[$it_obj+1>>0]<<8)|(HEAPU8[$it_obj+2>>0]<<16)|(HEAPU8[$it_obj+3>>0]<<24);
   switch ($525|0) {
   case 7:  {
    $526 = ((($it_obj)) + 4|0);
    $527 = HEAPU8[$526>>0]|(HEAPU8[$526+1>>0]<<8)|(HEAPU8[$526+2>>0]<<16)|(HEAPU8[$526+3>>0]<<24);
    $528 = ((($it_obj)) + 4|0);
    $529 = HEAPU8[$528>>0]|(HEAPU8[$528+1>>0]<<8)|(HEAPU8[$528+2>>0]<<16)|(HEAPU8[$528+3>>0]<<24);
    (__unref($527,$529)|0);
    break L140;
    break;
   }
   case 10:  {
    $530 = ((($it_obj)) + 8|0);
    $531 = HEAP8[$530>>0]|0;
    $532 = $531 & 1;
    $533 = ($532<<24>>24)!=(0);
    if ($533) {
     break L140;
    }
    $534 = ((($it_obj)) + 4|0);
    $535 = HEAPU8[$534>>0]|(HEAPU8[$534+1>>0]<<8)|(HEAPU8[$534+2>>0]<<16)|(HEAPU8[$534+3>>0]<<24);
    $536 = ((($it_obj)) + 4|0);
    $537 = HEAPU8[$536>>0]|(HEAPU8[$536+1>>0]<<8)|(HEAPU8[$536+2>>0]<<16)|(HEAPU8[$536+3>>0]<<24);
    (__unref($535,$537)|0);
    break L140;
    break;
   }
   case 11:  {
    $538 = ((($it_obj)) + 4|0);
    $539 = HEAPU8[$538>>0]|(HEAPU8[$538+1>>0]<<8)|(HEAPU8[$538+2>>0]<<16)|(HEAPU8[$538+3>>0]<<24);
    $540 = ((($it_obj)) + 4|0);
    $541 = HEAPU8[$540>>0]|(HEAPU8[$540+1>>0]<<8)|(HEAPU8[$540+2>>0]<<16)|(HEAPU8[$540+3>>0]<<24);
    (__unref($539,$541)|0);
    break L140;
    break;
   }
   case 13:  {
    $542 = ((($it_obj)) + 4|0);
    $543 = HEAPU8[$542>>0]|(HEAPU8[$542+1>>0]<<8)|(HEAPU8[$542+2>>0]<<16)|(HEAPU8[$542+3>>0]<<24);
    $544 = ((($it_obj)) + 4|0);
    $545 = HEAPU8[$544>>0]|(HEAPU8[$544+1>>0]<<8)|(HEAPU8[$544+2>>0]<<16)|(HEAPU8[$544+3>>0]<<24);
    (__unref($543,$545)|0);
    break L140;
    break;
   }
   case 16:  {
    $546 = ((($it_obj)) + 8|0);
    $547 = HEAP8[$546>>0]|0;
    $548 = $547 & 1;
    $549 = ($548<<24>>24)!=(0);
    if ($549) {
     break L140;
    }
    $550 = ((($it_obj)) + 4|0);
    $551 = HEAPU8[$550>>0]|(HEAPU8[$550+1>>0]<<8)|(HEAPU8[$550+2>>0]<<16)|(HEAPU8[$550+3>>0]<<24);
    $552 = ((($it_obj)) + 4|0);
    $553 = HEAPU8[$552>>0]|(HEAPU8[$552+1>>0]<<8)|(HEAPU8[$552+2>>0]<<16)|(HEAPU8[$552+3>>0]<<24);
    (__unref($551,$553)|0);
    break L140;
    break;
   }
   case 17:  {
    $554 = ((($it_obj)) + 8|0);
    $555 = HEAP8[$554>>0]|0;
    $556 = $555 & 1;
    $557 = ($556<<24>>24)!=(0);
    if (!($557)) {
     $558 = ((($it_obj)) + 4|0);
     $559 = HEAPU8[$558>>0]|(HEAPU8[$558+1>>0]<<8)|(HEAPU8[$558+2>>0]<<16)|(HEAPU8[$558+3>>0]<<24);
     $560 = ((($559)) + 58|0);
     $561 = HEAPU8[$560>>0]|(HEAPU8[$560+1>>0]<<8)|(HEAPU8[$560+2>>0]<<16)|(HEAPU8[$560+3>>0]<<24);
     $562 = ($561|0)==(2);
     if ($562) {
      $563 = ((($it_obj)) + 4|0);
      $564 = HEAPU8[$563>>0]|(HEAPU8[$563+1>>0]<<8)|(HEAPU8[$563+2>>0]<<16)|(HEAPU8[$563+3>>0]<<24);
      $565 = ((($it_obj)) + 4|0);
      $566 = HEAPU8[$565>>0]|(HEAPU8[$565+1>>0]<<8)|(HEAPU8[$565+2>>0]<<16)|(HEAPU8[$565+3>>0]<<24);
      (__unref($564,$566)|0);
      break L140;
     }
    }
    $567 = ((($it_obj)) + 8|0);
    $568 = HEAP8[$567>>0]|0;
    $569 = $568 & 1;
    $570 = ($569<<24>>24)!=(0);
    if ($570) {
     break L140;
    }
    $571 = ((($it_obj)) + 4|0);
    $572 = HEAPU8[$571>>0]|(HEAPU8[$571+1>>0]<<8)|(HEAPU8[$571+2>>0]<<16)|(HEAPU8[$571+3>>0]<<24);
    $573 = ((($572)) + 58|0);
    $574 = HEAPU8[$573>>0]|(HEAPU8[$573+1>>0]<<8)|(HEAPU8[$573+2>>0]<<16)|(HEAPU8[$573+3>>0]<<24);
    $575 = ($574|0)!=(2);
    if (!($575)) {
     break L140;
    }
    $576 = ((($it_obj)) + 4|0);
    $577 = HEAPU8[$576>>0]|(HEAPU8[$576+1>>0]<<8)|(HEAPU8[$576+2>>0]<<16)|(HEAPU8[$576+3>>0]<<24);
    __destroy_routine(0,$577);
    break L140;
    break;
   }
   default: {
    break L140;
   }
   }
  }
 } while(0);
 $578 = $tlit;
 $579 = ($578|0)!=(0|0);
 if ($579) {
  $580 = $tlit;
  (__destroy_list_it($580)|0);
 } else {
  $581 = $tdit;
  $582 = ($581|0)!=(0|0);
  if ($582) {
   $583 = $tdit;
   (__destroy_dict_it($583)|0);
  }
 }
 $584 = HEAP32[$range_ptr>>2]|0;
 $585 = HEAPU8[$584>>0]|(HEAPU8[$584+1>>0]<<8)|(HEAPU8[$584+2>>0]<<16)|(HEAPU8[$584+3>>0]<<24);
 switch ($585|0) {
 case 11:  {
  $586 = HEAP32[$range_ptr>>2]|0;
  $587 = ((($586)) + 4|0);
  $588 = HEAPU8[$587>>0]|(HEAPU8[$587+1>>0]<<8)|(HEAPU8[$587+2>>0]<<16)|(HEAPU8[$587+3>>0]<<24);
  $589 = HEAP32[$range_ptr>>2]|0;
  $590 = ((($589)) + 4|0);
  $591 = HEAPU8[$590>>0]|(HEAPU8[$590+1>>0]<<8)|(HEAPU8[$590+2>>0]<<16)|(HEAPU8[$590+3>>0]<<24);
  (__unref($588,$591)|0);
  break;
 }
 case 13:  {
  $592 = HEAP32[$range_ptr>>2]|0;
  $593 = ((($592)) + 4|0);
  $594 = HEAPU8[$593>>0]|(HEAPU8[$593+1>>0]<<8)|(HEAPU8[$593+2>>0]<<16)|(HEAPU8[$593+3>>0]<<24);
  $595 = HEAP32[$range_ptr>>2]|0;
  $596 = ((($595)) + 4|0);
  $597 = HEAPU8[$596>>0]|(HEAPU8[$596+1>>0]<<8)|(HEAPU8[$596+2>>0]<<16)|(HEAPU8[$596+3>>0]<<24);
  (__unref($594,$597)|0);
  break;
 }
 case 7:  {
  $598 = HEAP32[$range_ptr>>2]|0;
  $599 = ((($598)) + 4|0);
  $600 = HEAPU8[$599>>0]|(HEAPU8[$599+1>>0]<<8)|(HEAPU8[$599+2>>0]<<16)|(HEAPU8[$599+3>>0]<<24);
  $601 = HEAP32[$range_ptr>>2]|0;
  $602 = ((($601)) + 4|0);
  $603 = HEAPU8[$602>>0]|(HEAPU8[$602+1>>0]<<8)|(HEAPU8[$602+2>>0]<<16)|(HEAPU8[$602+3>>0]<<24);
  (__unref($600,$603)|0);
  break;
 }
 default: {
 }
 }
 $604 = HEAP32[$ast>>2]|0;
 $605 = $1;
 HEAP32[$605>>2] = $604;
 $606 = $old_val;
 $607 = $pathed_var;
 $608 = ((($607)) + 4|0);
 HEAP8[$608>>0]=$606&255;HEAP8[$608+1>>0]=($606>>8)&255;HEAP8[$608+2>>0]=($606>>16)&255;HEAP8[$608+3>>0]=$606>>24;
 $609 = $old_val_gc;
 $610 = ($609|0)!=(0|0);
 if (!($610)) {
  $617 = $result;
  STACKTOP = sp;return ($617|0);
 }
 $611 = $old_val_gc;
 $612 = $old_val_gc;
 $613 = $old_val_gc;
 $614 = ((($613)) + 13|0);
 $615 = HEAPU8[$614>>0]|(HEAPU8[$614+1>>0]<<8)|(HEAPU8[$614+2>>0]<<16)|(HEAPU8[$614+3>>0]<<24);
 $616 = ((($615)) + 21|0);
 __gc_add($611,$612,$616);
 $617 = $result;
 STACKTOP = sp;return ($617|0);
}
function __execute_normal_for_loop($s,$l,$var_loop) {
 $s = $s|0;
 $l = $l|0;
 $var_loop = $var_loop|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0.0, $273 = 0, $274 = 0, $275 = 0.0, $276 = 0, $277 = 0, $278 = 0.0;
 var $279 = 0.0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0.0, $292 = 0, $293 = 0, $294 = 0.0, $295 = 0.0, $296 = 0;
 var $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0.0, $304 = 0.0, $305 = 0.0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0.0, $311 = 0.0, $312 = 0.0, $313 = 0.0;
 var $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0.0, $322 = 0, $323 = 0.0, $324 = 0, $325 = 0, $326 = 0.0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0.0;
 var $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $ass_tuple3 = 0, $ass_tuple3_ptr = 0;
 var $ast = 0, $obj = 0, $opnd1 = 0, $opnd2 = 0, $opndv1 = 0, $opndv2 = 0, $or$cond = 0, $or$cond3 = 0, $or$cond5 = 0, $or$cond7 = 0, $or$cond9 = 0, $result = 0, $step_val = 0, $step_val_ptr = 0, $to_node = 0, $to_val = 0, $to_val_ptr = 0, $tpptr = 0, $val = 0, dest = 0;
 var label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ast = sp + 36|0;
 $to_val = sp + 121|0;
 $step_val = sp + 104|0;
 $to_val_ptr = sp + 24|0;
 $step_val_ptr = sp + 20|0;
 $ass_tuple3 = sp + 92|0;
 $opndv1 = sp + 73|0;
 $opndv2 = sp + 56|0;
 $0 = $s;
 $1 = $l;
 $2 = $var_loop;
 $result = 0;
 HEAP32[$ast>>2] = 0;
 $to_node = 0;
 $obj = 0;
 HEAP32[$to_val_ptr>>2] = 0;
 HEAP32[$step_val_ptr>>2] = 0;
 $ass_tuple3_ptr = 0;
 $3 = $0;
 $4 = ($3|0)!=(0|0);
 $5 = $1;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if ($or$cond) {
 }
 $7 = $0;
 $8 = ($7|0)!=(0|0);
 $9 = $1;
 $10 = ($9|0)!=(0|0);
 $or$cond3 = $8 & $10;
 $11 = $2;
 $12 = ($11|0)!=(0|0);
 $or$cond5 = $or$cond3 & $12;
 if (!($or$cond5)) {
  ___assert_fail((5908|0),(4322|0),11326,(5927|0));
  // unreachable;
 }
 $13 = $1;
 $14 = HEAP32[$13>>2]|0;
 HEAP32[$ast>>2] = $14;
 HEAP32[$to_val_ptr>>2] = $to_val;
 $15 = HEAP32[$to_val_ptr>>2]|0;
 dest=$15; stop=dest+17|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
 $16 = HEAP32[$to_val_ptr>>2]|0;
 HEAP8[$16>>0]=0&255;HEAP8[$16+1>>0]=(0>>8)&255;HEAP8[$16+2>>0]=(0>>16)&255;HEAP8[$16+3>>0]=0>>24;
 HEAP32[$step_val_ptr>>2] = $step_val;
 $17 = HEAP32[$step_val_ptr>>2]|0;
 dest=$17; stop=dest+17|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
 $18 = HEAP32[$step_val_ptr>>2]|0;
 HEAP8[$18>>0]=0&255;HEAP8[$18+1>>0]=(0>>8)&255;HEAP8[$18+2>>0]=(0>>16)&255;HEAP8[$18+3>>0]=0>>24;
 $ass_tuple3_ptr = $ass_tuple3;
 $19 = $0;
 $20 = (__execute_statement($19,$ast,1)|0);
 $result = $20;
 $21 = $result;
 $22 = ($21|0)==(0);
 $23 = HEAP32[$ast>>2]|0;
 $24 = ($23|0)!=(0|0);
 $or$cond9 = $22 & $24;
 if (!($or$cond9)) {
  $335 = HEAP32[$ast>>2]|0;
  $336 = $1;
  HEAP32[$336>>2] = $335;
  $337 = $result;
  STACKTOP = sp;return ($337|0);
 }
 $25 = HEAP32[$ast>>2]|0;
 $26 = ((($25)) + 4|0);
 $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
 HEAP32[$ast>>2] = $27;
 $28 = HEAP32[$ast>>2]|0;
 $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
 $obj = $29;
 $30 = $obj;
 $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8)|(HEAPU8[$30+2>>0]<<16)|(HEAPU8[$30+3>>0]<<24);
 $32 = ($31|0)==(8);
 if ($32) {
  $33 = $obj;
  $34 = ((($33)) + 4|0);
  $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
  $36 = ((($35)) + 4|0);
  $37 = HEAPU8[$36>>0]|(HEAPU8[$36+1>>0]<<8)|(HEAPU8[$36+2>>0]<<16)|(HEAPU8[$36+3>>0]<<24);
  $38 = ($37|0)==(30|0);
  if ($38) {
   $70 = HEAP32[$ast>>2]|0;
   $71 = ((($70)) + 8|0);
   $72 = HEAPU8[$71>>0]|(HEAPU8[$71+1>>0]<<8)|(HEAPU8[$71+2>>0]<<16)|(HEAPU8[$71+3>>0]<<24);
   HEAP32[$ast>>2] = $72;
   $73 = HEAP32[$ast>>2]|0;
   $74 = ($73|0)!=(0|0);
   $75 = HEAP32[$ast>>2]|0;
   if (!($74)) {
    $76 = ($75|0)!=(0|0);
    if ($76) {
     $77 = HEAP32[$ast>>2]|0;
     $78 = HEAPU8[$77>>0]|(HEAPU8[$77+1>>0]<<8)|(HEAPU8[$77+2>>0]<<16)|(HEAPU8[$77+3>>0]<<24);
     $79 = ($78|0)!=(0|0);
     if ($79) {
      $80 = $0;
      $81 = $0;
      $82 = ((($81)) + 67|0);
      $83 = HEAPU8[$82>>0]|(HEAPU8[$82+1>>0]<<8)|(HEAPU8[$82+2>>0]<<16)|(HEAPU8[$82+3>>0]<<24);
      $84 = (__set_current_error($80,11,$83)|0);
      $85 = ($84<<24>>24)!=(0);
      if (!($85)) {
       $335 = HEAP32[$ast>>2]|0;
       $336 = $1;
       HEAP32[$336>>2] = $335;
       $337 = $result;
       STACKTOP = sp;return ($337|0);
      }
      $86 = $0;
      $87 = HEAP32[$ast>>2]|0;
      $88 = HEAPU8[$87>>0]|(HEAPU8[$87+1>>0]<<8)|(HEAPU8[$87+2>>0]<<16)|(HEAPU8[$87+3>>0]<<24);
      $89 = ((($88)) + 9|0);
      $90 = HEAPU8[$89>>0]|(HEAPU8[$89+1>>0]<<8)|(HEAPU8[$89+2>>0]<<16)|(HEAPU8[$89+3>>0]<<24);
      $91 = HEAP32[$ast>>2]|0;
      $92 = HEAPU8[$91>>0]|(HEAPU8[$91+1>>0]<<8)|(HEAPU8[$91+2>>0]<<16)|(HEAPU8[$91+3>>0]<<24);
      $93 = ((($92)) + 13|0);
      $94 = HEAPU8[$93>>0]|(HEAPU8[$93+1>>0]<<8);
      $95 = HEAP32[$ast>>2]|0;
      $96 = HEAPU8[$95>>0]|(HEAPU8[$95+1>>0]<<8)|(HEAPU8[$95+2>>0]<<16)|(HEAPU8[$95+3>>0]<<24);
      $97 = ((($96)) + 15|0);
      $98 = HEAPU8[$97>>0]|(HEAPU8[$97+1>>0]<<8);
      __set_error_pos($86,$90,$94,$98);
      $result = 3;
      $335 = HEAP32[$ast>>2]|0;
      $336 = $1;
      HEAP32[$336>>2] = $335;
      $337 = $result;
      STACKTOP = sp;return ($337|0);
     }
    }
    $99 = $0;
    $100 = $0;
    $101 = ((($100)) + 67|0);
    $102 = HEAPU8[$101>>0]|(HEAPU8[$101+1>>0]<<8)|(HEAPU8[$101+2>>0]<<16)|(HEAPU8[$101+3>>0]<<24);
    $103 = (__set_current_error($99,11,$102)|0);
    $104 = ($103<<24>>24)!=(0);
    if (!($104)) {
     $335 = HEAP32[$ast>>2]|0;
     $336 = $1;
     HEAP32[$336>>2] = $335;
     $337 = $result;
     STACKTOP = sp;return ($337|0);
    }
    $105 = $0;
    __set_error_pos($105,0,0,0);
    $result = 3;
    $335 = HEAP32[$ast>>2]|0;
    $336 = $1;
    HEAP32[$336>>2] = $335;
    $337 = $result;
    STACKTOP = sp;return ($337|0);
   }
   $to_node = $75;
   L28: while(1) {
    $106 = $to_node;
    HEAP32[$ast>>2] = $106;
    $107 = $0;
    $108 = (__calc_expression($107,$ast,$to_val_ptr)|0);
    $result = $108;
    $109 = $result;
    $110 = ($109|0)!=(0);
    if ($110) {
     label = 65;
     break;
    }
    $111 = HEAP32[$ast>>2]|0;
    $112 = ($111|0)!=(0|0);
    do {
     if ($112) {
      $113 = HEAP32[$ast>>2]|0;
      $114 = HEAPU8[$113>>0]|(HEAPU8[$113+1>>0]<<8)|(HEAPU8[$113+2>>0]<<16)|(HEAPU8[$113+3>>0]<<24);
      $obj = $114;
      $115 = $obj;
      $116 = HEAPU8[$115>>0]|(HEAPU8[$115+1>>0]<<8)|(HEAPU8[$115+2>>0]<<16)|(HEAPU8[$115+3>>0]<<24);
      $117 = ($116|0)==(8);
      if ($117) {
       $118 = $obj;
       $119 = ((($118)) + 4|0);
       $120 = HEAPU8[$119>>0]|(HEAPU8[$119+1>>0]<<8)|(HEAPU8[$119+2>>0]<<16)|(HEAPU8[$119+3>>0]<<24);
       $121 = ((($120)) + 4|0);
       $122 = HEAPU8[$121>>0]|(HEAPU8[$121+1>>0]<<8)|(HEAPU8[$121+2>>0]<<16)|(HEAPU8[$121+3>>0]<<24);
       $123 = ($122|0)==(31|0);
       if ($123) {
        $124 = HEAP32[$ast>>2]|0;
        $125 = ((($124)) + 8|0);
        $126 = HEAPU8[$125>>0]|(HEAPU8[$125+1>>0]<<8)|(HEAPU8[$125+2>>0]<<16)|(HEAPU8[$125+3>>0]<<24);
        HEAP32[$ast>>2] = $126;
        $127 = HEAP32[$ast>>2]|0;
        $128 = ($127|0)!=(0|0);
        if (!($128)) {
         label = 28;
         break L28;
        }
        $160 = $0;
        $161 = (__calc_expression($160,$ast,$step_val_ptr)|0);
        $result = $161;
        $162 = $result;
        $163 = ($162|0)!=(0);
        if ($163) {
         label = 65;
         break L28;
        } else {
         break;
        }
       }
      }
      dest=$step_val; src=5952; stop=dest+17|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
     }
    } while(0);
    $164 = HEAP32[$step_val_ptr>>2]|0;
    $165 = (__compare_numbers($164,5969)|0);
    $166 = ($165|0)>(0);
    if ($166) {
     $167 = $2;
     $168 = ((($167)) + 4|0);
     $169 = HEAPU8[$168>>0]|(HEAPU8[$168+1>>0]<<8)|(HEAPU8[$168+2>>0]<<16)|(HEAPU8[$168+3>>0]<<24);
     $170 = HEAP32[$to_val_ptr>>2]|0;
     $171 = (__compare_numbers($169,$170)|0);
     $172 = ($171|0)>(0);
     if ($172) {
      label = 39;
      break;
     }
    }
    $173 = HEAP32[$step_val_ptr>>2]|0;
    $174 = (__compare_numbers($173,5969)|0);
    $175 = ($174|0)<(0);
    if ($175) {
     $176 = $2;
     $177 = ((($176)) + 4|0);
     $178 = HEAPU8[$177>>0]|(HEAPU8[$177+1>>0]<<8)|(HEAPU8[$177+2>>0]<<16)|(HEAPU8[$177+3>>0]<<24);
     $179 = HEAP32[$to_val_ptr>>2]|0;
     $180 = (__compare_numbers($178,$179)|0);
     $181 = ($180|0)<(0);
     if ($181) {
      label = 39;
      break;
     }
    }
    $184 = HEAP32[$ast>>2]|0;
    $185 = ($184|0)!=(0|0);
    if (!($185)) {
     label = 65;
     break;
    }
    $186 = $0;
    $187 = $2;
    $188 = (__common_keep_looping($186,$ast,$187)|0);
    $result = $188;
    $189 = $result;
    $190 = ($189|0)==(101);
    if ($190) {
     label = 42;
     break;
    }
    $191 = $result;
    $192 = ($191|0)!=(0);
    $193 = $result;
    $194 = ($193|0)==(103);
    $or$cond7 = $192 | $194;
    if ($or$cond7) {
     label = 65;
     break;
    }
    $195 = $2;
    $196 = ((($195)) + 4|0);
    $197 = HEAPU8[$196>>0]|(HEAPU8[$196+1>>0]<<8)|(HEAPU8[$196+2>>0]<<16)|(HEAPU8[$196+3>>0]<<24);
    HEAP8[$ass_tuple3>>0]=$197&255;HEAP8[$ass_tuple3+1>>0]=($197>>8)&255;HEAP8[$ass_tuple3+2>>0]=($197>>16)&255;HEAP8[$ass_tuple3+3>>0]=$197>>24;
    $198 = HEAP32[$step_val_ptr>>2]|0;
    $199 = ((($ass_tuple3)) + 4|0);
    HEAP8[$199>>0]=$198&255;HEAP8[$199+1>>0]=($198>>8)&255;HEAP8[$199+2>>0]=($198>>16)&255;HEAP8[$199+3>>0]=$198>>24;
    $200 = $2;
    $201 = ((($200)) + 4|0);
    $202 = HEAPU8[$201>>0]|(HEAPU8[$201+1>>0]<<8)|(HEAPU8[$201+2>>0]<<16)|(HEAPU8[$201+3>>0]<<24);
    $203 = ((($ass_tuple3)) + 8|0);
    HEAP8[$203>>0]=$202&255;HEAP8[$203+1>>0]=($202>>8)&255;HEAP8[$203+2>>0]=($202>>16)&255;HEAP8[$203+3>>0]=$202>>24;
    $204 = $ass_tuple3_ptr;
    $tpptr = $204;
    $205 = $tpptr;
    $206 = HEAPU8[$205>>0]|(HEAPU8[$205+1>>0]<<8)|(HEAPU8[$205+2>>0]<<16)|(HEAPU8[$205+3>>0]<<24);
    $opnd1 = $206;
    $207 = $tpptr;
    $208 = ((($207)) + 4|0);
    $209 = HEAPU8[$208>>0]|(HEAPU8[$208+1>>0]<<8)|(HEAPU8[$208+2>>0]<<16)|(HEAPU8[$208+3>>0]<<24);
    $opnd2 = $209;
    $210 = $tpptr;
    $211 = ((($210)) + 8|0);
    $212 = HEAPU8[$211>>0]|(HEAPU8[$211+1>>0]<<8)|(HEAPU8[$211+2>>0]<<16)|(HEAPU8[$211+3>>0]<<24);
    $val = $212;
    $213 = $opnd1;
    $214 = HEAPU8[$213>>0]|(HEAPU8[$213+1>>0]<<8)|(HEAPU8[$213+2>>0]<<16)|(HEAPU8[$213+3>>0]<<24);
    $215 = ($214|0)==(2);
    if ($215) {
     $226 = 1;
    } else {
     $216 = $opnd1;
     $217 = HEAPU8[$216>>0]|(HEAPU8[$216+1>>0]<<8)|(HEAPU8[$216+2>>0]<<16)|(HEAPU8[$216+3>>0]<<24);
     $218 = ($217|0)==(9);
     if ($218) {
      $219 = $opnd1;
      $220 = ((($219)) + 4|0);
      $221 = HEAPU8[$220>>0]|(HEAPU8[$220+1>>0]<<8)|(HEAPU8[$220+2>>0]<<16)|(HEAPU8[$220+3>>0]<<24);
      $222 = ((($221)) + 4|0);
      $223 = HEAPU8[$222>>0]|(HEAPU8[$222+1>>0]<<8)|(HEAPU8[$222+2>>0]<<16)|(HEAPU8[$222+3>>0]<<24);
      $224 = HEAPU8[$223>>0]|(HEAPU8[$223+1>>0]<<8)|(HEAPU8[$223+2>>0]<<16)|(HEAPU8[$223+3>>0]<<24);
      $225 = ($224|0)==(2);
      $226 = $225;
     } else {
      $226 = 0;
     }
    }
    $227 = $226 ? 2 : 3;
    HEAP8[$opndv1>>0]=$227&255;HEAP8[$opndv1+1>>0]=($227>>8)&255;HEAP8[$opndv1+2>>0]=($227>>16)&255;HEAP8[$opndv1+3>>0]=$227>>24;
    $228 = ((($opndv1)) + 4|0);
    $229 = $opnd1;
    $230 = HEAPU8[$229>>0]|(HEAPU8[$229+1>>0]<<8)|(HEAPU8[$229+2>>0]<<16)|(HEAPU8[$229+3>>0]<<24);
    $231 = ($230|0)==(9);
    $232 = $opnd1;
    $233 = ((($232)) + 4|0);
    if ($231) {
     $234 = HEAPU8[$233>>0]|(HEAPU8[$233+1>>0]<<8)|(HEAPU8[$233+2>>0]<<16)|(HEAPU8[$233+3>>0]<<24);
     $235 = ((($234)) + 4|0);
     $236 = HEAPU8[$235>>0]|(HEAPU8[$235+1>>0]<<8)|(HEAPU8[$235+2>>0]<<16)|(HEAPU8[$235+3>>0]<<24);
     $237 = ((($236)) + 4|0);
     ;HEAP8[$228>>0]=HEAP8[$237>>0]|0;HEAP8[$228+1>>0]=HEAP8[$237+1>>0]|0;HEAP8[$228+2>>0]=HEAP8[$237+2>>0]|0;HEAP8[$228+3>>0]=HEAP8[$237+3>>0]|0;
    } else {
     ;HEAP8[$228>>0]=HEAP8[$233>>0]|0;HEAP8[$228+1>>0]=HEAP8[$233+1>>0]|0;HEAP8[$228+2>>0]=HEAP8[$233+2>>0]|0;HEAP8[$228+3>>0]=HEAP8[$233+3>>0]|0;
    }
    $238 = $opnd2;
    $239 = HEAPU8[$238>>0]|(HEAPU8[$238+1>>0]<<8)|(HEAPU8[$238+2>>0]<<16)|(HEAPU8[$238+3>>0]<<24);
    $240 = ($239|0)==(2);
    if ($240) {
     $251 = 1;
    } else {
     $241 = $opnd2;
     $242 = HEAPU8[$241>>0]|(HEAPU8[$241+1>>0]<<8)|(HEAPU8[$241+2>>0]<<16)|(HEAPU8[$241+3>>0]<<24);
     $243 = ($242|0)==(9);
     if ($243) {
      $244 = $opnd2;
      $245 = ((($244)) + 4|0);
      $246 = HEAPU8[$245>>0]|(HEAPU8[$245+1>>0]<<8)|(HEAPU8[$245+2>>0]<<16)|(HEAPU8[$245+3>>0]<<24);
      $247 = ((($246)) + 4|0);
      $248 = HEAPU8[$247>>0]|(HEAPU8[$247+1>>0]<<8)|(HEAPU8[$247+2>>0]<<16)|(HEAPU8[$247+3>>0]<<24);
      $249 = HEAPU8[$248>>0]|(HEAPU8[$248+1>>0]<<8)|(HEAPU8[$248+2>>0]<<16)|(HEAPU8[$248+3>>0]<<24);
      $250 = ($249|0)==(2);
      $251 = $250;
     } else {
      $251 = 0;
     }
    }
    $252 = $251 ? 2 : 3;
    HEAP8[$opndv2>>0]=$252&255;HEAP8[$opndv2+1>>0]=($252>>8)&255;HEAP8[$opndv2+2>>0]=($252>>16)&255;HEAP8[$opndv2+3>>0]=$252>>24;
    $253 = ((($opndv2)) + 4|0);
    $254 = $opnd2;
    $255 = HEAPU8[$254>>0]|(HEAPU8[$254+1>>0]<<8)|(HEAPU8[$254+2>>0]<<16)|(HEAPU8[$254+3>>0]<<24);
    $256 = ($255|0)==(9);
    $257 = $opnd2;
    $258 = ((($257)) + 4|0);
    if ($256) {
     $259 = HEAPU8[$258>>0]|(HEAPU8[$258+1>>0]<<8)|(HEAPU8[$258+2>>0]<<16)|(HEAPU8[$258+3>>0]<<24);
     $260 = ((($259)) + 4|0);
     $261 = HEAPU8[$260>>0]|(HEAPU8[$260+1>>0]<<8)|(HEAPU8[$260+2>>0]<<16)|(HEAPU8[$260+3>>0]<<24);
     $262 = ((($261)) + 4|0);
     ;HEAP8[$253>>0]=HEAP8[$262>>0]|0;HEAP8[$253+1>>0]=HEAP8[$262+1>>0]|0;HEAP8[$253+2>>0]=HEAP8[$262+2>>0]|0;HEAP8[$253+3>>0]=HEAP8[$262+3>>0]|0;
    } else {
     ;HEAP8[$253>>0]=HEAP8[$258>>0]|0;HEAP8[$253+1>>0]=HEAP8[$258+1>>0]|0;HEAP8[$253+2>>0]=HEAP8[$258+2>>0]|0;HEAP8[$253+3>>0]=HEAP8[$258+3>>0]|0;
    }
    $263 = HEAPU8[$opndv1>>0]|(HEAPU8[$opndv1+1>>0]<<8)|(HEAPU8[$opndv1+2>>0]<<16)|(HEAPU8[$opndv1+3>>0]<<24);
    $264 = ($263|0)==(2);
    do {
     if ($264) {
      $265 = HEAPU8[$opndv2>>0]|(HEAPU8[$opndv2+1>>0]<<8)|(HEAPU8[$opndv2+2>>0]<<16)|(HEAPU8[$opndv2+3>>0]<<24);
      $266 = ($265|0)==(2);
      if (!($266)) {
       label = 61;
       break;
      }
      $267 = ((($opndv1)) + 4|0);
      $268 = HEAPU8[$267>>0]|(HEAPU8[$267+1>>0]<<8)|(HEAPU8[$267+2>>0]<<16)|(HEAPU8[$267+3>>0]<<24);
      $269 = ((($opndv2)) + 4|0);
      $270 = HEAPU8[$269>>0]|(HEAPU8[$269+1>>0]<<8)|(HEAPU8[$269+2>>0]<<16)|(HEAPU8[$269+3>>0]<<24);
      $271 = (($268) + ($270))|0;
      $272 = (+($271|0));
      $273 = ((($opndv1)) + 4|0);
      $274 = HEAPU8[$273>>0]|(HEAPU8[$273+1>>0]<<8)|(HEAPU8[$273+2>>0]<<16)|(HEAPU8[$273+3>>0]<<24);
      $275 = (+($274|0));
      $276 = ((($opndv2)) + 4|0);
      $277 = HEAPU8[$276>>0]|(HEAPU8[$276+1>>0]<<8)|(HEAPU8[$276+2>>0]<<16)|(HEAPU8[$276+3>>0]<<24);
      $278 = (+($277|0));
      $279 = $275 + $278;
      $280 = $272 == $279;
      $281 = $val;
      if ($280) {
       HEAP8[$281>>0]=2&255;HEAP8[$281+1>>0]=(2>>8)&255;HEAP8[$281+2>>0]=(2>>16)&255;HEAP8[$281+3>>0]=2>>24;
       $282 = ((($opndv1)) + 4|0);
       $283 = HEAPU8[$282>>0]|(HEAPU8[$282+1>>0]<<8)|(HEAPU8[$282+2>>0]<<16)|(HEAPU8[$282+3>>0]<<24);
       $284 = ((($opndv2)) + 4|0);
       $285 = HEAPU8[$284>>0]|(HEAPU8[$284+1>>0]<<8)|(HEAPU8[$284+2>>0]<<16)|(HEAPU8[$284+3>>0]<<24);
       $286 = (($283) + ($285))|0;
       $287 = $val;
       $288 = ((($287)) + 4|0);
       HEAP8[$288>>0]=$286&255;HEAP8[$288+1>>0]=($286>>8)&255;HEAP8[$288+2>>0]=($286>>16)&255;HEAP8[$288+3>>0]=$286>>24;
       break;
      } else {
       HEAP8[$281>>0]=3&255;HEAP8[$281+1>>0]=(3>>8)&255;HEAP8[$281+2>>0]=(3>>16)&255;HEAP8[$281+3>>0]=3>>24;
       $289 = ((($opndv1)) + 4|0);
       $290 = HEAPU8[$289>>0]|(HEAPU8[$289+1>>0]<<8)|(HEAPU8[$289+2>>0]<<16)|(HEAPU8[$289+3>>0]<<24);
       $291 = (+($290|0));
       $292 = ((($opndv2)) + 4|0);
       $293 = HEAPU8[$292>>0]|(HEAPU8[$292+1>>0]<<8)|(HEAPU8[$292+2>>0]<<16)|(HEAPU8[$292+3>>0]<<24);
       $294 = (+($293|0));
       $295 = $291 + $294;
       $296 = $val;
       $297 = ((($296)) + 4|0);
       HEAPF32[tempDoublePtr>>2]=$295;HEAP8[$297>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$297+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$297+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$297+3>>0]=HEAP8[tempDoublePtr+3>>0];
       break;
      }
     } else {
      label = 61;
     }
    } while(0);
    if ((label|0) == 61) {
     label = 0;
     $298 = $val;
     HEAP8[$298>>0]=3&255;HEAP8[$298+1>>0]=(3>>8)&255;HEAP8[$298+2>>0]=(3>>16)&255;HEAP8[$298+3>>0]=3>>24;
     $299 = HEAPU8[$opndv1>>0]|(HEAPU8[$opndv1+1>>0]<<8)|(HEAPU8[$opndv1+2>>0]<<16)|(HEAPU8[$opndv1+3>>0]<<24);
     $300 = ($299|0)==(2);
     $301 = ((($opndv1)) + 4|0);
     $302 = HEAPU8[$301>>0]|(HEAPU8[$301+1>>0]<<8)|(HEAPU8[$301+2>>0]<<16)|(HEAPU8[$301+3>>0]<<24);
     $303 = (+($302|0));
     HEAP8[tempDoublePtr>>0]=HEAP8[$301>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$301+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$301+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$301+3>>0];$304 = +HEAPF32[tempDoublePtr>>2];
     $305 = $300 ? $303 : $304;
     $306 = HEAPU8[$opndv2>>0]|(HEAPU8[$opndv2+1>>0]<<8)|(HEAPU8[$opndv2+2>>0]<<16)|(HEAPU8[$opndv2+3>>0]<<24);
     $307 = ($306|0)==(2);
     $308 = ((($opndv2)) + 4|0);
     $309 = HEAPU8[$308>>0]|(HEAPU8[$308+1>>0]<<8)|(HEAPU8[$308+2>>0]<<16)|(HEAPU8[$308+3>>0]<<24);
     $310 = (+($309|0));
     HEAP8[tempDoublePtr>>0]=HEAP8[$308>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$308+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$308+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$308+3>>0];$311 = +HEAPF32[tempDoublePtr>>2];
     $312 = $307 ? $310 : $311;
     $313 = $305 + $312;
     $314 = $val;
     $315 = ((($314)) + 4|0);
     HEAPF32[tempDoublePtr>>2]=$313;HEAP8[$315>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$315+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$315+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$315+3>>0]=HEAP8[tempDoublePtr+3>>0];
    }
    $316 = $val;
    $317 = HEAPU8[$316>>0]|(HEAPU8[$316+1>>0]<<8)|(HEAPU8[$316+2>>0]<<16)|(HEAPU8[$316+3>>0]<<24);
    $318 = ($317|0)==(3);
    if (!($318)) {
     continue;
    }
    $319 = $val;
    $320 = ((($319)) + 4|0);
    HEAP8[tempDoublePtr>>0]=HEAP8[$320>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$320+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$320+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$320+3>>0];$321 = +HEAPF32[tempDoublePtr>>2];
    $322 = (~~(($321)));
    $323 = (+($322|0));
    $324 = $val;
    $325 = ((($324)) + 4|0);
    HEAP8[tempDoublePtr>>0]=HEAP8[$325>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$325+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$325+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$325+3>>0];$326 = +HEAPF32[tempDoublePtr>>2];
    $327 = $323 == $326;
    if (!($327)) {
     continue;
    }
    $328 = $val;
    HEAP8[$328>>0]=2&255;HEAP8[$328+1>>0]=(2>>8)&255;HEAP8[$328+2>>0]=(2>>16)&255;HEAP8[$328+3>>0]=2>>24;
    $329 = $val;
    $330 = ((($329)) + 4|0);
    HEAP8[tempDoublePtr>>0]=HEAP8[$330>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$330+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$330+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$330+3>>0];$331 = +HEAPF32[tempDoublePtr>>2];
    $332 = (~~(($331)));
    $333 = $val;
    $334 = ((($333)) + 4|0);
    HEAP8[$334>>0]=$332&255;HEAP8[$334+1>>0]=($332>>8)&255;HEAP8[$334+2>>0]=($332>>16)&255;HEAP8[$334+3>>0]=$332>>24;
   }
   if ((label|0) == 28) {
    $129 = HEAP32[$ast>>2]|0;
    $130 = ($129|0)!=(0|0);
    if ($130) {
     $131 = HEAP32[$ast>>2]|0;
     $132 = HEAPU8[$131>>0]|(HEAPU8[$131+1>>0]<<8)|(HEAPU8[$131+2>>0]<<16)|(HEAPU8[$131+3>>0]<<24);
     $133 = ($132|0)!=(0|0);
     if ($133) {
      $134 = $0;
      $135 = $0;
      $136 = ((($135)) + 67|0);
      $137 = HEAPU8[$136>>0]|(HEAPU8[$136+1>>0]<<8)|(HEAPU8[$136+2>>0]<<16)|(HEAPU8[$136+3>>0]<<24);
      $138 = (__set_current_error($134,11,$137)|0);
      $139 = ($138<<24>>24)!=(0);
      if (!($139)) {
       $335 = HEAP32[$ast>>2]|0;
       $336 = $1;
       HEAP32[$336>>2] = $335;
       $337 = $result;
       STACKTOP = sp;return ($337|0);
      }
      $140 = $0;
      $141 = HEAP32[$ast>>2]|0;
      $142 = HEAPU8[$141>>0]|(HEAPU8[$141+1>>0]<<8)|(HEAPU8[$141+2>>0]<<16)|(HEAPU8[$141+3>>0]<<24);
      $143 = ((($142)) + 9|0);
      $144 = HEAPU8[$143>>0]|(HEAPU8[$143+1>>0]<<8)|(HEAPU8[$143+2>>0]<<16)|(HEAPU8[$143+3>>0]<<24);
      $145 = HEAP32[$ast>>2]|0;
      $146 = HEAPU8[$145>>0]|(HEAPU8[$145+1>>0]<<8)|(HEAPU8[$145+2>>0]<<16)|(HEAPU8[$145+3>>0]<<24);
      $147 = ((($146)) + 13|0);
      $148 = HEAPU8[$147>>0]|(HEAPU8[$147+1>>0]<<8);
      $149 = HEAP32[$ast>>2]|0;
      $150 = HEAPU8[$149>>0]|(HEAPU8[$149+1>>0]<<8)|(HEAPU8[$149+2>>0]<<16)|(HEAPU8[$149+3>>0]<<24);
      $151 = ((($150)) + 15|0);
      $152 = HEAPU8[$151>>0]|(HEAPU8[$151+1>>0]<<8);
      __set_error_pos($140,$144,$148,$152);
      $result = 3;
      $335 = HEAP32[$ast>>2]|0;
      $336 = $1;
      HEAP32[$336>>2] = $335;
      $337 = $result;
      STACKTOP = sp;return ($337|0);
     }
    }
    $153 = $0;
    $154 = $0;
    $155 = ((($154)) + 67|0);
    $156 = HEAPU8[$155>>0]|(HEAPU8[$155+1>>0]<<8)|(HEAPU8[$155+2>>0]<<16)|(HEAPU8[$155+3>>0]<<24);
    $157 = (__set_current_error($153,11,$156)|0);
    $158 = ($157<<24>>24)!=(0);
    if (!($158)) {
     $335 = HEAP32[$ast>>2]|0;
     $336 = $1;
     HEAP32[$336>>2] = $335;
     $337 = $result;
     STACKTOP = sp;return ($337|0);
    }
    $159 = $0;
    __set_error_pos($159,0,0,0);
    $result = 3;
    $335 = HEAP32[$ast>>2]|0;
    $336 = $1;
    HEAP32[$336>>2] = $335;
    $337 = $result;
    STACKTOP = sp;return ($337|0);
   }
   else if ((label|0) == 39) {
    $182 = $0;
    $183 = (__common_end_looping($182,$ast)|0);
    $result = $183;
    $335 = HEAP32[$ast>>2]|0;
    $336 = $1;
    HEAP32[$336>>2] = $335;
    $337 = $result;
    STACKTOP = sp;return ($337|0);
   }
   else if ((label|0) == 42) {
    $result = 0;
    $335 = HEAP32[$ast>>2]|0;
    $336 = $1;
    HEAP32[$336>>2] = $335;
    $337 = $result;
    STACKTOP = sp;return ($337|0);
   }
   else if ((label|0) == 65) {
    $335 = HEAP32[$ast>>2]|0;
    $336 = $1;
    HEAP32[$336>>2] = $335;
    $337 = $result;
    STACKTOP = sp;return ($337|0);
   }
  }
 }
 $39 = HEAP32[$ast>>2]|0;
 $40 = ($39|0)!=(0|0);
 if ($40) {
  $41 = HEAP32[$ast>>2]|0;
  $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
  $43 = ($42|0)!=(0|0);
  if ($43) {
   $44 = $0;
   $45 = $0;
   $46 = ((($45)) + 67|0);
   $47 = HEAPU8[$46>>0]|(HEAPU8[$46+1>>0]<<8)|(HEAPU8[$46+2>>0]<<16)|(HEAPU8[$46+3>>0]<<24);
   $48 = (__set_current_error($44,42,$47)|0);
   $49 = ($48<<24>>24)!=(0);
   if (!($49)) {
    $335 = HEAP32[$ast>>2]|0;
    $336 = $1;
    HEAP32[$336>>2] = $335;
    $337 = $result;
    STACKTOP = sp;return ($337|0);
   }
   $50 = $0;
   $51 = HEAP32[$ast>>2]|0;
   $52 = HEAPU8[$51>>0]|(HEAPU8[$51+1>>0]<<8)|(HEAPU8[$51+2>>0]<<16)|(HEAPU8[$51+3>>0]<<24);
   $53 = ((($52)) + 9|0);
   $54 = HEAPU8[$53>>0]|(HEAPU8[$53+1>>0]<<8)|(HEAPU8[$53+2>>0]<<16)|(HEAPU8[$53+3>>0]<<24);
   $55 = HEAP32[$ast>>2]|0;
   $56 = HEAPU8[$55>>0]|(HEAPU8[$55+1>>0]<<8)|(HEAPU8[$55+2>>0]<<16)|(HEAPU8[$55+3>>0]<<24);
   $57 = ((($56)) + 13|0);
   $58 = HEAPU8[$57>>0]|(HEAPU8[$57+1>>0]<<8);
   $59 = HEAP32[$ast>>2]|0;
   $60 = HEAPU8[$59>>0]|(HEAPU8[$59+1>>0]<<8)|(HEAPU8[$59+2>>0]<<16)|(HEAPU8[$59+3>>0]<<24);
   $61 = ((($60)) + 15|0);
   $62 = HEAPU8[$61>>0]|(HEAPU8[$61+1>>0]<<8);
   __set_error_pos($50,$54,$58,$62);
   $result = 3;
   $335 = HEAP32[$ast>>2]|0;
   $336 = $1;
   HEAP32[$336>>2] = $335;
   $337 = $result;
   STACKTOP = sp;return ($337|0);
  }
 }
 $63 = $0;
 $64 = $0;
 $65 = ((($64)) + 67|0);
 $66 = HEAPU8[$65>>0]|(HEAPU8[$65+1>>0]<<8)|(HEAPU8[$65+2>>0]<<16)|(HEAPU8[$65+3>>0]<<24);
 $67 = (__set_current_error($63,42,$66)|0);
 $68 = ($67<<24>>24)!=(0);
 if (!($68)) {
  $335 = HEAP32[$ast>>2]|0;
  $336 = $1;
  HEAP32[$336>>2] = $335;
  $337 = $result;
  STACKTOP = sp;return ($337|0);
 }
 $69 = $0;
 __set_error_pos($69,0,0,0);
 $result = 3;
 $335 = HEAP32[$ast>>2]|0;
 $336 = $1;
 HEAP32[$336>>2] = $335;
 $337 = $result;
 STACKTOP = sp;return ($337|0);
}
function __compare_numbers($first,$second) {
 $first = $first|0;
 $second = $second|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0.0, $101 = 0.0, $102 = 0, $103 = 0.0, $104 = 0.0, $105 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0.0, $56 = 0, $57 = 0;
 var $58 = 0.0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0.0, $63 = 0, $64 = 0, $65 = 0.0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0.0, $74 = 0.0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0.0, $82 = 0.0, $83 = 0, $84 = 0.0, $85 = 0.0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0.0, $93 = 0.0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $first;
 $1 = $second;
 $result = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 if (!($or$cond)) {
  ___assert_fail((6027|0),(4322|0),10213,(6043|0));
  // unreachable;
 }
 $6 = $0;
 $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
 $8 = ($7|0)==(2);
 if ($8) {
  label = 5;
 } else {
  $9 = $0;
  $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
  $11 = ($10|0)==(3);
  if ($11) {
   label = 5;
  }
 }
 if ((label|0) == 5) {
  $12 = $1;
  $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
  $14 = ($13|0)==(2);
  if (!($14)) {
  }
 }
 $15 = $0;
 $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
 $17 = ($16|0)==(2);
 if (!($17)) {
  $18 = $0;
  $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
  $20 = ($19|0)==(3);
  if (!($20)) {
   ___assert_fail((6060|0),(4322|0),10214,(6043|0));
   // unreachable;
  }
 }
 $21 = $1;
 $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
 $23 = ($22|0)==(2);
 if (!($23)) {
  $24 = $1;
  $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
  $26 = ($25|0)==(3);
  if (!($26)) {
   ___assert_fail((6060|0),(4322|0),10214,(6043|0));
   // unreachable;
  }
 }
 $27 = $0;
 $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
 $29 = ($28|0)==(2);
 if ($29) {
  $30 = $1;
  $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8)|(HEAPU8[$30+2>>0]<<16)|(HEAPU8[$30+3>>0]<<24);
  $32 = ($31|0)==(2);
  if ($32) {
   $33 = $0;
   $34 = ((($33)) + 4|0);
   $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
   $36 = $1;
   $37 = ((($36)) + 4|0);
   $38 = HEAPU8[$37>>0]|(HEAPU8[$37+1>>0]<<8)|(HEAPU8[$37+2>>0]<<16)|(HEAPU8[$37+3>>0]<<24);
   $39 = ($35|0)>($38|0);
   if ($39) {
    $result = 1;
    $105 = $result;
    STACKTOP = sp;return ($105|0);
   }
   $40 = $0;
   $41 = ((($40)) + 4|0);
   $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
   $43 = $1;
   $44 = ((($43)) + 4|0);
   $45 = HEAPU8[$44>>0]|(HEAPU8[$44+1>>0]<<8)|(HEAPU8[$44+2>>0]<<16)|(HEAPU8[$44+3>>0]<<24);
   $46 = ($42|0)<($45|0);
   if (!($46)) {
    $105 = $result;
    STACKTOP = sp;return ($105|0);
   }
   $result = -1;
   $105 = $result;
   STACKTOP = sp;return ($105|0);
  }
 }
 $47 = $0;
 $48 = HEAPU8[$47>>0]|(HEAPU8[$47+1>>0]<<8)|(HEAPU8[$47+2>>0]<<16)|(HEAPU8[$47+3>>0]<<24);
 $49 = ($48|0)==(3);
 if ($49) {
  $50 = $1;
  $51 = HEAPU8[$50>>0]|(HEAPU8[$50+1>>0]<<8)|(HEAPU8[$50+2>>0]<<16)|(HEAPU8[$50+3>>0]<<24);
  $52 = ($51|0)==(3);
  if ($52) {
   $53 = $0;
   $54 = ((($53)) + 4|0);
   HEAP8[tempDoublePtr>>0]=HEAP8[$54>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$54+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$54+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$54+3>>0];$55 = +HEAPF32[tempDoublePtr>>2];
   $56 = $1;
   $57 = ((($56)) + 4|0);
   HEAP8[tempDoublePtr>>0]=HEAP8[$57>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$57+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$57+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$57+3>>0];$58 = +HEAPF32[tempDoublePtr>>2];
   $59 = $55 > $58;
   if ($59) {
    $result = 1;
    $105 = $result;
    STACKTOP = sp;return ($105|0);
   }
   $60 = $0;
   $61 = ((($60)) + 4|0);
   HEAP8[tempDoublePtr>>0]=HEAP8[$61>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$61+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$61+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$61+3>>0];$62 = +HEAPF32[tempDoublePtr>>2];
   $63 = $1;
   $64 = ((($63)) + 4|0);
   HEAP8[tempDoublePtr>>0]=HEAP8[$64>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$64+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$64+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$64+3>>0];$65 = +HEAPF32[tempDoublePtr>>2];
   $66 = $62 < $65;
   if (!($66)) {
    $105 = $result;
    STACKTOP = sp;return ($105|0);
   }
   $result = -1;
   $105 = $result;
   STACKTOP = sp;return ($105|0);
  }
 }
 $67 = $0;
 $68 = HEAPU8[$67>>0]|(HEAPU8[$67+1>>0]<<8)|(HEAPU8[$67+2>>0]<<16)|(HEAPU8[$67+3>>0]<<24);
 $69 = ($68|0)==(2);
 $70 = $0;
 $71 = ((($70)) + 4|0);
 if ($69) {
  $72 = HEAPU8[$71>>0]|(HEAPU8[$71+1>>0]<<8)|(HEAPU8[$71+2>>0]<<16)|(HEAPU8[$71+3>>0]<<24);
  $73 = (+($72|0));
  $85 = $73;
 } else {
  HEAP8[tempDoublePtr>>0]=HEAP8[$71>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$71+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$71+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$71+3>>0];$74 = +HEAPF32[tempDoublePtr>>2];
  $85 = $74;
 }
 $75 = $1;
 $76 = HEAPU8[$75>>0]|(HEAPU8[$75+1>>0]<<8)|(HEAPU8[$75+2>>0]<<16)|(HEAPU8[$75+3>>0]<<24);
 $77 = ($76|0)==(2);
 $78 = $1;
 $79 = ((($78)) + 4|0);
 if ($77) {
  $80 = HEAPU8[$79>>0]|(HEAPU8[$79+1>>0]<<8)|(HEAPU8[$79+2>>0]<<16)|(HEAPU8[$79+3>>0]<<24);
  $81 = (+($80|0));
  $84 = $81;
 } else {
  HEAP8[tempDoublePtr>>0]=HEAP8[$79>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$79+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$79+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$79+3>>0];$82 = +HEAPF32[tempDoublePtr>>2];
  $84 = $82;
 }
 $83 = $85 > $84;
 if ($83) {
  $result = 1;
  $105 = $result;
  STACKTOP = sp;return ($105|0);
 }
 $86 = $0;
 $87 = HEAPU8[$86>>0]|(HEAPU8[$86+1>>0]<<8)|(HEAPU8[$86+2>>0]<<16)|(HEAPU8[$86+3>>0]<<24);
 $88 = ($87|0)==(2);
 $89 = $0;
 $90 = ((($89)) + 4|0);
 if ($88) {
  $91 = HEAPU8[$90>>0]|(HEAPU8[$90+1>>0]<<8)|(HEAPU8[$90+2>>0]<<16)|(HEAPU8[$90+3>>0]<<24);
  $92 = (+($91|0));
  $104 = $92;
 } else {
  HEAP8[tempDoublePtr>>0]=HEAP8[$90>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$90+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$90+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$90+3>>0];$93 = +HEAPF32[tempDoublePtr>>2];
  $104 = $93;
 }
 $94 = $1;
 $95 = HEAPU8[$94>>0]|(HEAPU8[$94+1>>0]<<8)|(HEAPU8[$94+2>>0]<<16)|(HEAPU8[$94+3>>0]<<24);
 $96 = ($95|0)==(2);
 $97 = $1;
 $98 = ((($97)) + 4|0);
 if ($96) {
  $99 = HEAPU8[$98>>0]|(HEAPU8[$98+1>>0]<<8)|(HEAPU8[$98+2>>0]<<16)|(HEAPU8[$98+3>>0]<<24);
  $100 = (+($99|0));
  $103 = $100;
 } else {
  HEAP8[tempDoublePtr>>0]=HEAP8[$98>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$98+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$98+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$98+3>>0];$101 = +HEAPF32[tempDoublePtr>>2];
  $103 = $101;
 }
 $102 = $104 < $103;
 if (!($102)) {
  $105 = $result;
  STACKTOP = sp;return ($105|0);
 }
 $result = -1;
 $105 = $result;
 STACKTOP = sp;return ($105|0);
}
function __common_end_looping($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $l;
 $result = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),11252,(6007|0));
  // unreachable;
 }
 $6 = $0;
 $7 = $1;
 $8 = (__skip_struct($6,$7,28,0,32)|0);
 $result = $8;
 $9 = $result;
 $10 = ($9|0)==(0);
 if (!($10)) {
  $14 = $result;
  STACKTOP = sp;return ($14|0);
 }
 $11 = $0;
 $12 = $1;
 $13 = (__skip_to($11,$12,0,22)|0);
 $result = $13;
 $14 = $result;
 STACKTOP = sp;return ($14|0);
}
function __common_keep_looping($s,$l,$var_loop) {
 $s = $s|0;
 $l = $l|0;
 $var_loop = $var_loop|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $ast = 0, $obj = 0, $or$cond = 0, $or$cond3 = 0, $result = 0, $running = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ast = sp + 8|0;
 $0 = $s;
 $1 = $l;
 $2 = $var_loop;
 $result = 0;
 HEAP32[$ast>>2] = 0;
 $obj = 0;
 $running = 0;
 $3 = $0;
 $4 = ($3|0)!=(0|0);
 $5 = $1;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),11268,(5986|0));
  // unreachable;
 }
 $7 = $0;
 $8 = ((($7)) + 75|0);
 $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
 $running = $9;
 $10 = $1;
 $11 = HEAP32[$10>>2]|0;
 HEAP32[$ast>>2] = $11;
 $12 = HEAP32[$ast>>2]|0;
 $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
 $obj = $13;
 while(1) {
  $14 = $obj;
  $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
  $16 = ($15|0)==(8);
  if ($16) {
   $17 = $obj;
   $18 = ((($17)) + 4|0);
   $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
   $20 = ((($19)) + 4|0);
   $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
   $22 = ($21|0)==(32|0);
   $24 = $22;
  } else {
   $24 = 0;
  }
  $23 = $24 ^ 1;
  if (!($23)) {
   break;
  }
  $25 = $0;
  $26 = (__execute_statement($25,$ast,0)|0);
  $result = $26;
  $27 = $result;
  $28 = ($27|0)==(102);
  if ($28) {
   label = 8;
   break;
  }
  $44 = $result;
  $45 = ($44|0)==(101);
  if ($45) {
   label = 14;
   break;
  }
  $50 = $result;
  $51 = ($50|0)==(103);
  $52 = $result;
  $53 = ($52|0)!=(0);
  $or$cond3 = $51 | $53;
  if ($or$cond3) {
   break;
  }
  $54 = HEAP32[$ast>>2]|0;
  $55 = ($54|0)!=(0|0);
  $56 = HEAP32[$ast>>2]|0;
  if (!($55)) {
   label = 18;
   break;
  }
  $87 = HEAPU8[$56>>0]|(HEAPU8[$56+1>>0]<<8)|(HEAPU8[$56+2>>0]<<16)|(HEAPU8[$56+3>>0]<<24);
  $obj = $87;
 }
 do {
  if ((label|0) == 8) {
   $29 = $running;
   $30 = ((($29)) + 16|0);
   $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8)|(HEAPU8[$30+2>>0]<<16)|(HEAPU8[$30+3>>0]<<24);
   $32 = ($31|0)!=(0|0);
   if ($32) {
    $33 = $running;
    $34 = ((($33)) + 16|0);
    $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
    $36 = $2;
    $37 = ($35|0)==($36|0);
    if (!($37)) {
     $40 = $0;
     $41 = (__skip_struct($40,$ast,28,0,32)|0);
     $42 = ($41|0)!=(0);
     if ($42) {
      break;
     }
     $43 = $0;
     (__skip_to($43,$ast,0,22)|0);
     break;
    }
   }
   $38 = $running;
   $39 = ((($38)) + 16|0);
   HEAP8[$39>>0]=0&255;HEAP8[$39+1>>0]=(0>>8)&255;HEAP8[$39+2>>0]=(0>>16)&255;HEAP8[$39+3>>0]=0>>24;
   $result = 0;
  }
  else if ((label|0) == 14) {
   $46 = $0;
   $47 = (__skip_struct($46,$ast,28,0,32)|0);
   $48 = ($47|0)!=(0);
   if (!($48)) {
    $49 = $0;
    (__skip_to($49,$ast,0,22)|0);
   }
  }
  else if ((label|0) == 18) {
   $57 = ($56|0)!=(0|0);
   if ($57) {
    $58 = HEAP32[$ast>>2]|0;
    $59 = HEAPU8[$58>>0]|(HEAPU8[$58+1>>0]<<8)|(HEAPU8[$58+2>>0]<<16)|(HEAPU8[$58+3>>0]<<24);
    $60 = ($59|0)!=(0|0);
    if ($60) {
     $61 = $0;
     $62 = $0;
     $63 = ((($62)) + 67|0);
     $64 = HEAPU8[$63>>0]|(HEAPU8[$63+1>>0]<<8)|(HEAPU8[$63+2>>0]<<16)|(HEAPU8[$63+3>>0]<<24);
     $65 = (__set_current_error($61,43,$64)|0);
     $66 = ($65<<24>>24)!=(0);
     if (!($66)) {
      break;
     }
     $67 = $0;
     $68 = HEAP32[$ast>>2]|0;
     $69 = HEAPU8[$68>>0]|(HEAPU8[$68+1>>0]<<8)|(HEAPU8[$68+2>>0]<<16)|(HEAPU8[$68+3>>0]<<24);
     $70 = ((($69)) + 9|0);
     $71 = HEAPU8[$70>>0]|(HEAPU8[$70+1>>0]<<8)|(HEAPU8[$70+2>>0]<<16)|(HEAPU8[$70+3>>0]<<24);
     $72 = HEAP32[$ast>>2]|0;
     $73 = HEAPU8[$72>>0]|(HEAPU8[$72+1>>0]<<8)|(HEAPU8[$72+2>>0]<<16)|(HEAPU8[$72+3>>0]<<24);
     $74 = ((($73)) + 13|0);
     $75 = HEAPU8[$74>>0]|(HEAPU8[$74+1>>0]<<8);
     $76 = HEAP32[$ast>>2]|0;
     $77 = HEAPU8[$76>>0]|(HEAPU8[$76+1>>0]<<8)|(HEAPU8[$76+2>>0]<<16)|(HEAPU8[$76+3>>0]<<24);
     $78 = ((($77)) + 15|0);
     $79 = HEAPU8[$78>>0]|(HEAPU8[$78+1>>0]<<8);
     __set_error_pos($67,$71,$75,$79);
     $result = 3;
     break;
    }
   }
   $80 = $0;
   $81 = $0;
   $82 = ((($81)) + 67|0);
   $83 = HEAPU8[$82>>0]|(HEAPU8[$82+1>>0]<<8)|(HEAPU8[$82+2>>0]<<16)|(HEAPU8[$82+3>>0]<<24);
   $84 = (__set_current_error($80,43,$83)|0);
   $85 = ($84<<24>>24)!=(0);
   if ($85) {
    $86 = $0;
    __set_error_pos($86,0,0,0);
    $result = 3;
   }
  }
 } while(0);
 $88 = HEAP32[$ast>>2]|0;
 $89 = $1;
 HEAP32[$89>>2] = $88;
 $90 = $result;
 STACKTOP = sp;return ($90|0);
}
function __is_ref($obj) {
 $obj = $obj|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $obj;
 $2 = $1;
 $3 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
 switch ($3|0) {
 case 7:  {
  $0 = 1;
  break;
 }
 case 10:  {
  $0 = 1;
  break;
 }
 case 11:  {
  $0 = 1;
  break;
 }
 case 13:  {
  $0 = 1;
  break;
 }
 case 16:  {
  $0 = 1;
  break;
 }
 case 17:  {
  $4 = $1;
  $5 = ((($4)) + 4|0);
  $6 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
  $7 = ((($6)) + 58|0);
  $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
  $9 = ($8|0)==(2);
  $10 = $9&1;
  $11 = $10&255;
  $0 = $11;
  break;
 }
 default: {
  $0 = 0;
 }
 }
 $12 = $0;
 STACKTOP = sp;return ($12|0);
}
function __gc_remove($ref,$data,$gc) {
 $ref = $ref|0;
 $data = $data|0;
 $gc = $gc|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond3 = 0, $or$cond5 = 0, $table = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $ref;
 $2 = $data;
 $3 = $gc;
 $table = 0;
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $6 = $2;
 $7 = ($6|0)!=(0|0);
 $or$cond = $5 & $7;
 if ($or$cond) {
 }
 $8 = $1;
 $9 = ($8|0)!=(0|0);
 $10 = $2;
 $11 = ($10|0)!=(0|0);
 $or$cond3 = $9 & $11;
 $12 = $3;
 $13 = ($12|0)!=(0|0);
 $or$cond5 = $or$cond3 & $13;
 if (!($or$cond5)) {
  ___assert_fail((6266|0),(4322|0),6492,(6284|0));
  // unreachable;
 }
 $14 = $3;
 $15 = ((($14)) + 16|0);
 $16 = HEAP8[$15>>0]|0;
 $17 = ($16<<24>>24)!=(0);
 $18 = $3;
 if ($17) {
  $19 = ((($18)) + 4|0);
  $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8)|(HEAPU8[$19+2>>0]<<16)|(HEAPU8[$19+3>>0]<<24);
  $table = $20;
 } else {
  $21 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
  $table = $21;
 }
 $22 = $table;
 $23 = ($22|0)!=(0|0);
 if ($23) {
  $24 = $table;
  $25 = $1;
  $26 = (__ht_remove($24,$25,0)|0);
  $0 = $26;
  $27 = $0;
  STACKTOP = sp;return ($27|0);
 } else {
  $0 = 0;
  $27 = $0;
  STACKTOP = sp;return ($27|0);
 }
 return (0)|0;
}
function __try_overridden($s,$l,$d,$f,$t) {
 $s = $s|0;
 $l = $l|0;
 $d = $d|0;
 $f = $f|0;
 $t = $t|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $9 = 0, $ast = 0, $buf = 0, $obj = 0, $obj1 = 0, $ofn = 0, $ofo = 0, $or$cond = 0, $or$cond3 = 0, $or$cond5 = 0, $or$cond7 = 0, $or$cond9 = 0, $va = 0, $vararg_buffer = 0, dest = 0, label = 0;
 var sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer = sp;
 $obj = sp + 104|0;
 $buf = sp + 72|0;
 $obj1 = sp + 48|0;
 $ast = sp + 4|0;
 $va = sp + 40|0;
 $1 = $s;
 $2 = $l;
 $3 = $d;
 $4 = $f;
 $5 = $t;
 $6 = $1;
 $7 = ($6|0)!=(0|0);
 $8 = $2;
 $9 = ($8|0)!=(0|0);
 $or$cond = $7 & $9;
 $10 = $3;
 $11 = ($10|0)!=(0|0);
 $or$cond3 = $or$cond & $11;
 if ($or$cond3) {
 }
 $12 = $1;
 $13 = ($12|0)!=(0|0);
 $14 = $2;
 $15 = ($14|0)!=(0|0);
 $or$cond5 = $13 & $15;
 $16 = $3;
 $17 = ($16|0)!=(0|0);
 $or$cond7 = $or$cond5 & $17;
 $18 = $4;
 $19 = ($18|0)!=(0|0);
 $or$cond9 = $or$cond7 & $19;
 if (!($or$cond9)) {
  ___assert_fail((6229|0),(4322|0),4811,(6246|0));
  // unreachable;
 }
 $20 = $3;
 $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
 $22 = ($21|0)==(64);
 if ($22) {
  dest=$obj; stop=dest+17|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
  HEAP8[$obj>>0]=0&255;HEAP8[$obj+1>>0]=(0>>8)&255;HEAP8[$obj+2>>0]=(0>>16)&255;HEAP8[$obj+3>>0]=0>>24;
  $23 = $3;
  (__public_value_to_internal_object($23,$obj)|0);
  $24 = $5;
  $25 = ($24|0)==(64);
  if ($25) {
   $26 = ((($obj)) + 4|0);
   $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
   $28 = ((($27)) + 49|0);
   $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
   $30 = ($29|0)!=(0|0);
   if ($30) {
    $31 = ((($obj)) + 4|0);
    $32 = HEAPU8[$31>>0]|(HEAPU8[$31+1>>0]<<8)|(HEAPU8[$31+2>>0]<<16)|(HEAPU8[$31+3>>0]<<24);
    $33 = ((($32)) + 49|0);
    $34 = HEAPU8[$33>>0]|(HEAPU8[$33+1>>0]<<8)|(HEAPU8[$33+2>>0]<<16)|(HEAPU8[$33+3>>0]<<24);
    $35 = $1;
    $36 = $2;
    $37 = $3;
    $38 = $4;
    $39 = (FUNCTION_TABLE_iiiii[$34 & 255]($35,$36,$37,$38)|0);
    $0 = $39;
    $84 = $0;
    STACKTOP = sp;return ($84|0);
   }
  }
  $40 = $5;
  $41 = ($40|0)==(128);
  if ($41) {
   $42 = ((($obj)) + 4|0);
   $43 = HEAPU8[$42>>0]|(HEAPU8[$42+1>>0]<<8)|(HEAPU8[$42+2>>0]<<16)|(HEAPU8[$42+3>>0]<<24);
   $44 = ((($43)) + 53|0);
   $45 = HEAPU8[$44>>0]|(HEAPU8[$44+1>>0]<<8)|(HEAPU8[$44+2>>0]<<16)|(HEAPU8[$44+3>>0]<<24);
   $46 = ($45|0)!=(0|0);
   if ($46) {
    $47 = ((($obj)) + 4|0);
    $48 = HEAPU8[$47>>0]|(HEAPU8[$47+1>>0]<<8)|(HEAPU8[$47+2>>0]<<16)|(HEAPU8[$47+3>>0]<<24);
    $49 = ((($48)) + 53|0);
    $50 = HEAPU8[$49>>0]|(HEAPU8[$49+1>>0]<<8)|(HEAPU8[$49+2>>0]<<16)|(HEAPU8[$49+3>>0]<<24);
    $51 = $1;
    $52 = $2;
    $53 = $3;
    $54 = $4;
    $55 = (FUNCTION_TABLE_iiiii[$50 & 255]($51,$52,$53,$54)|0);
    $0 = $55;
    $84 = $0;
    STACKTOP = sp;return ($84|0);
   }
  }
 }
 $56 = $3;
 $57 = HEAPU8[$56>>0]|(HEAPU8[$56+1>>0]<<8)|(HEAPU8[$56+2>>0]<<16)|(HEAPU8[$56+3>>0]<<24);
 $58 = ($57|0)==(4096);
 if ($58) {
  $ofn = 0;
  dest=$obj1; stop=dest+17|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
  HEAP8[$obj1>>0]=0&255;HEAP8[$obj1+1>>0]=(0>>8)&255;HEAP8[$obj1+2>>0]=(0>>16)&255;HEAP8[$obj1+3>>0]=0>>24;
  $59 = $3;
  (__public_value_to_internal_object($59,$obj1)|0);
  $60 = $4;
  HEAP32[$vararg_buffer>>2] = $60;
  (_sprintf($buf,6262,$vararg_buffer)|0);
  $61 = $1;
  $62 = ((($obj1)) + 4|0);
  $63 = HEAPU8[$62>>0]|(HEAPU8[$62+1>>0]<<8)|(HEAPU8[$62+2>>0]<<16)|(HEAPU8[$62+3>>0]<<24);
  $64 = (__search_identifier_in_class($61,$63,$buf,0,0)|0);
  $ofn = $64;
  $65 = $ofn;
  $66 = ($65|0)!=(0|0);
  if ($66) {
   $67 = $ofn;
   $68 = HEAPU8[$67>>0]|(HEAPU8[$67+1>>0]<<8)|(HEAPU8[$67+2>>0]<<16)|(HEAPU8[$67+3>>0]<<24);
   $ofo = $68;
   $69 = $2;
   $70 = HEAP32[$69>>2]|0;
   HEAP32[$ast>>2] = $70;
   $71 = ((($va)) + 4|0);
   ;HEAP8[$71>>0]=0|0;HEAP8[$71+1>>0]=0|0;HEAP8[$71+2>>0]=0|0;HEAP8[$71+3>>0]=0|0;
   HEAP8[$va>>0]=0&255;HEAP8[$va+1>>0]=(0>>8)&255;HEAP8[$va+2>>0]=(0>>16)&255;HEAP8[$va+3>>0]=0>>24;
   $72 = $1;
   $73 = $ofo;
   $74 = ((($73)) + 4|0);
   $75 = HEAPU8[$74>>0]|(HEAPU8[$74+1>>0]<<8)|(HEAPU8[$74+2>>0]<<16)|(HEAPU8[$74+3>>0]<<24);
   $76 = (__eval_routine($72,$ast,$va,0,$75,143,144)|0);
   $77 = ($76|0)==(0);
   if ($77) {
    $78 = HEAP32[$ast>>2]|0;
    $79 = ($78|0)!=(0|0);
    if ($79) {
     $80 = HEAP32[$ast>>2]|0;
     $81 = ((($80)) + 4|0);
     $82 = HEAPU8[$81>>0]|(HEAPU8[$81+1>>0]<<8)|(HEAPU8[$81+2>>0]<<16)|(HEAPU8[$81+3>>0]<<24);
     $83 = $2;
     HEAP32[$83>>2] = $82;
    }
    $0 = 3;
    $84 = $0;
    STACKTOP = sp;return ($84|0);
   }
  }
 }
 $0 = 0;
 $84 = $0;
 STACKTOP = sp;return ($84|0);
}
function __swap_public_value($tgt,$src) {
 $tgt = $tgt|0;
 $src = $src|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $tmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $tmp = sp + 8|0;
 $0 = $tgt;
 $1 = $src;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 if ($or$cond) {
  $6 = $0;
  ;HEAP8[$tmp>>0]=HEAP8[$6>>0]|0;HEAP8[$tmp+1>>0]=HEAP8[$6+1>>0]|0;HEAP8[$tmp+2>>0]=HEAP8[$6+2>>0]|0;HEAP8[$tmp+3>>0]=HEAP8[$6+3>>0]|0;HEAP8[$tmp+4>>0]=HEAP8[$6+4>>0]|0;HEAP8[$tmp+5>>0]=HEAP8[$6+5>>0]|0;HEAP8[$tmp+6>>0]=HEAP8[$6+6>>0]|0;HEAP8[$tmp+7>>0]=HEAP8[$6+7>>0]|0;
  $7 = $0;
  $8 = $1;
  ;HEAP8[$7>>0]=HEAP8[$8>>0]|0;HEAP8[$7+1>>0]=HEAP8[$8+1>>0]|0;HEAP8[$7+2>>0]=HEAP8[$8+2>>0]|0;HEAP8[$7+3>>0]=HEAP8[$8+3>>0]|0;HEAP8[$7+4>>0]=HEAP8[$8+4>>0]|0;HEAP8[$7+5>>0]=HEAP8[$8+5>>0]|0;HEAP8[$7+6>>0]=HEAP8[$8+6>>0]|0;HEAP8[$7+7>>0]=HEAP8[$8+7>>0]|0;
  $9 = $1;
  ;HEAP8[$9>>0]=HEAP8[$tmp>>0]|0;HEAP8[$9+1>>0]=HEAP8[$tmp+1>>0]|0;HEAP8[$9+2>>0]=HEAP8[$tmp+2>>0]|0;HEAP8[$9+3>>0]=HEAP8[$tmp+3>>0]|0;HEAP8[$9+4>>0]=HEAP8[$tmp+4>>0]|0;HEAP8[$9+5>>0]=HEAP8[$tmp+5>>0]|0;HEAP8[$9+6>>0]=HEAP8[$tmp+6>>0]|0;HEAP8[$9+7>>0]=HEAP8[$tmp+7>>0]|0;
  STACKTOP = sp;return;
 } else {
  ___assert_fail((5351|0),(4322|0),10748,(6210|0));
  // unreachable;
 }
}
function __move_list_it_next($it) {
 $it = $it|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $result = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $it;
 $result = 0;
 $1 = $0;
 $2 = ($1|0)!=(0|0);
 if (!($2)) {
  $118 = $result;
  STACKTOP = sp;return ($118|0);
 }
 $3 = $0;
 $4 = ((($3)) + 17|0);
 $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
 $6 = ($5|0)!=(0|0);
 if (!($6)) {
  $118 = $result;
  STACKTOP = sp;return ($118|0);
 }
 $7 = $0;
 $8 = ((($7)) + 17|0);
 $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
 $10 = ((($9)) + 19|0);
 $11 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
 $12 = ($11|0)!=(0|0);
 if (!($12)) {
  $118 = $result;
  STACKTOP = sp;return ($118|0);
 }
 $13 = $0;
 $14 = ((($13)) + 17|0);
 $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
 $16 = ((($15)) + 17|0);
 $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8);
 $18 = $17 << 16 >> 16;
 $19 = ($18|0)<(0);
 $20 = $0;
 if ($19) {
  $result = $20;
  $118 = $result;
  STACKTOP = sp;return ($118|0);
 }
 $21 = ((($20)) + 22|0);
 $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
 $23 = ($22|0)!=(0|0);
 if (!($23)) {
  $24 = $0;
  $25 = ((($24)) + 17|0);
  $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
  $27 = ((($26)) + 35|0);
  $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
  $29 = ($28|0)!=(0|0);
  if (!($29)) {
   $118 = $result;
   STACKTOP = sp;return ($118|0);
  }
 }
 $30 = $0;
 $31 = ((($30)) + 17|0);
 $32 = HEAPU8[$31>>0]|(HEAPU8[$31+1>>0]<<8)|(HEAPU8[$31+2>>0]<<16)|(HEAPU8[$31+3>>0]<<24);
 $33 = ((($32)) + 35|0);
 $34 = HEAPU8[$33>>0]|(HEAPU8[$33+1>>0]<<8)|(HEAPU8[$33+2>>0]<<16)|(HEAPU8[$33+3>>0]<<24);
 $35 = ($34|0)!=(0|0);
 $36 = $0;
 $37 = ((($36)) + 17|0);
 $38 = HEAPU8[$37>>0]|(HEAPU8[$37+1>>0]<<8)|(HEAPU8[$37+2>>0]<<16)|(HEAPU8[$37+3>>0]<<24);
 $39 = ((($38)) + 17|0);
 $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8);
 $41 = ($40<<16>>16)!=(0);
 if (!($35)) {
  if ($41) {
   $106 = $0;
   $107 = ((($106)) + 22|0);
   $108 = HEAPU8[$107>>0]|(HEAPU8[$107+1>>0]<<8)|(HEAPU8[$107+2>>0]<<16)|(HEAPU8[$107+3>>0]<<24);
   $109 = ((($108)) + 8|0);
   $110 = HEAPU8[$109>>0]|(HEAPU8[$109+1>>0]<<8)|(HEAPU8[$109+2>>0]<<16)|(HEAPU8[$109+3>>0]<<24);
   $111 = $0;
   $112 = ((($111)) + 22|0);
   HEAP8[$112>>0]=$110&255;HEAP8[$112+1>>0]=($110>>8)&255;HEAP8[$112+2>>0]=($110>>16)&255;HEAP8[$112+3>>0]=$110>>24;
  }
  $113 = $0;
  $114 = ((($113)) + 22|0);
  $115 = HEAPU8[$114>>0]|(HEAPU8[$114+1>>0]<<8)|(HEAPU8[$114+2>>0]<<16)|(HEAPU8[$114+3>>0]<<24);
  $116 = ($115|0)!=(0|0);
  if (!($116)) {
   $118 = $result;
   STACKTOP = sp;return ($118|0);
  }
  $117 = $0;
  $result = $117;
  $118 = $result;
  STACKTOP = sp;return ($118|0);
 }
 if ($41) {
  $42 = $0;
  $43 = ((($42)) + 17|0);
  $44 = HEAPU8[$43>>0]|(HEAPU8[$43+1>>0]<<8)|(HEAPU8[$43+2>>0]<<16)|(HEAPU8[$43+3>>0]<<24);
  $45 = ((($44)) + 31|0);
  $46 = HEAPU8[$45>>0]|(HEAPU8[$45+1>>0]<<8)|(HEAPU8[$45+2>>0]<<16)|(HEAPU8[$45+3>>0]<<24);
  $47 = ($46|0)!=(0);
  if ($47) {
   $48 = $0;
   $49 = ((($48)) + 17|0);
   $50 = HEAPU8[$49>>0]|(HEAPU8[$49+1>>0]<<8)|(HEAPU8[$49+2>>0]<<16)|(HEAPU8[$49+3>>0]<<24);
   $51 = ((($50)) + 31|0);
   $52 = HEAPU8[$51>>0]|(HEAPU8[$51+1>>0]<<8)|(HEAPU8[$51+2>>0]<<16)|(HEAPU8[$51+3>>0]<<24);
   $53 = ($52|0)>(0);
   $54 = $53 ? 1 : -1;
   $59 = $54;
  } else {
   $59 = 0;
  }
  $55 = $0;
  $56 = ((($55)) + 22|0);
  $57 = HEAPU8[$56>>0]|(HEAPU8[$56+1>>0]<<8)|(HEAPU8[$56+2>>0]<<16)|(HEAPU8[$56+3>>0]<<24);
  $58 = (($57) + ($59))|0;
  HEAP8[$56>>0]=$58&255;HEAP8[$56+1>>0]=($58>>8)&255;HEAP8[$56+2>>0]=($58>>16)&255;HEAP8[$56+3>>0]=$58>>24;
 }
 $60 = $0;
 $61 = ((($60)) + 17|0);
 $62 = HEAPU8[$61>>0]|(HEAPU8[$61+1>>0]<<8)|(HEAPU8[$61+2>>0]<<16)|(HEAPU8[$61+3>>0]<<24);
 $63 = ((($62)) + 31|0);
 $64 = HEAPU8[$63>>0]|(HEAPU8[$63+1>>0]<<8)|(HEAPU8[$63+2>>0]<<16)|(HEAPU8[$63+3>>0]<<24);
 $65 = ($64|0)>(0);
 if ($65) {
  $66 = $0;
  $67 = ((($66)) + 22|0);
  $68 = HEAPU8[$67>>0]|(HEAPU8[$67+1>>0]<<8)|(HEAPU8[$67+2>>0]<<16)|(HEAPU8[$67+3>>0]<<24);
  $69 = $0;
  $70 = ((($69)) + 17|0);
  $71 = HEAPU8[$70>>0]|(HEAPU8[$70+1>>0]<<8)|(HEAPU8[$70+2>>0]<<16)|(HEAPU8[$70+3>>0]<<24);
  $72 = ((($71)) + 35|0);
  $73 = HEAPU8[$72>>0]|(HEAPU8[$72+1>>0]<<8)|(HEAPU8[$72+2>>0]<<16)|(HEAPU8[$72+3>>0]<<24);
  $74 = HEAP32[$73>>2]|0;
  $75 = $0;
  $76 = ((($75)) + 17|0);
  $77 = HEAPU8[$76>>0]|(HEAPU8[$76+1>>0]<<8)|(HEAPU8[$76+2>>0]<<16)|(HEAPU8[$76+3>>0]<<24);
  $78 = ((($77)) + 31|0);
  $79 = HEAPU8[$78>>0]|(HEAPU8[$78+1>>0]<<8)|(HEAPU8[$78+2>>0]<<16)|(HEAPU8[$78+3>>0]<<24);
  $80 = (($74) + ($79))|0;
  $81 = ($68|0)<($80|0);
  if ($81) {
   $82 = $0;
   $result = $82;
   $118 = $result;
   STACKTOP = sp;return ($118|0);
  }
 }
 $83 = $0;
 $84 = ((($83)) + 17|0);
 $85 = HEAPU8[$84>>0]|(HEAPU8[$84+1>>0]<<8)|(HEAPU8[$84+2>>0]<<16)|(HEAPU8[$84+3>>0]<<24);
 $86 = ((($85)) + 31|0);
 $87 = HEAPU8[$86>>0]|(HEAPU8[$86+1>>0]<<8)|(HEAPU8[$86+2>>0]<<16)|(HEAPU8[$86+3>>0]<<24);
 $88 = ($87|0)<(0);
 if (!($88)) {
  $118 = $result;
  STACKTOP = sp;return ($118|0);
 }
 $89 = $0;
 $90 = ((($89)) + 22|0);
 $91 = HEAPU8[$90>>0]|(HEAPU8[$90+1>>0]<<8)|(HEAPU8[$90+2>>0]<<16)|(HEAPU8[$90+3>>0]<<24);
 $92 = $0;
 $93 = ((($92)) + 17|0);
 $94 = HEAPU8[$93>>0]|(HEAPU8[$93+1>>0]<<8)|(HEAPU8[$93+2>>0]<<16)|(HEAPU8[$93+3>>0]<<24);
 $95 = ((($94)) + 35|0);
 $96 = HEAPU8[$95>>0]|(HEAPU8[$95+1>>0]<<8)|(HEAPU8[$95+2>>0]<<16)|(HEAPU8[$95+3>>0]<<24);
 $97 = HEAP32[$96>>2]|0;
 $98 = $0;
 $99 = ((($98)) + 17|0);
 $100 = HEAPU8[$99>>0]|(HEAPU8[$99+1>>0]<<8)|(HEAPU8[$99+2>>0]<<16)|(HEAPU8[$99+3>>0]<<24);
 $101 = ((($100)) + 31|0);
 $102 = HEAPU8[$101>>0]|(HEAPU8[$101+1>>0]<<8)|(HEAPU8[$101+2>>0]<<16)|(HEAPU8[$101+3>>0]<<24);
 $103 = (($97) + ($102))|0;
 $104 = ($91|0)>($103|0);
 if (!($104)) {
  $118 = $result;
  STACKTOP = sp;return ($118|0);
 }
 $105 = $0;
 $result = $105;
 $118 = $result;
 STACKTOP = sp;return ($118|0);
}
function __move_dict_it_next($it) {
 $it = $it|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0;
 var $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $it;
 $result = 0;
 $1 = $0;
 $2 = ($1|0)!=(0|0);
 if (!($2)) {
  $119 = $result;
  STACKTOP = sp;return ($119|0);
 }
 $3 = $0;
 $4 = ((($3)) + 17|0);
 $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
 $6 = ($5|0)!=(0|0);
 if (!($6)) {
  $119 = $result;
  STACKTOP = sp;return ($119|0);
 }
 $7 = $0;
 $8 = ((($7)) + 17|0);
 $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
 $10 = ((($9)) + 19|0);
 $11 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
 $12 = ($11|0)!=(0|0);
 if (!($12)) {
  $119 = $result;
  STACKTOP = sp;return ($119|0);
 }
 $13 = $0;
 $14 = ((($13)) + 26|0);
 $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
 $16 = ($15|0)!=(0|0);
 if (!($16)) {
  $119 = $result;
  STACKTOP = sp;return ($119|0);
 }
 $17 = $0;
 $18 = ((($17)) + 17|0);
 $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
 $20 = ((($19)) + 17|0);
 $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8);
 $22 = ($21<<16>>16)!=(0);
 if (!($22)) {
  $119 = $result;
  STACKTOP = sp;return ($119|0);
 }
 $23 = $0;
 $24 = ((($23)) + 26|0);
 $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
 $26 = ($25|0)!=(0|0);
 if ($26) {
  $27 = $0;
  $28 = ((($27)) + 26|0);
  $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
  $30 = ($29|0)!=((-1)|0);
  if ($30) {
   $31 = $0;
   $32 = ((($31)) + 26|0);
   $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
   $34 = ((($33)) + 8|0);
   $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
   $36 = $0;
   $37 = ((($36)) + 26|0);
   HEAP8[$37>>0]=$35&255;HEAP8[$37+1>>0]=($35>>8)&255;HEAP8[$37+2>>0]=($35>>16)&255;HEAP8[$37+3>>0]=$35>>24;
   $38 = $0;
   $39 = ((($38)) + 26|0);
   $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8)|(HEAPU8[$39+2>>0]<<16)|(HEAPU8[$39+3>>0]<<24);
   $41 = ($40|0)!=(0|0);
   if (!($41)) {
    $42 = $0;
    $43 = ((($42)) + 22|0);
    $44 = HEAPU8[$43>>0]|(HEAPU8[$43+1>>0]<<8)|(HEAPU8[$43+2>>0]<<16)|(HEAPU8[$43+3>>0]<<24);
    $45 = (($44) + 1)|0;
    HEAP8[$43>>0]=$45&255;HEAP8[$43+1>>0]=($45>>8)&255;HEAP8[$43+2>>0]=($45>>16)&255;HEAP8[$43+3>>0]=$45>>24;
   }
  }
 }
 $46 = $0;
 $47 = ((($46)) + 26|0);
 $48 = HEAPU8[$47>>0]|(HEAPU8[$47+1>>0]<<8)|(HEAPU8[$47+2>>0]<<16)|(HEAPU8[$47+3>>0]<<24);
 $49 = ($48|0)!=(0|0);
 if ($49) {
  $50 = $0;
  $51 = ((($50)) + 26|0);
  $52 = HEAPU8[$51>>0]|(HEAPU8[$51+1>>0]<<8)|(HEAPU8[$51+2>>0]<<16)|(HEAPU8[$51+3>>0]<<24);
  $53 = ($52|0)==((-1)|0);
  if ($53) {
   label = 12;
  }
 } else {
  label = 12;
 }
 L23: do {
  if ((label|0) == 12) {
   $54 = $0;
   $55 = ((($54)) + 17|0);
   $56 = HEAPU8[$55>>0]|(HEAPU8[$55+1>>0]<<8)|(HEAPU8[$55+2>>0]<<16)|(HEAPU8[$55+3>>0]<<24);
   $57 = ((($56)) + 19|0);
   $58 = HEAPU8[$57>>0]|(HEAPU8[$57+1>>0]<<8)|(HEAPU8[$57+2>>0]<<16)|(HEAPU8[$57+3>>0]<<24);
   $59 = ((($58)) + 20|0);
   $60 = HEAPU8[$59>>0]|(HEAPU8[$59+1>>0]<<8)|(HEAPU8[$59+2>>0]<<16)|(HEAPU8[$59+3>>0]<<24);
   $61 = ($60|0)!=(0|0);
   if (!($61)) {
    $119 = $result;
    STACKTOP = sp;return ($119|0);
   }
   while(1) {
    $62 = $0;
    $63 = ((($62)) + 22|0);
    $64 = HEAPU8[$63>>0]|(HEAPU8[$63+1>>0]<<8)|(HEAPU8[$63+2>>0]<<16)|(HEAPU8[$63+3>>0]<<24);
    $65 = $0;
    $66 = ((($65)) + 17|0);
    $67 = HEAPU8[$66>>0]|(HEAPU8[$66+1>>0]<<8)|(HEAPU8[$66+2>>0]<<16)|(HEAPU8[$66+3>>0]<<24);
    $68 = ((($67)) + 19|0);
    $69 = HEAPU8[$68>>0]|(HEAPU8[$68+1>>0]<<8)|(HEAPU8[$68+2>>0]<<16)|(HEAPU8[$68+3>>0]<<24);
    $70 = ((($69)) + 12|0);
    $71 = HEAPU8[$70>>0]|(HEAPU8[$70+1>>0]<<8)|(HEAPU8[$70+2>>0]<<16)|(HEAPU8[$70+3>>0]<<24);
    $72 = ($64>>>0)<($71>>>0);
    if (!($72)) {
     break L23;
    }
    $73 = $0;
    $74 = ((($73)) + 22|0);
    $75 = HEAPU8[$74>>0]|(HEAPU8[$74+1>>0]<<8)|(HEAPU8[$74+2>>0]<<16)|(HEAPU8[$74+3>>0]<<24);
    $76 = $0;
    $77 = ((($76)) + 17|0);
    $78 = HEAPU8[$77>>0]|(HEAPU8[$77+1>>0]<<8)|(HEAPU8[$77+2>>0]<<16)|(HEAPU8[$77+3>>0]<<24);
    $79 = ((($78)) + 19|0);
    $80 = HEAPU8[$79>>0]|(HEAPU8[$79+1>>0]<<8)|(HEAPU8[$79+2>>0]<<16)|(HEAPU8[$79+3>>0]<<24);
    $81 = ((($80)) + 20|0);
    $82 = HEAPU8[$81>>0]|(HEAPU8[$81+1>>0]<<8)|(HEAPU8[$81+2>>0]<<16)|(HEAPU8[$81+3>>0]<<24);
    $83 = (($82) + ($75<<2)|0);
    $84 = HEAP32[$83>>2]|0;
    $85 = $0;
    $86 = ((($85)) + 26|0);
    HEAP8[$86>>0]=$84&255;HEAP8[$86+1>>0]=($84>>8)&255;HEAP8[$86+2>>0]=($84>>16)&255;HEAP8[$86+3>>0]=$84>>24;
    $87 = $0;
    $88 = ((($87)) + 26|0);
    $89 = HEAPU8[$88>>0]|(HEAPU8[$88+1>>0]<<8)|(HEAPU8[$88+2>>0]<<16)|(HEAPU8[$88+3>>0]<<24);
    $90 = ($89|0)!=(0|0);
    if ($90) {
     $91 = $0;
     $92 = ((($91)) + 26|0);
     $93 = HEAPU8[$92>>0]|(HEAPU8[$92+1>>0]<<8)|(HEAPU8[$92+2>>0]<<16)|(HEAPU8[$92+3>>0]<<24);
     $94 = ((($93)) + 8|0);
     $95 = HEAPU8[$94>>0]|(HEAPU8[$94+1>>0]<<8)|(HEAPU8[$94+2>>0]<<16)|(HEAPU8[$94+3>>0]<<24);
     $96 = ($95|0)!=(0|0);
     if ($96) {
      break;
     }
    }
    $104 = $0;
    $105 = ((($104)) + 22|0);
    $106 = HEAPU8[$105>>0]|(HEAPU8[$105+1>>0]<<8)|(HEAPU8[$105+2>>0]<<16)|(HEAPU8[$105+3>>0]<<24);
    $107 = (($106) + 1)|0;
    HEAP8[$105>>0]=$107&255;HEAP8[$105+1>>0]=($107>>8)&255;HEAP8[$105+2>>0]=($107>>16)&255;HEAP8[$105+3>>0]=$107>>24;
   }
   $97 = $0;
   $98 = ((($97)) + 26|0);
   $99 = HEAPU8[$98>>0]|(HEAPU8[$98+1>>0]<<8)|(HEAPU8[$98+2>>0]<<16)|(HEAPU8[$98+3>>0]<<24);
   $100 = ((($99)) + 8|0);
   $101 = HEAPU8[$100>>0]|(HEAPU8[$100+1>>0]<<8)|(HEAPU8[$100+2>>0]<<16)|(HEAPU8[$100+3>>0]<<24);
   $102 = $0;
   $103 = ((($102)) + 26|0);
   HEAP8[$103>>0]=$101&255;HEAP8[$103+1>>0]=($101>>8)&255;HEAP8[$103+2>>0]=($101>>16)&255;HEAP8[$103+3>>0]=$101>>24;
  }
 } while(0);
 $108 = $0;
 $109 = ((($108)) + 26|0);
 $110 = HEAPU8[$109>>0]|(HEAPU8[$109+1>>0]<<8)|(HEAPU8[$109+2>>0]<<16)|(HEAPU8[$109+3>>0]<<24);
 $111 = ($110|0)!=(0|0);
 if (!($111)) {
  $119 = $result;
  STACKTOP = sp;return ($119|0);
 }
 $112 = $0;
 $113 = ((($112)) + 26|0);
 $114 = HEAPU8[$113>>0]|(HEAPU8[$113+1>>0]<<8)|(HEAPU8[$113+2>>0]<<16)|(HEAPU8[$113+3>>0]<<24);
 $115 = ((($114)) + 12|0);
 $116 = HEAPU8[$115>>0]|(HEAPU8[$115+1>>0]<<8)|(HEAPU8[$115+2>>0]<<16)|(HEAPU8[$115+3>>0]<<24);
 $117 = ($116|0)!=(0|0);
 if (!($117)) {
  $119 = $result;
  STACKTOP = sp;return ($119|0);
 }
 $118 = $0;
 $result = $118;
 $119 = $result;
 STACKTOP = sp;return ($119|0);
}
function __invalid_list_it($it) {
 $it = $it|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $it;
 $2 = $1;
 $3 = ($2|0)!=(0|0);
 if (!($3)) {
  $0 = 0;
  $20 = $0;
  STACKTOP = sp;return ($20|0);
 }
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 if ($5) {
  $6 = $1;
  $7 = ((($6)) + 17|0);
  $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
  $9 = ($8|0)!=(0|0);
  if ($9) {
   $10 = $1;
   $11 = ((($10)) + 17|0);
   $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
   $13 = ((($12)) + 17|0);
   $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8);
   $15 = $14 << 16 >> 16;
   $16 = ($15|0)<=(0);
   $18 = $16;
  } else {
   $18 = 0;
  }
 } else {
  $18 = 0;
 }
 $17 = $18&1;
 $19 = $17&255;
 $0 = $19;
 $20 = $0;
 STACKTOP = sp;return ($20|0);
}
function __invalid_dict_it($it) {
 $it = $it|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $it;
 $2 = $1;
 $3 = ($2|0)!=(0|0);
 if (!($3)) {
  $0 = 0;
  $20 = $0;
  STACKTOP = sp;return ($20|0);
 }
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 if ($5) {
  $6 = $1;
  $7 = ((($6)) + 17|0);
  $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
  $9 = ($8|0)!=(0|0);
  if ($9) {
   $10 = $1;
   $11 = ((($10)) + 17|0);
   $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
   $13 = ((($12)) + 17|0);
   $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8);
   $15 = $14 << 16 >> 16;
   $16 = ($15|0)<=(0);
   $18 = $16;
  } else {
   $18 = 0;
  }
 } else {
  $18 = 0;
 }
 $17 = $18&1;
 $19 = $17&255;
 $0 = $19;
 $20 = $0;
 STACKTOP = sp;return ($20|0);
}
function __ht_remove($ht,$key,$cmp) {
 $ht = $ht|0;
 $key = $key|0;
 $cmp = $cmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $bucket = 0, $hash_code = 0, $or$cond = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $ht;
 $1 = $key;
 $2 = $cmp;
 $result = 0;
 $hash_code = 0;
 $bucket = 0;
 $3 = $0;
 $4 = ($3|0)!=(0|0);
 $5 = $1;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if (!($or$cond)) {
  ___assert_fail((6295|0),(4322|0),3086,(6305|0));
  // unreachable;
 }
 $7 = $2;
 $8 = ($7|0)!=(0|0);
 if (!($8)) {
  $2 = 158;
 }
 $9 = $0;
 $10 = $1;
 $11 = (__ht_find($9,$10)|0);
 $bucket = $11;
 $12 = $0;
 $13 = ((($12)) + 8|0);
 $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
 $15 = $0;
 $16 = $1;
 $17 = (FUNCTION_TABLE_iii[$14 & 255]($15,$16)|0);
 $hash_code = $17;
 $18 = $0;
 $19 = ((($18)) + 20|0);
 $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8)|(HEAPU8[$19+2>>0]<<16)|(HEAPU8[$19+3>>0]<<24);
 $21 = ($20|0)!=(0|0);
 if (!($21)) {
  $46 = $result;
  STACKTOP = sp;return ($46|0);
 }
 $22 = $hash_code;
 $23 = $0;
 $24 = ((($23)) + 20|0);
 $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
 $26 = (($25) + ($22<<2)|0);
 $27 = HEAP32[$26>>2]|0;
 $28 = ($27|0)!=(0|0);
 if (!($28)) {
  $46 = $result;
  STACKTOP = sp;return ($46|0);
 }
 $29 = $hash_code;
 $30 = $0;
 $31 = ((($30)) + 20|0);
 $32 = HEAPU8[$31>>0]|(HEAPU8[$31+1>>0]<<8)|(HEAPU8[$31+2>>0]<<16)|(HEAPU8[$31+3>>0]<<24);
 $33 = (($32) + ($29<<2)|0);
 $34 = HEAP32[$33>>2]|0;
 $bucket = $34;
 $35 = $bucket;
 $36 = $1;
 $37 = $2;
 $38 = $0;
 $39 = HEAPU8[$38>>0]|(HEAPU8[$38+1>>0]<<8)|(HEAPU8[$38+2>>0]<<16)|(HEAPU8[$38+3>>0]<<24);
 $40 = (__ls_try_remove($35,$36,$37,$39)|0);
 $result = $40;
 $41 = $result;
 $42 = $0;
 $43 = ((($42)) + 16|0);
 $44 = HEAPU8[$43>>0]|(HEAPU8[$43+1>>0]<<8)|(HEAPU8[$43+2>>0]<<16)|(HEAPU8[$43+3>>0]<<24);
 $45 = (($44) - ($41))|0;
 HEAP8[$43>>0]=$45&255;HEAP8[$43+1>>0]=($45>>8)&255;HEAP8[$43+2>>0]=($45>>16)&255;HEAP8[$43+3>>0]=$45>>24;
 $46 = $result;
 STACKTOP = sp;return ($46|0);
}
function __ls_cmp_extra($node,$info) {
 $node = $node|0;
 $info = $info|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $n = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $node;
 $1 = $info;
 $2 = $0;
 $n = $2;
 $3 = $n;
 $4 = ((($3)) + 12|0);
 $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
 $6 = $1;
 $7 = ($5|0)==($6|0);
 $8 = $7 ? 0 : 1;
 STACKTOP = sp;return ($8|0);
}
function __skip_if_chunk($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $ast = 0, $mask = 0, $nested = 0, $obj = 0, $or$cond = 0, $or$cond3 = 0, $or$cond5 = 0, $result = 0, $tmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ast = sp + 16|0;
 $0 = $s;
 $1 = $l;
 $result = 0;
 HEAP32[$ast>>2] = 0;
 $tmp = 0;
 $obj = 0;
 $nested = 0;
 $mask = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),11660,(6415|0));
  // unreachable;
 }
 $6 = $1;
 $7 = HEAP32[$6>>2]|0;
 HEAP32[$ast>>2] = $7;
 $8 = HEAP32[$ast>>2]|0;
 $9 = ($8|0)!=(0|0);
 if ($9) {
 }
 $10 = HEAP32[$ast>>2]|0;
 $11 = ($10|0)!=(0|0);
 if (!($11)) {
  ___assert_fail((6430|0),(4322|0),11663,(6415|0));
  // unreachable;
 }
 $12 = HEAP32[$ast>>2]|0;
 $13 = ((($12)) + 4|0);
 $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
 $15 = ($14|0)!=(0|0);
 if (!($15)) {
  ___assert_fail((6430|0),(4322|0),11663,(6415|0));
  // unreachable;
 }
 L13: while(1) {
  $16 = HEAP32[$ast>>2]|0;
  $17 = ($16|0)!=(0|0);
  if (!($17)) {
   label = 10;
   break;
  }
  $56 = HEAP32[$ast>>2]|0;
  $tmp = $56;
  $57 = HEAP32[$ast>>2]|0;
  $58 = HEAPU8[$57>>0]|(HEAPU8[$57+1>>0]<<8)|(HEAPU8[$57+2>>0]<<16)|(HEAPU8[$57+3>>0]<<24);
  $obj = $58;
  $59 = HEAP32[$ast>>2]|0;
  $60 = $1;
  HEAP32[$60>>2] = $59;
  $61 = HEAP32[$ast>>2]|0;
  $62 = ((($61)) + 8|0);
  $63 = HEAPU8[$62>>0]|(HEAPU8[$62+1>>0]<<8)|(HEAPU8[$62+2>>0]<<16)|(HEAPU8[$62+3>>0]<<24);
  HEAP32[$ast>>2] = $63;
  $64 = HEAP32[$ast>>2]|0;
  $65 = ($64|0)!=(0|0);
  if ($65) {
   $66 = HEAP32[$ast>>2]|0;
   $67 = HEAPU8[$66>>0]|(HEAPU8[$66+1>>0]<<8)|(HEAPU8[$66+2>>0]<<16)|(HEAPU8[$66+3>>0]<<24);
   $68 = HEAPU8[$67>>0]|(HEAPU8[$67+1>>0]<<8)|(HEAPU8[$67+2>>0]<<16)|(HEAPU8[$67+3>>0]<<24);
   $69 = ($68|0)==(8);
   if ($69) {
    $70 = HEAP32[$ast>>2]|0;
    $71 = HEAPU8[$70>>0]|(HEAPU8[$70+1>>0]<<8)|(HEAPU8[$70+2>>0]<<16)|(HEAPU8[$70+3>>0]<<24);
    $72 = ((($71)) + 4|0);
    $73 = HEAPU8[$72>>0]|(HEAPU8[$72+1>>0]<<8)|(HEAPU8[$72+2>>0]<<16)|(HEAPU8[$72+3>>0]<<24);
    $74 = ((($73)) + 4|0);
    $75 = HEAPU8[$74>>0]|(HEAPU8[$74+1>>0]<<8)|(HEAPU8[$74+2>>0]<<16)|(HEAPU8[$74+3>>0]<<24);
    $76 = ($75|0)==(23|0);
    if ($76) {
     $77 = (__skip_single_line_struct($ast,24)|0);
     $78 = ($77<<24>>24)!=(0);
     if (!($78)) {
      $79 = $nested;
      $80 = (($79) + 1)|0;
      $nested = $80;
      $81 = ($80>>>0)>(32);
      if ($81) {
       label = 22;
       break;
      }
     }
    } else {
     label = 29;
    }
   } else {
    label = 29;
   }
  } else {
   label = 29;
  }
  do {
   if ((label|0) == 29) {
    label = 0;
    $120 = HEAP32[$ast>>2]|0;
    $121 = ($120|0)!=(0|0);
    $122 = $nested;
    $123 = ($122|0)!=(0);
    $or$cond3 = $121 & $123;
    if ($or$cond3) {
     $124 = HEAP32[$ast>>2]|0;
     $125 = HEAPU8[$124>>0]|(HEAPU8[$124+1>>0]<<8)|(HEAPU8[$124+2>>0]<<16)|(HEAPU8[$124+3>>0]<<24);
     $126 = HEAPU8[$125>>0]|(HEAPU8[$125+1>>0]<<8)|(HEAPU8[$125+2>>0]<<16)|(HEAPU8[$125+3>>0]<<24);
     $127 = ($126|0)==(8);
     if ($127) {
      $128 = HEAP32[$ast>>2]|0;
      $129 = HEAPU8[$128>>0]|(HEAPU8[$128+1>>0]<<8)|(HEAPU8[$128+2>>0]<<16)|(HEAPU8[$128+3>>0]<<24);
      $130 = ((($129)) + 4|0);
      $131 = HEAPU8[$130>>0]|(HEAPU8[$130+1>>0]<<8)|(HEAPU8[$130+2>>0]<<16)|(HEAPU8[$130+3>>0]<<24);
      $132 = ((($131)) + 4|0);
      $133 = HEAPU8[$132>>0]|(HEAPU8[$132+1>>0]<<8)|(HEAPU8[$132+2>>0]<<16)|(HEAPU8[$132+3>>0]<<24);
      $134 = ($133|0)==(24|0);
      if ($134) {
       $135 = HEAP32[$ast>>2]|0;
       $136 = ($135|0)!=(0|0);
       if ($136) {
        $137 = HEAP32[$ast>>2]|0;
        $138 = ((($137)) + 8|0);
        $139 = HEAPU8[$138>>0]|(HEAPU8[$138+1>>0]<<8)|(HEAPU8[$138+2>>0]<<16)|(HEAPU8[$138+3>>0]<<24);
        $140 = ($139|0)!=(0|0);
        if ($140) {
         $141 = HEAP32[$ast>>2]|0;
         $142 = ((($141)) + 8|0);
         $143 = HEAPU8[$142>>0]|(HEAPU8[$142+1>>0]<<8)|(HEAPU8[$142+2>>0]<<16)|(HEAPU8[$142+3>>0]<<24);
         $144 = HEAPU8[$143>>0]|(HEAPU8[$143+1>>0]<<8)|(HEAPU8[$143+2>>0]<<16)|(HEAPU8[$143+3>>0]<<24);
         $145 = ($144|0)!=(0|0);
         if ($145) {
          $146 = HEAP32[$ast>>2]|0;
          $147 = ((($146)) + 8|0);
          $148 = HEAPU8[$147>>0]|(HEAPU8[$147+1>>0]<<8)|(HEAPU8[$147+2>>0]<<16)|(HEAPU8[$147+3>>0]<<24);
          $149 = HEAPU8[$148>>0]|(HEAPU8[$148+1>>0]<<8)|(HEAPU8[$148+2>>0]<<16)|(HEAPU8[$148+3>>0]<<24);
          $150 = HEAPU8[$149>>0]|(HEAPU8[$149+1>>0]<<8)|(HEAPU8[$149+2>>0]<<16)|(HEAPU8[$149+3>>0]<<24);
          $151 = ($150|0)==(22);
          if ($151) {
           break;
          }
         }
        }
       }
       $152 = $nested;
       $153 = (($152) - 1)|0;
       $154 = 1 << $153;
       $155 = $mask;
       $156 = $155 | $154;
       $mask = $156;
       break;
      }
     }
    }
    $157 = HEAP32[$ast>>2]|0;
    $158 = ($157|0)!=(0|0);
    $159 = $nested;
    $160 = ($159|0)!=(0);
    $or$cond5 = $158 & $160;
    if ($or$cond5) {
     $161 = $mask;
     $162 = $nested;
     $163 = (($162) - 1)|0;
     $164 = 1 << $163;
     $165 = $161 & $164;
     $166 = ($165|0)!=(0);
     if ($166) {
      $167 = HEAP32[$ast>>2]|0;
      $168 = HEAPU8[$167>>0]|(HEAPU8[$167+1>>0]<<8)|(HEAPU8[$167+2>>0]<<16)|(HEAPU8[$167+3>>0]<<24);
      $169 = ($168|0)!=(0|0);
      if ($169) {
       $170 = HEAP32[$ast>>2]|0;
       $171 = HEAPU8[$170>>0]|(HEAPU8[$170+1>>0]<<8)|(HEAPU8[$170+2>>0]<<16)|(HEAPU8[$170+3>>0]<<24);
       $172 = HEAPU8[$171>>0]|(HEAPU8[$171+1>>0]<<8)|(HEAPU8[$171+2>>0]<<16)|(HEAPU8[$171+3>>0]<<24);
       $173 = ($172|0)==(22);
       if (!($173)) {
        label = 41;
       }
      } else {
       label = 41;
      }
     } else {
      label = 41;
     }
     if ((label|0) == 41) {
      label = 0;
      $174 = $mask;
      $175 = $nested;
      $176 = (($175) - 1)|0;
      $177 = 1 << $176;
      $178 = $174 & $177;
      $179 = ($178|0)!=(0);
      if ($179) {
       break;
      }
      $180 = HEAP32[$ast>>2]|0;
      $181 = HEAPU8[$180>>0]|(HEAPU8[$180+1>>0]<<8)|(HEAPU8[$180+2>>0]<<16)|(HEAPU8[$180+3>>0]<<24);
      $182 = HEAPU8[$181>>0]|(HEAPU8[$181+1>>0]<<8)|(HEAPU8[$181+2>>0]<<16)|(HEAPU8[$181+3>>0]<<24);
      $183 = ($182|0)==(8);
      if (!($183)) {
       break;
      }
      $184 = HEAP32[$ast>>2]|0;
      $185 = HEAPU8[$184>>0]|(HEAPU8[$184+1>>0]<<8)|(HEAPU8[$184+2>>0]<<16)|(HEAPU8[$184+3>>0]<<24);
      $186 = ((($185)) + 4|0);
      $187 = HEAPU8[$186>>0]|(HEAPU8[$186+1>>0]<<8)|(HEAPU8[$186+2>>0]<<16)|(HEAPU8[$186+3>>0]<<24);
      $188 = ((($187)) + 4|0);
      $189 = HEAPU8[$188>>0]|(HEAPU8[$188+1>>0]<<8)|(HEAPU8[$188+2>>0]<<16)|(HEAPU8[$188+3>>0]<<24);
      $190 = ($189|0)==(27|0);
      if (!($190)) {
       break;
      }
     }
     $191 = $nested;
     $192 = (($191) + -1)|0;
     $nested = $192;
     $193 = ($192|0)<(0);
     if ($193) {
      label = 45;
      break L13;
     }
     $232 = HEAP32[$ast>>2]|0;
     $233 = ((($232)) + 8|0);
     $234 = HEAPU8[$233>>0]|(HEAPU8[$233+1>>0]<<8)|(HEAPU8[$233+2>>0]<<16)|(HEAPU8[$233+3>>0]<<24);
     HEAP32[$ast>>2] = $234;
    }
   }
  } while(0);
  $235 = $nested;
  $236 = ($235|0)!=(0);
  if ($236) {
   continue;
  }
  $237 = $obj;
  $238 = HEAPU8[$237>>0]|(HEAPU8[$237+1>>0]<<8)|(HEAPU8[$237+2>>0]<<16)|(HEAPU8[$237+3>>0]<<24);
  $239 = ($238|0)==(8);
  if ($239) {
   $240 = $obj;
   $241 = ((($240)) + 4|0);
   $242 = HEAPU8[$241>>0]|(HEAPU8[$241+1>>0]<<8)|(HEAPU8[$241+2>>0]<<16)|(HEAPU8[$241+3>>0]<<24);
   $243 = ((($242)) + 4|0);
   $244 = HEAPU8[$243>>0]|(HEAPU8[$243+1>>0]<<8)|(HEAPU8[$243+2>>0]<<16)|(HEAPU8[$243+3>>0]<<24);
   $245 = ($244|0)==(25|0);
   if ($245) {
    label = 61;
    break;
   }
  }
  $246 = $obj;
  $247 = HEAPU8[$246>>0]|(HEAPU8[$246+1>>0]<<8)|(HEAPU8[$246+2>>0]<<16)|(HEAPU8[$246+3>>0]<<24);
  $248 = ($247|0)==(8);
  if ($248) {
   $249 = $obj;
   $250 = ((($249)) + 4|0);
   $251 = HEAPU8[$250>>0]|(HEAPU8[$250+1>>0]<<8)|(HEAPU8[$250+2>>0]<<16)|(HEAPU8[$250+3>>0]<<24);
   $252 = ((($251)) + 4|0);
   $253 = HEAPU8[$252>>0]|(HEAPU8[$252+1>>0]<<8)|(HEAPU8[$252+2>>0]<<16)|(HEAPU8[$252+3>>0]<<24);
   $254 = ($253|0)==(26|0);
   if ($254) {
    label = 61;
    break;
   }
  }
  $255 = $obj;
  $256 = HEAPU8[$255>>0]|(HEAPU8[$255+1>>0]<<8)|(HEAPU8[$255+2>>0]<<16)|(HEAPU8[$255+3>>0]<<24);
  $257 = ($256|0)==(8);
  if ($257) {
   $258 = $obj;
   $259 = ((($258)) + 4|0);
   $260 = HEAPU8[$259>>0]|(HEAPU8[$259+1>>0]<<8)|(HEAPU8[$259+2>>0]<<16)|(HEAPU8[$259+3>>0]<<24);
   $261 = ((($260)) + 4|0);
   $262 = HEAPU8[$261>>0]|(HEAPU8[$261+1>>0]<<8)|(HEAPU8[$261+2>>0]<<16)|(HEAPU8[$261+3>>0]<<24);
   $263 = ($262|0)==(27|0);
   $265 = $263;
  } else {
   $265 = 0;
  }
  $264 = $265 ^ 1;
  if (!($264)) {
   label = 61;
   break;
  }
 }
 if ((label|0) == 10) {
  $18 = $1;
  $19 = ($18|0)!=(0|0);
  if ($19) {
   $20 = $1;
   $21 = HEAP32[$20>>2]|0;
   $22 = ($21|0)!=(0|0);
   if ($22) {
    $23 = $1;
    $24 = HEAP32[$23>>2]|0;
    $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
    $26 = ($25|0)!=(0|0);
    if ($26) {
     $27 = $0;
     $28 = $0;
     $29 = ((($28)) + 67|0);
     $30 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8)|(HEAPU8[$29+2>>0]<<16)|(HEAPU8[$29+3>>0]<<24);
     $31 = (__set_current_error($27,11,$30)|0);
     $32 = ($31<<24>>24)!=(0);
     if (!($32)) {
      $266 = $result;
      STACKTOP = sp;return ($266|0);
     }
     $33 = $0;
     $34 = $1;
     $35 = HEAP32[$34>>2]|0;
     $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
     $37 = ((($36)) + 9|0);
     $38 = HEAPU8[$37>>0]|(HEAPU8[$37+1>>0]<<8)|(HEAPU8[$37+2>>0]<<16)|(HEAPU8[$37+3>>0]<<24);
     $39 = $1;
     $40 = HEAP32[$39>>2]|0;
     $41 = HEAPU8[$40>>0]|(HEAPU8[$40+1>>0]<<8)|(HEAPU8[$40+2>>0]<<16)|(HEAPU8[$40+3>>0]<<24);
     $42 = ((($41)) + 13|0);
     $43 = HEAPU8[$42>>0]|(HEAPU8[$42+1>>0]<<8);
     $44 = $1;
     $45 = HEAP32[$44>>2]|0;
     $46 = HEAPU8[$45>>0]|(HEAPU8[$45+1>>0]<<8)|(HEAPU8[$45+2>>0]<<16)|(HEAPU8[$45+3>>0]<<24);
     $47 = ((($46)) + 15|0);
     $48 = HEAPU8[$47>>0]|(HEAPU8[$47+1>>0]<<8);
     __set_error_pos($33,$38,$43,$48);
     $result = 3;
     $266 = $result;
     STACKTOP = sp;return ($266|0);
    }
   }
  }
  $49 = $0;
  $50 = $0;
  $51 = ((($50)) + 67|0);
  $52 = HEAPU8[$51>>0]|(HEAPU8[$51+1>>0]<<8)|(HEAPU8[$51+2>>0]<<16)|(HEAPU8[$51+3>>0]<<24);
  $53 = (__set_current_error($49,11,$52)|0);
  $54 = ($53<<24>>24)!=(0);
  if (!($54)) {
   $266 = $result;
   STACKTOP = sp;return ($266|0);
  }
  $55 = $0;
  __set_error_pos($55,0,0,0);
  $result = 3;
  $266 = $result;
  STACKTOP = sp;return ($266|0);
 }
 else if ((label|0) == 22) {
  $82 = $1;
  $83 = ($82|0)!=(0|0);
  if ($83) {
   $84 = $1;
   $85 = HEAP32[$84>>2]|0;
   $86 = ($85|0)!=(0|0);
   if ($86) {
    $87 = $1;
    $88 = HEAP32[$87>>2]|0;
    $89 = HEAPU8[$88>>0]|(HEAPU8[$88+1>>0]<<8)|(HEAPU8[$88+2>>0]<<16)|(HEAPU8[$88+3>>0]<<24);
    $90 = ($89|0)!=(0|0);
    if ($90) {
     $91 = $0;
     $92 = $0;
     $93 = ((($92)) + 67|0);
     $94 = HEAPU8[$93>>0]|(HEAPU8[$93+1>>0]<<8)|(HEAPU8[$93+2>>0]<<16)|(HEAPU8[$93+3>>0]<<24);
     $95 = (__set_current_error($91,35,$94)|0);
     $96 = ($95<<24>>24)!=(0);
     if (!($96)) {
      $266 = $result;
      STACKTOP = sp;return ($266|0);
     }
     $97 = $0;
     $98 = $1;
     $99 = HEAP32[$98>>2]|0;
     $100 = HEAPU8[$99>>0]|(HEAPU8[$99+1>>0]<<8)|(HEAPU8[$99+2>>0]<<16)|(HEAPU8[$99+3>>0]<<24);
     $101 = ((($100)) + 9|0);
     $102 = HEAPU8[$101>>0]|(HEAPU8[$101+1>>0]<<8)|(HEAPU8[$101+2>>0]<<16)|(HEAPU8[$101+3>>0]<<24);
     $103 = $1;
     $104 = HEAP32[$103>>2]|0;
     $105 = HEAPU8[$104>>0]|(HEAPU8[$104+1>>0]<<8)|(HEAPU8[$104+2>>0]<<16)|(HEAPU8[$104+3>>0]<<24);
     $106 = ((($105)) + 13|0);
     $107 = HEAPU8[$106>>0]|(HEAPU8[$106+1>>0]<<8);
     $108 = $1;
     $109 = HEAP32[$108>>2]|0;
     $110 = HEAPU8[$109>>0]|(HEAPU8[$109+1>>0]<<8)|(HEAPU8[$109+2>>0]<<16)|(HEAPU8[$109+3>>0]<<24);
     $111 = ((($110)) + 15|0);
     $112 = HEAPU8[$111>>0]|(HEAPU8[$111+1>>0]<<8);
     __set_error_pos($97,$102,$107,$112);
     $result = 3;
     $266 = $result;
     STACKTOP = sp;return ($266|0);
    }
   }
  }
  $113 = $0;
  $114 = $0;
  $115 = ((($114)) + 67|0);
  $116 = HEAPU8[$115>>0]|(HEAPU8[$115+1>>0]<<8)|(HEAPU8[$115+2>>0]<<16)|(HEAPU8[$115+3>>0]<<24);
  $117 = (__set_current_error($113,35,$116)|0);
  $118 = ($117<<24>>24)!=(0);
  if (!($118)) {
   $266 = $result;
   STACKTOP = sp;return ($266|0);
  }
  $119 = $0;
  __set_error_pos($119,0,0,0);
  $result = 3;
  $266 = $result;
  STACKTOP = sp;return ($266|0);
 }
 else if ((label|0) == 45) {
  $194 = $1;
  $195 = ($194|0)!=(0|0);
  if ($195) {
   $196 = $1;
   $197 = HEAP32[$196>>2]|0;
   $198 = ($197|0)!=(0|0);
   if ($198) {
    $199 = $1;
    $200 = HEAP32[$199>>2]|0;
    $201 = HEAPU8[$200>>0]|(HEAPU8[$200+1>>0]<<8)|(HEAPU8[$200+2>>0]<<16)|(HEAPU8[$200+3>>0]<<24);
    $202 = ($201|0)!=(0|0);
    if ($202) {
     $203 = $0;
     $204 = $0;
     $205 = ((($204)) + 67|0);
     $206 = HEAPU8[$205>>0]|(HEAPU8[$205+1>>0]<<8)|(HEAPU8[$205+2>>0]<<16)|(HEAPU8[$205+3>>0]<<24);
     $207 = (__set_current_error($203,27,$206)|0);
     $208 = ($207<<24>>24)!=(0);
     if (!($208)) {
      $266 = $result;
      STACKTOP = sp;return ($266|0);
     }
     $209 = $0;
     $210 = $1;
     $211 = HEAP32[$210>>2]|0;
     $212 = HEAPU8[$211>>0]|(HEAPU8[$211+1>>0]<<8)|(HEAPU8[$211+2>>0]<<16)|(HEAPU8[$211+3>>0]<<24);
     $213 = ((($212)) + 9|0);
     $214 = HEAPU8[$213>>0]|(HEAPU8[$213+1>>0]<<8)|(HEAPU8[$213+2>>0]<<16)|(HEAPU8[$213+3>>0]<<24);
     $215 = $1;
     $216 = HEAP32[$215>>2]|0;
     $217 = HEAPU8[$216>>0]|(HEAPU8[$216+1>>0]<<8)|(HEAPU8[$216+2>>0]<<16)|(HEAPU8[$216+3>>0]<<24);
     $218 = ((($217)) + 13|0);
     $219 = HEAPU8[$218>>0]|(HEAPU8[$218+1>>0]<<8);
     $220 = $1;
     $221 = HEAP32[$220>>2]|0;
     $222 = HEAPU8[$221>>0]|(HEAPU8[$221+1>>0]<<8)|(HEAPU8[$221+2>>0]<<16)|(HEAPU8[$221+3>>0]<<24);
     $223 = ((($222)) + 15|0);
     $224 = HEAPU8[$223>>0]|(HEAPU8[$223+1>>0]<<8);
     __set_error_pos($209,$214,$219,$224);
     $result = 3;
     $266 = $result;
     STACKTOP = sp;return ($266|0);
    }
   }
  }
  $225 = $0;
  $226 = $0;
  $227 = ((($226)) + 67|0);
  $228 = HEAPU8[$227>>0]|(HEAPU8[$227+1>>0]<<8)|(HEAPU8[$227+2>>0]<<16)|(HEAPU8[$227+3>>0]<<24);
  $229 = (__set_current_error($225,27,$228)|0);
  $230 = ($229<<24>>24)!=(0);
  if (!($230)) {
   $266 = $result;
   STACKTOP = sp;return ($266|0);
  }
  $231 = $0;
  __set_error_pos($231,0,0,0);
  $result = 3;
  $266 = $result;
  STACKTOP = sp;return ($266|0);
 }
 else if ((label|0) == 61) {
  $266 = $result;
  STACKTOP = sp;return ($266|0);
 }
 return (0)|0;
}
function __destroy_object_capsule_only($data,$extra) {
 $data = $data|0;
 $extra = $extra|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $obj = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $data;
 $1 = $extra;
 $result = -1;
 $obj = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 if (!($3)) {
  ___assert_fail((6381|0),(4322|0),10115,(6386|0));
  // unreachable;
 }
 $4 = $0;
 $obj = $4;
 $5 = $obj;
 $6 = ($5|0)!=(0|0);
 if ($6) {
  $7 = $obj;
  _mb_free($7);
  $obj = 0;
  $8 = $result;
  STACKTOP = sp;return ($8|0);
 } else {
  ___assert_fail((4369|0),(4322|0),10118,(6386|0));
  // unreachable;
 }
 return (0)|0;
}
function __append_uu_char_to_symbol($s,$str,$n) {
 $s = $s|0;
 $str = $str|0;
 $n = $n|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $context = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $str;
 $2 = $n;
 $result = 0;
 $context = 0;
 $3 = $0;
 $4 = ($3|0)!=(0|0);
 if (!($4)) {
  ___assert_fail((4803|0),(4322|0),5129,(8665|0));
  // unreachable;
 }
 $5 = $0;
 $6 = ((($5)) + 71|0);
 $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
 $context = $7;
 $8 = $context;
 $9 = ((($8)) + 134|0);
 $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
 $11 = $2;
 $12 = (($10) + ($11))|0;
 $13 = ($12|0)>=(128);
 if ($13) {
  $14 = $0;
  (__set_current_error($14,5,0)|0);
  $result = 3;
  $28 = $result;
  STACKTOP = sp;return ($28|0);
 } else {
  $15 = $context;
  $16 = ((($15)) + 134|0);
  $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
  $18 = $context;
  $19 = ((($18)) + 5|0);
  $20 = (($19) + ($17)|0);
  $21 = $1;
  $22 = $2;
  _memcpy(($20|0),($21|0),($22|0))|0;
  $23 = $2;
  $24 = $context;
  $25 = ((($24)) + 134|0);
  $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
  $27 = (($26) + ($23))|0;
  HEAP8[$25>>0]=$27&255;HEAP8[$25+1>>0]=($27>>8)&255;HEAP8[$25+2>>0]=($27>>16)&255;HEAP8[$25+3>>0]=$27>>24;
  $28 = $result;
  STACKTOP = sp;return ($28|0);
 }
 return (0)|0;
}
function __cut_symbol($s,$pos,$row,$col) {
 $s = $s|0;
 $pos = $pos|0;
 $row = $row|0;
 $col = $col|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $context = 0, $delsym = 0, $result = 0, $sym = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $delsym = sp + 24|0;
 $0 = $s;
 $1 = $pos;
 $2 = $row;
 $3 = $col;
 $result = 0;
 $context = 0;
 $sym = 0;
 HEAP8[$delsym>>0] = 0;
 $4 = $0;
 $5 = ($4|0)!=(0|0);
 if (!($5)) {
  ___assert_fail((4803|0),(4322|0),5153,(7991|0));
  // unreachable;
 }
 $6 = $0;
 $7 = ((($6)) + 71|0);
 $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
 $context = $8;
 $9 = $context;
 $10 = ((($9)) + 134|0);
 $11 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
 $12 = ($11|0)!=(0);
 do {
  if ($12) {
   $13 = $context;
   $14 = ((($13)) + 5|0);
   $15 = HEAP8[$14>>0]|0;
   $16 = $15 << 24 >> 24;
   $17 = ($16|0)!=(0);
   if ($17) {
    $18 = $context;
    $19 = ((($18)) + 134|0);
    $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8)|(HEAPU8[$19+2>>0]<<16)|(HEAPU8[$19+3>>0]<<24);
    $21 = (($20) + 1)|0;
    $22 = (_mb_malloc($21)|0);
    $sym = $22;
    $23 = $sym;
    $24 = $context;
    $25 = ((($24)) + 5|0);
    $26 = $context;
    $27 = ((($26)) + 134|0);
    $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
    $29 = (($28) + 1)|0;
    _memcpy(($23|0),($25|0),($29|0))|0;
    $30 = $0;
    $31 = $sym;
    $32 = $1;
    $33 = $2;
    $34 = $3;
    $35 = (__append_symbol($30,$31,$delsym,$32,$33,$34)|0);
    $result = $35;
    $36 = $result;
    $37 = ($36|0)!=(0);
    if (!($37)) {
     $38 = HEAP8[$delsym>>0]|0;
     $39 = $38&255;
     $40 = ($39|0)!=(0);
     if (!($40)) {
      break;
     }
    }
    $41 = $sym;
    $42 = ($41|0)!=(0|0);
    if ($42) {
     $43 = $sym;
     _mb_free($43);
     $sym = 0;
     break;
    } else {
     ___assert_fail((4369|0),(4322|0),5162,(7991|0));
     // unreachable;
    }
   }
  }
 } while(0);
 $44 = $context;
 $45 = ((($44)) + 5|0);
 _memset(($45|0),0,129)|0;
 $46 = $context;
 $47 = ((($46)) + 134|0);
 HEAP8[$47>>0]=0&255;HEAP8[$47+1>>0]=(0>>8)&255;HEAP8[$47+2>>0]=(0>>16)&255;HEAP8[$47+3>>0]=0>>24;
 $48 = $context;
 $49 = ((($48)) + 138|0);
 HEAP8[$49>>0]=0&255;HEAP8[$49+1>>0]=(0>>8)&255;HEAP8[$49+2>>0]=(0>>16)&255;HEAP8[$49+3>>0]=0>>24;
 $50 = $result;
 STACKTOP = sp;return ($50|0);
}
function __is_blank_char($c) {
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $c;
 $1 = $0;
 $2 = $1 << 24 >> 24;
 $3 = ($2|0)==(32);
 if ($3) {
  $8 = 1;
 } else {
  $4 = $0;
  $5 = $4 << 24 >> 24;
  $6 = ($5|0)==(9);
  $8 = $6;
 }
 $7 = $8&1;
 $9 = $7&255;
 STACKTOP = sp;return ($9|0);
}
function __is_newline_char($c) {
 $c = $c|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $c;
 $1 = $0;
 $2 = $1 << 24 >> 24;
 $3 = ($2|0)==(13);
 if ($3) {
  $12 = 1;
 } else {
  $4 = $0;
  $5 = $4 << 24 >> 24;
  $6 = ($5|0)==(10);
  if ($6) {
   $12 = 1;
  } else {
   $7 = $0;
   $8 = (__is_eof_char($7)|0);
   $9 = $8&255;
   $10 = ($9|0)!=(0);
   $12 = $10;
  }
 }
 $11 = $12&1;
 $13 = $11&255;
 STACKTOP = sp;return ($13|0);
}
function __append_char_to_symbol($s,$c) {
 $s = $s|0;
 $c = $c|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $context = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $c;
 $result = 0;
 $context = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 if (!($3)) {
  ___assert_fail((4803|0),(4322|0),5104,(7968|0));
  // unreachable;
 }
 $4 = $0;
 $5 = ((($4)) + 71|0);
 $6 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
 $context = $6;
 $7 = $1;
 $8 = (__is_accessor_char($7)|0);
 $9 = ($8<<24>>24)!=(0);
 if ($9) {
  $10 = $context;
  $11 = ((($10)) + 138|0);
  $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
  $13 = (($12) + 1)|0;
  HEAP8[$11>>0]=$13&255;HEAP8[$11+1>>0]=($13>>8)&255;HEAP8[$11+2>>0]=($13>>16)&255;HEAP8[$11+3>>0]=$13>>24;
 }
 $14 = $context;
 $15 = ((($14)) + 134|0);
 $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
 $17 = (($16) + 1)|0;
 $18 = ($17|0)>=(128);
 if ($18) {
  $19 = $0;
  (__set_current_error($19,5,0)|0);
  $result = 3;
  $31 = $result;
  STACKTOP = sp;return ($31|0);
 } else {
  $20 = $1;
  $21 = $context;
  $22 = ((($21)) + 134|0);
  $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
  $24 = $context;
  $25 = ((($24)) + 5|0);
  $26 = (($25) + ($23)|0);
  HEAP8[$26>>0] = $20;
  $27 = $context;
  $28 = ((($27)) + 134|0);
  $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
  $30 = (($29) + 1)|0;
  HEAP8[$28>>0]=$30&255;HEAP8[$28+1>>0]=($30>>8)&255;HEAP8[$28+2>>0]=($30>>16)&255;HEAP8[$28+3>>0]=$30>>24;
  $31 = $result;
  STACKTOP = sp;return ($31|0);
 }
 return (0)|0;
}
function __is_separator_char($c) {
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $c;
 $1 = $0;
 $2 = $1 << 24 >> 24;
 $3 = ($2|0)==(44);
 if ($3) {
  $8 = 1;
 } else {
  $4 = $0;
  $5 = $4 << 24 >> 24;
  $6 = ($5|0)==(58);
  $8 = $6;
 }
 $7 = $8&1;
 $9 = $7&255;
 STACKTOP = sp;return ($9|0);
}
function __is_bracket_char($c) {
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $c;
 $1 = $0;
 $2 = $1 << 24 >> 24;
 $3 = ($2|0)==(40);
 if ($3) {
  $8 = 1;
 } else {
  $4 = $0;
  $5 = $4 << 24 >> 24;
  $6 = ($5|0)==(41);
  $8 = $6;
 }
 $7 = $8&1;
 $9 = $7&255;
 STACKTOP = sp;return ($9|0);
}
function __is_quotation_char($c) {
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $c;
 $1 = $0;
 $2 = $1 << 24 >> 24;
 $3 = ($2|0)==(34);
 $4 = $3&1;
 $5 = $4&255;
 STACKTOP = sp;return ($5|0);
}
function __is_comment_char($c) {
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $c;
 $1 = $0;
 $2 = $1 << 24 >> 24;
 $3 = ($2|0)==(59);
 $4 = $3&1;
 $5 = $4&255;
 STACKTOP = sp;return ($5|0);
}
function __is_identifier_char($c) {
 $c = $c|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $c;
 $1 = $0;
 $2 = $1 << 24 >> 24;
 $3 = ($2|0)>=(97);
 if ($3) {
  $4 = $0;
  $5 = $4 << 24 >> 24;
  $6 = ($5|0)<=(122);
  if ($6) {
   $24 = 1;
  } else {
   label = 3;
  }
 } else {
  label = 3;
 }
 do {
  if ((label|0) == 3) {
   $7 = $0;
   $8 = $7 << 24 >> 24;
   $9 = ($8|0)>=(65);
   if ($9) {
    $10 = $0;
    $11 = $10 << 24 >> 24;
    $12 = ($11|0)<=(90);
    if ($12) {
     $24 = 1;
     break;
    }
   }
   $13 = $0;
   $14 = $13 << 24 >> 24;
   $15 = ($14|0)==(95);
   if ($15) {
    $24 = 1;
   } else {
    $16 = $0;
    $17 = (__is_numeric_char($16)|0);
    $18 = $17&255;
    $19 = ($18|0)!=(0);
    if ($19) {
     $24 = 1;
    } else {
     $20 = $0;
     $21 = $20 << 24 >> 24;
     $22 = ($21|0)==(36);
     $24 = $22;
    }
   }
  }
 } while(0);
 $23 = $24&1;
 $25 = $23&255;
 STACKTOP = sp;return ($25|0);
}
function __is_operator_char($c) {
 $c = $c|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $c;
 $1 = $0;
 $2 = $1 << 24 >> 24;
 $3 = ($2|0)==(43);
 if ($3) {
  $32 = 1;
 } else {
  $4 = $0;
  $5 = $4 << 24 >> 24;
  $6 = ($5|0)==(45);
  if ($6) {
   $32 = 1;
  } else {
   $7 = $0;
   $8 = $7 << 24 >> 24;
   $9 = ($8|0)==(42);
   if ($9) {
    $32 = 1;
   } else {
    $10 = $0;
    $11 = $10 << 24 >> 24;
    $12 = ($11|0)==(47);
    if ($12) {
     $32 = 1;
    } else {
     $13 = $0;
     $14 = $13 << 24 >> 24;
     $15 = ($14|0)==(94);
     if ($15) {
      $32 = 1;
     } else {
      $16 = $0;
      $17 = $16 << 24 >> 24;
      $18 = ($17|0)==(40);
      if ($18) {
       $32 = 1;
      } else {
       $19 = $0;
       $20 = $19 << 24 >> 24;
       $21 = ($20|0)==(41);
       if ($21) {
        $32 = 1;
       } else {
        $22 = $0;
        $23 = $22 << 24 >> 24;
        $24 = ($23|0)==(61);
        if ($24) {
         $32 = 1;
        } else {
         $25 = $0;
         $26 = $25 << 24 >> 24;
         $27 = ($26|0)==(62);
         if ($27) {
          $32 = 1;
         } else {
          $28 = $0;
          $29 = $28 << 24 >> 24;
          $30 = ($29|0)==(60);
          $32 = $30;
         }
        }
       }
      }
     }
    }
   }
  }
 }
 $31 = $32&1;
 $33 = $31&255;
 STACKTOP = sp;return ($33|0);
}
function __is_exponent_prefix($s,$begin,$end) {
 $s = $s|0;
 $begin = $begin|0;
 $end = $end|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $s;
 $2 = $begin;
 $3 = $end;
 $i = 0;
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 if (!($5)) {
  ___assert_fail((4803|0),(4322|0),5086,(7948|0));
  // unreachable;
 }
 $6 = $3;
 $7 = ($6|0)<(0);
 if ($7) {
  $0 = 0;
  $20 = $0;
  STACKTOP = sp;return ($20|0);
 }
 $8 = $2;
 $i = $8;
 while(1) {
  $9 = $i;
  $10 = $3;
  $11 = ($9|0)<=($10|0);
  if (!($11)) {
   label = 10;
   break;
  }
  $12 = $i;
  $13 = $1;
  $14 = (($13) + ($12)|0);
  $15 = HEAP8[$14>>0]|0;
  $16 = (__is_numeric_char($15)|0);
  $17 = ($16<<24>>24)!=(0);
  if (!($17)) {
   label = 8;
   break;
  }
  $18 = $i;
  $19 = (($18) + 1)|0;
  $i = $19;
 }
 if ((label|0) == 8) {
  $0 = 0;
  $20 = $0;
  STACKTOP = sp;return ($20|0);
 }
 else if ((label|0) == 10) {
  $0 = 1;
  $20 = $0;
  STACKTOP = sp;return ($20|0);
 }
 return (0)|0;
}
function __is_exponential_char($c) {
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $c;
 $1 = $0;
 $2 = $1 << 24 >> 24;
 $3 = ($2|0)==(101);
 if ($3) {
  $8 = 1;
 } else {
  $4 = $0;
  $5 = $4 << 24 >> 24;
  $6 = ($5|0)==(69);
  $8 = $6;
 }
 $7 = $8&1;
 $9 = $7&255;
 STACKTOP = sp;return ($9|0);
}
function __is_eof_char($c) {
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $c;
 $1 = $0;
 $2 = $1 << 24 >> 24;
 $3 = ($2|0)==(-1);
 $4 = $3&1;
 $5 = $4&255;
 STACKTOP = sp;return ($5|0);
}
function __is_numeric_char($c) {
 $c = $c|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $c;
 $1 = $0;
 $2 = $1 << 24 >> 24;
 $3 = ($2|0)>=(48);
 if ($3) {
  $4 = $0;
  $5 = $4 << 24 >> 24;
  $6 = ($5|0)<=(57);
  if ($6) {
   $12 = 1;
  } else {
   label = 3;
  }
 } else {
  label = 3;
 }
 if ((label|0) == 3) {
  $7 = $0;
  $8 = (__is_accessor_char($7)|0);
  $9 = $8&255;
  $10 = ($9|0)!=(0);
  $12 = $10;
 }
 $11 = $12&1;
 $13 = $11&255;
 STACKTOP = sp;return ($13|0);
}
function __append_symbol($s,$sym,$delsym,$pos,$row,$col) {
 $s = $s|0;
 $sym = $sym|0;
 $delsym = $delsym|0;
 $pos = $pos|0;
 $row = $row|0;
 $col = $col|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $assign = 0, $ast = 0, $context = 0, $node = 0, $obj = 0, $or$cond = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $obj = sp + 12|0;
 $assign = sp + 8|0;
 $0 = $s;
 $1 = $sym;
 $2 = $delsym;
 $3 = $pos;
 $4 = $row;
 $5 = $col;
 $result = 0;
 $ast = 0;
 HEAP32[$obj>>2] = 0;
 HEAP32[$assign>>2] = 0;
 $node = 0;
 $context = 0;
 $6 = $0;
 $7 = ($6|0)!=(0|0);
 $8 = $1;
 $9 = ($8|0)!=(0|0);
 $or$cond = $7 & $9;
 if (!($or$cond)) {
  ___assert_fail((8003|0),(4322|0),5181,(8012|0));
  // unreachable;
 }
 $10 = $0;
 $11 = ((($10)) + 17|0);
 $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
 $ast = $12;
 $13 = $0;
 $14 = $ast;
 $15 = $1;
 $16 = $2;
 $17 = (__create_symbol($13,$14,$15,$obj,$assign,$16)|0);
 $result = $17;
 $18 = HEAP32[$obj>>2]|0;
 $19 = ($18|0)!=(0|0);
 if (!($19)) {
  $42 = $result;
  STACKTOP = sp;return ($42|0);
 }
 $20 = $3;
 $21 = HEAP32[$obj>>2]|0;
 $22 = ((($21)) + 9|0);
 HEAP8[$22>>0]=$20&255;HEAP8[$22+1>>0]=($20>>8)&255;HEAP8[$22+2>>0]=($20>>16)&255;HEAP8[$22+3>>0]=$20>>24;
 $23 = $4;
 $24 = HEAP32[$obj>>2]|0;
 $25 = ((($24)) + 13|0);
 HEAP8[$25>>0]=$23&255;HEAP8[$25+1>>0]=$23>>8;
 $26 = $5;
 $27 = HEAP32[$obj>>2]|0;
 $28 = ((($27)) + 15|0);
 HEAP8[$28>>0]=$26&255;HEAP8[$28+1>>0]=$26>>8;
 $29 = $ast;
 $30 = HEAP32[$obj>>2]|0;
 $31 = (__ls_pushback($29,$30)|0);
 $node = $31;
 $32 = HEAP32[$assign>>2]|0;
 $33 = ($32|0)!=(0|0);
 if ($33) {
  $34 = $node;
  $35 = HEAP32[$assign>>2]|0;
  HEAP32[$35>>2] = $34;
 }
 $36 = $0;
 $37 = ((($36)) + 71|0);
 $38 = HEAPU8[$37>>0]|(HEAPU8[$37+1>>0]<<8)|(HEAPU8[$37+2>>0]<<16)|(HEAPU8[$37+3>>0]<<24);
 $context = $38;
 $39 = HEAP32[$obj>>2]|0;
 $40 = $context;
 $41 = ((($40)) + 142|0);
 HEAP8[$41>>0]=$39&255;HEAP8[$41+1>>0]=($39>>8)&255;HEAP8[$41+2>>0]=($39>>16)&255;HEAP8[$41+3>>0]=$39>>24;
 $42 = $result;
 STACKTOP = sp;return ($42|0);
}
function __create_symbol($s,$l,$sym,$obj,$asgn,$delsym) {
 $s = $s|0;
 $l = $l|0;
 $sym = $sym|0;
 $obj = $obj|0;
 $asgn = $asgn|0;
 $delsym = $delsym|0;
 var $$sink = 0, $$sink8 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0;
 var $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0;
 var $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0;
 var $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0;
 var $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0;
 var $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0;
 var $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0;
 var $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0;
 var $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0;
 var $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0;
 var $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0;
 var $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0;
 var $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0;
 var $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0;
 var $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0;
 var $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0;
 var $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0;
 var $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0;
 var $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0;
 var $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0;
 var $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0;
 var $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0;
 var $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0;
 var $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0;
 var $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0;
 var $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0;
 var $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0;
 var $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0;
 var $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0;
 var $619 = 0, $62 = 0.0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0;
 var $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0;
 var $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0;
 var $673 = 0, $674 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $_sl = 0, $context = 0, $glbsyminscope = 0;
 var $is_field = 0, $or$cond = 0, $or$cond3 = 0, $or$cond5 = 0, $or$cond7 = 0, $result = 0, $running = 0, $tba = 0, $tmp = 0, $type = 0, $ul = 0, $value = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $tmp = sp + 64|0;
 $value = sp + 60|0;
 $0 = $s;
 $1 = $l;
 $2 = $sym;
 $3 = $obj;
 $4 = $asgn;
 $5 = $delsym;
 $result = 0;
 $ul = 0;
 $context = 0;
 $running = 0;
 $glbsyminscope = 0;
 $is_field = 0;
 $6 = $0;
 $7 = ($6|0)!=(0|0);
 $8 = $2;
 $9 = ($8|0)!=(0|0);
 $or$cond = $7 & $9;
 if ($or$cond) {
 }
 $10 = $0;
 $11 = ($10|0)!=(0|0);
 $12 = $2;
 $13 = ($12|0)!=(0|0);
 $or$cond3 = $11 & $13;
 $14 = $3;
 $15 = ($14|0)!=(0|0);
 $or$cond5 = $or$cond3 & $15;
 if (!($or$cond5)) {
  ___assert_fail((8027|0),(4322|0),5227,(8043|0));
  // unreachable;
 }
 ;HEAP8[$value>>0]=0|0;HEAP8[$value+1>>0]=0|0;HEAP8[$value+2>>0]=0|0;HEAP8[$value+3>>0]=0|0;
 $16 = $0;
 $17 = ((($16)) + 71|0);
 $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
 $context = $18;
 $19 = $0;
 $20 = ((($19)) + 75|0);
 $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
 $running = $21;
 $22 = (__create_object()|0);
 $23 = $3;
 HEAP32[$23>>2] = $22;
 $24 = $3;
 $25 = HEAP32[$24>>2]|0;
 $26 = ((($25)) + 9|0);
 HEAP8[$26>>0]=-1&255;HEAP8[$26+1>>0]=(-1>>8)&255;HEAP8[$26+2>>0]=(-1>>16)&255;HEAP8[$26+3>>0]=-1>>24;
 $27 = $3;
 $28 = HEAP32[$27>>2]|0;
 $29 = ((($28)) + 15|0);
 HEAP8[$29>>0]=-1&255;HEAP8[$29+1>>0]=-1>>8;
 $30 = $3;
 $31 = HEAP32[$30>>2]|0;
 $32 = ((($31)) + 13|0);
 HEAP8[$32>>0]=-1&255;HEAP8[$32+1>>0]=-1>>8;
 $33 = $0;
 $34 = $2;
 $35 = (__get_symbol_type($33,$34,$value)|0);
 $type = $35;
 $36 = $0;
 $37 = ((($36)) + 135|0);
 $38 = HEAPU8[$37>>0]|(HEAPU8[$37+1>>0]<<8)|(HEAPU8[$37+2>>0]<<16)|(HEAPU8[$37+3>>0]<<24);
 $39 = ($38|0)!=(0);
 if ($39) {
  $result = 3;
  $674 = $result;
  STACKTOP = sp;return ($674|0);
 }
 $40 = $type;
 $41 = $3;
 $42 = HEAP32[$41>>2]|0;
 HEAP8[$42>>0]=$40&255;HEAP8[$42+1>>0]=($40>>8)&255;HEAP8[$42+2>>0]=($40>>16)&255;HEAP8[$42+3>>0]=$40>>24;
 $43 = $type;
 do {
  switch ($43|0) {
  case 0:  {
   ;HEAP8[$tmp>>0]=HEAP8[$value>>0]|0;HEAP8[$tmp+1>>0]=HEAP8[$value+1>>0]|0;HEAP8[$tmp+2>>0]=HEAP8[$value+2>>0]|0;HEAP8[$tmp+3>>0]=HEAP8[$value+3>>0]|0;
   $44 = HEAPU8[$tmp>>0]|(HEAPU8[$tmp+1>>0]<<8)|(HEAPU8[$tmp+2>>0]<<16)|(HEAPU8[$tmp+3>>0]<<24);
   $45 = ($44|0)!=(0);
   $46 = $3;
   $47 = HEAP32[$46>>2]|0;
   do {
    if ($45) {
     HEAP8[$47>>0]=0&255;HEAP8[$47+1>>0]=(0>>8)&255;HEAP8[$47+2>>0]=(0>>16)&255;HEAP8[$47+3>>0]=0>>24;
    } else {
     $48 = ($47|0)!=(0|0);
     if ($48) {
      $49 = $3;
      $50 = HEAP32[$49>>2]|0;
      _mb_free($50);
      $51 = $3;
      HEAP32[$51>>2] = 0;
      break;
     } else {
      ___assert_fail((4369|0),(4322|0),5255,(8043|0));
      // unreachable;
     }
    }
   } while(0);
   $52 = $2;
   $53 = ($52|0)!=(0|0);
   if (!($53)) {
    ___assert_fail((4369|0),(4322|0),5257,(8043|0));
    // unreachable;
   }
   $54 = $2;
   _mb_free($54);
   $2 = 0;
   $674 = $result;
   STACKTOP = sp;return ($674|0);
   break;
  }
  case 2:  {
   ;HEAP8[$tmp>>0]=HEAP8[$value>>0]|0;HEAP8[$tmp+1>>0]=HEAP8[$value+1>>0]|0;HEAP8[$tmp+2>>0]=HEAP8[$value+2>>0]|0;HEAP8[$tmp+3>>0]=HEAP8[$value+3>>0]|0;
   $55 = HEAPU8[$tmp>>0]|(HEAPU8[$tmp+1>>0]<<8)|(HEAPU8[$tmp+2>>0]<<16)|(HEAPU8[$tmp+3>>0]<<24);
   $56 = $3;
   $57 = HEAP32[$56>>2]|0;
   $58 = ((($57)) + 4|0);
   HEAP8[$58>>0]=$55&255;HEAP8[$58+1>>0]=($55>>8)&255;HEAP8[$58+2>>0]=($55>>16)&255;HEAP8[$58+3>>0]=$55>>24;
   $59 = $2;
   $60 = ($59|0)!=(0|0);
   if (!($60)) {
    ___assert_fail((4369|0),(4322|0),5263,(8043|0));
    // unreachable;
   }
   $61 = $2;
   _mb_free($61);
   $2 = 0;
   $674 = $result;
   STACKTOP = sp;return ($674|0);
   break;
  }
  case 3:  {
   ;HEAP8[$tmp>>0]=HEAP8[$value>>0]|0;HEAP8[$tmp+1>>0]=HEAP8[$value+1>>0]|0;HEAP8[$tmp+2>>0]=HEAP8[$value+2>>0]|0;HEAP8[$tmp+3>>0]=HEAP8[$value+3>>0]|0;
   HEAP8[tempDoublePtr>>0]=HEAP8[$tmp>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$tmp+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$tmp+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$tmp+3>>0];$62 = +HEAPF32[tempDoublePtr>>2];
   $63 = $3;
   $64 = HEAP32[$63>>2]|0;
   $65 = ((($64)) + 4|0);
   HEAPF32[tempDoublePtr>>2]=$62;HEAP8[$65>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$65+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$65+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$65+3>>0]=HEAP8[tempDoublePtr+3>>0];
   $66 = $2;
   $67 = ($66|0)!=(0|0);
   if (!($67)) {
    ___assert_fail((4369|0),(4322|0),5269,(8043|0));
    // unreachable;
   }
   $68 = $2;
   _mb_free($68);
   $2 = 0;
   $674 = $result;
   STACKTOP = sp;return ($674|0);
   break;
  }
  case 4:  {
   $69 = $2;
   $70 = (_strlen($69)|0);
   $_sl = $70;
   $71 = $_sl;
   $72 = (($71) - 2)|0;
   $73 = (($72) + 1)|0;
   $74 = (_mb_malloc($73)|0);
   $75 = $3;
   $76 = HEAP32[$75>>2]|0;
   $77 = ((($76)) + 4|0);
   HEAP8[$77>>0]=$74&255;HEAP8[$77+1>>0]=($74>>8)&255;HEAP8[$77+2>>0]=($74>>16)&255;HEAP8[$77+3>>0]=$74>>24;
   $78 = $3;
   $79 = HEAP32[$78>>2]|0;
   $80 = ((($79)) + 4|0);
   $81 = HEAPU8[$80>>0]|(HEAPU8[$80+1>>0]<<8)|(HEAPU8[$80+2>>0]<<16)|(HEAPU8[$80+3>>0]<<24);
   $82 = $2;
   $83 = ((($82)) + 1|0);
   $84 = $_sl;
   $85 = (($84) - 2)|0;
   _memcpy(($81|0),($83|0),($85|0))|0;
   $86 = $_sl;
   $87 = (($86) - 2)|0;
   $88 = $3;
   $89 = HEAP32[$88>>2]|0;
   $90 = ((($89)) + 4|0);
   $91 = HEAPU8[$90>>0]|(HEAPU8[$90+1>>0]<<8)|(HEAPU8[$90+2>>0]<<16)|(HEAPU8[$90+3>>0]<<24);
   $92 = (($91) + ($87)|0);
   HEAP8[$92>>0] = 0;
   $93 = $5;
   HEAP8[$93>>0] = 1;
   $674 = $result;
   STACKTOP = sp;return ($674|0);
   break;
  }
  case 8:  {
   $94 = (_mb_malloc(8)|0);
   HEAP8[$tmp>>0]=$94&255;HEAP8[$tmp+1>>0]=($94>>8)&255;HEAP8[$tmp+2>>0]=($94>>16)&255;HEAP8[$tmp+3>>0]=$94>>24;
   $95 = HEAPU8[$tmp>>0]|(HEAPU8[$tmp+1>>0]<<8)|(HEAPU8[$tmp+2>>0]<<16)|(HEAPU8[$tmp+3>>0]<<24);
   ;HEAP8[$95>>0]=0|0;HEAP8[$95+1>>0]=0|0;HEAP8[$95+2>>0]=0|0;HEAP8[$95+3>>0]=0|0;HEAP8[$95+4>>0]=0|0;HEAP8[$95+5>>0]=0|0;HEAP8[$95+6>>0]=0|0;HEAP8[$95+7>>0]=0|0;
   $96 = $2;
   $97 = HEAPU8[$tmp>>0]|(HEAPU8[$tmp+1>>0]<<8)|(HEAPU8[$tmp+2>>0]<<16)|(HEAPU8[$tmp+3>>0]<<24);
   HEAP8[$97>>0]=$96&255;HEAP8[$97+1>>0]=($96>>8)&255;HEAP8[$97+2>>0]=($96>>16)&255;HEAP8[$97+3>>0]=$96>>24;
   $98 = HEAPU8[$tmp>>0]|(HEAPU8[$tmp+1>>0]<<8)|(HEAPU8[$tmp+2>>0]<<16)|(HEAPU8[$tmp+3>>0]<<24);
   $99 = ((($98)) + 4|0);
   ;HEAP8[$99>>0]=HEAP8[$value>>0]|0;HEAP8[$99+1>>0]=HEAP8[$value+1>>0]|0;HEAP8[$99+2>>0]=HEAP8[$value+2>>0]|0;HEAP8[$99+3>>0]=HEAP8[$value+3>>0]|0;
   $100 = HEAPU8[$tmp>>0]|(HEAPU8[$tmp+1>>0]<<8)|(HEAPU8[$tmp+2>>0]<<16)|(HEAPU8[$tmp+3>>0]<<24);
   $101 = $3;
   $102 = HEAP32[$101>>2]|0;
   $103 = ((($102)) + 4|0);
   HEAP8[$103>>0]=$100&255;HEAP8[$103+1>>0]=($100>>8)&255;HEAP8[$103+2>>0]=($100>>16)&255;HEAP8[$103+3>>0]=$100>>24;
   $674 = $result;
   STACKTOP = sp;return ($674|0);
   break;
  }
  case 10:  {
   $104 = $0;
   $105 = $2;
   $106 = (__search_identifier_in_scope_chain($104,0,$105,0,0,0)|0);
   $glbsyminscope = $106;
   $107 = $glbsyminscope;
   $108 = ($107|0)!=(0|0);
   if ($108) {
    $109 = $glbsyminscope;
    $110 = HEAPU8[$109>>0]|(HEAPU8[$109+1>>0]<<8)|(HEAPU8[$109+2>>0]<<16)|(HEAPU8[$109+3>>0]<<24);
    $111 = HEAPU8[$110>>0]|(HEAPU8[$110+1>>0]<<8)|(HEAPU8[$110+2>>0]<<16)|(HEAPU8[$110+3>>0]<<24);
    $112 = ($111|0)==(10);
    if ($112) {
     $113 = $glbsyminscope;
     $114 = HEAPU8[$113>>0]|(HEAPU8[$113+1>>0]<<8)|(HEAPU8[$113+2>>0]<<16)|(HEAPU8[$113+3>>0]<<24);
     $115 = ((($114)) + 4|0);
     $116 = HEAPU8[$115>>0]|(HEAPU8[$115+1>>0]<<8)|(HEAPU8[$115+2>>0]<<16)|(HEAPU8[$115+3>>0]<<24);
     $117 = $3;
     $118 = HEAP32[$117>>2]|0;
     $119 = ((($118)) + 4|0);
     HEAP8[$119>>0]=$116&255;HEAP8[$119+1>>0]=($116>>8)&255;HEAP8[$119+2>>0]=($116>>16)&255;HEAP8[$119+3>>0]=$116>>24;
     $120 = $3;
     $121 = HEAP32[$120>>2]|0;
     $122 = ((($121)) + 8|0);
     $123 = HEAP8[$122>>0]|0;
     $124 = $123 & -2;
     $125 = $124 | 1;
     HEAP8[$122>>0] = $125;
     $126 = $5;
     HEAP8[$126>>0] = 1;
     $674 = $result;
     STACKTOP = sp;return ($674|0);
    }
   }
   $127 = $0;
   $128 = $2;
   $129 = (__create_array($127,$128,1)|0);
   HEAP8[$tmp>>0]=$129&255;HEAP8[$tmp+1>>0]=($129>>8)&255;HEAP8[$tmp+2>>0]=($129>>16)&255;HEAP8[$tmp+3>>0]=$129>>24;
   $130 = HEAPU8[$tmp>>0]|(HEAPU8[$tmp+1>>0]<<8)|(HEAPU8[$tmp+2>>0]<<16)|(HEAPU8[$tmp+3>>0]<<24);
   $131 = ((($130)) + 21|0);
   ;HEAP8[$131>>0]=HEAP8[$value>>0]|0;HEAP8[$131+1>>0]=HEAP8[$value+1>>0]|0;HEAP8[$131+2>>0]=HEAP8[$value+2>>0]|0;HEAP8[$131+3>>0]=HEAP8[$value+3>>0]|0;
   $132 = HEAPU8[$tmp>>0]|(HEAPU8[$tmp+1>>0]<<8)|(HEAPU8[$tmp+2>>0]<<16)|(HEAPU8[$tmp+3>>0]<<24);
   $133 = $3;
   $134 = HEAP32[$133>>2]|0;
   $135 = ((($134)) + 4|0);
   HEAP8[$135>>0]=$132&255;HEAP8[$135+1>>0]=($132>>8)&255;HEAP8[$135+2>>0]=($132>>16)&255;HEAP8[$135+3>>0]=$132>>24;
   $136 = $running;
   $137 = ((($136)) + 8|0);
   $138 = HEAPU8[$137>>0]|(HEAPU8[$137+1>>0]<<8)|(HEAPU8[$137+2>>0]<<16)|(HEAPU8[$137+3>>0]<<24);
   $139 = $2;
   $140 = $3;
   $141 = HEAP32[$140>>2]|0;
   $142 = (__ht_set_or_insert($138,$139,$141)|0);
   $ul = $142;
   $143 = $ul;
   $144 = ($143|0)!=(0);
   if (!($144)) {
    ___assert_fail((8058|0),(4322|0),5301,(8043|0));
    // unreachable;
   }
   $145 = (__create_object()|0);
   $146 = $3;
   HEAP32[$146>>2] = $145;
   $147 = $type;
   $148 = $3;
   $149 = HEAP32[$148>>2]|0;
   HEAP8[$149>>0]=$147&255;HEAP8[$149+1>>0]=($147>>8)&255;HEAP8[$149+2>>0]=($147>>16)&255;HEAP8[$149+3>>0]=$147>>24;
   $150 = HEAPU8[$tmp>>0]|(HEAPU8[$tmp+1>>0]<<8)|(HEAPU8[$tmp+2>>0]<<16)|(HEAPU8[$tmp+3>>0]<<24);
   $151 = $3;
   $152 = HEAP32[$151>>2]|0;
   $153 = ((($152)) + 4|0);
   HEAP8[$153>>0]=$150&255;HEAP8[$153+1>>0]=($150>>8)&255;HEAP8[$153+2>>0]=($150>>16)&255;HEAP8[$153+3>>0]=$150>>24;
   $154 = $3;
   $155 = HEAP32[$154>>2]|0;
   $156 = ((($155)) + 8|0);
   $157 = HEAP8[$156>>0]|0;
   $158 = $157 & -2;
   $159 = $158 | 1;
   HEAP8[$156>>0] = $159;
   $674 = $result;
   STACKTOP = sp;return ($674|0);
   break;
  }
  case 16:  {
   $160 = $2;
   $161 = HEAP8[$160>>0]|0;
   $162 = (__is_identifier_char($161)|0);
   $163 = ($162<<24>>24)!=(0);
   if (!($163)) {
    $164 = $2;
    HEAP8[$164>>0] = 24;
   }
   $165 = $0;
   $166 = $2;
   $167 = (__search_identifier_in_scope_chain($165,0,$166,0,0,0)|0);
   $glbsyminscope = $167;
   $168 = $glbsyminscope;
   $169 = ($168|0)!=(0|0);
   if ($169) {
    $170 = $glbsyminscope;
    $171 = HEAPU8[$170>>0]|(HEAPU8[$170+1>>0]<<8)|(HEAPU8[$170+2>>0]<<16)|(HEAPU8[$170+3>>0]<<24);
    $172 = HEAPU8[$171>>0]|(HEAPU8[$171+1>>0]<<8)|(HEAPU8[$171+2>>0]<<16)|(HEAPU8[$171+3>>0]<<24);
    $173 = ($172|0)==(16);
    if ($173) {
     $174 = $glbsyminscope;
     $175 = HEAPU8[$174>>0]|(HEAPU8[$174+1>>0]<<8)|(HEAPU8[$174+2>>0]<<16)|(HEAPU8[$174+3>>0]<<24);
     $176 = ((($175)) + 4|0);
     $177 = HEAPU8[$176>>0]|(HEAPU8[$176+1>>0]<<8)|(HEAPU8[$176+2>>0]<<16)|(HEAPU8[$176+3>>0]<<24);
     $178 = $3;
     $179 = HEAP32[$178>>2]|0;
     $180 = ((($179)) + 4|0);
     HEAP8[$180>>0]=$177&255;HEAP8[$180+1>>0]=($177>>8)&255;HEAP8[$180+2>>0]=($177>>16)&255;HEAP8[$180+3>>0]=$177>>24;
     $181 = $3;
     $182 = HEAP32[$181>>2]|0;
     $183 = ((($182)) + 8|0);
     $184 = HEAP8[$183>>0]|0;
     $185 = $184 & -2;
     $186 = $185 | 1;
     HEAP8[$183>>0] = $186;
     $187 = $5;
     HEAP8[$187>>0] = 1;
     $188 = $running;
     $189 = $3;
     $190 = HEAP32[$189>>2]|0;
     $191 = ((($190)) + 4|0);
     $192 = HEAPU8[$191>>0]|(HEAPU8[$191+1>>0]<<8)|(HEAPU8[$191+2>>0]<<16)|(HEAPU8[$191+3>>0]<<24);
     $193 = ((($192)) + 29|0);
     $194 = HEAPU8[$193>>0]|(HEAPU8[$193+1>>0]<<8)|(HEAPU8[$193+2>>0]<<16)|(HEAPU8[$193+3>>0]<<24);
     $195 = ($188|0)!=($194|0);
     if (!($195)) {
      $674 = $result;
      STACKTOP = sp;return ($674|0);
     }
     $196 = $context;
     $197 = ((($196)) + 158|0);
     $198 = HEAPU8[$197>>0]|(HEAPU8[$197+1>>0]<<8);
     $199 = $198&65535;
     $200 = ($199|0)!=(0);
     if (!($200)) {
      $674 = $result;
      STACKTOP = sp;return ($674|0);
     }
     $201 = $context;
     $202 = ((($201)) + 142|0);
     $203 = HEAPU8[$202>>0]|(HEAPU8[$202+1>>0]<<8)|(HEAPU8[$202+2>>0]<<16)|(HEAPU8[$202+3>>0]<<24);
     $204 = HEAPU8[$203>>0]|(HEAPU8[$203+1>>0]<<8)|(HEAPU8[$203+2>>0]<<16)|(HEAPU8[$203+3>>0]<<24);
     $205 = ($204|0)==(8);
     if (!($205)) {
      $674 = $result;
      STACKTOP = sp;return ($674|0);
     }
     $206 = $context;
     $207 = ((($206)) + 142|0);
     $208 = HEAPU8[$207>>0]|(HEAPU8[$207+1>>0]<<8)|(HEAPU8[$207+2>>0]<<16)|(HEAPU8[$207+3>>0]<<24);
     $209 = ((($208)) + 4|0);
     $210 = HEAPU8[$209>>0]|(HEAPU8[$209+1>>0]<<8)|(HEAPU8[$209+2>>0]<<16)|(HEAPU8[$209+3>>0]<<24);
     $211 = ((($210)) + 4|0);
     $212 = HEAPU8[$211>>0]|(HEAPU8[$211+1>>0]<<8)|(HEAPU8[$211+2>>0]<<16)|(HEAPU8[$211+3>>0]<<24);
     $213 = ($212|0)==(45|0);
     if (!($213)) {
      $674 = $result;
      STACKTOP = sp;return ($674|0);
     }
     $214 = $0;
     $215 = $3;
     $216 = HEAP32[$215>>2]|0;
     $217 = ((($216)) + 4|0);
     $218 = HEAPU8[$217>>0]|(HEAPU8[$217+1>>0]<<8)|(HEAPU8[$217+2>>0]<<16)|(HEAPU8[$217+3>>0]<<24);
     $219 = ((($218)) + 29|0);
     $220 = HEAPU8[$219>>0]|(HEAPU8[$219+1>>0]<<8)|(HEAPU8[$219+2>>0]<<16)|(HEAPU8[$219+3>>0]<<24);
     (__push_scope_by_class($214,$220)|0);
     $674 = $result;
     STACKTOP = sp;return ($674|0);
    }
   }
   $221 = (_mb_malloc(45)|0);
   HEAP8[$tmp>>0]=$221&255;HEAP8[$tmp+1>>0]=($221>>8)&255;HEAP8[$tmp+2>>0]=($221>>16)&255;HEAP8[$tmp+3>>0]=$221>>24;
   $222 = $0;
   $223 = HEAPU8[$tmp>>0]|(HEAPU8[$tmp+1>>0]<<8)|(HEAPU8[$tmp+2>>0]<<16)|(HEAPU8[$tmp+3>>0]<<24);
   $224 = $2;
   __init_class($222,$223,$224);
   $225 = $0;
   $226 = HEAPU8[$tmp>>0]|(HEAPU8[$tmp+1>>0]<<8)|(HEAPU8[$tmp+2>>0]<<16)|(HEAPU8[$tmp+3>>0]<<24);
   $227 = ((($226)) + 29|0);
   $228 = HEAPU8[$227>>0]|(HEAPU8[$227+1>>0]<<8)|(HEAPU8[$227+2>>0]<<16)|(HEAPU8[$227+3>>0]<<24);
   (__push_scope_by_class($225,$228)|0);
   $229 = HEAPU8[$tmp>>0]|(HEAPU8[$tmp+1>>0]<<8)|(HEAPU8[$tmp+2>>0]<<16)|(HEAPU8[$tmp+3>>0]<<24);
   $230 = $0;
   $231 = ((($230)) + 93|0);
   HEAP8[$231>>0]=$229&255;HEAP8[$231+1>>0]=($229>>8)&255;HEAP8[$231+2>>0]=($229>>16)&255;HEAP8[$231+3>>0]=$229>>24;
   $232 = HEAPU8[$tmp>>0]|(HEAPU8[$tmp+1>>0]<<8)|(HEAPU8[$tmp+2>>0]<<16)|(HEAPU8[$tmp+3>>0]<<24);
   $233 = $3;
   $234 = HEAP32[$233>>2]|0;
   $235 = ((($234)) + 4|0);
   HEAP8[$235>>0]=$232&255;HEAP8[$235+1>>0]=($232>>8)&255;HEAP8[$235+2>>0]=($232>>16)&255;HEAP8[$235+3>>0]=$232>>24;
   $236 = $running;
   $237 = ((($236)) + 8|0);
   $238 = HEAPU8[$237>>0]|(HEAPU8[$237+1>>0]<<8)|(HEAPU8[$237+2>>0]<<16)|(HEAPU8[$237+3>>0]<<24);
   $239 = $2;
   $240 = $3;
   $241 = HEAP32[$240>>2]|0;
   $242 = (__ht_set_or_insert($238,$239,$241)|0);
   $ul = $242;
   $243 = $ul;
   $244 = ($243|0)!=(0);
   if (!($244)) {
    ___assert_fail((8058|0),(4322|0),5333,(8043|0));
    // unreachable;
   }
   $245 = (__create_object()|0);
   $246 = $3;
   HEAP32[$246>>2] = $245;
   $247 = $type;
   $248 = $3;
   $249 = HEAP32[$248>>2]|0;
   HEAP8[$249>>0]=$247&255;HEAP8[$249+1>>0]=($247>>8)&255;HEAP8[$249+2>>0]=($247>>16)&255;HEAP8[$249+3>>0]=$247>>24;
   $250 = HEAPU8[$tmp>>0]|(HEAPU8[$tmp+1>>0]<<8)|(HEAPU8[$tmp+2>>0]<<16)|(HEAPU8[$tmp+3>>0]<<24);
   $251 = $3;
   $252 = HEAP32[$251>>2]|0;
   $253 = ((($252)) + 4|0);
   HEAP8[$253>>0]=$250&255;HEAP8[$253+1>>0]=($250>>8)&255;HEAP8[$253+2>>0]=($250>>16)&255;HEAP8[$253+3>>0]=$250>>24;
   $254 = $3;
   $255 = HEAP32[$254>>2]|0;
   $256 = ((($255)) + 8|0);
   $257 = HEAP8[$256>>0]|0;
   $258 = $257 & -2;
   $259 = $258 | 1;
   HEAP8[$256>>0] = $259;
   $674 = $result;
   STACKTOP = sp;return ($674|0);
   break;
  }
  case 17:  {
   $260 = $2;
   $261 = HEAP8[$260>>0]|0;
   $262 = (__is_identifier_char($261)|0);
   $263 = ($262<<24>>24)!=(0);
   if (!($263)) {
    $264 = $2;
    HEAP8[$264>>0] = 27;
   }
   $265 = $0;
   $266 = $2;
   $267 = (__search_identifier_in_scope_chain($265,0,$266,0,0,0)|0);
   $glbsyminscope = $267;
   $268 = $glbsyminscope;
   $269 = ($268|0)!=(0|0);
   if ($269) {
    $270 = $glbsyminscope;
    $271 = HEAPU8[$270>>0]|(HEAPU8[$270+1>>0]<<8)|(HEAPU8[$270+2>>0]<<16)|(HEAPU8[$270+3>>0]<<24);
    $272 = HEAPU8[$271>>0]|(HEAPU8[$271+1>>0]<<8)|(HEAPU8[$271+2>>0]<<16)|(HEAPU8[$271+3>>0]<<24);
    $273 = ($272|0)==(17);
    if ($273) {
     $274 = $glbsyminscope;
     $275 = HEAPU8[$274>>0]|(HEAPU8[$274+1>>0]<<8)|(HEAPU8[$274+2>>0]<<16)|(HEAPU8[$274+3>>0]<<24);
     $276 = ((($275)) + 4|0);
     $277 = HEAPU8[$276>>0]|(HEAPU8[$276+1>>0]<<8)|(HEAPU8[$276+2>>0]<<16)|(HEAPU8[$276+3>>0]<<24);
     $278 = $3;
     $279 = HEAP32[$278>>2]|0;
     $280 = ((($279)) + 4|0);
     HEAP8[$280>>0]=$277&255;HEAP8[$280+1>>0]=($277>>8)&255;HEAP8[$280+2>>0]=($277>>16)&255;HEAP8[$280+3>>0]=$277>>24;
     $281 = $3;
     $282 = HEAP32[$281>>2]|0;
     $283 = ((($282)) + 8|0);
     $284 = HEAP8[$283>>0]|0;
     $285 = $284 & -2;
     $286 = $285 | 1;
     HEAP8[$283>>0] = $286;
     $287 = $5;
     HEAP8[$287>>0] = 1;
     $288 = $running;
     $289 = $3;
     $290 = HEAP32[$289>>2]|0;
     $291 = ((($290)) + 4|0);
     $292 = HEAPU8[$291>>0]|(HEAPU8[$291+1>>0]<<8)|(HEAPU8[$291+2>>0]<<16)|(HEAPU8[$291+3>>0]<<24);
     $293 = HEAPU8[$292>>0]|(HEAPU8[$292+1>>0]<<8)|(HEAPU8[$292+2>>0]<<16)|(HEAPU8[$292+3>>0]<<24);
     $294 = ($288|0)!=($293|0);
     if (!($294)) {
      $674 = $result;
      STACKTOP = sp;return ($674|0);
     }
     $295 = $context;
     $296 = ((($295)) + 160|0);
     $297 = HEAPU8[$296>>0]|(HEAPU8[$296+1>>0]<<8);
     $298 = $297&65535;
     $299 = ($298|0)!=(0);
     if (!($299)) {
      $674 = $result;
      STACKTOP = sp;return ($674|0);
     }
     $300 = $context;
     $301 = ((($300)) + 142|0);
     $302 = HEAPU8[$301>>0]|(HEAPU8[$301+1>>0]<<8)|(HEAPU8[$301+2>>0]<<16)|(HEAPU8[$301+3>>0]<<24);
     $303 = HEAPU8[$302>>0]|(HEAPU8[$302+1>>0]<<8)|(HEAPU8[$302+2>>0]<<16)|(HEAPU8[$302+3>>0]<<24);
     $304 = ($303|0)==(8);
     if (!($304)) {
      $674 = $result;
      STACKTOP = sp;return ($674|0);
     }
     $305 = $context;
     $306 = ((($305)) + 142|0);
     $307 = HEAPU8[$306>>0]|(HEAPU8[$306+1>>0]<<8)|(HEAPU8[$306+2>>0]<<16)|(HEAPU8[$306+3>>0]<<24);
     $308 = ((($307)) + 4|0);
     $309 = HEAPU8[$308>>0]|(HEAPU8[$308+1>>0]<<8)|(HEAPU8[$308+2>>0]<<16)|(HEAPU8[$308+3>>0]<<24);
     $310 = ((($309)) + 4|0);
     $311 = HEAPU8[$310>>0]|(HEAPU8[$310+1>>0]<<8)|(HEAPU8[$310+2>>0]<<16)|(HEAPU8[$310+3>>0]<<24);
     $312 = ($311|0)==(42|0);
     if (!($312)) {
      $674 = $result;
      STACKTOP = sp;return ($674|0);
     }
     $313 = $0;
     $314 = $3;
     $315 = HEAP32[$314>>2]|0;
     $316 = ((($315)) + 4|0);
     $317 = HEAPU8[$316>>0]|(HEAPU8[$316+1>>0]<<8)|(HEAPU8[$316+2>>0]<<16)|(HEAPU8[$316+3>>0]<<24);
     $318 = HEAPU8[$317>>0]|(HEAPU8[$317+1>>0]<<8)|(HEAPU8[$317+2>>0]<<16)|(HEAPU8[$317+3>>0]<<24);
     (__push_scope_by_routine($313,$318)|0);
     $674 = $result;
     STACKTOP = sp;return ($674|0);
    }
   }
   $tba = 0;
   $319 = (_mb_malloc(62)|0);
   HEAP8[$tmp>>0]=$319&255;HEAP8[$tmp+1>>0]=($319>>8)&255;HEAP8[$tmp+2>>0]=($319>>16)&255;HEAP8[$tmp+3>>0]=$319>>24;
   $320 = $0;
   $321 = HEAPU8[$tmp>>0]|(HEAPU8[$tmp+1>>0]<<8)|(HEAPU8[$tmp+2>>0]<<16)|(HEAPU8[$tmp+3>>0]<<24);
   $322 = $2;
   __init_routine($320,$321,$322,0);
   $323 = $0;
   $324 = HEAPU8[$tmp>>0]|(HEAPU8[$tmp+1>>0]<<8)|(HEAPU8[$tmp+2>>0]<<16)|(HEAPU8[$tmp+3>>0]<<24);
   $325 = HEAPU8[$324>>0]|(HEAPU8[$324+1>>0]<<8)|(HEAPU8[$324+2>>0]<<16)|(HEAPU8[$324+3>>0]<<24);
   (__push_scope_by_routine($323,$325)|0);
   $326 = HEAPU8[$tmp>>0]|(HEAPU8[$tmp+1>>0]<<8)|(HEAPU8[$tmp+2>>0]<<16)|(HEAPU8[$tmp+3>>0]<<24);
   $327 = $3;
   $328 = HEAP32[$327>>2]|0;
   $329 = ((($328)) + 4|0);
   HEAP8[$329>>0]=$326&255;HEAP8[$329+1>>0]=($326>>8)&255;HEAP8[$329+2>>0]=($326>>16)&255;HEAP8[$329+3>>0]=$326>>24;
   $330 = $0;
   $331 = (__get_scope_to_add_routine($330)|0);
   $tba = $331;
   $332 = $tba;
   $333 = ((($332)) + 8|0);
   $334 = HEAPU8[$333>>0]|(HEAPU8[$333+1>>0]<<8)|(HEAPU8[$333+2>>0]<<16)|(HEAPU8[$333+3>>0]<<24);
   $335 = $2;
   $336 = $3;
   $337 = HEAP32[$336>>2]|0;
   $338 = (__ht_set_or_insert($334,$335,$337)|0);
   $ul = $338;
   $339 = $ul;
   $340 = ($339|0)!=(0);
   if (!($340)) {
    ___assert_fail((8058|0),(4322|0),5365,(8043|0));
    // unreachable;
   }
   $341 = $tba;
   $342 = $running;
   $343 = HEAPU8[$342>>0]|(HEAPU8[$342+1>>0]<<8)|(HEAPU8[$342+2>>0]<<16)|(HEAPU8[$342+3>>0]<<24);
   $344 = ($343|0)!=(0|0);
   $345 = $running;
   if ($344) {
    $346 = HEAPU8[$345>>0]|(HEAPU8[$345+1>>0]<<8)|(HEAPU8[$345+2>>0]<<16)|(HEAPU8[$345+3>>0]<<24);
    $348 = $346;
   } else {
    $348 = $345;
   }
   $347 = ($341|0)!=($348|0);
   if ($347) {
    $349 = $tba;
    $350 = $running;
    $351 = ($349|0)!=($350|0);
    if ($351) {
     $352 = $0;
     (__pop_scope($352,0)|0);
    }
   }
   $353 = (__create_object()|0);
   $354 = $3;
   HEAP32[$354>>2] = $353;
   $355 = $type;
   $356 = $3;
   $357 = HEAP32[$356>>2]|0;
   HEAP8[$357>>0]=$355&255;HEAP8[$357+1>>0]=($355>>8)&255;HEAP8[$357+2>>0]=($355>>16)&255;HEAP8[$357+3>>0]=$355>>24;
   $358 = HEAPU8[$tmp>>0]|(HEAPU8[$tmp+1>>0]<<8)|(HEAPU8[$tmp+2>>0]<<16)|(HEAPU8[$tmp+3>>0]<<24);
   $359 = $3;
   $360 = HEAP32[$359>>2]|0;
   $361 = ((($360)) + 4|0);
   HEAP8[$361>>0]=$358&255;HEAP8[$361+1>>0]=($358>>8)&255;HEAP8[$361+2>>0]=($358>>16)&255;HEAP8[$361+3>>0]=$358>>24;
   $362 = $3;
   $363 = HEAP32[$362>>2]|0;
   $364 = ((($363)) + 8|0);
   $365 = HEAP8[$364>>0]|0;
   $366 = $365 & -2;
   $367 = $366 | 1;
   HEAP8[$364>>0] = $367;
   $368 = $0;
   $369 = ((($368)) + 93|0);
   $370 = HEAPU8[$369>>0]|(HEAPU8[$369+1>>0]<<8)|(HEAPU8[$369+2>>0]<<16)|(HEAPU8[$369+3>>0]<<24);
   $371 = HEAPU8[$tmp>>0]|(HEAPU8[$tmp+1>>0]<<8)|(HEAPU8[$tmp+2>>0]<<16)|(HEAPU8[$tmp+3>>0]<<24);
   $372 = ((($371)) + 53|0);
   HEAP8[$372>>0]=$370&255;HEAP8[$372+1>>0]=($370>>8)&255;HEAP8[$372+2>>0]=($370>>16)&255;HEAP8[$372+3>>0]=$370>>24;
   $674 = $result;
   STACKTOP = sp;return ($674|0);
   break;
  }
  case 9:  {
   $373 = $context;
   $374 = ((($373)) + 162|0);
   $375 = HEAPU8[$374>>0]|(HEAPU8[$374+1>>0]<<8);
   $376 = $375&65535;
   $377 = ($376|0)==(2);
   if ($377) {
    $378 = $running;
    $379 = ((($378)) + 8|0);
    $380 = HEAPU8[$379>>0]|(HEAPU8[$379+1>>0]<<8)|(HEAPU8[$379+2>>0]<<16)|(HEAPU8[$379+3>>0]<<24);
    $381 = $2;
    $382 = (__ht_find($380,$381)|0);
    $glbsyminscope = $382;
   } else {
    $383 = $0;
    $384 = $2;
    $385 = (__search_identifier_in_scope_chain($383,0,$384,0,0,0)|0);
    $glbsyminscope = $385;
   }
   $386 = $context;
   $387 = ((($386)) + 142|0);
   $388 = HEAPU8[$387>>0]|(HEAPU8[$387+1>>0]<<8)|(HEAPU8[$387+2>>0]<<16)|(HEAPU8[$387+3>>0]<<24);
   $389 = ($388|0)!=(0|0);
   if ($389) {
    $390 = $context;
    $391 = ((($390)) + 142|0);
    $392 = HEAPU8[$391>>0]|(HEAPU8[$391+1>>0]<<8)|(HEAPU8[$391+2>>0]<<16)|(HEAPU8[$391+3>>0]<<24);
    $393 = HEAPU8[$392>>0]|(HEAPU8[$392+1>>0]<<8)|(HEAPU8[$392+2>>0]<<16)|(HEAPU8[$392+3>>0]<<24);
    $394 = ($393|0)==(8);
    if ($394) {
     $395 = $context;
     $396 = ((($395)) + 142|0);
     $397 = HEAPU8[$396>>0]|(HEAPU8[$396+1>>0]<<8)|(HEAPU8[$396+2>>0]<<16)|(HEAPU8[$396+3>>0]<<24);
     $398 = ((($397)) + 4|0);
     $399 = HEAPU8[$398>>0]|(HEAPU8[$398+1>>0]<<8)|(HEAPU8[$398+2>>0]<<16)|(HEAPU8[$398+3>>0]<<24);
     $400 = ((($399)) + 4|0);
     $401 = HEAPU8[$400>>0]|(HEAPU8[$400+1>>0]<<8)|(HEAPU8[$400+2>>0]<<16)|(HEAPU8[$400+3>>0]<<24);
     $402 = ($401|0)==(48|0);
     $404 = $402;
    } else {
     $404 = 0;
    }
   } else {
    $404 = 0;
   }
   $403 = $404&1;
   $405 = $403&255;
   $is_field = $405;
   $406 = $is_field;
   $407 = ($406<<24>>24)==(0);
   $408 = $glbsyminscope;
   $409 = ($408|0)!=(0|0);
   $or$cond7 = $407 & $409;
   if ($or$cond7) {
    $410 = $glbsyminscope;
    $411 = HEAPU8[$410>>0]|(HEAPU8[$410+1>>0]<<8)|(HEAPU8[$410+2>>0]<<16)|(HEAPU8[$410+3>>0]<<24);
    $412 = HEAPU8[$411>>0]|(HEAPU8[$411+1>>0]<<8)|(HEAPU8[$411+2>>0]<<16)|(HEAPU8[$411+3>>0]<<24);
    $413 = ($412|0)==(9);
    if ($413) {
     $414 = $glbsyminscope;
     $415 = HEAPU8[$414>>0]|(HEAPU8[$414+1>>0]<<8)|(HEAPU8[$414+2>>0]<<16)|(HEAPU8[$414+3>>0]<<24);
     $416 = ((($415)) + 4|0);
     $417 = HEAPU8[$416>>0]|(HEAPU8[$416+1>>0]<<8)|(HEAPU8[$416+2>>0]<<16)|(HEAPU8[$416+3>>0]<<24);
     $418 = $3;
     $419 = HEAP32[$418>>2]|0;
     $420 = ((($419)) + 4|0);
     HEAP8[$420>>0]=$417&255;HEAP8[$420+1>>0]=($417>>8)&255;HEAP8[$420+2>>0]=($417>>16)&255;HEAP8[$420+3>>0]=$417>>24;
     $421 = $3;
     $422 = HEAP32[$421>>2]|0;
     $423 = ((($422)) + 8|0);
     $424 = HEAP8[$423>>0]|0;
     $425 = $424 & -2;
     $426 = $425 | 1;
     HEAP8[$423>>0] = $426;
     $427 = $5;
     HEAP8[$427>>0] = 1;
     $674 = $result;
     STACKTOP = sp;return ($674|0);
    }
   }
   $428 = $2;
   $429 = (_strcmp($428,8061)|0);
   $430 = ($429|0)==(0);
   if (!($430)) {
    $523 = (_mb_malloc(9)|0);
    HEAP8[$tmp>>0]=$523&255;HEAP8[$tmp+1>>0]=($523>>8)&255;HEAP8[$tmp+2>>0]=($523>>16)&255;HEAP8[$tmp+3>>0]=$523>>24;
    $524 = HEAPU8[$tmp>>0]|(HEAPU8[$tmp+1>>0]<<8)|(HEAPU8[$tmp+2>>0]<<16)|(HEAPU8[$tmp+3>>0]<<24);
    dest=$524; stop=dest+9|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
    $525 = $2;
    $526 = HEAPU8[$tmp>>0]|(HEAPU8[$tmp+1>>0]<<8)|(HEAPU8[$tmp+2>>0]<<16)|(HEAPU8[$tmp+3>>0]<<24);
    HEAP8[$526>>0]=$525&255;HEAP8[$526+1>>0]=($525>>8)&255;HEAP8[$526+2>>0]=($525>>16)&255;HEAP8[$526+3>>0]=$525>>24;
    $527 = (__create_object()|0);
    $528 = HEAPU8[$tmp>>0]|(HEAPU8[$tmp+1>>0]<<8)|(HEAPU8[$tmp+2>>0]<<16)|(HEAPU8[$tmp+3>>0]<<24);
    $529 = ((($528)) + 4|0);
    HEAP8[$529>>0]=$527&255;HEAP8[$529+1>>0]=($527>>8)&255;HEAP8[$529+2>>0]=($527>>16)&255;HEAP8[$529+3>>0]=$527>>24;
    $530 = $2;
    $531 = (_strlen($530)|0);
    $532 = (($531) - 1)|0;
    $533 = $2;
    $534 = (($533) + ($532)|0);
    $535 = HEAP8[$534>>0]|0;
    $536 = $535 << 24 >> 24;
    $537 = ($536|0)==(36);
    $538 = $537 ? 4 : 2;
    $539 = HEAPU8[$tmp>>0]|(HEAPU8[$tmp+1>>0]<<8)|(HEAPU8[$tmp+2>>0]<<16)|(HEAPU8[$tmp+3>>0]<<24);
    $540 = ((($539)) + 4|0);
    $541 = HEAPU8[$540>>0]|(HEAPU8[$540+1>>0]<<8)|(HEAPU8[$540+2>>0]<<16)|(HEAPU8[$540+3>>0]<<24);
    HEAP8[$541>>0]=$538&255;HEAP8[$541+1>>0]=($538>>8)&255;HEAP8[$541+2>>0]=($538>>16)&255;HEAP8[$541+3>>0]=$538>>24;
    $542 = HEAPU8[$tmp>>0]|(HEAPU8[$tmp+1>>0]<<8)|(HEAPU8[$tmp+2>>0]<<16)|(HEAPU8[$tmp+3>>0]<<24);
    $543 = ((($542)) + 4|0);
    $544 = HEAPU8[$543>>0]|(HEAPU8[$543+1>>0]<<8)|(HEAPU8[$543+2>>0]<<16)|(HEAPU8[$543+3>>0]<<24);
    $545 = ((($544)) + 4|0);
    HEAP8[$545>>0]=0&255;HEAP8[$545+1>>0]=(0>>8)&255;HEAP8[$545+2>>0]=(0>>16)&255;HEAP8[$545+3>>0]=0>>24;
    $546 = $context;
    $547 = ((($546)) + 158|0);
    $548 = HEAPU8[$547>>0]|(HEAPU8[$547+1>>0]<<8);
    $549 = $548&65535;
    $550 = ($549|0)!=(0);
    if ($550) {
     $551 = HEAPU8[$tmp>>0]|(HEAPU8[$tmp+1>>0]<<8)|(HEAPU8[$tmp+2>>0]<<16)|(HEAPU8[$tmp+3>>0]<<24);
     $552 = ((($551)) + 8|0);
     $553 = HEAP8[$552>>0]|0;
     $554 = $553 & -4;
     $555 = $554 | 1;
     HEAP8[$552>>0] = $555;
    } else {
     $556 = $is_field;
     $557 = ($556<<24>>24)!=(0);
     if (!($557)) {
      $558 = $context;
      $559 = ((($558)) + 138|0);
      $560 = HEAPU8[$559>>0]|(HEAPU8[$559+1>>0]<<8)|(HEAPU8[$559+2>>0]<<16)|(HEAPU8[$559+3>>0]<<24);
      $561 = ($560|0)!=(0);
      $562 = $561 ? 1 : 0;
      $563 = $562&255;
      $564 = HEAPU8[$tmp>>0]|(HEAPU8[$tmp+1>>0]<<8)|(HEAPU8[$tmp+2>>0]<<16)|(HEAPU8[$tmp+3>>0]<<24);
      $565 = ((($564)) + 8|0);
      $566 = HEAP8[$565>>0]|0;
      $567 = $563 & 3;
      $568 = $566 & -4;
      $569 = $568 | $567;
      HEAP8[$565>>0] = $569;
     }
    }
    $570 = HEAPU8[$tmp>>0]|(HEAPU8[$tmp+1>>0]<<8)|(HEAPU8[$tmp+2>>0]<<16)|(HEAPU8[$tmp+3>>0]<<24);
    $571 = $3;
    $572 = HEAP32[$571>>2]|0;
    $573 = ((($572)) + 4|0);
    HEAP8[$573>>0]=$570&255;HEAP8[$573+1>>0]=($570>>8)&255;HEAP8[$573+2>>0]=($570>>16)&255;HEAP8[$573+3>>0]=$570>>24;
    $574 = $running;
    $575 = ((($574)) + 8|0);
    $576 = HEAPU8[$575>>0]|(HEAPU8[$575+1>>0]<<8)|(HEAPU8[$575+2>>0]<<16)|(HEAPU8[$575+3>>0]<<24);
    $577 = $2;
    $578 = $3;
    $579 = HEAP32[$578>>2]|0;
    $580 = (__ht_set_or_insert($576,$577,$579)|0);
    $ul = $580;
    $581 = $ul;
    $582 = ($581|0)!=(0);
    if (!($582)) {
     ___assert_fail((8058|0),(4322|0),5417,(8043|0));
     // unreachable;
    }
    $583 = (__create_object()|0);
    $584 = $3;
    HEAP32[$584>>2] = $583;
    $585 = $type;
    $586 = $3;
    $587 = HEAP32[$586>>2]|0;
    HEAP8[$587>>0]=$585&255;HEAP8[$587+1>>0]=($585>>8)&255;HEAP8[$587+2>>0]=($585>>16)&255;HEAP8[$587+3>>0]=$585>>24;
    $588 = HEAPU8[$tmp>>0]|(HEAPU8[$tmp+1>>0]<<8)|(HEAPU8[$tmp+2>>0]<<16)|(HEAPU8[$tmp+3>>0]<<24);
    $589 = $3;
    $590 = HEAP32[$589>>2]|0;
    $591 = ((($590)) + 4|0);
    HEAP8[$591>>0]=$588&255;HEAP8[$591+1>>0]=($588>>8)&255;HEAP8[$591+2>>0]=($588>>16)&255;HEAP8[$591+3>>0]=$588>>24;
    $592 = $3;
    $593 = HEAP32[$592>>2]|0;
    $594 = ((($593)) + 8|0);
    $595 = HEAP8[$594>>0]|0;
    $596 = $595 & -2;
    $597 = $596 | 1;
    HEAP8[$594>>0] = $597;
    $674 = $result;
    STACKTOP = sp;return ($674|0);
   }
   $431 = $0;
   $432 = $0;
   $433 = ((($432)) + 67|0);
   $434 = HEAPU8[$433>>0]|(HEAPU8[$433+1>>0]<<8)|(HEAPU8[$433+2>>0]<<16)|(HEAPU8[$433+3>>0]<<24);
   (__set_current_error($431,24,$434)|0);
   $435 = $0;
   $436 = ((($435)) + 163|0);
   $437 = HEAPU8[$436>>0]|(HEAPU8[$436+1>>0]<<8)|(HEAPU8[$436+2>>0]<<16)|(HEAPU8[$436+3>>0]<<24);
   $438 = ($437|0)!=(0|0);
   if ($438) {
    $439 = $0;
    $440 = ((($439)) + 134|0);
    $441 = HEAP8[$440>>0]|0;
    $442 = $441 & 1;
    $443 = ($442<<24>>24)!=(0);
    if (!($443)) {
     $444 = $0;
     $445 = ((($444)) + 134|0);
     $446 = HEAP8[$445>>0]|0;
     $447 = $446 & -2;
     $448 = $447 | 1;
     HEAP8[$445>>0] = $448;
     $449 = $0;
     $450 = ((($449)) + 163|0);
     $451 = HEAPU8[$450>>0]|(HEAPU8[$450+1>>0]<<8)|(HEAPU8[$450+2>>0]<<16)|(HEAPU8[$450+3>>0]<<24);
     $452 = $0;
     $453 = $0;
     $454 = ((($453)) + 135|0);
     $455 = HEAPU8[$454>>0]|(HEAPU8[$454+1>>0]<<8)|(HEAPU8[$454+2>>0]<<16)|(HEAPU8[$454+3>>0]<<24);
     $456 = $0;
     $457 = ((($456)) + 135|0);
     $458 = HEAPU8[$457>>0]|(HEAPU8[$457+1>>0]<<8)|(HEAPU8[$457+2>>0]<<16)|(HEAPU8[$457+3>>0]<<24);
     $459 = (_mb_get_error_desc($458)|0);
     $460 = $0;
     $461 = ((($460)) + 139|0);
     $462 = HEAPU8[$461>>0]|(HEAPU8[$461+1>>0]<<8)|(HEAPU8[$461+2>>0]<<16)|(HEAPU8[$461+3>>0]<<24);
     $463 = $0;
     $464 = ((($463)) + 71|0);
     $465 = HEAPU8[$464>>0]|(HEAPU8[$464+1>>0]<<8)|(HEAPU8[$464+2>>0]<<16)|(HEAPU8[$464+3>>0]<<24);
     $466 = ($465|0)!=(0|0);
     if ($466) {
      $467 = $0;
      $468 = ((($467)) + 79|0);
      $469 = HEAPU8[$468>>0]|(HEAPU8[$468+1>>0]<<8)|(HEAPU8[$468+2>>0]<<16)|(HEAPU8[$468+3>>0]<<24);
      $470 = ($469|0)!=(0);
      if ($470) {
       label = 74;
      } else {
       $471 = $0;
       $472 = ((($471)) + 71|0);
       $473 = HEAPU8[$472>>0]|(HEAPU8[$472+1>>0]<<8)|(HEAPU8[$472+2>>0]<<16)|(HEAPU8[$472+3>>0]<<24);
       $474 = ((($473)) + 164|0);
       $475 = HEAPU8[$474>>0]|(HEAPU8[$474+1>>0]<<8)|(HEAPU8[$474+2>>0]<<16)|(HEAPU8[$474+3>>0]<<24);
       $515 = $475;
      }
     } else {
      label = 74;
     }
     if ((label|0) == 74) {
      $476 = $0;
      $477 = ((($476)) + 143|0);
      $478 = HEAPU8[$477>>0]|(HEAPU8[$477+1>>0]<<8)|(HEAPU8[$477+2>>0]<<16)|(HEAPU8[$477+3>>0]<<24);
      $515 = $478;
     }
     $479 = $0;
     $480 = ((($479)) + 71|0);
     $481 = HEAPU8[$480>>0]|(HEAPU8[$480+1>>0]<<8)|(HEAPU8[$480+2>>0]<<16)|(HEAPU8[$480+3>>0]<<24);
     $482 = ($481|0)!=(0|0);
     if ($482) {
      $483 = $0;
      $484 = ((($483)) + 79|0);
      $485 = HEAPU8[$484>>0]|(HEAPU8[$484+1>>0]<<8)|(HEAPU8[$484+2>>0]<<16)|(HEAPU8[$484+3>>0]<<24);
      $486 = ($485|0)!=(0);
      if ($486) {
       label = 78;
      } else {
       $487 = $0;
       $488 = ((($487)) + 71|0);
       $489 = HEAPU8[$488>>0]|(HEAPU8[$488+1>>0]<<8)|(HEAPU8[$488+2>>0]<<16)|(HEAPU8[$488+3>>0]<<24);
       $490 = ((($489)) + 168|0);
       $491 = HEAPU8[$490>>0]|(HEAPU8[$490+1>>0]<<8);
       $$sink = $491;
      }
     } else {
      label = 78;
     }
     if ((label|0) == 78) {
      $492 = $0;
      $493 = ((($492)) + 147|0);
      $494 = HEAPU8[$493>>0]|(HEAPU8[$493+1>>0]<<8);
      $$sink = $494;
     }
     $495 = $$sink&65535;
     $496 = $495&65535;
     $497 = $0;
     $498 = ((($497)) + 71|0);
     $499 = HEAPU8[$498>>0]|(HEAPU8[$498+1>>0]<<8)|(HEAPU8[$498+2>>0]<<16)|(HEAPU8[$498+3>>0]<<24);
     $500 = ($499|0)!=(0|0);
     if ($500) {
      $501 = $0;
      $502 = ((($501)) + 79|0);
      $503 = HEAPU8[$502>>0]|(HEAPU8[$502+1>>0]<<8)|(HEAPU8[$502+2>>0]<<16)|(HEAPU8[$502+3>>0]<<24);
      $504 = ($503|0)!=(0);
      if ($504) {
       label = 82;
      } else {
       $505 = $0;
       $506 = ((($505)) + 71|0);
       $507 = HEAPU8[$506>>0]|(HEAPU8[$506+1>>0]<<8)|(HEAPU8[$506+2>>0]<<16)|(HEAPU8[$506+3>>0]<<24);
       $508 = ((($507)) + 170|0);
       $509 = HEAPU8[$508>>0]|(HEAPU8[$508+1>>0]<<8);
       $$sink8 = $509;
      }
     } else {
      label = 82;
     }
     if ((label|0) == 82) {
      $510 = $0;
      $511 = ((($510)) + 149|0);
      $512 = HEAPU8[$511>>0]|(HEAPU8[$511+1>>0]<<8);
      $$sink8 = $512;
     }
     $513 = $$sink8&65535;
     $514 = $513&65535;
     FUNCTION_TABLE_viiiiiiii[$451 & 127]($452,$455,$459,$462,$515,$496,$514,3);
    }
   }
   $516 = $3;
   $517 = HEAP32[$516>>2]|0;
   $518 = ((($517)) + 8|0);
   $519 = HEAP8[$518>>0]|0;
   $520 = $519 & -2;
   $521 = $520 | 1;
   HEAP8[$518>>0] = $521;
   $522 = $5;
   HEAP8[$522>>0] = 1;
   $674 = $result;
   STACKTOP = sp;return ($674|0);
   break;
  }
  case 15:  {
   $598 = $context;
   $599 = ((($598)) + 4|0);
   $600 = HEAP8[$599>>0]|0;
   $601 = $600 << 24 >> 24;
   $602 = ($601|0)==(58);
   if (!($602)) {
    $650 = (_mb_malloc(8)|0);
    $651 = $3;
    $652 = HEAP32[$651>>2]|0;
    $653 = ((($652)) + 4|0);
    HEAP8[$653>>0]=$650&255;HEAP8[$653+1>>0]=($650>>8)&255;HEAP8[$653+2>>0]=($650>>16)&255;HEAP8[$653+3>>0]=$650>>24;
    $654 = $3;
    $655 = HEAP32[$654>>2]|0;
    $656 = ((($655)) + 4|0);
    $657 = HEAPU8[$656>>0]|(HEAPU8[$656+1>>0]<<8)|(HEAPU8[$656+2>>0]<<16)|(HEAPU8[$656+3>>0]<<24);
    ;HEAP8[$657>>0]=0|0;HEAP8[$657+1>>0]=0|0;HEAP8[$657+2>>0]=0|0;HEAP8[$657+3>>0]=0|0;HEAP8[$657+4>>0]=0|0;HEAP8[$657+5>>0]=0|0;HEAP8[$657+6>>0]=0|0;HEAP8[$657+7>>0]=0|0;
    $658 = $2;
    $659 = $3;
    $660 = HEAP32[$659>>2]|0;
    $661 = ((($660)) + 4|0);
    $662 = HEAPU8[$661>>0]|(HEAPU8[$661+1>>0]<<8)|(HEAPU8[$661+2>>0]<<16)|(HEAPU8[$661+3>>0]<<24);
    HEAP8[$662>>0]=$658&255;HEAP8[$662+1>>0]=($658>>8)&255;HEAP8[$662+2>>0]=($658>>16)&255;HEAP8[$662+3>>0]=$658>>24;
    $674 = $result;
    STACKTOP = sp;return ($674|0);
   }
   $603 = (_mb_memtest($value,4)|0);
   $604 = ($603|0)!=(0);
   if ($604) {
    $605 = $3;
    $606 = HEAP32[$605>>2]|0;
    $607 = ((($606)) + 4|0);
    ;HEAP8[$607>>0]=HEAP8[$value>>0]|0;HEAP8[$607+1>>0]=HEAP8[$value+1>>0]|0;HEAP8[$607+2>>0]=HEAP8[$value+2>>0]|0;HEAP8[$607+3>>0]=HEAP8[$value+3>>0]|0;
    $608 = $3;
    $609 = HEAP32[$608>>2]|0;
    $610 = ((($609)) + 8|0);
    $611 = HEAP8[$610>>0]|0;
    $612 = $611 & -2;
    $613 = $612 | 1;
    HEAP8[$610>>0] = $613;
    $614 = $5;
    HEAP8[$614>>0] = 1;
    $674 = $result;
    STACKTOP = sp;return ($674|0);
   }
   $615 = (_mb_malloc(8)|0);
   HEAP8[$tmp>>0]=$615&255;HEAP8[$tmp+1>>0]=($615>>8)&255;HEAP8[$tmp+2>>0]=($615>>16)&255;HEAP8[$tmp+3>>0]=$615>>24;
   $616 = HEAPU8[$tmp>>0]|(HEAPU8[$tmp+1>>0]<<8)|(HEAPU8[$tmp+2>>0]<<16)|(HEAPU8[$tmp+3>>0]<<24);
   ;HEAP8[$616>>0]=0|0;HEAP8[$616+1>>0]=0|0;HEAP8[$616+2>>0]=0|0;HEAP8[$616+3>>0]=0|0;HEAP8[$616+4>>0]=0|0;HEAP8[$616+5>>0]=0|0;HEAP8[$616+6>>0]=0|0;HEAP8[$616+7>>0]=0|0;
   $617 = $2;
   $618 = HEAPU8[$tmp>>0]|(HEAPU8[$tmp+1>>0]<<8)|(HEAPU8[$tmp+2>>0]<<16)|(HEAPU8[$tmp+3>>0]<<24);
   HEAP8[$618>>0]=$617&255;HEAP8[$618+1>>0]=($617>>8)&255;HEAP8[$618+2>>0]=($617>>16)&255;HEAP8[$618+3>>0]=$617>>24;
   $619 = HEAPU8[$tmp>>0]|(HEAPU8[$tmp+1>>0]<<8)|(HEAPU8[$tmp+2>>0]<<16)|(HEAPU8[$tmp+3>>0]<<24);
   $620 = ((($619)) + 4|0);
   $621 = $4;
   HEAP32[$621>>2] = $620;
   $622 = HEAPU8[$tmp>>0]|(HEAPU8[$tmp+1>>0]<<8)|(HEAPU8[$tmp+2>>0]<<16)|(HEAPU8[$tmp+3>>0]<<24);
   $623 = $3;
   $624 = HEAP32[$623>>2]|0;
   $625 = ((($624)) + 4|0);
   HEAP8[$625>>0]=$622&255;HEAP8[$625+1>>0]=($622>>8)&255;HEAP8[$625+2>>0]=($622>>16)&255;HEAP8[$625+3>>0]=$622>>24;
   $626 = $running;
   $627 = ((($626)) + 8|0);
   $628 = HEAPU8[$627>>0]|(HEAPU8[$627+1>>0]<<8)|(HEAPU8[$627+2>>0]<<16)|(HEAPU8[$627+3>>0]<<24);
   $629 = $2;
   $630 = $3;
   $631 = HEAP32[$630>>2]|0;
   $632 = (__ht_set_or_insert($628,$629,$631)|0);
   $ul = $632;
   $633 = $ul;
   $634 = ($633|0)!=(0);
   if (!($634)) {
    ___assert_fail((8058|0),(4322|0),5440,(8043|0));
    // unreachable;
   }
   $635 = (__create_object()|0);
   $636 = $3;
   HEAP32[$636>>2] = $635;
   $637 = $type;
   $638 = $3;
   $639 = HEAP32[$638>>2]|0;
   HEAP8[$639>>0]=$637&255;HEAP8[$639+1>>0]=($637>>8)&255;HEAP8[$639+2>>0]=($637>>16)&255;HEAP8[$639+3>>0]=$637>>24;
   $640 = HEAPU8[$tmp>>0]|(HEAPU8[$tmp+1>>0]<<8)|(HEAPU8[$tmp+2>>0]<<16)|(HEAPU8[$tmp+3>>0]<<24);
   $641 = $3;
   $642 = HEAP32[$641>>2]|0;
   $643 = ((($642)) + 4|0);
   HEAP8[$643>>0]=$640&255;HEAP8[$643+1>>0]=($640>>8)&255;HEAP8[$643+2>>0]=($640>>16)&255;HEAP8[$643+3>>0]=$640>>24;
   $644 = $3;
   $645 = HEAP32[$644>>2]|0;
   $646 = ((($645)) + 8|0);
   $647 = HEAP8[$646>>0]|0;
   $648 = $647 & -2;
   $649 = $648 | 1;
   HEAP8[$646>>0] = $649;
   $674 = $result;
   STACKTOP = sp;return ($674|0);
   break;
  }
  case 19:  {
   $663 = $2;
   $664 = HEAP8[$663>>0]|0;
   $665 = $3;
   $666 = HEAP32[$665>>2]|0;
   $667 = ((($666)) + 4|0);
   HEAP8[$667>>0] = $664;
   $668 = $2;
   $669 = ($668|0)!=(0|0);
   if (!($669)) {
    ___assert_fail((4369|0),(4322|0),5456,(8043|0));
    // unreachable;
   }
   $670 = $2;
   _mb_free($670);
   $2 = 0;
   $674 = $result;
   STACKTOP = sp;return ($674|0);
   break;
  }
  case 22:  {
   $671 = $2;
   $672 = ($671|0)!=(0|0);
   if (!($672)) {
    ___assert_fail((4369|0),(4322|0),5460,(8043|0));
    // unreachable;
   }
   $673 = $2;
   _mb_free($673);
   $2 = 0;
   $674 = $result;
   STACKTOP = sp;return ($674|0);
   break;
  }
  default: {
   $674 = $result;
   STACKTOP = sp;return ($674|0);
  }
  }
 } while(0);
 return (0)|0;
}
function __get_symbol_type($s,$sym,$value) {
 $s = $s|0;
 $sym = $sym|0;
 $value = $value|0;
 var $$sink = 0, $$sink10 = 0, $$sink11 = 0, $$sink12 = 0, $$sink13 = 0, $$sink14 = 0, $$sink15 = 0, $$sink16 = 0, $$sink17 = 0, $$sink18 = 0, $$sink19 = 0, $$sink20 = 0, $$sink4 = 0, $$sink5 = 0, $$sink6 = 0, $$sink7 = 0, $$sink8 = 0, $$sink9 = 0, $0 = 0, $1 = 0;
 var $10 = 0, $100 = 0, $1000 = 0, $1001 = 0, $1002 = 0, $1003 = 0, $1004 = 0, $1005 = 0, $1006 = 0, $1007 = 0, $1008 = 0, $1009 = 0, $101 = 0, $1010 = 0, $1011 = 0, $1012 = 0, $1013 = 0, $1014 = 0, $1015 = 0, $1016 = 0;
 var $1017 = 0, $1018 = 0, $1019 = 0, $102 = 0, $1020 = 0, $1021 = 0, $1022 = 0, $1023 = 0, $1024 = 0, $1025 = 0, $1026 = 0, $1027 = 0, $1028 = 0, $1029 = 0, $103 = 0, $1030 = 0, $1031 = 0, $1032 = 0, $1033 = 0, $1034 = 0;
 var $1035 = 0, $1036 = 0, $1037 = 0, $1038 = 0, $1039 = 0, $104 = 0, $1040 = 0, $1041 = 0, $1042 = 0, $1043 = 0, $1044 = 0, $1045 = 0, $1046 = 0, $1047 = 0, $1048 = 0, $1049 = 0, $105 = 0, $1050 = 0, $1051 = 0, $1052 = 0;
 var $1053 = 0, $1054 = 0, $1055 = 0, $1056 = 0, $1057 = 0, $1058 = 0, $1059 = 0, $106 = 0, $1060 = 0, $1061 = 0, $1062 = 0, $1063 = 0, $1064 = 0, $1065 = 0, $1066 = 0, $1067 = 0, $1068 = 0, $1069 = 0, $107 = 0, $1070 = 0;
 var $1071 = 0, $1072 = 0, $1073 = 0, $1074 = 0, $1075 = 0, $1076 = 0, $1077 = 0, $1078 = 0, $1079 = 0, $108 = 0, $1080 = 0, $1081 = 0, $1082 = 0, $1083 = 0, $1084 = 0, $1085 = 0, $1086 = 0, $1087 = 0, $1088 = 0, $1089 = 0;
 var $109 = 0, $1090 = 0, $1091 = 0, $1092 = 0, $1093 = 0, $1094 = 0, $1095 = 0, $1096 = 0, $1097 = 0, $1098 = 0, $1099 = 0, $11 = 0, $110 = 0, $1100 = 0, $1101 = 0, $1102 = 0, $1103 = 0, $1104 = 0, $1105 = 0, $1106 = 0;
 var $1107 = 0, $1108 = 0, $1109 = 0, $111 = 0, $1110 = 0, $1111 = 0, $1112 = 0, $1113 = 0, $1114 = 0, $1115 = 0, $1116 = 0, $1117 = 0, $1118 = 0, $1119 = 0, $112 = 0, $1120 = 0, $1121 = 0, $1122 = 0, $1123 = 0, $1124 = 0;
 var $1125 = 0, $1126 = 0, $1127 = 0, $1128 = 0, $1129 = 0, $113 = 0, $1130 = 0, $1131 = 0, $1132 = 0, $1133 = 0, $1134 = 0, $1135 = 0, $1136 = 0, $1137 = 0, $1138 = 0, $1139 = 0, $114 = 0, $1140 = 0, $1141 = 0, $1142 = 0;
 var $1143 = 0, $1144 = 0, $1145 = 0, $1146 = 0, $1147 = 0, $1148 = 0, $1149 = 0, $115 = 0, $1150 = 0, $1151 = 0, $1152 = 0, $1153 = 0, $1154 = 0, $1155 = 0, $1156 = 0, $1157 = 0, $1158 = 0, $1159 = 0, $116 = 0, $1160 = 0;
 var $1161 = 0, $1162 = 0, $1163 = 0, $1164 = 0, $1165 = 0, $1166 = 0, $1167 = 0, $1168 = 0, $1169 = 0, $117 = 0, $1170 = 0, $1171 = 0, $1172 = 0, $1173 = 0, $1174 = 0, $1175 = 0, $1176 = 0, $1177 = 0, $1178 = 0, $1179 = 0;
 var $118 = 0, $1180 = 0, $1181 = 0, $1182 = 0, $1183 = 0, $1184 = 0, $1185 = 0, $1186 = 0, $1187 = 0, $1188 = 0, $1189 = 0, $119 = 0, $1190 = 0, $1191 = 0, $1192 = 0, $1193 = 0, $1194 = 0, $1195 = 0, $1196 = 0, $1197 = 0;
 var $1198 = 0, $1199 = 0, $12 = 0, $120 = 0, $1200 = 0, $1201 = 0, $1202 = 0, $1203 = 0, $1204 = 0, $1205 = 0, $1206 = 0, $1207 = 0, $1208 = 0, $1209 = 0, $121 = 0, $1210 = 0, $1211 = 0, $1212 = 0, $1213 = 0, $1214 = 0;
 var $1215 = 0, $1216 = 0, $1217 = 0, $1218 = 0, $1219 = 0, $122 = 0, $1220 = 0, $1221 = 0, $1222 = 0, $1223 = 0, $1224 = 0, $1225 = 0, $1226 = 0, $1227 = 0, $1228 = 0, $1229 = 0, $123 = 0, $1230 = 0, $1231 = 0, $1232 = 0;
 var $1233 = 0, $1234 = 0, $1235 = 0, $1236 = 0, $1237 = 0, $1238 = 0, $1239 = 0, $124 = 0, $1240 = 0, $1241 = 0, $1242 = 0, $1243 = 0, $1244 = 0, $1245 = 0, $1246 = 0, $1247 = 0, $1248 = 0, $1249 = 0, $125 = 0, $1250 = 0;
 var $1251 = 0, $1252 = 0, $1253 = 0, $1254 = 0, $1255 = 0, $1256 = 0, $1257 = 0, $1258 = 0, $1259 = 0, $126 = 0, $1260 = 0, $1261 = 0, $1262 = 0, $1263 = 0, $1264 = 0, $1265 = 0, $1266 = 0, $1267 = 0, $1268 = 0, $1269 = 0;
 var $127 = 0, $1270 = 0, $1271 = 0, $1272 = 0, $1273 = 0, $1274 = 0, $1275 = 0, $1276 = 0, $1277 = 0, $1278 = 0, $1279 = 0, $128 = 0, $1280 = 0, $1281 = 0, $1282 = 0, $1283 = 0, $1284 = 0, $1285 = 0, $1286 = 0, $1287 = 0;
 var $1288 = 0, $1289 = 0, $129 = 0, $1290 = 0, $1291 = 0, $1292 = 0, $1293 = 0, $1294 = 0, $1295 = 0, $1296 = 0, $1297 = 0, $1298 = 0, $1299 = 0, $13 = 0, $130 = 0, $1300 = 0, $1301 = 0, $1302 = 0, $1303 = 0, $1304 = 0;
 var $1305 = 0, $1306 = 0, $1307 = 0, $1308 = 0, $1309 = 0, $131 = 0, $1310 = 0, $1311 = 0, $1312 = 0, $1313 = 0, $1314 = 0, $1315 = 0, $1316 = 0, $1317 = 0, $1318 = 0, $1319 = 0, $132 = 0, $1320 = 0, $1321 = 0, $1322 = 0;
 var $1323 = 0, $1324 = 0, $1325 = 0, $1326 = 0, $1327 = 0, $1328 = 0, $1329 = 0, $133 = 0, $1330 = 0, $1331 = 0, $1332 = 0, $1333 = 0, $1334 = 0, $1335 = 0, $1336 = 0, $1337 = 0, $1338 = 0, $1339 = 0, $134 = 0, $1340 = 0;
 var $1341 = 0, $1342 = 0, $1343 = 0, $1344 = 0, $1345 = 0, $1346 = 0, $1347 = 0, $1348 = 0, $1349 = 0, $135 = 0, $1350 = 0, $1351 = 0, $1352 = 0, $1353 = 0, $1354 = 0, $1355 = 0, $1356 = 0, $1357 = 0, $1358 = 0, $1359 = 0;
 var $136 = 0, $1360 = 0, $1361 = 0, $1362 = 0, $1363 = 0, $1364 = 0, $1365 = 0, $1366 = 0, $1367 = 0, $1368 = 0, $1369 = 0, $137 = 0, $1370 = 0, $1371 = 0, $1372 = 0, $1373 = 0, $1374 = 0, $1375 = 0, $1376 = 0, $1377 = 0;
 var $1378 = 0, $1379 = 0, $138 = 0, $1380 = 0, $1381 = 0, $1382 = 0, $1383 = 0, $1384 = 0, $1385 = 0, $1386 = 0, $1387 = 0, $1388 = 0, $1389 = 0, $139 = 0, $1390 = 0, $1391 = 0, $1392 = 0, $1393 = 0, $1394 = 0, $1395 = 0;
 var $1396 = 0, $1397 = 0, $1398 = 0, $1399 = 0, $14 = 0, $140 = 0, $1400 = 0, $1401 = 0, $1402 = 0, $1403 = 0, $1404 = 0, $1405 = 0, $1406 = 0, $1407 = 0, $1408 = 0, $1409 = 0, $141 = 0, $1410 = 0, $1411 = 0, $1412 = 0;
 var $1413 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0;
 var $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0;
 var $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0;
 var $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0;
 var $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0;
 var $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0;
 var $25 = 0.0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0.0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0;
 var $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0;
 var $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0;
 var $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0;
 var $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0;
 var $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0;
 var $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0;
 var $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0;
 var $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0;
 var $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0;
 var $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0;
 var $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0;
 var $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0;
 var $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0;
 var $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0;
 var $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0;
 var $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0;
 var $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0;
 var $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0;
 var $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0;
 var $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0;
 var $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0;
 var $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0;
 var $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0;
 var $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0;
 var $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0;
 var $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0;
 var $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0;
 var $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0;
 var $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0;
 var $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0;
 var $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0;
 var $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0;
 var $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0;
 var $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0;
 var $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0, $887 = 0, $888 = 0, $889 = 0, $89 = 0, $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0, $896 = 0, $897 = 0, $898 = 0;
 var $899 = 0, $9 = 0, $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0, $904 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0, $912 = 0, $913 = 0, $914 = 0, $915 = 0;
 var $916 = 0, $917 = 0, $918 = 0, $919 = 0, $92 = 0, $920 = 0, $921 = 0, $922 = 0, $923 = 0, $924 = 0, $925 = 0, $926 = 0, $927 = 0, $928 = 0, $929 = 0, $93 = 0, $930 = 0, $931 = 0, $932 = 0, $933 = 0;
 var $934 = 0, $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = 0, $940 = 0, $941 = 0, $942 = 0, $943 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0, $95 = 0, $950 = 0, $951 = 0;
 var $952 = 0, $953 = 0, $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0, $959 = 0, $96 = 0, $960 = 0, $961 = 0, $962 = 0, $963 = 0, $964 = 0, $965 = 0, $966 = 0, $967 = 0, $968 = 0, $969 = 0, $97 = 0;
 var $970 = 0, $971 = 0, $972 = 0, $973 = 0, $974 = 0, $975 = 0, $976 = 0, $977 = 0, $978 = 0, $979 = 0, $98 = 0, $980 = 0, $981 = 0, $982 = 0, $983 = 0, $984 = 0, $985 = 0, $986 = 0, $987 = 0, $988 = 0;
 var $989 = 0, $99 = 0, $990 = 0, $991 = 0, $992 = 0, $993 = 0, $994 = 0, $995 = 0, $996 = 0, $997 = 0, $998 = 0, $999 = 0, $_sl = 0, $buf = 0, $col = 0, $col4 = 0, $context = 0, $conv_suc = 0, $current_symbol = 0, $en = 0;
 var $glbsyminscope = 0, $last = 0, $lf = 0, $lf1 = 0, $mod = 0, $mp = 0, $n = 0, $ns = 0, $or$cond = 0, $or$cond22 = 0, $or$cond3 = 0, $pos = 0, $pos2 = 0, $ptr = 0, $result = 0, $row = 0, $row3 = 0, $running = 0, $sep = 0, $tmp = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $tmp = sp + 224|0;
 $conv_suc = sp + 64|0;
 $en = sp + 44|0;
 $ptr = sp + 40|0;
 $mod = sp + 221|0;
 $current_symbol = sp + 92|0;
 $pos = sp + 20|0;
 $row = sp + 90|0;
 $col = sp + 88|0;
 $pos2 = sp + 8|0;
 $row3 = sp + 86|0;
 $col4 = sp + 84|0;
 $0 = $s;
 $1 = $sym;
 $2 = $value;
 $result = 0;
 HEAP32[$conv_suc>>2] = 0;
 $context = 0;
 $running = 0;
 $glbsyminscope = 0;
 $_sl = 0;
 HEAP32[$en>>2] = 1;
 HEAP32[$ptr>>2] = 0;
 HEAP8[$mod>>0] = 0;
 $3 = $0;
 $4 = ($3|0)!=(0|0);
 $5 = $1;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if (!($or$cond)) {
  ___assert_fail((8003|0),(4322|0),5484,(8387|0));
  // unreachable;
 }
 $7 = $1;
 $8 = (_strlen($7)|0);
 $_sl = $8;
 $9 = $_sl;
 $10 = ($9>>>0)>(0);
 if (!($10)) {
  ___assert_fail((8404|0),(4322|0),5486,(8387|0));
  // unreachable;
 }
 $11 = $0;
 $12 = ((($11)) + 71|0);
 $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
 $context = $13;
 $14 = $0;
 $15 = ((($14)) + 75|0);
 $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
 $running = $16;
 $17 = $1;
 $18 = (_strtol($17,$conv_suc,0)|0);
 HEAP8[$tmp>>0]=$18&255;HEAP8[$tmp+1>>0]=($18>>8)&255;HEAP8[$tmp+2>>0]=($18>>16)&255;HEAP8[$tmp+3>>0]=$18>>24;
 $19 = HEAP32[$conv_suc>>2]|0;
 $20 = HEAP8[$19>>0]|0;
 $21 = $20 << 24 >> 24;
 $22 = ($21|0)==(0);
 if ($22) {
  $23 = $2;
  ;HEAP8[$23>>0]=HEAP8[$tmp>>0]|0;HEAP8[$23+1>>0]=HEAP8[$tmp+1>>0]|0;HEAP8[$23+2>>0]=HEAP8[$tmp+2>>0]|0;HEAP8[$23+3>>0]=HEAP8[$tmp+3>>0]|0;
  $result = 2;
  $1413 = $result;
  STACKTOP = sp;return ($1413|0);
 }
 $24 = $1;
 $25 = (+_strtod($24,$conv_suc));
 $26 = $25;
 HEAPF32[tempDoublePtr>>2]=$26;HEAP8[$tmp>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$tmp+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$tmp+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$tmp+3>>0]=HEAP8[tempDoublePtr+3>>0];
 $27 = HEAP32[$conv_suc>>2]|0;
 $28 = HEAP8[$27>>0]|0;
 $29 = $28 << 24 >> 24;
 $30 = ($29|0)==(0);
 if ($30) {
  $31 = $2;
  ;HEAP8[$31>>0]=HEAP8[$tmp>>0]|0;HEAP8[$31+1>>0]=HEAP8[$tmp+1>>0]|0;HEAP8[$31+2>>0]=HEAP8[$tmp+2>>0]|0;HEAP8[$31+3>>0]=HEAP8[$tmp+3>>0]|0;
  $result = 3;
  $1413 = $result;
  STACKTOP = sp;return ($1413|0);
 }
 $32 = $1;
 $33 = HEAP8[$32>>0]|0;
 $34 = (__is_quotation_char($33)|0);
 $35 = $34&255;
 $36 = ($35|0)!=(0);
 if ($36) {
  $37 = $_sl;
  $38 = (($37) - 1)|0;
  $39 = $1;
  $40 = (($39) + ($38)|0);
  $41 = HEAP8[$40>>0]|0;
  $42 = (__is_quotation_char($41)|0);
  $43 = $42&255;
  $44 = ($43|0)!=(0);
  $45 = $_sl;
  $46 = ($45>>>0)>=(2);
  $or$cond3 = $44 & $46;
  if ($or$cond3) {
   $result = 4;
   $47 = $context;
   $48 = ((($47)) + 142|0);
   $49 = HEAPU8[$48>>0]|(HEAPU8[$48+1>>0]<<8)|(HEAPU8[$48+2>>0]<<16)|(HEAPU8[$48+3>>0]<<24);
   $50 = ($49|0)!=(0|0);
   if (!($50)) {
    $1413 = $result;
    STACKTOP = sp;return ($1413|0);
   }
   $51 = $context;
   $52 = ((($51)) + 142|0);
   $53 = HEAPU8[$52>>0]|(HEAPU8[$52+1>>0]<<8)|(HEAPU8[$52+2>>0]<<16)|(HEAPU8[$52+3>>0]<<24);
   $54 = HEAPU8[$53>>0]|(HEAPU8[$53+1>>0]<<8)|(HEAPU8[$53+2>>0]<<16)|(HEAPU8[$53+3>>0]<<24);
   $55 = ($54|0)==(8);
   if (!($55)) {
    $1413 = $result;
    STACKTOP = sp;return ($1413|0);
   }
   $56 = $context;
   $57 = ((($56)) + 142|0);
   $58 = HEAPU8[$57>>0]|(HEAPU8[$57+1>>0]<<8)|(HEAPU8[$57+2>>0]<<16)|(HEAPU8[$57+3>>0]<<24);
   $59 = ((($58)) + 4|0);
   $60 = HEAPU8[$59>>0]|(HEAPU8[$59+1>>0]<<8)|(HEAPU8[$59+2>>0]<<16)|(HEAPU8[$59+3>>0]<<24);
   $61 = ((($60)) + 4|0);
   $62 = HEAPU8[$61>>0]|(HEAPU8[$61+1>>0]<<8)|(HEAPU8[$61+2>>0]<<16)|(HEAPU8[$61+3>>0]<<24);
   $63 = ($62|0)==(53|0);
   if (!($63)) {
    $1413 = $result;
    STACKTOP = sp;return ($1413|0);
   }
   $64 = $context;
   $65 = ((($64)) + 134|0);
   $66 = HEAPU8[$65>>0]|(HEAPU8[$65+1>>0]<<8)|(HEAPU8[$65+2>>0]<<16)|(HEAPU8[$65+3>>0]<<24);
   $n = $66;
   $buf = 0;
   $67 = $context;
   $68 = ((($67)) + 5|0);
   _memcpy(($current_symbol|0),($68|0),129)|0;
   $69 = $context;
   $70 = ((($69)) + 5|0);
   _memset(($70|0),0,129)|0;
   $71 = $context;
   $72 = ((($71)) + 134|0);
   HEAP8[$72>>0]=0&255;HEAP8[$72+1>>0]=(0>>8)&255;HEAP8[$72+2>>0]=(0>>16)&255;HEAP8[$72+3>>0]=0>>24;
   $73 = $context;
   $74 = ((($73)) + 142|0);
   HEAP8[$74>>0]=0&255;HEAP8[$74+1>>0]=(0>>8)&255;HEAP8[$74+2>>0]=(0>>16)&255;HEAP8[$74+3>>0]=0>>24;
   $75 = $_sl;
   $76 = (($75) - 1)|0;
   $77 = $1;
   $78 = (($77) + ($76)|0);
   HEAP8[$78>>0] = 0;
   $79 = $context;
   $80 = ((($79)) + 150|0);
   HEAP8[$80>>0]=0&255;HEAP8[$80+1>>0]=(0>>8)&255;HEAP8[$80+2>>0]=(0>>16)&255;HEAP8[$80+3>>0]=0>>24;
   $81 = $1;
   $82 = ((($81)) + 1|0);
   $83 = HEAP8[$82>>0]|0;
   $84 = (__is_using_at_char($83)|0);
   $85 = ($84<<24>>24)!=(0);
   do {
    if ($85) {
     $86 = $1;
     $87 = ((($86)) + 2|0);
     $88 = $1;
     $89 = ((($88)) + 2|0);
     $90 = (_strlen($89)|0);
     $91 = (($90) + 1)|0;
     $92 = (_mb_strdup($87,$91)|0);
     $ns = $92;
     $93 = $ns;
     (_mb_strupr($93)|0);
     $94 = $0;
     $95 = ((($94)) + 63|0);
     $96 = HEAPU8[$95>>0]|(HEAPU8[$95+1>>0]<<8)|(HEAPU8[$95+2>>0]<<16)|(HEAPU8[$95+3>>0]<<24);
     $97 = $ns;
     $98 = (__ls_find($96,$97,127,0)|0);
     $99 = ($98|0)!=(0|0);
     if (!($99)) {
      $103 = $0;
      $104 = ((($103)) + 63|0);
      $105 = HEAPU8[$104>>0]|(HEAPU8[$104+1>>0]<<8)|(HEAPU8[$104+2>>0]<<16)|(HEAPU8[$104+3>>0]<<24);
      $106 = $ns;
      (__ls_pushback($105,$106)|0);
      break;
     }
     $100 = $ns;
     $101 = ($100|0)!=(0|0);
     if ($101) {
      $102 = $ns;
      _mb_free($102);
      $ns = 0;
      break;
     } else {
      ___assert_fail((4369|0),(4322|0),5530,(8387|0));
      // unreachable;
     }
    } else {
     $107 = $0;
     $108 = $1;
     $109 = ((($108)) + 1|0);
     $110 = (__load_file127($107,$109,8412,1)|0);
     $buf = $110;
     $111 = $buf;
     $112 = ($111|0)!=(0|0);
     if ($112) {
      $113 = $buf;
      $114 = $1;
      $115 = ((($114)) + 1|0);
      $116 = ($113|0)==($115|0);
      if (!($116)) {
       $210 = $context;
       $211 = HEAPU8[$210>>0]|(HEAPU8[$210+1>>0]<<8)|(HEAPU8[$210+2>>0]<<16)|(HEAPU8[$210+3>>0]<<24);
       $212 = (__ls_back($211)|0);
       $213 = HEAPU8[$212>>0]|(HEAPU8[$212+1>>0]<<8)|(HEAPU8[$212+2>>0]<<16)|(HEAPU8[$212+3>>0]<<24);
       $lf = $213;
       HEAP32[$pos>>2] = 0;
       HEAP16[$row>>1] = 0;
       HEAP16[$col>>1] = 0;
       $214 = $0;
       $215 = $lf;
       $216 = (__prev_import($214,$215,$pos,$row,$col)|0);
       $lf = $216;
       $217 = $0;
       $218 = $buf;
       (_mb_load_string($217,$218,1)|0);
       $219 = $buf;
       $220 = ($219|0)!=(0|0);
       if ($220) {
        $221 = $buf;
        _mb_free($221);
        $buf = 0;
        $222 = $0;
        $223 = $lf;
        (__post_import($222,$223,$pos,$row,$col)|0);
        break;
       } else {
        ___assert_fail((4369|0),(4322|0),5552,(8387|0));
        // unreachable;
       }
      }
      $117 = $0;
      $118 = $0;
      $119 = ((($118)) + 67|0);
      $120 = HEAPU8[$119>>0]|(HEAPU8[$119+1>>0]<<8)|(HEAPU8[$119+2>>0]<<16)|(HEAPU8[$119+3>>0]<<24);
      (__set_current_error($117,8,$120)|0);
      $121 = $0;
      $122 = ((($121)) + 163|0);
      $123 = HEAPU8[$122>>0]|(HEAPU8[$122+1>>0]<<8)|(HEAPU8[$122+2>>0]<<16)|(HEAPU8[$122+3>>0]<<24);
      $124 = ($123|0)!=(0|0);
      if ($124) {
       $125 = $0;
       $126 = ((($125)) + 134|0);
       $127 = HEAP8[$126>>0]|0;
       $128 = $127 & 1;
       $129 = ($128<<24>>24)!=(0);
       if ($129) {
        break;
       }
       $130 = $0;
       $131 = ((($130)) + 134|0);
       $132 = HEAP8[$131>>0]|0;
       $133 = $132 & -2;
       $134 = $133 | 1;
       HEAP8[$131>>0] = $134;
       $135 = $0;
       $136 = ((($135)) + 163|0);
       $137 = HEAPU8[$136>>0]|(HEAPU8[$136+1>>0]<<8)|(HEAPU8[$136+2>>0]<<16)|(HEAPU8[$136+3>>0]<<24);
       $138 = $0;
       $139 = $0;
       $140 = ((($139)) + 135|0);
       $141 = HEAPU8[$140>>0]|(HEAPU8[$140+1>>0]<<8)|(HEAPU8[$140+2>>0]<<16)|(HEAPU8[$140+3>>0]<<24);
       $142 = $0;
       $143 = ((($142)) + 135|0);
       $144 = HEAPU8[$143>>0]|(HEAPU8[$143+1>>0]<<8)|(HEAPU8[$143+2>>0]<<16)|(HEAPU8[$143+3>>0]<<24);
       $145 = (_mb_get_error_desc($144)|0);
       $146 = $0;
       $147 = ((($146)) + 139|0);
       $148 = HEAPU8[$147>>0]|(HEAPU8[$147+1>>0]<<8)|(HEAPU8[$147+2>>0]<<16)|(HEAPU8[$147+3>>0]<<24);
       $149 = $0;
       $150 = ((($149)) + 71|0);
       $151 = HEAPU8[$150>>0]|(HEAPU8[$150+1>>0]<<8)|(HEAPU8[$150+2>>0]<<16)|(HEAPU8[$150+3>>0]<<24);
       $152 = ($151|0)!=(0|0);
       do {
        if ($152) {
         $153 = $0;
         $154 = ((($153)) + 79|0);
         $155 = HEAPU8[$154>>0]|(HEAPU8[$154+1>>0]<<8)|(HEAPU8[$154+2>>0]<<16)|(HEAPU8[$154+3>>0]<<24);
         $156 = ($155|0)!=(0);
         if ($156) {
          label = 27;
          break;
         }
         $157 = $0;
         $158 = ((($157)) + 71|0);
         $159 = HEAPU8[$158>>0]|(HEAPU8[$158+1>>0]<<8)|(HEAPU8[$158+2>>0]<<16)|(HEAPU8[$158+3>>0]<<24);
         $160 = ((($159)) + 164|0);
         $161 = HEAPU8[$160>>0]|(HEAPU8[$160+1>>0]<<8)|(HEAPU8[$160+2>>0]<<16)|(HEAPU8[$160+3>>0]<<24);
         $201 = $161;
        } else {
         label = 27;
        }
       } while(0);
       if ((label|0) == 27) {
        $162 = $0;
        $163 = ((($162)) + 143|0);
        $164 = HEAPU8[$163>>0]|(HEAPU8[$163+1>>0]<<8)|(HEAPU8[$163+2>>0]<<16)|(HEAPU8[$163+3>>0]<<24);
        $201 = $164;
       }
       $165 = $0;
       $166 = ((($165)) + 71|0);
       $167 = HEAPU8[$166>>0]|(HEAPU8[$166+1>>0]<<8)|(HEAPU8[$166+2>>0]<<16)|(HEAPU8[$166+3>>0]<<24);
       $168 = ($167|0)!=(0|0);
       do {
        if ($168) {
         $169 = $0;
         $170 = ((($169)) + 79|0);
         $171 = HEAPU8[$170>>0]|(HEAPU8[$170+1>>0]<<8)|(HEAPU8[$170+2>>0]<<16)|(HEAPU8[$170+3>>0]<<24);
         $172 = ($171|0)!=(0);
         if ($172) {
          label = 31;
          break;
         }
         $173 = $0;
         $174 = ((($173)) + 71|0);
         $175 = HEAPU8[$174>>0]|(HEAPU8[$174+1>>0]<<8)|(HEAPU8[$174+2>>0]<<16)|(HEAPU8[$174+3>>0]<<24);
         $176 = ((($175)) + 168|0);
         $177 = HEAPU8[$176>>0]|(HEAPU8[$176+1>>0]<<8);
         $$sink = $177;
        } else {
         label = 31;
        }
       } while(0);
       if ((label|0) == 31) {
        $178 = $0;
        $179 = ((($178)) + 147|0);
        $180 = HEAPU8[$179>>0]|(HEAPU8[$179+1>>0]<<8);
        $$sink = $180;
       }
       $181 = $$sink&65535;
       $182 = $181&65535;
       $183 = $0;
       $184 = ((($183)) + 71|0);
       $185 = HEAPU8[$184>>0]|(HEAPU8[$184+1>>0]<<8)|(HEAPU8[$184+2>>0]<<16)|(HEAPU8[$184+3>>0]<<24);
       $186 = ($185|0)!=(0|0);
       do {
        if ($186) {
         $187 = $0;
         $188 = ((($187)) + 79|0);
         $189 = HEAPU8[$188>>0]|(HEAPU8[$188+1>>0]<<8)|(HEAPU8[$188+2>>0]<<16)|(HEAPU8[$188+3>>0]<<24);
         $190 = ($189|0)!=(0);
         if ($190) {
          label = 35;
          break;
         }
         $191 = $0;
         $192 = ((($191)) + 71|0);
         $193 = HEAPU8[$192>>0]|(HEAPU8[$192+1>>0]<<8)|(HEAPU8[$192+2>>0]<<16)|(HEAPU8[$192+3>>0]<<24);
         $194 = ((($193)) + 170|0);
         $195 = HEAPU8[$194>>0]|(HEAPU8[$194+1>>0]<<8);
         $$sink4 = $195;
        } else {
         label = 35;
        }
       } while(0);
       if ((label|0) == 35) {
        $196 = $0;
        $197 = ((($196)) + 149|0);
        $198 = HEAPU8[$197>>0]|(HEAPU8[$197+1>>0]<<8);
        $$sink4 = $198;
       }
       $199 = $$sink4&65535;
       $200 = $199&65535;
       FUNCTION_TABLE_viiiiiiii[$137 & 127]($138,$141,$145,$148,$201,$182,$200,2);
      }
      $202 = $0;
      $203 = ((($202)) + 135|0);
      HEAP8[$203>>0]=0&255;HEAP8[$203+1>>0]=(0>>8)&255;HEAP8[$203+2>>0]=(0>>16)&255;HEAP8[$203+3>>0]=0>>24;
      $204 = $0;
      $205 = ((($204)) + 139|0);
      HEAP8[$205>>0]=0&255;HEAP8[$205+1>>0]=(0>>8)&255;HEAP8[$205+2>>0]=(0>>16)&255;HEAP8[$205+3>>0]=0>>24;
      $206 = $0;
      $207 = ((($206)) + 134|0);
      $208 = HEAP8[$207>>0]|0;
      $209 = $208 & -2;
      HEAP8[$207>>0] = $209;
      break;
     }
     $224 = $context;
     $225 = HEAPU8[$224>>0]|(HEAPU8[$224+1>>0]<<8)|(HEAPU8[$224+2>>0]<<16)|(HEAPU8[$224+3>>0]<<24);
     $226 = $1;
     $227 = ((($226)) + 1|0);
     $228 = (__ls_find($225,$227,127,0)|0);
     $229 = ($228|0)!=(0|0);
     if (!($229)) {
      $230 = $0;
      $231 = ((($230)) + 175|0);
      $232 = HEAPU8[$231>>0]|(HEAPU8[$231+1>>0]<<8)|(HEAPU8[$231+2>>0]<<16)|(HEAPU8[$231+3>>0]<<24);
      $233 = ($232|0)!=(0|0);
      if (!($233)) {
       $374 = $0;
       $375 = $0;
       $376 = ((($375)) + 67|0);
       $377 = HEAPU8[$376>>0]|(HEAPU8[$376+1>>0]<<8)|(HEAPU8[$376+2>>0]<<16)|(HEAPU8[$376+3>>0]<<24);
       (__set_current_error($374,4,$377)|0);
       $378 = $0;
       $379 = ((($378)) + 163|0);
       $380 = HEAPU8[$379>>0]|(HEAPU8[$379+1>>0]<<8)|(HEAPU8[$379+2>>0]<<16)|(HEAPU8[$379+3>>0]<<24);
       $381 = ($380|0)!=(0|0);
       if (!($381)) {
        break;
       }
       $382 = $0;
       $383 = ((($382)) + 134|0);
       $384 = HEAP8[$383>>0]|0;
       $385 = $384 & 1;
       $386 = ($385<<24>>24)!=(0);
       if ($386) {
        break;
       }
       $387 = $0;
       $388 = ((($387)) + 134|0);
       $389 = HEAP8[$388>>0]|0;
       $390 = $389 & -2;
       $391 = $390 | 1;
       HEAP8[$388>>0] = $391;
       $392 = $0;
       $393 = ((($392)) + 163|0);
       $394 = HEAPU8[$393>>0]|(HEAPU8[$393+1>>0]<<8)|(HEAPU8[$393+2>>0]<<16)|(HEAPU8[$393+3>>0]<<24);
       $395 = $0;
       $396 = $0;
       $397 = ((($396)) + 135|0);
       $398 = HEAPU8[$397>>0]|(HEAPU8[$397+1>>0]<<8)|(HEAPU8[$397+2>>0]<<16)|(HEAPU8[$397+3>>0]<<24);
       $399 = $0;
       $400 = ((($399)) + 135|0);
       $401 = HEAPU8[$400>>0]|(HEAPU8[$400+1>>0]<<8)|(HEAPU8[$400+2>>0]<<16)|(HEAPU8[$400+3>>0]<<24);
       $402 = (_mb_get_error_desc($401)|0);
       $403 = $0;
       $404 = ((($403)) + 139|0);
       $405 = HEAPU8[$404>>0]|(HEAPU8[$404+1>>0]<<8)|(HEAPU8[$404+2>>0]<<16)|(HEAPU8[$404+3>>0]<<24);
       $406 = $0;
       $407 = ((($406)) + 71|0);
       $408 = HEAPU8[$407>>0]|(HEAPU8[$407+1>>0]<<8)|(HEAPU8[$407+2>>0]<<16)|(HEAPU8[$407+3>>0]<<24);
       $409 = ($408|0)!=(0|0);
       do {
        if ($409) {
         $410 = $0;
         $411 = ((($410)) + 79|0);
         $412 = HEAPU8[$411>>0]|(HEAPU8[$411+1>>0]<<8)|(HEAPU8[$411+2>>0]<<16)|(HEAPU8[$411+3>>0]<<24);
         $413 = ($412|0)!=(0);
         if ($413) {
          label = 67;
          break;
         }
         $414 = $0;
         $415 = ((($414)) + 71|0);
         $416 = HEAPU8[$415>>0]|(HEAPU8[$415+1>>0]<<8)|(HEAPU8[$415+2>>0]<<16)|(HEAPU8[$415+3>>0]<<24);
         $417 = ((($416)) + 164|0);
         $418 = HEAPU8[$417>>0]|(HEAPU8[$417+1>>0]<<8)|(HEAPU8[$417+2>>0]<<16)|(HEAPU8[$417+3>>0]<<24);
         $458 = $418;
        } else {
         label = 67;
        }
       } while(0);
       if ((label|0) == 67) {
        $419 = $0;
        $420 = ((($419)) + 143|0);
        $421 = HEAPU8[$420>>0]|(HEAPU8[$420+1>>0]<<8)|(HEAPU8[$420+2>>0]<<16)|(HEAPU8[$420+3>>0]<<24);
        $458 = $421;
       }
       $422 = $0;
       $423 = ((($422)) + 71|0);
       $424 = HEAPU8[$423>>0]|(HEAPU8[$423+1>>0]<<8)|(HEAPU8[$423+2>>0]<<16)|(HEAPU8[$423+3>>0]<<24);
       $425 = ($424|0)!=(0|0);
       do {
        if ($425) {
         $426 = $0;
         $427 = ((($426)) + 79|0);
         $428 = HEAPU8[$427>>0]|(HEAPU8[$427+1>>0]<<8)|(HEAPU8[$427+2>>0]<<16)|(HEAPU8[$427+3>>0]<<24);
         $429 = ($428|0)!=(0);
         if ($429) {
          label = 71;
          break;
         }
         $430 = $0;
         $431 = ((($430)) + 71|0);
         $432 = HEAPU8[$431>>0]|(HEAPU8[$431+1>>0]<<8)|(HEAPU8[$431+2>>0]<<16)|(HEAPU8[$431+3>>0]<<24);
         $433 = ((($432)) + 168|0);
         $434 = HEAPU8[$433>>0]|(HEAPU8[$433+1>>0]<<8);
         $$sink7 = $434;
        } else {
         label = 71;
        }
       } while(0);
       if ((label|0) == 71) {
        $435 = $0;
        $436 = ((($435)) + 147|0);
        $437 = HEAPU8[$436>>0]|(HEAPU8[$436+1>>0]<<8);
        $$sink7 = $437;
       }
       $438 = $$sink7&65535;
       $439 = $438&65535;
       $440 = $0;
       $441 = ((($440)) + 71|0);
       $442 = HEAPU8[$441>>0]|(HEAPU8[$441+1>>0]<<8)|(HEAPU8[$441+2>>0]<<16)|(HEAPU8[$441+3>>0]<<24);
       $443 = ($442|0)!=(0|0);
       do {
        if ($443) {
         $444 = $0;
         $445 = ((($444)) + 79|0);
         $446 = HEAPU8[$445>>0]|(HEAPU8[$445+1>>0]<<8)|(HEAPU8[$445+2>>0]<<16)|(HEAPU8[$445+3>>0]<<24);
         $447 = ($446|0)!=(0);
         if ($447) {
          label = 75;
          break;
         }
         $448 = $0;
         $449 = ((($448)) + 71|0);
         $450 = HEAPU8[$449>>0]|(HEAPU8[$449+1>>0]<<8)|(HEAPU8[$449+2>>0]<<16)|(HEAPU8[$449+3>>0]<<24);
         $451 = ((($450)) + 170|0);
         $452 = HEAPU8[$451>>0]|(HEAPU8[$451+1>>0]<<8);
         $$sink8 = $452;
        } else {
         label = 75;
        }
       } while(0);
       if ((label|0) == 75) {
        $453 = $0;
        $454 = ((($453)) + 149|0);
        $455 = HEAPU8[$454>>0]|(HEAPU8[$454+1>>0]<<8);
        $$sink8 = $455;
       }
       $456 = $$sink8&65535;
       $457 = $456&65535;
       FUNCTION_TABLE_viiiiiiii[$394 & 127]($395,$398,$402,$405,$458,$439,$457,3);
       break;
      }
      $sep = 0;
      $lf1 = 0;
      HEAP32[$pos2>>2] = 0;
      HEAP16[$row3>>1] = 0;
      HEAP16[$col4>>1] = 0;
      $234 = (__create_object()|0);
      $sep = $234;
      $235 = $sep;
      HEAP8[$235>>0]=19&255;HEAP8[$235+1>>0]=(19>>8)&255;HEAP8[$235+2>>0]=(19>>16)&255;HEAP8[$235+3>>0]=19>>24;
      $236 = $sep;
      $237 = ((($236)) + 4|0);
      HEAP8[$237>>0] = 58;
      $238 = $0;
      $239 = ((($238)) + 17|0);
      $240 = HEAPU8[$239>>0]|(HEAPU8[$239+1>>0]<<8)|(HEAPU8[$239+2>>0]<<16)|(HEAPU8[$239+3>>0]<<24);
      $241 = $sep;
      (__ls_pushback($240,$241)|0);
      $242 = $context;
      $243 = HEAPU8[$242>>0]|(HEAPU8[$242+1>>0]<<8)|(HEAPU8[$242+2>>0]<<16)|(HEAPU8[$242+3>>0]<<24);
      $244 = $1;
      $245 = ((($244)) + 1|0);
      $246 = $1;
      $247 = ((($246)) + 1|0);
      $248 = (_strlen($247)|0);
      $249 = (($248) + 1)|0;
      $250 = (_mb_strdup($245,$249)|0);
      (__ls_pushback($243,$250)|0);
      $251 = $context;
      $252 = HEAPU8[$251>>0]|(HEAPU8[$251+1>>0]<<8)|(HEAPU8[$251+2>>0]<<16)|(HEAPU8[$251+3>>0]<<24);
      $253 = (__ls_back($252)|0);
      $254 = HEAPU8[$253>>0]|(HEAPU8[$253+1>>0]<<8)|(HEAPU8[$253+2>>0]<<16)|(HEAPU8[$253+3>>0]<<24);
      $lf1 = $254;
      $255 = $0;
      $256 = $lf1;
      $257 = (__prev_import($255,$256,$pos2,$row3,$col4)|0);
      $lf1 = $257;
      $258 = $0;
      $259 = ((($258)) + 175|0);
      $260 = HEAPU8[$259>>0]|(HEAPU8[$259+1>>0]<<8)|(HEAPU8[$259+2>>0]<<16)|(HEAPU8[$259+3>>0]<<24);
      $261 = $0;
      $262 = $1;
      $263 = ((($262)) + 1|0);
      $264 = (FUNCTION_TABLE_iii[$260 & 255]($261,$263)|0);
      $265 = ($264|0)!=(0);
      if ($265) {
       $266 = $context;
       $267 = HEAPU8[$266>>0]|(HEAPU8[$266+1>>0]<<8)|(HEAPU8[$266+2>>0]<<16)|(HEAPU8[$266+3>>0]<<24);
       $268 = (__ls_back($267)|0);
       $last = $268;
       $269 = $0;
       $270 = ((($269)) + 135|0);
       $271 = HEAPU8[$270>>0]|(HEAPU8[$270+1>>0]<<8)|(HEAPU8[$270+2>>0]<<16)|(HEAPU8[$270+3>>0]<<24);
       $272 = ($271|0)==(0);
       do {
        if ($272) {
         $273 = HEAP32[$pos2>>2]|0;
         $274 = $context;
         $275 = ((($274)) + 164|0);
         HEAP8[$275>>0]=$273&255;HEAP8[$275+1>>0]=($273>>8)&255;HEAP8[$275+2>>0]=($273>>16)&255;HEAP8[$275+3>>0]=$273>>24;
         $276 = HEAP16[$row3>>1]|0;
         $277 = $context;
         $278 = ((($277)) + 168|0);
         HEAP8[$278>>0]=$276&255;HEAP8[$278+1>>0]=$276>>8;
         $279 = HEAP16[$col4>>1]|0;
         $280 = $context;
         $281 = ((($280)) + 170|0);
         HEAP8[$281>>0]=$279&255;HEAP8[$281+1>>0]=$279>>8;
         $282 = $0;
         $283 = $lf1;
         (__set_current_error($282,4,$283)|0);
         $284 = $0;
         $285 = ((($284)) + 163|0);
         $286 = HEAPU8[$285>>0]|(HEAPU8[$285+1>>0]<<8)|(HEAPU8[$285+2>>0]<<16)|(HEAPU8[$285+3>>0]<<24);
         $287 = ($286|0)!=(0|0);
         if ($287) {
          $288 = $0;
          $289 = ((($288)) + 134|0);
          $290 = HEAP8[$289>>0]|0;
          $291 = $290 & 1;
          $292 = ($291<<24>>24)!=(0);
          if ($292) {
           break;
          }
          $293 = $0;
          $294 = ((($293)) + 134|0);
          $295 = HEAP8[$294>>0]|0;
          $296 = $295 & -2;
          $297 = $296 | 1;
          HEAP8[$294>>0] = $297;
          $298 = $0;
          $299 = ((($298)) + 163|0);
          $300 = HEAPU8[$299>>0]|(HEAPU8[$299+1>>0]<<8)|(HEAPU8[$299+2>>0]<<16)|(HEAPU8[$299+3>>0]<<24);
          $301 = $0;
          $302 = $0;
          $303 = ((($302)) + 135|0);
          $304 = HEAPU8[$303>>0]|(HEAPU8[$303+1>>0]<<8)|(HEAPU8[$303+2>>0]<<16)|(HEAPU8[$303+3>>0]<<24);
          $305 = $0;
          $306 = ((($305)) + 135|0);
          $307 = HEAPU8[$306>>0]|(HEAPU8[$306+1>>0]<<8)|(HEAPU8[$306+2>>0]<<16)|(HEAPU8[$306+3>>0]<<24);
          $308 = (_mb_get_error_desc($307)|0);
          $309 = $0;
          $310 = ((($309)) + 139|0);
          $311 = HEAPU8[$310>>0]|(HEAPU8[$310+1>>0]<<8)|(HEAPU8[$310+2>>0]<<16)|(HEAPU8[$310+3>>0]<<24);
          $312 = $0;
          $313 = ((($312)) + 71|0);
          $314 = HEAPU8[$313>>0]|(HEAPU8[$313+1>>0]<<8)|(HEAPU8[$313+2>>0]<<16)|(HEAPU8[$313+3>>0]<<24);
          $315 = ($314|0)!=(0|0);
          do {
           if ($315) {
            $316 = $0;
            $317 = ((($316)) + 79|0);
            $318 = HEAPU8[$317>>0]|(HEAPU8[$317+1>>0]<<8)|(HEAPU8[$317+2>>0]<<16)|(HEAPU8[$317+3>>0]<<24);
            $319 = ($318|0)!=(0);
            if ($319) {
             label = 50;
             break;
            }
            $320 = $0;
            $321 = ((($320)) + 71|0);
            $322 = HEAPU8[$321>>0]|(HEAPU8[$321+1>>0]<<8)|(HEAPU8[$321+2>>0]<<16)|(HEAPU8[$321+3>>0]<<24);
            $323 = ((($322)) + 164|0);
            $324 = HEAPU8[$323>>0]|(HEAPU8[$323+1>>0]<<8)|(HEAPU8[$323+2>>0]<<16)|(HEAPU8[$323+3>>0]<<24);
            $364 = $324;
           } else {
            label = 50;
           }
          } while(0);
          if ((label|0) == 50) {
           $325 = $0;
           $326 = ((($325)) + 143|0);
           $327 = HEAPU8[$326>>0]|(HEAPU8[$326+1>>0]<<8)|(HEAPU8[$326+2>>0]<<16)|(HEAPU8[$326+3>>0]<<24);
           $364 = $327;
          }
          $328 = $0;
          $329 = ((($328)) + 71|0);
          $330 = HEAPU8[$329>>0]|(HEAPU8[$329+1>>0]<<8)|(HEAPU8[$329+2>>0]<<16)|(HEAPU8[$329+3>>0]<<24);
          $331 = ($330|0)!=(0|0);
          do {
           if ($331) {
            $332 = $0;
            $333 = ((($332)) + 79|0);
            $334 = HEAPU8[$333>>0]|(HEAPU8[$333+1>>0]<<8)|(HEAPU8[$333+2>>0]<<16)|(HEAPU8[$333+3>>0]<<24);
            $335 = ($334|0)!=(0);
            if ($335) {
             label = 54;
             break;
            }
            $336 = $0;
            $337 = ((($336)) + 71|0);
            $338 = HEAPU8[$337>>0]|(HEAPU8[$337+1>>0]<<8)|(HEAPU8[$337+2>>0]<<16)|(HEAPU8[$337+3>>0]<<24);
            $339 = ((($338)) + 168|0);
            $340 = HEAPU8[$339>>0]|(HEAPU8[$339+1>>0]<<8);
            $$sink5 = $340;
           } else {
            label = 54;
           }
          } while(0);
          if ((label|0) == 54) {
           $341 = $0;
           $342 = ((($341)) + 147|0);
           $343 = HEAPU8[$342>>0]|(HEAPU8[$342+1>>0]<<8);
           $$sink5 = $343;
          }
          $344 = $$sink5&65535;
          $345 = $344&65535;
          $346 = $0;
          $347 = ((($346)) + 71|0);
          $348 = HEAPU8[$347>>0]|(HEAPU8[$347+1>>0]<<8)|(HEAPU8[$347+2>>0]<<16)|(HEAPU8[$347+3>>0]<<24);
          $349 = ($348|0)!=(0|0);
          do {
           if ($349) {
            $350 = $0;
            $351 = ((($350)) + 79|0);
            $352 = HEAPU8[$351>>0]|(HEAPU8[$351+1>>0]<<8)|(HEAPU8[$351+2>>0]<<16)|(HEAPU8[$351+3>>0]<<24);
            $353 = ($352|0)!=(0);
            if ($353) {
             label = 58;
             break;
            }
            $354 = $0;
            $355 = ((($354)) + 71|0);
            $356 = HEAPU8[$355>>0]|(HEAPU8[$355+1>>0]<<8)|(HEAPU8[$355+2>>0]<<16)|(HEAPU8[$355+3>>0]<<24);
            $357 = ((($356)) + 170|0);
            $358 = HEAPU8[$357>>0]|(HEAPU8[$357+1>>0]<<8);
            $$sink6 = $358;
           } else {
            label = 58;
           }
          } while(0);
          if ((label|0) == 58) {
           $359 = $0;
           $360 = ((($359)) + 149|0);
           $361 = HEAPU8[$360>>0]|(HEAPU8[$360+1>>0]<<8);
           $$sink6 = $361;
          }
          $362 = $$sink6&65535;
          $363 = $362&65535;
          FUNCTION_TABLE_viiiiiiii[$300 & 127]($301,$304,$308,$311,$364,$345,$363,3);
         }
        }
       } while(0);
       $365 = $last;
       $366 = HEAPU8[$365>>0]|(HEAPU8[$365+1>>0]<<8)|(HEAPU8[$365+2>>0]<<16)|(HEAPU8[$365+3>>0]<<24);
       $367 = $last;
       $368 = ((($367)) + 12|0);
       $369 = HEAPU8[$368>>0]|(HEAPU8[$368+1>>0]<<8)|(HEAPU8[$368+2>>0]<<16)|(HEAPU8[$368+3>>0]<<24);
       (__destroy_memory($366,$369)|0);
       $370 = $context;
       $371 = HEAPU8[$370>>0]|(HEAPU8[$370+1>>0]<<8)|(HEAPU8[$370+2>>0]<<16)|(HEAPU8[$370+3>>0]<<24);
       (__ls_popback($371)|0);
      }
      $372 = $0;
      $373 = $lf1;
      (__post_import($372,$373,$pos2,$row3,$col4)|0);
     }
    }
   } while(0);
   $459 = $context;
   $460 = ((($459)) + 150|0);
   HEAP8[$460>>0]=1&255;HEAP8[$460+1>>0]=(1>>8)&255;HEAP8[$460+2>>0]=(1>>16)&255;HEAP8[$460+3>>0]=1>>24;
   $461 = $_sl;
   $462 = (($461) - 1)|0;
   $463 = $1;
   $464 = (($463) + ($462)|0);
   HEAP8[$464>>0] = 34;
   $465 = $n;
   $466 = $context;
   $467 = ((($466)) + 134|0);
   HEAP8[$467>>0]=$465&255;HEAP8[$467+1>>0]=($465>>8)&255;HEAP8[$467+2>>0]=($465>>16)&255;HEAP8[$467+3>>0]=$465>>24;
   $468 = $context;
   $469 = ((($468)) + 5|0);
   _memcpy(($469|0),($current_symbol|0),129)|0;
   $result = 0;
   $1413 = $result;
   STACKTOP = sp;return ($1413|0);
  }
 }
 $470 = $1;
 $471 = (_strcmp($470,4612)|0);
 $472 = ($471|0)!=(0);
 if (!($472)) {
  HEAP8[$tmp>>0]=-1&255;HEAP8[$tmp+1>>0]=(-1>>8)&255;HEAP8[$tmp+2>>0]=(-1>>16)&255;HEAP8[$tmp+3>>0]=-1>>24;
  $473 = $2;
  ;HEAP8[$473>>0]=HEAP8[$tmp>>0]|0;HEAP8[$473+1>>0]=HEAP8[$tmp+1>>0]|0;HEAP8[$473+2>>0]=HEAP8[$tmp+2>>0]|0;HEAP8[$473+3>>0]=HEAP8[$tmp+3>>0]|0;
  $result = 0;
  $1413 = $result;
  STACKTOP = sp;return ($1413|0);
 }
 $474 = $1;
 $475 = (_strcmp($474,8414)|0);
 $476 = ($475|0)!=(0);
 if (!($476)) {
  $477 = $context;
  $478 = ((($477)) + 150|0);
  HEAP8[$478>>0]=2&255;HEAP8[$478+1>>0]=(2>>8)&255;HEAP8[$478+2>>0]=(2>>16)&255;HEAP8[$478+3>>0]=2>>24;
  $result = 22;
  $1413 = $result;
  STACKTOP = sp;return ($1413|0);
 }
 $479 = $0;
 $480 = $1;
 $481 = (__search_identifier_in_scope_chain($479,0,$480,0,0,0)|0);
 $glbsyminscope = $481;
 $482 = $glbsyminscope;
 $483 = ($482|0)!=(0|0);
 if ($483) {
  $484 = $glbsyminscope;
  $485 = HEAPU8[$484>>0]|(HEAPU8[$484+1>>0]<<8)|(HEAPU8[$484+2>>0]<<16)|(HEAPU8[$484+3>>0]<<24);
  $486 = HEAPU8[$485>>0]|(HEAPU8[$485+1>>0]<<8)|(HEAPU8[$485+2>>0]<<16)|(HEAPU8[$485+3>>0]<<24);
  $487 = ($486|0)==(10);
  if ($487) {
   $488 = $glbsyminscope;
   $489 = HEAPU8[$488>>0]|(HEAPU8[$488+1>>0]<<8)|(HEAPU8[$488+2>>0]<<16)|(HEAPU8[$488+3>>0]<<24);
   HEAP8[$tmp>>0]=$489&255;HEAP8[$tmp+1>>0]=($489>>8)&255;HEAP8[$tmp+2>>0]=($489>>16)&255;HEAP8[$tmp+3>>0]=$489>>24;
   $490 = $2;
   $491 = HEAPU8[$tmp>>0]|(HEAPU8[$tmp+1>>0]<<8)|(HEAPU8[$tmp+2>>0]<<16)|(HEAPU8[$tmp+3>>0]<<24);
   $492 = ((($491)) + 4|0);
   $493 = HEAPU8[$492>>0]|(HEAPU8[$492+1>>0]<<8)|(HEAPU8[$492+2>>0]<<16)|(HEAPU8[$492+3>>0]<<24);
   $494 = ((($493)) + 21|0);
   ;HEAP8[$490>>0]=HEAP8[$494>>0]|0;HEAP8[$490+1>>0]=HEAP8[$494+1>>0]|0;HEAP8[$490+2>>0]=HEAP8[$494+2>>0]|0;HEAP8[$490+3>>0]=HEAP8[$494+3>>0]|0;
   $result = 10;
   $1413 = $result;
   STACKTOP = sp;return ($1413|0);
  }
 }
 $495 = $context;
 $496 = ((($495)) + 142|0);
 $497 = HEAPU8[$496>>0]|(HEAPU8[$496+1>>0]<<8)|(HEAPU8[$496+2>>0]<<16)|(HEAPU8[$496+3>>0]<<24);
 $498 = ($497|0)!=(0|0);
 if ($498) {
  $499 = $context;
  $500 = ((($499)) + 142|0);
  $501 = HEAPU8[$500>>0]|(HEAPU8[$500+1>>0]<<8)|(HEAPU8[$500+2>>0]<<16)|(HEAPU8[$500+3>>0]<<24);
  $502 = HEAPU8[$501>>0]|(HEAPU8[$501+1>>0]<<8)|(HEAPU8[$501+2>>0]<<16)|(HEAPU8[$501+3>>0]<<24);
  $503 = ($502|0)==(8);
  if ($503) {
   $504 = $context;
   $505 = ((($504)) + 142|0);
   $506 = HEAPU8[$505>>0]|(HEAPU8[$505+1>>0]<<8)|(HEAPU8[$505+2>>0]<<16)|(HEAPU8[$505+3>>0]<<24);
   $507 = ((($506)) + 4|0);
   $508 = HEAPU8[$507>>0]|(HEAPU8[$507+1>>0]<<8)|(HEAPU8[$507+2>>0]<<16)|(HEAPU8[$507+3>>0]<<24);
   $509 = ((($508)) + 4|0);
   $510 = HEAPU8[$509>>0]|(HEAPU8[$509+1>>0]<<8)|(HEAPU8[$509+2>>0]<<16)|(HEAPU8[$509+3>>0]<<24);
   $511 = ($510|0)==(22|0);
   if ($511) {
    $512 = $_sl;
    $513 = (($512) - 1)|0;
    $514 = $1;
    $515 = (($514) + ($513)|0);
    $516 = HEAP8[$515>>0]|0;
    $517 = $516 << 24 >> 24;
    $518 = ($517|0)==(36);
    $519 = $518 ? 4 : 3;
    HEAP32[$en>>2] = $519;
    $520 = $2;
    ;HEAP8[$520>>0]=HEAP8[$en>>0]|0;HEAP8[$520+1>>0]=HEAP8[$en+1>>0]|0;HEAP8[$520+2>>0]=HEAP8[$en+2>>0]|0;HEAP8[$520+3>>0]=HEAP8[$en+3>>0]|0;
    $result = 10;
    $1413 = $result;
    STACKTOP = sp;return ($1413|0);
   }
  }
 }
 $521 = $context;
 $522 = ((($521)) + 142|0);
 $523 = HEAPU8[$522>>0]|(HEAPU8[$522+1>>0]<<8)|(HEAPU8[$522+2>>0]<<16)|(HEAPU8[$522+3>>0]<<24);
 $524 = ($523|0)!=(0|0);
 do {
  if ($524) {
   $525 = $0;
   $526 = $1;
   $527 = (__search_identifier_in_scope_chain($525,0,$526,0,0,0)|0);
   $glbsyminscope = $527;
   $528 = $glbsyminscope;
   $529 = ($528|0)!=(0|0);
   if ($529) {
    $530 = $glbsyminscope;
    $531 = HEAPU8[$530>>0]|(HEAPU8[$530+1>>0]<<8)|(HEAPU8[$530+2>>0]<<16)|(HEAPU8[$530+3>>0]<<24);
    $532 = HEAPU8[$531>>0]|(HEAPU8[$531+1>>0]<<8)|(HEAPU8[$531+2>>0]<<16)|(HEAPU8[$531+3>>0]<<24);
    $533 = ($532|0)==(17);
    if ($533) {
     break;
    }
   }
   $534 = $glbsyminscope;
   $535 = ($534|0)!=(0|0);
   if ($535) {
    $536 = $glbsyminscope;
    $537 = HEAPU8[$536>>0]|(HEAPU8[$536+1>>0]<<8)|(HEAPU8[$536+2>>0]<<16)|(HEAPU8[$536+3>>0]<<24);
    $538 = HEAPU8[$537>>0]|(HEAPU8[$537+1>>0]<<8)|(HEAPU8[$537+2>>0]<<16)|(HEAPU8[$537+3>>0]<<24);
    $539 = ($538|0)==(16);
    if ($539) {
     $540 = $context;
     $541 = ((($540)) + 142|0);
     $542 = HEAPU8[$541>>0]|(HEAPU8[$541+1>>0]<<8)|(HEAPU8[$541+2>>0]<<16)|(HEAPU8[$541+3>>0]<<24);
     $543 = HEAPU8[$542>>0]|(HEAPU8[$542+1>>0]<<8)|(HEAPU8[$542+2>>0]<<16)|(HEAPU8[$542+3>>0]<<24);
     $544 = ($543|0)==(8);
     if ($544) {
      $545 = $context;
      $546 = ((($545)) + 142|0);
      $547 = HEAPU8[$546>>0]|(HEAPU8[$546+1>>0]<<8)|(HEAPU8[$546+2>>0]<<16)|(HEAPU8[$546+3>>0]<<24);
      $548 = ((($547)) + 4|0);
      $549 = HEAPU8[$548>>0]|(HEAPU8[$548+1>>0]<<8)|(HEAPU8[$548+2>>0]<<16)|(HEAPU8[$548+3>>0]<<24);
      $550 = ((($549)) + 4|0);
      $551 = HEAPU8[$550>>0]|(HEAPU8[$550+1>>0]<<8)|(HEAPU8[$550+2>>0]<<16)|(HEAPU8[$550+3>>0]<<24);
      $552 = ($551|0)==(45|0);
      if ($552) {
       $553 = $0;
       $554 = $0;
       $555 = ((($554)) + 67|0);
       $556 = HEAPU8[$555>>0]|(HEAPU8[$555+1>>0]<<8)|(HEAPU8[$555+2>>0]<<16)|(HEAPU8[$555+3>>0]<<24);
       (__set_current_error($553,58,$556)|0);
       $557 = $0;
       $558 = ((($557)) + 163|0);
       $559 = HEAPU8[$558>>0]|(HEAPU8[$558+1>>0]<<8)|(HEAPU8[$558+2>>0]<<16)|(HEAPU8[$558+3>>0]<<24);
       $560 = ($559|0)!=(0|0);
       if ($560) {
        $561 = $0;
        $562 = ((($561)) + 134|0);
        $563 = HEAP8[$562>>0]|0;
        $564 = $563 & 1;
        $565 = ($564<<24>>24)!=(0);
        if (!($565)) {
         $566 = $0;
         $567 = ((($566)) + 134|0);
         $568 = HEAP8[$567>>0]|0;
         $569 = $568 & -2;
         $570 = $569 | 1;
         HEAP8[$567>>0] = $570;
         $571 = $0;
         $572 = ((($571)) + 163|0);
         $573 = HEAPU8[$572>>0]|(HEAPU8[$572+1>>0]<<8)|(HEAPU8[$572+2>>0]<<16)|(HEAPU8[$572+3>>0]<<24);
         $574 = $0;
         $575 = $0;
         $576 = ((($575)) + 135|0);
         $577 = HEAPU8[$576>>0]|(HEAPU8[$576+1>>0]<<8)|(HEAPU8[$576+2>>0]<<16)|(HEAPU8[$576+3>>0]<<24);
         $578 = $0;
         $579 = ((($578)) + 135|0);
         $580 = HEAPU8[$579>>0]|(HEAPU8[$579+1>>0]<<8)|(HEAPU8[$579+2>>0]<<16)|(HEAPU8[$579+3>>0]<<24);
         $581 = (_mb_get_error_desc($580)|0);
         $582 = $0;
         $583 = ((($582)) + 139|0);
         $584 = HEAPU8[$583>>0]|(HEAPU8[$583+1>>0]<<8)|(HEAPU8[$583+2>>0]<<16)|(HEAPU8[$583+3>>0]<<24);
         $585 = $0;
         $586 = ((($585)) + 71|0);
         $587 = HEAPU8[$586>>0]|(HEAPU8[$586+1>>0]<<8)|(HEAPU8[$586+2>>0]<<16)|(HEAPU8[$586+3>>0]<<24);
         $588 = ($587|0)!=(0|0);
         do {
          if ($588) {
           $589 = $0;
           $590 = ((($589)) + 79|0);
           $591 = HEAPU8[$590>>0]|(HEAPU8[$590+1>>0]<<8)|(HEAPU8[$590+2>>0]<<16)|(HEAPU8[$590+3>>0]<<24);
           $592 = ($591|0)!=(0);
           if ($592) {
            label = 101;
            break;
           }
           $593 = $0;
           $594 = ((($593)) + 71|0);
           $595 = HEAPU8[$594>>0]|(HEAPU8[$594+1>>0]<<8)|(HEAPU8[$594+2>>0]<<16)|(HEAPU8[$594+3>>0]<<24);
           $596 = ((($595)) + 164|0);
           $597 = HEAPU8[$596>>0]|(HEAPU8[$596+1>>0]<<8)|(HEAPU8[$596+2>>0]<<16)|(HEAPU8[$596+3>>0]<<24);
           $637 = $597;
          } else {
           label = 101;
          }
         } while(0);
         if ((label|0) == 101) {
          $598 = $0;
          $599 = ((($598)) + 143|0);
          $600 = HEAPU8[$599>>0]|(HEAPU8[$599+1>>0]<<8)|(HEAPU8[$599+2>>0]<<16)|(HEAPU8[$599+3>>0]<<24);
          $637 = $600;
         }
         $601 = $0;
         $602 = ((($601)) + 71|0);
         $603 = HEAPU8[$602>>0]|(HEAPU8[$602+1>>0]<<8)|(HEAPU8[$602+2>>0]<<16)|(HEAPU8[$602+3>>0]<<24);
         $604 = ($603|0)!=(0|0);
         do {
          if ($604) {
           $605 = $0;
           $606 = ((($605)) + 79|0);
           $607 = HEAPU8[$606>>0]|(HEAPU8[$606+1>>0]<<8)|(HEAPU8[$606+2>>0]<<16)|(HEAPU8[$606+3>>0]<<24);
           $608 = ($607|0)!=(0);
           if ($608) {
            label = 105;
            break;
           }
           $609 = $0;
           $610 = ((($609)) + 71|0);
           $611 = HEAPU8[$610>>0]|(HEAPU8[$610+1>>0]<<8)|(HEAPU8[$610+2>>0]<<16)|(HEAPU8[$610+3>>0]<<24);
           $612 = ((($611)) + 168|0);
           $613 = HEAPU8[$612>>0]|(HEAPU8[$612+1>>0]<<8);
           $$sink9 = $613;
          } else {
           label = 105;
          }
         } while(0);
         if ((label|0) == 105) {
          $614 = $0;
          $615 = ((($614)) + 147|0);
          $616 = HEAPU8[$615>>0]|(HEAPU8[$615+1>>0]<<8);
          $$sink9 = $616;
         }
         $617 = $$sink9&65535;
         $618 = $617&65535;
         $619 = $0;
         $620 = ((($619)) + 71|0);
         $621 = HEAPU8[$620>>0]|(HEAPU8[$620+1>>0]<<8)|(HEAPU8[$620+2>>0]<<16)|(HEAPU8[$620+3>>0]<<24);
         $622 = ($621|0)!=(0|0);
         do {
          if ($622) {
           $623 = $0;
           $624 = ((($623)) + 79|0);
           $625 = HEAPU8[$624>>0]|(HEAPU8[$624+1>>0]<<8)|(HEAPU8[$624+2>>0]<<16)|(HEAPU8[$624+3>>0]<<24);
           $626 = ($625|0)!=(0);
           if ($626) {
            label = 109;
            break;
           }
           $627 = $0;
           $628 = ((($627)) + 71|0);
           $629 = HEAPU8[$628>>0]|(HEAPU8[$628+1>>0]<<8)|(HEAPU8[$628+2>>0]<<16)|(HEAPU8[$628+3>>0]<<24);
           $630 = ((($629)) + 170|0);
           $631 = HEAPU8[$630>>0]|(HEAPU8[$630+1>>0]<<8);
           $$sink10 = $631;
          } else {
           label = 109;
          }
         } while(0);
         if ((label|0) == 109) {
          $632 = $0;
          $633 = ((($632)) + 149|0);
          $634 = HEAPU8[$633>>0]|(HEAPU8[$633+1>>0]<<8);
          $$sink10 = $634;
         }
         $635 = $$sink10&65535;
         $636 = $635&65535;
         FUNCTION_TABLE_viiiiiiii[$573 & 127]($574,$577,$581,$584,$637,$618,$636,3);
        }
       }
      }
     }
     $result = 16;
     $1413 = $result;
     STACKTOP = sp;return ($1413|0);
    }
   }
   $638 = $context;
   $639 = ((($638)) + 142|0);
   $640 = HEAPU8[$639>>0]|(HEAPU8[$639+1>>0]<<8)|(HEAPU8[$639+2>>0]<<16)|(HEAPU8[$639+3>>0]<<24);
   $641 = HEAPU8[$640>>0]|(HEAPU8[$640+1>>0]<<8)|(HEAPU8[$640+2>>0]<<16)|(HEAPU8[$640+3>>0]<<24);
   $642 = ($641|0)==(8);
   if ($642) {
    $643 = $context;
    $644 = ((($643)) + 142|0);
    $645 = HEAPU8[$644>>0]|(HEAPU8[$644+1>>0]<<8)|(HEAPU8[$644+2>>0]<<16)|(HEAPU8[$644+3>>0]<<24);
    $646 = ((($645)) + 4|0);
    $647 = HEAPU8[$646>>0]|(HEAPU8[$646+1>>0]<<8)|(HEAPU8[$646+2>>0]<<16)|(HEAPU8[$646+3>>0]<<24);
    $648 = ((($647)) + 4|0);
    $649 = HEAPU8[$648>>0]|(HEAPU8[$648+1>>0]<<8)|(HEAPU8[$648+2>>0]<<16)|(HEAPU8[$648+3>>0]<<24);
    $650 = ($649|0)==(45|0);
    if ($650) {
     $651 = $0;
     $652 = ((($651)) + 93|0);
     $653 = HEAPU8[$652>>0]|(HEAPU8[$652+1>>0]<<8)|(HEAPU8[$652+2>>0]<<16)|(HEAPU8[$652+3>>0]<<24);
     $654 = ($653|0)!=(0|0);
     $655 = $0;
     if ($654) {
      $656 = $0;
      $657 = ((($656)) + 67|0);
      $658 = HEAPU8[$657>>0]|(HEAPU8[$657+1>>0]<<8)|(HEAPU8[$657+2>>0]<<16)|(HEAPU8[$657+3>>0]<<24);
      (__set_current_error($655,58,$658)|0);
      $659 = $0;
      $660 = ((($659)) + 163|0);
      $661 = HEAPU8[$660>>0]|(HEAPU8[$660+1>>0]<<8)|(HEAPU8[$660+2>>0]<<16)|(HEAPU8[$660+3>>0]<<24);
      $662 = ($661|0)!=(0|0);
      if (!($662)) {
       $1413 = $result;
       STACKTOP = sp;return ($1413|0);
      }
      $663 = $0;
      $664 = ((($663)) + 134|0);
      $665 = HEAP8[$664>>0]|0;
      $666 = $665 & 1;
      $667 = ($666<<24>>24)!=(0);
      if ($667) {
       $1413 = $result;
       STACKTOP = sp;return ($1413|0);
      }
      $668 = $0;
      $669 = ((($668)) + 134|0);
      $670 = HEAP8[$669>>0]|0;
      $671 = $670 & -2;
      $672 = $671 | 1;
      HEAP8[$669>>0] = $672;
      $673 = $0;
      $674 = ((($673)) + 163|0);
      $675 = HEAPU8[$674>>0]|(HEAPU8[$674+1>>0]<<8)|(HEAPU8[$674+2>>0]<<16)|(HEAPU8[$674+3>>0]<<24);
      $676 = $0;
      $677 = $0;
      $678 = ((($677)) + 135|0);
      $679 = HEAPU8[$678>>0]|(HEAPU8[$678+1>>0]<<8)|(HEAPU8[$678+2>>0]<<16)|(HEAPU8[$678+3>>0]<<24);
      $680 = $0;
      $681 = ((($680)) + 135|0);
      $682 = HEAPU8[$681>>0]|(HEAPU8[$681+1>>0]<<8)|(HEAPU8[$681+2>>0]<<16)|(HEAPU8[$681+3>>0]<<24);
      $683 = (_mb_get_error_desc($682)|0);
      $684 = $0;
      $685 = ((($684)) + 139|0);
      $686 = HEAPU8[$685>>0]|(HEAPU8[$685+1>>0]<<8)|(HEAPU8[$685+2>>0]<<16)|(HEAPU8[$685+3>>0]<<24);
      $687 = $0;
      $688 = ((($687)) + 71|0);
      $689 = HEAPU8[$688>>0]|(HEAPU8[$688+1>>0]<<8)|(HEAPU8[$688+2>>0]<<16)|(HEAPU8[$688+3>>0]<<24);
      $690 = ($689|0)!=(0|0);
      do {
       if ($690) {
        $691 = $0;
        $692 = ((($691)) + 79|0);
        $693 = HEAPU8[$692>>0]|(HEAPU8[$692+1>>0]<<8)|(HEAPU8[$692+2>>0]<<16)|(HEAPU8[$692+3>>0]<<24);
        $694 = ($693|0)!=(0);
        if ($694) {
         label = 120;
         break;
        }
        $695 = $0;
        $696 = ((($695)) + 71|0);
        $697 = HEAPU8[$696>>0]|(HEAPU8[$696+1>>0]<<8)|(HEAPU8[$696+2>>0]<<16)|(HEAPU8[$696+3>>0]<<24);
        $698 = ((($697)) + 164|0);
        $699 = HEAPU8[$698>>0]|(HEAPU8[$698+1>>0]<<8)|(HEAPU8[$698+2>>0]<<16)|(HEAPU8[$698+3>>0]<<24);
        $739 = $699;
       } else {
        label = 120;
       }
      } while(0);
      if ((label|0) == 120) {
       $700 = $0;
       $701 = ((($700)) + 143|0);
       $702 = HEAPU8[$701>>0]|(HEAPU8[$701+1>>0]<<8)|(HEAPU8[$701+2>>0]<<16)|(HEAPU8[$701+3>>0]<<24);
       $739 = $702;
      }
      $703 = $0;
      $704 = ((($703)) + 71|0);
      $705 = HEAPU8[$704>>0]|(HEAPU8[$704+1>>0]<<8)|(HEAPU8[$704+2>>0]<<16)|(HEAPU8[$704+3>>0]<<24);
      $706 = ($705|0)!=(0|0);
      do {
       if ($706) {
        $707 = $0;
        $708 = ((($707)) + 79|0);
        $709 = HEAPU8[$708>>0]|(HEAPU8[$708+1>>0]<<8)|(HEAPU8[$708+2>>0]<<16)|(HEAPU8[$708+3>>0]<<24);
        $710 = ($709|0)!=(0);
        if ($710) {
         label = 124;
         break;
        }
        $711 = $0;
        $712 = ((($711)) + 71|0);
        $713 = HEAPU8[$712>>0]|(HEAPU8[$712+1>>0]<<8)|(HEAPU8[$712+2>>0]<<16)|(HEAPU8[$712+3>>0]<<24);
        $714 = ((($713)) + 168|0);
        $715 = HEAPU8[$714>>0]|(HEAPU8[$714+1>>0]<<8);
        $$sink11 = $715;
       } else {
        label = 124;
       }
      } while(0);
      if ((label|0) == 124) {
       $716 = $0;
       $717 = ((($716)) + 147|0);
       $718 = HEAPU8[$717>>0]|(HEAPU8[$717+1>>0]<<8);
       $$sink11 = $718;
      }
      $719 = $$sink11&65535;
      $720 = $719&65535;
      $721 = $0;
      $722 = ((($721)) + 71|0);
      $723 = HEAPU8[$722>>0]|(HEAPU8[$722+1>>0]<<8)|(HEAPU8[$722+2>>0]<<16)|(HEAPU8[$722+3>>0]<<24);
      $724 = ($723|0)!=(0|0);
      do {
       if ($724) {
        $725 = $0;
        $726 = ((($725)) + 79|0);
        $727 = HEAPU8[$726>>0]|(HEAPU8[$726+1>>0]<<8)|(HEAPU8[$726+2>>0]<<16)|(HEAPU8[$726+3>>0]<<24);
        $728 = ($727|0)!=(0);
        if ($728) {
         label = 128;
         break;
        }
        $729 = $0;
        $730 = ((($729)) + 71|0);
        $731 = HEAPU8[$730>>0]|(HEAPU8[$730+1>>0]<<8)|(HEAPU8[$730+2>>0]<<16)|(HEAPU8[$730+3>>0]<<24);
        $732 = ((($731)) + 170|0);
        $733 = HEAPU8[$732>>0]|(HEAPU8[$732+1>>0]<<8);
        $$sink12 = $733;
       } else {
        label = 128;
       }
      } while(0);
      if ((label|0) == 128) {
       $734 = $0;
       $735 = ((($734)) + 149|0);
       $736 = HEAPU8[$735>>0]|(HEAPU8[$735+1>>0]<<8);
       $$sink12 = $736;
      }
      $737 = $$sink12&65535;
      $738 = $737&65535;
      FUNCTION_TABLE_viiiiiiii[$675 & 127]($676,$679,$683,$686,$739,$720,$738,3);
      $1413 = $result;
      STACKTOP = sp;return ($1413|0);
     }
     __begin_class($655);
     $740 = $1;
     $741 = HEAP8[$740>>0]|0;
     $742 = (__is_identifier_char($741)|0);
     $743 = ($742<<24>>24)!=(0);
     if (!($743)) {
      $744 = $1;
      $745 = (_mb_uu_ischar($744)|0);
      $746 = ($745|0)!=(0);
      if (!($746)) {
       $result = 0;
       $1413 = $result;
       STACKTOP = sp;return ($1413|0);
      }
     }
     $747 = $glbsyminscope;
     $748 = ($747|0)!=(0|0);
     do {
      if ($748) {
       $749 = $glbsyminscope;
       $750 = HEAPU8[$749>>0]|(HEAPU8[$749+1>>0]<<8)|(HEAPU8[$749+2>>0]<<16)|(HEAPU8[$749+3>>0]<<24);
       $751 = HEAPU8[$750>>0]|(HEAPU8[$750+1>>0]<<8)|(HEAPU8[$750+2>>0]<<16)|(HEAPU8[$750+3>>0]<<24);
       $752 = ($751|0)==(9);
       if (!($752)) {
        break;
       }
       $753 = $0;
       $754 = $0;
       $755 = ((($754)) + 67|0);
       $756 = HEAPU8[$755>>0]|(HEAPU8[$755+1>>0]<<8)|(HEAPU8[$755+2>>0]<<16)|(HEAPU8[$755+3>>0]<<24);
       (__set_current_error($753,56,$756)|0);
       $757 = $0;
       $758 = ((($757)) + 163|0);
       $759 = HEAPU8[$758>>0]|(HEAPU8[$758+1>>0]<<8)|(HEAPU8[$758+2>>0]<<16)|(HEAPU8[$758+3>>0]<<24);
       $760 = ($759|0)!=(0|0);
       if (!($760)) {
        $1413 = $result;
        STACKTOP = sp;return ($1413|0);
       }
       $761 = $0;
       $762 = ((($761)) + 134|0);
       $763 = HEAP8[$762>>0]|0;
       $764 = $763 & 1;
       $765 = ($764<<24>>24)!=(0);
       if ($765) {
        $1413 = $result;
        STACKTOP = sp;return ($1413|0);
       }
       $766 = $0;
       $767 = ((($766)) + 134|0);
       $768 = HEAP8[$767>>0]|0;
       $769 = $768 & -2;
       $770 = $769 | 1;
       HEAP8[$767>>0] = $770;
       $771 = $0;
       $772 = ((($771)) + 163|0);
       $773 = HEAPU8[$772>>0]|(HEAPU8[$772+1>>0]<<8)|(HEAPU8[$772+2>>0]<<16)|(HEAPU8[$772+3>>0]<<24);
       $774 = $0;
       $775 = $0;
       $776 = ((($775)) + 135|0);
       $777 = HEAPU8[$776>>0]|(HEAPU8[$776+1>>0]<<8)|(HEAPU8[$776+2>>0]<<16)|(HEAPU8[$776+3>>0]<<24);
       $778 = $0;
       $779 = ((($778)) + 135|0);
       $780 = HEAPU8[$779>>0]|(HEAPU8[$779+1>>0]<<8)|(HEAPU8[$779+2>>0]<<16)|(HEAPU8[$779+3>>0]<<24);
       $781 = (_mb_get_error_desc($780)|0);
       $782 = $0;
       $783 = ((($782)) + 139|0);
       $784 = HEAPU8[$783>>0]|(HEAPU8[$783+1>>0]<<8)|(HEAPU8[$783+2>>0]<<16)|(HEAPU8[$783+3>>0]<<24);
       $785 = $0;
       $786 = ((($785)) + 71|0);
       $787 = HEAPU8[$786>>0]|(HEAPU8[$786+1>>0]<<8)|(HEAPU8[$786+2>>0]<<16)|(HEAPU8[$786+3>>0]<<24);
       $788 = ($787|0)!=(0|0);
       do {
        if ($788) {
         $789 = $0;
         $790 = ((($789)) + 79|0);
         $791 = HEAPU8[$790>>0]|(HEAPU8[$790+1>>0]<<8)|(HEAPU8[$790+2>>0]<<16)|(HEAPU8[$790+3>>0]<<24);
         $792 = ($791|0)!=(0);
         if ($792) {
          label = 140;
          break;
         }
         $793 = $0;
         $794 = ((($793)) + 71|0);
         $795 = HEAPU8[$794>>0]|(HEAPU8[$794+1>>0]<<8)|(HEAPU8[$794+2>>0]<<16)|(HEAPU8[$794+3>>0]<<24);
         $796 = ((($795)) + 164|0);
         $797 = HEAPU8[$796>>0]|(HEAPU8[$796+1>>0]<<8)|(HEAPU8[$796+2>>0]<<16)|(HEAPU8[$796+3>>0]<<24);
         $837 = $797;
        } else {
         label = 140;
        }
       } while(0);
       if ((label|0) == 140) {
        $798 = $0;
        $799 = ((($798)) + 143|0);
        $800 = HEAPU8[$799>>0]|(HEAPU8[$799+1>>0]<<8)|(HEAPU8[$799+2>>0]<<16)|(HEAPU8[$799+3>>0]<<24);
        $837 = $800;
       }
       $801 = $0;
       $802 = ((($801)) + 71|0);
       $803 = HEAPU8[$802>>0]|(HEAPU8[$802+1>>0]<<8)|(HEAPU8[$802+2>>0]<<16)|(HEAPU8[$802+3>>0]<<24);
       $804 = ($803|0)!=(0|0);
       do {
        if ($804) {
         $805 = $0;
         $806 = ((($805)) + 79|0);
         $807 = HEAPU8[$806>>0]|(HEAPU8[$806+1>>0]<<8)|(HEAPU8[$806+2>>0]<<16)|(HEAPU8[$806+3>>0]<<24);
         $808 = ($807|0)!=(0);
         if ($808) {
          label = 144;
          break;
         }
         $809 = $0;
         $810 = ((($809)) + 71|0);
         $811 = HEAPU8[$810>>0]|(HEAPU8[$810+1>>0]<<8)|(HEAPU8[$810+2>>0]<<16)|(HEAPU8[$810+3>>0]<<24);
         $812 = ((($811)) + 168|0);
         $813 = HEAPU8[$812>>0]|(HEAPU8[$812+1>>0]<<8);
         $$sink13 = $813;
        } else {
         label = 144;
        }
       } while(0);
       if ((label|0) == 144) {
        $814 = $0;
        $815 = ((($814)) + 147|0);
        $816 = HEAPU8[$815>>0]|(HEAPU8[$815+1>>0]<<8);
        $$sink13 = $816;
       }
       $817 = $$sink13&65535;
       $818 = $817&65535;
       $819 = $0;
       $820 = ((($819)) + 71|0);
       $821 = HEAPU8[$820>>0]|(HEAPU8[$820+1>>0]<<8)|(HEAPU8[$820+2>>0]<<16)|(HEAPU8[$820+3>>0]<<24);
       $822 = ($821|0)!=(0|0);
       do {
        if ($822) {
         $823 = $0;
         $824 = ((($823)) + 79|0);
         $825 = HEAPU8[$824>>0]|(HEAPU8[$824+1>>0]<<8)|(HEAPU8[$824+2>>0]<<16)|(HEAPU8[$824+3>>0]<<24);
         $826 = ($825|0)!=(0);
         if ($826) {
          label = 148;
          break;
         }
         $827 = $0;
         $828 = ((($827)) + 71|0);
         $829 = HEAPU8[$828>>0]|(HEAPU8[$828+1>>0]<<8)|(HEAPU8[$828+2>>0]<<16)|(HEAPU8[$828+3>>0]<<24);
         $830 = ((($829)) + 170|0);
         $831 = HEAPU8[$830>>0]|(HEAPU8[$830+1>>0]<<8);
         $$sink14 = $831;
        } else {
         label = 148;
        }
       } while(0);
       if ((label|0) == 148) {
        $832 = $0;
        $833 = ((($832)) + 149|0);
        $834 = HEAPU8[$833>>0]|(HEAPU8[$833+1>>0]<<8);
        $$sink14 = $834;
       }
       $835 = $$sink14&65535;
       $836 = $835&65535;
       FUNCTION_TABLE_viiiiiiii[$773 & 127]($774,$777,$781,$784,$837,$818,$836,3);
       $1413 = $result;
       STACKTOP = sp;return ($1413|0);
      }
     } while(0);
     $838 = $context;
     $839 = ((($838)) + 160|0);
     $840 = HEAPU8[$839>>0]|(HEAPU8[$839+1>>0]<<8);
     $841 = $840&65535;
     $842 = ($841|0)>(1);
     if (!($842)) {
      $result = 16;
      $1413 = $result;
      STACKTOP = sp;return ($1413|0);
     }
     $843 = $0;
     $844 = $0;
     $845 = ((($844)) + 67|0);
     $846 = HEAPU8[$845>>0]|(HEAPU8[$845+1>>0]<<8)|(HEAPU8[$845+2>>0]<<16)|(HEAPU8[$845+3>>0]<<24);
     (__set_current_error($843,56,$846)|0);
     $847 = $0;
     $848 = ((($847)) + 163|0);
     $849 = HEAPU8[$848>>0]|(HEAPU8[$848+1>>0]<<8)|(HEAPU8[$848+2>>0]<<16)|(HEAPU8[$848+3>>0]<<24);
     $850 = ($849|0)!=(0|0);
     if (!($850)) {
      $1413 = $result;
      STACKTOP = sp;return ($1413|0);
     }
     $851 = $0;
     $852 = ((($851)) + 134|0);
     $853 = HEAP8[$852>>0]|0;
     $854 = $853 & 1;
     $855 = ($854<<24>>24)!=(0);
     if ($855) {
      $1413 = $result;
      STACKTOP = sp;return ($1413|0);
     }
     $856 = $0;
     $857 = ((($856)) + 134|0);
     $858 = HEAP8[$857>>0]|0;
     $859 = $858 & -2;
     $860 = $859 | 1;
     HEAP8[$857>>0] = $860;
     $861 = $0;
     $862 = ((($861)) + 163|0);
     $863 = HEAPU8[$862>>0]|(HEAPU8[$862+1>>0]<<8)|(HEAPU8[$862+2>>0]<<16)|(HEAPU8[$862+3>>0]<<24);
     $864 = $0;
     $865 = $0;
     $866 = ((($865)) + 135|0);
     $867 = HEAPU8[$866>>0]|(HEAPU8[$866+1>>0]<<8)|(HEAPU8[$866+2>>0]<<16)|(HEAPU8[$866+3>>0]<<24);
     $868 = $0;
     $869 = ((($868)) + 135|0);
     $870 = HEAPU8[$869>>0]|(HEAPU8[$869+1>>0]<<8)|(HEAPU8[$869+2>>0]<<16)|(HEAPU8[$869+3>>0]<<24);
     $871 = (_mb_get_error_desc($870)|0);
     $872 = $0;
     $873 = ((($872)) + 139|0);
     $874 = HEAPU8[$873>>0]|(HEAPU8[$873+1>>0]<<8)|(HEAPU8[$873+2>>0]<<16)|(HEAPU8[$873+3>>0]<<24);
     $875 = $0;
     $876 = ((($875)) + 71|0);
     $877 = HEAPU8[$876>>0]|(HEAPU8[$876+1>>0]<<8)|(HEAPU8[$876+2>>0]<<16)|(HEAPU8[$876+3>>0]<<24);
     $878 = ($877|0)!=(0|0);
     do {
      if ($878) {
       $879 = $0;
       $880 = ((($879)) + 79|0);
       $881 = HEAPU8[$880>>0]|(HEAPU8[$880+1>>0]<<8)|(HEAPU8[$880+2>>0]<<16)|(HEAPU8[$880+3>>0]<<24);
       $882 = ($881|0)!=(0);
       if ($882) {
        label = 156;
        break;
       }
       $883 = $0;
       $884 = ((($883)) + 71|0);
       $885 = HEAPU8[$884>>0]|(HEAPU8[$884+1>>0]<<8)|(HEAPU8[$884+2>>0]<<16)|(HEAPU8[$884+3>>0]<<24);
       $886 = ((($885)) + 164|0);
       $887 = HEAPU8[$886>>0]|(HEAPU8[$886+1>>0]<<8)|(HEAPU8[$886+2>>0]<<16)|(HEAPU8[$886+3>>0]<<24);
       $927 = $887;
      } else {
       label = 156;
      }
     } while(0);
     if ((label|0) == 156) {
      $888 = $0;
      $889 = ((($888)) + 143|0);
      $890 = HEAPU8[$889>>0]|(HEAPU8[$889+1>>0]<<8)|(HEAPU8[$889+2>>0]<<16)|(HEAPU8[$889+3>>0]<<24);
      $927 = $890;
     }
     $891 = $0;
     $892 = ((($891)) + 71|0);
     $893 = HEAPU8[$892>>0]|(HEAPU8[$892+1>>0]<<8)|(HEAPU8[$892+2>>0]<<16)|(HEAPU8[$892+3>>0]<<24);
     $894 = ($893|0)!=(0|0);
     do {
      if ($894) {
       $895 = $0;
       $896 = ((($895)) + 79|0);
       $897 = HEAPU8[$896>>0]|(HEAPU8[$896+1>>0]<<8)|(HEAPU8[$896+2>>0]<<16)|(HEAPU8[$896+3>>0]<<24);
       $898 = ($897|0)!=(0);
       if ($898) {
        label = 160;
        break;
       }
       $899 = $0;
       $900 = ((($899)) + 71|0);
       $901 = HEAPU8[$900>>0]|(HEAPU8[$900+1>>0]<<8)|(HEAPU8[$900+2>>0]<<16)|(HEAPU8[$900+3>>0]<<24);
       $902 = ((($901)) + 168|0);
       $903 = HEAPU8[$902>>0]|(HEAPU8[$902+1>>0]<<8);
       $$sink15 = $903;
      } else {
       label = 160;
      }
     } while(0);
     if ((label|0) == 160) {
      $904 = $0;
      $905 = ((($904)) + 147|0);
      $906 = HEAPU8[$905>>0]|(HEAPU8[$905+1>>0]<<8);
      $$sink15 = $906;
     }
     $907 = $$sink15&65535;
     $908 = $907&65535;
     $909 = $0;
     $910 = ((($909)) + 71|0);
     $911 = HEAPU8[$910>>0]|(HEAPU8[$910+1>>0]<<8)|(HEAPU8[$910+2>>0]<<16)|(HEAPU8[$910+3>>0]<<24);
     $912 = ($911|0)!=(0|0);
     do {
      if ($912) {
       $913 = $0;
       $914 = ((($913)) + 79|0);
       $915 = HEAPU8[$914>>0]|(HEAPU8[$914+1>>0]<<8)|(HEAPU8[$914+2>>0]<<16)|(HEAPU8[$914+3>>0]<<24);
       $916 = ($915|0)!=(0);
       if ($916) {
        label = 164;
        break;
       }
       $917 = $0;
       $918 = ((($917)) + 71|0);
       $919 = HEAPU8[$918>>0]|(HEAPU8[$918+1>>0]<<8)|(HEAPU8[$918+2>>0]<<16)|(HEAPU8[$918+3>>0]<<24);
       $920 = ((($919)) + 170|0);
       $921 = HEAPU8[$920>>0]|(HEAPU8[$920+1>>0]<<8);
       $$sink16 = $921;
      } else {
       label = 164;
      }
     } while(0);
     if ((label|0) == 164) {
      $922 = $0;
      $923 = ((($922)) + 149|0);
      $924 = HEAPU8[$923>>0]|(HEAPU8[$923+1>>0]<<8);
      $$sink16 = $924;
     }
     $925 = $$sink16&65535;
     $926 = $925&65535;
     FUNCTION_TABLE_viiiiiiii[$863 & 127]($864,$867,$871,$874,$927,$908,$926,3);
     $1413 = $result;
     STACKTOP = sp;return ($1413|0);
    }
   }
   $928 = $context;
   $929 = ((($928)) + 142|0);
   $930 = HEAPU8[$929>>0]|(HEAPU8[$929+1>>0]<<8)|(HEAPU8[$929+2>>0]<<16)|(HEAPU8[$929+3>>0]<<24);
   $931 = HEAPU8[$930>>0]|(HEAPU8[$930+1>>0]<<8)|(HEAPU8[$930+2>>0]<<16)|(HEAPU8[$930+3>>0]<<24);
   $932 = ($931|0)==(8);
   if ($932) {
    $933 = $context;
    $934 = ((($933)) + 142|0);
    $935 = HEAPU8[$934>>0]|(HEAPU8[$934+1>>0]<<8)|(HEAPU8[$934+2>>0]<<16)|(HEAPU8[$934+3>>0]<<24);
    $936 = ((($935)) + 4|0);
    $937 = HEAPU8[$936>>0]|(HEAPU8[$936+1>>0]<<8)|(HEAPU8[$936+2>>0]<<16)|(HEAPU8[$936+3>>0]<<24);
    $938 = ((($937)) + 4|0);
    $939 = HEAPU8[$938>>0]|(HEAPU8[$938+1>>0]<<8)|(HEAPU8[$938+2>>0]<<16)|(HEAPU8[$938+3>>0]<<24);
    $940 = ($939|0)==(46|0);
    if ($940) {
     $941 = $0;
     $942 = (__end_class($941)|0);
     $943 = ($942<<24>>24)!=(0);
     if ($943) {
      $944 = $0;
      (__pop_scope($944,0)|0);
     }
    }
   }
  }
 } while(0);
 $945 = $context;
 $946 = ((($945)) + 142|0);
 $947 = HEAPU8[$946>>0]|(HEAPU8[$946+1>>0]<<8)|(HEAPU8[$946+2>>0]<<16)|(HEAPU8[$946+3>>0]<<24);
 $948 = ($947|0)!=(0|0);
 L272: do {
  if ($948) {
   $949 = $1;
   $950 = HEAP8[$949>>0]|0;
   $951 = (__is_bracket_char($950)|0);
   $952 = ($951<<24>>24)!=(0);
   if (!($952)) {
    $953 = $0;
    $954 = $1;
    $955 = (__search_identifier_in_scope_chain($953,0,$954,0,0,0)|0);
    $glbsyminscope = $955;
    $956 = $glbsyminscope;
    $957 = ($956|0)!=(0|0);
    if ($957) {
     $958 = $glbsyminscope;
     $959 = HEAPU8[$958>>0]|(HEAPU8[$958+1>>0]<<8)|(HEAPU8[$958+2>>0]<<16)|(HEAPU8[$958+3>>0]<<24);
     $960 = HEAPU8[$959>>0]|(HEAPU8[$959+1>>0]<<8)|(HEAPU8[$959+2>>0]<<16)|(HEAPU8[$959+3>>0]<<24);
     $961 = ($960|0)==(17);
     if ($961) {
      $962 = $context;
      $963 = ((($962)) + 142|0);
      $964 = HEAPU8[$963>>0]|(HEAPU8[$963+1>>0]<<8)|(HEAPU8[$963+2>>0]<<16)|(HEAPU8[$963+3>>0]<<24);
      $965 = HEAPU8[$964>>0]|(HEAPU8[$964+1>>0]<<8)|(HEAPU8[$964+2>>0]<<16)|(HEAPU8[$964+3>>0]<<24);
      $966 = ($965|0)==(8);
      if ($966) {
       $967 = $context;
       $968 = ((($967)) + 142|0);
       $969 = HEAPU8[$968>>0]|(HEAPU8[$968+1>>0]<<8)|(HEAPU8[$968+2>>0]<<16)|(HEAPU8[$968+3>>0]<<24);
       $970 = ((($969)) + 4|0);
       $971 = HEAPU8[$970>>0]|(HEAPU8[$970+1>>0]<<8)|(HEAPU8[$970+2>>0]<<16)|(HEAPU8[$970+3>>0]<<24);
       $972 = ((($971)) + 4|0);
       $973 = HEAPU8[$972>>0]|(HEAPU8[$972+1>>0]<<8)|(HEAPU8[$972+2>>0]<<16)|(HEAPU8[$972+3>>0]<<24);
       $974 = ($973|0)==(42|0);
       if ($974) {
        $975 = $0;
        $976 = (__begin_routine($975)|0);
        $977 = ($976|0)!=(0);
        if ($977) {
         $1413 = $result;
         STACKTOP = sp;return ($1413|0);
        }
       }
      }
      $result = 17;
      $1413 = $result;
      STACKTOP = sp;return ($1413|0);
     }
    }
    $978 = $context;
    $979 = ((($978)) + 142|0);
    $980 = HEAPU8[$979>>0]|(HEAPU8[$979+1>>0]<<8)|(HEAPU8[$979+2>>0]<<16)|(HEAPU8[$979+3>>0]<<24);
    $981 = HEAPU8[$980>>0]|(HEAPU8[$980+1>>0]<<8)|(HEAPU8[$980+2>>0]<<16)|(HEAPU8[$980+3>>0]<<24);
    $982 = ($981|0)==(8);
    if ($982) {
     $983 = $context;
     $984 = ((($983)) + 142|0);
     $985 = HEAPU8[$984>>0]|(HEAPU8[$984+1>>0]<<8)|(HEAPU8[$984+2>>0]<<16)|(HEAPU8[$984+3>>0]<<24);
     $986 = ((($985)) + 4|0);
     $987 = HEAPU8[$986>>0]|(HEAPU8[$986+1>>0]<<8)|(HEAPU8[$986+2>>0]<<16)|(HEAPU8[$986+3>>0]<<24);
     $988 = ((($987)) + 4|0);
     $989 = HEAPU8[$988>>0]|(HEAPU8[$988+1>>0]<<8)|(HEAPU8[$988+2>>0]<<16)|(HEAPU8[$988+3>>0]<<24);
     $990 = ($989|0)==(42|0);
     if (!($990)) {
      label = 181;
     }
    } else {
     label = 181;
    }
    do {
     if ((label|0) == 181) {
      $991 = $context;
      $992 = ((($991)) + 142|0);
      $993 = HEAPU8[$992>>0]|(HEAPU8[$992+1>>0]<<8)|(HEAPU8[$992+2>>0]<<16)|(HEAPU8[$992+3>>0]<<24);
      $994 = HEAPU8[$993>>0]|(HEAPU8[$993+1>>0]<<8)|(HEAPU8[$993+2>>0]<<16)|(HEAPU8[$993+3>>0]<<24);
      $995 = ($994|0)==(8);
      if ($995) {
       $996 = $context;
       $997 = ((($996)) + 142|0);
       $998 = HEAPU8[$997>>0]|(HEAPU8[$997+1>>0]<<8)|(HEAPU8[$997+2>>0]<<16)|(HEAPU8[$997+3>>0]<<24);
       $999 = ((($998)) + 4|0);
       $1000 = HEAPU8[$999>>0]|(HEAPU8[$999+1>>0]<<8)|(HEAPU8[$999+2>>0]<<16)|(HEAPU8[$999+3>>0]<<24);
       $1001 = ((($1000)) + 4|0);
       $1002 = HEAPU8[$1001>>0]|(HEAPU8[$1001+1>>0]<<8)|(HEAPU8[$1001+2>>0]<<16)|(HEAPU8[$1001+3>>0]<<24);
       $1003 = ($1002|0)==(41|0);
       if ($1003) {
        break;
       }
      }
      $1221 = $context;
      $1222 = ((($1221)) + 142|0);
      $1223 = HEAPU8[$1222>>0]|(HEAPU8[$1222+1>>0]<<8)|(HEAPU8[$1222+2>>0]<<16)|(HEAPU8[$1222+3>>0]<<24);
      $1224 = HEAPU8[$1223>>0]|(HEAPU8[$1223+1>>0]<<8)|(HEAPU8[$1223+2>>0]<<16)|(HEAPU8[$1223+3>>0]<<24);
      $1225 = ($1224|0)==(8);
      if (!($1225)) {
       break L272;
      }
      $1226 = $context;
      $1227 = ((($1226)) + 142|0);
      $1228 = HEAPU8[$1227>>0]|(HEAPU8[$1227+1>>0]<<8)|(HEAPU8[$1227+2>>0]<<16)|(HEAPU8[$1227+3>>0]<<24);
      $1229 = ((($1228)) + 4|0);
      $1230 = HEAPU8[$1229>>0]|(HEAPU8[$1229+1>>0]<<8)|(HEAPU8[$1229+2>>0]<<16)|(HEAPU8[$1229+3>>0]<<24);
      $1231 = ((($1230)) + 4|0);
      $1232 = HEAPU8[$1231>>0]|(HEAPU8[$1231+1>>0]<<8)|(HEAPU8[$1231+2>>0]<<16)|(HEAPU8[$1231+3>>0]<<24);
      $1233 = ($1232|0)==(43|0);
      if (!($1233)) {
       break L272;
      }
      $1234 = $0;
      $1235 = (__end_routine($1234)|0);
      $1236 = ($1235<<24>>24)!=(0);
      if (!($1236)) {
       break L272;
      }
      $1237 = $0;
      (__pop_scope($1237,0)|0);
      break L272;
     }
    } while(0);
    $1004 = $context;
    $1005 = ((($1004)) + 142|0);
    $1006 = HEAPU8[$1005>>0]|(HEAPU8[$1005+1>>0]<<8)|(HEAPU8[$1005+2>>0]<<16)|(HEAPU8[$1005+3>>0]<<24);
    $1007 = HEAPU8[$1006>>0]|(HEAPU8[$1006+1>>0]<<8)|(HEAPU8[$1006+2>>0]<<16)|(HEAPU8[$1006+3>>0]<<24);
    $1008 = ($1007|0)==(8);
    if ($1008) {
     $1009 = $context;
     $1010 = ((($1009)) + 142|0);
     $1011 = HEAPU8[$1010>>0]|(HEAPU8[$1010+1>>0]<<8)|(HEAPU8[$1010+2>>0]<<16)|(HEAPU8[$1010+3>>0]<<24);
     $1012 = ((($1011)) + 4|0);
     $1013 = HEAPU8[$1012>>0]|(HEAPU8[$1012+1>>0]<<8)|(HEAPU8[$1012+2>>0]<<16)|(HEAPU8[$1012+3>>0]<<24);
     $1014 = ((($1013)) + 4|0);
     $1015 = HEAPU8[$1014>>0]|(HEAPU8[$1014+1>>0]<<8)|(HEAPU8[$1014+2>>0]<<16)|(HEAPU8[$1014+3>>0]<<24);
     $1016 = ($1015|0)==(42|0);
     if ($1016) {
      $1017 = $0;
      $1018 = (__begin_routine($1017)|0);
      $1019 = ($1018|0)!=(0);
      if ($1019) {
       $1413 = $result;
       STACKTOP = sp;return ($1413|0);
      }
     }
    }
    $1020 = $1;
    $1021 = HEAP8[$1020>>0]|0;
    $1022 = (__is_identifier_char($1021)|0);
    $1023 = ($1022<<24>>24)!=(0);
    if (!($1023)) {
     $1024 = $1;
     $1025 = (_mb_uu_ischar($1024)|0);
     $1026 = ($1025|0)!=(0);
     if (!($1026)) {
      $result = 0;
      $1413 = $result;
      STACKTOP = sp;return ($1413|0);
     }
    }
    $1027 = $glbsyminscope;
    $1028 = ($1027|0)!=(0|0);
    if ($1028) {
     $1029 = $glbsyminscope;
     $1030 = HEAPU8[$1029>>0]|(HEAPU8[$1029+1>>0]<<8)|(HEAPU8[$1029+2>>0]<<16)|(HEAPU8[$1029+3>>0]<<24);
     $1031 = HEAPU8[$1030>>0]|(HEAPU8[$1030+1>>0]<<8)|(HEAPU8[$1030+2>>0]<<16)|(HEAPU8[$1030+3>>0]<<24);
     $1032 = ($1031|0)==(9);
     if ($1032) {
      $1033 = $0;
      $1034 = $0;
      $1035 = ((($1034)) + 67|0);
      $1036 = HEAPU8[$1035>>0]|(HEAPU8[$1035+1>>0]<<8)|(HEAPU8[$1035+2>>0]<<16)|(HEAPU8[$1035+3>>0]<<24);
      (__set_current_error($1033,53,$1036)|0);
      $1037 = $0;
      $1038 = ((($1037)) + 163|0);
      $1039 = HEAPU8[$1038>>0]|(HEAPU8[$1038+1>>0]<<8)|(HEAPU8[$1038+2>>0]<<16)|(HEAPU8[$1038+3>>0]<<24);
      $1040 = ($1039|0)!=(0|0);
      if (!($1040)) {
       $1413 = $result;
       STACKTOP = sp;return ($1413|0);
      }
      $1041 = $0;
      $1042 = ((($1041)) + 134|0);
      $1043 = HEAP8[$1042>>0]|0;
      $1044 = $1043 & 1;
      $1045 = ($1044<<24>>24)!=(0);
      if ($1045) {
       $1413 = $result;
       STACKTOP = sp;return ($1413|0);
      }
      $1046 = $0;
      $1047 = ((($1046)) + 134|0);
      $1048 = HEAP8[$1047>>0]|0;
      $1049 = $1048 & -2;
      $1050 = $1049 | 1;
      HEAP8[$1047>>0] = $1050;
      $1051 = $0;
      $1052 = ((($1051)) + 163|0);
      $1053 = HEAPU8[$1052>>0]|(HEAPU8[$1052+1>>0]<<8)|(HEAPU8[$1052+2>>0]<<16)|(HEAPU8[$1052+3>>0]<<24);
      $1054 = $0;
      $1055 = $0;
      $1056 = ((($1055)) + 135|0);
      $1057 = HEAPU8[$1056>>0]|(HEAPU8[$1056+1>>0]<<8)|(HEAPU8[$1056+2>>0]<<16)|(HEAPU8[$1056+3>>0]<<24);
      $1058 = $0;
      $1059 = ((($1058)) + 135|0);
      $1060 = HEAPU8[$1059>>0]|(HEAPU8[$1059+1>>0]<<8)|(HEAPU8[$1059+2>>0]<<16)|(HEAPU8[$1059+3>>0]<<24);
      $1061 = (_mb_get_error_desc($1060)|0);
      $1062 = $0;
      $1063 = ((($1062)) + 139|0);
      $1064 = HEAPU8[$1063>>0]|(HEAPU8[$1063+1>>0]<<8)|(HEAPU8[$1063+2>>0]<<16)|(HEAPU8[$1063+3>>0]<<24);
      $1065 = $0;
      $1066 = ((($1065)) + 71|0);
      $1067 = HEAPU8[$1066>>0]|(HEAPU8[$1066+1>>0]<<8)|(HEAPU8[$1066+2>>0]<<16)|(HEAPU8[$1066+3>>0]<<24);
      $1068 = ($1067|0)!=(0|0);
      do {
       if ($1068) {
        $1069 = $0;
        $1070 = ((($1069)) + 79|0);
        $1071 = HEAPU8[$1070>>0]|(HEAPU8[$1070+1>>0]<<8)|(HEAPU8[$1070+2>>0]<<16)|(HEAPU8[$1070+3>>0]<<24);
        $1072 = ($1071|0)!=(0);
        if ($1072) {
         label = 196;
         break;
        }
        $1073 = $0;
        $1074 = ((($1073)) + 71|0);
        $1075 = HEAPU8[$1074>>0]|(HEAPU8[$1074+1>>0]<<8)|(HEAPU8[$1074+2>>0]<<16)|(HEAPU8[$1074+3>>0]<<24);
        $1076 = ((($1075)) + 164|0);
        $1077 = HEAPU8[$1076>>0]|(HEAPU8[$1076+1>>0]<<8)|(HEAPU8[$1076+2>>0]<<16)|(HEAPU8[$1076+3>>0]<<24);
        $1117 = $1077;
       } else {
        label = 196;
       }
      } while(0);
      if ((label|0) == 196) {
       $1078 = $0;
       $1079 = ((($1078)) + 143|0);
       $1080 = HEAPU8[$1079>>0]|(HEAPU8[$1079+1>>0]<<8)|(HEAPU8[$1079+2>>0]<<16)|(HEAPU8[$1079+3>>0]<<24);
       $1117 = $1080;
      }
      $1081 = $0;
      $1082 = ((($1081)) + 71|0);
      $1083 = HEAPU8[$1082>>0]|(HEAPU8[$1082+1>>0]<<8)|(HEAPU8[$1082+2>>0]<<16)|(HEAPU8[$1082+3>>0]<<24);
      $1084 = ($1083|0)!=(0|0);
      do {
       if ($1084) {
        $1085 = $0;
        $1086 = ((($1085)) + 79|0);
        $1087 = HEAPU8[$1086>>0]|(HEAPU8[$1086+1>>0]<<8)|(HEAPU8[$1086+2>>0]<<16)|(HEAPU8[$1086+3>>0]<<24);
        $1088 = ($1087|0)!=(0);
        if ($1088) {
         label = 200;
         break;
        }
        $1089 = $0;
        $1090 = ((($1089)) + 71|0);
        $1091 = HEAPU8[$1090>>0]|(HEAPU8[$1090+1>>0]<<8)|(HEAPU8[$1090+2>>0]<<16)|(HEAPU8[$1090+3>>0]<<24);
        $1092 = ((($1091)) + 168|0);
        $1093 = HEAPU8[$1092>>0]|(HEAPU8[$1092+1>>0]<<8);
        $$sink17 = $1093;
       } else {
        label = 200;
       }
      } while(0);
      if ((label|0) == 200) {
       $1094 = $0;
       $1095 = ((($1094)) + 147|0);
       $1096 = HEAPU8[$1095>>0]|(HEAPU8[$1095+1>>0]<<8);
       $$sink17 = $1096;
      }
      $1097 = $$sink17&65535;
      $1098 = $1097&65535;
      $1099 = $0;
      $1100 = ((($1099)) + 71|0);
      $1101 = HEAPU8[$1100>>0]|(HEAPU8[$1100+1>>0]<<8)|(HEAPU8[$1100+2>>0]<<16)|(HEAPU8[$1100+3>>0]<<24);
      $1102 = ($1101|0)!=(0|0);
      do {
       if ($1102) {
        $1103 = $0;
        $1104 = ((($1103)) + 79|0);
        $1105 = HEAPU8[$1104>>0]|(HEAPU8[$1104+1>>0]<<8)|(HEAPU8[$1104+2>>0]<<16)|(HEAPU8[$1104+3>>0]<<24);
        $1106 = ($1105|0)!=(0);
        if ($1106) {
         label = 204;
         break;
        }
        $1107 = $0;
        $1108 = ((($1107)) + 71|0);
        $1109 = HEAPU8[$1108>>0]|(HEAPU8[$1108+1>>0]<<8)|(HEAPU8[$1108+2>>0]<<16)|(HEAPU8[$1108+3>>0]<<24);
        $1110 = ((($1109)) + 170|0);
        $1111 = HEAPU8[$1110>>0]|(HEAPU8[$1110+1>>0]<<8);
        $$sink18 = $1111;
       } else {
        label = 204;
       }
      } while(0);
      if ((label|0) == 204) {
       $1112 = $0;
       $1113 = ((($1112)) + 149|0);
       $1114 = HEAPU8[$1113>>0]|(HEAPU8[$1113+1>>0]<<8);
       $$sink18 = $1114;
      }
      $1115 = $$sink18&65535;
      $1116 = $1115&65535;
      FUNCTION_TABLE_viiiiiiii[$1053 & 127]($1054,$1057,$1061,$1064,$1117,$1098,$1116,3);
      $1413 = $result;
      STACKTOP = sp;return ($1413|0);
     }
    }
    $1118 = $context;
    $1119 = ((($1118)) + 142|0);
    $1120 = HEAPU8[$1119>>0]|(HEAPU8[$1119+1>>0]<<8)|(HEAPU8[$1119+2>>0]<<16)|(HEAPU8[$1119+3>>0]<<24);
    $1121 = HEAPU8[$1120>>0]|(HEAPU8[$1120+1>>0]<<8)|(HEAPU8[$1120+2>>0]<<16)|(HEAPU8[$1120+3>>0]<<24);
    $1122 = ($1121|0)==(8);
    do {
     if ($1122) {
      $1123 = $context;
      $1124 = ((($1123)) + 142|0);
      $1125 = HEAPU8[$1124>>0]|(HEAPU8[$1124+1>>0]<<8)|(HEAPU8[$1124+2>>0]<<16)|(HEAPU8[$1124+3>>0]<<24);
      $1126 = ((($1125)) + 4|0);
      $1127 = HEAPU8[$1126>>0]|(HEAPU8[$1126+1>>0]<<8)|(HEAPU8[$1126+2>>0]<<16)|(HEAPU8[$1126+3>>0]<<24);
      $1128 = ((($1127)) + 4|0);
      $1129 = HEAPU8[$1128>>0]|(HEAPU8[$1128+1>>0]<<8)|(HEAPU8[$1128+2>>0]<<16)|(HEAPU8[$1128+3>>0]<<24);
      $1130 = ($1129|0)==(42|0);
      if (!($1130)) {
       break;
      }
      $1131 = $context;
      $1132 = ((($1131)) + 160|0);
      $1133 = HEAPU8[$1132>>0]|(HEAPU8[$1132+1>>0]<<8);
      $1134 = $1133&65535;
      $1135 = ($1134|0)>(1);
      if (!($1135)) {
       break;
      }
      $1136 = $0;
      $1137 = $0;
      $1138 = ((($1137)) + 67|0);
      $1139 = HEAPU8[$1138>>0]|(HEAPU8[$1138+1>>0]<<8)|(HEAPU8[$1138+2>>0]<<16)|(HEAPU8[$1138+3>>0]<<24);
      (__set_current_error($1136,53,$1139)|0);
      $1140 = $0;
      $1141 = ((($1140)) + 163|0);
      $1142 = HEAPU8[$1141>>0]|(HEAPU8[$1141+1>>0]<<8)|(HEAPU8[$1141+2>>0]<<16)|(HEAPU8[$1141+3>>0]<<24);
      $1143 = ($1142|0)!=(0|0);
      if (!($1143)) {
       $1413 = $result;
       STACKTOP = sp;return ($1413|0);
      }
      $1144 = $0;
      $1145 = ((($1144)) + 134|0);
      $1146 = HEAP8[$1145>>0]|0;
      $1147 = $1146 & 1;
      $1148 = ($1147<<24>>24)!=(0);
      if ($1148) {
       $1413 = $result;
       STACKTOP = sp;return ($1413|0);
      }
      $1149 = $0;
      $1150 = ((($1149)) + 134|0);
      $1151 = HEAP8[$1150>>0]|0;
      $1152 = $1151 & -2;
      $1153 = $1152 | 1;
      HEAP8[$1150>>0] = $1153;
      $1154 = $0;
      $1155 = ((($1154)) + 163|0);
      $1156 = HEAPU8[$1155>>0]|(HEAPU8[$1155+1>>0]<<8)|(HEAPU8[$1155+2>>0]<<16)|(HEAPU8[$1155+3>>0]<<24);
      $1157 = $0;
      $1158 = $0;
      $1159 = ((($1158)) + 135|0);
      $1160 = HEAPU8[$1159>>0]|(HEAPU8[$1159+1>>0]<<8)|(HEAPU8[$1159+2>>0]<<16)|(HEAPU8[$1159+3>>0]<<24);
      $1161 = $0;
      $1162 = ((($1161)) + 135|0);
      $1163 = HEAPU8[$1162>>0]|(HEAPU8[$1162+1>>0]<<8)|(HEAPU8[$1162+2>>0]<<16)|(HEAPU8[$1162+3>>0]<<24);
      $1164 = (_mb_get_error_desc($1163)|0);
      $1165 = $0;
      $1166 = ((($1165)) + 139|0);
      $1167 = HEAPU8[$1166>>0]|(HEAPU8[$1166+1>>0]<<8)|(HEAPU8[$1166+2>>0]<<16)|(HEAPU8[$1166+3>>0]<<24);
      $1168 = $0;
      $1169 = ((($1168)) + 71|0);
      $1170 = HEAPU8[$1169>>0]|(HEAPU8[$1169+1>>0]<<8)|(HEAPU8[$1169+2>>0]<<16)|(HEAPU8[$1169+3>>0]<<24);
      $1171 = ($1170|0)!=(0|0);
      do {
       if ($1171) {
        $1172 = $0;
        $1173 = ((($1172)) + 79|0);
        $1174 = HEAPU8[$1173>>0]|(HEAPU8[$1173+1>>0]<<8)|(HEAPU8[$1173+2>>0]<<16)|(HEAPU8[$1173+3>>0]<<24);
        $1175 = ($1174|0)!=(0);
        if ($1175) {
         label = 214;
         break;
        }
        $1176 = $0;
        $1177 = ((($1176)) + 71|0);
        $1178 = HEAPU8[$1177>>0]|(HEAPU8[$1177+1>>0]<<8)|(HEAPU8[$1177+2>>0]<<16)|(HEAPU8[$1177+3>>0]<<24);
        $1179 = ((($1178)) + 164|0);
        $1180 = HEAPU8[$1179>>0]|(HEAPU8[$1179+1>>0]<<8)|(HEAPU8[$1179+2>>0]<<16)|(HEAPU8[$1179+3>>0]<<24);
        $1220 = $1180;
       } else {
        label = 214;
       }
      } while(0);
      if ((label|0) == 214) {
       $1181 = $0;
       $1182 = ((($1181)) + 143|0);
       $1183 = HEAPU8[$1182>>0]|(HEAPU8[$1182+1>>0]<<8)|(HEAPU8[$1182+2>>0]<<16)|(HEAPU8[$1182+3>>0]<<24);
       $1220 = $1183;
      }
      $1184 = $0;
      $1185 = ((($1184)) + 71|0);
      $1186 = HEAPU8[$1185>>0]|(HEAPU8[$1185+1>>0]<<8)|(HEAPU8[$1185+2>>0]<<16)|(HEAPU8[$1185+3>>0]<<24);
      $1187 = ($1186|0)!=(0|0);
      do {
       if ($1187) {
        $1188 = $0;
        $1189 = ((($1188)) + 79|0);
        $1190 = HEAPU8[$1189>>0]|(HEAPU8[$1189+1>>0]<<8)|(HEAPU8[$1189+2>>0]<<16)|(HEAPU8[$1189+3>>0]<<24);
        $1191 = ($1190|0)!=(0);
        if ($1191) {
         label = 218;
         break;
        }
        $1192 = $0;
        $1193 = ((($1192)) + 71|0);
        $1194 = HEAPU8[$1193>>0]|(HEAPU8[$1193+1>>0]<<8)|(HEAPU8[$1193+2>>0]<<16)|(HEAPU8[$1193+3>>0]<<24);
        $1195 = ((($1194)) + 168|0);
        $1196 = HEAPU8[$1195>>0]|(HEAPU8[$1195+1>>0]<<8);
        $$sink19 = $1196;
       } else {
        label = 218;
       }
      } while(0);
      if ((label|0) == 218) {
       $1197 = $0;
       $1198 = ((($1197)) + 147|0);
       $1199 = HEAPU8[$1198>>0]|(HEAPU8[$1198+1>>0]<<8);
       $$sink19 = $1199;
      }
      $1200 = $$sink19&65535;
      $1201 = $1200&65535;
      $1202 = $0;
      $1203 = ((($1202)) + 71|0);
      $1204 = HEAPU8[$1203>>0]|(HEAPU8[$1203+1>>0]<<8)|(HEAPU8[$1203+2>>0]<<16)|(HEAPU8[$1203+3>>0]<<24);
      $1205 = ($1204|0)!=(0|0);
      do {
       if ($1205) {
        $1206 = $0;
        $1207 = ((($1206)) + 79|0);
        $1208 = HEAPU8[$1207>>0]|(HEAPU8[$1207+1>>0]<<8)|(HEAPU8[$1207+2>>0]<<16)|(HEAPU8[$1207+3>>0]<<24);
        $1209 = ($1208|0)!=(0);
        if ($1209) {
         label = 222;
         break;
        }
        $1210 = $0;
        $1211 = ((($1210)) + 71|0);
        $1212 = HEAPU8[$1211>>0]|(HEAPU8[$1211+1>>0]<<8)|(HEAPU8[$1211+2>>0]<<16)|(HEAPU8[$1211+3>>0]<<24);
        $1213 = ((($1212)) + 170|0);
        $1214 = HEAPU8[$1213>>0]|(HEAPU8[$1213+1>>0]<<8);
        $$sink20 = $1214;
       } else {
        label = 222;
       }
      } while(0);
      if ((label|0) == 222) {
       $1215 = $0;
       $1216 = ((($1215)) + 149|0);
       $1217 = HEAPU8[$1216>>0]|(HEAPU8[$1216+1>>0]<<8);
       $$sink20 = $1217;
      }
      $1218 = $$sink20&65535;
      $1219 = $1218&65535;
      FUNCTION_TABLE_viiiiiiii[$1156 & 127]($1157,$1160,$1164,$1167,$1220,$1201,$1219,3);
      $1413 = $result;
      STACKTOP = sp;return ($1413|0);
     }
    } while(0);
    $result = 17;
    $1413 = $result;
    STACKTOP = sp;return ($1413|0);
   }
  }
 } while(0);
 $1238 = $context;
 $1239 = ((($1238)) + 142|0);
 $1240 = HEAPU8[$1239>>0]|(HEAPU8[$1239+1>>0]<<8)|(HEAPU8[$1239+2>>0]<<16)|(HEAPU8[$1239+3>>0]<<24);
 $1241 = ($1240|0)!=(0|0);
 do {
  if ($1241) {
   $1242 = $context;
   $1243 = ((($1242)) + 142|0);
   $1244 = HEAPU8[$1243>>0]|(HEAPU8[$1243+1>>0]<<8)|(HEAPU8[$1243+2>>0]<<16)|(HEAPU8[$1243+3>>0]<<24);
   $1245 = ($1244|0)!=(0|0);
   if ($1245) {
    $1246 = $context;
    $1247 = ((($1246)) + 142|0);
    $1248 = HEAPU8[$1247>>0]|(HEAPU8[$1247+1>>0]<<8)|(HEAPU8[$1247+2>>0]<<16)|(HEAPU8[$1247+3>>0]<<24);
    $1249 = HEAPU8[$1248>>0]|(HEAPU8[$1248+1>>0]<<8)|(HEAPU8[$1248+2>>0]<<16)|(HEAPU8[$1248+3>>0]<<24);
    $1250 = ($1249|0)==(8);
    if ($1250) {
     $1251 = $context;
     $1252 = ((($1251)) + 142|0);
     $1253 = HEAPU8[$1252>>0]|(HEAPU8[$1252+1>>0]<<8)|(HEAPU8[$1252+2>>0]<<16)|(HEAPU8[$1252+3>>0]<<24);
     $1254 = ((($1253)) + 4|0);
     $1255 = HEAPU8[$1254>>0]|(HEAPU8[$1254+1>>0]<<8)|(HEAPU8[$1254+2>>0]<<16)|(HEAPU8[$1254+3>>0]<<24);
     $1256 = ((($1255)) + 4|0);
     $1257 = HEAPU8[$1256>>0]|(HEAPU8[$1256+1>>0]<<8)|(HEAPU8[$1256+2>>0]<<16)|(HEAPU8[$1256+3>>0]<<24);
     $1258 = ($1257|0)!=(8|0);
     if ($1258) {
      label = 235;
      break;
     }
    }
    $1259 = $context;
    $1260 = ((($1259)) + 142|0);
    $1261 = HEAPU8[$1260>>0]|(HEAPU8[$1260+1>>0]<<8)|(HEAPU8[$1260+2>>0]<<16)|(HEAPU8[$1260+3>>0]<<24);
    $1262 = HEAPU8[$1261>>0]|(HEAPU8[$1261+1>>0]<<8)|(HEAPU8[$1261+2>>0]<<16)|(HEAPU8[$1261+3>>0]<<24);
    $1263 = ($1262|0)==(19);
    if ($1263) {
     label = 235;
    } else {
     $1264 = $context;
     $1265 = ((($1264)) + 142|0);
     $1266 = HEAPU8[$1265>>0]|(HEAPU8[$1265+1>>0]<<8)|(HEAPU8[$1265+2>>0]<<16)|(HEAPU8[$1265+3>>0]<<24);
     $1267 = HEAPU8[$1266>>0]|(HEAPU8[$1266+1>>0]<<8)|(HEAPU8[$1266+2>>0]<<16)|(HEAPU8[$1266+3>>0]<<24);
     $1268 = ($1267|0)==(22);
     if ($1268) {
      label = 235;
     }
    }
   }
  } else {
   label = 235;
  }
 } while(0);
 if ((label|0) == 235) {
  $1269 = $1;
  $1270 = (_strcmp(8418,$1269)|0);
  $1271 = ($1270|0)==(0);
  if ($1271) {
   HEAP32[$ptr>>2] = (19);
   $1272 = $2;
   ;HEAP8[$1272>>0]=HEAP8[$ptr>>0]|0;HEAP8[$1272+1>>0]=HEAP8[$ptr+1>>0]|0;HEAP8[$1272+2>>0]=HEAP8[$ptr+2>>0]|0;HEAP8[$1272+3>>0]=HEAP8[$ptr+3>>0]|0;
   $result = 8;
   $1413 = $result;
   STACKTOP = sp;return ($1413|0);
  }
 }
 $1273 = $0;
 $1274 = $1;
 $1275 = (__find_func($1273,$1274,$mod)|0);
 $glbsyminscope = $1275;
 $1276 = $glbsyminscope;
 $1277 = ($1276|0)!=(0|0);
 if ($1277) {
  $1278 = $context;
  $1279 = ((($1278)) + 142|0);
  $1280 = HEAPU8[$1279>>0]|(HEAPU8[$1279+1>>0]<<8)|(HEAPU8[$1279+2>>0]<<16)|(HEAPU8[$1279+3>>0]<<24);
  $1281 = ($1280|0)!=(0|0);
  if ($1281) {
   $1282 = $context;
   $1283 = ((($1282)) + 142|0);
   $1284 = HEAPU8[$1283>>0]|(HEAPU8[$1283+1>>0]<<8)|(HEAPU8[$1283+2>>0]<<16)|(HEAPU8[$1283+3>>0]<<24);
   $1285 = HEAPU8[$1284>>0]|(HEAPU8[$1284+1>>0]<<8)|(HEAPU8[$1284+2>>0]<<16)|(HEAPU8[$1284+3>>0]<<24);
   $1286 = ($1285|0)==(17);
   if ($1286) {
    $1287 = $_sl;
    $1288 = ($1287|0)==(1);
    if ($1288) {
     $1289 = $1;
     $1290 = HEAP8[$1289>>0]|0;
     $1291 = $1290 << 24 >> 24;
     $1292 = ($1291|0)==(40);
     if ($1292) {
      $1293 = $context;
      $1294 = ((($1293)) + 162|0);
      $1295 = HEAPU8[$1294>>0]|(HEAPU8[$1294+1>>0]<<8);
      $1296 = $1295&65535;
      $1297 = ($1296|0)==(1);
      if ($1297) {
       $1298 = $0;
       __begin_routine_parameter_list($1298);
      }
     }
    }
   } else {
    label = 244;
   }
  } else {
   label = 244;
  }
  if ((label|0) == 244) {
   $1299 = $context;
   $1300 = ((($1299)) + 162|0);
   $1301 = HEAPU8[$1300>>0]|(HEAPU8[$1300+1>>0]<<8);
   $1302 = $1301&65535;
   $1303 = ($1302|0)==(2);
   $1304 = $_sl;
   $1305 = ($1304|0)==(1);
   $or$cond22 = $1303 & $1305;
   if ($or$cond22) {
    $1306 = $1;
    $1307 = HEAP8[$1306>>0]|0;
    $1308 = $1307 << 24 >> 24;
    $1309 = ($1308|0)==(41);
    if ($1309) {
     $1310 = $0;
     __end_routine_parameter_list($1310);
    }
   }
  }
  $1311 = HEAP8[$mod>>0]|0;
  $1312 = ($1311<<24>>24)!=(0);
  $1313 = $glbsyminscope;
  $1314 = HEAPU8[$1313>>0]|(HEAPU8[$1313+1>>0]<<8)|(HEAPU8[$1313+2>>0]<<16)|(HEAPU8[$1313+3>>0]<<24);
  if ($1312) {
   $mp = $1314;
   $1315 = $mp;
   $1316 = ((($1315)) + 4|0);
   $1317 = HEAPU8[$1316>>0]|(HEAPU8[$1316+1>>0]<<8)|(HEAPU8[$1316+2>>0]<<16)|(HEAPU8[$1316+3>>0]<<24);
   $1318 = $1317;
   HEAP32[$ptr>>2] = $1318;
   $1319 = $2;
   ;HEAP8[$1319>>0]=HEAP8[$ptr>>0]|0;HEAP8[$1319+1>>0]=HEAP8[$ptr+1>>0]|0;HEAP8[$1319+2>>0]=HEAP8[$ptr+2>>0]|0;HEAP8[$1319+3>>0]=HEAP8[$ptr+3>>0]|0;
  } else {
   $1320 = $1314;
   HEAP32[$ptr>>2] = $1320;
   $1321 = $2;
   ;HEAP8[$1321>>0]=HEAP8[$ptr>>0]|0;HEAP8[$1321+1>>0]=HEAP8[$ptr+1>>0]|0;HEAP8[$1321+2>>0]=HEAP8[$ptr+2>>0]|0;HEAP8[$1321+3>>0]=HEAP8[$ptr+3>>0]|0;
   $1322 = HEAP32[$ptr>>2]|0;
   $1323 = ($1322|0)==((42)|0);
   if ($1323) {
    $1324 = $0;
    __begin_routine_definition($1324);
   }
  }
  $result = 8;
  $1413 = $result;
  STACKTOP = sp;return ($1413|0);
 }
 $1325 = $_sl;
 $1326 = ($1325|0)==(1);
 if ($1326) {
  $1327 = $1;
  $1328 = HEAP8[$1327>>0]|0;
  $1329 = $1328 << 24 >> 24;
  $1330 = ($1329|0)==(10);
  if ($1330) {
   $1331 = $context;
   $1332 = ((($1331)) + 142|0);
   $1333 = HEAPU8[$1332>>0]|(HEAPU8[$1332+1>>0]<<8)|(HEAPU8[$1332+2>>0]<<16)|(HEAPU8[$1332+3>>0]<<24);
   $1334 = ($1333|0)!=(0|0);
   if ($1334) {
    $1335 = $context;
    $1336 = ((($1335)) + 142|0);
    $1337 = HEAPU8[$1336>>0]|(HEAPU8[$1336+1>>0]<<8)|(HEAPU8[$1336+2>>0]<<16)|(HEAPU8[$1336+3>>0]<<24);
    $1338 = HEAPU8[$1337>>0]|(HEAPU8[$1337+1>>0]<<8)|(HEAPU8[$1337+2>>0]<<16)|(HEAPU8[$1337+3>>0]<<24);
    $1339 = ($1338|0)==(22);
    if ($1339) {
     $result = 0;
     $1413 = $result;
     STACKTOP = sp;return ($1413|0);
    }
   }
   $result = 22;
   $1413 = $result;
   STACKTOP = sp;return ($1413|0);
  }
 }
 $1340 = $_sl;
 $1341 = ($1340|0)==(1);
 if ($1341) {
  $1342 = $1;
  $1343 = HEAP8[$1342>>0]|0;
  $1344 = (__is_separator_char($1343)|0);
  $1345 = $1344&255;
  $1346 = ($1345|0)!=(0);
  if ($1346) {
   $result = 19;
   $1413 = $result;
   STACKTOP = sp;return ($1413|0);
  }
 }
 $1347 = $0;
 $1348 = $1;
 $1349 = (__search_identifier_in_scope_chain($1347,0,$1348,0,0,0)|0);
 $glbsyminscope = $1349;
 $1350 = $glbsyminscope;
 $1351 = ($1350|0)!=(0|0);
 if ($1351) {
  $1352 = $glbsyminscope;
  $1353 = HEAPU8[$1352>>0]|(HEAPU8[$1352+1>>0]<<8)|(HEAPU8[$1352+2>>0]<<16)|(HEAPU8[$1352+3>>0]<<24);
  $1354 = HEAPU8[$1353>>0]|(HEAPU8[$1353+1>>0]<<8)|(HEAPU8[$1353+2>>0]<<16)|(HEAPU8[$1353+3>>0]<<24);
  $1355 = ($1354|0)!=(15);
  if ($1355) {
   $1356 = $2;
   $1357 = $glbsyminscope;
   ;HEAP8[$1356>>0]=HEAP8[$1357>>0]|0;HEAP8[$1356+1>>0]=HEAP8[$1357+1>>0]|0;HEAP8[$1356+2>>0]=HEAP8[$1357+2>>0]|0;HEAP8[$1356+3>>0]=HEAP8[$1357+3>>0]|0;
   $result = 9;
   $1413 = $result;
   STACKTOP = sp;return ($1413|0);
  }
 }
 $1358 = $context;
 $1359 = ((($1358)) + 4|0);
 $1360 = HEAP8[$1359>>0]|0;
 $1361 = $1360 << 24 >> 24;
 $1362 = ($1361|0)==(58);
 do {
  if ($1362) {
   $1363 = $context;
   $1364 = ((($1363)) + 142|0);
   $1365 = HEAPU8[$1364>>0]|(HEAPU8[$1364+1>>0]<<8)|(HEAPU8[$1364+2>>0]<<16)|(HEAPU8[$1364+3>>0]<<24);
   $1366 = ($1365|0)!=(0|0);
   if ($1366) {
    $1367 = $context;
    $1368 = ((($1367)) + 142|0);
    $1369 = HEAPU8[$1368>>0]|(HEAPU8[$1368+1>>0]<<8)|(HEAPU8[$1368+2>>0]<<16)|(HEAPU8[$1368+3>>0]<<24);
    $1370 = ($1369|0)!=(0|0);
    if (!($1370)) {
     break;
    }
    $1371 = $context;
    $1372 = ((($1371)) + 142|0);
    $1373 = HEAPU8[$1372>>0]|(HEAPU8[$1372+1>>0]<<8)|(HEAPU8[$1372+2>>0]<<16)|(HEAPU8[$1372+3>>0]<<24);
    $1374 = HEAPU8[$1373>>0]|(HEAPU8[$1373+1>>0]<<8)|(HEAPU8[$1373+2>>0]<<16)|(HEAPU8[$1373+3>>0]<<24);
    $1375 = ($1374|0)==(22);
    if (!($1375)) {
     break;
    }
   }
   $1376 = $0;
   $1377 = $1;
   $1378 = (__search_identifier_in_scope_chain($1376,0,$1377,0,0,0)|0);
   $glbsyminscope = $1378;
   $1379 = $glbsyminscope;
   $1380 = ($1379|0)!=(0|0);
   if ($1380) {
    $1381 = $2;
    $1382 = $glbsyminscope;
    ;HEAP8[$1381>>0]=HEAP8[$1382>>0]|0;HEAP8[$1381+1>>0]=HEAP8[$1382+1>>0]|0;HEAP8[$1381+2>>0]=HEAP8[$1382+2>>0]|0;HEAP8[$1381+3>>0]=HEAP8[$1382+3>>0]|0;
   }
   $result = 15;
   $1413 = $result;
   STACKTOP = sp;return ($1413|0);
  }
 } while(0);
 $1383 = $context;
 $1384 = ((($1383)) + 142|0);
 $1385 = HEAPU8[$1384>>0]|(HEAPU8[$1384+1>>0]<<8)|(HEAPU8[$1384+2>>0]<<16)|(HEAPU8[$1384+3>>0]<<24);
 $1386 = ($1385|0)!=(0|0);
 do {
  if ($1386) {
   $1387 = $context;
   $1388 = ((($1387)) + 142|0);
   $1389 = HEAPU8[$1388>>0]|(HEAPU8[$1388+1>>0]<<8)|(HEAPU8[$1388+2>>0]<<16)|(HEAPU8[$1388+3>>0]<<24);
   $1390 = HEAPU8[$1389>>0]|(HEAPU8[$1389+1>>0]<<8)|(HEAPU8[$1389+2>>0]<<16)|(HEAPU8[$1389+3>>0]<<24);
   $1391 = ($1390|0)==(8);
   if ($1391) {
    $1392 = $context;
    $1393 = ((($1392)) + 142|0);
    $1394 = HEAPU8[$1393>>0]|(HEAPU8[$1393+1>>0]<<8)|(HEAPU8[$1393+2>>0]<<16)|(HEAPU8[$1393+3>>0]<<24);
    $1395 = ((($1394)) + 4|0);
    $1396 = HEAPU8[$1395>>0]|(HEAPU8[$1395+1>>0]<<8)|(HEAPU8[$1395+2>>0]<<16)|(HEAPU8[$1395+3>>0]<<24);
    $1397 = ((($1396)) + 4|0);
    $1398 = HEAPU8[$1397>>0]|(HEAPU8[$1397+1>>0]<<8)|(HEAPU8[$1397+2>>0]<<16)|(HEAPU8[$1397+3>>0]<<24);
    $1399 = ($1398|0)==(38|0);
    if (!($1399)) {
     label = 274;
    }
   } else {
    label = 274;
   }
   if ((label|0) == 274) {
    $1400 = $context;
    $1401 = ((($1400)) + 142|0);
    $1402 = HEAPU8[$1401>>0]|(HEAPU8[$1401+1>>0]<<8)|(HEAPU8[$1401+2>>0]<<16)|(HEAPU8[$1401+3>>0]<<24);
    $1403 = HEAPU8[$1402>>0]|(HEAPU8[$1402+1>>0]<<8)|(HEAPU8[$1402+2>>0]<<16)|(HEAPU8[$1402+3>>0]<<24);
    $1404 = ($1403|0)==(8);
    if (!($1404)) {
     break;
    }
    $1405 = $context;
    $1406 = ((($1405)) + 142|0);
    $1407 = HEAPU8[$1406>>0]|(HEAPU8[$1406+1>>0]<<8)|(HEAPU8[$1406+2>>0]<<16)|(HEAPU8[$1406+3>>0]<<24);
    $1408 = ((($1407)) + 4|0);
    $1409 = HEAPU8[$1408>>0]|(HEAPU8[$1408+1>>0]<<8)|(HEAPU8[$1408+2>>0]<<16)|(HEAPU8[$1408+3>>0]<<24);
    $1410 = ((($1409)) + 4|0);
    $1411 = HEAPU8[$1410>>0]|(HEAPU8[$1410+1>>0]<<8)|(HEAPU8[$1410+2>>0]<<16)|(HEAPU8[$1410+3>>0]<<24);
    $1412 = ($1411|0)==(39|0);
    if (!($1412)) {
     break;
    }
   }
   $result = 15;
   $1413 = $result;
   STACKTOP = sp;return ($1413|0);
  }
 } while(0);
 $result = 9;
 $1413 = $result;
 STACKTOP = sp;return ($1413|0);
}
function __core_class($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $$sink = 0, $$sink3 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0;
 var $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0;
 var $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0;
 var $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0;
 var $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0;
 var $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0;
 var $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0;
 var $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0;
 var $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0;
 var $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0;
 var $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0;
 var $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0;
 var $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0;
 var $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0;
 var $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0;
 var $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0;
 var $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0;
 var $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0;
 var $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0;
 var $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0;
 var $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0;
 var $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0;
 var $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0;
 var $510 = 0, $511 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $ast = 0, $inherit = 0, $instance = 0, $last_inst = 0, $obj = 0, $or$cond = 0;
 var $result = 0, $running = 0, $tmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ast = sp + 24|0;
 $1 = $s;
 $2 = $l;
 $result = 0;
 HEAP32[$ast>>2] = 0;
 $running = 0;
 $obj = 0;
 $instance = 0;
 $inherit = 0;
 $last_inst = 0;
 $3 = $1;
 $4 = ($3|0)!=(0|0);
 $5 = $2;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),16737,(8264|0));
  // unreachable;
 }
 $7 = $1;
 $8 = ((($7)) + 75|0);
 $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
 $running = $9;
 $10 = $2;
 $11 = HEAP32[$10>>2]|0;
 HEAP32[$ast>>2] = $11;
 $12 = HEAP32[$ast>>2]|0;
 $13 = ((($12)) + 8|0);
 $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
 HEAP32[$ast>>2] = $14;
 $15 = $1;
 $16 = ((($15)) + 92|0);
 $17 = HEAP8[$16>>0]|0;
 $18 = $17&255;
 $19 = $18 & -3;
 $20 = ($19|0)!=(0);
 L4: do {
  if ($20) {
   $21 = HEAP32[$ast>>2]|0;
   $22 = ($21|0)!=(0|0);
   if ($22) {
    $23 = HEAP32[$ast>>2]|0;
    $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
    $25 = ($24|0)!=(0|0);
    if ($25) {
     $26 = $1;
     $27 = $1;
     $28 = ((($27)) + 67|0);
     $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
     $30 = (__set_current_error($26,52,$29)|0);
     $31 = ($30<<24>>24)!=(0);
     if (!($31)) {
      break;
     }
     $32 = $1;
     $33 = HEAP32[$ast>>2]|0;
     $34 = HEAPU8[$33>>0]|(HEAPU8[$33+1>>0]<<8)|(HEAPU8[$33+2>>0]<<16)|(HEAPU8[$33+3>>0]<<24);
     $35 = ((($34)) + 9|0);
     $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
     $37 = HEAP32[$ast>>2]|0;
     $38 = HEAPU8[$37>>0]|(HEAPU8[$37+1>>0]<<8)|(HEAPU8[$37+2>>0]<<16)|(HEAPU8[$37+3>>0]<<24);
     $39 = ((($38)) + 13|0);
     $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8);
     $41 = HEAP32[$ast>>2]|0;
     $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
     $43 = ((($42)) + 15|0);
     $44 = HEAPU8[$43>>0]|(HEAPU8[$43+1>>0]<<8);
     __set_error_pos($32,$36,$40,$44);
     $result = 3;
     break;
    }
   }
   $45 = $1;
   $46 = $1;
   $47 = ((($46)) + 67|0);
   $48 = HEAPU8[$47>>0]|(HEAPU8[$47+1>>0]<<8)|(HEAPU8[$47+2>>0]<<16)|(HEAPU8[$47+3>>0]<<24);
   $49 = (__set_current_error($45,52,$48)|0);
   $50 = ($49<<24>>24)!=(0);
   if ($50) {
    $51 = $1;
    __set_error_pos($51,0,0,0);
    $result = 3;
   }
  } else {
   $52 = $1;
   $53 = ((($52)) + 92|0);
   $54 = HEAP8[$53>>0]|0;
   $55 = $54&255;
   $56 = $55 | 2;
   $57 = $56&255;
   HEAP8[$53>>0] = $57;
   $58 = $1;
   $59 = ((($58)) + 83|0);
   $60 = HEAP8[$59>>0]|0;
   $61 = $60 & 1;
   $62 = ($61<<24>>24)!=(0);
   $63 = HEAP32[$ast>>2]|0;
   if ($62) {
    $64 = ($63|0)!=(0|0);
    if ($64) {
     $65 = $1;
     (__skip_to($65,$ast,46,0)|0);
     $66 = HEAP32[$ast>>2]|0;
     $67 = ((($66)) + 8|0);
     $68 = HEAPU8[$67>>0]|(HEAPU8[$67+1>>0]<<8)|(HEAPU8[$67+2>>0]<<16)|(HEAPU8[$67+3>>0]<<24);
     HEAP32[$ast>>2] = $68;
    }
    $69 = HEAP32[$ast>>2]|0;
    $70 = $2;
    HEAP32[$70>>2] = $69;
    $71 = $result;
    $0 = $71;
    $511 = $0;
    STACKTOP = sp;return ($511|0);
   }
   $72 = HEAPU8[$63>>0]|(HEAPU8[$63+1>>0]<<8)|(HEAPU8[$63+2>>0]<<16)|(HEAPU8[$63+3>>0]<<24);
   $obj = $72;
   $73 = $obj;
   $74 = ($73|0)!=(0|0);
   do {
    if ($74) {
     $75 = $obj;
     $76 = ($75|0)!=(0|0);
     if ($76) {
      $77 = $obj;
      $78 = HEAPU8[$77>>0]|(HEAPU8[$77+1>>0]<<8)|(HEAPU8[$77+2>>0]<<16)|(HEAPU8[$77+3>>0]<<24);
      $79 = ($78|0)==(16);
      if ($79) {
       $80 = $obj;
       $104 = $80;
       break;
      }
     }
     $81 = $obj;
     $82 = ($81|0)!=(0|0);
     if ($82) {
      $83 = $obj;
      $84 = HEAPU8[$83>>0]|(HEAPU8[$83+1>>0]<<8)|(HEAPU8[$83+2>>0]<<16)|(HEAPU8[$83+3>>0]<<24);
      $85 = ($84|0)==(9);
      if ($85) {
       $86 = $obj;
       $87 = ((($86)) + 4|0);
       $88 = HEAPU8[$87>>0]|(HEAPU8[$87+1>>0]<<8)|(HEAPU8[$87+2>>0]<<16)|(HEAPU8[$87+3>>0]<<24);
       $89 = ((($88)) + 4|0);
       $90 = HEAPU8[$89>>0]|(HEAPU8[$89+1>>0]<<8)|(HEAPU8[$89+2>>0]<<16)|(HEAPU8[$89+3>>0]<<24);
       $91 = ($90|0)!=(0|0);
       if ($91) {
        $92 = $obj;
        $93 = ((($92)) + 4|0);
        $94 = HEAPU8[$93>>0]|(HEAPU8[$93+1>>0]<<8)|(HEAPU8[$93+2>>0]<<16)|(HEAPU8[$93+3>>0]<<24);
        $95 = ((($94)) + 4|0);
        $96 = HEAPU8[$95>>0]|(HEAPU8[$95+1>>0]<<8)|(HEAPU8[$95+2>>0]<<16)|(HEAPU8[$95+3>>0]<<24);
        $97 = HEAPU8[$96>>0]|(HEAPU8[$96+1>>0]<<8)|(HEAPU8[$96+2>>0]<<16)|(HEAPU8[$96+3>>0]<<24);
        $98 = ($97|0)==(16);
        if ($98) {
         $99 = $obj;
         $100 = ((($99)) + 4|0);
         $101 = HEAPU8[$100>>0]|(HEAPU8[$100+1>>0]<<8)|(HEAPU8[$100+2>>0]<<16)|(HEAPU8[$100+3>>0]<<24);
         $102 = ((($101)) + 4|0);
         $103 = HEAPU8[$102>>0]|(HEAPU8[$102+1>>0]<<8)|(HEAPU8[$102+2>>0]<<16)|(HEAPU8[$102+3>>0]<<24);
         $104 = $103;
        } else {
         $104 = 0;
        }
       } else {
        $104 = 0;
       }
      } else {
       $104 = 0;
      }
     } else {
      $104 = 0;
     }
    } else {
     $104 = 0;
    }
   } while(0);
   $obj = $104;
   $105 = $obj;
   $106 = ($105|0)!=(0|0);
   if ($106) {
    $107 = $obj;
    $108 = HEAPU8[$107>>0]|(HEAPU8[$107+1>>0]<<8)|(HEAPU8[$107+2>>0]<<16)|(HEAPU8[$107+3>>0]<<24);
    $109 = ($108|0)==(16);
    if ($109) {
     $141 = $obj;
     $142 = ((($141)) + 4|0);
     $143 = HEAPU8[$142>>0]|(HEAPU8[$142+1>>0]<<8)|(HEAPU8[$142+2>>0]<<16)|(HEAPU8[$142+3>>0]<<24);
     $instance = $143;
     $144 = HEAP32[$ast>>2]|0;
     $145 = ((($144)) + 8|0);
     $146 = HEAPU8[$145>>0]|(HEAPU8[$145+1>>0]<<8)|(HEAPU8[$145+2>>0]<<16)|(HEAPU8[$145+3>>0]<<24);
     HEAP32[$ast>>2] = $146;
     $147 = HEAP32[$ast>>2]|0;
     $148 = HEAPU8[$147>>0]|(HEAPU8[$147+1>>0]<<8)|(HEAPU8[$147+2>>0]<<16)|(HEAPU8[$147+3>>0]<<24);
     $obj = $148;
     $149 = $1;
     $150 = ((($149)) + 93|0);
     $151 = HEAPU8[$150>>0]|(HEAPU8[$150+1>>0]<<8)|(HEAPU8[$150+2>>0]<<16)|(HEAPU8[$150+3>>0]<<24);
     $last_inst = $151;
     $152 = $instance;
     $153 = $1;
     $154 = ((($153)) + 93|0);
     HEAP8[$154>>0]=$152&255;HEAP8[$154+1>>0]=($152>>8)&255;HEAP8[$154+2>>0]=($152>>16)&255;HEAP8[$154+3>>0]=$152>>24;
     $155 = $obj;
     $156 = HEAPU8[$155>>0]|(HEAPU8[$155+1>>0]<<8)|(HEAPU8[$155+2>>0]<<16)|(HEAPU8[$155+3>>0]<<24);
     $157 = ($156|0)==(8);
     do {
      if ($157) {
       $158 = $obj;
       $159 = ((($158)) + 4|0);
       $160 = HEAPU8[$159>>0]|(HEAPU8[$159+1>>0]<<8)|(HEAPU8[$159+2>>0]<<16)|(HEAPU8[$159+3>>0]<<24);
       $161 = ((($160)) + 4|0);
       $162 = HEAPU8[$161>>0]|(HEAPU8[$161+1>>0]<<8)|(HEAPU8[$161+2>>0]<<16)|(HEAPU8[$161+3>>0]<<24);
       $163 = ($162|0)==(7|0);
       if ($163) {
        while(1) {
         $164 = HEAP32[$ast>>2]|0;
         $165 = ((($164)) + 8|0);
         $166 = HEAPU8[$165>>0]|(HEAPU8[$165+1>>0]<<8)|(HEAPU8[$165+2>>0]<<16)|(HEAPU8[$165+3>>0]<<24);
         HEAP32[$ast>>2] = $166;
         $167 = HEAP32[$ast>>2]|0;
         $168 = HEAPU8[$167>>0]|(HEAPU8[$167+1>>0]<<8)|(HEAPU8[$167+2>>0]<<16)|(HEAPU8[$167+3>>0]<<24);
         $obj = $168;
         $169 = $obj;
         $170 = ($169|0)!=(0|0);
         if ($170) {
          $171 = $obj;
          $172 = HEAPU8[$171>>0]|(HEAPU8[$171+1>>0]<<8)|(HEAPU8[$171+2>>0]<<16)|(HEAPU8[$171+3>>0]<<24);
          $173 = ($172|0)==(9);
          if ($173) {
           $174 = $1;
           $175 = $running;
           $176 = HEAPU8[$175>>0]|(HEAPU8[$175+1>>0]<<8)|(HEAPU8[$175+2>>0]<<16)|(HEAPU8[$175+3>>0]<<24);
           $177 = ($176|0)!=(0|0);
           $178 = $running;
           if ($177) {
            $179 = HEAPU8[$178>>0]|(HEAPU8[$178+1>>0]<<8)|(HEAPU8[$178+2>>0]<<16)|(HEAPU8[$178+3>>0]<<24);
            $184 = $179;
           } else {
            $184 = $178;
           }
           $180 = $obj;
           $181 = ((($180)) + 4|0);
           $182 = HEAPU8[$181>>0]|(HEAPU8[$181+1>>0]<<8)|(HEAPU8[$181+2>>0]<<16)|(HEAPU8[$181+3>>0]<<24);
           $183 = HEAPU8[$182>>0]|(HEAPU8[$182+1>>0]<<8)|(HEAPU8[$182+2>>0]<<16)|(HEAPU8[$182+3>>0]<<24);
           $185 = (__search_identifier_in_scope_chain($174,$184,$183,0,0,0)|0);
           $tmp = $185;
           $186 = $tmp;
           $187 = ($186|0)!=(0|0);
           if ($187) {
            $188 = $tmp;
            $189 = HEAPU8[$188>>0]|(HEAPU8[$188+1>>0]<<8)|(HEAPU8[$188+2>>0]<<16)|(HEAPU8[$188+3>>0]<<24);
            $190 = ($189|0)!=(0|0);
            if ($190) {
             $191 = $tmp;
             $192 = HEAPU8[$191>>0]|(HEAPU8[$191+1>>0]<<8)|(HEAPU8[$191+2>>0]<<16)|(HEAPU8[$191+3>>0]<<24);
             $obj = $192;
            }
           }
          }
         }
         $193 = $obj;
         $194 = ($193|0)!=(0|0);
         do {
          if ($194) {
           $195 = $obj;
           $196 = ($195|0)!=(0|0);
           if ($196) {
            $197 = $obj;
            $198 = HEAPU8[$197>>0]|(HEAPU8[$197+1>>0]<<8)|(HEAPU8[$197+2>>0]<<16)|(HEAPU8[$197+3>>0]<<24);
            $199 = ($198|0)==(16);
            if ($199) {
             $200 = $obj;
             $224 = $200;
             break;
            }
           }
           $201 = $obj;
           $202 = ($201|0)!=(0|0);
           if ($202) {
            $203 = $obj;
            $204 = HEAPU8[$203>>0]|(HEAPU8[$203+1>>0]<<8)|(HEAPU8[$203+2>>0]<<16)|(HEAPU8[$203+3>>0]<<24);
            $205 = ($204|0)==(9);
            if ($205) {
             $206 = $obj;
             $207 = ((($206)) + 4|0);
             $208 = HEAPU8[$207>>0]|(HEAPU8[$207+1>>0]<<8)|(HEAPU8[$207+2>>0]<<16)|(HEAPU8[$207+3>>0]<<24);
             $209 = ((($208)) + 4|0);
             $210 = HEAPU8[$209>>0]|(HEAPU8[$209+1>>0]<<8)|(HEAPU8[$209+2>>0]<<16)|(HEAPU8[$209+3>>0]<<24);
             $211 = ($210|0)!=(0|0);
             if ($211) {
              $212 = $obj;
              $213 = ((($212)) + 4|0);
              $214 = HEAPU8[$213>>0]|(HEAPU8[$213+1>>0]<<8)|(HEAPU8[$213+2>>0]<<16)|(HEAPU8[$213+3>>0]<<24);
              $215 = ((($214)) + 4|0);
              $216 = HEAPU8[$215>>0]|(HEAPU8[$215+1>>0]<<8)|(HEAPU8[$215+2>>0]<<16)|(HEAPU8[$215+3>>0]<<24);
              $217 = HEAPU8[$216>>0]|(HEAPU8[$216+1>>0]<<8)|(HEAPU8[$216+2>>0]<<16)|(HEAPU8[$216+3>>0]<<24);
              $218 = ($217|0)==(16);
              if ($218) {
               $219 = $obj;
               $220 = ((($219)) + 4|0);
               $221 = HEAPU8[$220>>0]|(HEAPU8[$220+1>>0]<<8)|(HEAPU8[$220+2>>0]<<16)|(HEAPU8[$220+3>>0]<<24);
               $222 = ((($221)) + 4|0);
               $223 = HEAPU8[$222>>0]|(HEAPU8[$222+1>>0]<<8)|(HEAPU8[$222+2>>0]<<16)|(HEAPU8[$222+3>>0]<<24);
               $224 = $223;
              } else {
               $224 = 0;
              }
             } else {
              $224 = 0;
             }
            } else {
             $224 = 0;
            }
           } else {
            $224 = 0;
           }
          } else {
           $224 = 0;
          }
         } while(0);
         $obj = $224;
         $225 = $obj;
         $226 = ($225|0)!=(0|0);
         if (!($226)) {
          label = 51;
          break;
         }
         $227 = $obj;
         $228 = HEAPU8[$227>>0]|(HEAPU8[$227+1>>0]<<8)|(HEAPU8[$227+2>>0]<<16)|(HEAPU8[$227+3>>0]<<24);
         $229 = ($228|0)==(16);
         if (!($229)) {
          label = 51;
          break;
         }
         $261 = $obj;
         $262 = ((($261)) + 4|0);
         $263 = HEAPU8[$262>>0]|(HEAPU8[$262+1>>0]<<8)|(HEAPU8[$262+2>>0]<<16)|(HEAPU8[$262+3>>0]<<24);
         $inherit = $263;
         $264 = $1;
         $265 = $instance;
         $266 = $inherit;
         (__link_meta_class($264,$265,$266)|0);
         $267 = HEAP32[$ast>>2]|0;
         $268 = ((($267)) + 8|0);
         $269 = HEAPU8[$268>>0]|(HEAPU8[$268+1>>0]<<8)|(HEAPU8[$268+2>>0]<<16)|(HEAPU8[$268+3>>0]<<24);
         HEAP32[$ast>>2] = $269;
         $270 = HEAP32[$ast>>2]|0;
         $271 = HEAPU8[$270>>0]|(HEAPU8[$270+1>>0]<<8)|(HEAPU8[$270+2>>0]<<16)|(HEAPU8[$270+3>>0]<<24);
         $obj = $271;
         $272 = $obj;
         $273 = ($272|0)!=(0|0);
         if ($273) {
          $274 = $obj;
          $275 = HEAPU8[$274>>0]|(HEAPU8[$274+1>>0]<<8)|(HEAPU8[$274+2>>0]<<16)|(HEAPU8[$274+3>>0]<<24);
          $276 = ($275|0)==(16);
          if ($276) {
           continue;
          }
         }
         $277 = $obj;
         $278 = HEAPU8[$277>>0]|(HEAPU8[$277+1>>0]<<8)|(HEAPU8[$277+2>>0]<<16)|(HEAPU8[$277+3>>0]<<24);
         $279 = ($278|0)==(19);
         if (!($279)) {
          break;
         }
         $280 = $obj;
         $281 = ((($280)) + 4|0);
         $282 = HEAP8[$281>>0]|0;
         $283 = $282 << 24 >> 24;
         $284 = ($283|0)==(44);
         if (!($284)) {
          break;
         }
        }
        if ((label|0) == 51) {
         $230 = HEAP32[$ast>>2]|0;
         $231 = ($230|0)!=(0|0);
         if ($231) {
          $232 = HEAP32[$ast>>2]|0;
          $233 = HEAPU8[$232>>0]|(HEAPU8[$232+1>>0]<<8)|(HEAPU8[$232+2>>0]<<16)|(HEAPU8[$232+3>>0]<<24);
          $234 = ($233|0)!=(0|0);
          if ($234) {
           $235 = $1;
           $236 = $1;
           $237 = ((($236)) + 67|0);
           $238 = HEAPU8[$237>>0]|(HEAPU8[$237+1>>0]<<8)|(HEAPU8[$237+2>>0]<<16)|(HEAPU8[$237+3>>0]<<24);
           $239 = (__set_current_error($235,57,$238)|0);
           $240 = ($239<<24>>24)!=(0);
           if (!($240)) {
            break L4;
           }
           $241 = $1;
           $242 = HEAP32[$ast>>2]|0;
           $243 = HEAPU8[$242>>0]|(HEAPU8[$242+1>>0]<<8)|(HEAPU8[$242+2>>0]<<16)|(HEAPU8[$242+3>>0]<<24);
           $244 = ((($243)) + 9|0);
           $245 = HEAPU8[$244>>0]|(HEAPU8[$244+1>>0]<<8)|(HEAPU8[$244+2>>0]<<16)|(HEAPU8[$244+3>>0]<<24);
           $246 = HEAP32[$ast>>2]|0;
           $247 = HEAPU8[$246>>0]|(HEAPU8[$246+1>>0]<<8)|(HEAPU8[$246+2>>0]<<16)|(HEAPU8[$246+3>>0]<<24);
           $248 = ((($247)) + 13|0);
           $249 = HEAPU8[$248>>0]|(HEAPU8[$248+1>>0]<<8);
           $250 = HEAP32[$ast>>2]|0;
           $251 = HEAPU8[$250>>0]|(HEAPU8[$250+1>>0]<<8)|(HEAPU8[$250+2>>0]<<16)|(HEAPU8[$250+3>>0]<<24);
           $252 = ((($251)) + 15|0);
           $253 = HEAPU8[$252>>0]|(HEAPU8[$252+1>>0]<<8);
           __set_error_pos($241,$245,$249,$253);
           $result = 3;
           break L4;
          }
         }
         $254 = $1;
         $255 = $1;
         $256 = ((($255)) + 67|0);
         $257 = HEAPU8[$256>>0]|(HEAPU8[$256+1>>0]<<8)|(HEAPU8[$256+2>>0]<<16)|(HEAPU8[$256+3>>0]<<24);
         $258 = (__set_current_error($254,57,$257)|0);
         $259 = ($258<<24>>24)!=(0);
         if (!($259)) {
          break L4;
         }
         $260 = $1;
         __set_error_pos($260,0,0,0);
         $result = 3;
         break L4;
        }
        $285 = $obj;
        $286 = HEAPU8[$285>>0]|(HEAPU8[$285+1>>0]<<8)|(HEAPU8[$285+2>>0]<<16)|(HEAPU8[$285+3>>0]<<24);
        $287 = ($286|0)==(8);
        if ($287) {
         $288 = $obj;
         $289 = ((($288)) + 4|0);
         $290 = HEAPU8[$289>>0]|(HEAPU8[$289+1>>0]<<8)|(HEAPU8[$289+2>>0]<<16)|(HEAPU8[$289+3>>0]<<24);
         $291 = ((($290)) + 4|0);
         $292 = HEAPU8[$291>>0]|(HEAPU8[$291+1>>0]<<8)|(HEAPU8[$291+2>>0]<<16)|(HEAPU8[$291+3>>0]<<24);
         $293 = ($292|0)==(8|0);
         if ($293) {
          $294 = HEAP32[$ast>>2]|0;
          $295 = ((($294)) + 8|0);
          $296 = HEAPU8[$295>>0]|(HEAPU8[$295+1>>0]<<8)|(HEAPU8[$295+2>>0]<<16)|(HEAPU8[$295+3>>0]<<24);
          HEAP32[$ast>>2] = $296;
          break;
         }
        }
        $297 = HEAP32[$ast>>2]|0;
        $298 = ($297|0)!=(0|0);
        if ($298) {
         $299 = HEAP32[$ast>>2]|0;
         $300 = HEAPU8[$299>>0]|(HEAPU8[$299+1>>0]<<8)|(HEAPU8[$299+2>>0]<<16)|(HEAPU8[$299+3>>0]<<24);
         $301 = ($300|0)!=(0|0);
         if ($301) {
          $302 = $1;
          $303 = $1;
          $304 = ((($303)) + 67|0);
          $305 = HEAPU8[$304>>0]|(HEAPU8[$304+1>>0]<<8)|(HEAPU8[$304+2>>0]<<16)|(HEAPU8[$304+3>>0]<<24);
          $306 = (__set_current_error($302,34,$305)|0);
          $307 = ($306<<24>>24)!=(0);
          if (!($307)) {
           break L4;
          }
          $308 = $1;
          $309 = HEAP32[$ast>>2]|0;
          $310 = HEAPU8[$309>>0]|(HEAPU8[$309+1>>0]<<8)|(HEAPU8[$309+2>>0]<<16)|(HEAPU8[$309+3>>0]<<24);
          $311 = ((($310)) + 9|0);
          $312 = HEAPU8[$311>>0]|(HEAPU8[$311+1>>0]<<8)|(HEAPU8[$311+2>>0]<<16)|(HEAPU8[$311+3>>0]<<24);
          $313 = HEAP32[$ast>>2]|0;
          $314 = HEAPU8[$313>>0]|(HEAPU8[$313+1>>0]<<8)|(HEAPU8[$313+2>>0]<<16)|(HEAPU8[$313+3>>0]<<24);
          $315 = ((($314)) + 13|0);
          $316 = HEAPU8[$315>>0]|(HEAPU8[$315+1>>0]<<8);
          $317 = HEAP32[$ast>>2]|0;
          $318 = HEAPU8[$317>>0]|(HEAPU8[$317+1>>0]<<8)|(HEAPU8[$317+2>>0]<<16)|(HEAPU8[$317+3>>0]<<24);
          $319 = ((($318)) + 15|0);
          $320 = HEAPU8[$319>>0]|(HEAPU8[$319+1>>0]<<8);
          __set_error_pos($308,$312,$316,$320);
          $result = 3;
          break L4;
         }
        }
        $321 = $1;
        $322 = $1;
        $323 = ((($322)) + 67|0);
        $324 = HEAPU8[$323>>0]|(HEAPU8[$323+1>>0]<<8)|(HEAPU8[$323+2>>0]<<16)|(HEAPU8[$323+3>>0]<<24);
        $325 = (__set_current_error($321,34,$324)|0);
        $326 = ($325<<24>>24)!=(0);
        if (!($326)) {
         break L4;
        }
        $327 = $1;
        __set_error_pos($327,0,0,0);
        $result = 3;
        break L4;
       }
      }
     } while(0);
     $328 = HEAP32[$ast>>2]|0;
     $329 = $2;
     HEAP32[$329>>2] = $328;
     $330 = $1;
     $331 = $instance;
     $332 = ((($331)) + 29|0);
     $333 = HEAPU8[$332>>0]|(HEAPU8[$332+1>>0]<<8)|(HEAPU8[$332+2>>0]<<16)|(HEAPU8[$332+3>>0]<<24);
     $334 = (__push_scope_by_class($330,$333)|0);
     $running = $334;
     while(1) {
      $335 = $1;
      $336 = $2;
      $337 = (__execute_statement($335,$336,1)|0);
      $result = $337;
      $338 = $result;
      $339 = ($338|0)!=(0);
      if ($339) {
       label = 72;
       break;
      }
      $443 = $2;
      $444 = HEAP32[$443>>2]|0;
      HEAP32[$ast>>2] = $444;
      $445 = HEAP32[$ast>>2]|0;
      $446 = ($445|0)!=(0|0);
      if (!($446)) {
       label = 96;
       break;
      }
      $447 = HEAP32[$ast>>2]|0;
      $448 = HEAPU8[$447>>0]|(HEAPU8[$447+1>>0]<<8)|(HEAPU8[$447+2>>0]<<16)|(HEAPU8[$447+3>>0]<<24);
      $obj = $448;
      $449 = HEAP32[$ast>>2]|0;
      $450 = ($449|0)!=(0|0);
      if (!($450)) {
       label = 96;
       break;
      }
      $451 = $obj;
      $452 = HEAPU8[$451>>0]|(HEAPU8[$451+1>>0]<<8)|(HEAPU8[$451+2>>0]<<16)|(HEAPU8[$451+3>>0]<<24);
      $453 = ($452|0)==(8);
      if ($453) {
       $454 = $obj;
       $455 = ((($454)) + 4|0);
       $456 = HEAPU8[$455>>0]|(HEAPU8[$455+1>>0]<<8)|(HEAPU8[$455+2>>0]<<16)|(HEAPU8[$455+3>>0]<<24);
       $457 = ((($456)) + 4|0);
       $458 = HEAPU8[$457>>0]|(HEAPU8[$457+1>>0]<<8)|(HEAPU8[$457+2>>0]<<16)|(HEAPU8[$457+3>>0]<<24);
       $459 = ($458|0)==(46|0);
       $461 = $459;
      } else {
       $461 = 0;
      }
      $460 = $461 ^ 1;
      if (!($460)) {
       label = 96;
       break;
      }
     }
     do {
      if ((label|0) == 72) {
       $340 = $result;
       $341 = ($340|0)>=(201);
       if ($341) {
        $342 = $1;
        $343 = ((($342)) + 135|0);
        HEAP8[$343>>0]=68&255;HEAP8[$343+1>>0]=(68>>8)&255;HEAP8[$343+2>>0]=(68>>16)&255;HEAP8[$343+3>>0]=68>>24;
       }
       $344 = $1;
       $345 = $1;
       $346 = ((($345)) + 135|0);
       $347 = HEAPU8[$346>>0]|(HEAPU8[$346+1>>0]<<8)|(HEAPU8[$346+2>>0]<<16)|(HEAPU8[$346+3>>0]<<24);
       $348 = $1;
       $349 = ((($348)) + 139|0);
       $350 = HEAPU8[$349>>0]|(HEAPU8[$349+1>>0]<<8)|(HEAPU8[$349+2>>0]<<16)|(HEAPU8[$349+3>>0]<<24);
       (__set_current_error($344,$347,$350)|0);
       $351 = $1;
       $352 = ((($351)) + 163|0);
       $353 = HEAPU8[$352>>0]|(HEAPU8[$352+1>>0]<<8)|(HEAPU8[$352+2>>0]<<16)|(HEAPU8[$352+3>>0]<<24);
       $354 = ($353|0)!=(0|0);
       if ($354) {
        $355 = $1;
        $356 = ((($355)) + 134|0);
        $357 = HEAP8[$356>>0]|0;
        $358 = $357 & 1;
        $359 = ($358<<24>>24)!=(0);
        if ($359) {
         break;
        }
        $360 = $1;
        $361 = ((($360)) + 134|0);
        $362 = HEAP8[$361>>0]|0;
        $363 = $362 & -2;
        $364 = $363 | 1;
        HEAP8[$361>>0] = $364;
        $365 = $1;
        $366 = ((($365)) + 163|0);
        $367 = HEAPU8[$366>>0]|(HEAPU8[$366+1>>0]<<8)|(HEAPU8[$366+2>>0]<<16)|(HEAPU8[$366+3>>0]<<24);
        $368 = $1;
        $369 = $1;
        $370 = ((($369)) + 135|0);
        $371 = HEAPU8[$370>>0]|(HEAPU8[$370+1>>0]<<8)|(HEAPU8[$370+2>>0]<<16)|(HEAPU8[$370+3>>0]<<24);
        $372 = $1;
        $373 = ((($372)) + 135|0);
        $374 = HEAPU8[$373>>0]|(HEAPU8[$373+1>>0]<<8)|(HEAPU8[$373+2>>0]<<16)|(HEAPU8[$373+3>>0]<<24);
        $375 = (_mb_get_error_desc($374)|0);
        $376 = $1;
        $377 = ((($376)) + 139|0);
        $378 = HEAPU8[$377>>0]|(HEAPU8[$377+1>>0]<<8)|(HEAPU8[$377+2>>0]<<16)|(HEAPU8[$377+3>>0]<<24);
        $379 = $1;
        $380 = ((($379)) + 71|0);
        $381 = HEAPU8[$380>>0]|(HEAPU8[$380+1>>0]<<8)|(HEAPU8[$380+2>>0]<<16)|(HEAPU8[$380+3>>0]<<24);
        $382 = ($381|0)!=(0|0);
        if ($382) {
         $383 = $1;
         $384 = ((($383)) + 79|0);
         $385 = HEAPU8[$384>>0]|(HEAPU8[$384+1>>0]<<8)|(HEAPU8[$384+2>>0]<<16)|(HEAPU8[$384+3>>0]<<24);
         $386 = ($385|0)!=(0);
         if ($386) {
          label = 79;
         } else {
          $387 = $1;
          $388 = ((($387)) + 71|0);
          $389 = HEAPU8[$388>>0]|(HEAPU8[$388+1>>0]<<8)|(HEAPU8[$388+2>>0]<<16)|(HEAPU8[$388+3>>0]<<24);
          $390 = ((($389)) + 164|0);
          $391 = HEAPU8[$390>>0]|(HEAPU8[$390+1>>0]<<8)|(HEAPU8[$390+2>>0]<<16)|(HEAPU8[$390+3>>0]<<24);
          $432 = $391;
         }
        } else {
         label = 79;
        }
        if ((label|0) == 79) {
         $392 = $1;
         $393 = ((($392)) + 143|0);
         $394 = HEAPU8[$393>>0]|(HEAPU8[$393+1>>0]<<8)|(HEAPU8[$393+2>>0]<<16)|(HEAPU8[$393+3>>0]<<24);
         $432 = $394;
        }
        $395 = $1;
        $396 = ((($395)) + 71|0);
        $397 = HEAPU8[$396>>0]|(HEAPU8[$396+1>>0]<<8)|(HEAPU8[$396+2>>0]<<16)|(HEAPU8[$396+3>>0]<<24);
        $398 = ($397|0)!=(0|0);
        if ($398) {
         $399 = $1;
         $400 = ((($399)) + 79|0);
         $401 = HEAPU8[$400>>0]|(HEAPU8[$400+1>>0]<<8)|(HEAPU8[$400+2>>0]<<16)|(HEAPU8[$400+3>>0]<<24);
         $402 = ($401|0)!=(0);
         if ($402) {
          label = 83;
         } else {
          $403 = $1;
          $404 = ((($403)) + 71|0);
          $405 = HEAPU8[$404>>0]|(HEAPU8[$404+1>>0]<<8)|(HEAPU8[$404+2>>0]<<16)|(HEAPU8[$404+3>>0]<<24);
          $406 = ((($405)) + 168|0);
          $407 = HEAPU8[$406>>0]|(HEAPU8[$406+1>>0]<<8);
          $$sink = $407;
         }
        } else {
         label = 83;
        }
        if ((label|0) == 83) {
         $408 = $1;
         $409 = ((($408)) + 147|0);
         $410 = HEAPU8[$409>>0]|(HEAPU8[$409+1>>0]<<8);
         $$sink = $410;
        }
        $411 = $$sink&65535;
        $412 = $411&65535;
        $413 = $1;
        $414 = ((($413)) + 71|0);
        $415 = HEAPU8[$414>>0]|(HEAPU8[$414+1>>0]<<8)|(HEAPU8[$414+2>>0]<<16)|(HEAPU8[$414+3>>0]<<24);
        $416 = ($415|0)!=(0|0);
        if ($416) {
         $417 = $1;
         $418 = ((($417)) + 79|0);
         $419 = HEAPU8[$418>>0]|(HEAPU8[$418+1>>0]<<8)|(HEAPU8[$418+2>>0]<<16)|(HEAPU8[$418+3>>0]<<24);
         $420 = ($419|0)!=(0);
         if ($420) {
          label = 87;
         } else {
          $421 = $1;
          $422 = ((($421)) + 71|0);
          $423 = HEAPU8[$422>>0]|(HEAPU8[$422+1>>0]<<8)|(HEAPU8[$422+2>>0]<<16)|(HEAPU8[$422+3>>0]<<24);
          $424 = ((($423)) + 170|0);
          $425 = HEAPU8[$424>>0]|(HEAPU8[$424+1>>0]<<8);
          $$sink3 = $425;
         }
        } else {
         label = 87;
        }
        if ((label|0) == 87) {
         $426 = $1;
         $427 = ((($426)) + 149|0);
         $428 = HEAPU8[$427>>0]|(HEAPU8[$427+1>>0]<<8);
         $$sink3 = $428;
        }
        $429 = $$sink3&65535;
        $430 = $429&65535;
        $431 = $result;
        FUNCTION_TABLE_viiiiiiii[$367 & 127]($368,$371,$375,$378,$432,$412,$430,$431);
       }
       $433 = $result;
       $434 = ($433|0)==(2);
       if ($434) {
        $435 = $1;
        $436 = ((($435)) + 135|0);
        HEAP8[$436>>0]=0&255;HEAP8[$436+1>>0]=(0>>8)&255;HEAP8[$436+2>>0]=(0>>16)&255;HEAP8[$436+3>>0]=0>>24;
        $437 = $1;
        $438 = ((($437)) + 139|0);
        HEAP8[$438>>0]=0&255;HEAP8[$438+1>>0]=(0>>8)&255;HEAP8[$438+2>>0]=(0>>16)&255;HEAP8[$438+3>>0]=0>>24;
        $439 = $1;
        $440 = ((($439)) + 134|0);
        $441 = HEAP8[$440>>0]|0;
        $442 = $441 & -2;
        HEAP8[$440>>0] = $442;
       }
      }
      else if ((label|0) == 96) {
       $462 = $1;
       (__pop_scope($462,0)|0);
       $463 = $1;
       $464 = $instance;
       $465 = (__search_class_hash_and_compare_functions($463,$464)|0);
       $466 = ($465|0)!=(0);
       $467 = HEAP32[$ast>>2]|0;
       $468 = ($467|0)!=(0|0);
       if (!($466)) {
        if (!($468)) {
         break;
        }
        $498 = $1;
        (__skip_to($498,$ast,46,0)|0);
        $499 = HEAP32[$ast>>2]|0;
        $500 = ((($499)) + 8|0);
        $501 = HEAPU8[$500>>0]|(HEAPU8[$500+1>>0]<<8)|(HEAPU8[$500+2>>0]<<16)|(HEAPU8[$500+3>>0]<<24);
        HEAP32[$ast>>2] = $501;
        break;
       }
       if ($468) {
        $469 = HEAP32[$ast>>2]|0;
        $470 = HEAPU8[$469>>0]|(HEAPU8[$469+1>>0]<<8)|(HEAPU8[$469+2>>0]<<16)|(HEAPU8[$469+3>>0]<<24);
        $471 = ($470|0)!=(0|0);
        if ($471) {
         $472 = $1;
         $473 = $1;
         $474 = ((($473)) + 67|0);
         $475 = HEAPU8[$474>>0]|(HEAPU8[$474+1>>0]<<8)|(HEAPU8[$474+2>>0]<<16)|(HEAPU8[$474+3>>0]<<24);
         $476 = (__set_current_error($472,59,$475)|0);
         $477 = ($476<<24>>24)!=(0);
         if (!($477)) {
          break L4;
         }
         $478 = $1;
         $479 = HEAP32[$ast>>2]|0;
         $480 = HEAPU8[$479>>0]|(HEAPU8[$479+1>>0]<<8)|(HEAPU8[$479+2>>0]<<16)|(HEAPU8[$479+3>>0]<<24);
         $481 = ((($480)) + 9|0);
         $482 = HEAPU8[$481>>0]|(HEAPU8[$481+1>>0]<<8)|(HEAPU8[$481+2>>0]<<16)|(HEAPU8[$481+3>>0]<<24);
         $483 = HEAP32[$ast>>2]|0;
         $484 = HEAPU8[$483>>0]|(HEAPU8[$483+1>>0]<<8)|(HEAPU8[$483+2>>0]<<16)|(HEAPU8[$483+3>>0]<<24);
         $485 = ((($484)) + 13|0);
         $486 = HEAPU8[$485>>0]|(HEAPU8[$485+1>>0]<<8);
         $487 = HEAP32[$ast>>2]|0;
         $488 = HEAPU8[$487>>0]|(HEAPU8[$487+1>>0]<<8)|(HEAPU8[$487+2>>0]<<16)|(HEAPU8[$487+3>>0]<<24);
         $489 = ((($488)) + 15|0);
         $490 = HEAPU8[$489>>0]|(HEAPU8[$489+1>>0]<<8);
         __set_error_pos($478,$482,$486,$490);
         break L4;
        }
       }
       $491 = $1;
       $492 = $1;
       $493 = ((($492)) + 67|0);
       $494 = HEAPU8[$493>>0]|(HEAPU8[$493+1>>0]<<8)|(HEAPU8[$493+2>>0]<<16)|(HEAPU8[$493+3>>0]<<24);
       $495 = (__set_current_error($491,59,$494)|0);
       $496 = ($495<<24>>24)!=(0);
       if (!($496)) {
        break L4;
       }
       $497 = $1;
       __set_error_pos($497,0,0,0);
       break L4;
      }
     } while(0);
     $502 = $result;
     $503 = ($502|0)!=(0);
     if (!($503)) {
      break;
     }
     $504 = $1;
     (__pop_scope($504,0)|0);
     break;
    }
   }
   $110 = HEAP32[$ast>>2]|0;
   $111 = ($110|0)!=(0|0);
   if ($111) {
    $112 = HEAP32[$ast>>2]|0;
    $113 = HEAPU8[$112>>0]|(HEAPU8[$112+1>>0]<<8)|(HEAPU8[$112+2>>0]<<16)|(HEAPU8[$112+3>>0]<<24);
    $114 = ($113|0)!=(0|0);
    if ($114) {
     $115 = $1;
     $116 = $1;
     $117 = ((($116)) + 67|0);
     $118 = HEAPU8[$117>>0]|(HEAPU8[$117+1>>0]<<8)|(HEAPU8[$117+2>>0]<<16)|(HEAPU8[$117+3>>0]<<24);
     $119 = (__set_current_error($115,57,$118)|0);
     $120 = ($119<<24>>24)!=(0);
     if (!($120)) {
      break;
     }
     $121 = $1;
     $122 = HEAP32[$ast>>2]|0;
     $123 = HEAPU8[$122>>0]|(HEAPU8[$122+1>>0]<<8)|(HEAPU8[$122+2>>0]<<16)|(HEAPU8[$122+3>>0]<<24);
     $124 = ((($123)) + 9|0);
     $125 = HEAPU8[$124>>0]|(HEAPU8[$124+1>>0]<<8)|(HEAPU8[$124+2>>0]<<16)|(HEAPU8[$124+3>>0]<<24);
     $126 = HEAP32[$ast>>2]|0;
     $127 = HEAPU8[$126>>0]|(HEAPU8[$126+1>>0]<<8)|(HEAPU8[$126+2>>0]<<16)|(HEAPU8[$126+3>>0]<<24);
     $128 = ((($127)) + 13|0);
     $129 = HEAPU8[$128>>0]|(HEAPU8[$128+1>>0]<<8);
     $130 = HEAP32[$ast>>2]|0;
     $131 = HEAPU8[$130>>0]|(HEAPU8[$130+1>>0]<<8)|(HEAPU8[$130+2>>0]<<16)|(HEAPU8[$130+3>>0]<<24);
     $132 = ((($131)) + 15|0);
     $133 = HEAPU8[$132>>0]|(HEAPU8[$132+1>>0]<<8);
     __set_error_pos($121,$125,$129,$133);
     $result = 3;
     break;
    }
   }
   $134 = $1;
   $135 = $1;
   $136 = ((($135)) + 67|0);
   $137 = HEAPU8[$136>>0]|(HEAPU8[$136+1>>0]<<8)|(HEAPU8[$136+2>>0]<<16)|(HEAPU8[$136+3>>0]<<24);
   $138 = (__set_current_error($134,57,$137)|0);
   $139 = ($138<<24>>24)!=(0);
   if ($139) {
    $140 = $1;
    __set_error_pos($140,0,0,0);
    $result = 3;
   }
  }
 } while(0);
 $505 = HEAP32[$ast>>2]|0;
 $506 = $2;
 HEAP32[$506>>2] = $505;
 $507 = $last_inst;
 $508 = $1;
 $509 = ((($508)) + 93|0);
 HEAP8[$509>>0]=$507&255;HEAP8[$509+1>>0]=($507>>8)&255;HEAP8[$509+2>>0]=($507>>16)&255;HEAP8[$509+3>>0]=$507>>24;
 $510 = $result;
 $0 = $510;
 $511 = $0;
 STACKTOP = sp;return ($511|0);
}
function __core_def($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $ast = 0, $obj = 0, $or$cond = 0, $result = 0, $rnode = 0, $routine = 0, $running = 0, $var = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ast = sp + 20|0;
 $0 = $s;
 $1 = $l;
 $result = 0;
 HEAP32[$ast>>2] = 0;
 $running = 0;
 $obj = 0;
 $var = 0;
 $rnode = 0;
 $routine = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),16606,(8216|0));
  // unreachable;
 }
 $6 = $0;
 $7 = ((($6)) + 75|0);
 $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
 $running = $8;
 $9 = $1;
 $10 = HEAP32[$9>>2]|0;
 HEAP32[$ast>>2] = $10;
 $11 = HEAP32[$ast>>2]|0;
 $12 = ((($11)) + 8|0);
 $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
 HEAP32[$ast>>2] = $13;
 $14 = $0;
 $15 = ((($14)) + 92|0);
 $16 = HEAP8[$15>>0]|0;
 $17 = $16&255;
 $18 = $17 & -3;
 $19 = ($18|0)!=(0);
 if ($19) {
  $20 = HEAP32[$ast>>2]|0;
  $21 = ($20|0)!=(0|0);
  if ($21) {
   $22 = HEAP32[$ast>>2]|0;
   $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
   $24 = ($23|0)!=(0|0);
   if ($24) {
    $25 = $0;
    $26 = $0;
    $27 = ((($26)) + 67|0);
    $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
    $29 = (__set_current_error($25,52,$28)|0);
    $30 = ($29<<24>>24)!=(0);
    if (!($30)) {
     $283 = HEAP32[$ast>>2]|0;
     $284 = $1;
     HEAP32[$284>>2] = $283;
     $285 = $result;
     STACKTOP = sp;return ($285|0);
    }
    $31 = $0;
    $32 = HEAP32[$ast>>2]|0;
    $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
    $34 = ((($33)) + 9|0);
    $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
    $36 = HEAP32[$ast>>2]|0;
    $37 = HEAPU8[$36>>0]|(HEAPU8[$36+1>>0]<<8)|(HEAPU8[$36+2>>0]<<16)|(HEAPU8[$36+3>>0]<<24);
    $38 = ((($37)) + 13|0);
    $39 = HEAPU8[$38>>0]|(HEAPU8[$38+1>>0]<<8);
    $40 = HEAP32[$ast>>2]|0;
    $41 = HEAPU8[$40>>0]|(HEAPU8[$40+1>>0]<<8)|(HEAPU8[$40+2>>0]<<16)|(HEAPU8[$40+3>>0]<<24);
    $42 = ((($41)) + 15|0);
    $43 = HEAPU8[$42>>0]|(HEAPU8[$42+1>>0]<<8);
    __set_error_pos($31,$35,$39,$43);
    $result = 3;
    $283 = HEAP32[$ast>>2]|0;
    $284 = $1;
    HEAP32[$284>>2] = $283;
    $285 = $result;
    STACKTOP = sp;return ($285|0);
   }
  }
  $44 = $0;
  $45 = $0;
  $46 = ((($45)) + 67|0);
  $47 = HEAPU8[$46>>0]|(HEAPU8[$46+1>>0]<<8)|(HEAPU8[$46+2>>0]<<16)|(HEAPU8[$46+3>>0]<<24);
  $48 = (__set_current_error($44,52,$47)|0);
  $49 = ($48<<24>>24)!=(0);
  if (!($49)) {
   $283 = HEAP32[$ast>>2]|0;
   $284 = $1;
   HEAP32[$284>>2] = $283;
   $285 = $result;
   STACKTOP = sp;return ($285|0);
  }
  $50 = $0;
  __set_error_pos($50,0,0,0);
  $result = 3;
  $283 = HEAP32[$ast>>2]|0;
  $284 = $1;
  HEAP32[$284>>2] = $283;
  $285 = $result;
  STACKTOP = sp;return ($285|0);
 }
 $51 = $0;
 $52 = ((($51)) + 92|0);
 $53 = HEAP8[$52>>0]|0;
 $54 = $53&255;
 $55 = $54 | 2;
 $56 = $55&255;
 HEAP8[$52>>0] = $56;
 $57 = $0;
 $58 = ((($57)) + 83|0);
 $59 = HEAP8[$58>>0]|0;
 $60 = $59 & 1;
 $61 = ($60<<24>>24)!=(0);
 do {
  if (!($61)) {
   $62 = HEAP32[$ast>>2]|0;
   $63 = ($62|0)!=(0|0);
   if ($63) {
    $64 = HEAP32[$ast>>2]|0;
    $65 = HEAPU8[$64>>0]|(HEAPU8[$64+1>>0]<<8)|(HEAPU8[$64+2>>0]<<16)|(HEAPU8[$64+3>>0]<<24);
    $66 = $65;
   } else {
    $66 = 0;
   }
   $obj = $66;
   $67 = $obj;
   $68 = ($67|0)!=(0|0);
   if ($68) {
    $69 = $obj;
    $70 = HEAPU8[$69>>0]|(HEAPU8[$69+1>>0]<<8)|(HEAPU8[$69+2>>0]<<16)|(HEAPU8[$69+3>>0]<<24);
    $71 = ($70|0)==(17);
    if ($71) {
     $103 = $obj;
     $104 = ((($103)) + 4|0);
     $105 = HEAPU8[$104>>0]|(HEAPU8[$104+1>>0]<<8)|(HEAPU8[$104+2>>0]<<16)|(HEAPU8[$104+3>>0]<<24);
     $106 = ((($105)) + 8|0);
     $107 = HEAPU8[$106>>0]|(HEAPU8[$106+1>>0]<<8)|(HEAPU8[$106+2>>0]<<16)|(HEAPU8[$106+3>>0]<<24);
     $108 = ($107|0)!=(0|0);
     $109 = HEAP32[$ast>>2]|0;
     if ($108) {
      $110 = ($109|0)!=(0|0);
      if ($110) {
       $111 = HEAP32[$ast>>2]|0;
       $112 = HEAPU8[$111>>0]|(HEAPU8[$111+1>>0]<<8)|(HEAPU8[$111+2>>0]<<16)|(HEAPU8[$111+3>>0]<<24);
       $113 = ($112|0)!=(0|0);
       if ($113) {
        $114 = $0;
        $115 = $0;
        $116 = ((($115)) + 67|0);
        $117 = HEAPU8[$116>>0]|(HEAPU8[$116+1>>0]<<8)|(HEAPU8[$116+2>>0]<<16)|(HEAPU8[$116+3>>0]<<24);
        $118 = (__set_current_error($114,55,$117)|0);
        $119 = ($118<<24>>24)!=(0);
        if (!($119)) {
         $283 = HEAP32[$ast>>2]|0;
         $284 = $1;
         HEAP32[$284>>2] = $283;
         $285 = $result;
         STACKTOP = sp;return ($285|0);
        }
        $120 = $0;
        $121 = HEAP32[$ast>>2]|0;
        $122 = HEAPU8[$121>>0]|(HEAPU8[$121+1>>0]<<8)|(HEAPU8[$121+2>>0]<<16)|(HEAPU8[$121+3>>0]<<24);
        $123 = ((($122)) + 9|0);
        $124 = HEAPU8[$123>>0]|(HEAPU8[$123+1>>0]<<8)|(HEAPU8[$123+2>>0]<<16)|(HEAPU8[$123+3>>0]<<24);
        $125 = HEAP32[$ast>>2]|0;
        $126 = HEAPU8[$125>>0]|(HEAPU8[$125+1>>0]<<8)|(HEAPU8[$125+2>>0]<<16)|(HEAPU8[$125+3>>0]<<24);
        $127 = ((($126)) + 13|0);
        $128 = HEAPU8[$127>>0]|(HEAPU8[$127+1>>0]<<8);
        $129 = HEAP32[$ast>>2]|0;
        $130 = HEAPU8[$129>>0]|(HEAPU8[$129+1>>0]<<8)|(HEAPU8[$129+2>>0]<<16)|(HEAPU8[$129+3>>0]<<24);
        $131 = ((($130)) + 15|0);
        $132 = HEAPU8[$131>>0]|(HEAPU8[$131+1>>0]<<8);
        __set_error_pos($120,$124,$128,$132);
        $result = 3;
        $283 = HEAP32[$ast>>2]|0;
        $284 = $1;
        HEAP32[$284>>2] = $283;
        $285 = $result;
        STACKTOP = sp;return ($285|0);
       }
      }
      $133 = $0;
      $134 = $0;
      $135 = ((($134)) + 67|0);
      $136 = HEAPU8[$135>>0]|(HEAPU8[$135+1>>0]<<8)|(HEAPU8[$135+2>>0]<<16)|(HEAPU8[$135+3>>0]<<24);
      $137 = (__set_current_error($133,55,$136)|0);
      $138 = ($137<<24>>24)!=(0);
      if (!($138)) {
       $283 = HEAP32[$ast>>2]|0;
       $284 = $1;
       HEAP32[$284>>2] = $283;
       $285 = $result;
       STACKTOP = sp;return ($285|0);
      }
      $139 = $0;
      __set_error_pos($139,0,0,0);
      $result = 3;
      $283 = HEAP32[$ast>>2]|0;
      $284 = $1;
      HEAP32[$284>>2] = $283;
      $285 = $result;
      STACKTOP = sp;return ($285|0);
     }
     $140 = HEAPU8[$109>>0]|(HEAPU8[$109+1>>0]<<8)|(HEAPU8[$109+2>>0]<<16)|(HEAPU8[$109+3>>0]<<24);
     $141 = ((($140)) + 4|0);
     $142 = HEAPU8[$141>>0]|(HEAPU8[$141+1>>0]<<8)|(HEAPU8[$141+2>>0]<<16)|(HEAPU8[$141+3>>0]<<24);
     $routine = $142;
     $143 = HEAP32[$ast>>2]|0;
     $144 = ((($143)) + 8|0);
     $145 = HEAPU8[$144>>0]|(HEAPU8[$144+1>>0]<<8)|(HEAPU8[$144+2>>0]<<16)|(HEAPU8[$144+3>>0]<<24);
     HEAP32[$ast>>2] = $145;
     $146 = HEAP32[$ast>>2]|0;
     $147 = HEAPU8[$146>>0]|(HEAPU8[$146+1>>0]<<8)|(HEAPU8[$146+2>>0]<<16)|(HEAPU8[$146+3>>0]<<24);
     $obj = $147;
     $148 = $obj;
     $149 = HEAPU8[$148>>0]|(HEAPU8[$148+1>>0]<<8)|(HEAPU8[$148+2>>0]<<16)|(HEAPU8[$148+3>>0]<<24);
     $150 = ($149|0)==(8);
     if ($150) {
      $151 = $obj;
      $152 = ((($151)) + 4|0);
      $153 = HEAPU8[$152>>0]|(HEAPU8[$152+1>>0]<<8)|(HEAPU8[$152+2>>0]<<16)|(HEAPU8[$152+3>>0]<<24);
      $154 = ((($153)) + 4|0);
      $155 = HEAPU8[$154>>0]|(HEAPU8[$154+1>>0]<<8)|(HEAPU8[$154+2>>0]<<16)|(HEAPU8[$154+3>>0]<<24);
      $156 = ($155|0)==(7|0);
      if ($156) {
       $188 = HEAP32[$ast>>2]|0;
       $189 = ((($188)) + 8|0);
       $190 = HEAPU8[$189>>0]|(HEAPU8[$189+1>>0]<<8)|(HEAPU8[$189+2>>0]<<16)|(HEAPU8[$189+3>>0]<<24);
       HEAP32[$ast>>2] = $190;
       $191 = HEAP32[$ast>>2]|0;
       $192 = HEAPU8[$191>>0]|(HEAPU8[$191+1>>0]<<8)|(HEAPU8[$191+2>>0]<<16)|(HEAPU8[$191+3>>0]<<24);
       $obj = $192;
       while(1) {
        $193 = $obj;
        $194 = ($193|0)!=(0|0);
        if (!($194)) {
         break;
        }
        $195 = $obj;
        $196 = HEAPU8[$195>>0]|(HEAPU8[$195+1>>0]<<8)|(HEAPU8[$195+2>>0]<<16)|(HEAPU8[$195+3>>0]<<24);
        $197 = ($196|0)==(8);
        if ($197) {
         $198 = $obj;
         $199 = ((($198)) + 4|0);
         $200 = HEAPU8[$199>>0]|(HEAPU8[$199+1>>0]<<8)|(HEAPU8[$199+2>>0]<<16)|(HEAPU8[$199+3>>0]<<24);
         $201 = ((($200)) + 4|0);
         $202 = HEAPU8[$201>>0]|(HEAPU8[$201+1>>0]<<8)|(HEAPU8[$201+2>>0]<<16)|(HEAPU8[$201+3>>0]<<24);
         $203 = ($202|0)==(8|0);
         $205 = $203;
        } else {
         $205 = 0;
        }
        $204 = $205 ^ 1;
        if (!($204)) {
         break;
        }
        $206 = $obj;
        $207 = ($206|0)!=(0|0);
        if ($207) {
         $208 = $obj;
         $209 = HEAPU8[$208>>0]|(HEAPU8[$208+1>>0]<<8)|(HEAPU8[$208+2>>0]<<16)|(HEAPU8[$208+3>>0]<<24);
         $210 = ($209|0)==(9);
         if ($210) {
          $211 = $obj;
          $212 = ((($211)) + 4|0);
          $213 = HEAPU8[$212>>0]|(HEAPU8[$212+1>>0]<<8)|(HEAPU8[$212+2>>0]<<16)|(HEAPU8[$212+3>>0]<<24);
          $var = $213;
          $214 = $0;
          $215 = $routine;
          $216 = HEAPU8[$215>>0]|(HEAPU8[$215+1>>0]<<8)|(HEAPU8[$215+2>>0]<<16)|(HEAPU8[$215+3>>0]<<24);
          $217 = $var;
          $218 = HEAPU8[$217>>0]|(HEAPU8[$217+1>>0]<<8)|(HEAPU8[$217+2>>0]<<16)|(HEAPU8[$217+3>>0]<<24);
          $219 = (__search_identifier_in_scope_chain($214,$216,$218,0,0,0)|0);
          $rnode = $219;
          $220 = $rnode;
          $221 = ($220|0)!=(0|0);
          if ($221) {
           $222 = $rnode;
           $223 = HEAPU8[$222>>0]|(HEAPU8[$222+1>>0]<<8)|(HEAPU8[$222+2>>0]<<16)|(HEAPU8[$222+3>>0]<<24);
           $224 = ((($223)) + 4|0);
           $225 = HEAPU8[$224>>0]|(HEAPU8[$224+1>>0]<<8)|(HEAPU8[$224+2>>0]<<16)|(HEAPU8[$224+3>>0]<<24);
           $var = $225;
          }
          $226 = $routine;
          $227 = ((($226)) + 4|0);
          $228 = HEAPU8[$227>>0]|(HEAPU8[$227+1>>0]<<8)|(HEAPU8[$227+2>>0]<<16)|(HEAPU8[$227+3>>0]<<24);
          $229 = ($228|0)!=(0|0);
          if (!($229)) {
           $230 = (__ls_create()|0);
           $231 = $routine;
           $232 = ((($231)) + 4|0);
           HEAP8[$232>>0]=$230&255;HEAP8[$232+1>>0]=($230>>8)&255;HEAP8[$232+2>>0]=($230>>16)&255;HEAP8[$232+3>>0]=$230>>24;
          }
          $233 = $routine;
          $234 = ((($233)) + 4|0);
          $235 = HEAPU8[$234>>0]|(HEAPU8[$234+1>>0]<<8)|(HEAPU8[$234+2>>0]<<16)|(HEAPU8[$234+3>>0]<<24);
          $236 = $var;
          (__ls_pushback($235,$236)|0);
         } else {
          label = 48;
         }
        } else {
         label = 48;
        }
        if ((label|0) == 48) {
         label = 0;
         $237 = $obj;
         $238 = HEAPU8[$237>>0]|(HEAPU8[$237+1>>0]<<8)|(HEAPU8[$237+2>>0]<<16)|(HEAPU8[$237+3>>0]<<24);
         $239 = ($238|0)==(8);
         if ($239) {
          $240 = $obj;
          $241 = ((($240)) + 4|0);
          $242 = HEAPU8[$241>>0]|(HEAPU8[$241+1>>0]<<8)|(HEAPU8[$241+2>>0]<<16)|(HEAPU8[$241+3>>0]<<24);
          $243 = ((($242)) + 4|0);
          $244 = HEAPU8[$243>>0]|(HEAPU8[$243+1>>0]<<8)|(HEAPU8[$243+2>>0]<<16)|(HEAPU8[$243+3>>0]<<24);
          $245 = ($244|0)==(44|0);
          if ($245) {
           label = 50;
           break;
          }
         }
        }
        $261 = HEAP32[$ast>>2]|0;
        $262 = ((($261)) + 8|0);
        $263 = HEAPU8[$262>>0]|(HEAPU8[$262+1>>0]<<8)|(HEAPU8[$262+2>>0]<<16)|(HEAPU8[$262+3>>0]<<24);
        HEAP32[$ast>>2] = $263;
        $264 = HEAP32[$ast>>2]|0;
        $265 = ($264|0)!=(0|0);
        if ($265) {
         $266 = HEAP32[$ast>>2]|0;
         $267 = HEAPU8[$266>>0]|(HEAPU8[$266+1>>0]<<8)|(HEAPU8[$266+2>>0]<<16)|(HEAPU8[$266+3>>0]<<24);
         $268 = $267;
        } else {
         $268 = 0;
        }
        $obj = $268;
       }
       if ((label|0) == 50) {
        $246 = $routine;
        $247 = ((($246)) + 4|0);
        $248 = HEAPU8[$247>>0]|(HEAPU8[$247+1>>0]<<8)|(HEAPU8[$247+2>>0]<<16)|(HEAPU8[$247+3>>0]<<24);
        $249 = ($248|0)!=(0|0);
        if (!($249)) {
         $250 = (__ls_create()|0);
         $251 = $routine;
         $252 = ((($251)) + 4|0);
         HEAP8[$252>>0]=$250&255;HEAP8[$252+1>>0]=($250>>8)&255;HEAP8[$252+2>>0]=($250>>16)&255;HEAP8[$252+3>>0]=$250>>24;
        }
        $253 = $routine;
        $254 = ((($253)) + 4|0);
        $255 = HEAPU8[$254>>0]|(HEAPU8[$254+1>>0]<<8)|(HEAPU8[$254+2>>0]<<16)|(HEAPU8[$254+3>>0]<<24);
        (__ls_pushback($255,8226)|0);
        $256 = HEAP32[$ast>>2]|0;
        $257 = ((($256)) + 8|0);
        $258 = HEAPU8[$257>>0]|(HEAPU8[$257+1>>0]<<8)|(HEAPU8[$257+2>>0]<<16)|(HEAPU8[$257+3>>0]<<24);
        HEAP32[$ast>>2] = $258;
        $259 = HEAP32[$ast>>2]|0;
        $260 = HEAPU8[$259>>0]|(HEAPU8[$259+1>>0]<<8)|(HEAPU8[$259+2>>0]<<16)|(HEAPU8[$259+3>>0]<<24);
        $obj = $260;
       }
       $269 = HEAP32[$ast>>2]|0;
       $270 = ($269|0)!=(0|0);
       if ($270) {
        $271 = HEAP32[$ast>>2]|0;
        $272 = ((($271)) + 8|0);
        $273 = HEAPU8[$272>>0]|(HEAPU8[$272+1>>0]<<8)|(HEAPU8[$272+2>>0]<<16)|(HEAPU8[$272+3>>0]<<24);
        HEAP32[$ast>>2] = $273;
       }
       $274 = HEAP32[$ast>>2]|0;
       $275 = $routine;
       $276 = ((($275)) + 8|0);
       HEAP8[$276>>0]=$274&255;HEAP8[$276+1>>0]=($274>>8)&255;HEAP8[$276+2>>0]=($274>>16)&255;HEAP8[$276+3>>0]=$274>>24;
       break;
      }
     }
     $157 = HEAP32[$ast>>2]|0;
     $158 = ($157|0)!=(0|0);
     if ($158) {
      $159 = HEAP32[$ast>>2]|0;
      $160 = HEAPU8[$159>>0]|(HEAPU8[$159+1>>0]<<8)|(HEAPU8[$159+2>>0]<<16)|(HEAPU8[$159+3>>0]<<24);
      $161 = ($160|0)!=(0|0);
      if ($161) {
       $162 = $0;
       $163 = $0;
       $164 = ((($163)) + 67|0);
       $165 = HEAPU8[$164>>0]|(HEAPU8[$164+1>>0]<<8)|(HEAPU8[$164+2>>0]<<16)|(HEAPU8[$164+3>>0]<<24);
       $166 = (__set_current_error($162,33,$165)|0);
       $167 = ($166<<24>>24)!=(0);
       if (!($167)) {
        $283 = HEAP32[$ast>>2]|0;
        $284 = $1;
        HEAP32[$284>>2] = $283;
        $285 = $result;
        STACKTOP = sp;return ($285|0);
       }
       $168 = $0;
       $169 = HEAP32[$ast>>2]|0;
       $170 = HEAPU8[$169>>0]|(HEAPU8[$169+1>>0]<<8)|(HEAPU8[$169+2>>0]<<16)|(HEAPU8[$169+3>>0]<<24);
       $171 = ((($170)) + 9|0);
       $172 = HEAPU8[$171>>0]|(HEAPU8[$171+1>>0]<<8)|(HEAPU8[$171+2>>0]<<16)|(HEAPU8[$171+3>>0]<<24);
       $173 = HEAP32[$ast>>2]|0;
       $174 = HEAPU8[$173>>0]|(HEAPU8[$173+1>>0]<<8)|(HEAPU8[$173+2>>0]<<16)|(HEAPU8[$173+3>>0]<<24);
       $175 = ((($174)) + 13|0);
       $176 = HEAPU8[$175>>0]|(HEAPU8[$175+1>>0]<<8);
       $177 = HEAP32[$ast>>2]|0;
       $178 = HEAPU8[$177>>0]|(HEAPU8[$177+1>>0]<<8)|(HEAPU8[$177+2>>0]<<16)|(HEAPU8[$177+3>>0]<<24);
       $179 = ((($178)) + 15|0);
       $180 = HEAPU8[$179>>0]|(HEAPU8[$179+1>>0]<<8);
       __set_error_pos($168,$172,$176,$180);
       $result = 3;
       $283 = HEAP32[$ast>>2]|0;
       $284 = $1;
       HEAP32[$284>>2] = $283;
       $285 = $result;
       STACKTOP = sp;return ($285|0);
      }
     }
     $181 = $0;
     $182 = $0;
     $183 = ((($182)) + 67|0);
     $184 = HEAPU8[$183>>0]|(HEAPU8[$183+1>>0]<<8)|(HEAPU8[$183+2>>0]<<16)|(HEAPU8[$183+3>>0]<<24);
     $185 = (__set_current_error($181,33,$184)|0);
     $186 = ($185<<24>>24)!=(0);
     if (!($186)) {
      $283 = HEAP32[$ast>>2]|0;
      $284 = $1;
      HEAP32[$284>>2] = $283;
      $285 = $result;
      STACKTOP = sp;return ($285|0);
     }
     $187 = $0;
     __set_error_pos($187,0,0,0);
     $result = 3;
     $283 = HEAP32[$ast>>2]|0;
     $284 = $1;
     HEAP32[$284>>2] = $283;
     $285 = $result;
     STACKTOP = sp;return ($285|0);
    }
   }
   $72 = HEAP32[$ast>>2]|0;
   $73 = ($72|0)!=(0|0);
   if ($73) {
    $74 = HEAP32[$ast>>2]|0;
    $75 = HEAPU8[$74>>0]|(HEAPU8[$74+1>>0]<<8)|(HEAPU8[$74+2>>0]<<16)|(HEAPU8[$74+3>>0]<<24);
    $76 = ($75|0)!=(0|0);
    if ($76) {
     $77 = $0;
     $78 = $0;
     $79 = ((($78)) + 67|0);
     $80 = HEAPU8[$79>>0]|(HEAPU8[$79+1>>0]<<8)|(HEAPU8[$79+2>>0]<<16)|(HEAPU8[$79+3>>0]<<24);
     $81 = (__set_current_error($77,54,$80)|0);
     $82 = ($81<<24>>24)!=(0);
     if (!($82)) {
      $283 = HEAP32[$ast>>2]|0;
      $284 = $1;
      HEAP32[$284>>2] = $283;
      $285 = $result;
      STACKTOP = sp;return ($285|0);
     }
     $83 = $0;
     $84 = HEAP32[$ast>>2]|0;
     $85 = HEAPU8[$84>>0]|(HEAPU8[$84+1>>0]<<8)|(HEAPU8[$84+2>>0]<<16)|(HEAPU8[$84+3>>0]<<24);
     $86 = ((($85)) + 9|0);
     $87 = HEAPU8[$86>>0]|(HEAPU8[$86+1>>0]<<8)|(HEAPU8[$86+2>>0]<<16)|(HEAPU8[$86+3>>0]<<24);
     $88 = HEAP32[$ast>>2]|0;
     $89 = HEAPU8[$88>>0]|(HEAPU8[$88+1>>0]<<8)|(HEAPU8[$88+2>>0]<<16)|(HEAPU8[$88+3>>0]<<24);
     $90 = ((($89)) + 13|0);
     $91 = HEAPU8[$90>>0]|(HEAPU8[$90+1>>0]<<8);
     $92 = HEAP32[$ast>>2]|0;
     $93 = HEAPU8[$92>>0]|(HEAPU8[$92+1>>0]<<8)|(HEAPU8[$92+2>>0]<<16)|(HEAPU8[$92+3>>0]<<24);
     $94 = ((($93)) + 15|0);
     $95 = HEAPU8[$94>>0]|(HEAPU8[$94+1>>0]<<8);
     __set_error_pos($83,$87,$91,$95);
     $result = 3;
     $283 = HEAP32[$ast>>2]|0;
     $284 = $1;
     HEAP32[$284>>2] = $283;
     $285 = $result;
     STACKTOP = sp;return ($285|0);
    }
   }
   $96 = $0;
   $97 = $0;
   $98 = ((($97)) + 67|0);
   $99 = HEAPU8[$98>>0]|(HEAPU8[$98+1>>0]<<8)|(HEAPU8[$98+2>>0]<<16)|(HEAPU8[$98+3>>0]<<24);
   $100 = (__set_current_error($96,54,$99)|0);
   $101 = ($100<<24>>24)!=(0);
   if (!($101)) {
    $283 = HEAP32[$ast>>2]|0;
    $284 = $1;
    HEAP32[$284>>2] = $283;
    $285 = $result;
    STACKTOP = sp;return ($285|0);
   }
   $102 = $0;
   __set_error_pos($102,0,0,0);
   $result = 3;
   $283 = HEAP32[$ast>>2]|0;
   $284 = $1;
   HEAP32[$284>>2] = $283;
   $285 = $result;
   STACKTOP = sp;return ($285|0);
  }
 } while(0);
 $277 = $0;
 (__skip_to($277,$ast,43,-1)|0);
 $278 = HEAP32[$ast>>2]|0;
 $279 = ($278|0)!=(0|0);
 if (!($279)) {
  $283 = HEAP32[$ast>>2]|0;
  $284 = $1;
  HEAP32[$284>>2] = $283;
  $285 = $result;
  STACKTOP = sp;return ($285|0);
 }
 $280 = HEAP32[$ast>>2]|0;
 $281 = ((($280)) + 8|0);
 $282 = HEAPU8[$281>>0]|(HEAPU8[$281+1>>0]<<8)|(HEAPU8[$281+2>>0]<<16)|(HEAPU8[$281+3>>0]<<24);
 HEAP32[$ast>>2] = $282;
 $283 = HEAP32[$ast>>2]|0;
 $284 = $1;
 HEAP32[$284>>2] = $283;
 $285 = $result;
 STACKTOP = sp;return ($285|0);
}
function __push_scope_by_routine($s,$p) {
 $s = $s|0;
 $p = $p|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $p;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 if (!($3)) {
  ___assert_fail((4803|0),(4322|0),9378,(8092|0));
  // unreachable;
 }
 $4 = $0;
 $5 = $1;
 $6 = (__find_scope($4,$5)|0);
 $7 = ($6|0)!=(0|0);
 if ($7) {
  $8 = $0;
  $9 = $1;
  $10 = (__reference_scope_by_routine($8,$9,0)|0);
  $1 = $10;
 }
 $11 = $1;
 $12 = ($11|0)!=(0|0);
 if (!($12)) {
  $20 = $0;
  $21 = ((($20)) + 75|0);
  $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
  STACKTOP = sp;return ($22|0);
 }
 $13 = $0;
 $14 = ((($13)) + 75|0);
 $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
 $16 = $1;
 HEAP8[$16>>0]=$15&255;HEAP8[$16+1>>0]=($15>>8)&255;HEAP8[$16+2>>0]=($15>>16)&255;HEAP8[$16+3>>0]=$15>>24;
 $17 = $1;
 $18 = $0;
 $19 = ((($18)) + 75|0);
 HEAP8[$19>>0]=$17&255;HEAP8[$19+1>>0]=($17>>8)&255;HEAP8[$19+2>>0]=($17>>16)&255;HEAP8[$19+3>>0]=$17>>24;
 $20 = $0;
 $21 = ((($20)) + 75|0);
 $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
 STACKTOP = sp;return ($22|0);
}
function __get_scope_to_add_routine($s) {
 $s = $s|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $class_state = 0, $context = 0, $running = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $context = 0;
 $running = 0;
 $class_state = 0;
 $1 = $0;
 $2 = ($1|0)!=(0|0);
 if (!($2)) {
  ___assert_fail((4803|0),(4322|0),9522,(8066|0));
  // unreachable;
 }
 $3 = $0;
 $4 = ((($3)) + 71|0);
 $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
 $context = $5;
 $6 = $0;
 $7 = ((($6)) + 75|0);
 $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
 $running = $8;
 $9 = $context;
 $10 = ((($9)) + 158|0);
 $11 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8);
 $class_state = $11;
 $12 = $class_state;
 $13 = $12&65535;
 $14 = ($13|0)!=(0);
 if ($14) {
  $15 = $running;
  $16 = ($15|0)!=(0|0);
  if (!($16)) {
   $27 = $running;
   STACKTOP = sp;return ($27|0);
  }
  $17 = $running;
  $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
  $running = $18;
  $27 = $running;
  STACKTOP = sp;return ($27|0);
 }
 while(1) {
  $19 = $running;
  $20 = ($19|0)!=(0|0);
  if (!($20)) {
   label = 9;
   break;
  }
  $21 = $running;
  $22 = ((($21)) + 4|0);
  $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
  $24 = ($23|0)==(1);
  if ($24) {
   label = 9;
   break;
  }
  $25 = $running;
  $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
  $running = $26;
 }
 if ((label|0) == 9) {
  $27 = $running;
  STACKTOP = sp;return ($27|0);
 }
 return (0)|0;
}
function __core_var($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $ast = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $l;
 $result = 1;
 $ast = 0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 $ast = $3;
 $4 = $ast;
 $5 = ((($4)) + 8|0);
 $6 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
 $ast = $6;
 $7 = $0;
 $8 = ((($7)) + 93|0);
 $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
 $10 = ($9|0)!=(0|0);
 if ($10) {
  $49 = $ast;
  $50 = $1;
  HEAP32[$50>>2] = $49;
  $51 = $result;
  STACKTOP = sp;return ($51|0);
 }
 $11 = $1;
 $12 = ($11|0)!=(0|0);
 if ($12) {
  $13 = $1;
  $14 = HEAP32[$13>>2]|0;
  $15 = ($14|0)!=(0|0);
  if ($15) {
   $16 = $1;
   $17 = HEAP32[$16>>2]|0;
   $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
   $19 = ($18|0)!=(0|0);
   if ($19) {
    $20 = $0;
    $21 = $0;
    $22 = ((($21)) + 67|0);
    $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
    $24 = (__set_current_error($20,57,$23)|0);
    $25 = ($24<<24>>24)!=(0);
    if (!($25)) {
     $49 = $ast;
     $50 = $1;
     HEAP32[$50>>2] = $49;
     $51 = $result;
     STACKTOP = sp;return ($51|0);
    }
    $26 = $0;
    $27 = $1;
    $28 = HEAP32[$27>>2]|0;
    $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
    $30 = ((($29)) + 9|0);
    $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8)|(HEAPU8[$30+2>>0]<<16)|(HEAPU8[$30+3>>0]<<24);
    $32 = $1;
    $33 = HEAP32[$32>>2]|0;
    $34 = HEAPU8[$33>>0]|(HEAPU8[$33+1>>0]<<8)|(HEAPU8[$33+2>>0]<<16)|(HEAPU8[$33+3>>0]<<24);
    $35 = ((($34)) + 13|0);
    $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8);
    $37 = $1;
    $38 = HEAP32[$37>>2]|0;
    $39 = HEAPU8[$38>>0]|(HEAPU8[$38+1>>0]<<8)|(HEAPU8[$38+2>>0]<<16)|(HEAPU8[$38+3>>0]<<24);
    $40 = ((($39)) + 15|0);
    $41 = HEAPU8[$40>>0]|(HEAPU8[$40+1>>0]<<8);
    __set_error_pos($26,$31,$36,$41);
    $49 = $ast;
    $50 = $1;
    HEAP32[$50>>2] = $49;
    $51 = $result;
    STACKTOP = sp;return ($51|0);
   }
  }
 }
 $42 = $0;
 $43 = $0;
 $44 = ((($43)) + 67|0);
 $45 = HEAPU8[$44>>0]|(HEAPU8[$44+1>>0]<<8)|(HEAPU8[$44+2>>0]<<16)|(HEAPU8[$44+3>>0]<<24);
 $46 = (__set_current_error($42,57,$45)|0);
 $47 = ($46<<24>>24)!=(0);
 if (!($47)) {
  $49 = $ast;
  $50 = $1;
  HEAP32[$50>>2] = $49;
  $51 = $result;
  STACKTOP = sp;return ($51|0);
 }
 $48 = $0;
 __set_error_pos($48,0,0,0);
 $49 = $ast;
 $50 = $1;
 HEAP32[$50>>2] = $49;
 $51 = $result;
 STACKTOP = sp;return ($51|0);
}
function _mb_memtest($p,$s) {
 $p = $p|0;
 $s = $s|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $p;
 $1 = $s;
 $result = 0;
 $i = 0;
 $i = 0;
 while(1) {
  $2 = $i;
  $3 = $1;
  $4 = ($2>>>0)<($3>>>0);
  if (!($4)) {
   break;
  }
  $5 = $i;
  $6 = $0;
  $7 = (($6) + ($5)|0);
  $8 = HEAP8[$7>>0]|0;
  $9 = $8&255;
  $10 = $result;
  $11 = (($10) + ($9))|0;
  $result = $11;
  $12 = $i;
  $13 = (($12) + 1)|0;
  $i = $13;
 }
 $14 = $result;
 STACKTOP = sp;return ($14|0);
}
function __find_scope($s,$p) {
 $s = $s|0;
 $p = $p|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $running = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $s;
 $2 = $p;
 $running = 0;
 $3 = $1;
 $4 = ($3|0)!=(0|0);
 if (!($4)) {
  ___assert_fail((4803|0),(4322|0),9474,(8204|0));
  // unreachable;
 }
 $5 = $1;
 $6 = ((($5)) + 75|0);
 $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
 $running = $7;
 while(1) {
  $8 = $running;
  $9 = ($8|0)!=(0|0);
  $10 = $running;
  if (!($9)) {
   label = 10;
   break;
  }
  $11 = $2;
  $12 = ($10|0)==($11|0);
  $13 = $running;
  if ($12) {
   label = 6;
   break;
  }
  $14 = ((($13)) + 12|0);
  $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
  $16 = $2;
  $17 = ($15|0)==($16|0);
  $18 = $running;
  if ($17) {
   label = 8;
   break;
  }
  $21 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
  $running = $21;
 }
 if ((label|0) == 6) {
  $0 = $13;
  $22 = $0;
  STACKTOP = sp;return ($22|0);
 }
 else if ((label|0) == 8) {
  $19 = ((($18)) + 12|0);
  $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8)|(HEAPU8[$19+2>>0]<<16)|(HEAPU8[$19+3>>0]<<24);
  $0 = $20;
  $22 = $0;
  STACKTOP = sp;return ($22|0);
 }
 else if ((label|0) == 10) {
  $0 = $10;
  $22 = $0;
  STACKTOP = sp;return ($22|0);
 }
 return (0)|0;
}
function __reference_scope_by_routine($s,$p,$r) {
 $s = $s|0;
 $p = $p|0;
 $r = $r|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $9 = 0, $__lst = 0, $__opresult = 0, $__tmp = 0, $or$cond = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $p;
 $2 = $r;
 $result = 0;
 $3 = $0;
 $4 = ($3|0)!=(0|0);
 $5 = $1;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if (!($or$cond)) {
  ___assert_fail((8115|0),(4322|0),9348,(8122|0));
  // unreachable;
 }
 $7 = $1;
 $8 = ((($7)) + 4|0);
 $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
 $10 = ($9|0)==(2);
 if ($10) {
  $11 = $1;
  $12 = ((($11)) + 12|0);
  $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
  $1 = $13;
 }
 $14 = (__create_running_context(0)|0);
 $result = $14;
 $15 = $result;
 $16 = ((($15)) + 4|0);
 HEAP8[$16>>0]=2&255;HEAP8[$16+1>>0]=(2>>8)&255;HEAP8[$16+2>>0]=(2>>16)&255;HEAP8[$16+3>>0]=2>>24;
 $17 = $1;
 $18 = $result;
 $19 = ((($18)) + 12|0);
 HEAP8[$19>>0]=$17&255;HEAP8[$19+1>>0]=($17>>8)&255;HEAP8[$19+2>>0]=($17>>16)&255;HEAP8[$19+3>>0]=$17>>24;
 $20 = $2;
 $21 = ($20|0)!=(0|0);
 if (!($21)) {
  $82 = $result;
  STACKTOP = sp;return ($82|0);
 }
 $22 = $2;
 $23 = ((($22)) + 4|0);
 $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
 $25 = ($24|0)!=(0|0);
 if (!($25)) {
  $82 = $result;
  STACKTOP = sp;return ($82|0);
 }
 $26 = (__ht_create(0,127,128,0)|0);
 $27 = $result;
 $28 = ((($27)) + 8|0);
 HEAP8[$28>>0]=$26&255;HEAP8[$28+1>>0]=($26>>8)&255;HEAP8[$28+2>>0]=($26>>16)&255;HEAP8[$28+3>>0]=$26>>24;
 $29 = $2;
 $30 = ((($29)) + 4|0);
 $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8)|(HEAPU8[$30+2>>0]<<16)|(HEAPU8[$30+3>>0]<<24);
 $__lst = $31;
 $__opresult = 0;
 $__tmp = 0;
 $32 = $2;
 $33 = ((($32)) + 4|0);
 $34 = HEAPU8[$33>>0]|(HEAPU8[$33+1>>0]<<8)|(HEAPU8[$33+2>>0]<<16)|(HEAPU8[$33+3>>0]<<24);
 $35 = ($34|0)!=(0|0);
 if (!($35)) {
  ___assert_fail((8150|0),(4322|0),9358,(8122|0));
  // unreachable;
 }
 $36 = $__lst;
 $37 = ((($36)) + 8|0);
 $38 = HEAPU8[$37>>0]|(HEAPU8[$37+1>>0]<<8)|(HEAPU8[$37+2>>0]<<16)|(HEAPU8[$37+3>>0]<<24);
 $__lst = $38;
 while(1) {
  $39 = $__lst;
  $40 = ($39|0)!=(0|0);
  if (!($40)) {
   label = 17;
   break;
  }
  $41 = $__lst;
  $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
  $43 = $__lst;
  $44 = ((($43)) + 12|0);
  $45 = HEAPU8[$44>>0]|(HEAPU8[$44+1>>0]<<8)|(HEAPU8[$44+2>>0]<<16)|(HEAPU8[$44+3>>0]<<24);
  $46 = $result;
  (__duplicate_parameter($42,$45,$46)|0);
  $47 = $__lst;
  $48 = HEAPU8[$47>>0]|(HEAPU8[$47+1>>0]<<8)|(HEAPU8[$47+2>>0]<<16)|(HEAPU8[$47+3>>0]<<24);
  $49 = $__lst;
  $50 = ((($49)) + 12|0);
  $51 = HEAPU8[$50>>0]|(HEAPU8[$50+1>>0]<<8)|(HEAPU8[$50+2>>0]<<16)|(HEAPU8[$50+3>>0]<<24);
  $52 = (__do_nothing_on_object($48,$51)|0);
  $__opresult = $52;
  $53 = $__lst;
  $__tmp = $53;
  $54 = $__lst;
  $55 = ((($54)) + 8|0);
  $56 = HEAPU8[$55>>0]|(HEAPU8[$55+1>>0]<<8)|(HEAPU8[$55+2>>0]<<16)|(HEAPU8[$55+3>>0]<<24);
  $__lst = $56;
  $57 = $__opresult;
  $58 = (-1)==($57|0);
  if (!($58)) {
   continue;
  }
  $59 = $__lst;
  $60 = $__tmp;
  $61 = ((($60)) + 4|0);
  $62 = HEAPU8[$61>>0]|(HEAPU8[$61+1>>0]<<8)|(HEAPU8[$61+2>>0]<<16)|(HEAPU8[$61+3>>0]<<24);
  $63 = ((($62)) + 8|0);
  HEAP8[$63>>0]=$59&255;HEAP8[$63+1>>0]=($59>>8)&255;HEAP8[$63+2>>0]=($59>>16)&255;HEAP8[$63+3>>0]=$59>>24;
  $64 = $__lst;
  $65 = ($64|0)!=(0|0);
  if ($65) {
   $66 = $__tmp;
   $67 = ((($66)) + 4|0);
   $68 = HEAPU8[$67>>0]|(HEAPU8[$67+1>>0]<<8)|(HEAPU8[$67+2>>0]<<16)|(HEAPU8[$67+3>>0]<<24);
   $69 = $__lst;
   $70 = ((($69)) + 4|0);
   HEAP8[$70>>0]=$68&255;HEAP8[$70+1>>0]=($68>>8)&255;HEAP8[$70+2>>0]=($68>>16)&255;HEAP8[$70+3>>0]=$68>>24;
  }
  $71 = $__tmp;
  $72 = ($71|0)!=(0|0);
  if (!($72)) {
   label = 16;
   break;
  }
  $73 = $__tmp;
  _mb_free($73);
  $__tmp = 0;
  $74 = $2;
  $75 = ((($74)) + 4|0);
  $76 = HEAPU8[$75>>0]|(HEAPU8[$75+1>>0]<<8)|(HEAPU8[$75+2>>0]<<16)|(HEAPU8[$75+3>>0]<<24);
  $77 = HEAPU8[$76>>0]|(HEAPU8[$76+1>>0]<<8)|(HEAPU8[$76+2>>0]<<16)|(HEAPU8[$76+3>>0]<<24);
  $78 = ((($77)) + -1|0);
  $79 = $2;
  $80 = ((($79)) + 4|0);
  $81 = HEAPU8[$80>>0]|(HEAPU8[$80+1>>0]<<8)|(HEAPU8[$80+2>>0]<<16)|(HEAPU8[$80+3>>0]<<24);
  HEAP8[$81>>0]=$78&255;HEAP8[$81+1>>0]=($78>>8)&255;HEAP8[$81+2>>0]=($78>>16)&255;HEAP8[$81+3>>0]=$78>>24;
 }
 if ((label|0) == 16) {
  ___assert_fail((4369|0),(4322|0),9358,(8122|0));
  // unreachable;
 }
 else if ((label|0) == 17) {
  $82 = $result;
  STACKTOP = sp;return ($82|0);
 }
 return (0)|0;
}
function __duplicate_parameter($data,$extra,$running) {
 $data = $data|0;
 $extra = $extra|0;
 $running = $running|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $obj = 0, $ref = 0, $var = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $obj = sp;
 $1 = $data;
 $2 = $extra;
 $3 = $running;
 $ref = 0;
 $var = 0;
 HEAP32[$obj>>2] = 0;
 $4 = $3;
 $5 = ($4|0)!=(0|0);
 if (!($5)) {
  ___assert_fail((8175|0),(4322|0),8855,(8183|0));
  // unreachable;
 }
 $6 = $1;
 $7 = ($6|0)==(0|0);
 if ($7) {
  $0 = 0;
  $19 = $0;
  STACKTOP = sp;return ($19|0);
 } else {
  $8 = $1;
  $ref = $8;
  $9 = $ref;
  $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
  $11 = (__create_var($obj,$10,0,1)|0);
  $var = $11;
  $12 = $3;
  $13 = ((($12)) + 8|0);
  $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
  $15 = $var;
  $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
  $17 = HEAP32[$obj>>2]|0;
  (__ht_set_or_insert($14,$16,$17)|0);
  $18 = HEAP32[$obj>>2]|0;
  $0 = $18;
  $19 = $0;
  STACKTOP = sp;return ($19|0);
 }
 return (0)|0;
}
function __core_args($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__hr = 0, $__hr2 = 0;
 var $arg = 0, $arg$byval_copy = 0, $arg1 = 0, $arg1$byval_copy = 0, $ast = 0, $obj = 0, $or$cond = 0, $pushed = 0, $result = 0, $var_args = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $arg1$byval_copy = sp + 48|0;
 $arg$byval_copy = sp + 40|0;
 $arg = sp + 64|0;
 $arg1 = sp + 56|0;
 $1 = $s;
 $2 = $l;
 $result = 0;
 $ast = 0;
 $var_args = 0;
 $pushed = 0;
 $3 = $1;
 $4 = ($3|0)!=(0|0);
 $5 = $2;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),16696,(8235|0));
  // unreachable;
 }
 $7 = $2;
 $8 = HEAP32[$7>>2]|0;
 $ast = $8;
 $9 = $ast;
 $10 = ($9|0)!=(0|0);
 if ($10) {
  $11 = $ast;
  $12 = ((($11)) + 8|0);
  $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
  $ast = $13;
 }
 $14 = $ast;
 $15 = $2;
 HEAP32[$15>>2] = $14;
 $16 = $1;
 $17 = ((($16)) + 84|0);
 $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
 $var_args = $18;
 $19 = $var_args;
 $20 = ($19|0)!=(0|0);
 if ($20) {
  $21 = $var_args;
  $22 = (__ls_popfront($21)|0);
  $obj = $22;
  $23 = $obj;
  $24 = ($23|0)!=(0|0);
  if ($24) {
   $25 = ((($arg)) + 4|0);
   ;HEAP8[$25>>0]=0|0;HEAP8[$25+1>>0]=0|0;HEAP8[$25+2>>0]=0|0;HEAP8[$25+3>>0]=0|0;
   HEAP8[$arg>>0]=0&255;HEAP8[$arg+1>>0]=(0>>8)&255;HEAP8[$arg+2>>0]=(0>>16)&255;HEAP8[$arg+3>>0]=0>>24;
   $26 = $obj;
   (__internal_object_to_public_value($26,$arg)|0);
   $27 = $1;
   $28 = $2;
   ;HEAP32[$arg$byval_copy>>2]=HEAP32[$arg>>2]|0;HEAP32[$arg$byval_copy+4>>2]=HEAP32[$arg+4>>2]|0;
   $29 = (_mb_push_value($27,$28,$arg$byval_copy)|0);
   $__hr = $29;
   $30 = $__hr;
   $31 = ($30|0)!=(0);
   if ($31) {
    $32 = $__hr;
    $0 = $32;
    $117 = $0;
    STACKTOP = sp;return ($117|0);
   }
   $33 = $obj;
   $34 = HEAPU8[$33>>0]|(HEAPU8[$33+1>>0]<<8)|(HEAPU8[$33+2>>0]<<16)|(HEAPU8[$33+3>>0]<<24);
   L14: do {
    switch ($34|0) {
    case 7:  {
     $35 = $obj;
     $36 = ((($35)) + 4|0);
     $37 = HEAPU8[$36>>0]|(HEAPU8[$36+1>>0]<<8)|(HEAPU8[$36+2>>0]<<16)|(HEAPU8[$36+3>>0]<<24);
     $38 = $obj;
     $39 = ((($38)) + 4|0);
     $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8)|(HEAPU8[$39+2>>0]<<16)|(HEAPU8[$39+3>>0]<<24);
     (__unref($37,$40)|0);
     break;
    }
    case 10:  {
     $41 = $obj;
     $42 = ((($41)) + 8|0);
     $43 = HEAP8[$42>>0]|0;
     $44 = $43 & 1;
     $45 = ($44<<24>>24)!=(0);
     if (!($45)) {
      $46 = $obj;
      $47 = ((($46)) + 4|0);
      $48 = HEAPU8[$47>>0]|(HEAPU8[$47+1>>0]<<8)|(HEAPU8[$47+2>>0]<<16)|(HEAPU8[$47+3>>0]<<24);
      $49 = $obj;
      $50 = ((($49)) + 4|0);
      $51 = HEAPU8[$50>>0]|(HEAPU8[$50+1>>0]<<8)|(HEAPU8[$50+2>>0]<<16)|(HEAPU8[$50+3>>0]<<24);
      (__unref($48,$51)|0);
     }
     break;
    }
    case 11:  {
     $52 = $obj;
     $53 = ((($52)) + 4|0);
     $54 = HEAPU8[$53>>0]|(HEAPU8[$53+1>>0]<<8)|(HEAPU8[$53+2>>0]<<16)|(HEAPU8[$53+3>>0]<<24);
     $55 = $obj;
     $56 = ((($55)) + 4|0);
     $57 = HEAPU8[$56>>0]|(HEAPU8[$56+1>>0]<<8)|(HEAPU8[$56+2>>0]<<16)|(HEAPU8[$56+3>>0]<<24);
     (__unref($54,$57)|0);
     break;
    }
    case 13:  {
     $58 = $obj;
     $59 = ((($58)) + 4|0);
     $60 = HEAPU8[$59>>0]|(HEAPU8[$59+1>>0]<<8)|(HEAPU8[$59+2>>0]<<16)|(HEAPU8[$59+3>>0]<<24);
     $61 = $obj;
     $62 = ((($61)) + 4|0);
     $63 = HEAPU8[$62>>0]|(HEAPU8[$62+1>>0]<<8)|(HEAPU8[$62+2>>0]<<16)|(HEAPU8[$62+3>>0]<<24);
     (__unref($60,$63)|0);
     break;
    }
    case 16:  {
     $64 = $obj;
     $65 = ((($64)) + 8|0);
     $66 = HEAP8[$65>>0]|0;
     $67 = $66 & 1;
     $68 = ($67<<24>>24)!=(0);
     if (!($68)) {
      $69 = $obj;
      $70 = ((($69)) + 4|0);
      $71 = HEAPU8[$70>>0]|(HEAPU8[$70+1>>0]<<8)|(HEAPU8[$70+2>>0]<<16)|(HEAPU8[$70+3>>0]<<24);
      $72 = $obj;
      $73 = ((($72)) + 4|0);
      $74 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
      (__unref($71,$74)|0);
     }
     break;
    }
    case 17:  {
     $75 = $obj;
     $76 = ((($75)) + 8|0);
     $77 = HEAP8[$76>>0]|0;
     $78 = $77 & 1;
     $79 = ($78<<24>>24)!=(0);
     if (!($79)) {
      $80 = $obj;
      $81 = ((($80)) + 4|0);
      $82 = HEAPU8[$81>>0]|(HEAPU8[$81+1>>0]<<8)|(HEAPU8[$81+2>>0]<<16)|(HEAPU8[$81+3>>0]<<24);
      $83 = ((($82)) + 58|0);
      $84 = HEAPU8[$83>>0]|(HEAPU8[$83+1>>0]<<8)|(HEAPU8[$83+2>>0]<<16)|(HEAPU8[$83+3>>0]<<24);
      $85 = ($84|0)==(2);
      if ($85) {
       $86 = $obj;
       $87 = ((($86)) + 4|0);
       $88 = HEAPU8[$87>>0]|(HEAPU8[$87+1>>0]<<8)|(HEAPU8[$87+2>>0]<<16)|(HEAPU8[$87+3>>0]<<24);
       $89 = $obj;
       $90 = ((($89)) + 4|0);
       $91 = HEAPU8[$90>>0]|(HEAPU8[$90+1>>0]<<8)|(HEAPU8[$90+2>>0]<<16)|(HEAPU8[$90+3>>0]<<24);
       (__unref($88,$91)|0);
       break L14;
      }
     }
     $92 = $obj;
     $93 = ((($92)) + 8|0);
     $94 = HEAP8[$93>>0]|0;
     $95 = $94 & 1;
     $96 = ($95<<24>>24)!=(0);
     if (!($96)) {
      $97 = $obj;
      $98 = ((($97)) + 4|0);
      $99 = HEAPU8[$98>>0]|(HEAPU8[$98+1>>0]<<8)|(HEAPU8[$98+2>>0]<<16)|(HEAPU8[$98+3>>0]<<24);
      $100 = ((($99)) + 58|0);
      $101 = HEAPU8[$100>>0]|(HEAPU8[$100+1>>0]<<8)|(HEAPU8[$100+2>>0]<<16)|(HEAPU8[$100+3>>0]<<24);
      $102 = ($101|0)!=(2);
      if ($102) {
       $103 = $obj;
       $104 = ((($103)) + 4|0);
       $105 = HEAPU8[$104>>0]|(HEAPU8[$104+1>>0]<<8)|(HEAPU8[$104+2>>0]<<16)|(HEAPU8[$104+3>>0]<<24);
       __destroy_routine(0,$105);
      }
     }
     break;
    }
    default: {
    }
    }
   } while(0);
   $pushed = 1;
   $106 = $obj;
   (__destroy_object_capsule_only($106,0)|0);
  }
 }
 $107 = $pushed;
 $108 = ($107<<24>>24)!=(0);
 if (!($108)) {
  $109 = ((($arg1)) + 4|0);
  ;HEAP8[$109>>0]=0|0;HEAP8[$109+1>>0]=0|0;HEAP8[$109+2>>0]=0|0;HEAP8[$109+3>>0]=0|0;
  HEAP8[$arg1>>0]=0&255;HEAP8[$arg1+1>>0]=(0>>8)&255;HEAP8[$arg1+2>>0]=(0>>16)&255;HEAP8[$arg1+3>>0]=0>>24;
  HEAP8[$arg1>>0]=1&255;HEAP8[$arg1+1>>0]=(1>>8)&255;HEAP8[$arg1+2>>0]=(1>>16)&255;HEAP8[$arg1+3>>0]=1>>24;
  $110 = $1;
  $111 = $2;
  ;HEAP32[$arg1$byval_copy>>2]=HEAP32[$arg1>>2]|0;HEAP32[$arg1$byval_copy+4>>2]=HEAP32[$arg1+4>>2]|0;
  $112 = (_mb_push_value($110,$111,$arg1$byval_copy)|0);
  $__hr2 = $112;
  $113 = $__hr2;
  $114 = ($113|0)!=(0);
  if ($114) {
   $115 = $__hr2;
   $0 = $115;
   $117 = $0;
   STACKTOP = sp;return ($117|0);
  }
 }
 $116 = $result;
 $0 = $116;
 $117 = $0;
 STACKTOP = sp;return ($117|0);
}
function __ls_popfront($list) {
 $list = $list|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $result = 0, $tmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $list;
 $result = 0;
 $tmp = 0;
 $1 = $0;
 $2 = ($1|0)!=(0|0);
 if (!($2)) {
  ___assert_fail((8246|0),(4322|0),2475,(8251|0));
  // unreachable;
 }
 $3 = $0;
 $4 = (__ls_front($3)|0);
 $tmp = $4;
 $5 = $tmp;
 $6 = ($5|0)!=(0|0);
 if (!($6)) {
  $40 = $result;
  STACKTOP = sp;return ($40|0);
 }
 $7 = $tmp;
 $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
 $result = $8;
 $9 = $tmp;
 $10 = ((($9)) + 8|0);
 $11 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
 $12 = $0;
 $13 = ((($12)) + 8|0);
 HEAP8[$13>>0]=$11&255;HEAP8[$13+1>>0]=($11>>8)&255;HEAP8[$13+2>>0]=($11>>16)&255;HEAP8[$13+3>>0]=$11>>24;
 $14 = $tmp;
 $15 = ((($14)) + 8|0);
 $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
 $17 = ($16|0)!=(0|0);
 if ($17) {
  $18 = $0;
  $19 = $tmp;
  $20 = ((($19)) + 8|0);
  $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
  $22 = ((($21)) + 4|0);
  HEAP8[$22>>0]=$18&255;HEAP8[$22+1>>0]=($18>>8)&255;HEAP8[$22+2>>0]=($18>>16)&255;HEAP8[$22+3>>0]=$18>>24;
 }
 $23 = $0;
 $24 = ((($23)) + 8|0);
 $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
 $26 = ($25|0)!=(0|0);
 if (!($26)) {
  $27 = $0;
  $28 = ((($27)) + 4|0);
  HEAP8[$28>>0]=0&255;HEAP8[$28+1>>0]=(0>>8)&255;HEAP8[$28+2>>0]=(0>>16)&255;HEAP8[$28+3>>0]=0>>24;
 }
 $29 = $tmp;
 $30 = ((($29)) + 8|0);
 HEAP8[$30>>0]=0&255;HEAP8[$30+1>>0]=(0>>8)&255;HEAP8[$30+2>>0]=(0>>16)&255;HEAP8[$30+3>>0]=0>>24;
 $31 = $tmp;
 $32 = ((($31)) + 4|0);
 HEAP8[$32>>0]=0&255;HEAP8[$32+1>>0]=(0>>8)&255;HEAP8[$32+2>>0]=(0>>16)&255;HEAP8[$32+3>>0]=0>>24;
 $33 = $tmp;
 $34 = ($33|0)!=(0|0);
 if (!($34)) {
  ___assert_fail((4369|0),(4322|0),2486,(8251|0));
  // unreachable;
 }
 $35 = $tmp;
 _mb_free($35);
 $tmp = 0;
 $36 = $0;
 $37 = HEAPU8[$36>>0]|(HEAPU8[$36+1>>0]<<8)|(HEAPU8[$36+2>>0]<<16)|(HEAPU8[$36+3>>0]<<24);
 $38 = ((($37)) + -1|0);
 $39 = $0;
 HEAP8[$39>>0]=$38&255;HEAP8[$39+1>>0]=($38>>8)&255;HEAP8[$39+2>>0]=($38>>16)&255;HEAP8[$39+3>>0]=$38>>24;
 $40 = $result;
 STACKTOP = sp;return ($40|0);
}
function __ls_front($node) {
 $node = $node|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $node;
 $1 = $0;
 $result = $1;
 $2 = $result;
 $3 = ((($2)) + 8|0);
 $4 = HEAPU8[$3>>0]|(HEAPU8[$3+1>>0]<<8)|(HEAPU8[$3+2>>0]<<16)|(HEAPU8[$3+3>>0]<<24);
 $result = $4;
 $5 = $result;
 STACKTOP = sp;return ($5|0);
}
function __core_endclass($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $ast = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $l;
 $result = 0;
 $2 = $1;
 $3 = HEAP32[$2>>2]|0;
 $ast = $3;
 $4 = $ast;
 $5 = ($4|0)!=(0|0);
 if ($5) {
  $6 = $ast;
  $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
  $8 = ($7|0)!=(0|0);
  if ($8) {
   $9 = $0;
   $10 = (__set_current_error($9,50,8372)|0);
   $11 = ($10<<24>>24)!=(0);
   if (!($11)) {
    $29 = $result;
    STACKTOP = sp;return ($29|0);
   }
   $12 = $0;
   $13 = $ast;
   $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
   $15 = ((($14)) + 9|0);
   $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
   $17 = $ast;
   $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
   $19 = ((($18)) + 13|0);
   $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8);
   $21 = $ast;
   $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
   $23 = ((($22)) + 15|0);
   $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8);
   __set_error_pos($12,$16,$20,$24);
   $result = 3;
   $29 = $result;
   STACKTOP = sp;return ($29|0);
  }
 }
 $25 = $0;
 $26 = (__set_current_error($25,50,8372)|0);
 $27 = ($26<<24>>24)!=(0);
 if (!($27)) {
  $29 = $result;
  STACKTOP = sp;return ($29|0);
 }
 $28 = $0;
 __set_error_pos($28,0,0,0);
 $result = 3;
 $29 = $result;
 STACKTOP = sp;return ($29|0);
}
function __search_class_hash_and_compare_functions($s,$instance) {
 $s = $s|0;
 $instance = $instance|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $s;
 $2 = $instance;
 $3 = $1;
 $4 = ($3|0)!=(0|0);
 $5 = $2;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if (!($or$cond)) {
  ___assert_fail((8276|0),(4322|0),8556,(8290|0));
  // unreachable;
 }
 $7 = $1;
 $8 = $2;
 $9 = $2;
 $10 = ((($9)) + 33|0);
 (__search_class_meta_function($7,$8,8331,$10)|0);
 $11 = $1;
 $12 = $2;
 $13 = $2;
 $14 = ((($13)) + 37|0);
 (__search_class_meta_function($11,$12,8336,$14)|0);
 $15 = $2;
 $16 = ((($15)) + 33|0);
 $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
 $18 = ($17|0)!=(0|0);
 if (!($18)) {
  $19 = $2;
  $20 = ((($19)) + 37|0);
  $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
  $22 = ($21|0)!=(0|0);
  if (!($22)) {
   $0 = 0;
   $35 = $0;
   STACKTOP = sp;return ($35|0);
  }
 }
 $23 = $2;
 $24 = ((($23)) + 33|0);
 $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
 $26 = ($25|0)!=(0|0);
 if ($26) {
  $27 = $2;
  $28 = ((($27)) + 37|0);
  $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
  $30 = ($29|0)!=(0|0);
  if ($30) {
   $0 = 0;
   $35 = $0;
   STACKTOP = sp;return ($35|0);
  }
 }
 $31 = $2;
 $32 = ((($31)) + 33|0);
 HEAP8[$32>>0]=0&255;HEAP8[$32+1>>0]=(0>>8)&255;HEAP8[$32+2>>0]=(0>>16)&255;HEAP8[$32+3>>0]=0>>24;
 $33 = $2;
 $34 = ((($33)) + 37|0);
 HEAP8[$34>>0]=0&255;HEAP8[$34+1>>0]=(0>>8)&255;HEAP8[$34+2>>0]=(0>>16)&255;HEAP8[$34+3>>0]=0>>24;
 $0 = 2;
 $35 = $0;
 STACKTOP = sp;return ($35|0);
}
function __search_class_meta_function($s,$instance,$n,$f) {
 $s = $s|0;
 $instance = $instance|0;
 $n = $n|0;
 $f = $f|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $node = 0, $obj = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $s;
 $2 = $instance;
 $3 = $n;
 $4 = $f;
 $node = 0;
 $5 = $1;
 $6 = ($5|0)!=(0|0);
 if (!($6)) {
  ___assert_fail((4803|0),(4322|0),8538,(8344|0));
  // unreachable;
 }
 $7 = $1;
 $8 = $2;
 $9 = $3;
 $10 = (__search_identifier_in_class($7,$8,$9,0,0)|0);
 $node = $10;
 $11 = $4;
 $12 = ($11|0)!=(0|0);
 if ($12) {
  $13 = $4;
  HEAP32[$13>>2] = 0;
 }
 $14 = $node;
 $15 = ($14|0)!=(0|0);
 if ($15) {
  $16 = $node;
  $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
  $obj = $17;
  $18 = $obj;
  $19 = ($18|0)!=(0|0);
  $20 = $obj;
  $21 = ($20|0)!=(0|0);
  $or$cond = $19 & $21;
  if ($or$cond) {
   $22 = $obj;
   $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
   $24 = ($23|0)==(17);
   if ($24) {
    $25 = $4;
    $26 = ($25|0)!=(0|0);
    if ($26) {
     $27 = $obj;
     $28 = ((($27)) + 4|0);
     $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
     $30 = $4;
     HEAP32[$30>>2] = $29;
    }
    $0 = 1;
    $31 = $0;
    STACKTOP = sp;return ($31|0);
   }
  }
 }
 $0 = 0;
 $31 = $0;
 STACKTOP = sp;return ($31|0);
}
function __core_import($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $__hr = 0, $__hr1 = 0, $or$cond = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $s;
 $2 = $l;
 $result = 0;
 $3 = $1;
 $4 = ($3|0)!=(0|0);
 $5 = $2;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),17189,(8652|0));
  // unreachable;
 }
 $7 = $1;
 $8 = $2;
 $9 = (_mb_attempt_func_begin($7,$8)|0);
 $__hr = $9;
 $10 = $__hr;
 $11 = ($10|0)!=(0);
 if ($11) {
  $12 = $__hr;
  $0 = $12;
  $20 = $0;
  STACKTOP = sp;return ($20|0);
 }
 $13 = $1;
 $14 = $2;
 $15 = (_mb_attempt_func_end($13,$14)|0);
 $__hr1 = $15;
 $16 = $__hr1;
 $17 = ($16|0)!=(0);
 if ($17) {
  $18 = $__hr1;
  $0 = $18;
  $20 = $0;
  STACKTOP = sp;return ($20|0);
 } else {
  $19 = $result;
  $0 = $19;
  $20 = $0;
  STACKTOP = sp;return ($20|0);
 }
 return (0)|0;
}
function __is_using_at_char($c) {
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $c;
 $1 = $0;
 $2 = $1 << 24 >> 24;
 $3 = ($2|0)==(64);
 $4 = $3&1;
 $5 = $4&255;
 STACKTOP = sp;return ($5|0);
}
function __prev_import($s,$lf,$pos,$row,$col) {
 $s = $s|0;
 $lf = $lf|0;
 $pos = $pos|0;
 $row = $row|0;
 $col = $col|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $8 = 0, $9 = 0, $context = 0, $info = 0, $obj = 0, $result = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $lf;
 $2 = $pos;
 $3 = $row;
 $4 = $col;
 $result = 0;
 $context = 0;
 $info = 0;
 $obj = 0;
 $5 = $0;
 $6 = ($5|0)!=(0|0);
 if (!($6)) {
  ___assert_fail((4803|0),(4322|0),6023,(8639|0));
  // unreachable;
 }
 $7 = $0;
 $8 = ((($7)) + 71|0);
 $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
 $context = $9;
 $10 = $context;
 $11 = ($10|0)!=(0|0);
 if ($11) {
  $12 = $2;
  $13 = ($12|0)!=(0|0);
  if ($13) {
   $14 = $context;
   $15 = ((($14)) + 164|0);
   $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
   $17 = $2;
   HEAP32[$17>>2] = $16;
  }
  $18 = $3;
  $19 = ($18|0)!=(0|0);
  if ($19) {
   $20 = $context;
   $21 = ((($20)) + 168|0);
   $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8);
   $23 = $3;
   HEAP16[$23>>1] = $22;
  }
  $24 = $4;
  $25 = ($24|0)!=(0|0);
  if ($25) {
   $26 = $context;
   $27 = ((($26)) + 170|0);
   $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8);
   $29 = $4;
   HEAP16[$29>>1] = $28;
  }
  $30 = $context;
  $31 = ((($30)) + 164|0);
  HEAP8[$31>>0]=0&255;HEAP8[$31+1>>0]=(0>>8)&255;HEAP8[$31+2>>0]=(0>>16)&255;HEAP8[$31+3>>0]=0>>24;
  $32 = $context;
  $33 = ((($32)) + 168|0);
  HEAP8[$33>>0]=1&255;HEAP8[$33+1>>0]=1>>8;
  $34 = $context;
  $35 = ((($34)) + 170|0);
  HEAP8[$35>>0]=0&255;HEAP8[$35+1>>0]=0>>8;
 }
 $36 = $0;
 $37 = ((($36)) + 67|0);
 $38 = HEAPU8[$37>>0]|(HEAPU8[$37+1>>0]<<8)|(HEAPU8[$37+2>>0]<<16)|(HEAPU8[$37+3>>0]<<24);
 $result = $38;
 $39 = $1;
 $40 = $0;
 $41 = ((($40)) + 67|0);
 HEAP8[$41>>0]=$39&255;HEAP8[$41+1>>0]=($39>>8)&255;HEAP8[$41+2>>0]=($39>>16)&255;HEAP8[$41+3>>0]=$39>>24;
 $42 = (__create_object()|0);
 $obj = $42;
 $43 = $obj;
 HEAP8[$43>>0]=22&255;HEAP8[$43+1>>0]=(22>>8)&255;HEAP8[$43+2>>0]=(22>>16)&255;HEAP8[$43+3>>0]=22>>24;
 $44 = $obj;
 $45 = ((($44)) + 8|0);
 $46 = HEAP8[$45>>0]|0;
 $47 = $46 & -2;
 HEAP8[$45>>0] = $47;
 $48 = $0;
 $49 = ((($48)) + 17|0);
 $50 = HEAPU8[$49>>0]|(HEAPU8[$49+1>>0]<<8)|(HEAPU8[$49+2>>0]<<16)|(HEAPU8[$49+3>>0]<<24);
 $51 = $obj;
 (__ls_pushback($50,$51)|0);
 $52 = (_mb_malloc(4)|0);
 $info = $52;
 $53 = $1;
 $54 = ($53|0)!=(0|0);
 if ($54) {
  $55 = $1;
  $56 = $1;
  $57 = (_strlen($56)|0);
  $58 = (($57) + 1)|0;
  $59 = (_mb_strdup($55,$58)|0);
  $61 = $59;
 } else {
  $61 = 0;
 }
 $60 = $info;
 HEAP8[$60>>0]=$61&255;HEAP8[$60+1>>0]=($61>>8)&255;HEAP8[$60+2>>0]=($61>>16)&255;HEAP8[$60+3>>0]=$61>>24;
 $62 = (__create_object()|0);
 $obj = $62;
 $63 = $obj;
 HEAP8[$63>>0]=20&255;HEAP8[$63+1>>0]=(20>>8)&255;HEAP8[$63+2>>0]=(20>>16)&255;HEAP8[$63+3>>0]=20>>24;
 $64 = $obj;
 $65 = ((($64)) + 8|0);
 $66 = HEAP8[$65>>0]|0;
 $67 = $66 & -2;
 HEAP8[$65>>0] = $67;
 $68 = $info;
 $69 = $obj;
 $70 = ((($69)) + 4|0);
 HEAP8[$70>>0]=$68&255;HEAP8[$70+1>>0]=($68>>8)&255;HEAP8[$70+2>>0]=($68>>16)&255;HEAP8[$70+3>>0]=$68>>24;
 $71 = $0;
 $72 = ((($71)) + 17|0);
 $73 = HEAPU8[$72>>0]|(HEAPU8[$72+1>>0]<<8)|(HEAPU8[$72+2>>0]<<16)|(HEAPU8[$72+3>>0]<<24);
 $74 = $obj;
 (__ls_pushback($73,$74)|0);
 $75 = $result;
 STACKTOP = sp;return ($75|0);
}
function __post_import($s,$lf,$pos,$row,$col) {
 $s = $s|0;
 $lf = $lf|0;
 $pos = $pos|0;
 $row = $row|0;
 $col = $col|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $8 = 0, $9 = 0, $context = 0, $info = 0, $obj = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $lf;
 $2 = $pos;
 $3 = $row;
 $4 = $col;
 $result = 0;
 $context = 0;
 $info = 0;
 $obj = 0;
 $5 = $0;
 $6 = ($5|0)!=(0|0);
 if (!($6)) {
  ___assert_fail((4803|0),(4322|0),6071,(8626|0));
  // unreachable;
 }
 $7 = $0;
 $8 = ((($7)) + 71|0);
 $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
 $context = $9;
 $10 = $context;
 $11 = ($10|0)!=(0|0);
 if ($11) {
  $12 = $2;
  $13 = ($12|0)!=(0|0);
  if ($13) {
   $14 = $2;
   $15 = HEAP32[$14>>2]|0;
   $16 = $context;
   $17 = ((($16)) + 164|0);
   HEAP8[$17>>0]=$15&255;HEAP8[$17+1>>0]=($15>>8)&255;HEAP8[$17+2>>0]=($15>>16)&255;HEAP8[$17+3>>0]=$15>>24;
  }
  $18 = $3;
  $19 = ($18|0)!=(0|0);
  if ($19) {
   $20 = $3;
   $21 = HEAP16[$20>>1]|0;
   $22 = $context;
   $23 = ((($22)) + 168|0);
   HEAP8[$23>>0]=$21&255;HEAP8[$23+1>>0]=$21>>8;
  }
  $24 = $4;
  $25 = ($24|0)!=(0|0);
  if ($25) {
   $26 = $4;
   $27 = HEAP16[$26>>1]|0;
   $28 = $context;
   $29 = ((($28)) + 170|0);
   HEAP8[$29>>0]=$27&255;HEAP8[$29+1>>0]=$27>>8;
  }
 }
 $30 = $1;
 $31 = $0;
 $32 = ((($31)) + 67|0);
 HEAP8[$32>>0]=$30&255;HEAP8[$32+1>>0]=($30>>8)&255;HEAP8[$32+2>>0]=($30>>16)&255;HEAP8[$32+3>>0]=$30>>24;
 $33 = $0;
 $34 = ((($33)) + 67|0);
 $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
 $result = $35;
 $36 = (_mb_malloc(4)|0);
 $info = $36;
 $37 = $1;
 $38 = ($37|0)!=(0|0);
 if ($38) {
  $39 = $1;
  $40 = $1;
  $41 = (_strlen($40)|0);
  $42 = (($41) + 1)|0;
  $43 = (_mb_strdup($39,$42)|0);
  $45 = $43;
 } else {
  $45 = 0;
 }
 $44 = $info;
 HEAP8[$44>>0]=$45&255;HEAP8[$44+1>>0]=($45>>8)&255;HEAP8[$44+2>>0]=($45>>16)&255;HEAP8[$44+3>>0]=$45>>24;
 $46 = (__create_object()|0);
 $obj = $46;
 $47 = $obj;
 HEAP8[$47>>0]=21&255;HEAP8[$47+1>>0]=(21>>8)&255;HEAP8[$47+2>>0]=(21>>16)&255;HEAP8[$47+3>>0]=21>>24;
 $48 = $obj;
 $49 = ((($48)) + 8|0);
 $50 = HEAP8[$49>>0]|0;
 $51 = $50 & -2;
 HEAP8[$49>>0] = $51;
 $52 = $info;
 $53 = $obj;
 $54 = ((($53)) + 4|0);
 HEAP8[$54>>0]=$52&255;HEAP8[$54+1>>0]=($52>>8)&255;HEAP8[$54+2>>0]=($52>>16)&255;HEAP8[$54+3>>0]=$52>>24;
 $55 = $0;
 $56 = ((($55)) + 17|0);
 $57 = HEAPU8[$56>>0]|(HEAPU8[$56+1>>0]<<8)|(HEAPU8[$56+2>>0]<<16)|(HEAPU8[$56+3>>0]<<24);
 $58 = $obj;
 (__ls_pushback($57,$58)|0);
 $59 = (__create_object()|0);
 $obj = $59;
 $60 = $obj;
 HEAP8[$60>>0]=22&255;HEAP8[$60+1>>0]=(22>>8)&255;HEAP8[$60+2>>0]=(22>>16)&255;HEAP8[$60+3>>0]=22>>24;
 $61 = $obj;
 $62 = ((($61)) + 8|0);
 $63 = HEAP8[$62>>0]|0;
 $64 = $63 & -2;
 HEAP8[$62>>0] = $64;
 $65 = $0;
 $66 = ((($65)) + 17|0);
 $67 = HEAPU8[$66>>0]|(HEAPU8[$66+1>>0]<<8)|(HEAPU8[$66+2>>0]<<16)|(HEAPU8[$66+3>>0]<<24);
 $68 = $obj;
 (__ls_pushback($67,$68)|0);
 $69 = $result;
 STACKTOP = sp;return ($69|0);
}
function __core_dim($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0;
 var $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0;
 var $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0;
 var $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0;
 var $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0;
 var $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0;
 var $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, $arr = 0, $ast = 0, $dummy = 0, $len = 0, $or$cond = 0, $result = 0, $val = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $val = sp + 76|0;
 $dummy = sp + 24|0;
 $0 = $s;
 $1 = $l;
 $result = 0;
 $ast = 0;
 $arr = 0;
 $len = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),15810,(8566|0));
  // unreachable;
 }
 $6 = $1;
 $7 = HEAP32[$6>>2]|0;
 $ast = $7;
 $8 = $ast;
 $9 = ((($8)) + 8|0);
 $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
 $11 = ($10|0)!=(0|0);
 if ($11) {
  $12 = $ast;
  $13 = ((($12)) + 8|0);
  $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
  $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
  $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
  $17 = ($16|0)!=(10);
  if (!($17)) {
   $61 = $ast;
   $62 = ((($61)) + 8|0);
   $63 = HEAPU8[$62>>0]|(HEAPU8[$62+1>>0]<<8)|(HEAPU8[$62+2>>0]<<16)|(HEAPU8[$62+3>>0]<<24);
   $ast = $63;
   $64 = $ast;
   $65 = HEAPU8[$64>>0]|(HEAPU8[$64+1>>0]<<8)|(HEAPU8[$64+2>>0]<<16)|(HEAPU8[$64+3>>0]<<24);
   $arr = $65;
   dest=$dummy; stop=dest+50|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
   $66 = $arr;
   $67 = ((($66)) + 4|0);
   $68 = HEAPU8[$67>>0]|(HEAPU8[$67+1>>0]<<8)|(HEAPU8[$67+2>>0]<<16)|(HEAPU8[$67+3>>0]<<24);
   $69 = ((($68)) + 21|0);
   $70 = HEAPU8[$69>>0]|(HEAPU8[$69+1>>0]<<8)|(HEAPU8[$69+2>>0]<<16)|(HEAPU8[$69+3>>0]<<24);
   $71 = ((($dummy)) + 21|0);
   HEAP8[$71>>0]=$70&255;HEAP8[$71+1>>0]=($70>>8)&255;HEAP8[$71+2>>0]=($70>>16)&255;HEAP8[$71+3>>0]=$70>>24;
   $72 = $arr;
   $73 = ((($72)) + 4|0);
   $74 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
   $75 = ((($74)) + 17|0);
   $76 = HEAPU8[$75>>0]|(HEAPU8[$75+1>>0]<<8)|(HEAPU8[$75+2>>0]<<16)|(HEAPU8[$75+3>>0]<<24);
   $77 = ((($dummy)) + 17|0);
   HEAP8[$77>>0]=$76&255;HEAP8[$77+1>>0]=($76>>8)&255;HEAP8[$77+2>>0]=($76>>16)&255;HEAP8[$77+3>>0]=$76>>24;
   $78 = $ast;
   $79 = ((($78)) + 8|0);
   $80 = HEAPU8[$79>>0]|(HEAPU8[$79+1>>0]<<8)|(HEAPU8[$79+2>>0]<<16)|(HEAPU8[$79+3>>0]<<24);
   $81 = ($80|0)!=(0|0);
   if ($81) {
    $82 = $ast;
    $83 = ((($82)) + 8|0);
    $84 = HEAPU8[$83>>0]|(HEAPU8[$83+1>>0]<<8)|(HEAPU8[$83+2>>0]<<16)|(HEAPU8[$83+3>>0]<<24);
    $85 = HEAPU8[$84>>0]|(HEAPU8[$84+1>>0]<<8)|(HEAPU8[$84+2>>0]<<16)|(HEAPU8[$84+3>>0]<<24);
    $86 = HEAPU8[$85>>0]|(HEAPU8[$85+1>>0]<<8)|(HEAPU8[$85+2>>0]<<16)|(HEAPU8[$85+3>>0]<<24);
    $87 = ($86|0)!=(8);
    if (!($87)) {
     $88 = $ast;
     $89 = ((($88)) + 8|0);
     $90 = HEAPU8[$89>>0]|(HEAPU8[$89+1>>0]<<8)|(HEAPU8[$89+2>>0]<<16)|(HEAPU8[$89+3>>0]<<24);
     $91 = HEAPU8[$90>>0]|(HEAPU8[$90+1>>0]<<8)|(HEAPU8[$90+2>>0]<<16)|(HEAPU8[$90+3>>0]<<24);
     $92 = ((($91)) + 4|0);
     $93 = HEAPU8[$92>>0]|(HEAPU8[$92+1>>0]<<8)|(HEAPU8[$92+2>>0]<<16)|(HEAPU8[$92+3>>0]<<24);
     $94 = ((($93)) + 4|0);
     $95 = HEAPU8[$94>>0]|(HEAPU8[$94+1>>0]<<8)|(HEAPU8[$94+2>>0]<<16)|(HEAPU8[$94+3>>0]<<24);
     $96 = ($95|0)!=(7|0);
     if (!($96)) {
      $140 = $ast;
      $141 = ((($140)) + 8|0);
      $142 = HEAPU8[$141>>0]|(HEAPU8[$141+1>>0]<<8)|(HEAPU8[$141+2>>0]<<16)|(HEAPU8[$141+3>>0]<<24);
      $ast = $142;
      $143 = $ast;
      $144 = ((($143)) + 8|0);
      $145 = HEAPU8[$144>>0]|(HEAPU8[$144+1>>0]<<8)|(HEAPU8[$144+2>>0]<<16)|(HEAPU8[$144+3>>0]<<24);
      $146 = ($145|0)!=(0|0);
      $147 = $ast;
      if (!($146)) {
       $148 = ($147|0)!=(0|0);
       if ($148) {
        $149 = $ast;
        $150 = ((($149)) + 8|0);
        $151 = HEAPU8[$150>>0]|(HEAPU8[$150+1>>0]<<8)|(HEAPU8[$150+2>>0]<<16)|(HEAPU8[$150+3>>0]<<24);
        $152 = ($151|0)!=(0|0);
        if ($152) {
         $153 = $ast;
         $154 = ((($153)) + 8|0);
         $155 = HEAPU8[$154>>0]|(HEAPU8[$154+1>>0]<<8)|(HEAPU8[$154+2>>0]<<16)|(HEAPU8[$154+3>>0]<<24);
         $156 = HEAPU8[$155>>0]|(HEAPU8[$155+1>>0]<<8)|(HEAPU8[$155+2>>0]<<16)|(HEAPU8[$155+3>>0]<<24);
         $157 = ($156|0)!=(0|0);
         if ($157) {
          $158 = $0;
          $159 = $0;
          $160 = ((($159)) + 67|0);
          $161 = HEAPU8[$160>>0]|(HEAPU8[$160+1>>0]<<8)|(HEAPU8[$160+2>>0]<<16)|(HEAPU8[$160+3>>0]<<24);
          $162 = (__set_current_error($158,24,$161)|0);
          $163 = ($162<<24>>24)!=(0);
          if (!($163)) {
           $399 = $ast;
           $400 = $1;
           HEAP32[$400>>2] = $399;
           $401 = $result;
           STACKTOP = sp;return ($401|0);
          }
          $164 = $0;
          $165 = $ast;
          $166 = ((($165)) + 8|0);
          $167 = HEAPU8[$166>>0]|(HEAPU8[$166+1>>0]<<8)|(HEAPU8[$166+2>>0]<<16)|(HEAPU8[$166+3>>0]<<24);
          $168 = HEAPU8[$167>>0]|(HEAPU8[$167+1>>0]<<8)|(HEAPU8[$167+2>>0]<<16)|(HEAPU8[$167+3>>0]<<24);
          $169 = ((($168)) + 9|0);
          $170 = HEAPU8[$169>>0]|(HEAPU8[$169+1>>0]<<8)|(HEAPU8[$169+2>>0]<<16)|(HEAPU8[$169+3>>0]<<24);
          $171 = $ast;
          $172 = ((($171)) + 8|0);
          $173 = HEAPU8[$172>>0]|(HEAPU8[$172+1>>0]<<8)|(HEAPU8[$172+2>>0]<<16)|(HEAPU8[$172+3>>0]<<24);
          $174 = HEAPU8[$173>>0]|(HEAPU8[$173+1>>0]<<8)|(HEAPU8[$173+2>>0]<<16)|(HEAPU8[$173+3>>0]<<24);
          $175 = ((($174)) + 13|0);
          $176 = HEAPU8[$175>>0]|(HEAPU8[$175+1>>0]<<8);
          $177 = $ast;
          $178 = ((($177)) + 8|0);
          $179 = HEAPU8[$178>>0]|(HEAPU8[$178+1>>0]<<8)|(HEAPU8[$178+2>>0]<<16)|(HEAPU8[$178+3>>0]<<24);
          $180 = HEAPU8[$179>>0]|(HEAPU8[$179+1>>0]<<8)|(HEAPU8[$179+2>>0]<<16)|(HEAPU8[$179+3>>0]<<24);
          $181 = ((($180)) + 15|0);
          $182 = HEAPU8[$181>>0]|(HEAPU8[$181+1>>0]<<8);
          __set_error_pos($164,$170,$176,$182);
          $result = 3;
          $399 = $ast;
          $400 = $1;
          HEAP32[$400>>2] = $399;
          $401 = $result;
          STACKTOP = sp;return ($401|0);
         }
        }
       }
       $183 = $0;
       $184 = $0;
       $185 = ((($184)) + 67|0);
       $186 = HEAPU8[$185>>0]|(HEAPU8[$185+1>>0]<<8)|(HEAPU8[$185+2>>0]<<16)|(HEAPU8[$185+3>>0]<<24);
       $187 = (__set_current_error($183,24,$186)|0);
       $188 = ($187<<24>>24)!=(0);
       if (!($188)) {
        $399 = $ast;
        $400 = $1;
        HEAP32[$400>>2] = $399;
        $401 = $result;
        STACKTOP = sp;return ($401|0);
       }
       $189 = $0;
       __set_error_pos($189,0,0,0);
       $result = 3;
       $399 = $ast;
       $400 = $1;
       HEAP32[$400>>2] = $399;
       $401 = $result;
       STACKTOP = sp;return ($401|0);
      }
      $190 = ((($147)) + 8|0);
      $191 = HEAPU8[$190>>0]|(HEAPU8[$190+1>>0]<<8)|(HEAPU8[$190+2>>0]<<16)|(HEAPU8[$190+3>>0]<<24);
      $ast = $191;
      while(1) {
       $192 = $ast;
       $193 = HEAPU8[$192>>0]|(HEAPU8[$192+1>>0]<<8)|(HEAPU8[$192+2>>0]<<16)|(HEAPU8[$192+3>>0]<<24);
       $194 = HEAPU8[$193>>0]|(HEAPU8[$193+1>>0]<<8)|(HEAPU8[$193+2>>0]<<16)|(HEAPU8[$193+3>>0]<<24);
       $195 = ($194|0)!=(8);
       if (!($195)) {
        $196 = $ast;
        $197 = HEAPU8[$196>>0]|(HEAPU8[$196+1>>0]<<8)|(HEAPU8[$196+2>>0]<<16)|(HEAPU8[$196+3>>0]<<24);
        $198 = ((($197)) + 4|0);
        $199 = HEAPU8[$198>>0]|(HEAPU8[$198+1>>0]<<8)|(HEAPU8[$198+2>>0]<<16)|(HEAPU8[$198+3>>0]<<24);
        $200 = ((($199)) + 4|0);
        $201 = HEAPU8[$200>>0]|(HEAPU8[$200+1>>0]<<8)|(HEAPU8[$200+2>>0]<<16)|(HEAPU8[$200+3>>0]<<24);
        $202 = ($201|0)!=(8|0);
        if (!($202)) {
         label = 60;
         break;
        }
       }
       $203 = $ast;
       $204 = HEAPU8[$203>>0]|(HEAPU8[$203+1>>0]<<8)|(HEAPU8[$203+2>>0]<<16)|(HEAPU8[$203+3>>0]<<24);
       $len = $204;
       $205 = $len;
       $206 = (__try_get_value($205,$val,2)|0);
       $207 = ($206<<24>>24)!=(0);
       if (!($207)) {
        label = 34;
        break;
       }
       $239 = HEAPU8[$val>>0]|(HEAPU8[$val+1>>0]<<8)|(HEAPU8[$val+2>>0]<<16)|(HEAPU8[$val+3>>0]<<24);
       $240 = ($239|0)<=(0);
       if ($240) {
        label = 41;
        break;
       }
       $272 = ((($dummy)) + 33|0);
       $273 = HEAP8[$272>>0]|0;
       $274 = $273&255;
       $275 = ($274|0)>=(4);
       if ($275) {
        label = 48;
        break;
       }
       $307 = HEAPU8[$val>>0]|(HEAPU8[$val+1>>0]<<8)|(HEAPU8[$val+2>>0]<<16)|(HEAPU8[$val+3>>0]<<24);
       $308 = ((($dummy)) + 33|0);
       $309 = HEAP8[$308>>0]|0;
       $310 = (($309) + 1)<<24>>24;
       HEAP8[$308>>0] = $310;
       $311 = $309&255;
       $312 = ((($dummy)) + 34|0);
       $313 = (($312) + ($311<<2)|0);
       HEAP8[$313>>0]=$307&255;HEAP8[$313+1>>0]=($307>>8)&255;HEAP8[$313+2>>0]=($307>>16)&255;HEAP8[$313+3>>0]=$307>>24;
       $314 = ((($dummy)) + 29|0);
       $315 = HEAPU8[$314>>0]|(HEAPU8[$314+1>>0]<<8)|(HEAPU8[$314+2>>0]<<16)|(HEAPU8[$314+3>>0]<<24);
       $316 = ($315|0)!=(0);
       $317 = HEAPU8[$val>>0]|(HEAPU8[$val+1>>0]<<8)|(HEAPU8[$val+2>>0]<<16)|(HEAPU8[$val+3>>0]<<24);
       $318 = ((($dummy)) + 29|0);
       $319 = HEAPU8[$318>>0]|(HEAPU8[$318+1>>0]<<8)|(HEAPU8[$318+2>>0]<<16)|(HEAPU8[$318+3>>0]<<24);
       if ($316) {
        $320 = Math_imul($319, $317)|0;
        HEAP8[$318>>0]=$320&255;HEAP8[$318+1>>0]=($320>>8)&255;HEAP8[$318+2>>0]=($320>>16)&255;HEAP8[$318+3>>0]=$320>>24;
       } else {
        $321 = (($319) + ($317))|0;
        HEAP8[$318>>0]=$321&255;HEAP8[$318+1>>0]=($321>>8)&255;HEAP8[$318+2>>0]=($321>>16)&255;HEAP8[$318+3>>0]=$321>>24;
       }
       $322 = $ast;
       $323 = ((($322)) + 8|0);
       $324 = HEAPU8[$323>>0]|(HEAPU8[$323+1>>0]<<8)|(HEAPU8[$323+2>>0]<<16)|(HEAPU8[$323+3>>0]<<24);
       $ast = $324;
       $325 = $ast;
       $326 = HEAPU8[$325>>0]|(HEAPU8[$325+1>>0]<<8)|(HEAPU8[$325+2>>0]<<16)|(HEAPU8[$325+3>>0]<<24);
       $327 = HEAPU8[$326>>0]|(HEAPU8[$326+1>>0]<<8)|(HEAPU8[$326+2>>0]<<16)|(HEAPU8[$326+3>>0]<<24);
       $328 = ($327|0)==(19);
       if (!($328)) {
        continue;
       }
       $329 = $ast;
       $330 = HEAPU8[$329>>0]|(HEAPU8[$329+1>>0]<<8)|(HEAPU8[$329+2>>0]<<16)|(HEAPU8[$329+3>>0]<<24);
       $331 = ((($330)) + 4|0);
       $332 = HEAP8[$331>>0]|0;
       $333 = $332 << 24 >> 24;
       $334 = ($333|0)==(44);
       if (!($334)) {
        continue;
       }
       $335 = $ast;
       $336 = ((($335)) + 8|0);
       $337 = HEAPU8[$336>>0]|(HEAPU8[$336+1>>0]<<8)|(HEAPU8[$336+2>>0]<<16)|(HEAPU8[$336+3>>0]<<24);
       $ast = $337;
      }
      if ((label|0) == 34) {
       $208 = $ast;
       $209 = ($208|0)!=(0|0);
       if ($209) {
        $210 = $ast;
        $211 = HEAPU8[$210>>0]|(HEAPU8[$210+1>>0]<<8)|(HEAPU8[$210+2>>0]<<16)|(HEAPU8[$210+3>>0]<<24);
        $212 = ($211|0)!=(0|0);
        if ($212) {
         $213 = $0;
         $214 = $0;
         $215 = ((($214)) + 67|0);
         $216 = HEAPU8[$215>>0]|(HEAPU8[$215+1>>0]<<8)|(HEAPU8[$215+2>>0]<<16)|(HEAPU8[$215+3>>0]<<24);
         $217 = (__set_current_error($213,14,$216)|0);
         $218 = ($217<<24>>24)!=(0);
         if (!($218)) {
          $399 = $ast;
          $400 = $1;
          HEAP32[$400>>2] = $399;
          $401 = $result;
          STACKTOP = sp;return ($401|0);
         }
         $219 = $0;
         $220 = $ast;
         $221 = HEAPU8[$220>>0]|(HEAPU8[$220+1>>0]<<8)|(HEAPU8[$220+2>>0]<<16)|(HEAPU8[$220+3>>0]<<24);
         $222 = ((($221)) + 9|0);
         $223 = HEAPU8[$222>>0]|(HEAPU8[$222+1>>0]<<8)|(HEAPU8[$222+2>>0]<<16)|(HEAPU8[$222+3>>0]<<24);
         $224 = $ast;
         $225 = HEAPU8[$224>>0]|(HEAPU8[$224+1>>0]<<8)|(HEAPU8[$224+2>>0]<<16)|(HEAPU8[$224+3>>0]<<24);
         $226 = ((($225)) + 13|0);
         $227 = HEAPU8[$226>>0]|(HEAPU8[$226+1>>0]<<8);
         $228 = $ast;
         $229 = HEAPU8[$228>>0]|(HEAPU8[$228+1>>0]<<8)|(HEAPU8[$228+2>>0]<<16)|(HEAPU8[$228+3>>0]<<24);
         $230 = ((($229)) + 15|0);
         $231 = HEAPU8[$230>>0]|(HEAPU8[$230+1>>0]<<8);
         __set_error_pos($219,$223,$227,$231);
         $result = 3;
         $399 = $ast;
         $400 = $1;
         HEAP32[$400>>2] = $399;
         $401 = $result;
         STACKTOP = sp;return ($401|0);
        }
       }
       $232 = $0;
       $233 = $0;
       $234 = ((($233)) + 67|0);
       $235 = HEAPU8[$234>>0]|(HEAPU8[$234+1>>0]<<8)|(HEAPU8[$234+2>>0]<<16)|(HEAPU8[$234+3>>0]<<24);
       $236 = (__set_current_error($232,14,$235)|0);
       $237 = ($236<<24>>24)!=(0);
       if (!($237)) {
        $399 = $ast;
        $400 = $1;
        HEAP32[$400>>2] = $399;
        $401 = $result;
        STACKTOP = sp;return ($401|0);
       }
       $238 = $0;
       __set_error_pos($238,0,0,0);
       $result = 3;
       $399 = $ast;
       $400 = $1;
       HEAP32[$400>>2] = $399;
       $401 = $result;
       STACKTOP = sp;return ($401|0);
      }
      else if ((label|0) == 41) {
       $241 = $ast;
       $242 = ($241|0)!=(0|0);
       if ($242) {
        $243 = $ast;
        $244 = HEAPU8[$243>>0]|(HEAPU8[$243+1>>0]<<8)|(HEAPU8[$243+2>>0]<<16)|(HEAPU8[$243+3>>0]<<24);
        $245 = ($244|0)!=(0|0);
        if ($245) {
         $246 = $0;
         $247 = $0;
         $248 = ((($247)) + 67|0);
         $249 = HEAPU8[$248>>0]|(HEAPU8[$248+1>>0]<<8)|(HEAPU8[$248+2>>0]<<16)|(HEAPU8[$248+3>>0]<<24);
         $250 = (__set_current_error($246,20,$249)|0);
         $251 = ($250<<24>>24)!=(0);
         if (!($251)) {
          $399 = $ast;
          $400 = $1;
          HEAP32[$400>>2] = $399;
          $401 = $result;
          STACKTOP = sp;return ($401|0);
         }
         $252 = $0;
         $253 = $ast;
         $254 = HEAPU8[$253>>0]|(HEAPU8[$253+1>>0]<<8)|(HEAPU8[$253+2>>0]<<16)|(HEAPU8[$253+3>>0]<<24);
         $255 = ((($254)) + 9|0);
         $256 = HEAPU8[$255>>0]|(HEAPU8[$255+1>>0]<<8)|(HEAPU8[$255+2>>0]<<16)|(HEAPU8[$255+3>>0]<<24);
         $257 = $ast;
         $258 = HEAPU8[$257>>0]|(HEAPU8[$257+1>>0]<<8)|(HEAPU8[$257+2>>0]<<16)|(HEAPU8[$257+3>>0]<<24);
         $259 = ((($258)) + 13|0);
         $260 = HEAPU8[$259>>0]|(HEAPU8[$259+1>>0]<<8);
         $261 = $ast;
         $262 = HEAPU8[$261>>0]|(HEAPU8[$261+1>>0]<<8)|(HEAPU8[$261+2>>0]<<16)|(HEAPU8[$261+3>>0]<<24);
         $263 = ((($262)) + 15|0);
         $264 = HEAPU8[$263>>0]|(HEAPU8[$263+1>>0]<<8);
         __set_error_pos($252,$256,$260,$264);
         $result = 3;
         $399 = $ast;
         $400 = $1;
         HEAP32[$400>>2] = $399;
         $401 = $result;
         STACKTOP = sp;return ($401|0);
        }
       }
       $265 = $0;
       $266 = $0;
       $267 = ((($266)) + 67|0);
       $268 = HEAPU8[$267>>0]|(HEAPU8[$267+1>>0]<<8)|(HEAPU8[$267+2>>0]<<16)|(HEAPU8[$267+3>>0]<<24);
       $269 = (__set_current_error($265,20,$268)|0);
       $270 = ($269<<24>>24)!=(0);
       if (!($270)) {
        $399 = $ast;
        $400 = $1;
        HEAP32[$400>>2] = $399;
        $401 = $result;
        STACKTOP = sp;return ($401|0);
       }
       $271 = $0;
       __set_error_pos($271,0,0,0);
       $result = 3;
       $399 = $ast;
       $400 = $1;
       HEAP32[$400>>2] = $399;
       $401 = $result;
       STACKTOP = sp;return ($401|0);
      }
      else if ((label|0) == 48) {
       $276 = $ast;
       $277 = ($276|0)!=(0|0);
       if ($277) {
        $278 = $ast;
        $279 = HEAPU8[$278>>0]|(HEAPU8[$278+1>>0]<<8)|(HEAPU8[$278+2>>0]<<16)|(HEAPU8[$278+3>>0]<<24);
        $280 = ($279|0)!=(0|0);
        if ($280) {
         $281 = $0;
         $282 = $0;
         $283 = ((($282)) + 67|0);
         $284 = HEAPU8[$283>>0]|(HEAPU8[$283+1>>0]<<8)|(HEAPU8[$283+2>>0]<<16)|(HEAPU8[$283+3>>0]<<24);
         $285 = (__set_current_error($281,22,$284)|0);
         $286 = ($285<<24>>24)!=(0);
         if (!($286)) {
          $399 = $ast;
          $400 = $1;
          HEAP32[$400>>2] = $399;
          $401 = $result;
          STACKTOP = sp;return ($401|0);
         }
         $287 = $0;
         $288 = $ast;
         $289 = HEAPU8[$288>>0]|(HEAPU8[$288+1>>0]<<8)|(HEAPU8[$288+2>>0]<<16)|(HEAPU8[$288+3>>0]<<24);
         $290 = ((($289)) + 9|0);
         $291 = HEAPU8[$290>>0]|(HEAPU8[$290+1>>0]<<8)|(HEAPU8[$290+2>>0]<<16)|(HEAPU8[$290+3>>0]<<24);
         $292 = $ast;
         $293 = HEAPU8[$292>>0]|(HEAPU8[$292+1>>0]<<8)|(HEAPU8[$292+2>>0]<<16)|(HEAPU8[$292+3>>0]<<24);
         $294 = ((($293)) + 13|0);
         $295 = HEAPU8[$294>>0]|(HEAPU8[$294+1>>0]<<8);
         $296 = $ast;
         $297 = HEAPU8[$296>>0]|(HEAPU8[$296+1>>0]<<8)|(HEAPU8[$296+2>>0]<<16)|(HEAPU8[$296+3>>0]<<24);
         $298 = ((($297)) + 15|0);
         $299 = HEAPU8[$298>>0]|(HEAPU8[$298+1>>0]<<8);
         __set_error_pos($287,$291,$295,$299);
         $result = 3;
         $399 = $ast;
         $400 = $1;
         HEAP32[$400>>2] = $399;
         $401 = $result;
         STACKTOP = sp;return ($401|0);
        }
       }
       $300 = $0;
       $301 = $0;
       $302 = ((($301)) + 67|0);
       $303 = HEAPU8[$302>>0]|(HEAPU8[$302+1>>0]<<8)|(HEAPU8[$302+2>>0]<<16)|(HEAPU8[$302+3>>0]<<24);
       $304 = (__set_current_error($300,22,$303)|0);
       $305 = ($304<<24>>24)!=(0);
       if (!($305)) {
        $399 = $ast;
        $400 = $1;
        HEAP32[$400>>2] = $399;
        $401 = $result;
        STACKTOP = sp;return ($401|0);
       }
       $306 = $0;
       __set_error_pos($306,0,0,0);
       $result = 3;
       $399 = $ast;
       $400 = $1;
       HEAP32[$400>>2] = $399;
       $401 = $result;
       STACKTOP = sp;return ($401|0);
      }
      else if ((label|0) == 60) {
       $338 = $arr;
       $339 = ((($338)) + 4|0);
       $340 = HEAPU8[$339>>0]|(HEAPU8[$339+1>>0]<<8)|(HEAPU8[$339+2>>0]<<16)|(HEAPU8[$339+3>>0]<<24);
       __clear_array($340);
       $341 = $arr;
       $342 = ((($341)) + 4|0);
       $343 = HEAPU8[$342>>0]|(HEAPU8[$342+1>>0]<<8)|(HEAPU8[$342+2>>0]<<16)|(HEAPU8[$342+3>>0]<<24);
       dest=$dummy; src=$343; stop=dest+17|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
       $344 = $arr;
       $345 = ((($344)) + 4|0);
       $346 = HEAPU8[$345>>0]|(HEAPU8[$345+1>>0]<<8)|(HEAPU8[$345+2>>0]<<16)|(HEAPU8[$345+3>>0]<<24);
       dest=$346; src=$dummy; stop=dest+50|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
       $347 = $arr;
       $348 = ((($347)) + 4|0);
       $349 = HEAPU8[$348>>0]|(HEAPU8[$348+1>>0]<<8)|(HEAPU8[$348+2>>0]<<16)|(HEAPU8[$348+3>>0]<<24);
       __init_array($349);
       $350 = $arr;
       $351 = ((($350)) + 4|0);
       $352 = HEAPU8[$351>>0]|(HEAPU8[$351+1>>0]<<8)|(HEAPU8[$351+2>>0]<<16)|(HEAPU8[$351+3>>0]<<24);
       $353 = ((($352)) + 25|0);
       $354 = HEAPU8[$353>>0]|(HEAPU8[$353+1>>0]<<8)|(HEAPU8[$353+2>>0]<<16)|(HEAPU8[$353+3>>0]<<24);
       $355 = ($354|0)!=(0|0);
       if ($355) {
        $399 = $ast;
        $400 = $1;
        HEAP32[$400>>2] = $399;
        $401 = $result;
        STACKTOP = sp;return ($401|0);
       }
       $356 = $arr;
       $357 = ((($356)) + 4|0);
       $358 = HEAPU8[$357>>0]|(HEAPU8[$357+1>>0]<<8)|(HEAPU8[$357+2>>0]<<16)|(HEAPU8[$357+3>>0]<<24);
       $359 = ((($358)) + 33|0);
       HEAP8[$359>>0] = 0;
       $360 = $arr;
       $361 = ((($360)) + 4|0);
       $362 = HEAPU8[$361>>0]|(HEAPU8[$361+1>>0]<<8)|(HEAPU8[$361+2>>0]<<16)|(HEAPU8[$361+3>>0]<<24);
       $363 = ((($362)) + 34|0);
       HEAP8[$363>>0]=0&255;HEAP8[$363+1>>0]=(0>>8)&255;HEAP8[$363+2>>0]=(0>>16)&255;HEAP8[$363+3>>0]=0>>24;
       $364 = $arr;
       $365 = ((($364)) + 4|0);
       $366 = HEAPU8[$365>>0]|(HEAPU8[$365+1>>0]<<8)|(HEAPU8[$365+2>>0]<<16)|(HEAPU8[$365+3>>0]<<24);
       $367 = ((($366)) + 29|0);
       HEAP8[$367>>0]=0&255;HEAP8[$367+1>>0]=(0>>8)&255;HEAP8[$367+2>>0]=(0>>16)&255;HEAP8[$367+3>>0]=0>>24;
       $368 = $ast;
       $369 = ($368|0)!=(0|0);
       if ($369) {
        $370 = $ast;
        $371 = HEAPU8[$370>>0]|(HEAPU8[$370+1>>0]<<8)|(HEAPU8[$370+2>>0]<<16)|(HEAPU8[$370+3>>0]<<24);
        $372 = ($371|0)!=(0|0);
        if ($372) {
         $373 = $0;
         $374 = $0;
         $375 = ((($374)) + 67|0);
         $376 = HEAPU8[$375>>0]|(HEAPU8[$375+1>>0]<<8)|(HEAPU8[$375+2>>0]<<16)|(HEAPU8[$375+3>>0]<<24);
         $377 = (__set_current_error($373,12,$376)|0);
         $378 = ($377<<24>>24)!=(0);
         if (!($378)) {
          $399 = $ast;
          $400 = $1;
          HEAP32[$400>>2] = $399;
          $401 = $result;
          STACKTOP = sp;return ($401|0);
         }
         $379 = $0;
         $380 = $ast;
         $381 = HEAPU8[$380>>0]|(HEAPU8[$380+1>>0]<<8)|(HEAPU8[$380+2>>0]<<16)|(HEAPU8[$380+3>>0]<<24);
         $382 = ((($381)) + 9|0);
         $383 = HEAPU8[$382>>0]|(HEAPU8[$382+1>>0]<<8)|(HEAPU8[$382+2>>0]<<16)|(HEAPU8[$382+3>>0]<<24);
         $384 = $ast;
         $385 = HEAPU8[$384>>0]|(HEAPU8[$384+1>>0]<<8)|(HEAPU8[$384+2>>0]<<16)|(HEAPU8[$384+3>>0]<<24);
         $386 = ((($385)) + 13|0);
         $387 = HEAPU8[$386>>0]|(HEAPU8[$386+1>>0]<<8);
         $388 = $ast;
         $389 = HEAPU8[$388>>0]|(HEAPU8[$388+1>>0]<<8)|(HEAPU8[$388+2>>0]<<16)|(HEAPU8[$388+3>>0]<<24);
         $390 = ((($389)) + 15|0);
         $391 = HEAPU8[$390>>0]|(HEAPU8[$390+1>>0]<<8);
         __set_error_pos($379,$383,$387,$391);
         $result = 3;
         $399 = $ast;
         $400 = $1;
         HEAP32[$400>>2] = $399;
         $401 = $result;
         STACKTOP = sp;return ($401|0);
        }
       }
       $392 = $0;
       $393 = $0;
       $394 = ((($393)) + 67|0);
       $395 = HEAPU8[$394>>0]|(HEAPU8[$394+1>>0]<<8)|(HEAPU8[$394+2>>0]<<16)|(HEAPU8[$394+3>>0]<<24);
       $396 = (__set_current_error($392,12,$395)|0);
       $397 = ($396<<24>>24)!=(0);
       if (!($397)) {
        $399 = $ast;
        $400 = $1;
        HEAP32[$400>>2] = $399;
        $401 = $result;
        STACKTOP = sp;return ($401|0);
       }
       $398 = $0;
       __set_error_pos($398,0,0,0);
       $result = 3;
       $399 = $ast;
       $400 = $1;
       HEAP32[$400>>2] = $399;
       $401 = $result;
       STACKTOP = sp;return ($401|0);
      }
     }
    }
   }
   $97 = $ast;
   $98 = ($97|0)!=(0|0);
   if ($98) {
    $99 = $ast;
    $100 = ((($99)) + 8|0);
    $101 = HEAPU8[$100>>0]|(HEAPU8[$100+1>>0]<<8)|(HEAPU8[$100+2>>0]<<16)|(HEAPU8[$100+3>>0]<<24);
    $102 = ($101|0)!=(0|0);
    if ($102) {
     $103 = $ast;
     $104 = ((($103)) + 8|0);
     $105 = HEAPU8[$104>>0]|(HEAPU8[$104+1>>0]<<8)|(HEAPU8[$104+2>>0]<<16)|(HEAPU8[$104+3>>0]<<24);
     $106 = HEAPU8[$105>>0]|(HEAPU8[$105+1>>0]<<8)|(HEAPU8[$105+2>>0]<<16)|(HEAPU8[$105+3>>0]<<24);
     $107 = ($106|0)!=(0|0);
     if ($107) {
      $108 = $0;
      $109 = $0;
      $110 = ((($109)) + 67|0);
      $111 = HEAPU8[$110>>0]|(HEAPU8[$110+1>>0]<<8)|(HEAPU8[$110+2>>0]<<16)|(HEAPU8[$110+3>>0]<<24);
      $112 = (__set_current_error($108,33,$111)|0);
      $113 = ($112<<24>>24)!=(0);
      if (!($113)) {
       $399 = $ast;
       $400 = $1;
       HEAP32[$400>>2] = $399;
       $401 = $result;
       STACKTOP = sp;return ($401|0);
      }
      $114 = $0;
      $115 = $ast;
      $116 = ((($115)) + 8|0);
      $117 = HEAPU8[$116>>0]|(HEAPU8[$116+1>>0]<<8)|(HEAPU8[$116+2>>0]<<16)|(HEAPU8[$116+3>>0]<<24);
      $118 = HEAPU8[$117>>0]|(HEAPU8[$117+1>>0]<<8)|(HEAPU8[$117+2>>0]<<16)|(HEAPU8[$117+3>>0]<<24);
      $119 = ((($118)) + 9|0);
      $120 = HEAPU8[$119>>0]|(HEAPU8[$119+1>>0]<<8)|(HEAPU8[$119+2>>0]<<16)|(HEAPU8[$119+3>>0]<<24);
      $121 = $ast;
      $122 = ((($121)) + 8|0);
      $123 = HEAPU8[$122>>0]|(HEAPU8[$122+1>>0]<<8)|(HEAPU8[$122+2>>0]<<16)|(HEAPU8[$122+3>>0]<<24);
      $124 = HEAPU8[$123>>0]|(HEAPU8[$123+1>>0]<<8)|(HEAPU8[$123+2>>0]<<16)|(HEAPU8[$123+3>>0]<<24);
      $125 = ((($124)) + 13|0);
      $126 = HEAPU8[$125>>0]|(HEAPU8[$125+1>>0]<<8);
      $127 = $ast;
      $128 = ((($127)) + 8|0);
      $129 = HEAPU8[$128>>0]|(HEAPU8[$128+1>>0]<<8)|(HEAPU8[$128+2>>0]<<16)|(HEAPU8[$128+3>>0]<<24);
      $130 = HEAPU8[$129>>0]|(HEAPU8[$129+1>>0]<<8)|(HEAPU8[$129+2>>0]<<16)|(HEAPU8[$129+3>>0]<<24);
      $131 = ((($130)) + 15|0);
      $132 = HEAPU8[$131>>0]|(HEAPU8[$131+1>>0]<<8);
      __set_error_pos($114,$120,$126,$132);
      $result = 3;
      $399 = $ast;
      $400 = $1;
      HEAP32[$400>>2] = $399;
      $401 = $result;
      STACKTOP = sp;return ($401|0);
     }
    }
   }
   $133 = $0;
   $134 = $0;
   $135 = ((($134)) + 67|0);
   $136 = HEAPU8[$135>>0]|(HEAPU8[$135+1>>0]<<8)|(HEAPU8[$135+2>>0]<<16)|(HEAPU8[$135+3>>0]<<24);
   $137 = (__set_current_error($133,33,$136)|0);
   $138 = ($137<<24>>24)!=(0);
   if (!($138)) {
    $399 = $ast;
    $400 = $1;
    HEAP32[$400>>2] = $399;
    $401 = $result;
    STACKTOP = sp;return ($401|0);
   }
   $139 = $0;
   __set_error_pos($139,0,0,0);
   $result = 3;
   $399 = $ast;
   $400 = $1;
   HEAP32[$400>>2] = $399;
   $401 = $result;
   STACKTOP = sp;return ($401|0);
  }
 }
 $18 = $ast;
 $19 = ($18|0)!=(0|0);
 if ($19) {
  $20 = $ast;
  $21 = ((($20)) + 8|0);
  $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
  $23 = ($22|0)!=(0|0);
  if ($23) {
   $24 = $ast;
   $25 = ((($24)) + 8|0);
   $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
   $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
   $28 = ($27|0)!=(0|0);
   if ($28) {
    $29 = $0;
    $30 = $0;
    $31 = ((($30)) + 67|0);
    $32 = HEAPU8[$31>>0]|(HEAPU8[$31+1>>0]<<8)|(HEAPU8[$31+2>>0]<<16)|(HEAPU8[$31+3>>0]<<24);
    $33 = (__set_current_error($29,24,$32)|0);
    $34 = ($33<<24>>24)!=(0);
    if (!($34)) {
     $399 = $ast;
     $400 = $1;
     HEAP32[$400>>2] = $399;
     $401 = $result;
     STACKTOP = sp;return ($401|0);
    }
    $35 = $0;
    $36 = $ast;
    $37 = ((($36)) + 8|0);
    $38 = HEAPU8[$37>>0]|(HEAPU8[$37+1>>0]<<8)|(HEAPU8[$37+2>>0]<<16)|(HEAPU8[$37+3>>0]<<24);
    $39 = HEAPU8[$38>>0]|(HEAPU8[$38+1>>0]<<8)|(HEAPU8[$38+2>>0]<<16)|(HEAPU8[$38+3>>0]<<24);
    $40 = ((($39)) + 9|0);
    $41 = HEAPU8[$40>>0]|(HEAPU8[$40+1>>0]<<8)|(HEAPU8[$40+2>>0]<<16)|(HEAPU8[$40+3>>0]<<24);
    $42 = $ast;
    $43 = ((($42)) + 8|0);
    $44 = HEAPU8[$43>>0]|(HEAPU8[$43+1>>0]<<8)|(HEAPU8[$43+2>>0]<<16)|(HEAPU8[$43+3>>0]<<24);
    $45 = HEAPU8[$44>>0]|(HEAPU8[$44+1>>0]<<8)|(HEAPU8[$44+2>>0]<<16)|(HEAPU8[$44+3>>0]<<24);
    $46 = ((($45)) + 13|0);
    $47 = HEAPU8[$46>>0]|(HEAPU8[$46+1>>0]<<8);
    $48 = $ast;
    $49 = ((($48)) + 8|0);
    $50 = HEAPU8[$49>>0]|(HEAPU8[$49+1>>0]<<8)|(HEAPU8[$49+2>>0]<<16)|(HEAPU8[$49+3>>0]<<24);
    $51 = HEAPU8[$50>>0]|(HEAPU8[$50+1>>0]<<8)|(HEAPU8[$50+2>>0]<<16)|(HEAPU8[$50+3>>0]<<24);
    $52 = ((($51)) + 15|0);
    $53 = HEAPU8[$52>>0]|(HEAPU8[$52+1>>0]<<8);
    __set_error_pos($35,$41,$47,$53);
    $result = 3;
    $399 = $ast;
    $400 = $1;
    HEAP32[$400>>2] = $399;
    $401 = $result;
    STACKTOP = sp;return ($401|0);
   }
  }
 }
 $54 = $0;
 $55 = $0;
 $56 = ((($55)) + 67|0);
 $57 = HEAPU8[$56>>0]|(HEAPU8[$56+1>>0]<<8)|(HEAPU8[$56+2>>0]<<16)|(HEAPU8[$56+3>>0]<<24);
 $58 = (__set_current_error($54,24,$57)|0);
 $59 = ($58<<24>>24)!=(0);
 if (!($59)) {
  $399 = $ast;
  $400 = $1;
  HEAP32[$400>>2] = $399;
  $401 = $result;
  STACKTOP = sp;return ($401|0);
 }
 $60 = $0;
 __set_error_pos($60,0,0,0);
 $result = 3;
 $399 = $ast;
 $400 = $1;
 HEAP32[$400>>2] = $399;
 $401 = $result;
 STACKTOP = sp;return ($401|0);
}
function __begin_class($s) {
 $s = $s|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $context = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $context = 0;
 $1 = $0;
 $2 = ($1|0)!=(0|0);
 if ($2) {
  $3 = $0;
  $4 = ((($3)) + 71|0);
  $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
  $context = $5;
  $6 = $context;
  $7 = ((($6)) + 158|0);
  HEAP8[$7>>0]=1&255;HEAP8[$7+1>>0]=1>>8;
  STACKTOP = sp;return;
 } else {
  ___assert_fail((4803|0),(4322|0),8314,(8553|0));
  // unreachable;
 }
}
function __end_class($s) {
 $s = $s|0;
 var $$sink = 0, $$sink1 = 0, $$sink2 = 0, $$sink3 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0;
 var $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0;
 var $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0;
 var $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0;
 var $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0;
 var $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $context = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $s;
 $context = 0;
 $2 = $1;
 $3 = ($2|0)!=(0|0);
 if (!($3)) {
  ___assert_fail((4803|0),(4322|0),8324,(8542|0));
  // unreachable;
 }
 $4 = $1;
 $5 = ((($4)) + 71|0);
 $6 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
 $context = $6;
 $7 = $context;
 $8 = ((($7)) + 160|0);
 $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8);
 $10 = ($9<<16>>16)!=(0);
 if ($10) {
  $11 = $1;
  $12 = $1;
  $13 = ((($12)) + 67|0);
  $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
  (__set_current_error($11,53,$14)|0);
  $15 = $1;
  $16 = ((($15)) + 163|0);
  $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
  $18 = ($17|0)!=(0|0);
  if ($18) {
   $19 = $1;
   $20 = ((($19)) + 134|0);
   $21 = HEAP8[$20>>0]|0;
   $22 = $21 & 1;
   $23 = ($22<<24>>24)!=(0);
   if (!($23)) {
    $24 = $1;
    $25 = ((($24)) + 134|0);
    $26 = HEAP8[$25>>0]|0;
    $27 = $26 & -2;
    $28 = $27 | 1;
    HEAP8[$25>>0] = $28;
    $29 = $1;
    $30 = ((($29)) + 163|0);
    $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8)|(HEAPU8[$30+2>>0]<<16)|(HEAPU8[$30+3>>0]<<24);
    $32 = $1;
    $33 = $1;
    $34 = ((($33)) + 135|0);
    $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
    $36 = $1;
    $37 = ((($36)) + 135|0);
    $38 = HEAPU8[$37>>0]|(HEAPU8[$37+1>>0]<<8)|(HEAPU8[$37+2>>0]<<16)|(HEAPU8[$37+3>>0]<<24);
    $39 = (_mb_get_error_desc($38)|0);
    $40 = $1;
    $41 = ((($40)) + 139|0);
    $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
    $43 = $1;
    $44 = ((($43)) + 71|0);
    $45 = HEAPU8[$44>>0]|(HEAPU8[$44+1>>0]<<8)|(HEAPU8[$44+2>>0]<<16)|(HEAPU8[$44+3>>0]<<24);
    $46 = ($45|0)!=(0|0);
    if ($46) {
     $47 = $1;
     $48 = ((($47)) + 79|0);
     $49 = HEAPU8[$48>>0]|(HEAPU8[$48+1>>0]<<8)|(HEAPU8[$48+2>>0]<<16)|(HEAPU8[$48+3>>0]<<24);
     $50 = ($49|0)!=(0);
     if ($50) {
      label = 9;
     } else {
      $51 = $1;
      $52 = ((($51)) + 71|0);
      $53 = HEAPU8[$52>>0]|(HEAPU8[$52+1>>0]<<8)|(HEAPU8[$52+2>>0]<<16)|(HEAPU8[$52+3>>0]<<24);
      $54 = ((($53)) + 164|0);
      $55 = HEAPU8[$54>>0]|(HEAPU8[$54+1>>0]<<8)|(HEAPU8[$54+2>>0]<<16)|(HEAPU8[$54+3>>0]<<24);
      $95 = $55;
     }
    } else {
     label = 9;
    }
    if ((label|0) == 9) {
     $56 = $1;
     $57 = ((($56)) + 143|0);
     $58 = HEAPU8[$57>>0]|(HEAPU8[$57+1>>0]<<8)|(HEAPU8[$57+2>>0]<<16)|(HEAPU8[$57+3>>0]<<24);
     $95 = $58;
    }
    $59 = $1;
    $60 = ((($59)) + 71|0);
    $61 = HEAPU8[$60>>0]|(HEAPU8[$60+1>>0]<<8)|(HEAPU8[$60+2>>0]<<16)|(HEAPU8[$60+3>>0]<<24);
    $62 = ($61|0)!=(0|0);
    if ($62) {
     $63 = $1;
     $64 = ((($63)) + 79|0);
     $65 = HEAPU8[$64>>0]|(HEAPU8[$64+1>>0]<<8)|(HEAPU8[$64+2>>0]<<16)|(HEAPU8[$64+3>>0]<<24);
     $66 = ($65|0)!=(0);
     if ($66) {
      label = 13;
     } else {
      $67 = $1;
      $68 = ((($67)) + 71|0);
      $69 = HEAPU8[$68>>0]|(HEAPU8[$68+1>>0]<<8)|(HEAPU8[$68+2>>0]<<16)|(HEAPU8[$68+3>>0]<<24);
      $70 = ((($69)) + 168|0);
      $71 = HEAPU8[$70>>0]|(HEAPU8[$70+1>>0]<<8);
      $$sink = $71;
     }
    } else {
     label = 13;
    }
    if ((label|0) == 13) {
     $72 = $1;
     $73 = ((($72)) + 147|0);
     $74 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8);
     $$sink = $74;
    }
    $75 = $$sink&65535;
    $76 = $75&65535;
    $77 = $1;
    $78 = ((($77)) + 71|0);
    $79 = HEAPU8[$78>>0]|(HEAPU8[$78+1>>0]<<8)|(HEAPU8[$78+2>>0]<<16)|(HEAPU8[$78+3>>0]<<24);
    $80 = ($79|0)!=(0|0);
    if ($80) {
     $81 = $1;
     $82 = ((($81)) + 79|0);
     $83 = HEAPU8[$82>>0]|(HEAPU8[$82+1>>0]<<8)|(HEAPU8[$82+2>>0]<<16)|(HEAPU8[$82+3>>0]<<24);
     $84 = ($83|0)!=(0);
     if ($84) {
      label = 17;
     } else {
      $85 = $1;
      $86 = ((($85)) + 71|0);
      $87 = HEAPU8[$86>>0]|(HEAPU8[$86+1>>0]<<8)|(HEAPU8[$86+2>>0]<<16)|(HEAPU8[$86+3>>0]<<24);
      $88 = ((($87)) + 170|0);
      $89 = HEAPU8[$88>>0]|(HEAPU8[$88+1>>0]<<8);
      $$sink1 = $89;
     }
    } else {
     label = 17;
    }
    if ((label|0) == 17) {
     $90 = $1;
     $91 = ((($90)) + 149|0);
     $92 = HEAPU8[$91>>0]|(HEAPU8[$91+1>>0]<<8);
     $$sink1 = $92;
    }
    $93 = $$sink1&65535;
    $94 = $93&65535;
    FUNCTION_TABLE_viiiiiiii[$31 & 127]($32,$35,$39,$42,$95,$76,$94,3);
   }
  }
 }
 $96 = $context;
 $97 = ((($96)) + 158|0);
 $98 = HEAPU8[$97>>0]|(HEAPU8[$97+1>>0]<<8);
 $99 = $98&65535;
 $100 = ($99|0)==(0);
 if (!($100)) {
  $186 = $context;
  $187 = ((($186)) + 158|0);
  HEAP8[$187>>0]=0&255;HEAP8[$187+1>>0]=0>>8;
  $188 = $1;
  $189 = ((($188)) + 93|0);
  HEAP8[$189>>0]=0&255;HEAP8[$189+1>>0]=(0>>8)&255;HEAP8[$189+2>>0]=(0>>16)&255;HEAP8[$189+3>>0]=0>>24;
  $0 = 1;
  $190 = $0;
  STACKTOP = sp;return ($190|0);
 }
 $101 = $1;
 $102 = $1;
 $103 = ((($102)) + 67|0);
 $104 = HEAPU8[$103>>0]|(HEAPU8[$103+1>>0]<<8)|(HEAPU8[$103+2>>0]<<16)|(HEAPU8[$103+3>>0]<<24);
 (__set_current_error($101,56,$104)|0);
 $105 = $1;
 $106 = ((($105)) + 163|0);
 $107 = HEAPU8[$106>>0]|(HEAPU8[$106+1>>0]<<8)|(HEAPU8[$106+2>>0]<<16)|(HEAPU8[$106+3>>0]<<24);
 $108 = ($107|0)!=(0|0);
 if ($108) {
  $109 = $1;
  $110 = ((($109)) + 134|0);
  $111 = HEAP8[$110>>0]|0;
  $112 = $111 & 1;
  $113 = ($112<<24>>24)!=(0);
  if (!($113)) {
   $114 = $1;
   $115 = ((($114)) + 134|0);
   $116 = HEAP8[$115>>0]|0;
   $117 = $116 & -2;
   $118 = $117 | 1;
   HEAP8[$115>>0] = $118;
   $119 = $1;
   $120 = ((($119)) + 163|0);
   $121 = HEAPU8[$120>>0]|(HEAPU8[$120+1>>0]<<8)|(HEAPU8[$120+2>>0]<<16)|(HEAPU8[$120+3>>0]<<24);
   $122 = $1;
   $123 = $1;
   $124 = ((($123)) + 135|0);
   $125 = HEAPU8[$124>>0]|(HEAPU8[$124+1>>0]<<8)|(HEAPU8[$124+2>>0]<<16)|(HEAPU8[$124+3>>0]<<24);
   $126 = $1;
   $127 = ((($126)) + 135|0);
   $128 = HEAPU8[$127>>0]|(HEAPU8[$127+1>>0]<<8)|(HEAPU8[$127+2>>0]<<16)|(HEAPU8[$127+3>>0]<<24);
   $129 = (_mb_get_error_desc($128)|0);
   $130 = $1;
   $131 = ((($130)) + 139|0);
   $132 = HEAPU8[$131>>0]|(HEAPU8[$131+1>>0]<<8)|(HEAPU8[$131+2>>0]<<16)|(HEAPU8[$131+3>>0]<<24);
   $133 = $1;
   $134 = ((($133)) + 71|0);
   $135 = HEAPU8[$134>>0]|(HEAPU8[$134+1>>0]<<8)|(HEAPU8[$134+2>>0]<<16)|(HEAPU8[$134+3>>0]<<24);
   $136 = ($135|0)!=(0|0);
   if ($136) {
    $137 = $1;
    $138 = ((($137)) + 79|0);
    $139 = HEAPU8[$138>>0]|(HEAPU8[$138+1>>0]<<8)|(HEAPU8[$138+2>>0]<<16)|(HEAPU8[$138+3>>0]<<24);
    $140 = ($139|0)!=(0);
    if ($140) {
     label = 25;
    } else {
     $141 = $1;
     $142 = ((($141)) + 71|0);
     $143 = HEAPU8[$142>>0]|(HEAPU8[$142+1>>0]<<8)|(HEAPU8[$142+2>>0]<<16)|(HEAPU8[$142+3>>0]<<24);
     $144 = ((($143)) + 164|0);
     $145 = HEAPU8[$144>>0]|(HEAPU8[$144+1>>0]<<8)|(HEAPU8[$144+2>>0]<<16)|(HEAPU8[$144+3>>0]<<24);
     $185 = $145;
    }
   } else {
    label = 25;
   }
   if ((label|0) == 25) {
    $146 = $1;
    $147 = ((($146)) + 143|0);
    $148 = HEAPU8[$147>>0]|(HEAPU8[$147+1>>0]<<8)|(HEAPU8[$147+2>>0]<<16)|(HEAPU8[$147+3>>0]<<24);
    $185 = $148;
   }
   $149 = $1;
   $150 = ((($149)) + 71|0);
   $151 = HEAPU8[$150>>0]|(HEAPU8[$150+1>>0]<<8)|(HEAPU8[$150+2>>0]<<16)|(HEAPU8[$150+3>>0]<<24);
   $152 = ($151|0)!=(0|0);
   if ($152) {
    $153 = $1;
    $154 = ((($153)) + 79|0);
    $155 = HEAPU8[$154>>0]|(HEAPU8[$154+1>>0]<<8)|(HEAPU8[$154+2>>0]<<16)|(HEAPU8[$154+3>>0]<<24);
    $156 = ($155|0)!=(0);
    if ($156) {
     label = 29;
    } else {
     $157 = $1;
     $158 = ((($157)) + 71|0);
     $159 = HEAPU8[$158>>0]|(HEAPU8[$158+1>>0]<<8)|(HEAPU8[$158+2>>0]<<16)|(HEAPU8[$158+3>>0]<<24);
     $160 = ((($159)) + 168|0);
     $161 = HEAPU8[$160>>0]|(HEAPU8[$160+1>>0]<<8);
     $$sink2 = $161;
    }
   } else {
    label = 29;
   }
   if ((label|0) == 29) {
    $162 = $1;
    $163 = ((($162)) + 147|0);
    $164 = HEAPU8[$163>>0]|(HEAPU8[$163+1>>0]<<8);
    $$sink2 = $164;
   }
   $165 = $$sink2&65535;
   $166 = $165&65535;
   $167 = $1;
   $168 = ((($167)) + 71|0);
   $169 = HEAPU8[$168>>0]|(HEAPU8[$168+1>>0]<<8)|(HEAPU8[$168+2>>0]<<16)|(HEAPU8[$168+3>>0]<<24);
   $170 = ($169|0)!=(0|0);
   if ($170) {
    $171 = $1;
    $172 = ((($171)) + 79|0);
    $173 = HEAPU8[$172>>0]|(HEAPU8[$172+1>>0]<<8)|(HEAPU8[$172+2>>0]<<16)|(HEAPU8[$172+3>>0]<<24);
    $174 = ($173|0)!=(0);
    if ($174) {
     label = 33;
    } else {
     $175 = $1;
     $176 = ((($175)) + 71|0);
     $177 = HEAPU8[$176>>0]|(HEAPU8[$176+1>>0]<<8)|(HEAPU8[$176+2>>0]<<16)|(HEAPU8[$176+3>>0]<<24);
     $178 = ((($177)) + 170|0);
     $179 = HEAPU8[$178>>0]|(HEAPU8[$178+1>>0]<<8);
     $$sink3 = $179;
    }
   } else {
    label = 33;
   }
   if ((label|0) == 33) {
    $180 = $1;
    $181 = ((($180)) + 149|0);
    $182 = HEAPU8[$181>>0]|(HEAPU8[$181+1>>0]<<8);
    $$sink3 = $182;
   }
   $183 = $$sink3&65535;
   $184 = $183&65535;
   FUNCTION_TABLE_viiiiiiii[$121 & 127]($122,$125,$129,$132,$185,$166,$184,3);
  }
 }
 $0 = 0;
 $190 = $0;
 STACKTOP = sp;return ($190|0);
}
function __begin_routine($s) {
 $s = $s|0;
 var $$sink = 0, $$sink1 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0;
 var $114 = 0, $115 = 0, $116 = 0, $117 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0;
 var $before = 0, $context = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $result = 0;
 $context = 0;
 $before = 0;
 $1 = $0;
 $2 = ($1|0)!=(0|0);
 if (!($2)) {
  ___assert_fail((4803|0),(4322|0),8788,(8527|0));
  // unreachable;
 }
 $3 = $0;
 $4 = ((($3)) + 71|0);
 $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
 $context = $5;
 $6 = $context;
 $7 = ((($6)) + 160|0);
 $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8);
 $9 = (($8) + 1)<<16>>16;
 HEAP8[$7>>0]=$9&255;HEAP8[$7+1>>0]=$9>>8;
 $before = $8;
 $10 = $before;
 $11 = $10&65535;
 $12 = $context;
 $13 = ((($12)) + 160|0);
 $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8);
 $15 = $14&65535;
 $16 = ($11|0)>($15|0);
 if (!($16)) {
  $117 = $result;
  STACKTOP = sp;return ($117|0);
 }
 $17 = $context;
 $18 = ((($17)) + 160|0);
 $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8);
 $20 = (($19) + -1)<<16>>16;
 HEAP8[$18>>0]=$20&255;HEAP8[$18+1>>0]=$20>>8;
 $result = 3;
 $21 = $0;
 $22 = $0;
 $23 = ((($22)) + 139|0);
 $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
 (__set_current_error($21,53,$24)|0);
 $25 = $0;
 $26 = ((($25)) + 163|0);
 $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
 $28 = ($27|0)!=(0|0);
 if ($28) {
  $29 = $0;
  $30 = ((($29)) + 134|0);
  $31 = HEAP8[$30>>0]|0;
  $32 = $31 & 1;
  $33 = ($32<<24>>24)!=(0);
  if ($33) {
   $117 = $result;
   STACKTOP = sp;return ($117|0);
  }
  $34 = $0;
  $35 = ((($34)) + 134|0);
  $36 = HEAP8[$35>>0]|0;
  $37 = $36 & -2;
  $38 = $37 | 1;
  HEAP8[$35>>0] = $38;
  $39 = $0;
  $40 = ((($39)) + 163|0);
  $41 = HEAPU8[$40>>0]|(HEAPU8[$40+1>>0]<<8)|(HEAPU8[$40+2>>0]<<16)|(HEAPU8[$40+3>>0]<<24);
  $42 = $0;
  $43 = $0;
  $44 = ((($43)) + 135|0);
  $45 = HEAPU8[$44>>0]|(HEAPU8[$44+1>>0]<<8)|(HEAPU8[$44+2>>0]<<16)|(HEAPU8[$44+3>>0]<<24);
  $46 = $0;
  $47 = ((($46)) + 135|0);
  $48 = HEAPU8[$47>>0]|(HEAPU8[$47+1>>0]<<8)|(HEAPU8[$47+2>>0]<<16)|(HEAPU8[$47+3>>0]<<24);
  $49 = (_mb_get_error_desc($48)|0);
  $50 = $0;
  $51 = ((($50)) + 139|0);
  $52 = HEAPU8[$51>>0]|(HEAPU8[$51+1>>0]<<8)|(HEAPU8[$51+2>>0]<<16)|(HEAPU8[$51+3>>0]<<24);
  $53 = $0;
  $54 = ((($53)) + 71|0);
  $55 = HEAPU8[$54>>0]|(HEAPU8[$54+1>>0]<<8)|(HEAPU8[$54+2>>0]<<16)|(HEAPU8[$54+3>>0]<<24);
  $56 = ($55|0)!=(0|0);
  if ($56) {
   $57 = $0;
   $58 = ((($57)) + 79|0);
   $59 = HEAPU8[$58>>0]|(HEAPU8[$58+1>>0]<<8)|(HEAPU8[$58+2>>0]<<16)|(HEAPU8[$58+3>>0]<<24);
   $60 = ($59|0)!=(0);
   if ($60) {
    label = 9;
   } else {
    $61 = $0;
    $62 = ((($61)) + 71|0);
    $63 = HEAPU8[$62>>0]|(HEAPU8[$62+1>>0]<<8)|(HEAPU8[$62+2>>0]<<16)|(HEAPU8[$62+3>>0]<<24);
    $64 = ((($63)) + 164|0);
    $65 = HEAPU8[$64>>0]|(HEAPU8[$64+1>>0]<<8)|(HEAPU8[$64+2>>0]<<16)|(HEAPU8[$64+3>>0]<<24);
    $106 = $65;
   }
  } else {
   label = 9;
  }
  if ((label|0) == 9) {
   $66 = $0;
   $67 = ((($66)) + 143|0);
   $68 = HEAPU8[$67>>0]|(HEAPU8[$67+1>>0]<<8)|(HEAPU8[$67+2>>0]<<16)|(HEAPU8[$67+3>>0]<<24);
   $106 = $68;
  }
  $69 = $0;
  $70 = ((($69)) + 71|0);
  $71 = HEAPU8[$70>>0]|(HEAPU8[$70+1>>0]<<8)|(HEAPU8[$70+2>>0]<<16)|(HEAPU8[$70+3>>0]<<24);
  $72 = ($71|0)!=(0|0);
  if ($72) {
   $73 = $0;
   $74 = ((($73)) + 79|0);
   $75 = HEAPU8[$74>>0]|(HEAPU8[$74+1>>0]<<8)|(HEAPU8[$74+2>>0]<<16)|(HEAPU8[$74+3>>0]<<24);
   $76 = ($75|0)!=(0);
   if ($76) {
    label = 13;
   } else {
    $77 = $0;
    $78 = ((($77)) + 71|0);
    $79 = HEAPU8[$78>>0]|(HEAPU8[$78+1>>0]<<8)|(HEAPU8[$78+2>>0]<<16)|(HEAPU8[$78+3>>0]<<24);
    $80 = ((($79)) + 168|0);
    $81 = HEAPU8[$80>>0]|(HEAPU8[$80+1>>0]<<8);
    $$sink = $81;
   }
  } else {
   label = 13;
  }
  if ((label|0) == 13) {
   $82 = $0;
   $83 = ((($82)) + 147|0);
   $84 = HEAPU8[$83>>0]|(HEAPU8[$83+1>>0]<<8);
   $$sink = $84;
  }
  $85 = $$sink&65535;
  $86 = $85&65535;
  $87 = $0;
  $88 = ((($87)) + 71|0);
  $89 = HEAPU8[$88>>0]|(HEAPU8[$88+1>>0]<<8)|(HEAPU8[$88+2>>0]<<16)|(HEAPU8[$88+3>>0]<<24);
  $90 = ($89|0)!=(0|0);
  if ($90) {
   $91 = $0;
   $92 = ((($91)) + 79|0);
   $93 = HEAPU8[$92>>0]|(HEAPU8[$92+1>>0]<<8)|(HEAPU8[$92+2>>0]<<16)|(HEAPU8[$92+3>>0]<<24);
   $94 = ($93|0)!=(0);
   if ($94) {
    label = 17;
   } else {
    $95 = $0;
    $96 = ((($95)) + 71|0);
    $97 = HEAPU8[$96>>0]|(HEAPU8[$96+1>>0]<<8)|(HEAPU8[$96+2>>0]<<16)|(HEAPU8[$96+3>>0]<<24);
    $98 = ((($97)) + 170|0);
    $99 = HEAPU8[$98>>0]|(HEAPU8[$98+1>>0]<<8);
    $$sink1 = $99;
   }
  } else {
   label = 17;
  }
  if ((label|0) == 17) {
   $100 = $0;
   $101 = ((($100)) + 149|0);
   $102 = HEAPU8[$101>>0]|(HEAPU8[$101+1>>0]<<8);
   $$sink1 = $102;
  }
  $103 = $$sink1&65535;
  $104 = $103&65535;
  $105 = $result;
  FUNCTION_TABLE_viiiiiiii[$41 & 127]($42,$45,$49,$52,$106,$86,$104,$105);
 }
 $107 = $result;
 $108 = ($107|0)==(2);
 if (!($108)) {
  $117 = $result;
  STACKTOP = sp;return ($117|0);
 }
 $109 = $0;
 $110 = ((($109)) + 135|0);
 HEAP8[$110>>0]=0&255;HEAP8[$110+1>>0]=(0>>8)&255;HEAP8[$110+2>>0]=(0>>16)&255;HEAP8[$110+3>>0]=0>>24;
 $111 = $0;
 $112 = ((($111)) + 139|0);
 HEAP8[$112>>0]=0&255;HEAP8[$112+1>>0]=(0>>8)&255;HEAP8[$112+2>>0]=(0>>16)&255;HEAP8[$112+3>>0]=0>>24;
 $113 = $0;
 $114 = ((($113)) + 134|0);
 $115 = HEAP8[$114>>0]|0;
 $116 = $115 & -2;
 HEAP8[$114>>0] = $116;
 $117 = $result;
 STACKTOP = sp;return ($117|0);
}
function __end_routine($s) {
 $s = $s|0;
 var $$sink = 0, $$sink1 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $context = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $s;
 $context = 0;
 $2 = $1;
 $3 = ($2|0)!=(0|0);
 if (!($3)) {
  ___assert_fail((4803|0),(4322|0),8805,(8514|0));
  // unreachable;
 }
 $4 = $1;
 $5 = ((($4)) + 71|0);
 $6 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
 $context = $6;
 $7 = $context;
 $8 = ((($7)) + 160|0);
 $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8);
 $10 = ($9<<16>>16)!=(0);
 if ($10) {
  $96 = $context;
  $97 = ((($96)) + 160|0);
  $98 = HEAPU8[$97>>0]|(HEAPU8[$97+1>>0]<<8);
  $99 = (($98) + -1)<<16>>16;
  HEAP8[$97>>0]=$99&255;HEAP8[$97+1>>0]=$99>>8;
  $0 = 1;
  $100 = $0;
  STACKTOP = sp;return ($100|0);
 }
 $11 = $1;
 $12 = $1;
 $13 = ((($12)) + 67|0);
 $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
 (__set_current_error($11,53,$14)|0);
 $15 = $1;
 $16 = ((($15)) + 163|0);
 $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
 $18 = ($17|0)!=(0|0);
 if ($18) {
  $19 = $1;
  $20 = ((($19)) + 134|0);
  $21 = HEAP8[$20>>0]|0;
  $22 = $21 & 1;
  $23 = ($22<<24>>24)!=(0);
  if (!($23)) {
   $24 = $1;
   $25 = ((($24)) + 134|0);
   $26 = HEAP8[$25>>0]|0;
   $27 = $26 & -2;
   $28 = $27 | 1;
   HEAP8[$25>>0] = $28;
   $29 = $1;
   $30 = ((($29)) + 163|0);
   $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8)|(HEAPU8[$30+2>>0]<<16)|(HEAPU8[$30+3>>0]<<24);
   $32 = $1;
   $33 = $1;
   $34 = ((($33)) + 135|0);
   $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
   $36 = $1;
   $37 = ((($36)) + 135|0);
   $38 = HEAPU8[$37>>0]|(HEAPU8[$37+1>>0]<<8)|(HEAPU8[$37+2>>0]<<16)|(HEAPU8[$37+3>>0]<<24);
   $39 = (_mb_get_error_desc($38)|0);
   $40 = $1;
   $41 = ((($40)) + 139|0);
   $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
   $43 = $1;
   $44 = ((($43)) + 71|0);
   $45 = HEAPU8[$44>>0]|(HEAPU8[$44+1>>0]<<8)|(HEAPU8[$44+2>>0]<<16)|(HEAPU8[$44+3>>0]<<24);
   $46 = ($45|0)!=(0|0);
   if ($46) {
    $47 = $1;
    $48 = ((($47)) + 79|0);
    $49 = HEAPU8[$48>>0]|(HEAPU8[$48+1>>0]<<8)|(HEAPU8[$48+2>>0]<<16)|(HEAPU8[$48+3>>0]<<24);
    $50 = ($49|0)!=(0);
    if ($50) {
     label = 9;
    } else {
     $51 = $1;
     $52 = ((($51)) + 71|0);
     $53 = HEAPU8[$52>>0]|(HEAPU8[$52+1>>0]<<8)|(HEAPU8[$52+2>>0]<<16)|(HEAPU8[$52+3>>0]<<24);
     $54 = ((($53)) + 164|0);
     $55 = HEAPU8[$54>>0]|(HEAPU8[$54+1>>0]<<8)|(HEAPU8[$54+2>>0]<<16)|(HEAPU8[$54+3>>0]<<24);
     $95 = $55;
    }
   } else {
    label = 9;
   }
   if ((label|0) == 9) {
    $56 = $1;
    $57 = ((($56)) + 143|0);
    $58 = HEAPU8[$57>>0]|(HEAPU8[$57+1>>0]<<8)|(HEAPU8[$57+2>>0]<<16)|(HEAPU8[$57+3>>0]<<24);
    $95 = $58;
   }
   $59 = $1;
   $60 = ((($59)) + 71|0);
   $61 = HEAPU8[$60>>0]|(HEAPU8[$60+1>>0]<<8)|(HEAPU8[$60+2>>0]<<16)|(HEAPU8[$60+3>>0]<<24);
   $62 = ($61|0)!=(0|0);
   if ($62) {
    $63 = $1;
    $64 = ((($63)) + 79|0);
    $65 = HEAPU8[$64>>0]|(HEAPU8[$64+1>>0]<<8)|(HEAPU8[$64+2>>0]<<16)|(HEAPU8[$64+3>>0]<<24);
    $66 = ($65|0)!=(0);
    if ($66) {
     label = 13;
    } else {
     $67 = $1;
     $68 = ((($67)) + 71|0);
     $69 = HEAPU8[$68>>0]|(HEAPU8[$68+1>>0]<<8)|(HEAPU8[$68+2>>0]<<16)|(HEAPU8[$68+3>>0]<<24);
     $70 = ((($69)) + 168|0);
     $71 = HEAPU8[$70>>0]|(HEAPU8[$70+1>>0]<<8);
     $$sink = $71;
    }
   } else {
    label = 13;
   }
   if ((label|0) == 13) {
    $72 = $1;
    $73 = ((($72)) + 147|0);
    $74 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8);
    $$sink = $74;
   }
   $75 = $$sink&65535;
   $76 = $75&65535;
   $77 = $1;
   $78 = ((($77)) + 71|0);
   $79 = HEAPU8[$78>>0]|(HEAPU8[$78+1>>0]<<8)|(HEAPU8[$78+2>>0]<<16)|(HEAPU8[$78+3>>0]<<24);
   $80 = ($79|0)!=(0|0);
   if ($80) {
    $81 = $1;
    $82 = ((($81)) + 79|0);
    $83 = HEAPU8[$82>>0]|(HEAPU8[$82+1>>0]<<8)|(HEAPU8[$82+2>>0]<<16)|(HEAPU8[$82+3>>0]<<24);
    $84 = ($83|0)!=(0);
    if ($84) {
     label = 17;
    } else {
     $85 = $1;
     $86 = ((($85)) + 71|0);
     $87 = HEAPU8[$86>>0]|(HEAPU8[$86+1>>0]<<8)|(HEAPU8[$86+2>>0]<<16)|(HEAPU8[$86+3>>0]<<24);
     $88 = ((($87)) + 170|0);
     $89 = HEAPU8[$88>>0]|(HEAPU8[$88+1>>0]<<8);
     $$sink1 = $89;
    }
   } else {
    label = 17;
   }
   if ((label|0) == 17) {
    $90 = $1;
    $91 = ((($90)) + 149|0);
    $92 = HEAPU8[$91>>0]|(HEAPU8[$91+1>>0]<<8);
    $$sink1 = $92;
   }
   $93 = $$sink1&65535;
   $94 = $93&65535;
   FUNCTION_TABLE_viiiiiiii[$31 & 127]($32,$35,$39,$42,$95,$76,$94,3);
  }
 }
 $0 = 0;
 $100 = $0;
 STACKTOP = sp;return ($100|0);
}
function __core_neg($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0.0, $99 = 0.0, $__hr = 0, $__hr1 = 0, $__hr2 = 0, $__hr3 = 0, $__hr4 = 0, $__hr5 = 0, $__hr6 = 0, $__hr7 = 0, $__hr8 = 0, $__hr9 = 0, $arg = 0, $arg$byval_copy = 0, $arg$byval_copy2 = 0;
 var $arg$byval_copy3 = 0, $ast = 0, $calc_depth = 0, $inep = 0, $neg = 0, $obj = 0, $or$cond = 0, $result = 0, $running = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $arg$byval_copy3 = sp + 96|0;
 $arg$byval_copy2 = sp + 88|0;
 $arg$byval_copy = sp + 80|0;
 $arg = sp + 128|0;
 $obj = sp + 104|0;
 $1 = $s;
 $2 = $l;
 $result = 0;
 $ast = 0;
 $running = 0;
 $inep = 0;
 $calc_depth = 0;
 $3 = $1;
 $4 = ($3|0)!=(0|0);
 $5 = $2;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),15149,(8504|0));
  // unreachable;
 }
 $7 = $1;
 $8 = ((($7)) + 75|0);
 $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
 $running = $9;
 $10 = $2;
 $11 = HEAP32[$10>>2]|0;
 $ast = $11;
 $12 = $ast;
 $13 = ($12|0)!=(0|0);
 if ($13) {
  $14 = $ast;
  $15 = ((($14)) + 8|0);
  $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
  $ast = $16;
 }
 $17 = $1;
 $18 = ((($17)) + 122|0);
 $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
 $20 = (__ls_empty($19)|0);
 $21 = ($20<<24>>24)!=(0);
 if (!($21)) {
  $22 = $1;
  $23 = ((($22)) + 122|0);
  $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
  $25 = (__ls_back($24)|0);
  $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
  $inep = $26;
 }
 $27 = $inep;
 $28 = ($27|0)!=(0|0);
 if ($28) {
  $29 = $inep;
  $30 = HEAP32[$29>>2]|0;
  $31 = (($30) + 1)|0;
  HEAP32[$29>>2] = $31;
 }
 $32 = $running;
 $33 = ((($32)) + 28|0);
 $34 = HEAPU8[$33>>0]|(HEAPU8[$33+1>>0]<<8)|(HEAPU8[$33+2>>0]<<16)|(HEAPU8[$33+3>>0]<<24);
 $calc_depth = $34;
 $35 = ((($arg)) + 4|0);
 ;HEAP8[$35>>0]=0|0;HEAP8[$35+1>>0]=0|0;HEAP8[$35+2>>0]=0|0;HEAP8[$35+3>>0]=0|0;
 HEAP8[$arg>>0]=0&255;HEAP8[$arg+1>>0]=(0>>8)&255;HEAP8[$arg+2>>0]=(0>>16)&255;HEAP8[$arg+3>>0]=0>>24;
 $36 = $ast;
 $37 = ($36|0)!=(0|0);
 if ($37) {
  $38 = $ast;
  $39 = HEAPU8[$38>>0]|(HEAPU8[$38+1>>0]<<8)|(HEAPU8[$38+2>>0]<<16)|(HEAPU8[$38+3>>0]<<24);
  $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8)|(HEAPU8[$39+2>>0]<<16)|(HEAPU8[$39+3>>0]<<24);
  $41 = ($40|0)==(8);
  if ($41) {
   $42 = $ast;
   $43 = HEAPU8[$42>>0]|(HEAPU8[$42+1>>0]<<8)|(HEAPU8[$42+2>>0]<<16)|(HEAPU8[$42+3>>0]<<24);
   $44 = ((($43)) + 4|0);
   $45 = HEAPU8[$44>>0]|(HEAPU8[$44+1>>0]<<8)|(HEAPU8[$44+2>>0]<<16)|(HEAPU8[$44+3>>0]<<24);
   $46 = ((($45)) + 4|0);
   $47 = HEAPU8[$46>>0]|(HEAPU8[$46+1>>0]<<8)|(HEAPU8[$46+2>>0]<<16)|(HEAPU8[$46+3>>0]<<24);
   $48 = ($47|0)==(7|0);
   if ($48) {
    $49 = $1;
    $50 = $2;
    $51 = (_mb_attempt_open_bracket($49,$50)|0);
    $__hr = $51;
    $52 = $__hr;
    $53 = ($52|0)!=(0);
    if ($53) {
     $54 = $__hr;
     $0 = $54;
     $186 = $0;
     STACKTOP = sp;return ($186|0);
    }
    $55 = $1;
    $56 = $2;
    $57 = (_mb_pop_value($55,$56,$arg)|0);
    $__hr1 = $57;
    $58 = $__hr1;
    $59 = ($58|0)!=(0);
    if ($59) {
     $60 = $__hr1;
     $0 = $60;
     $186 = $0;
     STACKTOP = sp;return ($186|0);
    }
    $61 = $1;
    $62 = $2;
    $63 = (_mb_attempt_close_bracket($61,$62)|0);
    $__hr2 = $63;
    $64 = $__hr2;
    $65 = ($64|0)!=(0);
    if ($65) {
     $66 = $__hr2;
     $0 = $66;
     $186 = $0;
     STACKTOP = sp;return ($186|0);
    }
   } else {
    label = 18;
   }
  } else {
   label = 18;
  }
 } else {
  label = 18;
 }
 if ((label|0) == 18) {
  $67 = $running;
  $68 = ((($67)) + 28|0);
  HEAP8[$68>>0]=1&255;HEAP8[$68+1>>0]=(1>>8)&255;HEAP8[$68+2>>0]=(1>>16)&255;HEAP8[$68+3>>0]=1>>24;
  $69 = $1;
  $70 = $2;
  $71 = (_mb_attempt_func_begin($69,$70)|0);
  $__hr3 = $71;
  $72 = $__hr3;
  $73 = ($72|0)!=(0);
  if ($73) {
   $74 = $__hr3;
   $0 = $74;
   $186 = $0;
   STACKTOP = sp;return ($186|0);
  }
  $75 = $1;
  $76 = $2;
  $77 = (_mb_pop_value($75,$76,$arg)|0);
  $__hr4 = $77;
  $78 = $__hr4;
  $79 = ($78|0)!=(0);
  if ($79) {
   $80 = $__hr4;
   $0 = $80;
   $186 = $0;
   STACKTOP = sp;return ($186|0);
  }
  $81 = $1;
  $82 = $2;
  $83 = (_mb_attempt_func_end($81,$82)|0);
  $__hr5 = $83;
  $84 = $__hr5;
  $85 = ($84|0)!=(0);
  if ($85) {
   $86 = $__hr5;
   $0 = $86;
   $186 = $0;
   STACKTOP = sp;return ($186|0);
  }
 }
 $87 = $inep;
 $88 = ($87|0)!=(0|0);
 if ($88) {
  $89 = $inep;
  $90 = HEAP32[$89>>2]|0;
  $91 = (($90) + -1)|0;
  HEAP32[$89>>2] = $91;
 }
 $92 = HEAPU8[$arg>>0]|(HEAPU8[$arg+1>>0]<<8)|(HEAPU8[$arg+2>>0]<<16)|(HEAPU8[$arg+3>>0]<<24);
 switch ($92|0) {
 case 2:  {
  $93 = ((($arg)) + 4|0);
  $94 = HEAPU8[$93>>0]|(HEAPU8[$93+1>>0]<<8)|(HEAPU8[$93+2>>0]<<16)|(HEAPU8[$93+3>>0]<<24);
  $95 = (0 - ($94))|0;
  $96 = ((($arg)) + 4|0);
  HEAP8[$96>>0]=$95&255;HEAP8[$96+1>>0]=($95>>8)&255;HEAP8[$96+2>>0]=($95>>16)&255;HEAP8[$96+3>>0]=$95>>24;
  break;
 }
 case 4:  {
  $97 = ((($arg)) + 4|0);
  HEAP8[tempDoublePtr>>0]=HEAP8[$97>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$97+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$97+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$97+3>>0];$98 = +HEAPF32[tempDoublePtr>>2];
  $99 = -$98;
  $100 = ((($arg)) + 4|0);
  HEAPF32[tempDoublePtr>>2]=$99;HEAP8[$100>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$100+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$100+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$100+3>>0]=HEAP8[tempDoublePtr+3>>0];
  break;
 }
 case 64:  {
  dest=$obj; stop=dest+17|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
  HEAP8[$obj>>0]=0&255;HEAP8[$obj+1>>0]=(0>>8)&255;HEAP8[$obj+2>>0]=(0>>16)&255;HEAP8[$obj+3>>0]=0>>24;
  (__public_value_to_internal_object($arg,$obj)|0);
  $101 = ((($obj)) + 4|0);
  $102 = HEAPU8[$101>>0]|(HEAPU8[$101+1>>0]<<8)|(HEAPU8[$101+2>>0]<<16)|(HEAPU8[$101+3>>0]<<24);
  $103 = ((($102)) + 45|0);
  $104 = HEAPU8[$103>>0]|(HEAPU8[$103+1>>0]<<8)|(HEAPU8[$103+2>>0]<<16)|(HEAPU8[$103+3>>0]<<24);
  $105 = ($104|0)!=(0|0);
  if ($105) {
   $106 = ((($obj)) + 4|0);
   $107 = HEAPU8[$106>>0]|(HEAPU8[$106+1>>0]<<8)|(HEAPU8[$106+2>>0]<<16)|(HEAPU8[$106+3>>0]<<24);
   $108 = ((($107)) + 45|0);
   $109 = HEAPU8[$108>>0]|(HEAPU8[$108+1>>0]<<8)|(HEAPU8[$108+2>>0]<<16)|(HEAPU8[$108+3>>0]<<24);
   $110 = ((($109)) + 20|0);
   $111 = HEAPU8[$110>>0]|(HEAPU8[$110+1>>0]<<8)|(HEAPU8[$110+2>>0]<<16)|(HEAPU8[$110+3>>0]<<24);
   $112 = ($111|0)!=(0|0);
   if ($112) {
    $113 = ((($obj)) + 4|0);
    $114 = HEAPU8[$113>>0]|(HEAPU8[$113+1>>0]<<8)|(HEAPU8[$113+2>>0]<<16)|(HEAPU8[$113+3>>0]<<24);
    $115 = ((($114)) + 45|0);
    $116 = HEAPU8[$115>>0]|(HEAPU8[$115+1>>0]<<8)|(HEAPU8[$115+2>>0]<<16)|(HEAPU8[$115+3>>0]<<24);
    $117 = ((($116)) + 20|0);
    $118 = HEAPU8[$117>>0]|(HEAPU8[$117+1>>0]<<8)|(HEAPU8[$117+2>>0]<<16)|(HEAPU8[$117+3>>0]<<24);
    $neg = $118;
    $119 = $1;
    $120 = $2;
    ;HEAP32[$arg$byval_copy>>2]=HEAP32[$arg>>2]|0;HEAP32[$arg$byval_copy+4>>2]=HEAP32[$arg+4>>2]|0;
    $121 = (_mb_ref_value($119,$120,$arg$byval_copy)|0);
    $__hr6 = $121;
    $122 = $__hr6;
    $123 = ($122|0)!=(0);
    if ($123) {
     $124 = $__hr6;
     $0 = $124;
     $186 = $0;
     STACKTOP = sp;return ($186|0);
    }
    $125 = $1;
    $126 = $2;
    ;HEAP32[$arg$byval_copy2>>2]=HEAP32[$arg>>2]|0;HEAP32[$arg$byval_copy2+4>>2]=HEAP32[$arg+4>>2]|0;
    $127 = (_mb_unref_value($125,$126,$arg$byval_copy2)|0);
    $__hr7 = $127;
    $128 = $__hr7;
    $129 = ($128|0)!=(0);
    if ($129) {
     $130 = $__hr7;
     $0 = $130;
     $186 = $0;
     STACKTOP = sp;return ($186|0);
    }
    $131 = $neg;
    $132 = $1;
    $133 = $2;
    $134 = (FUNCTION_TABLE_iiiiii[$131 & 0]($132,$133,$arg,0,$arg)|0);
    $__hr8 = $134;
    $135 = $__hr8;
    $136 = ($135|0)!=(0);
    if ($136) {
     $137 = $__hr8;
     $0 = $137;
     $186 = $0;
     STACKTOP = sp;return ($186|0);
    }
   } else {
    label = 37;
   }
  } else {
   label = 37;
  }
  break;
 }
 default: {
  label = 37;
 }
 }
 do {
  if ((label|0) == 37) {
   $138 = $2;
   $139 = ($138|0)!=(0|0);
   if ($139) {
    $140 = $2;
    $141 = HEAP32[$140>>2]|0;
    $142 = ($141|0)!=(0|0);
    if ($142) {
     $143 = $2;
     $144 = HEAP32[$143>>2]|0;
     $145 = HEAPU8[$144>>0]|(HEAPU8[$144+1>>0]<<8)|(HEAPU8[$144+2>>0]<<16)|(HEAPU8[$144+3>>0]<<24);
     $146 = ($145|0)!=(0|0);
     if ($146) {
      $147 = $1;
      $148 = $1;
      $149 = ((($148)) + 67|0);
      $150 = HEAPU8[$149>>0]|(HEAPU8[$149+1>>0]<<8)|(HEAPU8[$149+2>>0]<<16)|(HEAPU8[$149+3>>0]<<24);
      $151 = (__set_current_error($147,17,$150)|0);
      $152 = ($151<<24>>24)!=(0);
      if (!($152)) {
       break;
      }
      $153 = $1;
      $154 = $2;
      $155 = HEAP32[$154>>2]|0;
      $156 = HEAPU8[$155>>0]|(HEAPU8[$155+1>>0]<<8)|(HEAPU8[$155+2>>0]<<16)|(HEAPU8[$155+3>>0]<<24);
      $157 = ((($156)) + 9|0);
      $158 = HEAPU8[$157>>0]|(HEAPU8[$157+1>>0]<<8)|(HEAPU8[$157+2>>0]<<16)|(HEAPU8[$157+3>>0]<<24);
      $159 = $2;
      $160 = HEAP32[$159>>2]|0;
      $161 = HEAPU8[$160>>0]|(HEAPU8[$160+1>>0]<<8)|(HEAPU8[$160+2>>0]<<16)|(HEAPU8[$160+3>>0]<<24);
      $162 = ((($161)) + 13|0);
      $163 = HEAPU8[$162>>0]|(HEAPU8[$162+1>>0]<<8);
      $164 = $2;
      $165 = HEAP32[$164>>2]|0;
      $166 = HEAPU8[$165>>0]|(HEAPU8[$165+1>>0]<<8)|(HEAPU8[$165+2>>0]<<16)|(HEAPU8[$165+3>>0]<<24);
      $167 = ((($166)) + 15|0);
      $168 = HEAPU8[$167>>0]|(HEAPU8[$167+1>>0]<<8);
      __set_error_pos($153,$158,$163,$168);
      break;
     }
    }
   }
   $169 = $1;
   $170 = $1;
   $171 = ((($170)) + 67|0);
   $172 = HEAPU8[$171>>0]|(HEAPU8[$171+1>>0]<<8)|(HEAPU8[$171+2>>0]<<16)|(HEAPU8[$171+3>>0]<<24);
   $173 = (__set_current_error($169,17,$172)|0);
   $174 = ($173<<24>>24)!=(0);
   if ($174) {
    $175 = $1;
    __set_error_pos($175,0,0,0);
   }
  }
 } while(0);
 $176 = $1;
 $177 = $2;
 ;HEAP32[$arg$byval_copy3>>2]=HEAP32[$arg>>2]|0;HEAP32[$arg$byval_copy3+4>>2]=HEAP32[$arg+4>>2]|0;
 $178 = (_mb_push_value($176,$177,$arg$byval_copy3)|0);
 $__hr9 = $178;
 $179 = $__hr9;
 $180 = ($179|0)!=(0);
 if ($180) {
  $181 = $__hr9;
  $0 = $181;
  $186 = $0;
  STACKTOP = sp;return ($186|0);
 } else {
  $182 = $calc_depth;
  $183 = $running;
  $184 = ((($183)) + 28|0);
  HEAP8[$184>>0]=$182&255;HEAP8[$184+1>>0]=($182>>8)&255;HEAP8[$184+2>>0]=($182>>16)&255;HEAP8[$184+3>>0]=$182>>24;
  $185 = $result;
  $0 = $185;
  $186 = $0;
  STACKTOP = sp;return ($186|0);
 }
 return (0)|0;
}
function __begin_routine_parameter_list($s) {
 $s = $s|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $context = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $context = 0;
 $1 = $0;
 $2 = ($1|0)!=(0|0);
 if ($2) {
  $3 = $0;
  $4 = ((($3)) + 71|0);
  $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
  $context = $5;
  $6 = $context;
  $7 = ((($6)) + 162|0);
  HEAP8[$7>>0]=2&255;HEAP8[$7+1>>0]=2>>8;
  STACKTOP = sp;return;
 } else {
  ___assert_fail((4803|0),(4322|0),8832,(8474|0));
  // unreachable;
 }
}
function __end_routine_parameter_list($s) {
 $s = $s|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $context = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $context = 0;
 $1 = $0;
 $2 = ($1|0)!=(0|0);
 if ($2) {
  $3 = $0;
  $4 = ((($3)) + 71|0);
  $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
  $context = $5;
  $6 = $context;
  $7 = ((($6)) + 162|0);
  HEAP8[$7>>0]=0&255;HEAP8[$7+1>>0]=0>>8;
  STACKTOP = sp;return;
 } else {
  ___assert_fail((4803|0),(4322|0),8842,(8446|0));
  // unreachable;
 }
}
function __begin_routine_definition($s) {
 $s = $s|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $context = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $context = 0;
 $1 = $0;
 $2 = ($1|0)!=(0|0);
 if ($2) {
  $3 = $0;
  $4 = ((($3)) + 71|0);
  $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
  $context = $5;
  $6 = $context;
  $7 = ((($6)) + 162|0);
  HEAP8[$7>>0]=1&255;HEAP8[$7+1>>0]=1>>8;
  STACKTOP = sp;return;
 } else {
  ___assert_fail((4803|0),(4322|0),8822,(8420|0));
  // unreachable;
 }
}
function __clear_array($arr) {
 $arr = $arr|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $elemsize = 0, $pos = 0, $rawptr = 0, $str = 0, $ul = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $arr;
 $str = 0;
 $elemsize = 0;
 $pos = 0;
 $rawptr = 0;
 $ul = 0;
 $1 = $0;
 $2 = ($1|0)!=(0|0);
 if (!($2)) {
  ___assert_fail((8576|0),(4322|0),7451,(8580|0));
  // unreachable;
 }
 $3 = $0;
 $4 = ((($3)) + 25|0);
 $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
 $6 = ($5|0)!=(0|0);
 if (!($6)) {
  STACKTOP = sp;return;
 }
 $7 = $0;
 $8 = ((($7)) + 21|0);
 $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
 $10 = ($9|0)==(4);
 L7: do {
  if ($10) {
   $ul = 0;
   while(1) {
    $11 = $ul;
    $12 = $0;
    $13 = ((($12)) + 29|0);
    $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
    $15 = ($11>>>0)<($14>>>0);
    if (!($15)) {
     break L7;
    }
    $16 = $0;
    $17 = ((($16)) + 21|0);
    $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
    $19 = (__get_size_of($18)|0);
    $elemsize = $19;
    $20 = $elemsize;
    $21 = $ul;
    $22 = Math_imul($20, $21)|0;
    $pos = $22;
    $23 = $0;
    $24 = ((($23)) + 25|0);
    $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
    $26 = $25;
    $27 = $pos;
    $28 = (($26) + ($27))|0;
    $29 = $28;
    $rawptr = $29;
    $30 = $rawptr;
    $31 = HEAP32[$30>>2]|0;
    $str = $31;
    $32 = $str;
    $33 = ($32|0)!=(0|0);
    if ($33) {
     $34 = $str;
     $35 = ($34|0)!=(0|0);
     if (!($35)) {
      break;
     }
     $36 = $str;
     _mb_free($36);
     $str = 0;
    }
    $37 = $ul;
    $38 = (($37) + 1)|0;
    $ul = $38;
   }
   ___assert_fail((4369|0),(4322|0),7481,(8580|0));
   // unreachable;
  }
 } while(0);
 $39 = $0;
 $40 = ((($39)) + 25|0);
 $41 = HEAPU8[$40>>0]|(HEAPU8[$40+1>>0]<<8)|(HEAPU8[$40+2>>0]<<16)|(HEAPU8[$40+3>>0]<<24);
 $42 = ($41|0)!=(0|0);
 if (!($42)) {
  ___assert_fail((4369|0),(4322|0),7485,(8580|0));
  // unreachable;
 }
 $43 = $0;
 $44 = ((($43)) + 25|0);
 $45 = HEAPU8[$44>>0]|(HEAPU8[$44+1>>0]<<8)|(HEAPU8[$44+2>>0]<<16)|(HEAPU8[$44+3>>0]<<24);
 _mb_free($45);
 $46 = $0;
 $47 = ((($46)) + 25|0);
 HEAP8[$47>>0]=0&255;HEAP8[$47+1>>0]=(0>>8)&255;HEAP8[$47+2>>0]=(0>>16)&255;HEAP8[$47+3>>0]=0>>24;
 STACKTOP = sp;return;
}
function __get_size_of($type) {
 $type = $type|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $type;
 $result = 0;
 $1 = $0;
 $2 = ($1|0)==(2);
 do {
  if ($2) {
   $result = 4;
  } else {
   $3 = $0;
   $4 = ($3|0)==(3);
   if ($4) {
    $result = 4;
    break;
   }
   $5 = $0;
   $6 = ($5|0)==(4);
   if ($6) {
    $result = 4;
    break;
   } else {
    ___assert_fail((8593|0),(4322|0),6122,(8613|0));
    // unreachable;
   }
  }
 } while(0);
 $7 = $result;
 STACKTOP = sp;return ($7|0);
}
function __is_internal_object($obj) {
 $obj = $obj|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $obj;
 $result = 0;
 $1 = $0;
 $2 = ($1|0)!=(0|0);
 if (!($2)) {
  ___assert_fail((4972|0),(4322|0),10240,(9011|0));
  // unreachable;
 }
 $3 = HEAP32[304>>2]|0;
 $4 = $0;
 $5 = ($3|0)==($4|0);
 if ($5) {
  $13 = 1;
 } else {
  $6 = HEAP32[308>>2]|0;
  $7 = $0;
  $8 = ($6|0)==($7|0);
  if ($8) {
   $13 = 1;
  } else {
   $9 = HEAP32[312>>2]|0;
   $10 = $0;
   $11 = ($9|0)==($10|0);
   $13 = $11;
  }
 }
 $12 = $13&1;
 $14 = $12&255;
 $result = $14;
 $15 = $result;
 STACKTOP = sp;return ($15|0);
}
function __weak_unref($weak) {
 $weak = $weak|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $weak;
 $result = 1;
 $1 = $0;
 $2 = ((($1)) + 4|0);
 $3 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
 $4 = HEAP32[$3>>2]|0;
 $5 = (($4) + -1)|0;
 HEAP32[$3>>2] = $5;
 $6 = $0;
 $7 = ((($6)) + 4|0);
 $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
 $9 = HEAP32[$8>>2]|0;
 $10 = ($9>>>0)>=(1);
 if (!($10)) {
  ___assert_fail((9070|0),(4322|0),6414,(9093|0));
  // unreachable;
 }
 $11 = $0;
 $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
 $13 = ($12|0)!=(0|0);
 if ($13) {
  $14 = $0;
  $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
  $16 = HEAP32[$15>>2]|0;
  $17 = ($16|0)==(1);
  if ($17) {
   $result = 0;
  }
 }
 $18 = $0;
 $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
 $20 = ($19|0)!=(0|0);
 if (!($20)) {
  $49 = $result;
  STACKTOP = sp;return ($49|0);
 }
 $21 = $0;
 $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
 $23 = HEAP32[$22>>2]|0;
 $24 = ($23|0)==(1);
 if (!($24)) {
  $49 = $result;
  STACKTOP = sp;return ($49|0);
 }
 $25 = $0;
 $26 = ((($25)) + 4|0);
 $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
 $28 = ($27|0)!=(0|0);
 if (!($28)) {
  $49 = $result;
  STACKTOP = sp;return ($49|0);
 }
 $29 = $0;
 $30 = ((($29)) + 4|0);
 $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8)|(HEAPU8[$30+2>>0]<<16)|(HEAPU8[$30+3>>0]<<24);
 $32 = HEAP32[$31>>2]|0;
 $33 = ($32|0)==(1);
 if (!($33)) {
  $49 = $result;
  STACKTOP = sp;return ($49|0);
 }
 $34 = $0;
 $35 = ((($34)) + 4|0);
 $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
 $37 = ($36|0)!=(0|0);
 if (!($37)) {
  ___assert_fail((4369|0),(4322|0),6418,(9093|0));
  // unreachable;
 }
 $38 = $0;
 $39 = ((($38)) + 4|0);
 $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8)|(HEAPU8[$39+2>>0]<<16)|(HEAPU8[$39+3>>0]<<24);
 _mb_free($40);
 $41 = $0;
 $42 = ((($41)) + 4|0);
 HEAP8[$42>>0]=0&255;HEAP8[$42+1>>0]=(0>>8)&255;HEAP8[$42+2>>0]=(0>>16)&255;HEAP8[$42+3>>0]=0>>24;
 $43 = $0;
 $44 = HEAPU8[$43>>0]|(HEAPU8[$43+1>>0]<<8)|(HEAPU8[$43+2>>0]<<16)|(HEAPU8[$43+3>>0]<<24);
 $45 = ($44|0)!=(0|0);
 if (!($45)) {
  ___assert_fail((4369|0),(4322|0),6419,(9093|0));
  // unreachable;
 }
 $46 = $0;
 $47 = HEAPU8[$46>>0]|(HEAPU8[$46+1>>0]<<8)|(HEAPU8[$46+2>>0]<<16)|(HEAPU8[$46+3>>0]<<24);
 _mb_free($47);
 $48 = $0;
 HEAP8[$48>>0]=0&255;HEAP8[$48+1>>0]=(0>>8)&255;HEAP8[$48+2>>0]=(0>>16)&255;HEAP8[$48+3>>0]=0>>24;
 $49 = $result;
 STACKTOP = sp;return ($49|0);
}
function __unlock_ref_object($lk,$ref,$obj) {
 $lk = $lk|0;
 $ref = $ref|0;
 $obj = $obj|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $lk;
 $1 = $ref;
 $2 = $obj;
 $result = 1;
 $3 = $0;
 $4 = ($3|0)!=(0|0);
 if (!($4)) {
  ___assert_fail((5508|0),(4322|0),6287,(9051|0));
  // unreachable;
 }
 $5 = $0;
 $6 = HEAP16[$5>>1]|0;
 $7 = $6 << 16 >> 16;
 $8 = ($7|0)>(0);
 $9 = $0;
 $10 = HEAP16[$9>>1]|0;
 do {
  if ($8) {
   $11 = (($10) + -1)<<16>>16;
   HEAP16[$9>>1] = $11;
  } else {
   $12 = $10 << 16 >> 16;
   $13 = ($12|0)<(0);
   if ($13) {
    $14 = $0;
    $15 = HEAP16[$14>>1]|0;
    $16 = (($15) + 1)<<16>>16;
    HEAP16[$14>>1] = $16;
    break;
   } else {
    $result = 0;
    break;
   }
  }
 } while(0);
 $17 = $1;
 $18 = $2;
 (__unref($17,$18)|0);
 $19 = $result;
 STACKTOP = sp;return ($19|0);
}
function __eval_script_routine($s,$l,$va,$ca,$r,$has_arg,$pop_arg) {
 $s = $s|0;
 $l = $l|0;
 $va = $va|0;
 $ca = $ca|0;
 $r = $r|0;
 $has_arg = $has_arg|0;
 $pop_arg = $pop_arg|0;
 var $$sink = 0, $$sink10 = 0, $$sink6 = 0, $$sink7 = 0, $$sink8 = 0, $$sink9 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0;
 var $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0;
 var $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0;
 var $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0;
 var $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0;
 var $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0;
 var $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0;
 var $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0;
 var $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0;
 var $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0;
 var $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0;
 var $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0;
 var $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0;
 var $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0;
 var $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0;
 var $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0;
 var $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0;
 var $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0;
 var $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0;
 var $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0;
 var $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0;
 var $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0;
 var $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0;
 var $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0;
 var $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0;
 var $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0;
 var $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0;
 var $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__hr = 0, $ast = 0, $inte = 0, $last_inst = 0, $lastr = 0;
 var $lastv = 0, $obj = 0, $or$cond = 0, $or$cond3 = 0, $or$cond5 = 0, $pushed_inst = 0, $result = 0, $running = 0, $same_inst = 0, $succ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ast = sp + 24|0;
 $inte = sp + 72|0;
 $1 = $s;
 $2 = $l;
 $3 = $va;
 $4 = $ca;
 $5 = $r;
 $6 = $has_arg;
 $7 = $pop_arg;
 $result = 0;
 HEAP32[$ast>>2] = 0;
 $obj = 0;
 $running = 0;
 $lastr = 0;
 $lastv = 0;
 $succ = 0;
 $pushed_inst = 0;
 $last_inst = 0;
 $8 = $1;
 $9 = ((($8)) + 98|0);
 $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
 $11 = ($10|0)!=(0|0);
 if ($11) {
  $12 = $1;
  $13 = ((($12)) + 98|0);
  $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
  $15 = ((($14)) + 53|0);
  $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
  $17 = $5;
  $18 = ((($17)) + 53|0);
  $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
  $20 = ($16|0)==($19|0);
  $21 = $20&1;
  $23 = $21;
 } else {
  $23 = 0;
 }
 $22 = $23&255;
 $same_inst = $22;
 $24 = $1;
 $25 = ($24|0)!=(0|0);
 $26 = $2;
 $27 = ($26|0)!=(0|0);
 $or$cond = $25 & $27;
 if ($or$cond) {
 }
 $28 = $1;
 $29 = ($28|0)!=(0|0);
 $30 = $2;
 $31 = ($30|0)!=(0|0);
 $or$cond3 = $29 & $31;
 $32 = $5;
 $33 = ($32|0)!=(0|0);
 $or$cond5 = $or$cond3 & $33;
 if (!($or$cond5)) {
  ___assert_fail((9154|0),(4322|0),4491,(9863|0));
  // unreachable;
 }
 $34 = $3;
 $35 = ($34|0)!=(0|0);
 do {
  if ($35) {
   label = 23;
  } else {
   $36 = $1;
   $37 = ((($36)) + 98|0);
   $38 = HEAPU8[$37>>0]|(HEAPU8[$37+1>>0]<<8)|(HEAPU8[$37+2>>0]<<16)|(HEAPU8[$37+3>>0]<<24);
   $39 = ($38|0)!=(0|0);
   if ($39) {
    $40 = $1;
    $41 = ((($40)) + 98|0);
    $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
    $43 = ((($42)) + 4|0);
    $44 = HEAPU8[$43>>0]|(HEAPU8[$43+1>>0]<<8)|(HEAPU8[$43+2>>0]<<16)|(HEAPU8[$43+3>>0]<<24);
    $45 = ($44|0)!=(0|0);
    if ($45) {
     label = 23;
    } else {
     $46 = $same_inst;
     $47 = $46&255;
     $48 = ($47|0)!=(0);
     if ($48) {
      $49 = $1;
      $50 = ((($49)) + 98|0);
      $51 = HEAPU8[$50>>0]|(HEAPU8[$50+1>>0]<<8)|(HEAPU8[$50+2>>0]<<16)|(HEAPU8[$50+3>>0]<<24);
      $52 = ((($51)) + 45|0);
      $53 = HEAPU8[$52>>0]|(HEAPU8[$52+1>>0]<<8)|(HEAPU8[$52+2>>0]<<16)|(HEAPU8[$52+3>>0]<<24);
      $54 = $5;
      $55 = ((($54)) + 45|0);
      $56 = HEAPU8[$55>>0]|(HEAPU8[$55+1>>0]<<8)|(HEAPU8[$55+2>>0]<<16)|(HEAPU8[$55+3>>0]<<24);
      $57 = ($53|0)==($56|0);
      if (!($57)) {
       $58 = $1;
       $59 = ((($58)) + 98|0);
       $60 = HEAPU8[$59>>0]|(HEAPU8[$59+1>>0]<<8)|(HEAPU8[$59+2>>0]<<16)|(HEAPU8[$59+3>>0]<<24);
       $61 = ((($60)) + 45|0);
       $62 = HEAPU8[$61>>0]|(HEAPU8[$61+1>>0]<<8)|(HEAPU8[$61+2>>0]<<16)|(HEAPU8[$61+3>>0]<<24);
       $63 = $5;
       $64 = ((($63)) + 45|0);
       $65 = HEAPU8[$64>>0]|(HEAPU8[$64+1>>0]<<8)|(HEAPU8[$64+2>>0]<<16)|(HEAPU8[$64+3>>0]<<24);
       $66 = (_strcmp($62,$65)|0);
       $67 = ($66|0)!=(0);
       if ($67) {
        label = 23;
        break;
       }
      }
      $68 = $2;
      $69 = HEAP32[$68>>2]|0;
      HEAP32[$ast>>2] = $69;
      $70 = $1;
      (__skip_to($70,$ast,0,22)|0);
      $71 = HEAP32[$ast>>2]|0;
      $72 = ($71|0)!=(0|0);
      if ($72) {
       $73 = HEAP32[$ast>>2]|0;
       $74 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
       $obj = $74;
      }
      $75 = $obj;
      $76 = ($75|0)!=(0|0);
      if ($76) {
       $77 = $obj;
       $78 = HEAPU8[$77>>0]|(HEAPU8[$77+1>>0]<<8)|(HEAPU8[$77+2>>0]<<16)|(HEAPU8[$77+3>>0]<<24);
       $79 = ($78|0)==(22);
       if ($79) {
        $80 = HEAP32[$ast>>2]|0;
        $81 = ((($80)) + 8|0);
        $82 = HEAPU8[$81>>0]|(HEAPU8[$81+1>>0]<<8)|(HEAPU8[$81+2>>0]<<16)|(HEAPU8[$81+3>>0]<<24);
        HEAP32[$ast>>2] = $82;
       }
      }
      $83 = HEAP32[$ast>>2]|0;
      $84 = ($83|0)!=(0|0);
      if ($84) {
       $85 = HEAP32[$ast>>2]|0;
       $86 = HEAPU8[$85>>0]|(HEAPU8[$85+1>>0]<<8)|(HEAPU8[$85+2>>0]<<16)|(HEAPU8[$85+3>>0]<<24);
       $87 = HEAPU8[$86>>0]|(HEAPU8[$86+1>>0]<<8)|(HEAPU8[$86+2>>0]<<16)|(HEAPU8[$86+3>>0]<<24);
       $88 = ($87|0)==(8);
       if ($88) {
        $89 = HEAP32[$ast>>2]|0;
        $90 = HEAPU8[$89>>0]|(HEAPU8[$89+1>>0]<<8)|(HEAPU8[$89+2>>0]<<16)|(HEAPU8[$89+3>>0]<<24);
        $91 = ((($90)) + 4|0);
        $92 = HEAPU8[$91>>0]|(HEAPU8[$91+1>>0]<<8)|(HEAPU8[$91+2>>0]<<16)|(HEAPU8[$91+3>>0]<<24);
        $93 = ((($92)) + 4|0);
        $94 = HEAPU8[$93>>0]|(HEAPU8[$93+1>>0]<<8)|(HEAPU8[$93+2>>0]<<16)|(HEAPU8[$93+3>>0]<<24);
        $95 = ($94|0)==(43|0);
        if ($95) {
         $96 = $5;
         $97 = ((($96)) + 8|0);
         $98 = HEAPU8[$97>>0]|(HEAPU8[$97+1>>0]<<8)|(HEAPU8[$97+2>>0]<<16)|(HEAPU8[$97+3>>0]<<24);
         $99 = $2;
         HEAP32[$99>>2] = $98;
         $100 = $2;
         $101 = HEAP32[$100>>2]|0;
         $102 = ($101|0)!=(0|0);
         if ($102) {
          $103 = $2;
          $104 = HEAP32[$103>>2]|0;
          $105 = ((($104)) + 8|0);
          $106 = HEAPU8[$105>>0]|(HEAPU8[$105+1>>0]<<8)|(HEAPU8[$105+2>>0]<<16)|(HEAPU8[$105+3>>0]<<24);
          $107 = $2;
          HEAP32[$107>>2] = $106;
         }
        } else {
         label = 23;
        }
       } else {
        label = 23;
       }
      } else {
       label = 23;
      }
     } else {
      label = 23;
     }
    }
   } else {
    label = 23;
   }
  }
 } while(0);
 if ((label|0) == 23) {
  $108 = $1;
  $109 = ((($108)) + 98|0);
  $110 = HEAPU8[$109>>0]|(HEAPU8[$109+1>>0]<<8)|(HEAPU8[$109+2>>0]<<16)|(HEAPU8[$109+3>>0]<<24);
  $lastr = $110;
  $111 = $5;
  $112 = $1;
  $113 = ((($112)) + 98|0);
  HEAP8[$113>>0]=$111&255;HEAP8[$113+1>>0]=($111>>8)&255;HEAP8[$113+2>>0]=($111>>16)&255;HEAP8[$113+3>>0]=$111>>24;
  $114 = $1;
  $115 = (__push_var_args($114)|0);
  $lastv = $115;
  $116 = $3;
  $117 = ($116|0)!=(0|0);
  if (!($117)) {
   $118 = $1;
   $119 = $2;
   $120 = (_mb_attempt_open_bracket($118,$119)|0);
   $__hr = $120;
   $121 = $__hr;
   $122 = ($121|0)!=(0);
   if ($122) {
    $123 = $__hr;
    $0 = $123;
    $588 = $0;
    STACKTOP = sp;return ($588|0);
   }
  }
  $124 = $1;
  $125 = $5;
  $126 = HEAPU8[$125>>0]|(HEAPU8[$125+1>>0]<<8)|(HEAPU8[$125+2>>0]<<16)|(HEAPU8[$125+3>>0]<<24);
  $127 = $5;
  $128 = (__push_weak_scope_by_routine($124,$126,$127)|0);
  $running = $128;
  $129 = $1;
  $130 = $2;
  $131 = $running;
  $132 = $3;
  $133 = $4;
  $134 = $5;
  $135 = $6;
  $136 = $7;
  $137 = $lastv;
  $138 = (__proc_args($129,$130,$131,$132,$133,$134,$135,$136,1,$137)|0);
  $result = $138;
  $139 = $result;
  $140 = ($139|0)!=(0);
  do {
   if ($140) {
    $141 = $running;
    $142 = ((($141)) + 4|0);
    $143 = HEAPU8[$142>>0]|(HEAPU8[$142+1>>0]<<8)|(HEAPU8[$142+2>>0]<<16)|(HEAPU8[$142+3>>0]<<24);
    $144 = ($143|0)==(2);
    $145 = $1;
    $146 = $running;
    if ($144) {
     __destroy_scope($145,$146);
     break;
    } else {
     (__pop_weak_scope($145,$146)|0);
     break;
    }
   } else {
    $147 = $1;
    $148 = $running;
    $149 = (__pop_weak_scope($147,$148)|0);
    $running = $149;
    $150 = $3;
    $151 = ($150|0)!=(0|0);
    if (!($151)) {
     $152 = $1;
     $153 = $2;
     $154 = (_mb_attempt_close_bracket($152,$153)|0);
     $result = $154;
     $155 = $result;
     $156 = ($155|0)!=(0);
     if ($156) {
      break;
     }
    }
    $157 = $2;
    $158 = HEAP32[$157>>2]|0;
    HEAP32[$ast>>2] = $158;
    $159 = $1;
    $160 = ((($159)) + 102|0);
    $161 = HEAPU8[$160>>0]|(HEAPU8[$160+1>>0]<<8)|(HEAPU8[$160+2>>0]<<16)|(HEAPU8[$160+3>>0]<<24);
    $162 = HEAP32[$ast>>2]|0;
    (__ls_pushback($161,$162)|0);
    $163 = $5;
    $164 = ((($163)) + 53|0);
    $165 = HEAPU8[$164>>0]|(HEAPU8[$164+1>>0]<<8)|(HEAPU8[$164+2>>0]<<16)|(HEAPU8[$164+3>>0]<<24);
    $166 = ($165|0)!=(0|0);
    if ($166) {
     $167 = $1;
     $168 = ((($167)) + 93|0);
     $169 = HEAPU8[$168>>0]|(HEAPU8[$168+1>>0]<<8)|(HEAPU8[$168+2>>0]<<16)|(HEAPU8[$168+3>>0]<<24);
     $170 = $5;
     $171 = ((($170)) + 53|0);
     $172 = HEAPU8[$171>>0]|(HEAPU8[$171+1>>0]<<8)|(HEAPU8[$171+2>>0]<<16)|(HEAPU8[$171+3>>0]<<24);
     $173 = ($169|0)!=($172|0);
     if ($173) {
      $pushed_inst = 1;
      $174 = $1;
      $175 = ((($174)) + 93|0);
      $176 = HEAPU8[$175>>0]|(HEAPU8[$175+1>>0]<<8)|(HEAPU8[$175+2>>0]<<16)|(HEAPU8[$175+3>>0]<<24);
      $last_inst = $176;
      $177 = $5;
      $178 = ((($177)) + 53|0);
      $179 = HEAPU8[$178>>0]|(HEAPU8[$178+1>>0]<<8)|(HEAPU8[$178+2>>0]<<16)|(HEAPU8[$178+3>>0]<<24);
      $180 = $1;
      $181 = ((($180)) + 93|0);
      HEAP8[$181>>0]=$179&255;HEAP8[$181+1>>0]=($179>>8)&255;HEAP8[$181+2>>0]=($179>>16)&255;HEAP8[$181+3>>0]=$179>>24;
      $182 = $5;
      $183 = ((($182)) + 53|0);
      $184 = HEAPU8[$183>>0]|(HEAPU8[$183+1>>0]<<8)|(HEAPU8[$183+2>>0]<<16)|(HEAPU8[$183+3>>0]<<24);
      $185 = ($184|0)!=(0|0);
      if ($185) {
       $186 = $1;
       $187 = $5;
       $188 = ((($187)) + 53|0);
       $189 = HEAPU8[$188>>0]|(HEAPU8[$188+1>>0]<<8)|(HEAPU8[$188+2>>0]<<16)|(HEAPU8[$188+3>>0]<<24);
       $190 = ((($189)) + 29|0);
       $191 = HEAPU8[$190>>0]|(HEAPU8[$190+1>>0]<<8)|(HEAPU8[$190+2>>0]<<16)|(HEAPU8[$190+3>>0]<<24);
       (__push_scope_by_class($186,$191)|0);
      }
     }
    }
    $192 = $1;
    $193 = $running;
    $194 = (__push_scope_by_routine($192,$193)|0);
    $running = $194;
    $195 = $5;
    $196 = ((($195)) + 8|0);
    $197 = HEAPU8[$196>>0]|(HEAPU8[$196+1>>0]<<8)|(HEAPU8[$196+2>>0]<<16)|(HEAPU8[$196+3>>0]<<24);
    $198 = $2;
    HEAP32[$198>>2] = $197;
    $199 = $2;
    $200 = HEAP32[$199>>2]|0;
    $201 = ($200|0)!=(0|0);
    do {
     if ($201) {
      while(1) {
       $233 = $1;
       $234 = $2;
       $235 = (__execute_statement($233,$234,1)|0);
       $result = $235;
       $236 = HEAP32[$ast>>2]|0;
       $237 = $2;
       $238 = HEAP32[$237>>2]|0;
       $239 = ($236|0)==($238|0);
       if ($239) {
        label = 44;
        break;
       }
       $336 = $2;
       $337 = HEAP32[$336>>2]|0;
       HEAP32[$ast>>2] = $337;
       $338 = $result;
       $339 = ($338|0)==(103);
       if ($339) {
        label = 62;
        break;
       }
       $340 = $result;
       $341 = ($340|0)==(5);
       if ($341) {
        label = 64;
        break;
       }
       $438 = $result;
       $439 = ($438|0)!=(0);
       if ($439) {
        label = 82;
        break;
       }
       $543 = HEAP32[$ast>>2]|0;
       $544 = ($543|0)!=(0|0);
       if (!($544)) {
        break;
       }
      }
      if ((label|0) == 44) {
       $240 = $1;
       $241 = $1;
       $242 = ((($241)) + 139|0);
       $243 = HEAPU8[$242>>0]|(HEAPU8[$242+1>>0]<<8)|(HEAPU8[$242+2>>0]<<16)|(HEAPU8[$242+3>>0]<<24);
       (__set_current_error($240,48,$243)|0);
       $244 = $1;
       $245 = ((($244)) + 163|0);
       $246 = HEAPU8[$245>>0]|(HEAPU8[$245+1>>0]<<8)|(HEAPU8[$245+2>>0]<<16)|(HEAPU8[$245+3>>0]<<24);
       $247 = ($246|0)!=(0|0);
       if ($247) {
        $248 = $1;
        $249 = ((($248)) + 134|0);
        $250 = HEAP8[$249>>0]|0;
        $251 = $250 & 1;
        $252 = ($251<<24>>24)!=(0);
        if ($252) {
         break;
        }
        $253 = $1;
        $254 = ((($253)) + 134|0);
        $255 = HEAP8[$254>>0]|0;
        $256 = $255 & -2;
        $257 = $256 | 1;
        HEAP8[$254>>0] = $257;
        $258 = $1;
        $259 = ((($258)) + 163|0);
        $260 = HEAPU8[$259>>0]|(HEAPU8[$259+1>>0]<<8)|(HEAPU8[$259+2>>0]<<16)|(HEAPU8[$259+3>>0]<<24);
        $261 = $1;
        $262 = $1;
        $263 = ((($262)) + 135|0);
        $264 = HEAPU8[$263>>0]|(HEAPU8[$263+1>>0]<<8)|(HEAPU8[$263+2>>0]<<16)|(HEAPU8[$263+3>>0]<<24);
        $265 = $1;
        $266 = ((($265)) + 135|0);
        $267 = HEAPU8[$266>>0]|(HEAPU8[$266+1>>0]<<8)|(HEAPU8[$266+2>>0]<<16)|(HEAPU8[$266+3>>0]<<24);
        $268 = (_mb_get_error_desc($267)|0);
        $269 = $1;
        $270 = ((($269)) + 139|0);
        $271 = HEAPU8[$270>>0]|(HEAPU8[$270+1>>0]<<8)|(HEAPU8[$270+2>>0]<<16)|(HEAPU8[$270+3>>0]<<24);
        $272 = $1;
        $273 = ((($272)) + 71|0);
        $274 = HEAPU8[$273>>0]|(HEAPU8[$273+1>>0]<<8)|(HEAPU8[$273+2>>0]<<16)|(HEAPU8[$273+3>>0]<<24);
        $275 = ($274|0)!=(0|0);
        if ($275) {
         $276 = $1;
         $277 = ((($276)) + 79|0);
         $278 = HEAPU8[$277>>0]|(HEAPU8[$277+1>>0]<<8)|(HEAPU8[$277+2>>0]<<16)|(HEAPU8[$277+3>>0]<<24);
         $279 = ($278|0)!=(0);
         if ($279) {
          label = 49;
         } else {
          $280 = $1;
          $281 = ((($280)) + 71|0);
          $282 = HEAPU8[$281>>0]|(HEAPU8[$281+1>>0]<<8)|(HEAPU8[$281+2>>0]<<16)|(HEAPU8[$281+3>>0]<<24);
          $283 = ((($282)) + 164|0);
          $284 = HEAPU8[$283>>0]|(HEAPU8[$283+1>>0]<<8)|(HEAPU8[$283+2>>0]<<16)|(HEAPU8[$283+3>>0]<<24);
          $325 = $284;
         }
        } else {
         label = 49;
        }
        if ((label|0) == 49) {
         $285 = $1;
         $286 = ((($285)) + 143|0);
         $287 = HEAPU8[$286>>0]|(HEAPU8[$286+1>>0]<<8)|(HEAPU8[$286+2>>0]<<16)|(HEAPU8[$286+3>>0]<<24);
         $325 = $287;
        }
        $288 = $1;
        $289 = ((($288)) + 71|0);
        $290 = HEAPU8[$289>>0]|(HEAPU8[$289+1>>0]<<8)|(HEAPU8[$289+2>>0]<<16)|(HEAPU8[$289+3>>0]<<24);
        $291 = ($290|0)!=(0|0);
        if ($291) {
         $292 = $1;
         $293 = ((($292)) + 79|0);
         $294 = HEAPU8[$293>>0]|(HEAPU8[$293+1>>0]<<8)|(HEAPU8[$293+2>>0]<<16)|(HEAPU8[$293+3>>0]<<24);
         $295 = ($294|0)!=(0);
         if ($295) {
          label = 53;
         } else {
          $296 = $1;
          $297 = ((($296)) + 71|0);
          $298 = HEAPU8[$297>>0]|(HEAPU8[$297+1>>0]<<8)|(HEAPU8[$297+2>>0]<<16)|(HEAPU8[$297+3>>0]<<24);
          $299 = ((($298)) + 168|0);
          $300 = HEAPU8[$299>>0]|(HEAPU8[$299+1>>0]<<8);
          $$sink = $300;
         }
        } else {
         label = 53;
        }
        if ((label|0) == 53) {
         $301 = $1;
         $302 = ((($301)) + 147|0);
         $303 = HEAPU8[$302>>0]|(HEAPU8[$302+1>>0]<<8);
         $$sink = $303;
        }
        $304 = $$sink&65535;
        $305 = $304&65535;
        $306 = $1;
        $307 = ((($306)) + 71|0);
        $308 = HEAPU8[$307>>0]|(HEAPU8[$307+1>>0]<<8)|(HEAPU8[$307+2>>0]<<16)|(HEAPU8[$307+3>>0]<<24);
        $309 = ($308|0)!=(0|0);
        do {
         if ($309) {
          $310 = $1;
          $311 = ((($310)) + 79|0);
          $312 = HEAPU8[$311>>0]|(HEAPU8[$311+1>>0]<<8)|(HEAPU8[$311+2>>0]<<16)|(HEAPU8[$311+3>>0]<<24);
          $313 = ($312|0)!=(0);
          if ($313) {
           label = 57;
           break;
          }
          $314 = $1;
          $315 = ((($314)) + 71|0);
          $316 = HEAPU8[$315>>0]|(HEAPU8[$315+1>>0]<<8)|(HEAPU8[$315+2>>0]<<16)|(HEAPU8[$315+3>>0]<<24);
          $317 = ((($316)) + 170|0);
          $318 = HEAPU8[$317>>0]|(HEAPU8[$317+1>>0]<<8);
          $$sink6 = $318;
         } else {
          label = 57;
         }
        } while(0);
        if ((label|0) == 57) {
         $319 = $1;
         $320 = ((($319)) + 149|0);
         $321 = HEAPU8[$320>>0]|(HEAPU8[$320+1>>0]<<8);
         $$sink6 = $321;
        }
        $322 = $$sink6&65535;
        $323 = $322&65535;
        $324 = $result;
        FUNCTION_TABLE_viiiiiiii[$260 & 127]($261,$264,$268,$271,$325,$305,$323,$324);
       }
       $326 = $result;
       $327 = ($326|0)==(2);
       if (!($327)) {
        break;
       }
       $328 = $1;
       $329 = ((($328)) + 135|0);
       HEAP8[$329>>0]=0&255;HEAP8[$329+1>>0]=(0>>8)&255;HEAP8[$329+2>>0]=(0>>16)&255;HEAP8[$329+3>>0]=0>>24;
       $330 = $1;
       $331 = ((($330)) + 139|0);
       HEAP8[$331>>0]=0&255;HEAP8[$331+1>>0]=(0>>8)&255;HEAP8[$331+2>>0]=(0>>16)&255;HEAP8[$331+3>>0]=0>>24;
       $332 = $1;
       $333 = ((($332)) + 134|0);
       $334 = HEAP8[$333>>0]|0;
       $335 = $334 & -2;
       HEAP8[$333>>0] = $335;
       break;
      }
      else if ((label|0) == 62) {
       $result = 0;
      }
      else if ((label|0) == 64) {
       $342 = $1;
       $343 = $1;
       $344 = ((($343)) + 139|0);
       $345 = HEAPU8[$344>>0]|(HEAPU8[$344+1>>0]<<8)|(HEAPU8[$344+2>>0]<<16)|(HEAPU8[$344+3>>0]<<24);
       (__set_current_error($342,51,$345)|0);
       $346 = $1;
       $347 = ((($346)) + 163|0);
       $348 = HEAPU8[$347>>0]|(HEAPU8[$347+1>>0]<<8)|(HEAPU8[$347+2>>0]<<16)|(HEAPU8[$347+3>>0]<<24);
       $349 = ($348|0)!=(0|0);
       if ($349) {
        $350 = $1;
        $351 = ((($350)) + 134|0);
        $352 = HEAP8[$351>>0]|0;
        $353 = $352 & 1;
        $354 = ($353<<24>>24)!=(0);
        if ($354) {
         break;
        }
        $355 = $1;
        $356 = ((($355)) + 134|0);
        $357 = HEAP8[$356>>0]|0;
        $358 = $357 & -2;
        $359 = $358 | 1;
        HEAP8[$356>>0] = $359;
        $360 = $1;
        $361 = ((($360)) + 163|0);
        $362 = HEAPU8[$361>>0]|(HEAPU8[$361+1>>0]<<8)|(HEAPU8[$361+2>>0]<<16)|(HEAPU8[$361+3>>0]<<24);
        $363 = $1;
        $364 = $1;
        $365 = ((($364)) + 135|0);
        $366 = HEAPU8[$365>>0]|(HEAPU8[$365+1>>0]<<8)|(HEAPU8[$365+2>>0]<<16)|(HEAPU8[$365+3>>0]<<24);
        $367 = $1;
        $368 = ((($367)) + 135|0);
        $369 = HEAPU8[$368>>0]|(HEAPU8[$368+1>>0]<<8)|(HEAPU8[$368+2>>0]<<16)|(HEAPU8[$368+3>>0]<<24);
        $370 = (_mb_get_error_desc($369)|0);
        $371 = $1;
        $372 = ((($371)) + 139|0);
        $373 = HEAPU8[$372>>0]|(HEAPU8[$372+1>>0]<<8)|(HEAPU8[$372+2>>0]<<16)|(HEAPU8[$372+3>>0]<<24);
        $374 = $1;
        $375 = ((($374)) + 71|0);
        $376 = HEAPU8[$375>>0]|(HEAPU8[$375+1>>0]<<8)|(HEAPU8[$375+2>>0]<<16)|(HEAPU8[$375+3>>0]<<24);
        $377 = ($376|0)!=(0|0);
        if ($377) {
         $378 = $1;
         $379 = ((($378)) + 79|0);
         $380 = HEAPU8[$379>>0]|(HEAPU8[$379+1>>0]<<8)|(HEAPU8[$379+2>>0]<<16)|(HEAPU8[$379+3>>0]<<24);
         $381 = ($380|0)!=(0);
         if ($381) {
          label = 69;
         } else {
          $382 = $1;
          $383 = ((($382)) + 71|0);
          $384 = HEAPU8[$383>>0]|(HEAPU8[$383+1>>0]<<8)|(HEAPU8[$383+2>>0]<<16)|(HEAPU8[$383+3>>0]<<24);
          $385 = ((($384)) + 164|0);
          $386 = HEAPU8[$385>>0]|(HEAPU8[$385+1>>0]<<8)|(HEAPU8[$385+2>>0]<<16)|(HEAPU8[$385+3>>0]<<24);
          $427 = $386;
         }
        } else {
         label = 69;
        }
        if ((label|0) == 69) {
         $387 = $1;
         $388 = ((($387)) + 143|0);
         $389 = HEAPU8[$388>>0]|(HEAPU8[$388+1>>0]<<8)|(HEAPU8[$388+2>>0]<<16)|(HEAPU8[$388+3>>0]<<24);
         $427 = $389;
        }
        $390 = $1;
        $391 = ((($390)) + 71|0);
        $392 = HEAPU8[$391>>0]|(HEAPU8[$391+1>>0]<<8)|(HEAPU8[$391+2>>0]<<16)|(HEAPU8[$391+3>>0]<<24);
        $393 = ($392|0)!=(0|0);
        if ($393) {
         $394 = $1;
         $395 = ((($394)) + 79|0);
         $396 = HEAPU8[$395>>0]|(HEAPU8[$395+1>>0]<<8)|(HEAPU8[$395+2>>0]<<16)|(HEAPU8[$395+3>>0]<<24);
         $397 = ($396|0)!=(0);
         if ($397) {
          label = 73;
         } else {
          $398 = $1;
          $399 = ((($398)) + 71|0);
          $400 = HEAPU8[$399>>0]|(HEAPU8[$399+1>>0]<<8)|(HEAPU8[$399+2>>0]<<16)|(HEAPU8[$399+3>>0]<<24);
          $401 = ((($400)) + 168|0);
          $402 = HEAPU8[$401>>0]|(HEAPU8[$401+1>>0]<<8);
          $$sink7 = $402;
         }
        } else {
         label = 73;
        }
        if ((label|0) == 73) {
         $403 = $1;
         $404 = ((($403)) + 147|0);
         $405 = HEAPU8[$404>>0]|(HEAPU8[$404+1>>0]<<8);
         $$sink7 = $405;
        }
        $406 = $$sink7&65535;
        $407 = $406&65535;
        $408 = $1;
        $409 = ((($408)) + 71|0);
        $410 = HEAPU8[$409>>0]|(HEAPU8[$409+1>>0]<<8)|(HEAPU8[$409+2>>0]<<16)|(HEAPU8[$409+3>>0]<<24);
        $411 = ($410|0)!=(0|0);
        do {
         if ($411) {
          $412 = $1;
          $413 = ((($412)) + 79|0);
          $414 = HEAPU8[$413>>0]|(HEAPU8[$413+1>>0]<<8)|(HEAPU8[$413+2>>0]<<16)|(HEAPU8[$413+3>>0]<<24);
          $415 = ($414|0)!=(0);
          if ($415) {
           label = 77;
           break;
          }
          $416 = $1;
          $417 = ((($416)) + 71|0);
          $418 = HEAPU8[$417>>0]|(HEAPU8[$417+1>>0]<<8)|(HEAPU8[$417+2>>0]<<16)|(HEAPU8[$417+3>>0]<<24);
          $419 = ((($418)) + 170|0);
          $420 = HEAPU8[$419>>0]|(HEAPU8[$419+1>>0]<<8);
          $$sink8 = $420;
         } else {
          label = 77;
         }
        } while(0);
        if ((label|0) == 77) {
         $421 = $1;
         $422 = ((($421)) + 149|0);
         $423 = HEAPU8[$422>>0]|(HEAPU8[$422+1>>0]<<8);
         $$sink8 = $423;
        }
        $424 = $$sink8&65535;
        $425 = $424&65535;
        $426 = $result;
        FUNCTION_TABLE_viiiiiiii[$362 & 127]($363,$366,$370,$373,$427,$407,$425,$426);
       }
       $428 = $result;
       $429 = ($428|0)==(2);
       if (!($429)) {
        break;
       }
       $430 = $1;
       $431 = ((($430)) + 135|0);
       HEAP8[$431>>0]=0&255;HEAP8[$431+1>>0]=(0>>8)&255;HEAP8[$431+2>>0]=(0>>16)&255;HEAP8[$431+3>>0]=0>>24;
       $432 = $1;
       $433 = ((($432)) + 139|0);
       HEAP8[$433>>0]=0&255;HEAP8[$433+1>>0]=(0>>8)&255;HEAP8[$433+2>>0]=(0>>16)&255;HEAP8[$433+3>>0]=0>>24;
       $434 = $1;
       $435 = ((($434)) + 134|0);
       $436 = HEAP8[$435>>0]|0;
       $437 = $436 & -2;
       HEAP8[$435>>0] = $437;
       break;
      }
      else if ((label|0) == 82) {
       $440 = $result;
       $441 = ($440|0)>=(201);
       if ($441) {
        $442 = $1;
        $443 = ((($442)) + 135|0);
        HEAP8[$443>>0]=68&255;HEAP8[$443+1>>0]=(68>>8)&255;HEAP8[$443+2>>0]=(68>>16)&255;HEAP8[$443+3>>0]=68>>24;
       }
       $444 = $1;
       $445 = $1;
       $446 = ((($445)) + 135|0);
       $447 = HEAPU8[$446>>0]|(HEAPU8[$446+1>>0]<<8)|(HEAPU8[$446+2>>0]<<16)|(HEAPU8[$446+3>>0]<<24);
       $448 = $1;
       $449 = ((($448)) + 139|0);
       $450 = HEAPU8[$449>>0]|(HEAPU8[$449+1>>0]<<8)|(HEAPU8[$449+2>>0]<<16)|(HEAPU8[$449+3>>0]<<24);
       (__set_current_error($444,$447,$450)|0);
       $451 = $1;
       $452 = ((($451)) + 163|0);
       $453 = HEAPU8[$452>>0]|(HEAPU8[$452+1>>0]<<8)|(HEAPU8[$452+2>>0]<<16)|(HEAPU8[$452+3>>0]<<24);
       $454 = ($453|0)!=(0|0);
       if ($454) {
        $455 = $1;
        $456 = ((($455)) + 134|0);
        $457 = HEAP8[$456>>0]|0;
        $458 = $457 & 1;
        $459 = ($458<<24>>24)!=(0);
        if ($459) {
         break;
        }
        $460 = $1;
        $461 = ((($460)) + 134|0);
        $462 = HEAP8[$461>>0]|0;
        $463 = $462 & -2;
        $464 = $463 | 1;
        HEAP8[$461>>0] = $464;
        $465 = $1;
        $466 = ((($465)) + 163|0);
        $467 = HEAPU8[$466>>0]|(HEAPU8[$466+1>>0]<<8)|(HEAPU8[$466+2>>0]<<16)|(HEAPU8[$466+3>>0]<<24);
        $468 = $1;
        $469 = $1;
        $470 = ((($469)) + 135|0);
        $471 = HEAPU8[$470>>0]|(HEAPU8[$470+1>>0]<<8)|(HEAPU8[$470+2>>0]<<16)|(HEAPU8[$470+3>>0]<<24);
        $472 = $1;
        $473 = ((($472)) + 135|0);
        $474 = HEAPU8[$473>>0]|(HEAPU8[$473+1>>0]<<8)|(HEAPU8[$473+2>>0]<<16)|(HEAPU8[$473+3>>0]<<24);
        $475 = (_mb_get_error_desc($474)|0);
        $476 = $1;
        $477 = ((($476)) + 139|0);
        $478 = HEAPU8[$477>>0]|(HEAPU8[$477+1>>0]<<8)|(HEAPU8[$477+2>>0]<<16)|(HEAPU8[$477+3>>0]<<24);
        $479 = $1;
        $480 = ((($479)) + 71|0);
        $481 = HEAPU8[$480>>0]|(HEAPU8[$480+1>>0]<<8)|(HEAPU8[$480+2>>0]<<16)|(HEAPU8[$480+3>>0]<<24);
        $482 = ($481|0)!=(0|0);
        if ($482) {
         $483 = $1;
         $484 = ((($483)) + 79|0);
         $485 = HEAPU8[$484>>0]|(HEAPU8[$484+1>>0]<<8)|(HEAPU8[$484+2>>0]<<16)|(HEAPU8[$484+3>>0]<<24);
         $486 = ($485|0)!=(0);
         if ($486) {
          label = 89;
         } else {
          $487 = $1;
          $488 = ((($487)) + 71|0);
          $489 = HEAPU8[$488>>0]|(HEAPU8[$488+1>>0]<<8)|(HEAPU8[$488+2>>0]<<16)|(HEAPU8[$488+3>>0]<<24);
          $490 = ((($489)) + 164|0);
          $491 = HEAPU8[$490>>0]|(HEAPU8[$490+1>>0]<<8)|(HEAPU8[$490+2>>0]<<16)|(HEAPU8[$490+3>>0]<<24);
          $532 = $491;
         }
        } else {
         label = 89;
        }
        if ((label|0) == 89) {
         $492 = $1;
         $493 = ((($492)) + 143|0);
         $494 = HEAPU8[$493>>0]|(HEAPU8[$493+1>>0]<<8)|(HEAPU8[$493+2>>0]<<16)|(HEAPU8[$493+3>>0]<<24);
         $532 = $494;
        }
        $495 = $1;
        $496 = ((($495)) + 71|0);
        $497 = HEAPU8[$496>>0]|(HEAPU8[$496+1>>0]<<8)|(HEAPU8[$496+2>>0]<<16)|(HEAPU8[$496+3>>0]<<24);
        $498 = ($497|0)!=(0|0);
        do {
         if ($498) {
          $499 = $1;
          $500 = ((($499)) + 79|0);
          $501 = HEAPU8[$500>>0]|(HEAPU8[$500+1>>0]<<8)|(HEAPU8[$500+2>>0]<<16)|(HEAPU8[$500+3>>0]<<24);
          $502 = ($501|0)!=(0);
          if ($502) {
           label = 93;
           break;
          }
          $503 = $1;
          $504 = ((($503)) + 71|0);
          $505 = HEAPU8[$504>>0]|(HEAPU8[$504+1>>0]<<8)|(HEAPU8[$504+2>>0]<<16)|(HEAPU8[$504+3>>0]<<24);
          $506 = ((($505)) + 168|0);
          $507 = HEAPU8[$506>>0]|(HEAPU8[$506+1>>0]<<8);
          $$sink9 = $507;
         } else {
          label = 93;
         }
        } while(0);
        if ((label|0) == 93) {
         $508 = $1;
         $509 = ((($508)) + 147|0);
         $510 = HEAPU8[$509>>0]|(HEAPU8[$509+1>>0]<<8);
         $$sink9 = $510;
        }
        $511 = $$sink9&65535;
        $512 = $511&65535;
        $513 = $1;
        $514 = ((($513)) + 71|0);
        $515 = HEAPU8[$514>>0]|(HEAPU8[$514+1>>0]<<8)|(HEAPU8[$514+2>>0]<<16)|(HEAPU8[$514+3>>0]<<24);
        $516 = ($515|0)!=(0|0);
        do {
         if ($516) {
          $517 = $1;
          $518 = ((($517)) + 79|0);
          $519 = HEAPU8[$518>>0]|(HEAPU8[$518+1>>0]<<8)|(HEAPU8[$518+2>>0]<<16)|(HEAPU8[$518+3>>0]<<24);
          $520 = ($519|0)!=(0);
          if ($520) {
           label = 97;
           break;
          }
          $521 = $1;
          $522 = ((($521)) + 71|0);
          $523 = HEAPU8[$522>>0]|(HEAPU8[$522+1>>0]<<8)|(HEAPU8[$522+2>>0]<<16)|(HEAPU8[$522+3>>0]<<24);
          $524 = ((($523)) + 170|0);
          $525 = HEAPU8[$524>>0]|(HEAPU8[$524+1>>0]<<8);
          $$sink10 = $525;
         } else {
          label = 97;
         }
        } while(0);
        if ((label|0) == 97) {
         $526 = $1;
         $527 = ((($526)) + 149|0);
         $528 = HEAPU8[$527>>0]|(HEAPU8[$527+1>>0]<<8);
         $$sink10 = $528;
        }
        $529 = $$sink10&65535;
        $530 = $529&65535;
        $531 = $result;
        FUNCTION_TABLE_viiiiiiii[$467 & 127]($468,$471,$475,$478,$532,$512,$530,$531);
       }
       $533 = $result;
       $534 = ($533|0)==(2);
       if (!($534)) {
        break;
       }
       $535 = $1;
       $536 = ((($535)) + 135|0);
       HEAP8[$536>>0]=0&255;HEAP8[$536+1>>0]=(0>>8)&255;HEAP8[$536+2>>0]=(0>>16)&255;HEAP8[$536+3>>0]=0>>24;
       $537 = $1;
       $538 = ((($537)) + 139|0);
       HEAP8[$538>>0]=0&255;HEAP8[$538+1>>0]=(0>>8)&255;HEAP8[$538+2>>0]=(0>>16)&255;HEAP8[$538+3>>0]=0>>24;
       $539 = $1;
       $540 = ((($539)) + 134|0);
       $541 = HEAP8[$540>>0]|0;
       $542 = $541 & -2;
       HEAP8[$540>>0] = $542;
       break;
      }
      $545 = $1;
      $546 = $running;
      $547 = $5;
      $548 = ((($547)) + 53|0);
      $549 = HEAPU8[$548>>0]|(HEAPU8[$548+1>>0]<<8)|(HEAPU8[$548+2>>0]<<16)|(HEAPU8[$548+3>>0]<<24);
      $550 = $5;
      __out_of_scope($545,$546,$549,$550,1);
      $551 = $1;
      $552 = $2;
      $553 = $running;
      $554 = $5;
      $555 = (__proc_args($551,$552,$553,0,0,$554,0,0,0,0)|0);
      $result = $555;
      $556 = $result;
      $557 = ($556|0)!=(0);
      if (!($557)) {
       $succ = 1;
       $558 = ((($inte)) + 4|0);
       ;HEAP8[$558>>0]=0|0;HEAP8[$558+1>>0]=0|0;HEAP8[$558+2>>0]=0|0;HEAP8[$558+3>>0]=0|0;
       HEAP8[$inte>>0]=0&255;HEAP8[$inte+1>>0]=(0>>8)&255;HEAP8[$inte+2>>0]=(0>>16)&255;HEAP8[$inte+3>>0]=0>>24;
       $559 = $running;
       $560 = ((($559)) + 20|0);
       __swap_public_value($inte,$560);
       $561 = $1;
       (__pop_scope($561,1)|0);
      }
     } else {
      $202 = HEAP32[$ast>>2]|0;
      $203 = ($202|0)!=(0|0);
      if ($203) {
       $204 = HEAP32[$ast>>2]|0;
       $205 = HEAPU8[$204>>0]|(HEAPU8[$204+1>>0]<<8)|(HEAPU8[$204+2>>0]<<16)|(HEAPU8[$204+3>>0]<<24);
       $206 = ($205|0)!=(0|0);
       if ($206) {
        $207 = $1;
        $208 = $1;
        $209 = ((($208)) + 67|0);
        $210 = HEAPU8[$209>>0]|(HEAPU8[$209+1>>0]<<8)|(HEAPU8[$209+2>>0]<<16)|(HEAPU8[$209+3>>0]<<24);
        $211 = (__set_current_error($207,53,$210)|0);
        $212 = ($211<<24>>24)!=(0);
        if (!($212)) {
         break;
        }
        $213 = $1;
        $214 = HEAP32[$ast>>2]|0;
        $215 = HEAPU8[$214>>0]|(HEAPU8[$214+1>>0]<<8)|(HEAPU8[$214+2>>0]<<16)|(HEAPU8[$214+3>>0]<<24);
        $216 = ((($215)) + 9|0);
        $217 = HEAPU8[$216>>0]|(HEAPU8[$216+1>>0]<<8)|(HEAPU8[$216+2>>0]<<16)|(HEAPU8[$216+3>>0]<<24);
        $218 = HEAP32[$ast>>2]|0;
        $219 = HEAPU8[$218>>0]|(HEAPU8[$218+1>>0]<<8)|(HEAPU8[$218+2>>0]<<16)|(HEAPU8[$218+3>>0]<<24);
        $220 = ((($219)) + 13|0);
        $221 = HEAPU8[$220>>0]|(HEAPU8[$220+1>>0]<<8);
        $222 = HEAP32[$ast>>2]|0;
        $223 = HEAPU8[$222>>0]|(HEAPU8[$222+1>>0]<<8)|(HEAPU8[$222+2>>0]<<16)|(HEAPU8[$222+3>>0]<<24);
        $224 = ((($223)) + 15|0);
        $225 = HEAPU8[$224>>0]|(HEAPU8[$224+1>>0]<<8);
        __set_error_pos($213,$217,$221,$225);
        $result = 3;
        break;
       }
      }
      $226 = $1;
      $227 = $1;
      $228 = ((($227)) + 67|0);
      $229 = HEAPU8[$228>>0]|(HEAPU8[$228+1>>0]<<8)|(HEAPU8[$228+2>>0]<<16)|(HEAPU8[$228+3>>0]<<24);
      $230 = (__set_current_error($226,53,$229)|0);
      $231 = ($230<<24>>24)!=(0);
      if ($231) {
       $232 = $1;
       __set_error_pos($232,0,0,0);
       $result = 3;
      }
     }
    } while(0);
    $562 = $succ;
    $563 = ($562<<24>>24)!=(0);
    if (!($563)) {
     $564 = $1;
     (__pop_scope($564,1)|0);
    }
    $565 = $pushed_inst;
    $566 = ($565<<24>>24)!=(0);
    if ($566) {
     $567 = $5;
     $568 = ((($567)) + 53|0);
     $569 = HEAPU8[$568>>0]|(HEAPU8[$568+1>>0]<<8)|(HEAPU8[$568+2>>0]<<16)|(HEAPU8[$568+3>>0]<<24);
     $570 = ($569|0)!=(0|0);
     if ($570) {
      $571 = $1;
      (__pop_scope($571,0)|0);
     }
     $572 = $last_inst;
     $573 = $1;
     $574 = ((($573)) + 93|0);
     HEAP8[$574>>0]=$572&255;HEAP8[$574+1>>0]=($572>>8)&255;HEAP8[$574+2>>0]=($572>>16)&255;HEAP8[$574+3>>0]=$572>>24;
    }
    $575 = $succ;
    $576 = ($575<<24>>24)!=(0);
    if ($576) {
     $577 = $1;
     $578 = $1;
     $579 = ((($578)) + 75|0);
     $580 = HEAPU8[$579>>0]|(HEAPU8[$579+1>>0]<<8)|(HEAPU8[$579+2>>0]<<16)|(HEAPU8[$579+3>>0]<<24);
     $581 = ((($580)) + 20|0);
     __assign_public_value($577,$581,$inte,0);
    }
   }
  } while(0);
  $582 = $lastr;
  $583 = $1;
  $584 = ((($583)) + 98|0);
  HEAP8[$584>>0]=$582&255;HEAP8[$584+1>>0]=($582>>8)&255;HEAP8[$584+2>>0]=($582>>16)&255;HEAP8[$584+3>>0]=$582>>24;
  $585 = $1;
  $586 = $lastv;
  __pop_var_args($585,$586);
 }
 $587 = $result;
 $0 = $587;
 $588 = $0;
 STACKTOP = sp;return ($588|0);
}
function __eval_lambda_routine($s,$l,$va,$ca,$r,$has_arg,$pop_arg) {
 $s = $s|0;
 $l = $l|0;
 $va = $va|0;
 $ca = $ca|0;
 $r = $r|0;
 $has_arg = $has_arg|0;
 $pop_arg = $pop_arg|0;
 var $$sink = 0, $$sink6 = 0, $$sink7 = 0, $$sink8 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0;
 var $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0;
 var $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0;
 var $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0;
 var $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0;
 var $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0;
 var $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0;
 var $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0;
 var $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0;
 var $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0;
 var $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0;
 var $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0;
 var $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0;
 var $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0;
 var $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0;
 var $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0;
 var $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__hr = 0, $ast = 0;
 var $inte = 0, $lastr = 0, $lastv = 0, $or$cond = 0, $or$cond3 = 0, $or$cond5 = 0, $result = 0, $running = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $inte = sp + 56|0;
 $1 = $s;
 $2 = $l;
 $3 = $va;
 $4 = $ca;
 $5 = $r;
 $6 = $has_arg;
 $7 = $pop_arg;
 $result = 0;
 $ast = 0;
 $running = 0;
 $lastr = 0;
 $lastv = 0;
 $8 = $1;
 $9 = ($8|0)!=(0|0);
 $10 = $2;
 $11 = ($10|0)!=(0|0);
 $or$cond = $9 & $11;
 if ($or$cond) {
 }
 $12 = $1;
 $13 = ($12|0)!=(0|0);
 $14 = $2;
 $15 = ($14|0)!=(0|0);
 $or$cond3 = $13 & $15;
 $16 = $5;
 $17 = ($16|0)!=(0|0);
 $or$cond5 = $or$cond3 & $17;
 if (!($or$cond5)) {
  ___assert_fail((9154|0),(4322|0),4632,(9227|0));
  // unreachable;
 }
 $18 = $1;
 $19 = ((($18)) + 98|0);
 $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8)|(HEAPU8[$19+2>>0]<<16)|(HEAPU8[$19+3>>0]<<24);
 $lastr = $20;
 $21 = $5;
 $22 = $1;
 $23 = ((($22)) + 98|0);
 HEAP8[$23>>0]=$21&255;HEAP8[$23+1>>0]=($21>>8)&255;HEAP8[$23+2>>0]=($21>>16)&255;HEAP8[$23+3>>0]=$21>>24;
 $24 = $1;
 $25 = (__push_var_args($24)|0);
 $lastv = $25;
 $26 = $3;
 $27 = ($26|0)!=(0|0);
 if (!($27)) {
  $28 = $1;
  $29 = $2;
  $30 = (_mb_attempt_open_bracket($28,$29)|0);
  $__hr = $30;
  $31 = $__hr;
  $32 = ($31|0)!=(0);
  if ($32) {
   $33 = $__hr;
   $0 = $33;
   $393 = $0;
   STACKTOP = sp;return ($393|0);
  }
 }
 $34 = $1;
 $35 = $5;
 $36 = (__link_lambda_scope_chain($34,$35,1)|0);
 $running = $36;
 $37 = $running;
 $38 = ($37|0)!=(0|0);
 do {
  if ($38) {
   $77 = $1;
   $78 = $2;
   $79 = $running;
   $80 = $3;
   $81 = $4;
   $82 = $5;
   $83 = $6;
   $84 = $7;
   $85 = $lastv;
   $86 = (__proc_args($77,$78,$79,$80,$81,$82,$83,$84,1,$85)|0);
   $result = $86;
   $87 = $2;
   $88 = HEAP32[$87>>2]|0;
   $ast = $88;
   $89 = $result;
   $90 = ($89|0)!=(0);
   $91 = $1;
   $92 = $5;
   $93 = (__unlink_lambda_scope_chain($91,$92,1)|0);
   if (!($90)) {
    $running = $93;
    $94 = $3;
    $95 = ($94|0)!=(0|0);
    if (!($95)) {
     $96 = $1;
     $97 = $2;
     $98 = (_mb_attempt_close_bracket($96,$97)|0);
     $result = $98;
     $99 = $result;
     $100 = ($99|0)!=(0);
     if ($100) {
      break;
     }
    }
    $101 = $2;
    $102 = HEAP32[$101>>2]|0;
    $ast = $102;
    $103 = $1;
    $104 = ((($103)) + 102|0);
    $105 = HEAPU8[$104>>0]|(HEAPU8[$104+1>>0]<<8)|(HEAPU8[$104+2>>0]<<16)|(HEAPU8[$104+3>>0]<<24);
    $106 = $ast;
    (__ls_pushback($105,$106)|0);
    $107 = $1;
    $108 = $5;
    $109 = (__link_lambda_scope_chain($107,$108,0)|0);
    $running = $109;
    $110 = $5;
    $111 = ((($110)) + 37|0);
    $112 = HEAPU8[$111>>0]|(HEAPU8[$111+1>>0]<<8)|(HEAPU8[$111+2>>0]<<16)|(HEAPU8[$111+3>>0]<<24);
    $113 = $2;
    HEAP32[$113>>2] = $112;
    $114 = $2;
    $115 = HEAP32[$114>>2]|0;
    $116 = ($115|0)!=(0|0);
    do {
     if ($116) {
      while(1) {
       $148 = $1;
       $149 = $2;
       $150 = (__execute_statement($148,$149,1)|0);
       $result = $150;
       $151 = $2;
       $152 = HEAP32[$151>>2]|0;
       $ast = $152;
       $153 = $result;
       $154 = ($153|0)==(103);
       if ($154) {
        label = 27;
        break;
       }
       $155 = $result;
       $156 = ($155|0)==(5);
       if ($156) {
        label = 29;
        break;
       }
       $253 = $result;
       $254 = ($253|0)!=(0);
       if ($254) {
        label = 47;
        break;
       }
       $358 = $ast;
       $359 = ($358|0)!=(0|0);
       if (!($359)) {
        break;
       }
      }
      if ((label|0) == 27) {
       $result = 0;
      }
      else if ((label|0) == 29) {
       $157 = $1;
       $158 = $1;
       $159 = ((($158)) + 139|0);
       $160 = HEAPU8[$159>>0]|(HEAPU8[$159+1>>0]<<8)|(HEAPU8[$159+2>>0]<<16)|(HEAPU8[$159+3>>0]<<24);
       (__set_current_error($157,51,$160)|0);
       $161 = $1;
       $162 = ((($161)) + 163|0);
       $163 = HEAPU8[$162>>0]|(HEAPU8[$162+1>>0]<<8)|(HEAPU8[$162+2>>0]<<16)|(HEAPU8[$162+3>>0]<<24);
       $164 = ($163|0)!=(0|0);
       if ($164) {
        $165 = $1;
        $166 = ((($165)) + 134|0);
        $167 = HEAP8[$166>>0]|0;
        $168 = $167 & 1;
        $169 = ($168<<24>>24)!=(0);
        if ($169) {
         break;
        }
        $170 = $1;
        $171 = ((($170)) + 134|0);
        $172 = HEAP8[$171>>0]|0;
        $173 = $172 & -2;
        $174 = $173 | 1;
        HEAP8[$171>>0] = $174;
        $175 = $1;
        $176 = ((($175)) + 163|0);
        $177 = HEAPU8[$176>>0]|(HEAPU8[$176+1>>0]<<8)|(HEAPU8[$176+2>>0]<<16)|(HEAPU8[$176+3>>0]<<24);
        $178 = $1;
        $179 = $1;
        $180 = ((($179)) + 135|0);
        $181 = HEAPU8[$180>>0]|(HEAPU8[$180+1>>0]<<8)|(HEAPU8[$180+2>>0]<<16)|(HEAPU8[$180+3>>0]<<24);
        $182 = $1;
        $183 = ((($182)) + 135|0);
        $184 = HEAPU8[$183>>0]|(HEAPU8[$183+1>>0]<<8)|(HEAPU8[$183+2>>0]<<16)|(HEAPU8[$183+3>>0]<<24);
        $185 = (_mb_get_error_desc($184)|0);
        $186 = $1;
        $187 = ((($186)) + 139|0);
        $188 = HEAPU8[$187>>0]|(HEAPU8[$187+1>>0]<<8)|(HEAPU8[$187+2>>0]<<16)|(HEAPU8[$187+3>>0]<<24);
        $189 = $1;
        $190 = ((($189)) + 71|0);
        $191 = HEAPU8[$190>>0]|(HEAPU8[$190+1>>0]<<8)|(HEAPU8[$190+2>>0]<<16)|(HEAPU8[$190+3>>0]<<24);
        $192 = ($191|0)!=(0|0);
        if ($192) {
         $193 = $1;
         $194 = ((($193)) + 79|0);
         $195 = HEAPU8[$194>>0]|(HEAPU8[$194+1>>0]<<8)|(HEAPU8[$194+2>>0]<<16)|(HEAPU8[$194+3>>0]<<24);
         $196 = ($195|0)!=(0);
         if ($196) {
          label = 34;
         } else {
          $197 = $1;
          $198 = ((($197)) + 71|0);
          $199 = HEAPU8[$198>>0]|(HEAPU8[$198+1>>0]<<8)|(HEAPU8[$198+2>>0]<<16)|(HEAPU8[$198+3>>0]<<24);
          $200 = ((($199)) + 164|0);
          $201 = HEAPU8[$200>>0]|(HEAPU8[$200+1>>0]<<8)|(HEAPU8[$200+2>>0]<<16)|(HEAPU8[$200+3>>0]<<24);
          $242 = $201;
         }
        } else {
         label = 34;
        }
        if ((label|0) == 34) {
         $202 = $1;
         $203 = ((($202)) + 143|0);
         $204 = HEAPU8[$203>>0]|(HEAPU8[$203+1>>0]<<8)|(HEAPU8[$203+2>>0]<<16)|(HEAPU8[$203+3>>0]<<24);
         $242 = $204;
        }
        $205 = $1;
        $206 = ((($205)) + 71|0);
        $207 = HEAPU8[$206>>0]|(HEAPU8[$206+1>>0]<<8)|(HEAPU8[$206+2>>0]<<16)|(HEAPU8[$206+3>>0]<<24);
        $208 = ($207|0)!=(0|0);
        if ($208) {
         $209 = $1;
         $210 = ((($209)) + 79|0);
         $211 = HEAPU8[$210>>0]|(HEAPU8[$210+1>>0]<<8)|(HEAPU8[$210+2>>0]<<16)|(HEAPU8[$210+3>>0]<<24);
         $212 = ($211|0)!=(0);
         if ($212) {
          label = 38;
         } else {
          $213 = $1;
          $214 = ((($213)) + 71|0);
          $215 = HEAPU8[$214>>0]|(HEAPU8[$214+1>>0]<<8)|(HEAPU8[$214+2>>0]<<16)|(HEAPU8[$214+3>>0]<<24);
          $216 = ((($215)) + 168|0);
          $217 = HEAPU8[$216>>0]|(HEAPU8[$216+1>>0]<<8);
          $$sink = $217;
         }
        } else {
         label = 38;
        }
        if ((label|0) == 38) {
         $218 = $1;
         $219 = ((($218)) + 147|0);
         $220 = HEAPU8[$219>>0]|(HEAPU8[$219+1>>0]<<8);
         $$sink = $220;
        }
        $221 = $$sink&65535;
        $222 = $221&65535;
        $223 = $1;
        $224 = ((($223)) + 71|0);
        $225 = HEAPU8[$224>>0]|(HEAPU8[$224+1>>0]<<8)|(HEAPU8[$224+2>>0]<<16)|(HEAPU8[$224+3>>0]<<24);
        $226 = ($225|0)!=(0|0);
        if ($226) {
         $227 = $1;
         $228 = ((($227)) + 79|0);
         $229 = HEAPU8[$228>>0]|(HEAPU8[$228+1>>0]<<8)|(HEAPU8[$228+2>>0]<<16)|(HEAPU8[$228+3>>0]<<24);
         $230 = ($229|0)!=(0);
         if ($230) {
          label = 42;
         } else {
          $231 = $1;
          $232 = ((($231)) + 71|0);
          $233 = HEAPU8[$232>>0]|(HEAPU8[$232+1>>0]<<8)|(HEAPU8[$232+2>>0]<<16)|(HEAPU8[$232+3>>0]<<24);
          $234 = ((($233)) + 170|0);
          $235 = HEAPU8[$234>>0]|(HEAPU8[$234+1>>0]<<8);
          $$sink6 = $235;
         }
        } else {
         label = 42;
        }
        if ((label|0) == 42) {
         $236 = $1;
         $237 = ((($236)) + 149|0);
         $238 = HEAPU8[$237>>0]|(HEAPU8[$237+1>>0]<<8);
         $$sink6 = $238;
        }
        $239 = $$sink6&65535;
        $240 = $239&65535;
        $241 = $result;
        FUNCTION_TABLE_viiiiiiii[$177 & 127]($178,$181,$185,$188,$242,$222,$240,$241);
       }
       $243 = $result;
       $244 = ($243|0)==(2);
       if (!($244)) {
        break;
       }
       $245 = $1;
       $246 = ((($245)) + 135|0);
       HEAP8[$246>>0]=0&255;HEAP8[$246+1>>0]=(0>>8)&255;HEAP8[$246+2>>0]=(0>>16)&255;HEAP8[$246+3>>0]=0>>24;
       $247 = $1;
       $248 = ((($247)) + 139|0);
       HEAP8[$248>>0]=0&255;HEAP8[$248+1>>0]=(0>>8)&255;HEAP8[$248+2>>0]=(0>>16)&255;HEAP8[$248+3>>0]=0>>24;
       $249 = $1;
       $250 = ((($249)) + 134|0);
       $251 = HEAP8[$250>>0]|0;
       $252 = $251 & -2;
       HEAP8[$250>>0] = $252;
       break;
      }
      else if ((label|0) == 47) {
       $255 = $result;
       $256 = ($255|0)>=(201);
       if ($256) {
        $257 = $1;
        $258 = ((($257)) + 135|0);
        HEAP8[$258>>0]=68&255;HEAP8[$258+1>>0]=(68>>8)&255;HEAP8[$258+2>>0]=(68>>16)&255;HEAP8[$258+3>>0]=68>>24;
       }
       $259 = $1;
       $260 = $1;
       $261 = ((($260)) + 135|0);
       $262 = HEAPU8[$261>>0]|(HEAPU8[$261+1>>0]<<8)|(HEAPU8[$261+2>>0]<<16)|(HEAPU8[$261+3>>0]<<24);
       $263 = $1;
       $264 = ((($263)) + 139|0);
       $265 = HEAPU8[$264>>0]|(HEAPU8[$264+1>>0]<<8)|(HEAPU8[$264+2>>0]<<16)|(HEAPU8[$264+3>>0]<<24);
       (__set_current_error($259,$262,$265)|0);
       $266 = $1;
       $267 = ((($266)) + 163|0);
       $268 = HEAPU8[$267>>0]|(HEAPU8[$267+1>>0]<<8)|(HEAPU8[$267+2>>0]<<16)|(HEAPU8[$267+3>>0]<<24);
       $269 = ($268|0)!=(0|0);
       if ($269) {
        $270 = $1;
        $271 = ((($270)) + 134|0);
        $272 = HEAP8[$271>>0]|0;
        $273 = $272 & 1;
        $274 = ($273<<24>>24)!=(0);
        if ($274) {
         break;
        }
        $275 = $1;
        $276 = ((($275)) + 134|0);
        $277 = HEAP8[$276>>0]|0;
        $278 = $277 & -2;
        $279 = $278 | 1;
        HEAP8[$276>>0] = $279;
        $280 = $1;
        $281 = ((($280)) + 163|0);
        $282 = HEAPU8[$281>>0]|(HEAPU8[$281+1>>0]<<8)|(HEAPU8[$281+2>>0]<<16)|(HEAPU8[$281+3>>0]<<24);
        $283 = $1;
        $284 = $1;
        $285 = ((($284)) + 135|0);
        $286 = HEAPU8[$285>>0]|(HEAPU8[$285+1>>0]<<8)|(HEAPU8[$285+2>>0]<<16)|(HEAPU8[$285+3>>0]<<24);
        $287 = $1;
        $288 = ((($287)) + 135|0);
        $289 = HEAPU8[$288>>0]|(HEAPU8[$288+1>>0]<<8)|(HEAPU8[$288+2>>0]<<16)|(HEAPU8[$288+3>>0]<<24);
        $290 = (_mb_get_error_desc($289)|0);
        $291 = $1;
        $292 = ((($291)) + 139|0);
        $293 = HEAPU8[$292>>0]|(HEAPU8[$292+1>>0]<<8)|(HEAPU8[$292+2>>0]<<16)|(HEAPU8[$292+3>>0]<<24);
        $294 = $1;
        $295 = ((($294)) + 71|0);
        $296 = HEAPU8[$295>>0]|(HEAPU8[$295+1>>0]<<8)|(HEAPU8[$295+2>>0]<<16)|(HEAPU8[$295+3>>0]<<24);
        $297 = ($296|0)!=(0|0);
        if ($297) {
         $298 = $1;
         $299 = ((($298)) + 79|0);
         $300 = HEAPU8[$299>>0]|(HEAPU8[$299+1>>0]<<8)|(HEAPU8[$299+2>>0]<<16)|(HEAPU8[$299+3>>0]<<24);
         $301 = ($300|0)!=(0);
         if ($301) {
          label = 54;
         } else {
          $302 = $1;
          $303 = ((($302)) + 71|0);
          $304 = HEAPU8[$303>>0]|(HEAPU8[$303+1>>0]<<8)|(HEAPU8[$303+2>>0]<<16)|(HEAPU8[$303+3>>0]<<24);
          $305 = ((($304)) + 164|0);
          $306 = HEAPU8[$305>>0]|(HEAPU8[$305+1>>0]<<8)|(HEAPU8[$305+2>>0]<<16)|(HEAPU8[$305+3>>0]<<24);
          $347 = $306;
         }
        } else {
         label = 54;
        }
        if ((label|0) == 54) {
         $307 = $1;
         $308 = ((($307)) + 143|0);
         $309 = HEAPU8[$308>>0]|(HEAPU8[$308+1>>0]<<8)|(HEAPU8[$308+2>>0]<<16)|(HEAPU8[$308+3>>0]<<24);
         $347 = $309;
        }
        $310 = $1;
        $311 = ((($310)) + 71|0);
        $312 = HEAPU8[$311>>0]|(HEAPU8[$311+1>>0]<<8)|(HEAPU8[$311+2>>0]<<16)|(HEAPU8[$311+3>>0]<<24);
        $313 = ($312|0)!=(0|0);
        if ($313) {
         $314 = $1;
         $315 = ((($314)) + 79|0);
         $316 = HEAPU8[$315>>0]|(HEAPU8[$315+1>>0]<<8)|(HEAPU8[$315+2>>0]<<16)|(HEAPU8[$315+3>>0]<<24);
         $317 = ($316|0)!=(0);
         if ($317) {
          label = 58;
         } else {
          $318 = $1;
          $319 = ((($318)) + 71|0);
          $320 = HEAPU8[$319>>0]|(HEAPU8[$319+1>>0]<<8)|(HEAPU8[$319+2>>0]<<16)|(HEAPU8[$319+3>>0]<<24);
          $321 = ((($320)) + 168|0);
          $322 = HEAPU8[$321>>0]|(HEAPU8[$321+1>>0]<<8);
          $$sink7 = $322;
         }
        } else {
         label = 58;
        }
        if ((label|0) == 58) {
         $323 = $1;
         $324 = ((($323)) + 147|0);
         $325 = HEAPU8[$324>>0]|(HEAPU8[$324+1>>0]<<8);
         $$sink7 = $325;
        }
        $326 = $$sink7&65535;
        $327 = $326&65535;
        $328 = $1;
        $329 = ((($328)) + 71|0);
        $330 = HEAPU8[$329>>0]|(HEAPU8[$329+1>>0]<<8)|(HEAPU8[$329+2>>0]<<16)|(HEAPU8[$329+3>>0]<<24);
        $331 = ($330|0)!=(0|0);
        if ($331) {
         $332 = $1;
         $333 = ((($332)) + 79|0);
         $334 = HEAPU8[$333>>0]|(HEAPU8[$333+1>>0]<<8)|(HEAPU8[$333+2>>0]<<16)|(HEAPU8[$333+3>>0]<<24);
         $335 = ($334|0)!=(0);
         if ($335) {
          label = 62;
         } else {
          $336 = $1;
          $337 = ((($336)) + 71|0);
          $338 = HEAPU8[$337>>0]|(HEAPU8[$337+1>>0]<<8)|(HEAPU8[$337+2>>0]<<16)|(HEAPU8[$337+3>>0]<<24);
          $339 = ((($338)) + 170|0);
          $340 = HEAPU8[$339>>0]|(HEAPU8[$339+1>>0]<<8);
          $$sink8 = $340;
         }
        } else {
         label = 62;
        }
        if ((label|0) == 62) {
         $341 = $1;
         $342 = ((($341)) + 149|0);
         $343 = HEAPU8[$342>>0]|(HEAPU8[$342+1>>0]<<8);
         $$sink8 = $343;
        }
        $344 = $$sink8&65535;
        $345 = $344&65535;
        $346 = $result;
        FUNCTION_TABLE_viiiiiiii[$282 & 127]($283,$286,$290,$293,$347,$327,$345,$346);
       }
       $348 = $result;
       $349 = ($348|0)==(2);
       if (!($349)) {
        break;
       }
       $350 = $1;
       $351 = ((($350)) + 135|0);
       HEAP8[$351>>0]=0&255;HEAP8[$351+1>>0]=(0>>8)&255;HEAP8[$351+2>>0]=(0>>16)&255;HEAP8[$351+3>>0]=0>>24;
       $352 = $1;
       $353 = ((($352)) + 139|0);
       HEAP8[$353>>0]=0&255;HEAP8[$353+1>>0]=(0>>8)&255;HEAP8[$353+2>>0]=(0>>16)&255;HEAP8[$353+3>>0]=0>>24;
       $354 = $1;
       $355 = ((($354)) + 134|0);
       $356 = HEAP8[$355>>0]|0;
       $357 = $356 & -2;
       HEAP8[$355>>0] = $357;
       break;
      }
      $360 = $1;
      $361 = $running;
      $362 = $5;
      __out_of_scope($360,$361,0,$362,1);
      $363 = $1;
      $364 = $2;
      $365 = $running;
      $366 = $5;
      $367 = (__proc_args($363,$364,$365,0,0,$366,0,0,0,0)|0);
      $result = $367;
      $368 = $result;
      $369 = ($368|0)!=(0);
      if (!($369)) {
       $370 = ((($inte)) + 4|0);
       ;HEAP8[$370>>0]=0|0;HEAP8[$370+1>>0]=0|0;HEAP8[$370+2>>0]=0|0;HEAP8[$370+3>>0]=0|0;
       HEAP8[$inte>>0]=0&255;HEAP8[$inte+1>>0]=(0>>8)&255;HEAP8[$inte+2>>0]=(0>>16)&255;HEAP8[$inte+3>>0]=0>>24;
       $371 = $running;
       $372 = ((($371)) + 20|0);
       __swap_public_value($inte,$372);
       $373 = $1;
       $374 = $5;
       $375 = (__unlink_lambda_scope_chain($373,$374,0)|0);
       $running = $375;
       $376 = $1;
       $377 = $1;
       $378 = ((($377)) + 75|0);
       $379 = HEAPU8[$378>>0]|(HEAPU8[$378+1>>0]<<8)|(HEAPU8[$378+2>>0]<<16)|(HEAPU8[$378+3>>0]<<24);
       $380 = ((($379)) + 20|0);
       __assign_public_value($376,$380,$inte,0);
      }
     } else {
      $117 = $ast;
      $118 = ($117|0)!=(0|0);
      if ($118) {
       $119 = $ast;
       $120 = HEAPU8[$119>>0]|(HEAPU8[$119+1>>0]<<8)|(HEAPU8[$119+2>>0]<<16)|(HEAPU8[$119+3>>0]<<24);
       $121 = ($120|0)!=(0|0);
       if ($121) {
        $122 = $1;
        $123 = $1;
        $124 = ((($123)) + 67|0);
        $125 = HEAPU8[$124>>0]|(HEAPU8[$124+1>>0]<<8)|(HEAPU8[$124+2>>0]<<16)|(HEAPU8[$124+3>>0]<<24);
        $126 = (__set_current_error($122,53,$125)|0);
        $127 = ($126<<24>>24)!=(0);
        if (!($127)) {
         break;
        }
        $128 = $1;
        $129 = $ast;
        $130 = HEAPU8[$129>>0]|(HEAPU8[$129+1>>0]<<8)|(HEAPU8[$129+2>>0]<<16)|(HEAPU8[$129+3>>0]<<24);
        $131 = ((($130)) + 9|0);
        $132 = HEAPU8[$131>>0]|(HEAPU8[$131+1>>0]<<8)|(HEAPU8[$131+2>>0]<<16)|(HEAPU8[$131+3>>0]<<24);
        $133 = $ast;
        $134 = HEAPU8[$133>>0]|(HEAPU8[$133+1>>0]<<8)|(HEAPU8[$133+2>>0]<<16)|(HEAPU8[$133+3>>0]<<24);
        $135 = ((($134)) + 13|0);
        $136 = HEAPU8[$135>>0]|(HEAPU8[$135+1>>0]<<8);
        $137 = $ast;
        $138 = HEAPU8[$137>>0]|(HEAPU8[$137+1>>0]<<8)|(HEAPU8[$137+2>>0]<<16)|(HEAPU8[$137+3>>0]<<24);
        $139 = ((($138)) + 15|0);
        $140 = HEAPU8[$139>>0]|(HEAPU8[$139+1>>0]<<8);
        __set_error_pos($128,$132,$136,$140);
        $result = 3;
        break;
       }
      }
      $141 = $1;
      $142 = $1;
      $143 = ((($142)) + 67|0);
      $144 = HEAPU8[$143>>0]|(HEAPU8[$143+1>>0]<<8)|(HEAPU8[$143+2>>0]<<16)|(HEAPU8[$143+3>>0]<<24);
      $145 = (__set_current_error($141,53,$144)|0);
      $146 = ($145<<24>>24)!=(0);
      if ($146) {
       $147 = $1;
       __set_error_pos($147,0,0,0);
       $result = 3;
      }
     }
    } while(0);
    $381 = $result;
    $382 = ($381|0)!=(0);
    if ($382) {
     $383 = $1;
     $384 = $5;
     (__unlink_lambda_scope_chain($383,$384,0)|0);
    }
   }
  } else {
   $39 = $2;
   $40 = ($39|0)!=(0|0);
   if ($40) {
    $41 = $2;
    $42 = HEAP32[$41>>2]|0;
    $43 = ($42|0)!=(0|0);
    if ($43) {
     $44 = $2;
     $45 = HEAP32[$44>>2]|0;
     $46 = HEAPU8[$45>>0]|(HEAPU8[$45+1>>0]<<8)|(HEAPU8[$45+2>>0]<<16)|(HEAPU8[$45+3>>0]<<24);
     $47 = ($46|0)!=(0|0);
     if ($47) {
      $48 = $1;
      $49 = $1;
      $50 = ((($49)) + 67|0);
      $51 = HEAPU8[$50>>0]|(HEAPU8[$50+1>>0]<<8)|(HEAPU8[$50+2>>0]<<16)|(HEAPU8[$50+3>>0]<<24);
      $52 = (__set_current_error($48,53,$51)|0);
      $53 = ($52<<24>>24)!=(0);
      if (!($53)) {
       break;
      }
      $54 = $1;
      $55 = $2;
      $56 = HEAP32[$55>>2]|0;
      $57 = HEAPU8[$56>>0]|(HEAPU8[$56+1>>0]<<8)|(HEAPU8[$56+2>>0]<<16)|(HEAPU8[$56+3>>0]<<24);
      $58 = ((($57)) + 9|0);
      $59 = HEAPU8[$58>>0]|(HEAPU8[$58+1>>0]<<8)|(HEAPU8[$58+2>>0]<<16)|(HEAPU8[$58+3>>0]<<24);
      $60 = $2;
      $61 = HEAP32[$60>>2]|0;
      $62 = HEAPU8[$61>>0]|(HEAPU8[$61+1>>0]<<8)|(HEAPU8[$61+2>>0]<<16)|(HEAPU8[$61+3>>0]<<24);
      $63 = ((($62)) + 13|0);
      $64 = HEAPU8[$63>>0]|(HEAPU8[$63+1>>0]<<8);
      $65 = $2;
      $66 = HEAP32[$65>>2]|0;
      $67 = HEAPU8[$66>>0]|(HEAPU8[$66+1>>0]<<8)|(HEAPU8[$66+2>>0]<<16)|(HEAPU8[$66+3>>0]<<24);
      $68 = ((($67)) + 15|0);
      $69 = HEAPU8[$68>>0]|(HEAPU8[$68+1>>0]<<8);
      __set_error_pos($54,$59,$64,$69);
      $result = 3;
      break;
     }
    }
   }
   $70 = $1;
   $71 = $1;
   $72 = ((($71)) + 67|0);
   $73 = HEAPU8[$72>>0]|(HEAPU8[$72+1>>0]<<8)|(HEAPU8[$72+2>>0]<<16)|(HEAPU8[$72+3>>0]<<24);
   $74 = (__set_current_error($70,53,$73)|0);
   $75 = ($74<<24>>24)!=(0);
   if ($75) {
    $76 = $1;
    __set_error_pos($76,0,0,0);
    $result = 3;
   }
  }
 } while(0);
 $385 = $lastr;
 $386 = $1;
 $387 = ((($386)) + 98|0);
 HEAP8[$387>>0]=$385&255;HEAP8[$387+1>>0]=($385>>8)&255;HEAP8[$387+2>>0]=($385>>16)&255;HEAP8[$387+3>>0]=$385>>24;
 $388 = $1;
 $389 = $lastv;
 __pop_var_args($388,$389);
 $390 = $ast;
 $391 = $2;
 HEAP32[$391>>2] = $390;
 $392 = $result;
 $0 = $392;
 $393 = $0;
 STACKTOP = sp;return ($393|0);
}
function __eval_native_routine($s,$l,$va,$ca,$r,$has_arg,$pop_arg) {
 $s = $s|0;
 $l = $l|0;
 $va = $va|0;
 $ca = $ca|0;
 $r = $r|0;
 $has_arg = $has_arg|0;
 $pop_arg = $pop_arg|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $9 = 0, $entry = 0, $lastr = 0, $lastv = 0, $or$cond = 0, $or$cond3 = 0, $or$cond5 = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $l;
 $2 = $va;
 $3 = $ca;
 $4 = $r;
 $5 = $has_arg;
 $6 = $pop_arg;
 $result = 0;
 $lastr = 0;
 $entry = 0;
 $lastv = 0;
 $7 = $0;
 $8 = ($7|0)!=(0|0);
 $9 = $1;
 $10 = ($9|0)!=(0|0);
 $or$cond = $8 & $10;
 if ($or$cond) {
 }
 $11 = $0;
 $12 = ($11|0)!=(0|0);
 $13 = $1;
 $14 = ($13|0)!=(0|0);
 $or$cond3 = $12 & $14;
 $15 = $4;
 $16 = ($15|0)!=(0|0);
 $or$cond5 = $or$cond3 & $16;
 if (!($or$cond5)) {
  ___assert_fail((9154|0),(4322|0),4727,(9166|0));
  // unreachable;
 }
 $17 = $0;
 $18 = ((($17)) + 98|0);
 $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
 $lastr = $19;
 $20 = $4;
 $21 = $0;
 $22 = ((($21)) + 98|0);
 HEAP8[$22>>0]=$20&255;HEAP8[$22+1>>0]=($20>>8)&255;HEAP8[$22+2>>0]=($20>>16)&255;HEAP8[$22+3>>0]=$20>>24;
 $23 = $0;
 $24 = (__push_var_args($23)|0);
 $lastv = $24;
 $25 = $4;
 $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
 $entry = $26;
 $27 = $entry;
 $28 = ($27|0)!=(0|0);
 do {
  if ($28) {
   $67 = $entry;
   $68 = $0;
   $69 = $1;
   $70 = $2;
   $71 = $3;
   $72 = $4;
   $73 = $5;
   $74 = $6;
   $75 = (FUNCTION_TABLE_iiiiiiii[$67 & 255]($68,$69,$70,$71,$72,$73,$74)|0);
   $result = $75;
  } else {
   $29 = $1;
   $30 = ($29|0)!=(0|0);
   if ($30) {
    $31 = $1;
    $32 = HEAP32[$31>>2]|0;
    $33 = ($32|0)!=(0|0);
    if ($33) {
     $34 = $1;
     $35 = HEAP32[$34>>2]|0;
     $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
     $37 = ($36|0)!=(0|0);
     if ($37) {
      $38 = $0;
      $39 = $0;
      $40 = ((($39)) + 67|0);
      $41 = HEAPU8[$40>>0]|(HEAPU8[$40+1>>0]<<8)|(HEAPU8[$40+2>>0]<<16)|(HEAPU8[$40+3>>0]<<24);
      $42 = (__set_current_error($38,53,$41)|0);
      $43 = ($42<<24>>24)!=(0);
      if (!($43)) {
       break;
      }
      $44 = $0;
      $45 = $1;
      $46 = HEAP32[$45>>2]|0;
      $47 = HEAPU8[$46>>0]|(HEAPU8[$46+1>>0]<<8)|(HEAPU8[$46+2>>0]<<16)|(HEAPU8[$46+3>>0]<<24);
      $48 = ((($47)) + 9|0);
      $49 = HEAPU8[$48>>0]|(HEAPU8[$48+1>>0]<<8)|(HEAPU8[$48+2>>0]<<16)|(HEAPU8[$48+3>>0]<<24);
      $50 = $1;
      $51 = HEAP32[$50>>2]|0;
      $52 = HEAPU8[$51>>0]|(HEAPU8[$51+1>>0]<<8)|(HEAPU8[$51+2>>0]<<16)|(HEAPU8[$51+3>>0]<<24);
      $53 = ((($52)) + 13|0);
      $54 = HEAPU8[$53>>0]|(HEAPU8[$53+1>>0]<<8);
      $55 = $1;
      $56 = HEAP32[$55>>2]|0;
      $57 = HEAPU8[$56>>0]|(HEAPU8[$56+1>>0]<<8)|(HEAPU8[$56+2>>0]<<16)|(HEAPU8[$56+3>>0]<<24);
      $58 = ((($57)) + 15|0);
      $59 = HEAPU8[$58>>0]|(HEAPU8[$58+1>>0]<<8);
      __set_error_pos($44,$49,$54,$59);
      $result = 3;
      break;
     }
    }
   }
   $60 = $0;
   $61 = $0;
   $62 = ((($61)) + 67|0);
   $63 = HEAPU8[$62>>0]|(HEAPU8[$62+1>>0]<<8)|(HEAPU8[$62+2>>0]<<16)|(HEAPU8[$62+3>>0]<<24);
   $64 = (__set_current_error($60,53,$63)|0);
   $65 = ($64<<24>>24)!=(0);
   if ($65) {
    $66 = $0;
    __set_error_pos($66,0,0,0);
    $result = 3;
   }
  }
 } while(0);
 $76 = $lastr;
 $77 = $0;
 $78 = ((($77)) + 98|0);
 HEAP8[$78>>0]=$76&255;HEAP8[$78+1>>0]=($76>>8)&255;HEAP8[$78+2>>0]=($76>>16)&255;HEAP8[$78+3>>0]=$76>>24;
 $79 = $0;
 $80 = $lastv;
 __pop_var_args($79,$80);
 $81 = $result;
 STACKTOP = sp;return ($81|0);
}
function __push_var_args($s) {
 $s = $s|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $0;
 $2 = ((($1)) + 84|0);
 $3 = HEAPU8[$2>>0]|(HEAPU8[$2+1>>0]<<8)|(HEAPU8[$2+2>>0]<<16)|(HEAPU8[$2+3>>0]<<24);
 $result = $3;
 $4 = $0;
 $5 = ((($4)) + 84|0);
 HEAP8[$5>>0]=0&255;HEAP8[$5+1>>0]=(0>>8)&255;HEAP8[$5+2>>0]=(0>>16)&255;HEAP8[$5+3>>0]=0>>24;
 $6 = $result;
 STACKTOP = sp;return ($6|0);
}
function __pop_var_args($s,$last_var_args) {
 $s = $s|0;
 $last_var_args = $last_var_args|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__lst = 0, $__opresult = 0, $__tmp = 0;
 var $var_args = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $last_var_args;
 $2 = $0;
 $3 = ((($2)) + 84|0);
 $4 = HEAPU8[$3>>0]|(HEAPU8[$3+1>>0]<<8)|(HEAPU8[$3+2>>0]<<16)|(HEAPU8[$3+3>>0]<<24);
 $var_args = $4;
 $5 = $1;
 $6 = $0;
 $7 = ((($6)) + 84|0);
 HEAP8[$7>>0]=$5&255;HEAP8[$7+1>>0]=($5>>8)&255;HEAP8[$7+2>>0]=($5>>16)&255;HEAP8[$7+3>>0]=$5>>24;
 $8 = $var_args;
 $9 = ($8|0)!=(0|0);
 if (!($9)) {
  STACKTOP = sp;return;
 }
 $10 = $var_args;
 $__lst = $10;
 $__opresult = 0;
 $__tmp = 0;
 $11 = $var_args;
 $12 = ($11|0)!=(0|0);
 if (!($12)) {
  ___assert_fail((9187|0),(4322|0),4280,(9196|0));
  // unreachable;
 }
 $13 = $__lst;
 $14 = ((($13)) + 8|0);
 $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
 $__lst = $15;
 while(1) {
  $16 = $__lst;
  $17 = ($16|0)!=(0|0);
  if (!($17)) {
   break;
  }
  $18 = $__lst;
  $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
  $20 = $__lst;
  $21 = ((($20)) + 12|0);
  $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
  $23 = $0;
  $24 = ((($23)) + 21|0);
  __destroy_var_arg($19,$22,$24);
  $25 = $__lst;
  $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
  $27 = $__lst;
  $28 = ((($27)) + 12|0);
  $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
  $30 = (__do_nothing_on_object($26,$29)|0);
  $__opresult = $30;
  $31 = $__lst;
  $__tmp = $31;
  $32 = $__lst;
  $33 = ((($32)) + 8|0);
  $34 = HEAPU8[$33>>0]|(HEAPU8[$33+1>>0]<<8)|(HEAPU8[$33+2>>0]<<16)|(HEAPU8[$33+3>>0]<<24);
  $__lst = $34;
  $35 = $__opresult;
  $36 = (-1)==($35|0);
  if (!($36)) {
   continue;
  }
  $37 = $__lst;
  $38 = $__tmp;
  $39 = ((($38)) + 4|0);
  $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8)|(HEAPU8[$39+2>>0]<<16)|(HEAPU8[$39+3>>0]<<24);
  $41 = ((($40)) + 8|0);
  HEAP8[$41>>0]=$37&255;HEAP8[$41+1>>0]=($37>>8)&255;HEAP8[$41+2>>0]=($37>>16)&255;HEAP8[$41+3>>0]=$37>>24;
  $42 = $__lst;
  $43 = ($42|0)!=(0|0);
  if ($43) {
   $44 = $__tmp;
   $45 = ((($44)) + 4|0);
   $46 = HEAPU8[$45>>0]|(HEAPU8[$45+1>>0]<<8)|(HEAPU8[$45+2>>0]<<16)|(HEAPU8[$45+3>>0]<<24);
   $47 = $__lst;
   $48 = ((($47)) + 4|0);
   HEAP8[$48>>0]=$46&255;HEAP8[$48+1>>0]=($46>>8)&255;HEAP8[$48+2>>0]=($46>>16)&255;HEAP8[$48+3>>0]=$46>>24;
  }
  $49 = $__tmp;
  $50 = ($49|0)!=(0|0);
  if (!($50)) {
   label = 11;
   break;
  }
  $51 = $__tmp;
  _mb_free($51);
  $__tmp = 0;
  $52 = $var_args;
  $53 = HEAPU8[$52>>0]|(HEAPU8[$52+1>>0]<<8)|(HEAPU8[$52+2>>0]<<16)|(HEAPU8[$52+3>>0]<<24);
  $54 = ((($53)) + -1|0);
  $55 = $var_args;
  HEAP8[$55>>0]=$54&255;HEAP8[$55+1>>0]=($54>>8)&255;HEAP8[$55+2>>0]=($54>>16)&255;HEAP8[$55+3>>0]=$54>>24;
 }
 if ((label|0) == 11) {
  ___assert_fail((4369|0),(4322|0),4280,(9196|0));
  // unreachable;
 }
 $56 = $var_args;
 __ls_destroy($56);
 STACKTOP = sp;return;
}
function __destroy_var_arg($data,$extra,$gc) {
 $data = $data|0;
 $extra = $extra|0;
 $gc = $gc|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $9 = 0, $obj = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $data;
 $1 = $extra;
 $2 = $gc;
 $obj = 0;
 $3 = $0;
 $4 = ($3|0)!=(0|0);
 if (!($4)) {
  ___assert_fail((6381|0),(4322|0),10669,(9210|0));
  // unreachable;
 }
 $5 = $0;
 $obj = $5;
 $6 = $obj;
 $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
 L4: do {
  switch ($7|0) {
  case 7:  {
   $8 = $obj;
   $9 = ((($8)) + 4|0);
   $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
   $11 = $obj;
   $12 = ((($11)) + 4|0);
   $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
   (__unref($10,$13)|0);
   break;
  }
  case 10:  {
   $14 = $obj;
   $15 = ((($14)) + 8|0);
   $16 = HEAP8[$15>>0]|0;
   $17 = $16 & 1;
   $18 = ($17<<24>>24)!=(0);
   if (!($18)) {
    $19 = $obj;
    $20 = ((($19)) + 4|0);
    $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
    $22 = $obj;
    $23 = ((($22)) + 4|0);
    $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
    (__unref($21,$24)|0);
   }
   break;
  }
  case 11:  {
   $25 = $obj;
   $26 = ((($25)) + 4|0);
   $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
   $28 = $obj;
   $29 = ((($28)) + 4|0);
   $30 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8)|(HEAPU8[$29+2>>0]<<16)|(HEAPU8[$29+3>>0]<<24);
   (__unref($27,$30)|0);
   break;
  }
  case 13:  {
   $31 = $obj;
   $32 = ((($31)) + 4|0);
   $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
   $34 = $obj;
   $35 = ((($34)) + 4|0);
   $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
   (__unref($33,$36)|0);
   break;
  }
  case 16:  {
   $37 = $obj;
   $38 = ((($37)) + 8|0);
   $39 = HEAP8[$38>>0]|0;
   $40 = $39 & 1;
   $41 = ($40<<24>>24)!=(0);
   if (!($41)) {
    $42 = $obj;
    $43 = ((($42)) + 4|0);
    $44 = HEAPU8[$43>>0]|(HEAPU8[$43+1>>0]<<8)|(HEAPU8[$43+2>>0]<<16)|(HEAPU8[$43+3>>0]<<24);
    $45 = $obj;
    $46 = ((($45)) + 4|0);
    $47 = HEAPU8[$46>>0]|(HEAPU8[$46+1>>0]<<8)|(HEAPU8[$46+2>>0]<<16)|(HEAPU8[$46+3>>0]<<24);
    (__unref($44,$47)|0);
   }
   break;
  }
  case 17:  {
   $48 = $obj;
   $49 = ((($48)) + 8|0);
   $50 = HEAP8[$49>>0]|0;
   $51 = $50 & 1;
   $52 = ($51<<24>>24)!=(0);
   if (!($52)) {
    $53 = $obj;
    $54 = ((($53)) + 4|0);
    $55 = HEAPU8[$54>>0]|(HEAPU8[$54+1>>0]<<8)|(HEAPU8[$54+2>>0]<<16)|(HEAPU8[$54+3>>0]<<24);
    $56 = ((($55)) + 58|0);
    $57 = HEAPU8[$56>>0]|(HEAPU8[$56+1>>0]<<8)|(HEAPU8[$56+2>>0]<<16)|(HEAPU8[$56+3>>0]<<24);
    $58 = ($57|0)==(2);
    if ($58) {
     $59 = $obj;
     $60 = ((($59)) + 4|0);
     $61 = HEAPU8[$60>>0]|(HEAPU8[$60+1>>0]<<8)|(HEAPU8[$60+2>>0]<<16)|(HEAPU8[$60+3>>0]<<24);
     $62 = $obj;
     $63 = ((($62)) + 4|0);
     $64 = HEAPU8[$63>>0]|(HEAPU8[$63+1>>0]<<8)|(HEAPU8[$63+2>>0]<<16)|(HEAPU8[$63+3>>0]<<24);
     (__unref($61,$64)|0);
     break L4;
    }
   }
   $65 = $obj;
   $66 = ((($65)) + 8|0);
   $67 = HEAP8[$66>>0]|0;
   $68 = $67 & 1;
   $69 = ($68<<24>>24)!=(0);
   if (!($69)) {
    $70 = $obj;
    $71 = ((($70)) + 4|0);
    $72 = HEAPU8[$71>>0]|(HEAPU8[$71+1>>0]<<8)|(HEAPU8[$71+2>>0]<<16)|(HEAPU8[$71+3>>0]<<24);
    $73 = ((($72)) + 58|0);
    $74 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
    $75 = ($74|0)!=(2);
    if ($75) {
     $76 = $obj;
     $77 = ((($76)) + 4|0);
     $78 = HEAPU8[$77>>0]|(HEAPU8[$77+1>>0]<<8)|(HEAPU8[$77+2>>0]<<16)|(HEAPU8[$77+3>>0]<<24);
     __destroy_routine(0,$78);
    }
   }
   break;
  }
  default: {
  }
  }
 } while(0);
 $79 = $obj;
 $80 = ($79|0)!=(0|0);
 if ($80) {
  $81 = $obj;
  _mb_free($81);
  $obj = 0;
  STACKTOP = sp;return;
 } else {
  ___assert_fail((4369|0),(4322|0),10673,(9210|0));
  // unreachable;
 }
}
function __link_lambda_scope_chain($s,$lambda,$weak) {
 $s = $s|0;
 $lambda = $lambda|0;
 $weak = $weak|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $8 = 0, $9 = 0, $ret = 0, $root = 0, $root_ref = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $s;
 $2 = $lambda;
 $3 = $weak;
 $root_ref = 0;
 $root = 0;
 $4 = $2;
 $5 = ((($4)) + 25|0);
 $6 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
 $7 = ($6|0)!=(0|0);
 do {
  if ($7) {
   $8 = $2;
   $9 = ((($8)) + 25|0);
   $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
   $11 = ((($10)) + 21|0);
   $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
   $13 = $2;
   $14 = ((($13)) + 17|0);
   $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
   HEAP8[$15>>0]=$12&255;HEAP8[$15+1>>0]=($12>>8)&255;HEAP8[$15+2>>0]=($12>>16)&255;HEAP8[$15+3>>0]=$12>>24;
   $16 = $1;
   $17 = $2;
   $18 = ((($17)) + 17|0);
   $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
   $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8)|(HEAPU8[$19+2>>0]<<16)|(HEAPU8[$19+3>>0]<<24);
   $21 = (__find_scope($16,$20)|0);
   $22 = ($21|0)!=(0|0);
   if (!($22)) {
    $38 = $2;
    $39 = ((($38)) + 25|0);
    $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8)|(HEAPU8[$39+2>>0]<<16)|(HEAPU8[$39+3>>0]<<24);
    $41 = (__get_root_ref_scope($40)|0);
    $root_ref = $41;
    $42 = $root_ref;
    $43 = ((($42)) + 21|0);
    $44 = HEAPU8[$43>>0]|(HEAPU8[$43+1>>0]<<8)|(HEAPU8[$43+2>>0]<<16)|(HEAPU8[$43+3>>0]<<24);
    HEAP8[$44>>0]=0&255;HEAP8[$44+1>>0]=(0>>8)&255;HEAP8[$44+2>>0]=(0>>16)&255;HEAP8[$44+3>>0]=0>>24;
    break;
   }
   $23 = $1;
   $24 = ((($23)) + 75|0);
   $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
   $26 = $2;
   $27 = ((($26)) + 29|0);
   HEAP8[$27>>0]=$25&255;HEAP8[$27+1>>0]=($25>>8)&255;HEAP8[$27+2>>0]=($25>>16)&255;HEAP8[$27+3>>0]=$25>>24;
   $28 = $3;
   $29 = ($28<<24>>24)!=(0);
   if (!($29)) {
    $30 = $2;
    $31 = ((($30)) + 17|0);
    $32 = HEAPU8[$31>>0]|(HEAPU8[$31+1>>0]<<8)|(HEAPU8[$31+2>>0]<<16)|(HEAPU8[$31+3>>0]<<24);
    $33 = $1;
    $34 = ((($33)) + 75|0);
    HEAP8[$34>>0]=$32&255;HEAP8[$34+1>>0]=($32>>8)&255;HEAP8[$34+2>>0]=($32>>16)&255;HEAP8[$34+3>>0]=$32>>24;
   }
   $35 = $2;
   $36 = ((($35)) + 17|0);
   $37 = HEAPU8[$36>>0]|(HEAPU8[$36+1>>0]<<8)|(HEAPU8[$36+2>>0]<<16)|(HEAPU8[$36+3>>0]<<24);
   $0 = $37;
   $70 = $0;
   STACKTOP = sp;return ($70|0);
  }
 } while(0);
 $45 = $2;
 $46 = ((($45)) + 17|0);
 $47 = HEAPU8[$46>>0]|(HEAPU8[$46+1>>0]<<8)|(HEAPU8[$46+2>>0]<<16)|(HEAPU8[$46+3>>0]<<24);
 $48 = (__get_root_scope($47)|0);
 $root = $48;
 $49 = $3;
 $50 = ($49<<24>>24)!=(0);
 $51 = $1;
 if ($50) {
  $52 = $root;
  $53 = (__push_weak_scope_by_routine($51,$52,0)|0);
  $ret = $53;
  $54 = $ret;
  $55 = $root;
  $56 = ($54|0)!=($55|0);
  if ($56) {
   $57 = $1;
   $58 = $ret;
   __destroy_scope($57,$58);
   $0 = 0;
   $70 = $0;
   STACKTOP = sp;return ($70|0);
  }
 } else {
  $59 = ((($51)) + 75|0);
  $60 = HEAPU8[$59>>0]|(HEAPU8[$59+1>>0]<<8)|(HEAPU8[$59+2>>0]<<16)|(HEAPU8[$59+3>>0]<<24);
  $61 = $root;
  HEAP8[$61>>0]=$60&255;HEAP8[$61+1>>0]=($60>>8)&255;HEAP8[$61+2>>0]=($60>>16)&255;HEAP8[$61+3>>0]=$60>>24;
  $62 = $2;
  $63 = ((($62)) + 17|0);
  $64 = HEAPU8[$63>>0]|(HEAPU8[$63+1>>0]<<8)|(HEAPU8[$63+2>>0]<<16)|(HEAPU8[$63+3>>0]<<24);
  $65 = $1;
  $66 = ((($65)) + 75|0);
  HEAP8[$66>>0]=$64&255;HEAP8[$66+1>>0]=($64>>8)&255;HEAP8[$66+2>>0]=($64>>16)&255;HEAP8[$66+3>>0]=$64>>24;
 }
 $67 = $2;
 $68 = ((($67)) + 17|0);
 $69 = HEAPU8[$68>>0]|(HEAPU8[$68+1>>0]<<8)|(HEAPU8[$68+2>>0]<<16)|(HEAPU8[$68+3>>0]<<24);
 $0 = $69;
 $70 = $0;
 STACKTOP = sp;return ($70|0);
}
function __proc_args($s,$l,$running,$va,$ca,$r,$has_arg,$pop_arg,$proc_ref,$args) {
 $s = $s|0;
 $l = $l|0;
 $running = $running|0;
 $va = $va|0;
 $ca = $ca|0;
 $r = $r|0;
 $has_arg = $has_arg|0;
 $pop_arg = $pop_arg|0;
 $proc_ref = $proc_ref|0;
 $args = $args|0;
 var $$old = 0, $$old10 = 0, $$old7 = 0, $$old9 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0;
 var $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0;
 var $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0;
 var $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0;
 var $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0;
 var $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0;
 var $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0;
 var $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0;
 var $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0;
 var $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__hr = 0, $__hr1 = 0, $arg = 0, $ast = 0, $ia = 0, $obj = 0, $obj2 = 0, $obj3 = 0, $or$cond = 0, $or$cond$not = 0, $or$cond11 = 0, $or$cond5 = 0;
 var $or$cond8 = 0, $parameters = 0, $pars = 0, $result = 0, $rnode = 0, $var = 0, $var_args = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $arg = sp + 96|0;
 $ia = sp + 24|0;
 $1 = $s;
 $2 = $l;
 $3 = $running;
 $4 = $va;
 $5 = $ca;
 $6 = $r;
 $7 = $has_arg;
 $8 = $pop_arg;
 $9 = $proc_ref;
 $10 = $args;
 $result = 0;
 $ast = 0;
 $parameters = 0;
 $pars = 0;
 $var = 0;
 $rnode = 0;
 HEAP32[$ia>>2] = 0;
 $var_args = 0;
 $11 = $6;
 $12 = ((($11)) + 4|0);
 $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
 $parameters = $13;
 $14 = $6;
 $15 = ((($14)) + 58|0);
 $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
 $17 = ($16|0)==(2);
 if ($17) {
  $18 = $6;
  $19 = ((($18)) + 21|0);
  $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8)|(HEAPU8[$19+2>>0]<<16)|(HEAPU8[$19+3>>0]<<24);
  $parameters = $20;
 }
 $21 = $parameters;
 $22 = ($21|0)!=(0|0);
 do {
  if ($22) {
   $23 = ((($arg)) + 4|0);
   ;HEAP8[$23>>0]=0|0;HEAP8[$23+1>>0]=0|0;HEAP8[$23+2>>0]=0|0;HEAP8[$23+3>>0]=0|0;
   HEAP8[$arg>>0]=0&255;HEAP8[$arg+1>>0]=(0>>8)&255;HEAP8[$arg+2>>0]=(0>>16)&255;HEAP8[$arg+3>>0]=0>>24;
   $24 = $parameters;
   $pars = $24;
   $25 = $pars;
   $26 = ((($25)) + 8|0);
   $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
   $pars = $27;
   L6: while(1) {
    $$old = $pars;
    $$old7 = ($$old|0)!=(0|0);
    if (!($$old7)) {
     label = 35;
     break;
    }
    while(1) {
     $28 = $7;
     $29 = ($28|0)!=(0|0);
     if ($29) {
      $30 = $7;
      $31 = ($30|0)!=(0|0);
      if (!($31)) {
       label = 35;
       break L6;
      }
      $32 = $7;
      $33 = $1;
      $34 = $2;
      $35 = $4;
      $36 = $5;
      $37 = $6;
      $38 = (FUNCTION_TABLE_iiiiiii[$32 & 255]($33,$34,$35,$36,$ia,$37)|0);
      $39 = ($38|0)!=(0);
      if (!($39)) {
       label = 35;
       break L6;
      }
     }
     $40 = $pars;
     $41 = HEAPU8[$40>>0]|(HEAPU8[$40+1>>0]<<8)|(HEAPU8[$40+2>>0]<<16)|(HEAPU8[$40+3>>0]<<24);
     $var = $41;
     $42 = $pars;
     $43 = ((($42)) + 8|0);
     $44 = HEAPU8[$43>>0]|(HEAPU8[$43+1>>0]<<8)|(HEAPU8[$43+2>>0]<<16)|(HEAPU8[$43+3>>0]<<24);
     $pars = $44;
     $45 = $var;
     $46 = ($45|0)==(8226|0);
     if ($46) {
      label = 35;
      break L6;
     }
     $47 = $8;
     $48 = ($47|0)!=(0|0);
     if ($48) {
      $49 = $1;
      $50 = $2;
      $51 = $4;
      $52 = $5;
      $53 = $6;
      $54 = $8;
      $55 = $10;
      $56 = (__pop_arg($49,$50,$51,$52,$ia,$53,$54,$55,$arg)|0);
      $__hr = $56;
      $57 = $__hr;
      $58 = ($57|0)!=(0);
      if ($58) {
       label = 12;
       break L6;
      }
      $60 = $1;
      $61 = (__try_purge_it($60,$arg,0)|0);
      $62 = ($61<<24>>24)!=(0);
      if ($62) {
       label = 14;
       break L6;
      }
     }
     $101 = $3;
     $102 = ((($101)) + 4|0);
     $103 = HEAPU8[$102>>0]|(HEAPU8[$102+1>>0]<<8)|(HEAPU8[$102+2>>0]<<16)|(HEAPU8[$102+3>>0]<<24);
     $104 = ($103|0)==(2);
     if ($104) {
      $105 = $3;
      $106 = ((($105)) + 8|0);
      $107 = HEAPU8[$106>>0]|(HEAPU8[$106+1>>0]<<8)|(HEAPU8[$106+2>>0]<<16)|(HEAPU8[$106+3>>0]<<24);
      $108 = $var;
      $109 = HEAPU8[$108>>0]|(HEAPU8[$108+1>>0]<<8)|(HEAPU8[$108+2>>0]<<16)|(HEAPU8[$108+3>>0]<<24);
      $110 = (__ht_find($107,$109)|0);
      $111 = HEAPU8[$110>>0]|(HEAPU8[$110+1>>0]<<8)|(HEAPU8[$110+2>>0]<<16)|(HEAPU8[$110+3>>0]<<24);
      $obj = $111;
      $112 = $obj;
      $113 = ((($112)) + 4|0);
      $114 = HEAPU8[$113>>0]|(HEAPU8[$113+1>>0]<<8)|(HEAPU8[$113+2>>0]<<16)|(HEAPU8[$113+3>>0]<<24);
      $var = $114;
      $115 = $9;
      $116 = ($115<<24>>24)!=(0);
      if ($116) {
       $117 = $var;
       $118 = ((($117)) + 4|0);
       $119 = HEAPU8[$118>>0]|(HEAPU8[$118+1>>0]<<8)|(HEAPU8[$118+2>>0]<<16)|(HEAPU8[$118+3>>0]<<24);
       $120 = ((($119)) + 8|0);
       $121 = HEAP8[$120>>0]|0;
       $122 = $121 & -2;
       HEAP8[$120>>0] = $122;
      }
     } else {
      $123 = $1;
      $124 = $3;
      $125 = $var;
      $126 = HEAPU8[$125>>0]|(HEAPU8[$125+1>>0]<<8)|(HEAPU8[$125+2>>0]<<16)|(HEAPU8[$125+3>>0]<<24);
      $127 = (__search_identifier_in_scope_chain($123,$124,$126,0,0,0)|0);
      $rnode = $127;
      $128 = $rnode;
      $129 = ($128|0)!=(0|0);
      if ($129) {
       $130 = $rnode;
       $131 = HEAPU8[$130>>0]|(HEAPU8[$130+1>>0]<<8)|(HEAPU8[$130+2>>0]<<16)|(HEAPU8[$130+3>>0]<<24);
       $132 = ((($131)) + 4|0);
       $133 = HEAPU8[$132>>0]|(HEAPU8[$132+1>>0]<<8)|(HEAPU8[$132+2>>0]<<16)|(HEAPU8[$132+3>>0]<<24);
       $var = $133;
      }
      $134 = $9;
      $135 = ($134<<24>>24)!=(0);
      if ($135) {
       $136 = $var;
       $137 = ((($136)) + 4|0);
       $138 = HEAPU8[$137>>0]|(HEAPU8[$137+1>>0]<<8)|(HEAPU8[$137+2>>0]<<16)|(HEAPU8[$137+3>>0]<<24);
       $139 = ((($138)) + 8|0);
       $140 = HEAP8[$139>>0]|0;
       $141 = $140 & -2;
       $142 = $141 | 1;
       HEAP8[$139>>0] = $142;
      }
     }
     $143 = $8;
     $144 = ($143|0)!=(0|0);
     if (!($144)) {
      $145 = $var;
      $146 = ((($145)) + 4|0);
      $147 = HEAPU8[$146>>0]|(HEAPU8[$146+1>>0]<<8)|(HEAPU8[$146+2>>0]<<16)|(HEAPU8[$146+3>>0]<<24);
      $148 = HEAPU8[$147>>0]|(HEAPU8[$147+1>>0]<<8)|(HEAPU8[$147+2>>0]<<16)|(HEAPU8[$147+3>>0]<<24);
      $149 = ($148|0)==(4);
      if ($149) {
       $150 = $var;
       $151 = ((($150)) + 4|0);
       $152 = HEAPU8[$151>>0]|(HEAPU8[$151+1>>0]<<8)|(HEAPU8[$151+2>>0]<<16)|(HEAPU8[$151+3>>0]<<24);
       $153 = ((($152)) + 8|0);
       $154 = HEAP8[$153>>0]|0;
       $155 = $154 & 1;
       $156 = ($155<<24>>24)!=(0);
       if (!($156)) {
        $157 = $1;
        $158 = $var;
        $159 = ((($158)) + 4|0);
        $160 = HEAPU8[$159>>0]|(HEAPU8[$159+1>>0]<<8)|(HEAPU8[$159+2>>0]<<16)|(HEAPU8[$159+3>>0]<<24);
        $161 = ((($160)) + 4|0);
        $162 = HEAPU8[$161>>0]|(HEAPU8[$161+1>>0]<<8)|(HEAPU8[$161+2>>0]<<16)|(HEAPU8[$161+3>>0]<<24);
        __mark_lazy_destroy_string($157,$162);
       }
      }
     }
     $163 = $var;
     $164 = ((($163)) + 4|0);
     $165 = HEAPU8[$164>>0]|(HEAPU8[$164+1>>0]<<8)|(HEAPU8[$164+2>>0]<<16)|(HEAPU8[$164+3>>0]<<24);
     $166 = (__public_value_to_internal_object($arg,$165)|0);
     $result = $166;
     $167 = $result;
     $168 = ($167|0)!=(0);
     if ($168) {
      label = 35;
      break L6;
     }
     $169 = $10;
     $170 = ($169|0)!=(0|0);
     if (!($170)) {
      continue L6;
     }
     $171 = $10;
     $172 = (__ls_empty($171)|0);
     $173 = $172&255;
     $174 = ($173|0)==(0);
     $175 = $pars;
     $176 = ($175|0)!=(0|0);
     $or$cond8 = $174 & $176;
     if (!($or$cond8)) {
      label = 35;
      break L6;
     }
    }
   }
   if ((label|0) == 12) {
    $59 = $__hr;
    $0 = $59;
    $263 = $0;
    STACKTOP = sp;return ($263|0);
   }
   else if ((label|0) == 14) {
    $63 = $2;
    $64 = ($63|0)!=(0|0);
    if ($64) {
     $65 = $2;
     $66 = HEAP32[$65>>2]|0;
     $67 = ($66|0)!=(0|0);
     if ($67) {
      $68 = $2;
      $69 = HEAP32[$68>>2]|0;
      $70 = HEAPU8[$69>>0]|(HEAPU8[$69+1>>0]<<8)|(HEAPU8[$69+2>>0]<<16)|(HEAPU8[$69+3>>0]<<24);
      $71 = ($70|0)!=(0|0);
      if ($71) {
       $72 = $1;
       $73 = $1;
       $74 = ((($73)) + 67|0);
       $75 = HEAPU8[$74>>0]|(HEAPU8[$74+1>>0]<<8)|(HEAPU8[$74+2>>0]<<16)|(HEAPU8[$74+3>>0]<<24);
       $76 = (__set_current_error($72,63,$75)|0);
       $77 = ($76<<24>>24)!=(0);
       if (!($77)) {
        break;
       }
       $78 = $1;
       $79 = $2;
       $80 = HEAP32[$79>>2]|0;
       $81 = HEAPU8[$80>>0]|(HEAPU8[$80+1>>0]<<8)|(HEAPU8[$80+2>>0]<<16)|(HEAPU8[$80+3>>0]<<24);
       $82 = ((($81)) + 9|0);
       $83 = HEAPU8[$82>>0]|(HEAPU8[$82+1>>0]<<8)|(HEAPU8[$82+2>>0]<<16)|(HEAPU8[$82+3>>0]<<24);
       $84 = $2;
       $85 = HEAP32[$84>>2]|0;
       $86 = HEAPU8[$85>>0]|(HEAPU8[$85+1>>0]<<8)|(HEAPU8[$85+2>>0]<<16)|(HEAPU8[$85+3>>0]<<24);
       $87 = ((($86)) + 13|0);
       $88 = HEAPU8[$87>>0]|(HEAPU8[$87+1>>0]<<8);
       $89 = $2;
       $90 = HEAP32[$89>>2]|0;
       $91 = HEAPU8[$90>>0]|(HEAPU8[$90+1>>0]<<8)|(HEAPU8[$90+2>>0]<<16)|(HEAPU8[$90+3>>0]<<24);
       $92 = ((($91)) + 15|0);
       $93 = HEAPU8[$92>>0]|(HEAPU8[$92+1>>0]<<8);
       __set_error_pos($78,$83,$88,$93);
       $result = 3;
       break;
      }
     }
    }
    $94 = $1;
    $95 = $1;
    $96 = ((($95)) + 67|0);
    $97 = HEAPU8[$96>>0]|(HEAPU8[$96+1>>0]<<8)|(HEAPU8[$96+2>>0]<<16)|(HEAPU8[$96+3>>0]<<24);
    $98 = (__set_current_error($94,63,$97)|0);
    $99 = ($98<<24>>24)!=(0);
    if (!($99)) {
     break;
    }
    $100 = $1;
    __set_error_pos($100,0,0,0);
    $result = 3;
    break;
   }
   else if ((label|0) == 35) {
    $177 = $var;
    $178 = ($177|0)==(8226|0);
    L37: do {
     if ($178) {
      $179 = $7;
      $180 = ($179|0)==(0|0);
      $181 = $var_args;
      $182 = ($181|0)!=(0|0);
      $or$cond = $180 | $182;
      $or$cond$not = $or$cond ^ 1;
      $183 = $var;
      $184 = ($183|0)==(8226|0);
      $or$cond5 = $or$cond$not & $184;
      if ($or$cond5) {
       $185 = (__ls_create()|0);
       $186 = $1;
       $187 = ((($186)) + 84|0);
       HEAP8[$187>>0]=$185&255;HEAP8[$187+1>>0]=($185>>8)&255;HEAP8[$187+2>>0]=($185>>16)&255;HEAP8[$187+3>>0]=$185>>24;
       $var_args = $185;
      }
      L41: while(1) {
       $$old9 = $7;
       $$old10 = ($$old9|0)!=(0|0);
       if (!($$old10)) {
        break L37;
       }
       while(1) {
        $188 = $7;
        $189 = $1;
        $190 = $2;
        $191 = $4;
        $192 = $5;
        $193 = $6;
        $194 = (FUNCTION_TABLE_iiiiiii[$188 & 255]($189,$190,$191,$192,$ia,$193)|0);
        $195 = ($194|0)!=(0);
        if (!($195)) {
         break L37;
        }
        $196 = $8;
        $197 = ($196|0)!=(0|0);
        if ($197) {
         $198 = $1;
         $199 = $2;
         $200 = $4;
         $201 = $5;
         $202 = $6;
         $203 = $8;
         $204 = $10;
         $205 = (__pop_arg($198,$199,$200,$201,$ia,$202,$203,$204,$arg)|0);
         $__hr1 = $205;
         $206 = $__hr1;
         $207 = ($206|0)!=(0);
         if ($207) {
          break L41;
         }
        }
        $209 = $var_args;
        $210 = ($209|0)!=(0|0);
        if ($210) {
         $211 = (__create_object()|0);
         $obj2 = $211;
         $212 = $obj2;
         $213 = (__public_value_to_internal_object($arg,$212)|0);
         $result = $213;
         $214 = $obj2;
         $215 = HEAPU8[$214>>0]|(HEAPU8[$214+1>>0]<<8)|(HEAPU8[$214+2>>0]<<16)|(HEAPU8[$214+3>>0]<<24);
         $216 = ($215|0)==(17);
         if ($216) {
          $217 = $obj2;
          $218 = ((($217)) + 4|0);
          $219 = HEAPU8[$218>>0]|(HEAPU8[$218+1>>0]<<8)|(HEAPU8[$218+2>>0]<<16)|(HEAPU8[$218+3>>0]<<24);
          $220 = ((($219)) + 58|0);
          $221 = HEAPU8[$220>>0]|(HEAPU8[$220+1>>0]<<8)|(HEAPU8[$220+2>>0]<<16)|(HEAPU8[$220+3>>0]<<24);
          $222 = ($221|0)==(1);
          if ($222) {
           $223 = $obj2;
           $224 = ((($223)) + 8|0);
           $225 = HEAP8[$224>>0]|0;
           $226 = $225 & -2;
           $227 = $226 | 1;
           HEAP8[$224>>0] = $227;
          }
         }
         $228 = $var_args;
         $229 = $obj2;
         (__ls_pushback($228,$229)|0);
        }
        $230 = $10;
        $231 = ($230|0)!=(0|0);
        if (!($231)) {
         continue L41;
        }
        $232 = $10;
        $233 = (__ls_empty($232)|0);
        $234 = $233&255;
        $235 = ($234|0)==(0);
        $236 = $7;
        $237 = ($236|0)!=(0|0);
        $or$cond11 = $235 & $237;
        if (!($or$cond11)) {
         break L37;
        }
       }
      }
      $208 = $__hr1;
      $0 = $208;
      $263 = $0;
      STACKTOP = sp;return ($263|0);
     }
    } while(0);
    $238 = $2;
    $239 = HEAP32[$238>>2]|0;
    $ast = $239;
    $240 = $ast;
    $241 = ($240|0)!=(0|0);
    if (!($241)) {
     break;
    }
    $242 = $ast;
    $243 = HEAPU8[$242>>0]|(HEAPU8[$242+1>>0]<<8)|(HEAPU8[$242+2>>0]<<16)|(HEAPU8[$242+3>>0]<<24);
    $obj3 = $243;
    $244 = $obj3;
    $245 = ($244|0)!=(0|0);
    if (!($245)) {
     break;
    }
    $246 = $obj3;
    $247 = HEAPU8[$246>>0]|(HEAPU8[$246+1>>0]<<8)|(HEAPU8[$246+2>>0]<<16)|(HEAPU8[$246+3>>0]<<24);
    $248 = ($247|0)==(8);
    if (!($248)) {
     break;
    }
    $249 = $obj3;
    $250 = ((($249)) + 4|0);
    $251 = HEAPU8[$250>>0]|(HEAPU8[$250+1>>0]<<8)|(HEAPU8[$250+2>>0]<<16)|(HEAPU8[$250+3>>0]<<24);
    $252 = ((($251)) + 4|0);
    $253 = HEAPU8[$252>>0]|(HEAPU8[$252+1>>0]<<8)|(HEAPU8[$252+2>>0]<<16)|(HEAPU8[$252+3>>0]<<24);
    $254 = ($253|0)==(44|0);
    if (!($254)) {
     break;
    }
    $255 = $ast;
    $256 = ($255|0)!=(0|0);
    if ($256) {
     $257 = $ast;
     $258 = ((($257)) + 8|0);
     $259 = HEAPU8[$258>>0]|(HEAPU8[$258+1>>0]<<8)|(HEAPU8[$258+2>>0]<<16)|(HEAPU8[$258+3>>0]<<24);
     $ast = $259;
    }
    $260 = $ast;
    $261 = $2;
    HEAP32[$261>>2] = $260;
    break;
   }
  }
 } while(0);
 $262 = $result;
 $0 = $262;
 $263 = $0;
 STACKTOP = sp;return ($263|0);
}
function __unlink_lambda_scope_chain($s,$lambda,$weak) {
 $s = $s|0;
 $lambda = $lambda|0;
 $weak = $weak|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $root = 0, $root_ref = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $s;
 $2 = $lambda;
 $3 = $weak;
 $root_ref = 0;
 $root = 0;
 $4 = $2;
 $5 = ((($4)) + 25|0);
 $6 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
 $7 = ($6|0)!=(0|0);
 $8 = $2;
 do {
  if ($7) {
   $9 = ((($8)) + 29|0);
   $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
   $11 = ($10|0)!=(0|0);
   if (!($11)) {
    $27 = $2;
    $28 = ((($27)) + 25|0);
    $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
    $30 = (__get_root_ref_scope($29)|0);
    $root_ref = $30;
    $31 = $root_ref;
    $32 = ((($31)) + 21|0);
    $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
    $root = $33;
    break;
   }
   $12 = $3;
   $13 = ($12<<24>>24)!=(0);
   if (!($13)) {
    $14 = $2;
    $15 = ((($14)) + 29|0);
    $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
    $17 = $1;
    $18 = ((($17)) + 75|0);
    HEAP8[$18>>0]=$16&255;HEAP8[$18+1>>0]=($16>>8)&255;HEAP8[$18+2>>0]=($16>>16)&255;HEAP8[$18+3>>0]=$16>>24;
   }
   $19 = $2;
   $20 = ((($19)) + 29|0);
   HEAP8[$20>>0]=0&255;HEAP8[$20+1>>0]=(0>>8)&255;HEAP8[$20+2>>0]=(0>>16)&255;HEAP8[$20+3>>0]=0>>24;
   $21 = $2;
   $22 = ((($21)) + 17|0);
   $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
   HEAP8[$23>>0]=0&255;HEAP8[$23+1>>0]=(0>>8)&255;HEAP8[$23+2>>0]=(0>>16)&255;HEAP8[$23+3>>0]=0>>24;
   $24 = $2;
   $25 = ((($24)) + 17|0);
   $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
   $0 = $26;
   $51 = $0;
   STACKTOP = sp;return ($51|0);
  } else {
   $34 = ((($8)) + 17|0);
   $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
   $root = $35;
  }
 } while(0);
 $36 = $3;
 $37 = ($36<<24>>24)!=(0);
 if ($37) {
  $38 = $1;
  $39 = $root;
  (__pop_weak_scope($38,$39)|0);
 } else {
  $40 = $root;
  $41 = HEAPU8[$40>>0]|(HEAPU8[$40+1>>0]<<8)|(HEAPU8[$40+2>>0]<<16)|(HEAPU8[$40+3>>0]<<24);
  $42 = $1;
  $43 = ((($42)) + 75|0);
  HEAP8[$43>>0]=$41&255;HEAP8[$43+1>>0]=($41>>8)&255;HEAP8[$43+2>>0]=($41>>16)&255;HEAP8[$43+3>>0]=$41>>24;
 }
 $44 = $root;
 HEAP8[$44>>0]=0&255;HEAP8[$44+1>>0]=(0>>8)&255;HEAP8[$44+2>>0]=(0>>16)&255;HEAP8[$44+3>>0]=0>>24;
 $45 = $2;
 $46 = ((($45)) + 17|0);
 $47 = HEAPU8[$46>>0]|(HEAPU8[$46+1>>0]<<8)|(HEAPU8[$46+2>>0]<<16)|(HEAPU8[$46+3>>0]<<24);
 HEAP8[$47>>0]=0&255;HEAP8[$47+1>>0]=(0>>8)&255;HEAP8[$47+2>>0]=(0>>16)&255;HEAP8[$47+3>>0]=0>>24;
 $48 = $2;
 $49 = ((($48)) + 17|0);
 $50 = HEAPU8[$49>>0]|(HEAPU8[$49+1>>0]<<8)|(HEAPU8[$49+2>>0]<<16)|(HEAPU8[$49+3>>0]<<24);
 $0 = $50;
 $51 = $0;
 STACKTOP = sp;return ($51|0);
}
function __out_of_scope($s,$running,$instance,$routine,$lose) {
 $s = $s|0;
 $running = $running|0;
 $instance = $instance|0;
 $routine = $routine|0;
 $lose = $lose|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0;
 var $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0;
 var $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;
 var $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__bucket = 0, $__lst = 0, $__lst1 = 0, $__opresult = 0, $__opresult2 = 0, $__tmp = 0, $__tmp3 = 0;
 var $__ul = 0, $tuple = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $tuple = sp + 48|0;
 $0 = $s;
 $1 = $running;
 $2 = $instance;
 $3 = $routine;
 $4 = $lose;
 $5 = $0;
 $6 = ($5|0)!=(0|0);
 if (!($6)) {
  ___assert_fail((4803|0),(4322|0),9441,(9248|0));
  // unreachable;
 }
 $7 = $1;
 $8 = ((($7)) + 32|0);
 $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
 $10 = ($9|0)!=(0|0);
 do {
  if ($10) {
   $11 = $0;
   HEAP8[$tuple>>0]=$11&255;HEAP8[$tuple+1>>0]=($11>>8)&255;HEAP8[$tuple+2>>0]=($11>>16)&255;HEAP8[$tuple+3>>0]=$11>>24;
   $12 = $2;
   $13 = ((($tuple)) + 4|0);
   HEAP8[$13>>0]=$12&255;HEAP8[$13+1>>0]=($12>>8)&255;HEAP8[$13+2>>0]=($12>>16)&255;HEAP8[$13+3>>0]=$12>>24;
   $14 = $1;
   $15 = ((($tuple)) + 8|0);
   HEAP8[$15>>0]=$14&255;HEAP8[$15+1>>0]=($14>>8)&255;HEAP8[$15+2>>0]=($14>>16)&255;HEAP8[$15+3>>0]=$14>>24;
   $16 = $0;
   $17 = (__create_outer_scope($16)|0);
   $18 = ((($tuple)) + 12|0);
   HEAP8[$18>>0]=$17&255;HEAP8[$18+1>>0]=($17>>8)&255;HEAP8[$18+2>>0]=($17>>16)&255;HEAP8[$18+3>>0]=$17>>24;
   $19 = ((($tuple)) + 16|0);
   HEAP8[$19>>0]=0&255;HEAP8[$19+1>>0]=(0>>8)&255;HEAP8[$19+2>>0]=(0>>16)&255;HEAP8[$19+3>>0]=0>>24;
   $20 = $1;
   $21 = ((($20)) + 32|0);
   $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
   $__lst = $22;
   $__opresult = 0;
   $__tmp = 0;
   $23 = $1;
   $24 = ((($23)) + 32|0);
   $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
   $26 = ($25|0)!=(0|0);
   if (!($26)) {
    ___assert_fail((9262|0),(4322|0),9455,(9248|0));
    // unreachable;
   }
   $27 = $__lst;
   $28 = ((($27)) + 8|0);
   $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
   $__lst = $29;
   while(1) {
    $30 = $__lst;
    $31 = ($30|0)!=(0|0);
    if (!($31)) {
     label = 14;
     break;
    }
    $32 = $__lst;
    $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
    $34 = $__lst;
    $35 = ((($34)) + 12|0);
    $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
    (__fill_outer_scope($33,$36,$tuple)|0);
    $37 = $__lst;
    $38 = HEAPU8[$37>>0]|(HEAPU8[$37+1>>0]<<8)|(HEAPU8[$37+2>>0]<<16)|(HEAPU8[$37+3>>0]<<24);
    $39 = $__lst;
    $40 = ((($39)) + 12|0);
    $41 = HEAPU8[$40>>0]|(HEAPU8[$40+1>>0]<<8)|(HEAPU8[$40+2>>0]<<16)|(HEAPU8[$40+3>>0]<<24);
    $42 = (__do_nothing_on_ht_for_lambda($38,$41)|0);
    $__opresult = $42;
    $43 = $__lst;
    $__tmp = $43;
    $44 = $__lst;
    $45 = ((($44)) + 8|0);
    $46 = HEAPU8[$45>>0]|(HEAPU8[$45+1>>0]<<8)|(HEAPU8[$45+2>>0]<<16)|(HEAPU8[$45+3>>0]<<24);
    $__lst = $46;
    $47 = $__opresult;
    $48 = (-1)==($47|0);
    if (!($48)) {
     continue;
    }
    $49 = $__lst;
    $50 = $__tmp;
    $51 = ((($50)) + 4|0);
    $52 = HEAPU8[$51>>0]|(HEAPU8[$51+1>>0]<<8)|(HEAPU8[$51+2>>0]<<16)|(HEAPU8[$51+3>>0]<<24);
    $53 = ((($52)) + 8|0);
    HEAP8[$53>>0]=$49&255;HEAP8[$53+1>>0]=($49>>8)&255;HEAP8[$53+2>>0]=($49>>16)&255;HEAP8[$53+3>>0]=$49>>24;
    $54 = $__lst;
    $55 = ($54|0)!=(0|0);
    if ($55) {
     $56 = $__tmp;
     $57 = ((($56)) + 4|0);
     $58 = HEAPU8[$57>>0]|(HEAPU8[$57+1>>0]<<8)|(HEAPU8[$57+2>>0]<<16)|(HEAPU8[$57+3>>0]<<24);
     $59 = $__lst;
     $60 = ((($59)) + 4|0);
     HEAP8[$60>>0]=$58&255;HEAP8[$60+1>>0]=($58>>8)&255;HEAP8[$60+2>>0]=($58>>16)&255;HEAP8[$60+3>>0]=$58>>24;
    }
    $61 = $__tmp;
    $62 = ($61|0)!=(0|0);
    if (!($62)) {
     label = 13;
     break;
    }
    $63 = $__tmp;
    _mb_free($63);
    $__tmp = 0;
    $64 = $1;
    $65 = ((($64)) + 32|0);
    $66 = HEAPU8[$65>>0]|(HEAPU8[$65+1>>0]<<8)|(HEAPU8[$65+2>>0]<<16)|(HEAPU8[$65+3>>0]<<24);
    $67 = HEAPU8[$66>>0]|(HEAPU8[$66+1>>0]<<8)|(HEAPU8[$66+2>>0]<<16)|(HEAPU8[$66+3>>0]<<24);
    $68 = ((($67)) + -1|0);
    $69 = $1;
    $70 = ((($69)) + 32|0);
    $71 = HEAPU8[$70>>0]|(HEAPU8[$70+1>>0]<<8)|(HEAPU8[$70+2>>0]<<16)|(HEAPU8[$70+3>>0]<<24);
    HEAP8[$71>>0]=$68&255;HEAP8[$71+1>>0]=($68>>8)&255;HEAP8[$71+2>>0]=($68>>16)&255;HEAP8[$71+3>>0]=$68>>24;
   }
   if ((label|0) == 13) {
    ___assert_fail((4369|0),(4322|0),9455,(9248|0));
    // unreachable;
   }
   else if ((label|0) == 14) {
    $72 = $1;
    $73 = ((($72)) + 32|0);
    $74 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
    __ls_destroy($74);
    $75 = $1;
    $76 = ((($75)) + 32|0);
    HEAP8[$76>>0]=0&255;HEAP8[$76+1>>0]=(0>>8)&255;HEAP8[$76+2>>0]=(0>>16)&255;HEAP8[$76+3>>0]=0>>24;
    break;
   }
  }
 } while(0);
 $77 = $4;
 $78 = ($77<<24>>24)!=(0);
 if (!($78)) {
  STACKTOP = sp;return;
 }
 $79 = $1;
 $80 = ((($79)) + 8|0);
 $81 = HEAPU8[$80>>0]|(HEAPU8[$80+1>>0]<<8)|(HEAPU8[$80+2>>0]<<16)|(HEAPU8[$80+3>>0]<<24);
 $82 = ($81|0)!=(0|0);
 if (!($82)) {
  STACKTOP = sp;return;
 }
 $__bucket = 0;
 $__ul = 0;
 $83 = $1;
 $84 = ((($83)) + 8|0);
 $85 = HEAPU8[$84>>0]|(HEAPU8[$84+1>>0]<<8)|(HEAPU8[$84+2>>0]<<16)|(HEAPU8[$84+3>>0]<<24);
 $86 = ((($85)) + 20|0);
 $87 = HEAPU8[$86>>0]|(HEAPU8[$86+1>>0]<<8)|(HEAPU8[$86+2>>0]<<16)|(HEAPU8[$86+3>>0]<<24);
 $88 = ($87|0)!=(0|0);
 if (!($88)) {
  STACKTOP = sp;return;
 }
 $__ul = 0;
 L30: while(1) {
  $89 = $__ul;
  $90 = $1;
  $91 = ((($90)) + 8|0);
  $92 = HEAPU8[$91>>0]|(HEAPU8[$91+1>>0]<<8)|(HEAPU8[$91+2>>0]<<16)|(HEAPU8[$91+3>>0]<<24);
  $93 = ((($92)) + 12|0);
  $94 = HEAPU8[$93>>0]|(HEAPU8[$93+1>>0]<<8)|(HEAPU8[$93+2>>0]<<16)|(HEAPU8[$93+3>>0]<<24);
  $95 = ($89>>>0)<($94>>>0);
  if (!($95)) {
   label = 32;
   break;
  }
  $96 = $__ul;
  $97 = $1;
  $98 = ((($97)) + 8|0);
  $99 = HEAPU8[$98>>0]|(HEAPU8[$98+1>>0]<<8)|(HEAPU8[$98+2>>0]<<16)|(HEAPU8[$98+3>>0]<<24);
  $100 = ((($99)) + 20|0);
  $101 = HEAPU8[$100>>0]|(HEAPU8[$100+1>>0]<<8)|(HEAPU8[$100+2>>0]<<16)|(HEAPU8[$100+3>>0]<<24);
  $102 = (($101) + ($96<<2)|0);
  $103 = HEAP32[$102>>2]|0;
  $__bucket = $103;
  $104 = $__bucket;
  $105 = ($104|0)!=(0|0);
  L33: do {
   if ($105) {
    $106 = $__bucket;
    $__lst1 = $106;
    $__opresult2 = 0;
    $__tmp3 = 0;
    $107 = $__bucket;
    $108 = ($107|0)!=(0|0);
    if (!($108)) {
     label = 22;
     break L30;
    }
    $109 = $__lst1;
    $110 = ((($109)) + 8|0);
    $111 = HEAPU8[$110>>0]|(HEAPU8[$110+1>>0]<<8)|(HEAPU8[$110+2>>0]<<16)|(HEAPU8[$110+3>>0]<<24);
    $__lst1 = $111;
    while(1) {
     $112 = $__lst1;
     $113 = ($112|0)!=(0|0);
     if (!($113)) {
      break L33;
     }
     $114 = $__lst1;
     $115 = HEAPU8[$114>>0]|(HEAPU8[$114+1>>0]<<8)|(HEAPU8[$114+2>>0]<<16)|(HEAPU8[$114+3>>0]<<24);
     $116 = $__lst1;
     $117 = ((($116)) + 12|0);
     $118 = HEAPU8[$117>>0]|(HEAPU8[$117+1>>0]<<8)|(HEAPU8[$117+2>>0]<<16)|(HEAPU8[$117+3>>0]<<24);
     $119 = $1;
     (__lose_object($115,$118,$119)|0);
     $120 = $__lst1;
     $121 = HEAPU8[$120>>0]|(HEAPU8[$120+1>>0]<<8)|(HEAPU8[$120+2>>0]<<16)|(HEAPU8[$120+3>>0]<<24);
     $122 = $__lst1;
     $123 = ((($122)) + 12|0);
     $124 = HEAPU8[$123>>0]|(HEAPU8[$123+1>>0]<<8)|(HEAPU8[$123+2>>0]<<16)|(HEAPU8[$123+3>>0]<<24);
     $125 = (__do_nothing_on_object($121,$124)|0);
     $__opresult2 = $125;
     $126 = $__lst1;
     $__tmp3 = $126;
     $127 = $__lst1;
     $128 = ((($127)) + 8|0);
     $129 = HEAPU8[$128>>0]|(HEAPU8[$128+1>>0]<<8)|(HEAPU8[$128+2>>0]<<16)|(HEAPU8[$128+3>>0]<<24);
     $__lst1 = $129;
     $130 = $__opresult2;
     $131 = (-1)==($130|0);
     if (!($131)) {
      continue;
     }
     $132 = $__lst1;
     $133 = $__tmp3;
     $134 = ((($133)) + 4|0);
     $135 = HEAPU8[$134>>0]|(HEAPU8[$134+1>>0]<<8)|(HEAPU8[$134+2>>0]<<16)|(HEAPU8[$134+3>>0]<<24);
     $136 = ((($135)) + 8|0);
     HEAP8[$136>>0]=$132&255;HEAP8[$136+1>>0]=($132>>8)&255;HEAP8[$136+2>>0]=($132>>16)&255;HEAP8[$136+3>>0]=$132>>24;
     $137 = $__lst1;
     $138 = ($137|0)!=(0|0);
     if ($138) {
      $139 = $__tmp3;
      $140 = ((($139)) + 4|0);
      $141 = HEAPU8[$140>>0]|(HEAPU8[$140+1>>0]<<8)|(HEAPU8[$140+2>>0]<<16)|(HEAPU8[$140+3>>0]<<24);
      $142 = $__lst1;
      $143 = ((($142)) + 4|0);
      HEAP8[$143>>0]=$141&255;HEAP8[$143+1>>0]=($141>>8)&255;HEAP8[$143+2>>0]=($141>>16)&255;HEAP8[$143+3>>0]=$141>>24;
     }
     $144 = $__tmp3;
     $145 = ($144|0)!=(0|0);
     if (!($145)) {
      label = 30;
      break L30;
     }
     $146 = $__tmp3;
     _mb_free($146);
     $__tmp3 = 0;
     $147 = $__bucket;
     $148 = HEAPU8[$147>>0]|(HEAPU8[$147+1>>0]<<8)|(HEAPU8[$147+2>>0]<<16)|(HEAPU8[$147+3>>0]<<24);
     $149 = ((($148)) + -1|0);
     $150 = $__bucket;
     HEAP8[$150>>0]=$149&255;HEAP8[$150+1>>0]=($149>>8)&255;HEAP8[$150+2>>0]=($149>>16)&255;HEAP8[$150+3>>0]=$149>>24;
    }
   }
  } while(0);
  $151 = $__ul;
  $152 = (($151) + 1)|0;
  $__ul = $152;
 }
 if ((label|0) == 22) {
  ___assert_fail((4526|0),(4322|0),9466,(9248|0));
  // unreachable;
 }
 else if ((label|0) == 30) {
  ___assert_fail((4369|0),(4322|0),9466,(9248|0));
  // unreachable;
 }
 else if ((label|0) == 32) {
  STACKTOP = sp;return;
 }
}
function __create_outer_scope($s) {
 $s = $s|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $result = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $result = 0;
 $1 = $0;
 $2 = ($1|0)!=(0|0);
 if ($2) {
  $3 = (_mb_malloc(25)|0);
  $result = $3;
  $4 = $result;
  dest=$4; stop=dest+25|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
  $5 = $result;
  $6 = $0;
  __create_ref($5,159,18,$6);
  $7 = (__create_running_context(1)|0);
  $8 = $result;
  $9 = ((($8)) + 21|0);
  HEAP8[$9>>0]=$7&255;HEAP8[$9+1>>0]=($7>>8)&255;HEAP8[$9+2>>0]=($7>>16)&255;HEAP8[$9+3>>0]=$7>>24;
  $10 = $result;
  STACKTOP = sp;return ($10|0);
 } else {
  ___assert_fail((4803|0),(4322|0),9034,(9725|0));
  // unreachable;
 }
 return (0)|0;
}
function __fill_outer_scope($data,$extra,$tuple) {
 $data = $data|0;
 $extra = $extra|0;
 $tuple = $tuple|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $__bucket = 0, $__bucket1 = 0, $__lst = 0, $__lst3 = 0, $__opresult = 0, $__opresult4 = 0, $__tmp = 0, $__tmp5 = 0, $__ul = 0, $__ul2 = 0, $lambda = 0, $root_ref = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $data;
 $1 = $extra;
 $2 = $tuple;
 $3 = $0;
 $lambda = $3;
 $4 = $lambda;
 $5 = ((($4)) + 33|0);
 $6 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
 $7 = ($6|0)!=(0|0);
 if ($7) {
  $8 = (__ht_create(0,137,138,0)|0);
  $9 = $2;
  $10 = ((($9)) + 20|0);
  HEAP8[$10>>0]=$8&255;HEAP8[$10+1>>0]=($8>>8)&255;HEAP8[$10+2>>0]=($8>>16)&255;HEAP8[$10+3>>0]=$8>>24;
  $11 = $lambda;
  $12 = $2;
  $13 = ((($12)) + 16|0);
  HEAP8[$13>>0]=$11&255;HEAP8[$13+1>>0]=($11>>8)&255;HEAP8[$13+2>>0]=($11>>16)&255;HEAP8[$13+3>>0]=$11>>24;
  $__bucket = 0;
  $__ul = 0;
  $14 = $lambda;
  $15 = ((($14)) + 33|0);
  $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
  $17 = ((($16)) + 20|0);
  $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
  $19 = ($18|0)!=(0|0);
  L3: do {
   if ($19) {
    $__ul = 0;
    L5: while(1) {
     $20 = $__ul;
     $21 = $lambda;
     $22 = ((($21)) + 33|0);
     $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
     $24 = ((($23)) + 12|0);
     $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
     $26 = ($20>>>0)<($25>>>0);
     if (!($26)) {
      break L3;
     }
     $27 = $__ul;
     $28 = $lambda;
     $29 = ((($28)) + 33|0);
     $30 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8)|(HEAPU8[$29+2>>0]<<16)|(HEAPU8[$29+3>>0]<<24);
     $31 = ((($30)) + 20|0);
     $32 = HEAPU8[$31>>0]|(HEAPU8[$31+1>>0]<<8)|(HEAPU8[$31+2>>0]<<16)|(HEAPU8[$31+3>>0]<<24);
     $33 = (($32) + ($27<<2)|0);
     $34 = HEAP32[$33>>2]|0;
     $__bucket = $34;
     $35 = $__bucket;
     $36 = ($35|0)!=(0|0);
     L8: do {
      if ($36) {
       $37 = $__bucket;
       $__lst = $37;
       $__opresult = 0;
       $__tmp = 0;
       $38 = $__bucket;
       $39 = ($38|0)!=(0|0);
       if (!($39)) {
        label = 7;
        break L5;
       }
       $40 = $__lst;
       $41 = ((($40)) + 8|0);
       $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
       $__lst = $42;
       while(1) {
        $43 = $__lst;
        $44 = ($43|0)!=(0|0);
        if (!($44)) {
         break L8;
        }
        $45 = $__lst;
        $46 = HEAPU8[$45>>0]|(HEAPU8[$45+1>>0]<<8)|(HEAPU8[$45+2>>0]<<16)|(HEAPU8[$45+3>>0]<<24);
        $47 = $__lst;
        $48 = ((($47)) + 12|0);
        $49 = HEAPU8[$48>>0]|(HEAPU8[$48+1>>0]<<8)|(HEAPU8[$48+2>>0]<<16)|(HEAPU8[$48+3>>0]<<24);
        $50 = $2;
        (__fill_with_upvalue($46,$49,$50)|0);
        $51 = $__lst;
        $52 = HEAPU8[$51>>0]|(HEAPU8[$51+1>>0]<<8)|(HEAPU8[$51+2>>0]<<16)|(HEAPU8[$51+3>>0]<<24);
        $53 = $__lst;
        $54 = ((($53)) + 12|0);
        $55 = HEAPU8[$54>>0]|(HEAPU8[$54+1>>0]<<8)|(HEAPU8[$54+2>>0]<<16)|(HEAPU8[$54+3>>0]<<24);
        $56 = (__do_nothing_on_ht_for_lambda($52,$55)|0);
        $__opresult = $56;
        $57 = $__lst;
        $__tmp = $57;
        $58 = $__lst;
        $59 = ((($58)) + 8|0);
        $60 = HEAPU8[$59>>0]|(HEAPU8[$59+1>>0]<<8)|(HEAPU8[$59+2>>0]<<16)|(HEAPU8[$59+3>>0]<<24);
        $__lst = $60;
        $61 = $__opresult;
        $62 = (-1)==($61|0);
        if (!($62)) {
         continue;
        }
        $63 = $__lst;
        $64 = $__tmp;
        $65 = ((($64)) + 4|0);
        $66 = HEAPU8[$65>>0]|(HEAPU8[$65+1>>0]<<8)|(HEAPU8[$65+2>>0]<<16)|(HEAPU8[$65+3>>0]<<24);
        $67 = ((($66)) + 8|0);
        HEAP8[$67>>0]=$63&255;HEAP8[$67+1>>0]=($63>>8)&255;HEAP8[$67+2>>0]=($63>>16)&255;HEAP8[$67+3>>0]=$63>>24;
        $68 = $__lst;
        $69 = ($68|0)!=(0|0);
        if ($69) {
         $70 = $__tmp;
         $71 = ((($70)) + 4|0);
         $72 = HEAPU8[$71>>0]|(HEAPU8[$71+1>>0]<<8)|(HEAPU8[$71+2>>0]<<16)|(HEAPU8[$71+3>>0]<<24);
         $73 = $__lst;
         $74 = ((($73)) + 4|0);
         HEAP8[$74>>0]=$72&255;HEAP8[$74+1>>0]=($72>>8)&255;HEAP8[$74+2>>0]=($72>>16)&255;HEAP8[$74+3>>0]=$72>>24;
        }
        $75 = $__tmp;
        $76 = ($75|0)!=(0|0);
        if (!($76)) {
         label = 15;
         break L5;
        }
        $77 = $__tmp;
        _mb_free($77);
        $__tmp = 0;
        $78 = $__bucket;
        $79 = HEAPU8[$78>>0]|(HEAPU8[$78+1>>0]<<8)|(HEAPU8[$78+2>>0]<<16)|(HEAPU8[$78+3>>0]<<24);
        $80 = ((($79)) + -1|0);
        $81 = $__bucket;
        HEAP8[$81>>0]=$80&255;HEAP8[$81+1>>0]=($80>>8)&255;HEAP8[$81+2>>0]=($80>>16)&255;HEAP8[$81+3>>0]=$80>>24;
       }
      }
     } while(0);
     $82 = $__ul;
     $83 = (($82) + 1)|0;
     $__ul = $83;
    }
    if ((label|0) == 7) {
     ___assert_fail((4526|0),(4322|0),9158,(9314|0));
     // unreachable;
    }
    else if ((label|0) == 15) {
     ___assert_fail((4369|0),(4322|0),9158,(9314|0));
     // unreachable;
    }
   }
  } while(0);
  $84 = $2;
  $85 = ((($84)) + 16|0);
  HEAP8[$85>>0]=0&255;HEAP8[$85+1>>0]=(0>>8)&255;HEAP8[$85+2>>0]=(0>>16)&255;HEAP8[$85+3>>0]=0>>24;
  $__bucket1 = 0;
  $__ul2 = 0;
  $86 = $2;
  $87 = ((($86)) + 20|0);
  $88 = HEAPU8[$87>>0]|(HEAPU8[$87+1>>0]<<8)|(HEAPU8[$87+2>>0]<<16)|(HEAPU8[$87+3>>0]<<24);
  $89 = ((($88)) + 20|0);
  $90 = HEAPU8[$89>>0]|(HEAPU8[$89+1>>0]<<8)|(HEAPU8[$89+2>>0]<<16)|(HEAPU8[$89+3>>0]<<24);
  $91 = ($90|0)!=(0|0);
  L24: do {
   if ($91) {
    $__ul2 = 0;
    L26: while(1) {
     $92 = $__ul2;
     $93 = $2;
     $94 = ((($93)) + 20|0);
     $95 = HEAPU8[$94>>0]|(HEAPU8[$94+1>>0]<<8)|(HEAPU8[$94+2>>0]<<16)|(HEAPU8[$94+3>>0]<<24);
     $96 = ((($95)) + 12|0);
     $97 = HEAPU8[$96>>0]|(HEAPU8[$96+1>>0]<<8)|(HEAPU8[$96+2>>0]<<16)|(HEAPU8[$96+3>>0]<<24);
     $98 = ($92>>>0)<($97>>>0);
     if (!($98)) {
      break L24;
     }
     $99 = $__ul2;
     $100 = $2;
     $101 = ((($100)) + 20|0);
     $102 = HEAPU8[$101>>0]|(HEAPU8[$101+1>>0]<<8)|(HEAPU8[$101+2>>0]<<16)|(HEAPU8[$101+3>>0]<<24);
     $103 = ((($102)) + 20|0);
     $104 = HEAPU8[$103>>0]|(HEAPU8[$103+1>>0]<<8)|(HEAPU8[$103+2>>0]<<16)|(HEAPU8[$103+3>>0]<<24);
     $105 = (($104) + ($99<<2)|0);
     $106 = HEAP32[$105>>2]|0;
     $__bucket1 = $106;
     $107 = $__bucket1;
     $108 = ($107|0)!=(0|0);
     L29: do {
      if ($108) {
       $109 = $__bucket1;
       $__lst3 = $109;
       $__opresult4 = 0;
       $__tmp5 = 0;
       $110 = $__bucket1;
       $111 = ($110|0)!=(0|0);
       if (!($111)) {
        label = 22;
        break L26;
       }
       $112 = $__lst3;
       $113 = ((($112)) + 8|0);
       $114 = HEAPU8[$113>>0]|(HEAPU8[$113+1>>0]<<8)|(HEAPU8[$113+2>>0]<<16)|(HEAPU8[$113+3>>0]<<24);
       $__lst3 = $114;
       while(1) {
        $115 = $__lst3;
        $116 = ($115|0)!=(0|0);
        if (!($116)) {
         break L29;
        }
        $117 = $__lst3;
        $118 = HEAPU8[$117>>0]|(HEAPU8[$117+1>>0]<<8)|(HEAPU8[$117+2>>0]<<16)|(HEAPU8[$117+3>>0]<<24);
        $119 = $__lst3;
        $120 = ((($119)) + 12|0);
        $121 = HEAPU8[$120>>0]|(HEAPU8[$120+1>>0]<<8)|(HEAPU8[$120+2>>0]<<16)|(HEAPU8[$120+3>>0]<<24);
        $122 = $lambda;
        $123 = ((($122)) + 33|0);
        $124 = HEAPU8[$123>>0]|(HEAPU8[$123+1>>0]<<8)|(HEAPU8[$123+2>>0]<<16)|(HEAPU8[$123+3>>0]<<24);
        (__remove_filled_upvalue($118,$121,$124)|0);
        $125 = $__lst3;
        $126 = HEAPU8[$125>>0]|(HEAPU8[$125+1>>0]<<8)|(HEAPU8[$125+2>>0]<<16)|(HEAPU8[$125+3>>0]<<24);
        $127 = $__lst3;
        $128 = ((($127)) + 12|0);
        $129 = HEAPU8[$128>>0]|(HEAPU8[$128+1>>0]<<8)|(HEAPU8[$128+2>>0]<<16)|(HEAPU8[$128+3>>0]<<24);
        $130 = (__do_nothing_on_ht_for_lambda($126,$129)|0);
        $__opresult4 = $130;
        $131 = $__lst3;
        $__tmp5 = $131;
        $132 = $__lst3;
        $133 = ((($132)) + 8|0);
        $134 = HEAPU8[$133>>0]|(HEAPU8[$133+1>>0]<<8)|(HEAPU8[$133+2>>0]<<16)|(HEAPU8[$133+3>>0]<<24);
        $__lst3 = $134;
        $135 = $__opresult4;
        $136 = (-1)==($135|0);
        if (!($136)) {
         continue;
        }
        $137 = $__lst3;
        $138 = $__tmp5;
        $139 = ((($138)) + 4|0);
        $140 = HEAPU8[$139>>0]|(HEAPU8[$139+1>>0]<<8)|(HEAPU8[$139+2>>0]<<16)|(HEAPU8[$139+3>>0]<<24);
        $141 = ((($140)) + 8|0);
        HEAP8[$141>>0]=$137&255;HEAP8[$141+1>>0]=($137>>8)&255;HEAP8[$141+2>>0]=($137>>16)&255;HEAP8[$141+3>>0]=$137>>24;
        $142 = $__lst3;
        $143 = ($142|0)!=(0|0);
        if ($143) {
         $144 = $__tmp5;
         $145 = ((($144)) + 4|0);
         $146 = HEAPU8[$145>>0]|(HEAPU8[$145+1>>0]<<8)|(HEAPU8[$145+2>>0]<<16)|(HEAPU8[$145+3>>0]<<24);
         $147 = $__lst3;
         $148 = ((($147)) + 4|0);
         HEAP8[$148>>0]=$146&255;HEAP8[$148+1>>0]=($146>>8)&255;HEAP8[$148+2>>0]=($146>>16)&255;HEAP8[$148+3>>0]=$146>>24;
        }
        $149 = $__tmp5;
        $150 = ($149|0)!=(0|0);
        if (!($150)) {
         label = 30;
         break L26;
        }
        $151 = $__tmp5;
        _mb_free($151);
        $__tmp5 = 0;
        $152 = $__bucket1;
        $153 = HEAPU8[$152>>0]|(HEAPU8[$152+1>>0]<<8)|(HEAPU8[$152+2>>0]<<16)|(HEAPU8[$152+3>>0]<<24);
        $154 = ((($153)) + -1|0);
        $155 = $__bucket1;
        HEAP8[$155>>0]=$154&255;HEAP8[$155+1>>0]=($154>>8)&255;HEAP8[$155+2>>0]=($154>>16)&255;HEAP8[$155+3>>0]=$154>>24;
       }
      }
     } while(0);
     $156 = $__ul2;
     $157 = (($156) + 1)|0;
     $__ul2 = $157;
    }
    if ((label|0) == 22) {
     ___assert_fail((4526|0),(4322|0),9161,(9314|0));
     // unreachable;
    }
    else if ((label|0) == 30) {
     ___assert_fail((4369|0),(4322|0),9161,(9314|0));
     // unreachable;
    }
   }
  } while(0);
  $158 = $lambda;
  $159 = ((($158)) + 33|0);
  $160 = HEAPU8[$159>>0]|(HEAPU8[$159+1>>0]<<8)|(HEAPU8[$159+2>>0]<<16)|(HEAPU8[$159+3>>0]<<24);
  $161 = (__ht_count($160)|0);
  $162 = ($161|0)!=(0);
  if (!($162)) {
   $163 = $lambda;
   $164 = ((($163)) + 33|0);
   $165 = HEAPU8[$164>>0]|(HEAPU8[$164+1>>0]<<8)|(HEAPU8[$164+2>>0]<<16)|(HEAPU8[$164+3>>0]<<24);
   __ht_destroy($165);
   $166 = $lambda;
   $167 = ((($166)) + 33|0);
   HEAP8[$167>>0]=0&255;HEAP8[$167+1>>0]=(0>>8)&255;HEAP8[$167+2>>0]=(0>>16)&255;HEAP8[$167+3>>0]=0>>24;
  }
  $168 = $2;
  $169 = ((($168)) + 20|0);
  $170 = HEAPU8[$169>>0]|(HEAPU8[$169+1>>0]<<8)|(HEAPU8[$169+2>>0]<<16)|(HEAPU8[$169+3>>0]<<24);
  __ht_destroy($170);
 }
 $171 = $lambda;
 $172 = ((($171)) + 25|0);
 $173 = HEAPU8[$172>>0]|(HEAPU8[$172+1>>0]<<8)|(HEAPU8[$172+2>>0]<<16)|(HEAPU8[$172+3>>0]<<24);
 $174 = ($173|0)!=(0|0);
 if ($174) {
  $175 = $lambda;
  $176 = ((($175)) + 25|0);
  $177 = HEAPU8[$176>>0]|(HEAPU8[$176+1>>0]<<8)|(HEAPU8[$176+2>>0]<<16)|(HEAPU8[$176+3>>0]<<24);
  $178 = (__get_root_ref_scope($177)|0);
  $root_ref = $178;
  $179 = $2;
  $180 = ((($179)) + 12|0);
  $181 = HEAPU8[$180>>0]|(HEAPU8[$180+1>>0]<<8)|(HEAPU8[$180+2>>0]<<16)|(HEAPU8[$180+3>>0]<<24);
  $182 = $root_ref;
  $183 = ((($182)) + 17|0);
  HEAP8[$183>>0]=$181&255;HEAP8[$183+1>>0]=($181>>8)&255;HEAP8[$183+2>>0]=($181>>16)&255;HEAP8[$183+3>>0]=$181>>24;
  $184 = $2;
  $185 = ((($184)) + 12|0);
  $186 = HEAPU8[$185>>0]|(HEAPU8[$185+1>>0]<<8)|(HEAPU8[$185+2>>0]<<16)|(HEAPU8[$185+3>>0]<<24);
  $187 = ((($186)) + 21|0);
  $188 = HEAPU8[$187>>0]|(HEAPU8[$187+1>>0]<<8)|(HEAPU8[$187+2>>0]<<16)|(HEAPU8[$187+3>>0]<<24);
  $189 = $root_ref;
  $190 = ((($189)) + 21|0);
  $191 = HEAPU8[$190>>0]|(HEAPU8[$190+1>>0]<<8)|(HEAPU8[$190+2>>0]<<16)|(HEAPU8[$190+3>>0]<<24);
  HEAP8[$191>>0]=$188&255;HEAP8[$191+1>>0]=($188>>8)&255;HEAP8[$191+2>>0]=($188>>16)&255;HEAP8[$191+3>>0]=$188>>24;
  $197 = $2;
  $198 = ((($197)) + 12|0);
  $199 = HEAPU8[$198>>0]|(HEAPU8[$198+1>>0]<<8)|(HEAPU8[$198+2>>0]<<16)|(HEAPU8[$198+3>>0]<<24);
  $200 = $2;
  $201 = ((($200)) + 12|0);
  $202 = HEAPU8[$201>>0]|(HEAPU8[$201+1>>0]<<8)|(HEAPU8[$201+2>>0]<<16)|(HEAPU8[$201+3>>0]<<24);
  (__ref($199,$202)|0);
  STACKTOP = sp;return 0;
 } else {
  $192 = $2;
  $193 = ((($192)) + 12|0);
  $194 = HEAPU8[$193>>0]|(HEAPU8[$193+1>>0]<<8)|(HEAPU8[$193+2>>0]<<16)|(HEAPU8[$193+3>>0]<<24);
  $195 = $lambda;
  $196 = ((($195)) + 25|0);
  HEAP8[$196>>0]=$194&255;HEAP8[$196+1>>0]=($194>>8)&255;HEAP8[$196+2>>0]=($194>>16)&255;HEAP8[$196+3>>0]=$194>>24;
  $197 = $2;
  $198 = ((($197)) + 12|0);
  $199 = HEAPU8[$198>>0]|(HEAPU8[$198+1>>0]<<8)|(HEAPU8[$198+2>>0]<<16)|(HEAPU8[$198+3>>0]<<24);
  $200 = $2;
  $201 = ((($200)) + 12|0);
  $202 = HEAPU8[$201>>0]|(HEAPU8[$201+1>>0]<<8)|(HEAPU8[$201+2>>0]<<16)|(HEAPU8[$201+3>>0]<<24);
  (__ref($199,$202)|0);
  STACKTOP = sp;return 0;
 }
 return (0)|0;
}
function __do_nothing_on_ht_for_lambda($data,$extra) {
 $data = $data|0;
 $extra = $extra|0;
 var $0 = 0, $1 = 0, $2 = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $data;
 $1 = $extra;
 $result = 0;
 $2 = $result;
 STACKTOP = sp;return ($2|0);
}
function __lose_object($data,$extra,$running) {
 $data = $data|0;
 $extra = $extra|0;
 $running = $running|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $make_nil = 0, $obj = 0, $or$cond = 0, $result = 0;
 var dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $data;
 $1 = $extra;
 $2 = $running;
 $result = 0;
 $obj = 0;
 $make_nil = 1;
 $3 = $0;
 $4 = ($3|0)!=(0|0);
 $5 = $1;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if (!($or$cond)) {
  ___assert_fail((9287|0),(4322|0),10138,(9301|0));
  // unreachable;
 }
 $7 = $0;
 $obj = $7;
 $8 = $obj;
 $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
 $10 = ($9|0)==(17);
 if ($10) {
  $11 = $obj;
  $12 = ((($11)) + 4|0);
  $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
  $14 = ((($13)) + 58|0);
  $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
  $16 = ($15|0)==(2);
  if ($16) {
   $17 = $obj;
   $18 = ((($17)) + 8|0);
   $19 = HEAP8[$18>>0]|0;
   $20 = $19 & -2;
   HEAP8[$18>>0] = $20;
  }
 }
 $21 = $obj;
 $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
 $23 = ($22|0)==(12);
 $24 = $obj;
 L8: do {
  if ($23) {
   $25 = ((($24)) + 8|0);
   $26 = HEAP8[$25>>0]|0;
   $27 = $26 & 1;
   $28 = ($27<<24>>24)!=(0);
   if ($28) {
    $29 = $obj;
    $30 = ((($29)) + 4|0);
    $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8)|(HEAPU8[$30+2>>0]<<16)|(HEAPU8[$30+3>>0]<<24);
    $32 = ((($31)) + 21|0);
    $33 = HEAP8[$32>>0]|0;
    $34 = $33 & 1;
    $35 = ($34<<24>>24)!=(0);
    if ($35) {
     break;
    }
   }
   $36 = $2;
   $37 = ((($36)) + 20|0);
   $38 = ((($37)) + 4|0);
   $39 = HEAPU8[$38>>0]|(HEAPU8[$38+1>>0]<<8)|(HEAPU8[$38+2>>0]<<16)|(HEAPU8[$38+3>>0]<<24);
   $40 = $obj;
   $41 = ((($40)) + 4|0);
   $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
   $43 = ($39|0)!=($42|0);
   if ($43) {
    $44 = $obj;
    $45 = ((($44)) + 4|0);
    $46 = HEAPU8[$45>>0]|(HEAPU8[$45+1>>0]<<8)|(HEAPU8[$45+2>>0]<<16)|(HEAPU8[$45+3>>0]<<24);
    (__destroy_list_it($46)|0);
   }
  } else {
   $47 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
   $48 = ($47|0)==(14);
   $49 = $obj;
   if ($48) {
    $50 = ((($49)) + 8|0);
    $51 = HEAP8[$50>>0]|0;
    $52 = $51 & 1;
    $53 = ($52<<24>>24)!=(0);
    if ($53) {
     $54 = $obj;
     $55 = ((($54)) + 4|0);
     $56 = HEAPU8[$55>>0]|(HEAPU8[$55+1>>0]<<8)|(HEAPU8[$55+2>>0]<<16)|(HEAPU8[$55+3>>0]<<24);
     $57 = ((($56)) + 21|0);
     $58 = HEAP8[$57>>0]|0;
     $59 = $58 & 1;
     $60 = ($59<<24>>24)!=(0);
     if ($60) {
      break;
     }
    }
    $61 = $2;
    $62 = ((($61)) + 20|0);
    $63 = ((($62)) + 4|0);
    $64 = HEAPU8[$63>>0]|(HEAPU8[$63+1>>0]<<8)|(HEAPU8[$63+2>>0]<<16)|(HEAPU8[$63+3>>0]<<24);
    $65 = $obj;
    $66 = ((($65)) + 4|0);
    $67 = HEAPU8[$66>>0]|(HEAPU8[$66+1>>0]<<8)|(HEAPU8[$66+2>>0]<<16)|(HEAPU8[$66+3>>0]<<24);
    $68 = ($64|0)!=($67|0);
    if (!($68)) {
     break;
    }
    $69 = $obj;
    $70 = ((($69)) + 4|0);
    $71 = HEAPU8[$70>>0]|(HEAPU8[$70+1>>0]<<8)|(HEAPU8[$70+2>>0]<<16)|(HEAPU8[$70+3>>0]<<24);
    (__destroy_dict_it($71)|0);
    break;
   }
   $72 = HEAPU8[$49>>0]|(HEAPU8[$49+1>>0]<<8)|(HEAPU8[$49+2>>0]<<16)|(HEAPU8[$49+3>>0]<<24);
   switch ($72|0) {
   case 9:  {
    $73 = $obj;
    $74 = ((($73)) + 4|0);
    $75 = HEAPU8[$74>>0]|(HEAPU8[$74+1>>0]<<8)|(HEAPU8[$74+2>>0]<<16)|(HEAPU8[$74+3>>0]<<24);
    $76 = ((($75)) + 4|0);
    $77 = HEAPU8[$76>>0]|(HEAPU8[$76+1>>0]<<8)|(HEAPU8[$76+2>>0]<<16)|(HEAPU8[$76+3>>0]<<24);
    $78 = $1;
    $79 = $2;
    (__lose_object($77,$78,$79)|0);
    $make_nil = 0;
    break L8;
    break;
   }
   case 7:  {
    $80 = $obj;
    $81 = ((($80)) + 4|0);
    $82 = HEAPU8[$81>>0]|(HEAPU8[$81+1>>0]<<8)|(HEAPU8[$81+2>>0]<<16)|(HEAPU8[$81+3>>0]<<24);
    $83 = $obj;
    $84 = ((($83)) + 4|0);
    $85 = HEAPU8[$84>>0]|(HEAPU8[$84+1>>0]<<8)|(HEAPU8[$84+2>>0]<<16)|(HEAPU8[$84+3>>0]<<24);
    (__unref($82,$85)|0);
    break L8;
    break;
   }
   case 10:  {
    $86 = $obj;
    $87 = ((($86)) + 8|0);
    $88 = HEAP8[$87>>0]|0;
    $89 = $88 & 1;
    $90 = ($89<<24>>24)!=(0);
    if ($90) {
     break L8;
    }
    $91 = $obj;
    $92 = ((($91)) + 4|0);
    $93 = HEAPU8[$92>>0]|(HEAPU8[$92+1>>0]<<8)|(HEAPU8[$92+2>>0]<<16)|(HEAPU8[$92+3>>0]<<24);
    $94 = $obj;
    $95 = ((($94)) + 4|0);
    $96 = HEAPU8[$95>>0]|(HEAPU8[$95+1>>0]<<8)|(HEAPU8[$95+2>>0]<<16)|(HEAPU8[$95+3>>0]<<24);
    (__unref($93,$96)|0);
    break L8;
    break;
   }
   case 11:  {
    $97 = $obj;
    $98 = ((($97)) + 4|0);
    $99 = HEAPU8[$98>>0]|(HEAPU8[$98+1>>0]<<8)|(HEAPU8[$98+2>>0]<<16)|(HEAPU8[$98+3>>0]<<24);
    $100 = $obj;
    $101 = ((($100)) + 4|0);
    $102 = HEAPU8[$101>>0]|(HEAPU8[$101+1>>0]<<8)|(HEAPU8[$101+2>>0]<<16)|(HEAPU8[$101+3>>0]<<24);
    (__unref($99,$102)|0);
    break L8;
    break;
   }
   case 13:  {
    $103 = $obj;
    $104 = ((($103)) + 4|0);
    $105 = HEAPU8[$104>>0]|(HEAPU8[$104+1>>0]<<8)|(HEAPU8[$104+2>>0]<<16)|(HEAPU8[$104+3>>0]<<24);
    $106 = $obj;
    $107 = ((($106)) + 4|0);
    $108 = HEAPU8[$107>>0]|(HEAPU8[$107+1>>0]<<8)|(HEAPU8[$107+2>>0]<<16)|(HEAPU8[$107+3>>0]<<24);
    (__unref($105,$108)|0);
    break L8;
    break;
   }
   case 16:  {
    $109 = $obj;
    $110 = ((($109)) + 8|0);
    $111 = HEAP8[$110>>0]|0;
    $112 = $111 & 1;
    $113 = ($112<<24>>24)!=(0);
    if ($113) {
     break L8;
    }
    $114 = $obj;
    $115 = ((($114)) + 4|0);
    $116 = HEAPU8[$115>>0]|(HEAPU8[$115+1>>0]<<8)|(HEAPU8[$115+2>>0]<<16)|(HEAPU8[$115+3>>0]<<24);
    $117 = $obj;
    $118 = ((($117)) + 4|0);
    $119 = HEAPU8[$118>>0]|(HEAPU8[$118+1>>0]<<8)|(HEAPU8[$118+2>>0]<<16)|(HEAPU8[$118+3>>0]<<24);
    (__unref($116,$119)|0);
    break L8;
    break;
   }
   case 17:  {
    $120 = $obj;
    $121 = ((($120)) + 8|0);
    $122 = HEAP8[$121>>0]|0;
    $123 = $122 & 1;
    $124 = ($123<<24>>24)!=(0);
    if (!($124)) {
     $125 = $obj;
     $126 = ((($125)) + 4|0);
     $127 = HEAPU8[$126>>0]|(HEAPU8[$126+1>>0]<<8)|(HEAPU8[$126+2>>0]<<16)|(HEAPU8[$126+3>>0]<<24);
     $128 = ((($127)) + 58|0);
     $129 = HEAPU8[$128>>0]|(HEAPU8[$128+1>>0]<<8)|(HEAPU8[$128+2>>0]<<16)|(HEAPU8[$128+3>>0]<<24);
     $130 = ($129|0)==(2);
     if ($130) {
      $131 = $obj;
      $132 = ((($131)) + 4|0);
      $133 = HEAPU8[$132>>0]|(HEAPU8[$132+1>>0]<<8)|(HEAPU8[$132+2>>0]<<16)|(HEAPU8[$132+3>>0]<<24);
      $134 = $obj;
      $135 = ((($134)) + 4|0);
      $136 = HEAPU8[$135>>0]|(HEAPU8[$135+1>>0]<<8)|(HEAPU8[$135+2>>0]<<16)|(HEAPU8[$135+3>>0]<<24);
      (__unref($133,$136)|0);
      break L8;
     }
    }
    $137 = $obj;
    $138 = ((($137)) + 8|0);
    $139 = HEAP8[$138>>0]|0;
    $140 = $139 & 1;
    $141 = ($140<<24>>24)!=(0);
    if ($141) {
     break L8;
    }
    $142 = $obj;
    $143 = ((($142)) + 4|0);
    $144 = HEAPU8[$143>>0]|(HEAPU8[$143+1>>0]<<8)|(HEAPU8[$143+2>>0]<<16)|(HEAPU8[$143+3>>0]<<24);
    $145 = ((($144)) + 58|0);
    $146 = HEAPU8[$145>>0]|(HEAPU8[$145+1>>0]<<8)|(HEAPU8[$145+2>>0]<<16)|(HEAPU8[$145+3>>0]<<24);
    $147 = ($146|0)!=(2);
    if (!($147)) {
     break L8;
    }
    $148 = $obj;
    $149 = ((($148)) + 4|0);
    $150 = HEAPU8[$149>>0]|(HEAPU8[$149+1>>0]<<8)|(HEAPU8[$149+2>>0]<<16)|(HEAPU8[$149+3>>0]<<24);
    __destroy_routine(0,$150);
    break L8;
    break;
   }
   default: {
    $make_nil = 0;
    break L8;
   }
   }
  }
 } while(0);
 $151 = $make_nil;
 $152 = ($151<<24>>24)!=(0);
 if (!($152)) {
  $155 = $result;
  STACKTOP = sp;return ($155|0);
 }
 $153 = $obj;
 dest=$153; stop=dest+17|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
 $154 = $obj;
 HEAP8[$154>>0]=0&255;HEAP8[$154+1>>0]=(0>>8)&255;HEAP8[$154+2>>0]=(0>>16)&255;HEAP8[$154+3>>0]=0>>24;
 $155 = $result;
 STACKTOP = sp;return ($155|0);
}
function __ht_cmp_intptr($d1,$d2) {
 $d1 = $d1|0;
 $d2 = $d2|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i1 = 0, $i2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $d1;
 $2 = $d2;
 $3 = $1;
 $4 = $3;
 $i1 = $4;
 $5 = $2;
 $6 = $5;
 $i2 = $6;
 $7 = $i1;
 $8 = $i2;
 $9 = ($7|0)<($8|0);
 do {
  if ($9) {
   $0 = -1;
  } else {
   $10 = $i1;
   $11 = $i2;
   $12 = ($10|0)>($11|0);
   if ($12) {
    $0 = 1;
    break;
   } else {
    $0 = 0;
    break;
   }
  }
 } while(0);
 $13 = $0;
 STACKTOP = sp;return ($13|0);
}
function __ht_hash_intptr($ht,$d) {
 $ht = $ht|0;
 $d = $d|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $result = 0, $self = 0, $u = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $ht;
 $1 = $d;
 $result = 0;
 $2 = $0;
 $self = $2;
 $3 = $0;
 $4 = ($3|0)!=(0|0);
 if (!($4)) {
  ___assert_fail((9706|0),(4322|0),2848,(9709|0));
  // unreachable;
 }
 $5 = $self;
 $6 = ((($5)) + 12|0);
 $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
 $8 = ($7|0)==(1);
 if ($8) {
  $result = 0;
  $16 = $result;
  STACKTOP = sp;return ($16|0);
 } else {
  $9 = $1;
  $10 = $9;
  $u = $10;
  $11 = $u;
  $12 = $self;
  $13 = ((($12)) + 12|0);
  $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
  $15 = (($11>>>0) % ($14>>>0))&-1;
  $result = $15;
  $16 = $result;
  STACKTOP = sp;return ($16|0);
 }
 return (0)|0;
}
function __fill_with_upvalue($data,$extra,$tuple) {
 $data = $data|0;
 $extra = $extra|0;
 $tuple = $tuple|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $aobj = 0, $ast = 0, $cond = 0;
 var $n = 0, $nori = 0, $nput = 0, $obj = 0, $ovar = 0, $ul = 0, $var = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ovar = sp + 8|0;
 $0 = $data;
 $1 = $extra;
 $2 = $tuple;
 $3 = $0;
 $obj = $3;
 $4 = $1;
 $n = $4;
 $ul = 0;
 $ast = 0;
 $nput = 0;
 $5 = $2;
 $6 = ((($5)) + 12|0);
 $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
 $8 = ((($7)) + 21|0);
 $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
 $10 = ((($9)) + 8|0);
 $11 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
 $12 = $n;
 $13 = (__ht_find($11,$12)|0);
 $nput = $13;
 $14 = $nput;
 $15 = ($14|0)!=(0|0);
 if ($15) {
  STACKTOP = sp;return 0;
 }
 $nori = 0;
 $16 = $2;
 $17 = ((($16)) + 4|0);
 $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
 $19 = ($18|0)!=(0|0);
 $20 = $2;
 if ($19) {
  $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
  $22 = $2;
  $23 = ((($22)) + 8|0);
  $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
  $25 = $n;
  $26 = (__search_identifier_in_scope_chain($21,$24,$25,1,0,0)|0);
  $nori = $26;
 } else {
  $27 = ((($20)) + 8|0);
  $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
  $29 = ((($28)) + 8|0);
  $30 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8)|(HEAPU8[$29+2>>0]<<16)|(HEAPU8[$29+3>>0]<<24);
  $31 = $n;
  $32 = (__ht_find($30,$31)|0);
  $nori = $32;
 }
 $33 = $nori;
 $34 = ($33|0)!=(0|0);
 if (!($34)) {
  STACKTOP = sp;return 0;
 }
 HEAP32[$ovar>>2] = 0;
 $35 = $n;
 $36 = (__create_var($ovar,$35,0,1)|0);
 $var = $36;
 $37 = $nori;
 $38 = HEAPU8[$37>>0]|(HEAPU8[$37+1>>0]<<8)|(HEAPU8[$37+2>>0]<<16)|(HEAPU8[$37+3>>0]<<24);
 $obj = $38;
 $39 = $2;
 $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8)|(HEAPU8[$39+2>>0]<<16)|(HEAPU8[$39+3>>0]<<24);
 $41 = $obj;
 $42 = $var;
 $43 = ((($42)) + 4|0);
 $44 = HEAPU8[$43>>0]|(HEAPU8[$43+1>>0]<<8)|(HEAPU8[$43+2>>0]<<16)|(HEAPU8[$43+3>>0]<<24);
 (__clone_object($40,$41,$44,1,1)|0);
 $45 = $var;
 $46 = ((($45)) + 4|0);
 $47 = HEAPU8[$46>>0]|(HEAPU8[$46+1>>0]<<8)|(HEAPU8[$46+2>>0]<<16)|(HEAPU8[$46+3>>0]<<24);
 $48 = HEAPU8[$47>>0]|(HEAPU8[$47+1>>0]<<8)|(HEAPU8[$47+2>>0]<<16)|(HEAPU8[$47+3>>0]<<24);
 switch ($48|0) {
 case 7:  {
  $49 = $var;
  $50 = ((($49)) + 4|0);
  $51 = HEAPU8[$50>>0]|(HEAPU8[$50+1>>0]<<8)|(HEAPU8[$50+2>>0]<<16)|(HEAPU8[$50+3>>0]<<24);
  $52 = ((($51)) + 4|0);
  $53 = HEAPU8[$52>>0]|(HEAPU8[$52+1>>0]<<8)|(HEAPU8[$52+2>>0]<<16)|(HEAPU8[$52+3>>0]<<24);
  $54 = $var;
  $55 = ((($54)) + 4|0);
  $56 = HEAPU8[$55>>0]|(HEAPU8[$55+1>>0]<<8)|(HEAPU8[$55+2>>0]<<16)|(HEAPU8[$55+3>>0]<<24);
  $57 = ((($56)) + 4|0);
  $58 = HEAPU8[$57>>0]|(HEAPU8[$57+1>>0]<<8)|(HEAPU8[$57+2>>0]<<16)|(HEAPU8[$57+3>>0]<<24);
  (__ref($53,$58)|0);
  break;
 }
 case 10:  {
  $59 = $var;
  $60 = ((($59)) + 4|0);
  $61 = HEAPU8[$60>>0]|(HEAPU8[$60+1>>0]<<8)|(HEAPU8[$60+2>>0]<<16)|(HEAPU8[$60+3>>0]<<24);
  $62 = ((($61)) + 8|0);
  $63 = HEAP8[$62>>0]|0;
  $64 = $63 & 1;
  $65 = ($64<<24>>24)!=(0);
  if (!($65)) {
   $66 = $var;
   $67 = ((($66)) + 4|0);
   $68 = HEAPU8[$67>>0]|(HEAPU8[$67+1>>0]<<8)|(HEAPU8[$67+2>>0]<<16)|(HEAPU8[$67+3>>0]<<24);
   $69 = ((($68)) + 4|0);
   $70 = HEAPU8[$69>>0]|(HEAPU8[$69+1>>0]<<8)|(HEAPU8[$69+2>>0]<<16)|(HEAPU8[$69+3>>0]<<24);
   $71 = $var;
   $72 = ((($71)) + 4|0);
   $73 = HEAPU8[$72>>0]|(HEAPU8[$72+1>>0]<<8)|(HEAPU8[$72+2>>0]<<16)|(HEAPU8[$72+3>>0]<<24);
   $74 = ((($73)) + 4|0);
   $75 = HEAPU8[$74>>0]|(HEAPU8[$74+1>>0]<<8)|(HEAPU8[$74+2>>0]<<16)|(HEAPU8[$74+3>>0]<<24);
   (__ref($70,$75)|0);
  }
  break;
 }
 case 11:  {
  $76 = $var;
  $77 = ((($76)) + 4|0);
  $78 = HEAPU8[$77>>0]|(HEAPU8[$77+1>>0]<<8)|(HEAPU8[$77+2>>0]<<16)|(HEAPU8[$77+3>>0]<<24);
  $79 = ((($78)) + 4|0);
  $80 = HEAPU8[$79>>0]|(HEAPU8[$79+1>>0]<<8)|(HEAPU8[$79+2>>0]<<16)|(HEAPU8[$79+3>>0]<<24);
  $81 = $var;
  $82 = ((($81)) + 4|0);
  $83 = HEAPU8[$82>>0]|(HEAPU8[$82+1>>0]<<8)|(HEAPU8[$82+2>>0]<<16)|(HEAPU8[$82+3>>0]<<24);
  $84 = ((($83)) + 4|0);
  $85 = HEAPU8[$84>>0]|(HEAPU8[$84+1>>0]<<8)|(HEAPU8[$84+2>>0]<<16)|(HEAPU8[$84+3>>0]<<24);
  (__ref($80,$85)|0);
  break;
 }
 case 13:  {
  $86 = $var;
  $87 = ((($86)) + 4|0);
  $88 = HEAPU8[$87>>0]|(HEAPU8[$87+1>>0]<<8)|(HEAPU8[$87+2>>0]<<16)|(HEAPU8[$87+3>>0]<<24);
  $89 = ((($88)) + 4|0);
  $90 = HEAPU8[$89>>0]|(HEAPU8[$89+1>>0]<<8)|(HEAPU8[$89+2>>0]<<16)|(HEAPU8[$89+3>>0]<<24);
  $91 = $var;
  $92 = ((($91)) + 4|0);
  $93 = HEAPU8[$92>>0]|(HEAPU8[$92+1>>0]<<8)|(HEAPU8[$92+2>>0]<<16)|(HEAPU8[$92+3>>0]<<24);
  $94 = ((($93)) + 4|0);
  $95 = HEAPU8[$94>>0]|(HEAPU8[$94+1>>0]<<8)|(HEAPU8[$94+2>>0]<<16)|(HEAPU8[$94+3>>0]<<24);
  (__ref($90,$95)|0);
  break;
 }
 case 16:  {
  $96 = $var;
  $97 = ((($96)) + 4|0);
  $98 = HEAPU8[$97>>0]|(HEAPU8[$97+1>>0]<<8)|(HEAPU8[$97+2>>0]<<16)|(HEAPU8[$97+3>>0]<<24);
  $99 = ((($98)) + 4|0);
  $100 = HEAPU8[$99>>0]|(HEAPU8[$99+1>>0]<<8)|(HEAPU8[$99+2>>0]<<16)|(HEAPU8[$99+3>>0]<<24);
  $101 = $var;
  $102 = ((($101)) + 4|0);
  $103 = HEAPU8[$102>>0]|(HEAPU8[$102+1>>0]<<8)|(HEAPU8[$102+2>>0]<<16)|(HEAPU8[$102+3>>0]<<24);
  $104 = ((($103)) + 4|0);
  $105 = HEAPU8[$104>>0]|(HEAPU8[$104+1>>0]<<8)|(HEAPU8[$104+2>>0]<<16)|(HEAPU8[$104+3>>0]<<24);
  (__ref($100,$105)|0);
  break;
 }
 case 17:  {
  $106 = $var;
  $107 = ((($106)) + 4|0);
  $108 = HEAPU8[$107>>0]|(HEAPU8[$107+1>>0]<<8)|(HEAPU8[$107+2>>0]<<16)|(HEAPU8[$107+3>>0]<<24);
  $109 = ((($108)) + 8|0);
  $110 = HEAP8[$109>>0]|0;
  $111 = $110 & 1;
  $112 = ($111<<24>>24)!=(0);
  if (!($112)) {
   $113 = $var;
   $114 = ((($113)) + 4|0);
   $115 = HEAPU8[$114>>0]|(HEAPU8[$114+1>>0]<<8)|(HEAPU8[$114+2>>0]<<16)|(HEAPU8[$114+3>>0]<<24);
   $116 = ((($115)) + 4|0);
   $117 = HEAPU8[$116>>0]|(HEAPU8[$116+1>>0]<<8)|(HEAPU8[$116+2>>0]<<16)|(HEAPU8[$116+3>>0]<<24);
   $118 = ((($117)) + 58|0);
   $119 = HEAPU8[$118>>0]|(HEAPU8[$118+1>>0]<<8)|(HEAPU8[$118+2>>0]<<16)|(HEAPU8[$118+3>>0]<<24);
   $120 = ($119|0)==(2);
   if ($120) {
    $121 = $var;
    $122 = ((($121)) + 4|0);
    $123 = HEAPU8[$122>>0]|(HEAPU8[$122+1>>0]<<8)|(HEAPU8[$122+2>>0]<<16)|(HEAPU8[$122+3>>0]<<24);
    $124 = ((($123)) + 4|0);
    $125 = HEAPU8[$124>>0]|(HEAPU8[$124+1>>0]<<8)|(HEAPU8[$124+2>>0]<<16)|(HEAPU8[$124+3>>0]<<24);
    $126 = $var;
    $127 = ((($126)) + 4|0);
    $128 = HEAPU8[$127>>0]|(HEAPU8[$127+1>>0]<<8)|(HEAPU8[$127+2>>0]<<16)|(HEAPU8[$127+3>>0]<<24);
    $129 = ((($128)) + 4|0);
    $130 = HEAPU8[$129>>0]|(HEAPU8[$129+1>>0]<<8)|(HEAPU8[$129+2>>0]<<16)|(HEAPU8[$129+3>>0]<<24);
    (__ref($125,$130)|0);
   }
  }
  break;
 }
 default: {
 }
 }
 $131 = $obj;
 $132 = ($131|0)!=(0|0);
 if ($132) {
  $133 = $obj;
  $134 = HEAPU8[$133>>0]|(HEAPU8[$133+1>>0]<<8)|(HEAPU8[$133+2>>0]<<16)|(HEAPU8[$133+3>>0]<<24);
  $135 = ($134|0)==(17);
  if ($135) {
   $136 = $obj;
   $137 = ((($136)) + 4|0);
   $138 = HEAPU8[$137>>0]|(HEAPU8[$137+1>>0]<<8)|(HEAPU8[$137+2>>0]<<16)|(HEAPU8[$137+3>>0]<<24);
   $139 = ((($138)) + 58|0);
   $140 = HEAPU8[$139>>0]|(HEAPU8[$139+1>>0]<<8)|(HEAPU8[$139+2>>0]<<16)|(HEAPU8[$139+3>>0]<<24);
   $141 = ($140|0)!=(2);
   if ($141) {
    $142 = HEAP32[$ovar>>2]|0;
    $143 = ((($142)) + 8|0);
    $144 = HEAP8[$143>>0]|0;
    $145 = $144 & -2;
    $146 = $145 | 1;
    HEAP8[$143>>0] = $146;
    $147 = $var;
    $148 = ((($147)) + 4|0);
    $149 = HEAPU8[$148>>0]|(HEAPU8[$148+1>>0]<<8)|(HEAPU8[$148+2>>0]<<16)|(HEAPU8[$148+3>>0]<<24);
    $150 = ((($149)) + 8|0);
    $151 = HEAP8[$150>>0]|0;
    $152 = $151 & -2;
    $153 = $152 | 1;
    HEAP8[$150>>0] = $153;
   }
  }
 }
 $154 = $obj;
 $155 = ($154|0)!=(0|0);
 if ($155) {
  $156 = $obj;
  $157 = HEAPU8[$156>>0]|(HEAPU8[$156+1>>0]<<8)|(HEAPU8[$156+2>>0]<<16)|(HEAPU8[$156+3>>0]<<24);
  $158 = ($157|0)==(9);
  if ($158) {
   $159 = $obj;
   $160 = ((($159)) + 4|0);
   $161 = HEAPU8[$160>>0]|(HEAPU8[$160+1>>0]<<8)|(HEAPU8[$160+2>>0]<<16)|(HEAPU8[$160+3>>0]<<24);
   $162 = ((($161)) + 8|0);
   $163 = HEAP8[$162>>0]|0;
   $164 = $163 & 3;
   $165 = $var;
   $166 = ((($165)) + 8|0);
   $167 = HEAP8[$166>>0]|0;
   $168 = $164 & 3;
   $169 = $167 & -4;
   $170 = $169 | $168;
   HEAP8[$166>>0] = $170;
  } else {
   label = 23;
  }
 } else {
  label = 23;
 }
 if ((label|0) == 23) {
  $171 = $var;
  $172 = ((($171)) + 8|0);
  $173 = HEAP8[$172>>0]|0;
  $174 = $173 & -4;
  HEAP8[$172>>0] = $174;
 }
 $175 = $2;
 $176 = ((($175)) + 12|0);
 $177 = HEAPU8[$176>>0]|(HEAPU8[$176+1>>0]<<8)|(HEAPU8[$176+2>>0]<<16)|(HEAPU8[$176+3>>0]<<24);
 $178 = ((($177)) + 21|0);
 $179 = HEAPU8[$178>>0]|(HEAPU8[$178+1>>0]<<8)|(HEAPU8[$178+2>>0]<<16)|(HEAPU8[$178+3>>0]<<24);
 $180 = ((($179)) + 8|0);
 $181 = HEAPU8[$180>>0]|(HEAPU8[$180+1>>0]<<8)|(HEAPU8[$180+2>>0]<<16)|(HEAPU8[$180+3>>0]<<24);
 $182 = HEAP32[$ovar>>2]|0;
 $183 = ((($182)) + 4|0);
 $184 = HEAPU8[$183>>0]|(HEAPU8[$183+1>>0]<<8)|(HEAPU8[$183+2>>0]<<16)|(HEAPU8[$183+3>>0]<<24);
 $185 = HEAPU8[$184>>0]|(HEAPU8[$184+1>>0]<<8)|(HEAPU8[$184+2>>0]<<16)|(HEAPU8[$184+3>>0]<<24);
 $186 = HEAP32[$ovar>>2]|0;
 $187 = (__ht_set_or_insert($181,$185,$186)|0);
 $ul = $187;
 $188 = $ul;
 $189 = ($188|0)!=(0);
 if (!($189)) {
  ___assert_fail((8058|0),(4322|0),9115,(9332|0));
  // unreachable;
 }
 $190 = $2;
 $191 = ((($190)) + 20|0);
 $192 = HEAPU8[$191>>0]|(HEAPU8[$191+1>>0]<<8)|(HEAPU8[$191+2>>0]<<16)|(HEAPU8[$191+3>>0]<<24);
 $193 = $1;
 $194 = $0;
 (__ht_set_or_insert($192,$193,$194)|0);
 $195 = $2;
 $196 = ((($195)) + 16|0);
 $197 = HEAPU8[$196>>0]|(HEAPU8[$196+1>>0]<<8)|(HEAPU8[$196+2>>0]<<16)|(HEAPU8[$196+3>>0]<<24);
 $198 = ((($197)) + 37|0);
 $199 = HEAPU8[$198>>0]|(HEAPU8[$198+1>>0]<<8)|(HEAPU8[$198+2>>0]<<16)|(HEAPU8[$198+3>>0]<<24);
 $ast = $199;
 while(1) {
  $200 = $ast;
  $201 = ($200|0)!=(0|0);
  if (!($201)) {
   label = 34;
   break;
  }
  $202 = $ast;
  $203 = $2;
  $204 = ((($203)) + 16|0);
  $205 = HEAPU8[$204>>0]|(HEAPU8[$204+1>>0]<<8)|(HEAPU8[$204+2>>0]<<16)|(HEAPU8[$204+3>>0]<<24);
  $206 = ((($205)) + 41|0);
  $207 = HEAPU8[$206>>0]|(HEAPU8[$206+1>>0]<<8)|(HEAPU8[$206+2>>0]<<16)|(HEAPU8[$206+3>>0]<<24);
  $208 = ((($207)) + 8|0);
  $209 = HEAPU8[$208>>0]|(HEAPU8[$208+1>>0]<<8)|(HEAPU8[$208+2>>0]<<16)|(HEAPU8[$208+3>>0]<<24);
  $210 = ($202|0)!=($209|0);
  if (!($210)) {
   label = 34;
   break;
  }
  $211 = $ast;
  $212 = HEAPU8[$211>>0]|(HEAPU8[$211+1>>0]<<8)|(HEAPU8[$211+2>>0]<<16)|(HEAPU8[$211+3>>0]<<24);
  $aobj = $212;
  $213 = $aobj;
  $214 = ($213|0)!=(0|0);
  if ($214) {
   $215 = $aobj;
   $216 = HEAPU8[$215>>0]|(HEAPU8[$215+1>>0]<<8)|(HEAPU8[$215+2>>0]<<16)|(HEAPU8[$215+3>>0]<<24);
   $cond = ($216|0)==(9);
   if ($cond) {
    $217 = $aobj;
    $218 = ((($217)) + 4|0);
    $219 = HEAPU8[$218>>0]|(HEAPU8[$218+1>>0]<<8)|(HEAPU8[$218+2>>0]<<16)|(HEAPU8[$218+3>>0]<<24);
    $220 = HEAPU8[$219>>0]|(HEAPU8[$219+1>>0]<<8)|(HEAPU8[$219+2>>0]<<16)|(HEAPU8[$219+3>>0]<<24);
    $221 = HEAP32[$ovar>>2]|0;
    $222 = ((($221)) + 4|0);
    $223 = HEAPU8[$222>>0]|(HEAPU8[$222+1>>0]<<8)|(HEAPU8[$222+2>>0]<<16)|(HEAPU8[$222+3>>0]<<24);
    $224 = HEAPU8[$223>>0]|(HEAPU8[$223+1>>0]<<8)|(HEAPU8[$223+2>>0]<<16)|(HEAPU8[$223+3>>0]<<24);
    $225 = (_strcmp($220,$224)|0);
    $226 = ($225|0)!=(0);
    if (!($226)) {
     $227 = $aobj;
     $228 = ((($227)) + 4|0);
     $229 = HEAPU8[$228>>0]|(HEAPU8[$228+1>>0]<<8)|(HEAPU8[$228+2>>0]<<16)|(HEAPU8[$228+3>>0]<<24);
     $230 = ((($229)) + 8|0);
     $231 = HEAP8[$230>>0]|0;
     $232 = $231 & -4;
     $233 = $232 | 3;
     HEAP8[$230>>0] = $233;
    }
   }
  }
  $234 = $ast;
  $235 = ((($234)) + 8|0);
  $236 = HEAPU8[$235>>0]|(HEAPU8[$235+1>>0]<<8)|(HEAPU8[$235+2>>0]<<16)|(HEAPU8[$235+3>>0]<<24);
  $ast = $236;
 }
 if ((label|0) == 34) {
  STACKTOP = sp;return 0;
 }
 return (0)|0;
}
function __remove_filled_upvalue($data,$extra,$ht) {
 $data = $data|0;
 $extra = $extra|0;
 $ht = $ht|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $data;
 $1 = $extra;
 $2 = $ht;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 (__ht_remove_existing($3,$4,$5)|0);
 STACKTOP = sp;return 0;
}
function __get_root_ref_scope($scope) {
 $scope = $scope|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $scope;
 $result = 0;
 while(1) {
  $1 = $0;
  $2 = ($1|0)!=(0|0);
  if (!($2)) {
   break;
  }
  $3 = $0;
  $result = $3;
  $4 = $0;
  $5 = ((($4)) + 17|0);
  $6 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
  $0 = $6;
 }
 $7 = $result;
 STACKTOP = sp;return ($7|0);
}
function __ht_remove_existing($data,$extra,$ht) {
 $data = $data|0;
 $extra = $extra|0;
 $ht = $ht|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $data;
 $1 = $extra;
 $2 = $ht;
 $result = 0;
 $3 = $2;
 $4 = $1;
 $5 = (__ht_find($3,$4)|0);
 $6 = ($5|0)!=(0|0);
 if ($6) {
  $7 = $2;
  $8 = $1;
  (__ht_remove($7,$8,0)|0);
 }
 $9 = $result;
 STACKTOP = sp;return ($9|0);
}
function __clone_object($s,$obj,$tgt,$toupval,$deep) {
 $s = $s|0;
 $obj = $obj|0;
 $tgt = $tgt|0;
 $toupval = $toupval|0;
 $deep = $deep|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0;
 var $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0;
 var $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0;
 var $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0;
 var $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0;
 var $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0;
 var $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__bucket = 0, $__lst = 0, $__lst1 = 0, $__opresult = 0, $__opresult2 = 0;
 var $__tmp = 0, $__tmp3 = 0, $__ul = 0, $or$cond = 0, $result = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $obj;
 $2 = $tgt;
 $3 = $toupval;
 $4 = $deep;
 $result = 0;
 $5 = $1;
 $6 = ($5|0)!=(0|0);
 $7 = $2;
 $8 = ($7|0)!=(0|0);
 $or$cond = $6 & $8;
 if (!($or$cond)) {
  ___assert_fail((9351|0),(4322|0),9820,(9362|0));
  // unreachable;
 }
 $9 = $2;
 dest=$9; stop=dest+17|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
 $10 = $2;
 HEAP8[$10>>0]=0&255;HEAP8[$10+1>>0]=(0>>8)&255;HEAP8[$10+2>>0]=(0>>16)&255;HEAP8[$10+3>>0]=0>>24;
 $11 = $1;
 $12 = (__is_internal_object($11)|0);
 $13 = ($12<<24>>24)!=(0);
 if ($13) {
  $394 = $result;
  STACKTOP = sp;return ($394|0);
 }
 $14 = $1;
 $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
 $16 = $2;
 HEAP8[$16>>0]=$15&255;HEAP8[$16+1>>0]=($15>>8)&255;HEAP8[$16+2>>0]=($15>>16)&255;HEAP8[$16+3>>0]=$15>>24;
 $17 = $1;
 $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
 L7: do {
  switch ($18|0) {
  case 9:  {
   $19 = $0;
   $20 = $1;
   $21 = ((($20)) + 4|0);
   $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
   $23 = ((($22)) + 4|0);
   $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
   $25 = $2;
   $26 = $3;
   $27 = $4;
   (__clone_object($19,$24,$25,$26,$27)|0);
   break;
  }
  case 4:  {
   $28 = $1;
   $29 = ((($28)) + 4|0);
   $30 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8)|(HEAPU8[$29+2>>0]<<16)|(HEAPU8[$29+3>>0]<<24);
   $31 = (_mb_strdup($30,0)|0);
   $32 = $2;
   $33 = ((($32)) + 4|0);
   HEAP8[$33>>0]=$31&255;HEAP8[$33+1>>0]=($31>>8)&255;HEAP8[$33+2>>0]=($31>>16)&255;HEAP8[$33+3>>0]=$31>>24;
   break;
  }
  case 7:  {
   $34 = $1;
   $35 = ((($34)) + 4|0);
   $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
   $37 = $2;
   __clone_usertype_ref($36,$37);
   break;
  }
  case 8:  {
   $38 = $1;
   $39 = ((($38)) + 4|0);
   $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8)|(HEAPU8[$39+2>>0]<<16)|(HEAPU8[$39+3>>0]<<24);
   $41 = HEAPU8[$40>>0]|(HEAPU8[$40+1>>0]<<8)|(HEAPU8[$40+2>>0]<<16)|(HEAPU8[$40+3>>0]<<24);
   $42 = $1;
   $43 = ((($42)) + 4|0);
   $44 = HEAPU8[$43>>0]|(HEAPU8[$43+1>>0]<<8)|(HEAPU8[$43+2>>0]<<16)|(HEAPU8[$43+3>>0]<<24);
   $45 = HEAPU8[$44>>0]|(HEAPU8[$44+1>>0]<<8)|(HEAPU8[$44+2>>0]<<16)|(HEAPU8[$44+3>>0]<<24);
   $46 = (_strlen($45)|0);
   $47 = (($46) + 1)|0;
   $48 = (_mb_strdup($41,$47)|0);
   $49 = $2;
   $50 = ((($49)) + 4|0);
   $51 = HEAPU8[$50>>0]|(HEAPU8[$50+1>>0]<<8)|(HEAPU8[$50+2>>0]<<16)|(HEAPU8[$50+3>>0]<<24);
   HEAP8[$51>>0]=$48&255;HEAP8[$51+1>>0]=($48>>8)&255;HEAP8[$51+2>>0]=($48>>16)&255;HEAP8[$51+3>>0]=$48>>24;
   $52 = $1;
   $53 = ((($52)) + 4|0);
   $54 = HEAPU8[$53>>0]|(HEAPU8[$53+1>>0]<<8)|(HEAPU8[$53+2>>0]<<16)|(HEAPU8[$53+3>>0]<<24);
   $55 = ((($54)) + 4|0);
   $56 = HEAPU8[$55>>0]|(HEAPU8[$55+1>>0]<<8)|(HEAPU8[$55+2>>0]<<16)|(HEAPU8[$55+3>>0]<<24);
   $57 = $2;
   $58 = ((($57)) + 4|0);
   $59 = HEAPU8[$58>>0]|(HEAPU8[$58+1>>0]<<8)|(HEAPU8[$58+2>>0]<<16)|(HEAPU8[$58+3>>0]<<24);
   $60 = ((($59)) + 4|0);
   HEAP8[$60>>0]=$56&255;HEAP8[$60+1>>0]=($56>>8)&255;HEAP8[$60+2>>0]=($56>>16)&255;HEAP8[$60+3>>0]=$56>>24;
   break;
  }
  case 10:  {
   $61 = $4;
   $62 = ($61<<24>>24)!=(0);
   if ($62) {
    $63 = $0;
    $64 = $1;
    $65 = ((($64)) + 4|0);
    $66 = HEAPU8[$65>>0]|(HEAPU8[$65+1>>0]<<8)|(HEAPU8[$65+2>>0]<<16)|(HEAPU8[$65+3>>0]<<24);
    $67 = (__clone_array($63,$66)|0);
    $68 = $2;
    $69 = ((($68)) + 4|0);
    HEAP8[$69>>0]=$67&255;HEAP8[$69+1>>0]=($67>>8)&255;HEAP8[$69+2>>0]=($67>>16)&255;HEAP8[$69+3>>0]=$67>>24;
    break L7;
   } else {
    $70 = $1;
    $71 = ((($70)) + 4|0);
    $72 = HEAPU8[$71>>0]|(HEAPU8[$71+1>>0]<<8)|(HEAPU8[$71+2>>0]<<16)|(HEAPU8[$71+3>>0]<<24);
    $73 = $2;
    $74 = ((($73)) + 4|0);
    HEAP8[$74>>0]=$72&255;HEAP8[$74+1>>0]=($72>>8)&255;HEAP8[$74+2>>0]=($72>>16)&255;HEAP8[$74+3>>0]=$72>>24;
    $75 = $1;
    $76 = ((($75)) + 4|0);
    $77 = HEAPU8[$76>>0]|(HEAPU8[$76+1>>0]<<8)|(HEAPU8[$76+2>>0]<<16)|(HEAPU8[$76+3>>0]<<24);
    $78 = $1;
    $79 = ((($78)) + 4|0);
    $80 = HEAPU8[$79>>0]|(HEAPU8[$79+1>>0]<<8)|(HEAPU8[$79+2>>0]<<16)|(HEAPU8[$79+3>>0]<<24);
    (__ref($77,$80)|0);
    break L7;
   }
   break;
  }
  case 11:  {
   $81 = $4;
   $82 = ($81<<24>>24)!=(0);
   $83 = $1;
   $84 = ((($83)) + 4|0);
   $85 = HEAPU8[$84>>0]|(HEAPU8[$84+1>>0]<<8)|(HEAPU8[$84+2>>0]<<16)|(HEAPU8[$84+3>>0]<<24);
   if (!($82)) {
    $160 = $2;
    $161 = ((($160)) + 4|0);
    HEAP8[$161>>0]=$85&255;HEAP8[$161+1>>0]=($85>>8)&255;HEAP8[$161+2>>0]=($85>>16)&255;HEAP8[$161+3>>0]=$85>>24;
    $162 = $1;
    $163 = ((($162)) + 4|0);
    $164 = HEAPU8[$163>>0]|(HEAPU8[$163+1>>0]<<8)|(HEAPU8[$163+2>>0]<<16)|(HEAPU8[$163+3>>0]<<24);
    $165 = $1;
    $166 = ((($165)) + 4|0);
    $167 = HEAPU8[$166>>0]|(HEAPU8[$166+1>>0]<<8)|(HEAPU8[$166+2>>0]<<16)|(HEAPU8[$166+3>>0]<<24);
    (__ref($164,$167)|0);
    break L7;
   }
   $86 = ((($85)) + 13|0);
   $87 = HEAPU8[$86>>0]|(HEAPU8[$86+1>>0]<<8)|(HEAPU8[$86+2>>0]<<16)|(HEAPU8[$86+3>>0]<<24);
   $88 = (__create_list($87)|0);
   $89 = $2;
   $90 = ((($89)) + 4|0);
   HEAP8[$90>>0]=$88&255;HEAP8[$90+1>>0]=($88>>8)&255;HEAP8[$90+2>>0]=($88>>16)&255;HEAP8[$90+3>>0]=$88>>24;
   $91 = $2;
   $92 = ((($91)) + 4|0);
   $93 = HEAPU8[$92>>0]|(HEAPU8[$92+1>>0]<<8)|(HEAPU8[$92+2>>0]<<16)|(HEAPU8[$92+3>>0]<<24);
   $94 = $2;
   $95 = ((($94)) + 4|0);
   $96 = HEAPU8[$95>>0]|(HEAPU8[$95+1>>0]<<8)|(HEAPU8[$95+2>>0]<<16)|(HEAPU8[$95+3>>0]<<24);
   (__ref($93,$96)|0);
   $97 = $1;
   $98 = ((($97)) + 4|0);
   $99 = HEAPU8[$98>>0]|(HEAPU8[$98+1>>0]<<8)|(HEAPU8[$98+2>>0]<<16)|(HEAPU8[$98+3>>0]<<24);
   $100 = ((($99)) + 19|0);
   $101 = HEAPU8[$100>>0]|(HEAPU8[$100+1>>0]<<8)|(HEAPU8[$100+2>>0]<<16)|(HEAPU8[$100+3>>0]<<24);
   $__lst = $101;
   $__opresult = 0;
   $__tmp = 0;
   $102 = $1;
   $103 = ((($102)) + 4|0);
   $104 = HEAPU8[$103>>0]|(HEAPU8[$103+1>>0]<<8)|(HEAPU8[$103+2>>0]<<16)|(HEAPU8[$103+3>>0]<<24);
   $105 = ((($104)) + 19|0);
   $106 = HEAPU8[$105>>0]|(HEAPU8[$105+1>>0]<<8)|(HEAPU8[$105+2>>0]<<16)|(HEAPU8[$105+3>>0]<<24);
   $107 = ($106|0)!=(0|0);
   if (!($107)) {
    ___assert_fail((9376|0),(4322|0),9862,(9362|0));
    // unreachable;
   }
   $108 = $__lst;
   $109 = ((($108)) + 8|0);
   $110 = HEAPU8[$109>>0]|(HEAPU8[$109+1>>0]<<8)|(HEAPU8[$109+2>>0]<<16)|(HEAPU8[$109+3>>0]<<24);
   $__lst = $110;
   while(1) {
    $111 = $__lst;
    $112 = ($111|0)!=(0|0);
    if (!($112)) {
     break L7;
    }
    $113 = $__lst;
    $114 = HEAPU8[$113>>0]|(HEAPU8[$113+1>>0]<<8)|(HEAPU8[$113+2>>0]<<16)|(HEAPU8[$113+3>>0]<<24);
    $115 = $__lst;
    $116 = ((($115)) + 12|0);
    $117 = HEAPU8[$116>>0]|(HEAPU8[$116+1>>0]<<8)|(HEAPU8[$116+2>>0]<<16)|(HEAPU8[$116+3>>0]<<24);
    $118 = $2;
    $119 = ((($118)) + 4|0);
    $120 = HEAPU8[$119>>0]|(HEAPU8[$119+1>>0]<<8)|(HEAPU8[$119+2>>0]<<16)|(HEAPU8[$119+3>>0]<<24);
    (__clone_to_list($114,$117,$120)|0);
    $121 = $__lst;
    $122 = HEAPU8[$121>>0]|(HEAPU8[$121+1>>0]<<8)|(HEAPU8[$121+2>>0]<<16)|(HEAPU8[$121+3>>0]<<24);
    $123 = $__lst;
    $124 = ((($123)) + 12|0);
    $125 = HEAPU8[$124>>0]|(HEAPU8[$124+1>>0]<<8)|(HEAPU8[$124+2>>0]<<16)|(HEAPU8[$124+3>>0]<<24);
    $126 = (__do_nothing_on_object($122,$125)|0);
    $__opresult = $126;
    $127 = $__lst;
    $__tmp = $127;
    $128 = $__lst;
    $129 = ((($128)) + 8|0);
    $130 = HEAPU8[$129>>0]|(HEAPU8[$129+1>>0]<<8)|(HEAPU8[$129+2>>0]<<16)|(HEAPU8[$129+3>>0]<<24);
    $__lst = $130;
    $131 = $__opresult;
    $132 = (-1)==($131|0);
    if (!($132)) {
     continue;
    }
    $133 = $__lst;
    $134 = $__tmp;
    $135 = ((($134)) + 4|0);
    $136 = HEAPU8[$135>>0]|(HEAPU8[$135+1>>0]<<8)|(HEAPU8[$135+2>>0]<<16)|(HEAPU8[$135+3>>0]<<24);
    $137 = ((($136)) + 8|0);
    HEAP8[$137>>0]=$133&255;HEAP8[$137+1>>0]=($133>>8)&255;HEAP8[$137+2>>0]=($133>>16)&255;HEAP8[$137+3>>0]=$133>>24;
    $138 = $__lst;
    $139 = ($138|0)!=(0|0);
    if ($139) {
     $140 = $__tmp;
     $141 = ((($140)) + 4|0);
     $142 = HEAPU8[$141>>0]|(HEAPU8[$141+1>>0]<<8)|(HEAPU8[$141+2>>0]<<16)|(HEAPU8[$141+3>>0]<<24);
     $143 = $__lst;
     $144 = ((($143)) + 4|0);
     HEAP8[$144>>0]=$142&255;HEAP8[$144+1>>0]=($142>>8)&255;HEAP8[$144+2>>0]=($142>>16)&255;HEAP8[$144+3>>0]=$142>>24;
    }
    $145 = $__tmp;
    $146 = ($145|0)!=(0|0);
    if (!($146)) {
     break;
    }
    $147 = $__tmp;
    _mb_free($147);
    $__tmp = 0;
    $148 = $1;
    $149 = ((($148)) + 4|0);
    $150 = HEAPU8[$149>>0]|(HEAPU8[$149+1>>0]<<8)|(HEAPU8[$149+2>>0]<<16)|(HEAPU8[$149+3>>0]<<24);
    $151 = ((($150)) + 19|0);
    $152 = HEAPU8[$151>>0]|(HEAPU8[$151+1>>0]<<8)|(HEAPU8[$151+2>>0]<<16)|(HEAPU8[$151+3>>0]<<24);
    $153 = HEAPU8[$152>>0]|(HEAPU8[$152+1>>0]<<8)|(HEAPU8[$152+2>>0]<<16)|(HEAPU8[$152+3>>0]<<24);
    $154 = ((($153)) + -1|0);
    $155 = $1;
    $156 = ((($155)) + 4|0);
    $157 = HEAPU8[$156>>0]|(HEAPU8[$156+1>>0]<<8)|(HEAPU8[$156+2>>0]<<16)|(HEAPU8[$156+3>>0]<<24);
    $158 = ((($157)) + 19|0);
    $159 = HEAPU8[$158>>0]|(HEAPU8[$158+1>>0]<<8)|(HEAPU8[$158+2>>0]<<16)|(HEAPU8[$158+3>>0]<<24);
    HEAP8[$159>>0]=$154&255;HEAP8[$159+1>>0]=($154>>8)&255;HEAP8[$159+2>>0]=($154>>16)&255;HEAP8[$159+3>>0]=$154>>24;
   }
   ___assert_fail((4369|0),(4322|0),9862,(9362|0));
   // unreachable;
   break;
  }
  case 12:  {
   $168 = $1;
   $169 = ((($168)) + 4|0);
   $170 = HEAPU8[$169>>0]|(HEAPU8[$169+1>>0]<<8)|(HEAPU8[$169+2>>0]<<16)|(HEAPU8[$169+3>>0]<<24);
   $171 = ((($170)) + 17|0);
   $172 = HEAPU8[$171>>0]|(HEAPU8[$171+1>>0]<<8)|(HEAPU8[$171+2>>0]<<16)|(HEAPU8[$171+3>>0]<<24);
   $173 = (__create_list_it($172,1)|0);
   $174 = $2;
   $175 = ((($174)) + 4|0);
   HEAP8[$175>>0]=$173&255;HEAP8[$175+1>>0]=($173>>8)&255;HEAP8[$175+2>>0]=($173>>16)&255;HEAP8[$175+3>>0]=$173>>24;
   break;
  }
  case 13:  {
   $176 = $4;
   $177 = ($176<<24>>24)!=(0);
   $178 = $1;
   $179 = ((($178)) + 4|0);
   $180 = HEAPU8[$179>>0]|(HEAPU8[$179+1>>0]<<8)|(HEAPU8[$179+2>>0]<<16)|(HEAPU8[$179+3>>0]<<24);
   if (!($177)) {
    $270 = $2;
    $271 = ((($270)) + 4|0);
    HEAP8[$271>>0]=$180&255;HEAP8[$271+1>>0]=($180>>8)&255;HEAP8[$271+2>>0]=($180>>16)&255;HEAP8[$271+3>>0]=$180>>24;
    $272 = $1;
    $273 = ((($272)) + 4|0);
    $274 = HEAPU8[$273>>0]|(HEAPU8[$273+1>>0]<<8)|(HEAPU8[$273+2>>0]<<16)|(HEAPU8[$273+3>>0]<<24);
    $275 = $1;
    $276 = ((($275)) + 4|0);
    $277 = HEAPU8[$276>>0]|(HEAPU8[$276+1>>0]<<8)|(HEAPU8[$276+2>>0]<<16)|(HEAPU8[$276+3>>0]<<24);
    (__ref($274,$277)|0);
    break L7;
   }
   $181 = ((($180)) + 13|0);
   $182 = HEAPU8[$181>>0]|(HEAPU8[$181+1>>0]<<8)|(HEAPU8[$181+2>>0]<<16)|(HEAPU8[$181+3>>0]<<24);
   $183 = (__create_dict($182)|0);
   $184 = $2;
   $185 = ((($184)) + 4|0);
   HEAP8[$185>>0]=$183&255;HEAP8[$185+1>>0]=($183>>8)&255;HEAP8[$185+2>>0]=($183>>16)&255;HEAP8[$185+3>>0]=$183>>24;
   $186 = $2;
   $187 = ((($186)) + 4|0);
   $188 = HEAPU8[$187>>0]|(HEAPU8[$187+1>>0]<<8)|(HEAPU8[$187+2>>0]<<16)|(HEAPU8[$187+3>>0]<<24);
   $189 = $2;
   $190 = ((($189)) + 4|0);
   $191 = HEAPU8[$190>>0]|(HEAPU8[$190+1>>0]<<8)|(HEAPU8[$190+2>>0]<<16)|(HEAPU8[$190+3>>0]<<24);
   (__ref($188,$191)|0);
   $__bucket = 0;
   $__ul = 0;
   $192 = $1;
   $193 = ((($192)) + 4|0);
   $194 = HEAPU8[$193>>0]|(HEAPU8[$193+1>>0]<<8)|(HEAPU8[$193+2>>0]<<16)|(HEAPU8[$193+3>>0]<<24);
   $195 = ((($194)) + 19|0);
   $196 = HEAPU8[$195>>0]|(HEAPU8[$195+1>>0]<<8)|(HEAPU8[$195+2>>0]<<16)|(HEAPU8[$195+3>>0]<<24);
   $197 = ((($196)) + 20|0);
   $198 = HEAPU8[$197>>0]|(HEAPU8[$197+1>>0]<<8)|(HEAPU8[$197+2>>0]<<16)|(HEAPU8[$197+3>>0]<<24);
   $199 = ($198|0)!=(0|0);
   if ($199) {
    $__ul = 0;
    L39: while(1) {
     $200 = $__ul;
     $201 = $1;
     $202 = ((($201)) + 4|0);
     $203 = HEAPU8[$202>>0]|(HEAPU8[$202+1>>0]<<8)|(HEAPU8[$202+2>>0]<<16)|(HEAPU8[$202+3>>0]<<24);
     $204 = ((($203)) + 19|0);
     $205 = HEAPU8[$204>>0]|(HEAPU8[$204+1>>0]<<8)|(HEAPU8[$204+2>>0]<<16)|(HEAPU8[$204+3>>0]<<24);
     $206 = ((($205)) + 12|0);
     $207 = HEAPU8[$206>>0]|(HEAPU8[$206+1>>0]<<8)|(HEAPU8[$206+2>>0]<<16)|(HEAPU8[$206+3>>0]<<24);
     $208 = ($200>>>0)<($207>>>0);
     if (!($208)) {
      break L7;
     }
     $209 = $__ul;
     $210 = $1;
     $211 = ((($210)) + 4|0);
     $212 = HEAPU8[$211>>0]|(HEAPU8[$211+1>>0]<<8)|(HEAPU8[$211+2>>0]<<16)|(HEAPU8[$211+3>>0]<<24);
     $213 = ((($212)) + 19|0);
     $214 = HEAPU8[$213>>0]|(HEAPU8[$213+1>>0]<<8)|(HEAPU8[$213+2>>0]<<16)|(HEAPU8[$213+3>>0]<<24);
     $215 = ((($214)) + 20|0);
     $216 = HEAPU8[$215>>0]|(HEAPU8[$215+1>>0]<<8)|(HEAPU8[$215+2>>0]<<16)|(HEAPU8[$215+3>>0]<<24);
     $217 = (($216) + ($209<<2)|0);
     $218 = HEAP32[$217>>2]|0;
     $__bucket = $218;
     $219 = $__bucket;
     $220 = ($219|0)!=(0|0);
     L42: do {
      if ($220) {
       $221 = $__bucket;
       $__lst1 = $221;
       $__opresult2 = 0;
       $__tmp3 = 0;
       $222 = $__bucket;
       $223 = ($222|0)!=(0|0);
       if (!($223)) {
        label = 31;
        break L39;
       }
       $224 = $__lst1;
       $225 = ((($224)) + 8|0);
       $226 = HEAPU8[$225>>0]|(HEAPU8[$225+1>>0]<<8)|(HEAPU8[$225+2>>0]<<16)|(HEAPU8[$225+3>>0]<<24);
       $__lst1 = $226;
       while(1) {
        $227 = $__lst1;
        $228 = ($227|0)!=(0|0);
        if (!($228)) {
         break L42;
        }
        $229 = $__lst1;
        $230 = HEAPU8[$229>>0]|(HEAPU8[$229+1>>0]<<8)|(HEAPU8[$229+2>>0]<<16)|(HEAPU8[$229+3>>0]<<24);
        $231 = $__lst1;
        $232 = ((($231)) + 12|0);
        $233 = HEAPU8[$232>>0]|(HEAPU8[$232+1>>0]<<8)|(HEAPU8[$232+2>>0]<<16)|(HEAPU8[$232+3>>0]<<24);
        $234 = $2;
        $235 = ((($234)) + 4|0);
        $236 = HEAPU8[$235>>0]|(HEAPU8[$235+1>>0]<<8)|(HEAPU8[$235+2>>0]<<16)|(HEAPU8[$235+3>>0]<<24);
        (__clone_to_dict($230,$233,$236)|0);
        $237 = $__lst1;
        $238 = HEAPU8[$237>>0]|(HEAPU8[$237+1>>0]<<8)|(HEAPU8[$237+2>>0]<<16)|(HEAPU8[$237+3>>0]<<24);
        $239 = $__lst1;
        $240 = ((($239)) + 12|0);
        $241 = HEAPU8[$240>>0]|(HEAPU8[$240+1>>0]<<8)|(HEAPU8[$240+2>>0]<<16)|(HEAPU8[$240+3>>0]<<24);
        $242 = (__do_nothing_on_object($238,$241)|0);
        $__opresult2 = $242;
        $243 = $__lst1;
        $__tmp3 = $243;
        $244 = $__lst1;
        $245 = ((($244)) + 8|0);
        $246 = HEAPU8[$245>>0]|(HEAPU8[$245+1>>0]<<8)|(HEAPU8[$245+2>>0]<<16)|(HEAPU8[$245+3>>0]<<24);
        $__lst1 = $246;
        $247 = $__opresult2;
        $248 = (-1)==($247|0);
        if (!($248)) {
         continue;
        }
        $249 = $__lst1;
        $250 = $__tmp3;
        $251 = ((($250)) + 4|0);
        $252 = HEAPU8[$251>>0]|(HEAPU8[$251+1>>0]<<8)|(HEAPU8[$251+2>>0]<<16)|(HEAPU8[$251+3>>0]<<24);
        $253 = ((($252)) + 8|0);
        HEAP8[$253>>0]=$249&255;HEAP8[$253+1>>0]=($249>>8)&255;HEAP8[$253+2>>0]=($249>>16)&255;HEAP8[$253+3>>0]=$249>>24;
        $254 = $__lst1;
        $255 = ($254|0)!=(0|0);
        if ($255) {
         $256 = $__tmp3;
         $257 = ((($256)) + 4|0);
         $258 = HEAPU8[$257>>0]|(HEAPU8[$257+1>>0]<<8)|(HEAPU8[$257+2>>0]<<16)|(HEAPU8[$257+3>>0]<<24);
         $259 = $__lst1;
         $260 = ((($259)) + 4|0);
         HEAP8[$260>>0]=$258&255;HEAP8[$260+1>>0]=($258>>8)&255;HEAP8[$260+2>>0]=($258>>16)&255;HEAP8[$260+3>>0]=$258>>24;
        }
        $261 = $__tmp3;
        $262 = ($261|0)!=(0|0);
        if (!($262)) {
         label = 39;
         break L39;
        }
        $263 = $__tmp3;
        _mb_free($263);
        $__tmp3 = 0;
        $264 = $__bucket;
        $265 = HEAPU8[$264>>0]|(HEAPU8[$264+1>>0]<<8)|(HEAPU8[$264+2>>0]<<16)|(HEAPU8[$264+3>>0]<<24);
        $266 = ((($265)) + -1|0);
        $267 = $__bucket;
        HEAP8[$267>>0]=$266&255;HEAP8[$267+1>>0]=($266>>8)&255;HEAP8[$267+2>>0]=($266>>16)&255;HEAP8[$267+3>>0]=$266>>24;
       }
      }
     } while(0);
     $268 = $__ul;
     $269 = (($268) + 1)|0;
     $__ul = $269;
    }
    if ((label|0) == 31) {
     ___assert_fail((4526|0),(4322|0),9877,(9362|0));
     // unreachable;
    }
    else if ((label|0) == 39) {
     ___assert_fail((4369|0),(4322|0),9877,(9362|0));
     // unreachable;
    }
   }
   break;
  }
  case 14:  {
   $278 = $1;
   $279 = ((($278)) + 4|0);
   $280 = HEAPU8[$279>>0]|(HEAPU8[$279+1>>0]<<8)|(HEAPU8[$279+2>>0]<<16)|(HEAPU8[$279+3>>0]<<24);
   $281 = ((($280)) + 17|0);
   $282 = HEAPU8[$281>>0]|(HEAPU8[$281+1>>0]<<8)|(HEAPU8[$281+2>>0]<<16)|(HEAPU8[$281+3>>0]<<24);
   $283 = (__create_dict_it($282,1)|0);
   $284 = $2;
   $285 = ((($284)) + 4|0);
   HEAP8[$285>>0]=$283&255;HEAP8[$285+1>>0]=($283>>8)&255;HEAP8[$285+2>>0]=($283>>16)&255;HEAP8[$285+3>>0]=$283>>24;
   break;
  }
  case 15:  {
   $286 = $1;
   $287 = ((($286)) + 4|0);
   $288 = HEAPU8[$287>>0]|(HEAPU8[$287+1>>0]<<8)|(HEAPU8[$287+2>>0]<<16)|(HEAPU8[$287+3>>0]<<24);
   $289 = HEAPU8[$288>>0]|(HEAPU8[$288+1>>0]<<8)|(HEAPU8[$288+2>>0]<<16)|(HEAPU8[$288+3>>0]<<24);
   $290 = (_mb_strdup($289,0)|0);
   $291 = $2;
   $292 = ((($291)) + 4|0);
   $293 = HEAPU8[$292>>0]|(HEAPU8[$292+1>>0]<<8)|(HEAPU8[$292+2>>0]<<16)|(HEAPU8[$292+3>>0]<<24);
   HEAP8[$293>>0]=$290&255;HEAP8[$293+1>>0]=($290>>8)&255;HEAP8[$293+2>>0]=($290>>16)&255;HEAP8[$293+3>>0]=$290>>24;
   $294 = $1;
   $295 = ((($294)) + 4|0);
   $296 = HEAPU8[$295>>0]|(HEAPU8[$295+1>>0]<<8)|(HEAPU8[$295+2>>0]<<16)|(HEAPU8[$295+3>>0]<<24);
   $297 = ((($296)) + 4|0);
   $298 = HEAPU8[$297>>0]|(HEAPU8[$297+1>>0]<<8)|(HEAPU8[$297+2>>0]<<16)|(HEAPU8[$297+3>>0]<<24);
   $299 = $2;
   $300 = ((($299)) + 4|0);
   $301 = HEAPU8[$300>>0]|(HEAPU8[$300+1>>0]<<8)|(HEAPU8[$300+2>>0]<<16)|(HEAPU8[$300+3>>0]<<24);
   $302 = ((($301)) + 4|0);
   HEAP8[$302>>0]=$298&255;HEAP8[$302+1>>0]=($298>>8)&255;HEAP8[$302+2>>0]=($298>>16)&255;HEAP8[$302+3>>0]=$298>>24;
   break;
  }
  case 16:  {
   $303 = $4;
   $304 = ($303<<24>>24)!=(0);
   if (!($304)) {
    $355 = $1;
    $356 = ((($355)) + 4|0);
    $357 = HEAPU8[$356>>0]|(HEAPU8[$356+1>>0]<<8)|(HEAPU8[$356+2>>0]<<16)|(HEAPU8[$356+3>>0]<<24);
    $358 = $2;
    $359 = ((($358)) + 4|0);
    HEAP8[$359>>0]=$357&255;HEAP8[$359+1>>0]=($357>>8)&255;HEAP8[$359+2>>0]=($357>>16)&255;HEAP8[$359+3>>0]=$357>>24;
    $360 = $1;
    $361 = ((($360)) + 4|0);
    $362 = HEAPU8[$361>>0]|(HEAPU8[$361+1>>0]<<8)|(HEAPU8[$361+2>>0]<<16)|(HEAPU8[$361+3>>0]<<24);
    $363 = $1;
    $364 = ((($363)) + 4|0);
    $365 = HEAPU8[$364>>0]|(HEAPU8[$364+1>>0]<<8)|(HEAPU8[$364+2>>0]<<16)|(HEAPU8[$364+3>>0]<<24);
    (__ref($362,$365)|0);
    break L7;
   }
   $305 = (_mb_malloc(45)|0);
   $306 = $2;
   $307 = ((($306)) + 4|0);
   HEAP8[$307>>0]=$305&255;HEAP8[$307+1>>0]=($305>>8)&255;HEAP8[$307+2>>0]=($305>>16)&255;HEAP8[$307+3>>0]=$305>>24;
   $308 = $0;
   $309 = $2;
   $310 = ((($309)) + 4|0);
   $311 = HEAPU8[$310>>0]|(HEAPU8[$310+1>>0]<<8)|(HEAPU8[$310+2>>0]<<16)|(HEAPU8[$310+3>>0]<<24);
   $312 = $1;
   $313 = ((($312)) + 4|0);
   $314 = HEAPU8[$313>>0]|(HEAPU8[$313+1>>0]<<8)|(HEAPU8[$313+2>>0]<<16)|(HEAPU8[$313+3>>0]<<24);
   $315 = ((($314)) + 17|0);
   $316 = HEAPU8[$315>>0]|(HEAPU8[$315+1>>0]<<8)|(HEAPU8[$315+2>>0]<<16)|(HEAPU8[$315+3>>0]<<24);
   $317 = (_mb_strdup($316,0)|0);
   __init_class($308,$311,$317);
   $318 = $1;
   $319 = ((($318)) + 4|0);
   $320 = HEAPU8[$319>>0]|(HEAPU8[$319+1>>0]<<8)|(HEAPU8[$319+2>>0]<<16)|(HEAPU8[$319+3>>0]<<24);
   $321 = ((($320)) + 21|0);
   $322 = HEAPU8[$321>>0]|(HEAPU8[$321+1>>0]<<8)|(HEAPU8[$321+2>>0]<<16)|(HEAPU8[$321+3>>0]<<24);
   $323 = $2;
   $324 = ((($323)) + 4|0);
   $325 = HEAPU8[$324>>0]|(HEAPU8[$324+1>>0]<<8)|(HEAPU8[$324+2>>0]<<16)|(HEAPU8[$324+3>>0]<<24);
   $326 = ((($325)) + 21|0);
   HEAP8[$326>>0]=$322&255;HEAP8[$326+1>>0]=($322>>8)&255;HEAP8[$326+2>>0]=($322>>16)&255;HEAP8[$326+3>>0]=$322>>24;
   $327 = $0;
   $328 = $2;
   $329 = ((($328)) + 4|0);
   $330 = HEAPU8[$329>>0]|(HEAPU8[$329+1>>0]<<8)|(HEAPU8[$329+2>>0]<<16)|(HEAPU8[$329+3>>0]<<24);
   $331 = ((($330)) + 29|0);
   $332 = HEAPU8[$331>>0]|(HEAPU8[$331+1>>0]<<8)|(HEAPU8[$331+2>>0]<<16)|(HEAPU8[$331+3>>0]<<24);
   (__push_scope_by_class($327,$332)|0);
   $333 = $1;
   $334 = ((($333)) + 4|0);
   $335 = HEAPU8[$334>>0]|(HEAPU8[$334+1>>0]<<8)|(HEAPU8[$334+2>>0]<<16)|(HEAPU8[$334+3>>0]<<24);
   $336 = $2;
   $337 = ((($336)) + 4|0);
   $338 = HEAPU8[$337>>0]|(HEAPU8[$337+1>>0]<<8)|(HEAPU8[$337+2>>0]<<16)|(HEAPU8[$337+3>>0]<<24);
   (__traverse_class($335,160,161,-1,0,$338,0)|0);
   $339 = $0;
   $340 = $2;
   $341 = ((($340)) + 4|0);
   $342 = HEAPU8[$341>>0]|(HEAPU8[$341+1>>0]<<8)|(HEAPU8[$341+2>>0]<<16)|(HEAPU8[$341+3>>0]<<24);
   $343 = (__search_class_hash_and_compare_functions($339,$342)|0);
   $344 = ($343|0)!=(0);
   if ($344) {
    ___assert_fail((5378|0),(4322|0),9903,(9362|0));
    // unreachable;
   } else {
    $345 = $1;
    $346 = ((($345)) + 4|0);
    $347 = HEAPU8[$346>>0]|(HEAPU8[$346+1>>0]<<8)|(HEAPU8[$346+2>>0]<<16)|(HEAPU8[$346+3>>0]<<24);
    $348 = ((($347)) + 41|0);
    $349 = HEAPU8[$348>>0]|(HEAPU8[$348+1>>0]<<8)|(HEAPU8[$348+2>>0]<<16)|(HEAPU8[$348+3>>0]<<24);
    $350 = $2;
    $351 = ((($350)) + 4|0);
    $352 = HEAPU8[$351>>0]|(HEAPU8[$351+1>>0]<<8)|(HEAPU8[$351+2>>0]<<16)|(HEAPU8[$351+3>>0]<<24);
    $353 = ((($352)) + 41|0);
    HEAP8[$353>>0]=$349&255;HEAP8[$353+1>>0]=($349>>8)&255;HEAP8[$353+2>>0]=($349>>16)&255;HEAP8[$353+3>>0]=$349>>24;
    $354 = $0;
    (__pop_scope($354,0)|0);
    break L7;
   }
   break;
  }
  case 17:  {
   $366 = $1;
   $367 = ((($366)) + 4|0);
   $368 = HEAPU8[$367>>0]|(HEAPU8[$367+1>>0]<<8)|(HEAPU8[$367+2>>0]<<16)|(HEAPU8[$367+3>>0]<<24);
   $369 = $1;
   $370 = ((($369)) + 4|0);
   $371 = HEAPU8[$370>>0]|(HEAPU8[$370+1>>0]<<8)|(HEAPU8[$370+2>>0]<<16)|(HEAPU8[$370+3>>0]<<24);
   $372 = ((($371)) + 53|0);
   $373 = HEAPU8[$372>>0]|(HEAPU8[$372+1>>0]<<8)|(HEAPU8[$372+2>>0]<<16)|(HEAPU8[$372+3>>0]<<24);
   $374 = $3;
   $375 = (__clone_routine($368,$373,$374)|0);
   $376 = $2;
   $377 = ((($376)) + 4|0);
   HEAP8[$377>>0]=$375&255;HEAP8[$377+1>>0]=($375>>8)&255;HEAP8[$377+2>>0]=($375>>16)&255;HEAP8[$377+3>>0]=$375>>24;
   break;
  }
  case 6: case 22: case 19: case 5: case 3: case 2: case 1: case 0:  {
   $378 = $2;
   $379 = ((($378)) + 4|0);
   $380 = $1;
   $381 = ((($380)) + 4|0);
   ;HEAP8[$379>>0]=HEAP8[$381>>0]|0;HEAP8[$379+1>>0]=HEAP8[$381+1>>0]|0;HEAP8[$379+2>>0]=HEAP8[$381+2>>0]|0;HEAP8[$379+3>>0]=HEAP8[$381+3>>0]|0;
   break;
  }
  default: {
   ___assert_fail((8990|0),(4322|0),9938,(9362|0));
   // unreachable;
  }
  }
 } while(0);
 $382 = $2;
 $383 = ((($382)) + 8|0);
 $384 = HEAP8[$383>>0]|0;
 $385 = $384 & -2;
 HEAP8[$383>>0] = $385;
 $386 = $2;
 $387 = ((($386)) + 9|0);
 HEAP8[$387>>0]=0&255;HEAP8[$387+1>>0]=(0>>8)&255;HEAP8[$387+2>>0]=(0>>16)&255;HEAP8[$387+3>>0]=0>>24;
 $388 = $2;
 $389 = ((($388)) + 13|0);
 HEAP8[$389>>0]=0&255;HEAP8[$389+1>>0]=0>>8;
 $390 = $2;
 $391 = ((($390)) + 15|0);
 HEAP8[$391>>0]=0&255;HEAP8[$391+1>>0]=0>>8;
 $392 = $result;
 $393 = (($392) + 1)|0;
 $result = $393;
 $394 = $result;
 STACKTOP = sp;return ($394|0);
}
function __clone_usertype_ref($src,$tgt) {
 $src = $src|0;
 $tgt = $tgt|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $cpy = 0, $or$cond = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $src;
 $1 = $tgt;
 $cpy = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 if (!($or$cond)) {
  ___assert_fail((9675|0),(4322|0),7071,(9686|0));
  // unreachable;
 }
 $6 = $1;
 dest=$6; stop=dest+17|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
 $7 = $1;
 HEAP8[$7>>0]=0&255;HEAP8[$7+1>>0]=(0>>8)&255;HEAP8[$7+2>>0]=(0>>16)&255;HEAP8[$7+3>>0]=0>>24;
 $8 = $0;
 $9 = ((($8)) + 25|0);
 $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
 $11 = ($10|0)!=(0|0);
 if (!($11)) {
  STACKTOP = sp;return;
 }
 $12 = $0;
 $13 = ((($12)) + 25|0);
 $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
 $15 = $0;
 $16 = ((($15)) + 13|0);
 $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
 $18 = $0;
 $19 = ((($18)) + 17|0);
 $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8)|(HEAPU8[$19+2>>0]<<16)|(HEAPU8[$19+3>>0]<<24);
 $21 = (FUNCTION_TABLE_iii[$14 & 255]($17,$20)|0);
 $cpy = $21;
 $22 = $cpy;
 $23 = ($22|0)!=(0|0);
 if (!($23)) {
  STACKTOP = sp;return;
 }
 $24 = $1;
 HEAP8[$24>>0]=7&255;HEAP8[$24+1>>0]=(7>>8)&255;HEAP8[$24+2>>0]=(7>>16)&255;HEAP8[$24+3>>0]=7>>24;
 $25 = $0;
 $26 = ((($25)) + 13|0);
 $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
 $28 = $cpy;
 $29 = $0;
 $30 = ((($29)) + 21|0);
 $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8)|(HEAPU8[$30+2>>0]<<16)|(HEAPU8[$30+3>>0]<<24);
 $32 = $0;
 $33 = ((($32)) + 25|0);
 $34 = HEAPU8[$33>>0]|(HEAPU8[$33+1>>0]<<8)|(HEAPU8[$33+2>>0]<<16)|(HEAPU8[$33+3>>0]<<24);
 $35 = $0;
 $36 = ((($35)) + 29|0);
 $37 = HEAPU8[$36>>0]|(HEAPU8[$36+1>>0]<<8)|(HEAPU8[$36+2>>0]<<16)|(HEAPU8[$36+3>>0]<<24);
 $38 = $0;
 $39 = ((($38)) + 33|0);
 $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8)|(HEAPU8[$39+2>>0]<<16)|(HEAPU8[$39+3>>0]<<24);
 $41 = $0;
 $42 = ((($41)) + 37|0);
 $43 = HEAPU8[$42>>0]|(HEAPU8[$42+1>>0]<<8)|(HEAPU8[$42+2>>0]<<16)|(HEAPU8[$42+3>>0]<<24);
 $44 = (__create_usertype_ref($27,$28,$31,$34,$37,$40,$43)|0);
 $45 = $1;
 $46 = ((($45)) + 4|0);
 HEAP8[$46>>0]=$44&255;HEAP8[$46+1>>0]=($44>>8)&255;HEAP8[$46+2>>0]=($44>>16)&255;HEAP8[$46+3>>0]=$44>>24;
 $47 = $0;
 $48 = ((($47)) + 41|0);
 $49 = HEAPU8[$48>>0]|(HEAPU8[$48+1>>0]<<8)|(HEAPU8[$48+2>>0]<<16)|(HEAPU8[$48+3>>0]<<24);
 $50 = $1;
 $51 = ((($50)) + 4|0);
 $52 = HEAPU8[$51>>0]|(HEAPU8[$51+1>>0]<<8)|(HEAPU8[$51+2>>0]<<16)|(HEAPU8[$51+3>>0]<<24);
 $53 = ((($52)) + 41|0);
 HEAP8[$53>>0]=$49&255;HEAP8[$53+1>>0]=($49>>8)&255;HEAP8[$53+2>>0]=($49>>16)&255;HEAP8[$53+3>>0]=$49>>24;
 $54 = $0;
 $55 = ((($54)) + 45|0);
 $56 = HEAPU8[$55>>0]|(HEAPU8[$55+1>>0]<<8)|(HEAPU8[$55+2>>0]<<16)|(HEAPU8[$55+3>>0]<<24);
 $57 = ($56|0)!=(0|0);
 if ($57) {
  $58 = (_mb_malloc(24)|0);
  $59 = $1;
  $60 = ((($59)) + 4|0);
  $61 = HEAPU8[$60>>0]|(HEAPU8[$60+1>>0]<<8)|(HEAPU8[$60+2>>0]<<16)|(HEAPU8[$60+3>>0]<<24);
  $62 = ((($61)) + 45|0);
  HEAP8[$62>>0]=$58&255;HEAP8[$62+1>>0]=($58>>8)&255;HEAP8[$62+2>>0]=($58>>16)&255;HEAP8[$62+3>>0]=$58>>24;
  $63 = $1;
  $64 = ((($63)) + 4|0);
  $65 = HEAPU8[$64>>0]|(HEAPU8[$64+1>>0]<<8)|(HEAPU8[$64+2>>0]<<16)|(HEAPU8[$64+3>>0]<<24);
  $66 = ((($65)) + 45|0);
  $67 = HEAPU8[$66>>0]|(HEAPU8[$66+1>>0]<<8)|(HEAPU8[$66+2>>0]<<16)|(HEAPU8[$66+3>>0]<<24);
  $68 = $0;
  $69 = ((($68)) + 45|0);
  $70 = HEAPU8[$69>>0]|(HEAPU8[$69+1>>0]<<8)|(HEAPU8[$69+2>>0]<<16)|(HEAPU8[$69+3>>0]<<24);
  dest=$67; src=$70; stop=dest+24|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
 }
 $71 = $0;
 $72 = ((($71)) + 49|0);
 $73 = HEAPU8[$72>>0]|(HEAPU8[$72+1>>0]<<8)|(HEAPU8[$72+2>>0]<<16)|(HEAPU8[$72+3>>0]<<24);
 $74 = $1;
 $75 = ((($74)) + 4|0);
 $76 = HEAPU8[$75>>0]|(HEAPU8[$75+1>>0]<<8)|(HEAPU8[$75+2>>0]<<16)|(HEAPU8[$75+3>>0]<<24);
 $77 = ((($76)) + 49|0);
 HEAP8[$77>>0]=$73&255;HEAP8[$77+1>>0]=($73>>8)&255;HEAP8[$77+2>>0]=($73>>16)&255;HEAP8[$77+3>>0]=$73>>24;
 $78 = $0;
 $79 = ((($78)) + 53|0);
 $80 = HEAPU8[$79>>0]|(HEAPU8[$79+1>>0]<<8)|(HEAPU8[$79+2>>0]<<16)|(HEAPU8[$79+3>>0]<<24);
 $81 = $1;
 $82 = ((($81)) + 4|0);
 $83 = HEAPU8[$82>>0]|(HEAPU8[$82+1>>0]<<8)|(HEAPU8[$82+2>>0]<<16)|(HEAPU8[$82+3>>0]<<24);
 $84 = ((($83)) + 53|0);
 HEAP8[$84>>0]=$80&255;HEAP8[$84+1>>0]=($80>>8)&255;HEAP8[$84+2>>0]=($80>>16)&255;HEAP8[$84+3>>0]=$80>>24;
 $85 = $1;
 $86 = ((($85)) + 4|0);
 $87 = HEAPU8[$86>>0]|(HEAPU8[$86+1>>0]<<8)|(HEAPU8[$86+2>>0]<<16)|(HEAPU8[$86+3>>0]<<24);
 $88 = $1;
 $89 = ((($88)) + 4|0);
 $90 = HEAPU8[$89>>0]|(HEAPU8[$89+1>>0]<<8)|(HEAPU8[$89+2>>0]<<16)|(HEAPU8[$89+3>>0]<<24);
 (__ref($87,$90)|0);
 STACKTOP = sp;return;
}
function __clone_array($s,$arr) {
 $s = $s|0;
 $arr = $arr|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $index = 0, $or$cond = 0, $result = 0, $type = 0, $val = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $val = sp + 20|0;
 $type = sp;
 $0 = $s;
 $1 = $arr;
 $result = 0;
 $index = 0;
 HEAP32[$type>>2] = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 if (!($or$cond)) {
  ___assert_fail((9653|0),(4322|0),7211,(9662|0));
  // unreachable;
 }
 $6 = $0;
 $7 = $1;
 $8 = ((($7)) + 17|0);
 $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
 $10 = (_mb_strdup($9,0)|0);
 $11 = $1;
 $12 = ((($11)) + 21|0);
 $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
 $14 = (__create_array($6,$10,$13)|0);
 $result = $14;
 $15 = $1;
 $16 = ((($15)) + 29|0);
 $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
 $18 = $result;
 $19 = ((($18)) + 29|0);
 HEAP8[$19>>0]=$17&255;HEAP8[$19+1>>0]=($17>>8)&255;HEAP8[$19+2>>0]=($17>>16)&255;HEAP8[$19+3>>0]=$17>>24;
 $20 = $1;
 $21 = ((($20)) + 33|0);
 $22 = HEAP8[$21>>0]|0;
 $23 = $result;
 $24 = ((($23)) + 33|0);
 HEAP8[$24>>0] = $22;
 $25 = $result;
 $26 = ((($25)) + 34|0);
 $27 = $1;
 $28 = ((($27)) + 34|0);
 dest=$26; src=$28; stop=dest+16|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
 $29 = $result;
 __init_array($29);
 $index = 0;
 while(1) {
  $30 = $index;
  $31 = $1;
  $32 = ((($31)) + 29|0);
  $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
  $34 = ($30>>>0)<($33>>>0);
  if (!($34)) {
   break;
  }
  $35 = $0;
  $36 = $1;
  $37 = $index;
  (__get_array_elem($35,$36,$37,$val,$type)|0);
  $38 = $0;
  $39 = $result;
  $40 = $index;
  (__set_array_elem($38,0,$39,$40,$val,$type)|0);
  $41 = $index;
  $42 = (($41) + 1)|0;
  $index = $42;
 }
 $43 = $result;
 STACKTOP = sp;return ($43|0);
}
function __clone_to_list($data,$extra,$coll) {
 $data = $data|0;
 $extra = $extra|0;
 $coll = $coll|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $8 = 0, $9 = 0, $obj = 0, $or$cond = 0, $tgt = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $data;
 $1 = $extra;
 $2 = $coll;
 $obj = 0;
 $tgt = 0;
 $3 = $0;
 $4 = ($3|0)!=(0|0);
 $5 = $2;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if (!($or$cond)) {
  ___assert_fail((9515|0),(4322|0),8208,(9528|0));
  // unreachable;
 }
 $7 = $2;
 __fill_ranged($7);
 $8 = (__create_object()|0);
 $tgt = $8;
 $9 = $0;
 $obj = $9;
 $10 = $2;
 $11 = ((($10)) + 13|0);
 $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
 $13 = $obj;
 $14 = $tgt;
 (__clone_object($12,$13,$14,0,0)|0);
 $15 = $2;
 $16 = $tgt;
 (__push_list($15,0,$16)|0);
 $17 = $tgt;
 $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
 switch ($18|0) {
 case 7:  {
  $19 = $tgt;
  $20 = ((($19)) + 4|0);
  $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
  $22 = $tgt;
  $23 = ((($22)) + 4|0);
  $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
  (__ref($21,$24)|0);
  STACKTOP = sp;return 1;
  break;
 }
 case 10:  {
  $25 = $tgt;
  $26 = ((($25)) + 8|0);
  $27 = HEAP8[$26>>0]|0;
  $28 = $27 & 1;
  $29 = ($28<<24>>24)!=(0);
  if ($29) {
   STACKTOP = sp;return 1;
  }
  $30 = $tgt;
  $31 = ((($30)) + 4|0);
  $32 = HEAPU8[$31>>0]|(HEAPU8[$31+1>>0]<<8)|(HEAPU8[$31+2>>0]<<16)|(HEAPU8[$31+3>>0]<<24);
  $33 = $tgt;
  $34 = ((($33)) + 4|0);
  $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
  (__ref($32,$35)|0);
  STACKTOP = sp;return 1;
  break;
 }
 case 11:  {
  $36 = $tgt;
  $37 = ((($36)) + 4|0);
  $38 = HEAPU8[$37>>0]|(HEAPU8[$37+1>>0]<<8)|(HEAPU8[$37+2>>0]<<16)|(HEAPU8[$37+3>>0]<<24);
  $39 = $tgt;
  $40 = ((($39)) + 4|0);
  $41 = HEAPU8[$40>>0]|(HEAPU8[$40+1>>0]<<8)|(HEAPU8[$40+2>>0]<<16)|(HEAPU8[$40+3>>0]<<24);
  (__ref($38,$41)|0);
  STACKTOP = sp;return 1;
  break;
 }
 case 13:  {
  $42 = $tgt;
  $43 = ((($42)) + 4|0);
  $44 = HEAPU8[$43>>0]|(HEAPU8[$43+1>>0]<<8)|(HEAPU8[$43+2>>0]<<16)|(HEAPU8[$43+3>>0]<<24);
  $45 = $tgt;
  $46 = ((($45)) + 4|0);
  $47 = HEAPU8[$46>>0]|(HEAPU8[$46+1>>0]<<8)|(HEAPU8[$46+2>>0]<<16)|(HEAPU8[$46+3>>0]<<24);
  (__ref($44,$47)|0);
  STACKTOP = sp;return 1;
  break;
 }
 case 16:  {
  $48 = $tgt;
  $49 = ((($48)) + 4|0);
  $50 = HEAPU8[$49>>0]|(HEAPU8[$49+1>>0]<<8)|(HEAPU8[$49+2>>0]<<16)|(HEAPU8[$49+3>>0]<<24);
  $51 = $tgt;
  $52 = ((($51)) + 4|0);
  $53 = HEAPU8[$52>>0]|(HEAPU8[$52+1>>0]<<8)|(HEAPU8[$52+2>>0]<<16)|(HEAPU8[$52+3>>0]<<24);
  (__ref($50,$53)|0);
  STACKTOP = sp;return 1;
  break;
 }
 case 17:  {
  $54 = $tgt;
  $55 = ((($54)) + 8|0);
  $56 = HEAP8[$55>>0]|0;
  $57 = $56 & 1;
  $58 = ($57<<24>>24)!=(0);
  if ($58) {
   STACKTOP = sp;return 1;
  }
  $59 = $tgt;
  $60 = ((($59)) + 4|0);
  $61 = HEAPU8[$60>>0]|(HEAPU8[$60+1>>0]<<8)|(HEAPU8[$60+2>>0]<<16)|(HEAPU8[$60+3>>0]<<24);
  $62 = ((($61)) + 58|0);
  $63 = HEAPU8[$62>>0]|(HEAPU8[$62+1>>0]<<8)|(HEAPU8[$62+2>>0]<<16)|(HEAPU8[$62+3>>0]<<24);
  $64 = ($63|0)==(2);
  if (!($64)) {
   STACKTOP = sp;return 1;
  }
  $65 = $tgt;
  $66 = ((($65)) + 4|0);
  $67 = HEAPU8[$66>>0]|(HEAPU8[$66+1>>0]<<8)|(HEAPU8[$66+2>>0]<<16)|(HEAPU8[$66+3>>0]<<24);
  $68 = $tgt;
  $69 = ((($68)) + 4|0);
  $70 = HEAPU8[$69>>0]|(HEAPU8[$69+1>>0]<<8)|(HEAPU8[$69+2>>0]<<16)|(HEAPU8[$69+3>>0]<<24);
  (__ref($67,$70)|0);
  STACKTOP = sp;return 1;
  break;
 }
 default: {
  STACKTOP = sp;return 1;
 }
 }
 return (0)|0;
}
function __clone_to_dict($data,$extra,$coll) {
 $data = $data|0;
 $extra = $extra|0;
 $coll = $coll|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $kobj = 0, $ktgt = 0;
 var $or$cond = 0, $or$cond3 = 0, $or$cond5 = 0, $vobj = 0, $vtgt = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $data;
 $1 = $extra;
 $2 = $coll;
 $kobj = 0;
 $ktgt = 0;
 $vobj = 0;
 $vtgt = 0;
 $3 = $0;
 $4 = ($3|0)!=(0|0);
 $5 = $1;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if ($or$cond) {
 }
 $7 = $0;
 $8 = ($7|0)!=(0|0);
 $9 = $1;
 $10 = ($9|0)!=(0|0);
 $or$cond3 = $8 & $10;
 $11 = $2;
 $12 = ($11|0)!=(0|0);
 $or$cond5 = $or$cond3 & $12;
 if (!($or$cond5)) {
  ___assert_fail((9478|0),(4322|0),8228,(9500|0));
  // unreachable;
 }
 $13 = (__create_object()|0);
 $ktgt = $13;
 $14 = $1;
 $kobj = $14;
 $15 = $2;
 $16 = ((($15)) + 13|0);
 $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
 $18 = $kobj;
 $19 = $ktgt;
 (__clone_object($17,$18,$19,0,0)|0);
 $20 = (__create_object()|0);
 $vtgt = $20;
 $21 = $0;
 $vobj = $21;
 $22 = $2;
 $23 = ((($22)) + 13|0);
 $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
 $25 = $vobj;
 $26 = $vtgt;
 (__clone_object($24,$25,$26,0,0)|0);
 $27 = $2;
 $28 = $ktgt;
 $29 = $vtgt;
 (__set_dict($27,0,0,$28,$29)|0);
 $30 = $ktgt;
 $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8)|(HEAPU8[$30+2>>0]<<16)|(HEAPU8[$30+3>>0]<<24);
 switch ($31|0) {
 case 7:  {
  $32 = $ktgt;
  $33 = ((($32)) + 4|0);
  $34 = HEAPU8[$33>>0]|(HEAPU8[$33+1>>0]<<8)|(HEAPU8[$33+2>>0]<<16)|(HEAPU8[$33+3>>0]<<24);
  $35 = $ktgt;
  $36 = ((($35)) + 4|0);
  $37 = HEAPU8[$36>>0]|(HEAPU8[$36+1>>0]<<8)|(HEAPU8[$36+2>>0]<<16)|(HEAPU8[$36+3>>0]<<24);
  (__ref($34,$37)|0);
  break;
 }
 case 10:  {
  $38 = $ktgt;
  $39 = ((($38)) + 8|0);
  $40 = HEAP8[$39>>0]|0;
  $41 = $40 & 1;
  $42 = ($41<<24>>24)!=(0);
  if (!($42)) {
   $43 = $ktgt;
   $44 = ((($43)) + 4|0);
   $45 = HEAPU8[$44>>0]|(HEAPU8[$44+1>>0]<<8)|(HEAPU8[$44+2>>0]<<16)|(HEAPU8[$44+3>>0]<<24);
   $46 = $ktgt;
   $47 = ((($46)) + 4|0);
   $48 = HEAPU8[$47>>0]|(HEAPU8[$47+1>>0]<<8)|(HEAPU8[$47+2>>0]<<16)|(HEAPU8[$47+3>>0]<<24);
   (__ref($45,$48)|0);
  }
  break;
 }
 case 11:  {
  $49 = $ktgt;
  $50 = ((($49)) + 4|0);
  $51 = HEAPU8[$50>>0]|(HEAPU8[$50+1>>0]<<8)|(HEAPU8[$50+2>>0]<<16)|(HEAPU8[$50+3>>0]<<24);
  $52 = $ktgt;
  $53 = ((($52)) + 4|0);
  $54 = HEAPU8[$53>>0]|(HEAPU8[$53+1>>0]<<8)|(HEAPU8[$53+2>>0]<<16)|(HEAPU8[$53+3>>0]<<24);
  (__ref($51,$54)|0);
  break;
 }
 case 13:  {
  $55 = $ktgt;
  $56 = ((($55)) + 4|0);
  $57 = HEAPU8[$56>>0]|(HEAPU8[$56+1>>0]<<8)|(HEAPU8[$56+2>>0]<<16)|(HEAPU8[$56+3>>0]<<24);
  $58 = $ktgt;
  $59 = ((($58)) + 4|0);
  $60 = HEAPU8[$59>>0]|(HEAPU8[$59+1>>0]<<8)|(HEAPU8[$59+2>>0]<<16)|(HEAPU8[$59+3>>0]<<24);
  (__ref($57,$60)|0);
  break;
 }
 case 16:  {
  $61 = $ktgt;
  $62 = ((($61)) + 4|0);
  $63 = HEAPU8[$62>>0]|(HEAPU8[$62+1>>0]<<8)|(HEAPU8[$62+2>>0]<<16)|(HEAPU8[$62+3>>0]<<24);
  $64 = $ktgt;
  $65 = ((($64)) + 4|0);
  $66 = HEAPU8[$65>>0]|(HEAPU8[$65+1>>0]<<8)|(HEAPU8[$65+2>>0]<<16)|(HEAPU8[$65+3>>0]<<24);
  (__ref($63,$66)|0);
  break;
 }
 case 17:  {
  $67 = $ktgt;
  $68 = ((($67)) + 8|0);
  $69 = HEAP8[$68>>0]|0;
  $70 = $69 & 1;
  $71 = ($70<<24>>24)!=(0);
  if (!($71)) {
   $72 = $ktgt;
   $73 = ((($72)) + 4|0);
   $74 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
   $75 = ((($74)) + 58|0);
   $76 = HEAPU8[$75>>0]|(HEAPU8[$75+1>>0]<<8)|(HEAPU8[$75+2>>0]<<16)|(HEAPU8[$75+3>>0]<<24);
   $77 = ($76|0)==(2);
   if ($77) {
    $78 = $ktgt;
    $79 = ((($78)) + 4|0);
    $80 = HEAPU8[$79>>0]|(HEAPU8[$79+1>>0]<<8)|(HEAPU8[$79+2>>0]<<16)|(HEAPU8[$79+3>>0]<<24);
    $81 = $ktgt;
    $82 = ((($81)) + 4|0);
    $83 = HEAPU8[$82>>0]|(HEAPU8[$82+1>>0]<<8)|(HEAPU8[$82+2>>0]<<16)|(HEAPU8[$82+3>>0]<<24);
    (__ref($80,$83)|0);
   }
  }
  break;
 }
 default: {
 }
 }
 $84 = $vtgt;
 $85 = HEAPU8[$84>>0]|(HEAPU8[$84+1>>0]<<8)|(HEAPU8[$84+2>>0]<<16)|(HEAPU8[$84+3>>0]<<24);
 switch ($85|0) {
 case 7:  {
  $86 = $vtgt;
  $87 = ((($86)) + 4|0);
  $88 = HEAPU8[$87>>0]|(HEAPU8[$87+1>>0]<<8)|(HEAPU8[$87+2>>0]<<16)|(HEAPU8[$87+3>>0]<<24);
  $89 = $vtgt;
  $90 = ((($89)) + 4|0);
  $91 = HEAPU8[$90>>0]|(HEAPU8[$90+1>>0]<<8)|(HEAPU8[$90+2>>0]<<16)|(HEAPU8[$90+3>>0]<<24);
  (__ref($88,$91)|0);
  STACKTOP = sp;return 1;
  break;
 }
 case 10:  {
  $92 = $vtgt;
  $93 = ((($92)) + 8|0);
  $94 = HEAP8[$93>>0]|0;
  $95 = $94 & 1;
  $96 = ($95<<24>>24)!=(0);
  if ($96) {
   STACKTOP = sp;return 1;
  }
  $97 = $vtgt;
  $98 = ((($97)) + 4|0);
  $99 = HEAPU8[$98>>0]|(HEAPU8[$98+1>>0]<<8)|(HEAPU8[$98+2>>0]<<16)|(HEAPU8[$98+3>>0]<<24);
  $100 = $vtgt;
  $101 = ((($100)) + 4|0);
  $102 = HEAPU8[$101>>0]|(HEAPU8[$101+1>>0]<<8)|(HEAPU8[$101+2>>0]<<16)|(HEAPU8[$101+3>>0]<<24);
  (__ref($99,$102)|0);
  STACKTOP = sp;return 1;
  break;
 }
 case 11:  {
  $103 = $vtgt;
  $104 = ((($103)) + 4|0);
  $105 = HEAPU8[$104>>0]|(HEAPU8[$104+1>>0]<<8)|(HEAPU8[$104+2>>0]<<16)|(HEAPU8[$104+3>>0]<<24);
  $106 = $vtgt;
  $107 = ((($106)) + 4|0);
  $108 = HEAPU8[$107>>0]|(HEAPU8[$107+1>>0]<<8)|(HEAPU8[$107+2>>0]<<16)|(HEAPU8[$107+3>>0]<<24);
  (__ref($105,$108)|0);
  STACKTOP = sp;return 1;
  break;
 }
 case 13:  {
  $109 = $vtgt;
  $110 = ((($109)) + 4|0);
  $111 = HEAPU8[$110>>0]|(HEAPU8[$110+1>>0]<<8)|(HEAPU8[$110+2>>0]<<16)|(HEAPU8[$110+3>>0]<<24);
  $112 = $vtgt;
  $113 = ((($112)) + 4|0);
  $114 = HEAPU8[$113>>0]|(HEAPU8[$113+1>>0]<<8)|(HEAPU8[$113+2>>0]<<16)|(HEAPU8[$113+3>>0]<<24);
  (__ref($111,$114)|0);
  STACKTOP = sp;return 1;
  break;
 }
 case 16:  {
  $115 = $vtgt;
  $116 = ((($115)) + 4|0);
  $117 = HEAPU8[$116>>0]|(HEAPU8[$116+1>>0]<<8)|(HEAPU8[$116+2>>0]<<16)|(HEAPU8[$116+3>>0]<<24);
  $118 = $vtgt;
  $119 = ((($118)) + 4|0);
  $120 = HEAPU8[$119>>0]|(HEAPU8[$119+1>>0]<<8)|(HEAPU8[$119+2>>0]<<16)|(HEAPU8[$119+3>>0]<<24);
  (__ref($117,$120)|0);
  STACKTOP = sp;return 1;
  break;
 }
 case 17:  {
  $121 = $vtgt;
  $122 = ((($121)) + 8|0);
  $123 = HEAP8[$122>>0]|0;
  $124 = $123 & 1;
  $125 = ($124<<24>>24)!=(0);
  if ($125) {
   STACKTOP = sp;return 1;
  }
  $126 = $vtgt;
  $127 = ((($126)) + 4|0);
  $128 = HEAPU8[$127>>0]|(HEAPU8[$127+1>>0]<<8)|(HEAPU8[$127+2>>0]<<16)|(HEAPU8[$127+3>>0]<<24);
  $129 = ((($128)) + 58|0);
  $130 = HEAPU8[$129>>0]|(HEAPU8[$129+1>>0]<<8)|(HEAPU8[$129+2>>0]<<16)|(HEAPU8[$129+3>>0]<<24);
  $131 = ($130|0)==(2);
  if (!($131)) {
   STACKTOP = sp;return 1;
  }
  $132 = $vtgt;
  $133 = ((($132)) + 4|0);
  $134 = HEAPU8[$133>>0]|(HEAPU8[$133+1>>0]<<8)|(HEAPU8[$133+2>>0]<<16)|(HEAPU8[$133+3>>0]<<24);
  $135 = $vtgt;
  $136 = ((($135)) + 4|0);
  $137 = HEAPU8[$136>>0]|(HEAPU8[$136+1>>0]<<8)|(HEAPU8[$136+2>>0]<<16)|(HEAPU8[$136+3>>0]<<24);
  (__ref($134,$137)|0);
  STACKTOP = sp;return 1;
  break;
 }
 default: {
  STACKTOP = sp;return 1;
 }
 }
 return (0)|0;
}
function __clone_clsss_field($data,$extra,$n) {
 $data = $data|0;
 $extra = $extra|0;
 $n = $n|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $arr = 0, $instance = 0, $obj = 0, $or$cond = 0, $result = 0, $ret = 0, $routine = 0, $sub = 0, $var = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $data;
 $1 = $extra;
 $2 = $n;
 $result = 0;
 $obj = 0;
 $arr = 0;
 $var = 0;
 $sub = 0;
 $3 = $2;
 $instance = $3;
 $ret = 0;
 $4 = $0;
 $5 = ($4|0)!=(0|0);
 $6 = $2;
 $7 = ($6|0)!=(0|0);
 $or$cond = $5 & $7;
 if (!($or$cond)) {
  ___assert_fail((9449|0),(4322|0),8466,(9459|0));
  // unreachable;
 }
 $8 = $0;
 $obj = $8;
 $9 = $obj;
 $10 = (__is_internal_object($9)|0);
 $11 = ($10<<24>>24)!=(0);
 if ($11) {
  $130 = $result;
  STACKTOP = sp;return ($130|0);
 }
 $12 = $obj;
 $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
 switch ($13|0) {
 case 9:  {
  $14 = $obj;
  $15 = ((($14)) + 4|0);
  $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
  $var = $16;
  $17 = $var;
  $18 = ((($17)) + 8|0);
  $19 = HEAP8[$18>>0]|0;
  $20 = ($19&255) >>> 2;
  $21 = $20 & 1;
  $22 = ($21<<24>>24)!=(0);
  if ($22) {
   $130 = $result;
   STACKTOP = sp;return ($130|0);
  }
  $23 = $instance;
  $24 = ((($23)) + 29|0);
  $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
  $26 = ((($25)) + 8|0);
  $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
  $28 = $var;
  $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
  $30 = (__ht_find($27,$29)|0);
  $31 = ($30|0)!=(0|0);
  if ($31) {
   $130 = $result;
   STACKTOP = sp;return ($130|0);
  }
  $32 = $var;
  $33 = $instance;
  $34 = ((($33)) + 29|0);
  $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
  $36 = (__duplicate_parameter($32,0,$35)|0);
  $ret = $36;
  $37 = $instance;
  $38 = ((($37)) + 13|0);
  $39 = HEAPU8[$38>>0]|(HEAPU8[$38+1>>0]<<8)|(HEAPU8[$38+2>>0]<<16)|(HEAPU8[$38+3>>0]<<24);
  $40 = $obj;
  $41 = $ret;
  $42 = ((($41)) + 4|0);
  $43 = HEAPU8[$42>>0]|(HEAPU8[$42+1>>0]<<8)|(HEAPU8[$42+2>>0]<<16)|(HEAPU8[$42+3>>0]<<24);
  $44 = ((($43)) + 4|0);
  $45 = HEAPU8[$44>>0]|(HEAPU8[$44+1>>0]<<8)|(HEAPU8[$44+2>>0]<<16)|(HEAPU8[$44+3>>0]<<24);
  $46 = $var;
  $47 = ((($46)) + 4|0);
  $48 = HEAPU8[$47>>0]|(HEAPU8[$47+1>>0]<<8)|(HEAPU8[$47+2>>0]<<16)|(HEAPU8[$47+3>>0]<<24);
  $49 = HEAPU8[$48>>0]|(HEAPU8[$48+1>>0]<<8)|(HEAPU8[$48+2>>0]<<16)|(HEAPU8[$48+3>>0]<<24);
  $50 = ($49|0)!=(16);
  $51 = $50&1;
  $52 = $51&255;
  (__clone_object($39,$40,$45,0,$52)|0);
  $53 = $ret;
  $54 = ((($53)) + 9|0);
  HEAP8[$54>>0]=-1&255;HEAP8[$54+1>>0]=(-1>>8)&255;HEAP8[$54+2>>0]=(-1>>16)&255;HEAP8[$54+3>>0]=-1>>24;
  $55 = $ret;
  $56 = ((($55)) + 15|0);
  HEAP8[$56>>0]=-1&255;HEAP8[$56+1>>0]=-1>>8;
  $57 = $ret;
  $58 = ((($57)) + 13|0);
  HEAP8[$58>>0]=-1&255;HEAP8[$58+1>>0]=-1>>8;
  $130 = $result;
  STACKTOP = sp;return ($130|0);
  break;
 }
 case 10:  {
  $59 = $obj;
  $60 = ((($59)) + 4|0);
  $61 = HEAPU8[$60>>0]|(HEAPU8[$60+1>>0]<<8)|(HEAPU8[$60+2>>0]<<16)|(HEAPU8[$60+3>>0]<<24);
  $arr = $61;
  $62 = $instance;
  $63 = ((($62)) + 29|0);
  $64 = HEAPU8[$63>>0]|(HEAPU8[$63+1>>0]<<8)|(HEAPU8[$63+2>>0]<<16)|(HEAPU8[$63+3>>0]<<24);
  $65 = ((($64)) + 8|0);
  $66 = HEAPU8[$65>>0]|(HEAPU8[$65+1>>0]<<8)|(HEAPU8[$65+2>>0]<<16)|(HEAPU8[$65+3>>0]<<24);
  $67 = $arr;
  $68 = ((($67)) + 17|0);
  $69 = HEAPU8[$68>>0]|(HEAPU8[$68+1>>0]<<8)|(HEAPU8[$68+2>>0]<<16)|(HEAPU8[$68+3>>0]<<24);
  $70 = (__ht_find($66,$69)|0);
  $71 = ($70|0)!=(0|0);
  if ($71) {
   $130 = $result;
   STACKTOP = sp;return ($130|0);
  }
  $72 = (__create_object()|0);
  $ret = $72;
  $73 = $ret;
  HEAP8[$73>>0]=10&255;HEAP8[$73+1>>0]=(10>>8)&255;HEAP8[$73+2>>0]=(10>>16)&255;HEAP8[$73+3>>0]=10>>24;
  $74 = $ret;
  $75 = ((($74)) + 8|0);
  $76 = HEAP8[$75>>0]|0;
  $77 = $76 & -2;
  HEAP8[$75>>0] = $77;
  $78 = $instance;
  $79 = ((($78)) + 13|0);
  $80 = HEAPU8[$79>>0]|(HEAPU8[$79+1>>0]<<8)|(HEAPU8[$79+2>>0]<<16)|(HEAPU8[$79+3>>0]<<24);
  $81 = $obj;
  $82 = $ret;
  (__clone_object($80,$81,$82,0,0)|0);
  $83 = $instance;
  $84 = ((($83)) + 29|0);
  $85 = HEAPU8[$84>>0]|(HEAPU8[$84+1>>0]<<8)|(HEAPU8[$84+2>>0]<<16)|(HEAPU8[$84+3>>0]<<24);
  $86 = ((($85)) + 8|0);
  $87 = HEAPU8[$86>>0]|(HEAPU8[$86+1>>0]<<8)|(HEAPU8[$86+2>>0]<<16)|(HEAPU8[$86+3>>0]<<24);
  $88 = $ret;
  $89 = ((($88)) + 4|0);
  $90 = HEAPU8[$89>>0]|(HEAPU8[$89+1>>0]<<8)|(HEAPU8[$89+2>>0]<<16)|(HEAPU8[$89+3>>0]<<24);
  $91 = ((($90)) + 17|0);
  $92 = HEAPU8[$91>>0]|(HEAPU8[$91+1>>0]<<8)|(HEAPU8[$91+2>>0]<<16)|(HEAPU8[$91+3>>0]<<24);
  $93 = $ret;
  (__ht_set_or_insert($87,$92,$93)|0);
  $130 = $result;
  STACKTOP = sp;return ($130|0);
  break;
 }
 case 17:  {
  $94 = $obj;
  $95 = ((($94)) + 4|0);
  $96 = HEAPU8[$95>>0]|(HEAPU8[$95+1>>0]<<8)|(HEAPU8[$95+2>>0]<<16)|(HEAPU8[$95+3>>0]<<24);
  $sub = $96;
  $97 = $instance;
  $98 = ((($97)) + 29|0);
  $99 = HEAPU8[$98>>0]|(HEAPU8[$98+1>>0]<<8)|(HEAPU8[$98+2>>0]<<16)|(HEAPU8[$98+3>>0]<<24);
  $100 = ((($99)) + 8|0);
  $101 = HEAPU8[$100>>0]|(HEAPU8[$100+1>>0]<<8)|(HEAPU8[$100+2>>0]<<16)|(HEAPU8[$100+3>>0]<<24);
  $102 = $sub;
  $103 = ((($102)) + 45|0);
  $104 = HEAPU8[$103>>0]|(HEAPU8[$103+1>>0]<<8)|(HEAPU8[$103+2>>0]<<16)|(HEAPU8[$103+3>>0]<<24);
  $105 = (__ht_find($101,$104)|0);
  $106 = ($105|0)!=(0|0);
  if ($106) {
   $130 = $result;
   STACKTOP = sp;return ($130|0);
  }
  $107 = $sub;
  $108 = $instance;
  $109 = (__clone_routine($107,$108,0)|0);
  $routine = $109;
  $110 = (__create_object()|0);
  $ret = $110;
  $111 = $ret;
  HEAP8[$111>>0]=17&255;HEAP8[$111+1>>0]=(17>>8)&255;HEAP8[$111+2>>0]=(17>>16)&255;HEAP8[$111+3>>0]=17>>24;
  $112 = $routine;
  $113 = $ret;
  $114 = ((($113)) + 4|0);
  HEAP8[$114>>0]=$112&255;HEAP8[$114+1>>0]=($112>>8)&255;HEAP8[$114+2>>0]=($112>>16)&255;HEAP8[$114+3>>0]=$112>>24;
  $115 = $ret;
  $116 = ((($115)) + 8|0);
  $117 = HEAP8[$116>>0]|0;
  $118 = $117 & -2;
  HEAP8[$116>>0] = $118;
  $119 = $instance;
  $120 = ((($119)) + 29|0);
  $121 = HEAPU8[$120>>0]|(HEAPU8[$120+1>>0]<<8)|(HEAPU8[$120+2>>0]<<16)|(HEAPU8[$120+3>>0]<<24);
  $122 = ((($121)) + 8|0);
  $123 = HEAPU8[$122>>0]|(HEAPU8[$122+1>>0]<<8)|(HEAPU8[$122+2>>0]<<16)|(HEAPU8[$122+3>>0]<<24);
  $124 = $obj;
  $125 = ((($124)) + 4|0);
  $126 = HEAPU8[$125>>0]|(HEAPU8[$125+1>>0]<<8)|(HEAPU8[$125+2>>0]<<16)|(HEAPU8[$125+3>>0]<<24);
  $127 = ((($126)) + 45|0);
  $128 = HEAPU8[$127>>0]|(HEAPU8[$127+1>>0]<<8)|(HEAPU8[$127+2>>0]<<16)|(HEAPU8[$127+3>>0]<<24);
  $129 = $ret;
  (__ht_set_or_insert($123,$128,$129)|0);
  $130 = $result;
  STACKTOP = sp;return ($130|0);
  break;
 }
 default: {
  $130 = $result;
  STACKTOP = sp;return ($130|0);
 }
 }
 return (0)|0;
}
function __clone_class_meta_link($meta,$n,$ret) {
 $meta = $meta|0;
 $n = $n|0;
 $ret = $ret|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $instance = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $meta;
 $1 = $n;
 $2 = $ret;
 $3 = $1;
 $instance = $3;
 $4 = $0;
 $5 = ($4|0)!=(0|0);
 $6 = $1;
 $7 = ($6|0)!=(0|0);
 $or$cond = $5 & $7;
 if ($or$cond) {
  $8 = $instance;
  $9 = ((($8)) + 13|0);
  $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
  $11 = $instance;
  $12 = $0;
  (__link_meta_class($10,$11,$12)|0);
  STACKTOP = sp;return 1;
 } else {
  ___assert_fail((9416|0),(4322|0),8527,(9426|0));
  // unreachable;
 }
 return (0)|0;
}
function __clone_routine($sub,$c,$toupval) {
 $sub = $sub|0;
 $c = $c|0;
 $toupval = $toupval|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $instance = 0, $result = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $sub;
 $1 = $c;
 $2 = $toupval;
 $result = 0;
 $3 = $1;
 $instance = $3;
 $4 = $0;
 $5 = ($4|0)!=(0|0);
 if (!($5)) {
  ___assert_fail((9397|0),(4322|0),8878,(9401|0));
  // unreachable;
 }
 $6 = $2;
 $7 = $6&255;
 $8 = ($7|0)!=(0);
 if ($8) {
  label = 5;
 } else {
  $9 = $0;
  $10 = ((($9)) + 58|0);
  $11 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
  $12 = ($11|0)==(2);
  if ($12) {
   label = 5;
  }
 }
 if ((label|0) == 5) {
  $13 = $0;
  $result = $13;
 }
 $14 = $result;
 $15 = ($14|0)!=(0|0);
 if ($15) {
  $43 = $result;
  STACKTOP = sp;return ($43|0);
 }
 $16 = (_mb_malloc(62)|0);
 $result = $16;
 $17 = $result;
 dest=$17; stop=dest+62|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
 $18 = $0;
 $19 = ((($18)) + 45|0);
 $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8)|(HEAPU8[$19+2>>0]<<16)|(HEAPU8[$19+3>>0]<<24);
 $21 = $result;
 $22 = ((($21)) + 45|0);
 HEAP8[$22>>0]=$20&255;HEAP8[$22+1>>0]=($20>>8)&255;HEAP8[$22+2>>0]=($20>>16)&255;HEAP8[$22+3>>0]=$20>>24;
 $23 = $0;
 $24 = ((($23)) + 49|0);
 $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
 $26 = $result;
 $27 = ((($26)) + 49|0);
 HEAP8[$27>>0]=$25&255;HEAP8[$27+1>>0]=($25>>8)&255;HEAP8[$27+2>>0]=($25>>16)&255;HEAP8[$27+3>>0]=$25>>24;
 $28 = $instance;
 $29 = $result;
 $30 = ((($29)) + 53|0);
 HEAP8[$30>>0]=$28&255;HEAP8[$30+1>>0]=($28>>8)&255;HEAP8[$30+2>>0]=($28>>16)&255;HEAP8[$30+3>>0]=$28>>24;
 $31 = $result;
 $32 = ((($31)) + 57|0);
 $33 = HEAP8[$32>>0]|0;
 $34 = $33 & -2;
 $35 = $34 | 1;
 HEAP8[$32>>0] = $35;
 $36 = $0;
 $37 = ((($36)) + 58|0);
 $38 = HEAPU8[$37>>0]|(HEAPU8[$37+1>>0]<<8)|(HEAPU8[$37+2>>0]<<16)|(HEAPU8[$37+3>>0]<<24);
 $39 = $result;
 $40 = ((($39)) + 58|0);
 HEAP8[$40>>0]=$38&255;HEAP8[$40+1>>0]=($38>>8)&255;HEAP8[$40+2>>0]=($38>>16)&255;HEAP8[$40+3>>0]=$38>>24;
 $41 = $result;
 $42 = $0;
 dest=$41; src=$42; stop=dest+45|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
 $43 = $result;
 STACKTOP = sp;return ($43|0);
}
function __fill_ranged($coll) {
 $coll = $coll|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $arg = 0, $begin = 0, $end = 0, $obj = 0, $step = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $obj = sp + 12|0;
 $arg = sp + 24|0;
 $0 = $coll;
 HEAP32[$obj>>2] = 0;
 $1 = $0;
 $2 = ($1|0)!=(0|0);
 if (!($2)) {
  ___assert_fail((5397|0),(4322|0),7993,(9543|0));
  // unreachable;
 }
 $3 = $0;
 $4 = ((($3)) + 35|0);
 $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
 $6 = ($5|0)!=(0|0);
 if (!($6)) {
  STACKTOP = sp;return;
 }
 $7 = $0;
 $8 = ((($7)) + 35|0);
 $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
 $10 = HEAP32[$9>>2]|0;
 $begin = $10;
 $11 = $0;
 $12 = ((($11)) + 35|0);
 $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
 $14 = HEAP32[$13>>2]|0;
 $15 = $0;
 $16 = ((($15)) + 31|0);
 $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
 $18 = (($14) + ($17))|0;
 $end = $18;
 $19 = $0;
 $20 = ((($19)) + 31|0);
 $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
 $22 = ($21|0)!=(0);
 if ($22) {
  $23 = $0;
  $24 = ((($23)) + 31|0);
  $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
  $26 = ($25|0)>(0);
  $27 = $26 ? 1 : -1;
  $28 = $27;
 } else {
  $28 = 0;
 }
 $step = $28;
 while(1) {
  $29 = $begin;
  $30 = ((($arg)) + 4|0);
  HEAP8[$30>>0]=$29&255;HEAP8[$30+1>>0]=($29>>8)&255;HEAP8[$30+2>>0]=($29>>16)&255;HEAP8[$30+3>>0]=$29>>24;
  HEAP8[$arg>>0]=2&255;HEAP8[$arg+1>>0]=(2>>8)&255;HEAP8[$arg+2>>0]=(2>>16)&255;HEAP8[$arg+3>>0]=2>>24;
  (__create_internal_object_from_public_value($arg,$obj)|0);
  $31 = $0;
  $32 = ((($31)) + 19|0);
  $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
  $34 = HEAP32[$obj>>2]|0;
  (__ls_pushback($33,$34)|0);
  $35 = $step;
  $36 = $begin;
  $37 = (($36) + ($35))|0;
  $begin = $37;
  $38 = $begin;
  $39 = $end;
  $40 = ($38|0)!=($39|0);
  if (!($40)) {
   break;
  }
 }
 $41 = $0;
 $42 = ((($41)) + 35|0);
 $43 = HEAPU8[$42>>0]|(HEAPU8[$42+1>>0]<<8)|(HEAPU8[$42+2>>0]<<16)|(HEAPU8[$42+3>>0]<<24);
 $44 = ($43|0)!=(0|0);
 if (!($44)) {
  ___assert_fail((4369|0),(4322|0),8008,(9543|0));
  // unreachable;
 }
 $45 = $0;
 $46 = ((($45)) + 35|0);
 $47 = HEAPU8[$46>>0]|(HEAPU8[$46+1>>0]<<8)|(HEAPU8[$46+2>>0]<<16)|(HEAPU8[$46+3>>0]<<24);
 _mb_free($47);
 $48 = $0;
 $49 = ((($48)) + 35|0);
 HEAP8[$49>>0]=0&255;HEAP8[$49+1>>0]=(0>>8)&255;HEAP8[$49+2>>0]=(0>>16)&255;HEAP8[$49+3>>0]=0>>24;
 $50 = $0;
 $51 = ((($50)) + 17|0);
 $52 = $0;
 $53 = $0;
 (__write_on_ref_object($51,$52,$53)|0);
 $54 = $0;
 __invalidate_list_cache($54);
 STACKTOP = sp;return;
}
function __create_internal_object_from_public_value($pbl,$itn) {
 $pbl = $pbl|0;
 $itn = $itn|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $pbl;
 $1 = $itn;
 $result = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 if (!($or$cond)) {
  ___assert_fail((9600|0),(4322|0),10540,(9611|0));
  // unreachable;
 }
 $6 = (__create_object()|0);
 $7 = $1;
 HEAP32[$7>>2] = $6;
 $8 = $0;
 $9 = $1;
 $10 = HEAP32[$9>>2]|0;
 (__public_value_to_internal_object($8,$10)|0);
 $11 = $1;
 $12 = HEAP32[$11>>2]|0;
 $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
 $14 = ($13|0)==(4);
 if (!($14)) {
  $34 = $result;
  STACKTOP = sp;return ($34|0);
 }
 $15 = $1;
 $16 = HEAP32[$15>>2]|0;
 $17 = ((($16)) + 8|0);
 $18 = HEAP8[$17>>0]|0;
 $19 = $18 & -2;
 HEAP8[$17>>0] = $19;
 $20 = $1;
 $21 = HEAP32[$20>>2]|0;
 $22 = ((($21)) + 4|0);
 $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
 $24 = $1;
 $25 = HEAP32[$24>>2]|0;
 $26 = ((($25)) + 4|0);
 $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
 $28 = (_strlen($27)|0);
 $29 = (($28) + 1)|0;
 $30 = (_mb_strdup($23,$29)|0);
 $31 = $1;
 $32 = HEAP32[$31>>2]|0;
 $33 = ((($32)) + 4|0);
 HEAP8[$33>>0]=$30&255;HEAP8[$33+1>>0]=($30>>8)&255;HEAP8[$33+2>>0]=($30>>16)&255;HEAP8[$33+3>>0]=$30>>24;
 $34 = $result;
 STACKTOP = sp;return ($34|0);
}
function __write_on_ref_object($lk,$ref,$obj) {
 $lk = $lk|0;
 $ref = $ref|0;
 $obj = $obj|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $lk;
 $1 = $ref;
 $2 = $obj;
 $result = 1;
 $3 = $0;
 $4 = ($3|0)!=(0|0);
 if (!($4)) {
  ___assert_fail((5508|0),(4322|0),6306,(9579|0));
  // unreachable;
 }
 $5 = $0;
 $6 = HEAP16[$5>>1]|0;
 $7 = $6 << 16 >> 16;
 $8 = ($7|0)>(0);
 if ($8) {
  $9 = $0;
  $10 = HEAP16[$9>>1]|0;
  $11 = $10 << 16 >> 16;
  $12 = (0 - ($11))|0;
  $13 = $12&65535;
  $14 = $0;
  HEAP16[$14>>1] = $13;
  $15 = $result;
  STACKTOP = sp;return ($15|0);
 } else {
  $result = 0;
  $15 = $result;
  STACKTOP = sp;return ($15|0);
 }
 return (0)|0;
}
function __invalidate_list_cache($coll) {
 $coll = $coll|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $coll;
 $1 = $0;
 $2 = ($1|0)!=(0|0);
 if ($2) {
  $3 = $0;
  $4 = ((($3)) + 23|0);
  HEAP8[$4>>0]=0&255;HEAP8[$4+1>>0]=(0>>8)&255;HEAP8[$4+2>>0]=(0>>16)&255;HEAP8[$4+3>>0]=0>>24;
  $5 = $0;
  $6 = ((($5)) + 27|0);
  HEAP8[$6>>0]=0&255;HEAP8[$6+1>>0]=(0>>8)&255;HEAP8[$6+2>>0]=(0>>16)&255;HEAP8[$6+3>>0]=0>>24;
  STACKTOP = sp;return;
 } else {
  ___assert_fail((5397|0),(4322|0),7983,(9556|0));
  // unreachable;
 }
}
function __unref_outer_scope($ref,$data) {
 $ref = $ref|0;
 $data = $data|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $ref;
 $1 = $data;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 if (!($3)) {
  ___assert_fail((9745|0),(4322|0),9046,(9749|0));
  // unreachable;
 }
 $4 = $0;
 $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($6|0)==(1);
 if (!($7)) {
  STACKTOP = sp;return;
 }
 $8 = $1;
 __destroy_outer_scope($8);
 STACKTOP = sp;return;
}
function __create_ref($ref,$dtor,$t,$s) {
 $ref = $ref|0;
 $dtor = $dtor|0;
 $t = $t|0;
 $s = $s|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $src = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $src = sp;
 $0 = $ref;
 $1 = $dtor;
 $2 = $t;
 $3 = $s;
 HEAP32[$src>>2] = 0;
 $4 = $0;
 $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
 $6 = ($5|0)!=(0|0);
 if ($6) {
  STACKTOP = sp;return;
 }
 while(1) {
  $7 = $3;
  $8 = (_mb_get_forked_from($7,$src)|0);
  $9 = ($8|0)==(0);
  if (!($9)) {
   break;
  }
  $10 = HEAP32[$src>>2]|0;
  $3 = $10;
 }
 $11 = (_mb_malloc(4)|0);
 $12 = $0;
 HEAP8[$12>>0]=$11&255;HEAP8[$12+1>>0]=($11>>8)&255;HEAP8[$12+2>>0]=($11>>16)&255;HEAP8[$12+3>>0]=$11>>24;
 $13 = $0;
 $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
 HEAP32[$14>>2] = 1;
 $15 = (_mb_malloc(4)|0);
 $16 = $0;
 $17 = ((($16)) + 4|0);
 HEAP8[$17>>0]=$15&255;HEAP8[$17+1>>0]=($15>>8)&255;HEAP8[$17+2>>0]=($15>>16)&255;HEAP8[$17+3>>0]=$15>>24;
 $18 = $0;
 $19 = ((($18)) + 4|0);
 $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8)|(HEAPU8[$19+2>>0]<<16)|(HEAPU8[$19+3>>0]<<24);
 HEAP32[$20>>2] = 1;
 $21 = $1;
 $22 = $0;
 $23 = ((($22)) + 8|0);
 HEAP8[$23>>0]=$21&255;HEAP8[$23+1>>0]=($21>>8)&255;HEAP8[$23+2>>0]=($21>>16)&255;HEAP8[$23+3>>0]=$21>>24;
 $24 = $2;
 $25 = $0;
 $26 = ((($25)) + 12|0);
 $27 = $24&255;
 HEAP8[$26>>0] = $27;
 $28 = $3;
 $29 = $0;
 $30 = ((($29)) + 13|0);
 HEAP8[$30>>0]=$28&255;HEAP8[$30+1>>0]=($28>>8)&255;HEAP8[$30+2>>0]=($28>>16)&255;HEAP8[$30+3>>0]=$28>>24;
 STACKTOP = sp;return;
}
function __destroy_outer_scope($p) {
 $p = $p|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $scope = 0, $scope1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $p;
 $1 = $0;
 $2 = ($1|0)!=(0|0);
 if (!($2)) {
  ___assert_fail((9768|0),(4322|0),9054,(9770|0));
  // unreachable;
 }
 $3 = $0;
 $4 = ($3|0)!=(0|0);
 do {
  if ($4) {
   $5 = $0;
   $scope = $5;
   $6 = $0;
   $7 = ((($6)) + 17|0);
   $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
   $0 = $8;
   $9 = $scope;
   $10 = ((($9)) + 13|0);
   $11 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
   $12 = $scope;
   $13 = ((($12)) + 21|0);
   $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
   __destroy_scope($11,$14);
   $15 = $scope;
   __destroy_ref($15);
   $16 = $scope;
   $17 = ($16|0)!=(0|0);
   if ($17) {
    $18 = $scope;
    _mb_free($18);
    $scope = 0;
    break;
   } else {
    ___assert_fail((4369|0),(4322|0),9061,(9770|0));
    // unreachable;
   }
  }
 } while(0);
 while(1) {
  $19 = $0;
  $20 = ($19|0)!=(0|0);
  if (!($20)) {
   break;
  }
  $21 = $0;
  $scope1 = $21;
  $22 = $0;
  $23 = ((($22)) + 17|0);
  $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
  $0 = $24;
  $25 = $scope1;
  $26 = $scope1;
  (__unref($25,$26)|0);
 }
 STACKTOP = sp;return;
}
function __destroy_scope($s,$p) {
 $s = $s|0;
 $p = $p|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $p;
 $2 = $1;
 $3 = ((($2)) + 8|0);
 $4 = HEAPU8[$3>>0]|(HEAPU8[$3+1>>0]<<8)|(HEAPU8[$3+2>>0]<<16)|(HEAPU8[$3+3>>0]<<24);
 $5 = ($4|0)!=(0|0);
 if ($5) {
  $6 = $1;
  $7 = ((($6)) + 8|0);
  $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
  (__ht_foreach($8,134)|0);
  $9 = $1;
  $10 = ((($9)) + 8|0);
  $11 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
  __ht_destroy($11);
  $12 = $1;
  $13 = ((($12)) + 32|0);
  $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
  $15 = ($14|0)!=(0|0);
  if ($15) {
   $16 = $1;
   $17 = ((($16)) + 32|0);
   $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
   __ls_destroy($18);
   $19 = $1;
   $20 = ((($19)) + 32|0);
   HEAP8[$20>>0]=0&255;HEAP8[$20+1>>0]=(0>>8)&255;HEAP8[$20+2>>0]=(0>>16)&255;HEAP8[$20+3>>0]=0>>24;
  }
 }
 $21 = $1;
 $22 = ($21|0)!=(0|0);
 if ($22) {
  $23 = $1;
  _mb_free($23);
  $1 = 0;
  STACKTOP = sp;return;
 } else {
  ___assert_fail((4369|0),(4322|0),9404,(9804|0));
  // unreachable;
 }
}
function __destroy_ref($ref) {
 $ref = $ref|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $ref;
 $1 = $0;
 $2 = HEAPU8[$1>>0]|(HEAPU8[$1+1>>0]<<8)|(HEAPU8[$1+2>>0]<<16)|(HEAPU8[$1+3>>0]<<24);
 $3 = ($2|0)!=(0|0);
 if (!($3)) {
  STACKTOP = sp;return;
 }
 $4 = $0;
 $5 = ((($4)) + 4|0);
 $6 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
 $7 = ($6|0)!=(0|0);
 if (!($7)) {
  STACKTOP = sp;return;
 }
 $8 = $0;
 $9 = ((($8)) + 4|0);
 $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
 $11 = HEAP32[$10>>2]|0;
 $12 = ($11|0)==(1);
 do {
  if ($12) {
   $13 = $0;
   $14 = ((($13)) + 4|0);
   $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
   $16 = ($15|0)!=(0|0);
   if (!($16)) {
    ___assert_fail((4369|0),(4322|0),6454,(9791|0));
    // unreachable;
   }
   $17 = $0;
   $18 = ((($17)) + 4|0);
   $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
   _mb_free($19);
   $20 = $0;
   $21 = ((($20)) + 4|0);
   HEAP8[$21>>0]=0&255;HEAP8[$21+1>>0]=(0>>8)&255;HEAP8[$21+2>>0]=(0>>16)&255;HEAP8[$21+3>>0]=0>>24;
   $22 = $0;
   $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
   $24 = ($23|0)!=(0|0);
   if ($24) {
    $25 = $0;
    $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
    _mb_free($26);
    $27 = $0;
    HEAP8[$27>>0]=0&255;HEAP8[$27+1>>0]=(0>>8)&255;HEAP8[$27+2>>0]=(0>>16)&255;HEAP8[$27+3>>0]=0>>24;
    break;
   } else {
    ___assert_fail((4369|0),(4322|0),6455,(9791|0));
    // unreachable;
   }
  }
 } while(0);
 $28 = $0;
 $29 = ((($28)) + 8|0);
 HEAP8[$29>>0]=0&255;HEAP8[$29+1>>0]=(0>>8)&255;HEAP8[$29+2>>0]=(0>>16)&255;HEAP8[$29+3>>0]=0>>24;
 STACKTOP = sp;return;
}
function __pop_weak_scope($s,$p) {
 $s = $s|0;
 $p = $p|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $p;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 if (!($3)) {
  ___assert_fail((4803|0),(4322|0),9409,(9819|0));
  // unreachable;
 }
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 if (!($5)) {
  $7 = $1;
  STACKTOP = sp;return ($7|0);
 }
 $6 = $1;
 HEAP8[$6>>0]=0&255;HEAP8[$6+1>>0]=(0>>8)&255;HEAP8[$6+2>>0]=(0>>16)&255;HEAP8[$6+3>>0]=0>>24;
 $7 = $1;
 STACKTOP = sp;return ($7|0);
}
function __pop_arg($s,$l,$va,$ca,$ia,$r,$pop_arg,$args,$arg) {
 $s = $s|0;
 $l = $l|0;
 $va = $va|0;
 $ca = $ca|0;
 $ia = $ia|0;
 $r = $r|0;
 $pop_arg = $pop_arg|0;
 $args = $args|0;
 $arg = $arg|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $7 = 0, $8 = 0, $9 = 0, $ast = 0, $obj = 0, $obj1 = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $l;
 $2 = $va;
 $3 = $ca;
 $4 = $ia;
 $5 = $r;
 $6 = $pop_arg;
 $7 = $args;
 $8 = $arg;
 $result = 0;
 $9 = $1;
 $10 = HEAP32[$9>>2]|0;
 $ast = $10;
 $11 = $8;
 $12 = ((($11)) + 4|0);
 ;HEAP8[$12>>0]=0|0;HEAP8[$12+1>>0]=0|0;HEAP8[$12+2>>0]=0|0;HEAP8[$12+3>>0]=0|0;
 $13 = $8;
 HEAP8[$13>>0]=0&255;HEAP8[$13+1>>0]=(0>>8)&255;HEAP8[$13+2>>0]=(0>>16)&255;HEAP8[$13+3>>0]=0>>24;
 $14 = $0;
 $15 = (__multiline_statement($14)|0);
 $16 = ($15<<24>>24)!=(0);
 L1: do {
  if ($16) {
   $obj = 0;
   $17 = $ast;
   $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
   $obj = $18;
   while(1) {
    $19 = $obj;
    $20 = ($19|0)!=(0|0);
    if (!($20)) {
     break L1;
    }
    $21 = $obj;
    $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
    $23 = ($22|0)==(22);
    if (!($23)) {
     break L1;
    }
    $24 = $ast;
    $25 = ((($24)) + 8|0);
    $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
    $ast = $26;
    $27 = $ast;
    $28 = ($27|0)!=(0|0);
    if ($28) {
     $29 = $ast;
     $30 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8)|(HEAPU8[$29+2>>0]<<16)|(HEAPU8[$29+3>>0]<<24);
     $31 = $30;
    } else {
     $31 = 0;
    }
    $obj = $31;
   }
  }
 } while(0);
 $32 = $ast;
 $33 = ($32|0)!=(0|0);
 if ($33) {
  $34 = $ast;
  $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
  $36 = ($35|0)!=(0|0);
  if ($36) {
   $37 = $ast;
   $38 = HEAPU8[$37>>0]|(HEAPU8[$37+1>>0]<<8)|(HEAPU8[$37+2>>0]<<16)|(HEAPU8[$37+3>>0]<<24);
   $39 = HEAPU8[$38>>0]|(HEAPU8[$38+1>>0]<<8)|(HEAPU8[$38+2>>0]<<16)|(HEAPU8[$38+3>>0]<<24);
   $40 = ($39|0)==(8);
   if ($40) {
    $41 = $ast;
    $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
    $43 = ((($42)) + 4|0);
    $44 = HEAPU8[$43>>0]|(HEAPU8[$43+1>>0]<<8)|(HEAPU8[$43+2>>0]<<16)|(HEAPU8[$43+3>>0]<<24);
    $45 = ((($44)) + 4|0);
    $46 = HEAPU8[$45>>0]|(HEAPU8[$45+1>>0]<<8)|(HEAPU8[$45+2>>0]<<16)|(HEAPU8[$45+3>>0]<<24);
    $47 = ($46|0)==(44|0);
    if ($47) {
     $48 = $7;
     $49 = ($48|0)!=(0|0);
     if (!($49)) {
      $57 = $8;
      HEAP8[$57>>0]=1&255;HEAP8[$57+1>>0]=(1>>8)&255;HEAP8[$57+2>>0]=(1>>16)&255;HEAP8[$57+3>>0]=1>>24;
      $67 = $result;
      STACKTOP = sp;return ($67|0);
     }
     $50 = $7;
     $51 = (__ls_popfront($50)|0);
     $obj1 = $51;
     $52 = $obj1;
     $53 = ($52|0)!=(0|0);
     if (!($53)) {
      $67 = $result;
      STACKTOP = sp;return ($67|0);
     }
     $54 = $obj1;
     $55 = $8;
     (__internal_object_to_public_value($54,$55)|0);
     $56 = $obj1;
     (__destroy_object_capsule_only($56,0)|0);
     $67 = $result;
     STACKTOP = sp;return ($67|0);
    }
   }
  }
 }
 $58 = $6;
 $59 = $0;
 $60 = $1;
 $61 = $2;
 $62 = $3;
 $63 = $4;
 $64 = $5;
 $65 = $8;
 $66 = (FUNCTION_TABLE_iiiiiiii[$58 & 255]($59,$60,$61,$62,$63,$64,$65)|0);
 $result = $66;
 $67 = $result;
 STACKTOP = sp;return ($67|0);
}
function __push_weak_scope_by_routine($s,$p,$r) {
 $s = $s|0;
 $p = $p|0;
 $r = $r|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $p;
 $2 = $r;
 $3 = $0;
 $4 = ($3|0)!=(0|0);
 if (!($4)) {
  ___assert_fail((4803|0),(4322|0),9366,(9835|0));
  // unreachable;
 }
 $5 = $0;
 $6 = $1;
 $7 = (__find_scope($5,$6)|0);
 $8 = ($7|0)!=(0|0);
 if ($8) {
  $9 = $0;
  $10 = $1;
  $11 = $2;
  $12 = (__reference_scope_by_routine($9,$10,$11)|0);
  $1 = $12;
 }
 $13 = $1;
 $14 = ($13|0)!=(0|0);
 if (!($14)) {
  $19 = $1;
  STACKTOP = sp;return ($19|0);
 }
 $15 = $0;
 $16 = ((($15)) + 75|0);
 $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
 $18 = $1;
 HEAP8[$18>>0]=$17&255;HEAP8[$18+1>>0]=($17>>8)&255;HEAP8[$18+2>>0]=($17>>16)&255;HEAP8[$18+3>>0]=$17>>24;
 $19 = $1;
 STACKTOP = sp;return ($19|0);
}
function __unref_routine($ref,$data) {
 $ref = $ref|0;
 $data = $data|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $ref;
 $1 = $data;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 if (!($3)) {
  ___assert_fail((9745|0),(4322|0),8924,(9911|0));
  // unreachable;
 }
 $4 = $0;
 $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($6|0)==(1);
 if (!($7)) {
  STACKTOP = sp;return;
 }
 $8 = $0;
 $9 = ((($8)) + 13|0);
 $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
 $11 = $1;
 __destroy_routine($10,$11);
 STACKTOP = sp;return;
}
function __collect_intermediate_value($ref,$data) {
 $ref = $ref|0;
 $data = $data|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $8 = 0, $9 = 0, $__lst = 0;
 var $__opresult = 0, $__tmp = 0, $or$cond = 0, $s = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $s = sp + 12|0;
 $0 = $ref;
 $1 = $data;
 HEAP32[$s>>2] = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 if (!($or$cond)) {
  ___assert_fail((9122|0),(4322|0),10900,(10001|0));
  // unreachable;
 }
 $6 = $0;
 $7 = ((($6)) + 13|0);
 $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
 HEAP32[$s>>2] = $8;
 $9 = HEAP32[$s>>2]|0;
 $10 = ($9|0)!=(0|0);
 if (!($10)) {
  STACKTOP = sp;return;
 }
 $11 = HEAP32[$s>>2]|0;
 $12 = ((($11)) + 75|0);
 $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
 $14 = ($13|0)!=(0|0);
 if ($14) {
  $15 = HEAP32[$s>>2]|0;
  $16 = ((($15)) + 75|0);
  $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
  $18 = $1;
  __collect_intermediate_value_in_scope($17,$18);
 }
 $19 = HEAP32[$s>>2]|0;
 $20 = ((($19)) + 8|0);
 $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
 $22 = ($21|0)!=(0|0);
 if (!($22)) {
  STACKTOP = sp;return;
 }
 while(1) {
  $23 = HEAP32[$s>>2]|0;
  $24 = (_mb_get_forked_from($23,$s)|0);
  $25 = ($24|0)==(0);
  if (!($25)) {
   break;
  }
 }
 $26 = HEAP32[$s>>2]|0;
 $27 = ((($26)) + 8|0);
 $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
 $__lst = $28;
 $__opresult = 0;
 $__tmp = 0;
 $29 = HEAP32[$s>>2]|0;
 $30 = ((($29)) + 8|0);
 $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8)|(HEAPU8[$30+2>>0]<<16)|(HEAPU8[$30+3>>0]<<24);
 $32 = ($31|0)!=(0|0);
 if (!($32)) {
  ___assert_fail((10029|0),(4322|0),10911,(10001|0));
  // unreachable;
 }
 $33 = $__lst;
 $34 = ((($33)) + 8|0);
 $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
 $__lst = $35;
 while(1) {
  $36 = $__lst;
  $37 = ($36|0)!=(0|0);
  if (!($37)) {
   label = 18;
   break;
  }
  $38 = $__lst;
  $39 = HEAPU8[$38>>0]|(HEAPU8[$38+1>>0]<<8)|(HEAPU8[$38+2>>0]<<16)|(HEAPU8[$38+3>>0]<<24);
  $40 = $__lst;
  $41 = ((($40)) + 12|0);
  $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
  $43 = $1;
  __collect_intermediate_value_in_scope_chain($39,$42,$43);
  $44 = $__lst;
  $45 = HEAPU8[$44>>0]|(HEAPU8[$44+1>>0]<<8)|(HEAPU8[$44+2>>0]<<16)|(HEAPU8[$44+3>>0]<<24);
  $46 = $__lst;
  $47 = ((($46)) + 12|0);
  $48 = HEAPU8[$47>>0]|(HEAPU8[$47+1>>0]<<8)|(HEAPU8[$47+2>>0]<<16)|(HEAPU8[$47+3>>0]<<24);
  $49 = (__do_nothing_on_object($45,$48)|0);
  $__opresult = $49;
  $50 = $__lst;
  $__tmp = $50;
  $51 = $__lst;
  $52 = ((($51)) + 8|0);
  $53 = HEAPU8[$52>>0]|(HEAPU8[$52+1>>0]<<8)|(HEAPU8[$52+2>>0]<<16)|(HEAPU8[$52+3>>0]<<24);
  $__lst = $53;
  $54 = $__opresult;
  $55 = (-1)==($54|0);
  if (!($55)) {
   continue;
  }
  $56 = $__lst;
  $57 = $__tmp;
  $58 = ((($57)) + 4|0);
  $59 = HEAPU8[$58>>0]|(HEAPU8[$58+1>>0]<<8)|(HEAPU8[$58+2>>0]<<16)|(HEAPU8[$58+3>>0]<<24);
  $60 = ((($59)) + 8|0);
  HEAP8[$60>>0]=$56&255;HEAP8[$60+1>>0]=($56>>8)&255;HEAP8[$60+2>>0]=($56>>16)&255;HEAP8[$60+3>>0]=$56>>24;
  $61 = $__lst;
  $62 = ($61|0)!=(0|0);
  if ($62) {
   $63 = $__tmp;
   $64 = ((($63)) + 4|0);
   $65 = HEAPU8[$64>>0]|(HEAPU8[$64+1>>0]<<8)|(HEAPU8[$64+2>>0]<<16)|(HEAPU8[$64+3>>0]<<24);
   $66 = $__lst;
   $67 = ((($66)) + 4|0);
   HEAP8[$67>>0]=$65&255;HEAP8[$67+1>>0]=($65>>8)&255;HEAP8[$67+2>>0]=($65>>16)&255;HEAP8[$67+3>>0]=$65>>24;
  }
  $68 = $__tmp;
  $69 = ($68|0)!=(0|0);
  if (!($69)) {
   label = 17;
   break;
  }
  $70 = $__tmp;
  _mb_free($70);
  $__tmp = 0;
  $71 = HEAP32[$s>>2]|0;
  $72 = ((($71)) + 8|0);
  $73 = HEAPU8[$72>>0]|(HEAPU8[$72+1>>0]<<8)|(HEAPU8[$72+2>>0]<<16)|(HEAPU8[$72+3>>0]<<24);
  $74 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
  $75 = ((($74)) + -1|0);
  $76 = HEAP32[$s>>2]|0;
  $77 = ((($76)) + 8|0);
  $78 = HEAPU8[$77>>0]|(HEAPU8[$77+1>>0]<<8)|(HEAPU8[$77+2>>0]<<16)|(HEAPU8[$77+3>>0]<<24);
  HEAP8[$78>>0]=$75&255;HEAP8[$78+1>>0]=($75>>8)&255;HEAP8[$78+2>>0]=($75>>16)&255;HEAP8[$78+3>>0]=$75>>24;
 }
 if ((label|0) == 17) {
  ___assert_fail((4369|0),(4322|0),10911,(10001|0));
  // unreachable;
 }
 else if ((label|0) == 18) {
  STACKTOP = sp;return;
 }
}
function __collect_intermediate_value_in_scope($running,$data) {
 $running = $running|0;
 $data = $data|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $or$cond = 0, $tmp = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $tmp = sp + 8|0;
 $0 = $running;
 $1 = $data;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 if (!($or$cond)) {
  ___assert_fail((10043|0),(4322|0),10851,(10059|0));
  // unreachable;
 }
 $6 = $0;
 $7 = ($6|0)!=(0|0);
 if (!($7)) {
  STACKTOP = sp;return;
 }
 dest=$tmp; stop=dest+17|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
 HEAP8[$tmp>>0]=0&255;HEAP8[$tmp+1>>0]=(0>>8)&255;HEAP8[$tmp+2>>0]=(0>>16)&255;HEAP8[$tmp+3>>0]=0>>24;
 $8 = $0;
 $9 = ((($8)) + 20|0);
 (__public_value_to_internal_object($9,$tmp)|0);
 $10 = ((($tmp)) + 4|0);
 $11 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
 $12 = $1;
 $13 = ($11|0)==($12|0);
 if (!($13)) {
  STACKTOP = sp;return;
 }
 $14 = HEAPU8[$tmp>>0]|(HEAPU8[$tmp+1>>0]<<8)|(HEAPU8[$tmp+2>>0]<<16)|(HEAPU8[$tmp+3>>0]<<24);
 switch ($14|0) {
 case 10: case 16: case 13: case 11: case 7:  {
  break;
 }
 default: {
  STACKTOP = sp;return;
 }
 }
 $15 = $0;
 $16 = ((($15)) + 20|0);
 $17 = ((($16)) + 4|0);
 ;HEAP8[$17>>0]=0|0;HEAP8[$17+1>>0]=0|0;HEAP8[$17+2>>0]=0|0;HEAP8[$17+3>>0]=0|0;
 $18 = $0;
 $19 = ((($18)) + 20|0);
 HEAP8[$19>>0]=0&255;HEAP8[$19+1>>0]=(0>>8)&255;HEAP8[$19+2>>0]=(0>>16)&255;HEAP8[$19+3>>0]=0>>24;
 STACKTOP = sp;return;
}
function __collect_intermediate_value_in_scope_chain($data,$extra,$d) {
 $data = $data|0;
 $extra = $extra|0;
 $d = $d|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $running = 0, $s = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $data;
 $1 = $extra;
 $2 = $d;
 $s = 0;
 $running = 0;
 $3 = $0;
 $s = $3;
 $4 = $s;
 $5 = ((($4)) + 75|0);
 $6 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
 $running = $6;
 while(1) {
  $7 = $running;
  $8 = ($7|0)!=(0|0);
  if (!($8)) {
   break;
  }
  $9 = $running;
  $10 = $2;
  __collect_intermediate_value_in_scope($9,$10);
  $11 = $running;
  $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
  $running = $12;
 }
 STACKTOP = sp;return;
}
function __unref_usertype_ref($ref,$data) {
 $ref = $ref|0;
 $data = $data|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $ref;
 $1 = $data;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 if (!($3)) {
  ___assert_fail((9745|0),(4322|0),7061,(10149|0));
  // unreachable;
 }
 $4 = $0;
 $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($6|0)==(1);
 if (!($7)) {
  STACKTOP = sp;return;
 }
 $8 = $1;
 __destroy_usertype_ref($8);
 STACKTOP = sp;return;
}
function __destroy_usertype_ref($c) {
 $c = $c|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $c;
 $1 = $0;
 $2 = ($1|0)!=(0|0);
 if (!($2)) {
  ___assert_fail((4883|0),(4322|0),7048,(10169|0));
  // unreachable;
 }
 $3 = $0;
 $4 = ((($3)) + 21|0);
 $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
 $6 = ($5|0)!=(0|0);
 if ($6) {
  $7 = $0;
  $8 = ((($7)) + 21|0);
  $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
  $10 = $0;
  $11 = ((($10)) + 13|0);
  $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
  $13 = $0;
  $14 = ((($13)) + 17|0);
  $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
  FUNCTION_TABLE_vii[$9 & 255]($12,$15);
 }
 $16 = $0;
 $17 = ((($16)) + 45|0);
 $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
 $19 = ($18|0)!=(0|0);
 do {
  if ($19) {
   $20 = $0;
   $21 = ((($20)) + 45|0);
   $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
   $23 = ($22|0)!=(0|0);
   if ($23) {
    $24 = $0;
    $25 = ((($24)) + 45|0);
    $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
    _mb_free($26);
    $27 = $0;
    $28 = ((($27)) + 45|0);
    HEAP8[$28>>0]=0&255;HEAP8[$28+1>>0]=(0>>8)&255;HEAP8[$28+2>>0]=(0>>16)&255;HEAP8[$28+3>>0]=0>>24;
    break;
   } else {
    ___assert_fail((4369|0),(4322|0),7053,(10169|0));
    // unreachable;
   }
  }
 } while(0);
 $29 = $0;
 __destroy_ref($29);
 $30 = $0;
 $31 = ($30|0)!=(0|0);
 if ($31) {
  $32 = $0;
  _mb_free($32);
  $0 = 0;
  STACKTOP = sp;return;
 } else {
  ___assert_fail((4369|0),(4322|0),7056,(10169|0));
  // unreachable;
 }
}
function __ls_cmp_extra_object($node,$info) {
 $node = $node|0;
 $info = $info|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $n = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $node;
 $1 = $info;
 $2 = $0;
 $n = $2;
 $3 = $n;
 $4 = ((($3)) + 12|0);
 $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
 $6 = $1;
 $7 = (__ht_cmp_object($5,$6)|0);
 STACKTOP = sp;return ($7|0);
}
function __ht_cmp_object($d1,$d2) {
 $d1 = $d1|0;
 $d2 = $d2|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0;
 var $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0;
 var $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;
 var $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $ast = 0, $cmp = 0, $fst = 0, $i = 0, $ignored = 0, $o1 = 0, $o2 = 0;
 var $s = 0, $tmp = 0, $va = 0, $val = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $val = sp + 65|0;
 $ast = sp + 48|0;
 $tmp = sp + 4|0;
 $va = sp + 40|0;
 $1 = $d1;
 $2 = $d2;
 $3 = $1;
 $o1 = $3;
 $4 = $2;
 $o2 = $4;
 $i = 0;
 $cmp = 0;
 $fst = 1;
 $5 = $o1;
 $6 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
 $7 = $o2;
 $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
 $9 = ($6|0)<($8|0);
 if ($9) {
  $0 = -1;
  $212 = $0;
  STACKTOP = sp;return ($212|0);
 }
 $10 = $o1;
 $11 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
 $12 = $o2;
 $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
 $14 = ($11|0)>($13|0);
 if ($14) {
  $0 = 1;
  $212 = $0;
  STACKTOP = sp;return ($212|0);
 }
 $15 = $o1;
 $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
 L9: do {
  switch ($16|0) {
  case 4:  {
   $17 = $o1;
   $18 = ((($17)) + 4|0);
   $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
   $20 = $o2;
   $21 = ((($20)) + 4|0);
   $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
   $23 = (__ht_cmp_string($19,$22)|0);
   $0 = $23;
   $212 = $0;
   STACKTOP = sp;return ($212|0);
   break;
  }
  case 16:  {
   $24 = $o1;
   $25 = ((($24)) + 4|0);
   $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
   $27 = ((($26)) + 37|0);
   $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
   $29 = ($28|0)!=(0|0);
   if ($29) {
    $30 = $o1;
    $31 = ((($30)) + 4|0);
    $32 = HEAPU8[$31>>0]|(HEAPU8[$31+1>>0]<<8)|(HEAPU8[$31+2>>0]<<16)|(HEAPU8[$31+3>>0]<<24);
    $33 = ((($32)) + 37|0);
    $34 = HEAPU8[$33>>0]|(HEAPU8[$33+1>>0]<<8)|(HEAPU8[$33+2>>0]<<16)|(HEAPU8[$33+3>>0]<<24);
    $cmp = $34;
    $fst = 1;
   } else {
    $35 = $o2;
    $36 = ((($35)) + 4|0);
    $37 = HEAPU8[$36>>0]|(HEAPU8[$36+1>>0]<<8)|(HEAPU8[$36+2>>0]<<16)|(HEAPU8[$36+3>>0]<<24);
    $38 = ((($37)) + 37|0);
    $39 = HEAPU8[$38>>0]|(HEAPU8[$38+1>>0]<<8)|(HEAPU8[$38+2>>0]<<16)|(HEAPU8[$38+3>>0]<<24);
    $40 = ($39|0)!=(0|0);
    if ($40) {
     $41 = $o2;
     $42 = ((($41)) + 4|0);
     $43 = HEAPU8[$42>>0]|(HEAPU8[$42+1>>0]<<8)|(HEAPU8[$42+2>>0]<<16)|(HEAPU8[$42+3>>0]<<24);
     $44 = ((($43)) + 37|0);
     $45 = HEAPU8[$44>>0]|(HEAPU8[$44+1>>0]<<8)|(HEAPU8[$44+2>>0]<<16)|(HEAPU8[$44+3>>0]<<24);
     $cmp = $45;
     $fst = 0;
    }
   }
   $46 = $cmp;
   $47 = ($46|0)!=(0|0);
   if ($47) {
    $48 = $o1;
    $49 = ((($48)) + 4|0);
    $50 = HEAPU8[$49>>0]|(HEAPU8[$49+1>>0]<<8)|(HEAPU8[$49+2>>0]<<16)|(HEAPU8[$49+3>>0]<<24);
    $51 = ((($50)) + 13|0);
    $52 = HEAPU8[$51>>0]|(HEAPU8[$51+1>>0]<<8)|(HEAPU8[$51+2>>0]<<16)|(HEAPU8[$51+3>>0]<<24);
    $s = $52;
    HEAP32[$tmp>>2] = $ast;
    $53 = ((($va)) + 4|0);
    ;HEAP8[$53>>0]=0|0;HEAP8[$53+1>>0]=0|0;HEAP8[$53+2>>0]=0|0;HEAP8[$53+3>>0]=0|0;
    HEAP8[$va>>0]=0&255;HEAP8[$va+1>>0]=(0>>8)&255;HEAP8[$va+2>>0]=(0>>16)&255;HEAP8[$va+3>>0]=0>>24;
    $54 = $fst;
    $55 = $54&255;
    $56 = ($55|0)!=(0);
    $57 = $o2;
    $58 = $o1;
    $59 = $56 ? $57 : $58;
    (__internal_object_to_public_value($59,$va)|0);
    dest=$ast; stop=dest+16|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
    $60 = $s;
    $61 = $cmp;
    $62 = (__eval_routine($60,$tmp,$va,1,$61,162,163)|0);
    $63 = ($62|0)==(0);
    if ($63) {
     dest=$val; stop=dest+17|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
     HEAP8[$val>>0]=0&255;HEAP8[$val+1>>0]=(0>>8)&255;HEAP8[$val+2>>0]=(0>>16)&255;HEAP8[$val+3>>0]=0>>24;
     $64 = $s;
     $65 = ((($64)) + 75|0);
     $66 = HEAPU8[$65>>0]|(HEAPU8[$65+1>>0]<<8)|(HEAPU8[$65+2>>0]<<16)|(HEAPU8[$65+3>>0]<<24);
     $67 = ((($66)) + 20|0);
     (__public_value_to_internal_object($67,$val)|0);
     $68 = HEAPU8[$val>>0]|(HEAPU8[$val+1>>0]<<8)|(HEAPU8[$val+2>>0]<<16)|(HEAPU8[$val+3>>0]<<24);
     $69 = ($68|0)!=(2);
     if (!($69)) {
      $89 = $fst;
      $90 = $89&255;
      $91 = ($90|0)!=(0);
      $92 = ((($val)) + 4|0);
      $93 = HEAPU8[$92>>0]|(HEAPU8[$92+1>>0]<<8)|(HEAPU8[$92+2>>0]<<16)|(HEAPU8[$92+3>>0]<<24);
      $94 = (0 - ($93))|0;
      $95 = $91 ? $93 : $94;
      $0 = $95;
      $212 = $0;
      STACKTOP = sp;return ($212|0);
     }
     $ignored = 0;
     $70 = $o1;
     $71 = ($70|0)!=(0|0);
     $72 = $s;
     $73 = $s;
     $74 = ((($73)) + 67|0);
     $75 = HEAPU8[$74>>0]|(HEAPU8[$74+1>>0]<<8)|(HEAPU8[$74+2>>0]<<16)|(HEAPU8[$74+3>>0]<<24);
     $76 = (__set_current_error($72,16,$75)|0);
     $77 = ($76<<24>>24)!=(0);
     if ($71) {
      if (!($77)) {
       break L9;
      }
      $78 = $s;
      $79 = $o1;
      $80 = ((($79)) + 9|0);
      $81 = HEAPU8[$80>>0]|(HEAPU8[$80+1>>0]<<8)|(HEAPU8[$80+2>>0]<<16)|(HEAPU8[$80+3>>0]<<24);
      $82 = $o1;
      $83 = ((($82)) + 13|0);
      $84 = HEAPU8[$83>>0]|(HEAPU8[$83+1>>0]<<8);
      $85 = $o1;
      $86 = ((($85)) + 15|0);
      $87 = HEAPU8[$86>>0]|(HEAPU8[$86+1>>0]<<8);
      __set_error_pos($78,$81,$84,$87);
      $ignored = 3;
      break L9;
     } else {
      if (!($77)) {
       break L9;
      }
      $88 = $s;
      __set_error_pos($88,0,0,0);
      $ignored = 3;
      break L9;
     }
    } else {
     label = 24;
    }
   } else {
    label = 24;
   }
   break;
  }
  case 7:  {
   $96 = $o1;
   $97 = ((($96)) + 4|0);
   $98 = HEAPU8[$97>>0]|(HEAPU8[$97+1>>0]<<8)|(HEAPU8[$97+2>>0]<<16)|(HEAPU8[$97+3>>0]<<24);
   $99 = ((($98)) + 33|0);
   $100 = HEAPU8[$99>>0]|(HEAPU8[$99+1>>0]<<8)|(HEAPU8[$99+2>>0]<<16)|(HEAPU8[$99+3>>0]<<24);
   $101 = ($100|0)!=(0|0);
   if ($101) {
    $102 = $o1;
    $103 = ((($102)) + 4|0);
    $104 = HEAPU8[$103>>0]|(HEAPU8[$103+1>>0]<<8)|(HEAPU8[$103+2>>0]<<16)|(HEAPU8[$103+3>>0]<<24);
    $105 = ((($104)) + 33|0);
    $106 = HEAPU8[$105>>0]|(HEAPU8[$105+1>>0]<<8)|(HEAPU8[$105+2>>0]<<16)|(HEAPU8[$105+3>>0]<<24);
    $107 = $o1;
    $108 = ((($107)) + 4|0);
    $109 = HEAPU8[$108>>0]|(HEAPU8[$108+1>>0]<<8)|(HEAPU8[$108+2>>0]<<16)|(HEAPU8[$108+3>>0]<<24);
    $110 = ((($109)) + 13|0);
    $111 = HEAPU8[$110>>0]|(HEAPU8[$110+1>>0]<<8)|(HEAPU8[$110+2>>0]<<16)|(HEAPU8[$110+3>>0]<<24);
    $112 = $o1;
    $113 = ((($112)) + 4|0);
    $114 = HEAPU8[$113>>0]|(HEAPU8[$113+1>>0]<<8)|(HEAPU8[$113+2>>0]<<16)|(HEAPU8[$113+3>>0]<<24);
    $115 = ((($114)) + 17|0);
    $116 = HEAPU8[$115>>0]|(HEAPU8[$115+1>>0]<<8)|(HEAPU8[$115+2>>0]<<16)|(HEAPU8[$115+3>>0]<<24);
    $117 = $o2;
    $118 = ((($117)) + 4|0);
    $119 = HEAPU8[$118>>0]|(HEAPU8[$118+1>>0]<<8)|(HEAPU8[$118+2>>0]<<16)|(HEAPU8[$118+3>>0]<<24);
    $120 = ((($119)) + 17|0);
    $121 = HEAPU8[$120>>0]|(HEAPU8[$120+1>>0]<<8)|(HEAPU8[$120+2>>0]<<16)|(HEAPU8[$120+3>>0]<<24);
    $122 = (FUNCTION_TABLE_iiii[$106 & 255]($111,$116,$121)|0);
    $0 = $122;
    $212 = $0;
    STACKTOP = sp;return ($212|0);
   }
   $123 = $o2;
   $124 = ((($123)) + 4|0);
   $125 = HEAPU8[$124>>0]|(HEAPU8[$124+1>>0]<<8)|(HEAPU8[$124+2>>0]<<16)|(HEAPU8[$124+3>>0]<<24);
   $126 = ((($125)) + 33|0);
   $127 = HEAPU8[$126>>0]|(HEAPU8[$126+1>>0]<<8)|(HEAPU8[$126+2>>0]<<16)|(HEAPU8[$126+3>>0]<<24);
   $128 = ($127|0)!=(0|0);
   if ($128) {
    $129 = $o2;
    $130 = ((($129)) + 4|0);
    $131 = HEAPU8[$130>>0]|(HEAPU8[$130+1>>0]<<8)|(HEAPU8[$130+2>>0]<<16)|(HEAPU8[$130+3>>0]<<24);
    $132 = ((($131)) + 33|0);
    $133 = HEAPU8[$132>>0]|(HEAPU8[$132+1>>0]<<8)|(HEAPU8[$132+2>>0]<<16)|(HEAPU8[$132+3>>0]<<24);
    $134 = $o1;
    $135 = ((($134)) + 4|0);
    $136 = HEAPU8[$135>>0]|(HEAPU8[$135+1>>0]<<8)|(HEAPU8[$135+2>>0]<<16)|(HEAPU8[$135+3>>0]<<24);
    $137 = ((($136)) + 13|0);
    $138 = HEAPU8[$137>>0]|(HEAPU8[$137+1>>0]<<8)|(HEAPU8[$137+2>>0]<<16)|(HEAPU8[$137+3>>0]<<24);
    $139 = $o1;
    $140 = ((($139)) + 4|0);
    $141 = HEAPU8[$140>>0]|(HEAPU8[$140+1>>0]<<8)|(HEAPU8[$140+2>>0]<<16)|(HEAPU8[$140+3>>0]<<24);
    $142 = ((($141)) + 17|0);
    $143 = HEAPU8[$142>>0]|(HEAPU8[$142+1>>0]<<8)|(HEAPU8[$142+2>>0]<<16)|(HEAPU8[$142+3>>0]<<24);
    $144 = $o2;
    $145 = ((($144)) + 4|0);
    $146 = HEAPU8[$145>>0]|(HEAPU8[$145+1>>0]<<8)|(HEAPU8[$145+2>>0]<<16)|(HEAPU8[$145+3>>0]<<24);
    $147 = ((($146)) + 17|0);
    $148 = HEAPU8[$147>>0]|(HEAPU8[$147+1>>0]<<8)|(HEAPU8[$147+2>>0]<<16)|(HEAPU8[$147+3>>0]<<24);
    $149 = (FUNCTION_TABLE_iiii[$133 & 255]($138,$143,$148)|0);
    $0 = $149;
    $212 = $0;
    STACKTOP = sp;return ($212|0);
   } else {
    label = 24;
   }
   break;
  }
  default: {
   label = 24;
  }
  }
 } while(0);
 L36: do {
  if ((label|0) == 24) {
   $150 = (_mb_is_little_endian()|0);
   $151 = ($150<<24>>24)!=(0);
   if ($151) {
    $i = 3;
    while(1) {
     $152 = $i;
     $153 = ($152|0)>=(0);
     if (!($153)) {
      break L36;
     }
     $154 = $i;
     $155 = $o1;
     $156 = ((($155)) + 4|0);
     $157 = (($156) + ($154)|0);
     $158 = HEAP8[$157>>0]|0;
     $159 = $158&255;
     $160 = $i;
     $161 = $o2;
     $162 = ((($161)) + 4|0);
     $163 = (($162) + ($160)|0);
     $164 = HEAP8[$163>>0]|0;
     $165 = $164&255;
     $166 = ($159|0)<($165|0);
     if ($166) {
      label = 28;
      break;
     }
     $167 = $i;
     $168 = $o1;
     $169 = ((($168)) + 4|0);
     $170 = (($169) + ($167)|0);
     $171 = HEAP8[$170>>0]|0;
     $172 = $171&255;
     $173 = $i;
     $174 = $o2;
     $175 = ((($174)) + 4|0);
     $176 = (($175) + ($173)|0);
     $177 = HEAP8[$176>>0]|0;
     $178 = $177&255;
     $179 = ($172|0)>($178|0);
     if ($179) {
      label = 30;
      break;
     }
     $180 = $i;
     $181 = (($180) + -1)|0;
     $i = $181;
    }
    if ((label|0) == 28) {
     $0 = -1;
     $212 = $0;
     STACKTOP = sp;return ($212|0);
    }
    else if ((label|0) == 30) {
     $0 = 1;
     $212 = $0;
     STACKTOP = sp;return ($212|0);
    }
   } else {
    $i = 0;
    while(1) {
     $182 = $i;
     $183 = ($182|0)<(4);
     if (!($183)) {
      break L36;
     }
     $184 = $i;
     $185 = $o1;
     $186 = ((($185)) + 4|0);
     $187 = (($186) + ($184)|0);
     $188 = HEAP8[$187>>0]|0;
     $189 = $188&255;
     $190 = $i;
     $191 = $o2;
     $192 = ((($191)) + 4|0);
     $193 = (($192) + ($190)|0);
     $194 = HEAP8[$193>>0]|0;
     $195 = $194&255;
     $196 = ($189|0)<($195|0);
     if ($196) {
      label = 35;
      break;
     }
     $197 = $i;
     $198 = $o1;
     $199 = ((($198)) + 4|0);
     $200 = (($199) + ($197)|0);
     $201 = HEAP8[$200>>0]|0;
     $202 = $201&255;
     $203 = $i;
     $204 = $o2;
     $205 = ((($204)) + 4|0);
     $206 = (($205) + ($203)|0);
     $207 = HEAP8[$206>>0]|0;
     $208 = $207&255;
     $209 = ($202|0)>($208|0);
     if ($209) {
      label = 37;
      break;
     }
     $210 = $i;
     $211 = (($210) + 1)|0;
     $i = $211;
    }
    if ((label|0) == 35) {
     $0 = -1;
     $212 = $0;
     STACKTOP = sp;return ($212|0);
    }
    else if ((label|0) == 37) {
     $0 = 1;
     $212 = $0;
     STACKTOP = sp;return ($212|0);
    }
   }
  }
 } while(0);
 $0 = 0;
 $212 = $0;
 STACKTOP = sp;return ($212|0);
}
function __node_at_list($coll,$index) {
 $coll = $coll|0;
 $index = $index|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $head = 0, $left = 0, $n = 0, $result = 0, $right = 0, $tail = 0, $tmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $coll;
 $1 = $index;
 $result = 0;
 $tmp = 0;
 $n = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 if (!($3)) {
  ___assert_fail((5397|0),(4322|0),7856,(10266|0));
  // unreachable;
 }
 $4 = $0;
 __fill_ranged($4);
 $5 = $1;
 $6 = ($5|0)>=(0);
 if (!($6)) {
  $167 = $result;
  STACKTOP = sp;return ($167|0);
 }
 $7 = $1;
 $8 = $0;
 $9 = ((($8)) + 31|0);
 $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
 $11 = ($7|0)<($10|0);
 if (!($11)) {
  $167 = $result;
  STACKTOP = sp;return ($167|0);
 }
 $head = 0;
 $12 = $0;
 $13 = ((($12)) + 27|0);
 $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
 $15 = (($14|0) / 2)&-1;
 $left = $15;
 $16 = $0;
 $17 = ((($16)) + 27|0);
 $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
 $19 = $0;
 $20 = ((($19)) + 31|0);
 $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
 $22 = $0;
 $23 = ((($22)) + 27|0);
 $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
 $25 = (($21) - ($24))|0;
 $26 = (($25|0) / 2)&-1;
 $27 = (($18) + ($26))|0;
 $right = $27;
 $28 = $0;
 $29 = ((($28)) + 31|0);
 $30 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8)|(HEAPU8[$29+2>>0]<<16)|(HEAPU8[$29+3>>0]<<24);
 $31 = (($30) - 1)|0;
 $tail = $31;
 $32 = $0;
 $33 = ((($32)) + 23|0);
 $34 = HEAPU8[$33>>0]|(HEAPU8[$33+1>>0]<<8)|(HEAPU8[$33+2>>0]<<16)|(HEAPU8[$33+3>>0]<<24);
 $35 = ($34|0)!=(0|0);
 $36 = $1;
 if (!($35)) {
  $n = $36;
  $144 = $0;
  $145 = ((($144)) + 19|0);
  $146 = HEAPU8[$145>>0]|(HEAPU8[$145+1>>0]<<8)|(HEAPU8[$145+2>>0]<<16)|(HEAPU8[$145+3>>0]<<24);
  $147 = ((($146)) + 8|0);
  $148 = HEAPU8[$147>>0]|(HEAPU8[$147+1>>0]<<8)|(HEAPU8[$147+2>>0]<<16)|(HEAPU8[$147+3>>0]<<24);
  $tmp = $148;
  while(1) {
   $149 = $tmp;
   $150 = ($149|0)!=(0|0);
   $151 = $n;
   $152 = ($151|0)!=(0);
   $153 = $150 ? $152 : 0;
   $154 = $tmp;
   if (!($153)) {
    break;
   }
   $155 = ((($154)) + 8|0);
   $156 = HEAPU8[$155>>0]|(HEAPU8[$155+1>>0]<<8)|(HEAPU8[$155+2>>0]<<16)|(HEAPU8[$155+3>>0]<<24);
   $tmp = $156;
   $157 = $n;
   $158 = (($157) + -1)|0;
   $n = $158;
  }
  $159 = ($154|0)!=(0|0);
  if (!($159)) {
   $167 = $result;
   STACKTOP = sp;return ($167|0);
  }
  $160 = $tmp;
  $result = $160;
  $161 = $tmp;
  $162 = $0;
  $163 = ((($162)) + 23|0);
  HEAP8[$163>>0]=$161&255;HEAP8[$163+1>>0]=($161>>8)&255;HEAP8[$163+2>>0]=($161>>16)&255;HEAP8[$163+3>>0]=$161>>24;
  $164 = $1;
  $165 = $0;
  $166 = ((($165)) + 27|0);
  HEAP8[$166>>0]=$164&255;HEAP8[$166+1>>0]=($164>>8)&255;HEAP8[$166+2>>0]=($164>>16)&255;HEAP8[$166+3>>0]=$164>>24;
  $167 = $result;
  STACKTOP = sp;return ($167|0);
 }
 $37 = $head;
 $38 = ($36|0)>=($37|0);
 if ($38) {
  $39 = $1;
  $40 = $left;
  $41 = ($39|0)<($40|0);
  if ($41) {
   $42 = $1;
   $n = $42;
   $43 = $0;
   $44 = ((($43)) + 19|0);
   $45 = HEAPU8[$44>>0]|(HEAPU8[$44+1>>0]<<8)|(HEAPU8[$44+2>>0]<<16)|(HEAPU8[$44+3>>0]<<24);
   $46 = ((($45)) + 8|0);
   $47 = HEAPU8[$46>>0]|(HEAPU8[$46+1>>0]<<8)|(HEAPU8[$46+2>>0]<<16)|(HEAPU8[$46+3>>0]<<24);
   $tmp = $47;
   while(1) {
    $48 = $tmp;
    $49 = ($48|0)!=(0|0);
    $50 = $n;
    $51 = ($50|0)!=(0);
    $52 = $49 ? $51 : 0;
    $53 = $tmp;
    if (!($52)) {
     break;
    }
    $54 = ((($53)) + 8|0);
    $55 = HEAPU8[$54>>0]|(HEAPU8[$54+1>>0]<<8)|(HEAPU8[$54+2>>0]<<16)|(HEAPU8[$54+3>>0]<<24);
    $tmp = $55;
    $56 = $n;
    $57 = (($56) + -1)|0;
    $n = $57;
   }
   $58 = ($53|0)!=(0|0);
   if (!($58)) {
    $167 = $result;
    STACKTOP = sp;return ($167|0);
   }
   $59 = $tmp;
   $result = $59;
   $60 = $tmp;
   $61 = $0;
   $62 = ((($61)) + 23|0);
   HEAP8[$62>>0]=$60&255;HEAP8[$62+1>>0]=($60>>8)&255;HEAP8[$62+2>>0]=($60>>16)&255;HEAP8[$62+3>>0]=$60>>24;
   $63 = $1;
   $64 = $0;
   $65 = ((($64)) + 27|0);
   HEAP8[$65>>0]=$63&255;HEAP8[$65+1>>0]=($63>>8)&255;HEAP8[$65+2>>0]=($63>>16)&255;HEAP8[$65+3>>0]=$63>>24;
   $167 = $result;
   STACKTOP = sp;return ($167|0);
  }
 }
 $66 = $1;
 $67 = $left;
 $68 = ($66|0)>=($67|0);
 if ($68) {
  $69 = $1;
  $70 = $right;
  $71 = ($69|0)<=($70|0);
  if ($71) {
   while(1) {
    $72 = $1;
    $73 = $0;
    $74 = ((($73)) + 27|0);
    $75 = HEAPU8[$74>>0]|(HEAPU8[$74+1>>0]<<8)|(HEAPU8[$74+2>>0]<<16)|(HEAPU8[$74+3>>0]<<24);
    $76 = ($72|0)!=($75|0);
    if (!($76)) {
     break;
    }
    $77 = $1;
    $78 = $0;
    $79 = ((($78)) + 27|0);
    $80 = HEAPU8[$79>>0]|(HEAPU8[$79+1>>0]<<8)|(HEAPU8[$79+2>>0]<<16)|(HEAPU8[$79+3>>0]<<24);
    $81 = ($77|0)>($80|0);
    if ($81) {
     $82 = $0;
     $83 = ((($82)) + 23|0);
     $84 = HEAPU8[$83>>0]|(HEAPU8[$83+1>>0]<<8)|(HEAPU8[$83+2>>0]<<16)|(HEAPU8[$83+3>>0]<<24);
     $85 = ((($84)) + 8|0);
     $86 = HEAPU8[$85>>0]|(HEAPU8[$85+1>>0]<<8)|(HEAPU8[$85+2>>0]<<16)|(HEAPU8[$85+3>>0]<<24);
     $87 = $0;
     $88 = ((($87)) + 23|0);
     HEAP8[$88>>0]=$86&255;HEAP8[$88+1>>0]=($86>>8)&255;HEAP8[$88+2>>0]=($86>>16)&255;HEAP8[$88+3>>0]=$86>>24;
     $89 = $0;
     $90 = ((($89)) + 27|0);
     $91 = HEAPU8[$90>>0]|(HEAPU8[$90+1>>0]<<8)|(HEAPU8[$90+2>>0]<<16)|(HEAPU8[$90+3>>0]<<24);
     $92 = (($91) + 1)|0;
     HEAP8[$90>>0]=$92&255;HEAP8[$90+1>>0]=($92>>8)&255;HEAP8[$90+2>>0]=($92>>16)&255;HEAP8[$90+3>>0]=$92>>24;
     continue;
    }
    $93 = $1;
    $94 = $0;
    $95 = ((($94)) + 27|0);
    $96 = HEAPU8[$95>>0]|(HEAPU8[$95+1>>0]<<8)|(HEAPU8[$95+2>>0]<<16)|(HEAPU8[$95+3>>0]<<24);
    $97 = ($93|0)<($96|0);
    if (!($97)) {
     continue;
    }
    $98 = $0;
    $99 = ((($98)) + 23|0);
    $100 = HEAPU8[$99>>0]|(HEAPU8[$99+1>>0]<<8)|(HEAPU8[$99+2>>0]<<16)|(HEAPU8[$99+3>>0]<<24);
    $101 = ((($100)) + 4|0);
    $102 = HEAPU8[$101>>0]|(HEAPU8[$101+1>>0]<<8)|(HEAPU8[$101+2>>0]<<16)|(HEAPU8[$101+3>>0]<<24);
    $103 = $0;
    $104 = ((($103)) + 23|0);
    HEAP8[$104>>0]=$102&255;HEAP8[$104+1>>0]=($102>>8)&255;HEAP8[$104+2>>0]=($102>>16)&255;HEAP8[$104+3>>0]=$102>>24;
    $105 = $0;
    $106 = ((($105)) + 27|0);
    $107 = HEAPU8[$106>>0]|(HEAPU8[$106+1>>0]<<8)|(HEAPU8[$106+2>>0]<<16)|(HEAPU8[$106+3>>0]<<24);
    $108 = (($107) + -1)|0;
    HEAP8[$106>>0]=$108&255;HEAP8[$106+1>>0]=($108>>8)&255;HEAP8[$106+2>>0]=($108>>16)&255;HEAP8[$106+3>>0]=$108>>24;
   }
   $109 = $0;
   $110 = ((($109)) + 23|0);
   $111 = HEAPU8[$110>>0]|(HEAPU8[$110+1>>0]<<8)|(HEAPU8[$110+2>>0]<<16)|(HEAPU8[$110+3>>0]<<24);
   $result = $111;
   $167 = $result;
   STACKTOP = sp;return ($167|0);
  }
 }
 $112 = $1;
 $113 = $right;
 $114 = ($112|0)>($113|0);
 if (!($114)) {
  ___assert_fail((5378|0),(4322|0),7906,(10266|0));
  // unreachable;
 }
 $115 = $1;
 $116 = $tail;
 $117 = ($115|0)<=($116|0);
 if (!($117)) {
  ___assert_fail((5378|0),(4322|0),7906,(10266|0));
  // unreachable;
 }
 $118 = $tail;
 $119 = $1;
 $120 = (($118) - ($119))|0;
 $n = $120;
 $121 = $0;
 $122 = ((($121)) + 19|0);
 $123 = HEAPU8[$122>>0]|(HEAPU8[$122+1>>0]<<8)|(HEAPU8[$122+2>>0]<<16)|(HEAPU8[$122+3>>0]<<24);
 $124 = ((($123)) + 4|0);
 $125 = HEAPU8[$124>>0]|(HEAPU8[$124+1>>0]<<8)|(HEAPU8[$124+2>>0]<<16)|(HEAPU8[$124+3>>0]<<24);
 $tmp = $125;
 while(1) {
  $126 = $tmp;
  $127 = ($126|0)!=(0|0);
  $128 = $n;
  $129 = ($128|0)!=(0);
  $130 = $127 ? $129 : 0;
  $131 = $tmp;
  if (!($130)) {
   break;
  }
  $132 = ((($131)) + 4|0);
  $133 = HEAPU8[$132>>0]|(HEAPU8[$132+1>>0]<<8)|(HEAPU8[$132+2>>0]<<16)|(HEAPU8[$132+3>>0]<<24);
  $tmp = $133;
  $134 = $n;
  $135 = (($134) + -1)|0;
  $n = $135;
 }
 $136 = ($131|0)!=(0|0);
 if (!($136)) {
  $167 = $result;
  STACKTOP = sp;return ($167|0);
 }
 $137 = $tmp;
 $result = $137;
 $138 = $tmp;
 $139 = $0;
 $140 = ((($139)) + 23|0);
 HEAP8[$140>>0]=$138&255;HEAP8[$140+1>>0]=($138>>8)&255;HEAP8[$140+2>>0]=($138>>16)&255;HEAP8[$140+3>>0]=$138>>24;
 $141 = $1;
 $142 = $0;
 $143 = ((($142)) + 27|0);
 HEAP8[$143>>0]=$141&255;HEAP8[$143+1>>0]=($141>>8)&255;HEAP8[$143+2>>0]=($141>>16)&255;HEAP8[$143+3>>0]=$141>>24;
 $167 = $result;
 STACKTOP = sp;return ($167|0);
}
function __ls_remove($list,$node,$op) {
 $list = $list|0;
 $node = $node|0;
 $op = $op|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $list;
 $1 = $node;
 $2 = $op;
 $result = 0;
 $3 = $0;
 $4 = ($3|0)!=(0|0);
 $5 = $1;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if (!($or$cond)) {
  ___assert_fail((10242|0),(4322|0),2522,(10255|0));
  // unreachable;
 }
 $7 = $1;
 $8 = ((($7)) + 4|0);
 $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
 $10 = ($9|0)!=(0|0);
 if ($10) {
  $11 = $1;
  $12 = ((($11)) + 8|0);
  $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
  $14 = $1;
  $15 = ((($14)) + 4|0);
  $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
  $17 = ((($16)) + 8|0);
  HEAP8[$17>>0]=$13&255;HEAP8[$17+1>>0]=($13>>8)&255;HEAP8[$17+2>>0]=($13>>16)&255;HEAP8[$17+3>>0]=$13>>24;
 }
 $18 = $1;
 $19 = ((($18)) + 8|0);
 $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8)|(HEAPU8[$19+2>>0]<<16)|(HEAPU8[$19+3>>0]<<24);
 $21 = ($20|0)!=(0|0);
 if ($21) {
  $22 = $1;
  $23 = ((($22)) + 4|0);
  $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
  $25 = $1;
  $26 = ((($25)) + 8|0);
  $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
  $28 = ((($27)) + 4|0);
  HEAP8[$28>>0]=$24&255;HEAP8[$28+1>>0]=($24>>8)&255;HEAP8[$28+2>>0]=($24>>16)&255;HEAP8[$28+3>>0]=$24>>24;
 }
 $29 = $0;
 $30 = ((($29)) + 4|0);
 $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8)|(HEAPU8[$30+2>>0]<<16)|(HEAPU8[$30+3>>0]<<24);
 $32 = $1;
 $33 = ($31|0)==($32|0);
 if ($33) {
  $34 = $1;
  $35 = ((($34)) + 4|0);
  $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
  $37 = $0;
  $38 = ((($37)) + 4|0);
  HEAP8[$38>>0]=$36&255;HEAP8[$38+1>>0]=($36>>8)&255;HEAP8[$38+2>>0]=($36>>16)&255;HEAP8[$38+3>>0]=$36>>24;
 }
 $39 = $0;
 $40 = ((($39)) + 4|0);
 $41 = HEAPU8[$40>>0]|(HEAPU8[$40+1>>0]<<8)|(HEAPU8[$40+2>>0]<<16)|(HEAPU8[$40+3>>0]<<24);
 $42 = $0;
 $43 = ($41|0)==($42|0);
 if ($43) {
  $44 = $0;
  $45 = ((($44)) + 4|0);
  HEAP8[$45>>0]=0&255;HEAP8[$45+1>>0]=(0>>8)&255;HEAP8[$45+2>>0]=(0>>16)&255;HEAP8[$45+3>>0]=0>>24;
 }
 $46 = $2;
 $47 = ($46|0)!=(0|0);
 if ($47) {
  $48 = $2;
  $49 = $1;
  $50 = HEAPU8[$49>>0]|(HEAPU8[$49+1>>0]<<8)|(HEAPU8[$49+2>>0]<<16)|(HEAPU8[$49+3>>0]<<24);
  $51 = $1;
  $52 = ((($51)) + 12|0);
  $53 = HEAPU8[$52>>0]|(HEAPU8[$52+1>>0]<<8)|(HEAPU8[$52+2>>0]<<16)|(HEAPU8[$52+3>>0]<<24);
  (FUNCTION_TABLE_iii[$48 & 255]($50,$53)|0);
 }
 $54 = $1;
 $55 = ($54|0)!=(0|0);
 if ($55) {
  $56 = $1;
  _mb_free($56);
  $1 = 0;
  $57 = $result;
  $58 = (($57) + 1)|0;
  $result = $58;
  $59 = $0;
  $60 = HEAPU8[$59>>0]|(HEAPU8[$59+1>>0]<<8)|(HEAPU8[$59+2>>0]<<16)|(HEAPU8[$59+3>>0]<<24);
  $61 = ((($60)) + -1|0);
  $62 = $0;
  HEAP8[$62>>0]=$61&255;HEAP8[$62+1>>0]=($61>>8)&255;HEAP8[$62+2>>0]=($61>>16)&255;HEAP8[$62+3>>0]=$61>>24;
  $63 = $result;
  STACKTOP = sp;return ($63|0);
 } else {
  ___assert_fail((4369|0),(4322|0),2534,(10255|0));
  // unreachable;
 }
 return (0)|0;
}
function __ht_hash_object($ht,$d) {
 $ht = $ht|0;
 $d = $d|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $ast = 0, $h = 0, $i = 0, $ignored = 0, $o = 0, $result = 0, $s = 0, $self = 0, $tmp = 0, $va = 0, $val = 0, dest = 0;
 var label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $val = sp + 64|0;
 $ast = sp + 48|0;
 $tmp = sp + 4|0;
 $va = sp + 40|0;
 $0 = $ht;
 $1 = $d;
 $result = 0;
 $2 = $0;
 $self = $2;
 $3 = $1;
 $o = $3;
 $i = 0;
 $h = 0;
 $4 = $0;
 $5 = ($4|0)!=(0|0);
 if (!($5)) {
  ___assert_fail((9706|0),(4322|0),2754,(10516|0));
  // unreachable;
 }
 $6 = $o;
 $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
 $h = $7;
 $8 = $o;
 $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
 L4: do {
  switch ($9|0) {
  case 4:  {
   $10 = $h;
   $11 = ($10*5)|0;
   $12 = $0;
   $13 = $o;
   $14 = ((($13)) + 4|0);
   $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
   $16 = (__ht_hash_string($12,$15)|0);
   $17 = (($11) + ($16))|0;
   $h = $17;
   $18 = $self;
   $19 = ((($18)) + 12|0);
   $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8)|(HEAPU8[$19+2>>0]<<16)|(HEAPU8[$19+3>>0]<<24);
   $21 = ($20|0)==(1);
   if ($21) {
    $result = 0;
    $127 = $result;
    STACKTOP = sp;return ($127|0);
   } else {
    $22 = $h;
    $23 = $self;
    $24 = ((($23)) + 12|0);
    $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
    $26 = (($22>>>0) % ($25>>>0))&-1;
    $result = $26;
    $127 = $result;
    STACKTOP = sp;return ($127|0);
   }
   break;
  }
  case 16:  {
   $27 = $o;
   $28 = ((($27)) + 4|0);
   $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
   $30 = ((($29)) + 33|0);
   $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8)|(HEAPU8[$30+2>>0]<<16)|(HEAPU8[$30+3>>0]<<24);
   $32 = ($31|0)!=(0|0);
   if ($32) {
    $33 = $o;
    $34 = ((($33)) + 4|0);
    $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
    $36 = ((($35)) + 13|0);
    $37 = HEAPU8[$36>>0]|(HEAPU8[$36+1>>0]<<8)|(HEAPU8[$36+2>>0]<<16)|(HEAPU8[$36+3>>0]<<24);
    $s = $37;
    HEAP32[$tmp>>2] = $ast;
    $38 = ((($va)) + 4|0);
    ;HEAP8[$38>>0]=0|0;HEAP8[$38+1>>0]=0|0;HEAP8[$38+2>>0]=0|0;HEAP8[$38+3>>0]=0|0;
    HEAP8[$va>>0]=0&255;HEAP8[$va+1>>0]=(0>>8)&255;HEAP8[$va+2>>0]=(0>>16)&255;HEAP8[$va+3>>0]=0>>24;
    dest=$ast; stop=dest+16|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
    $39 = $s;
    $40 = $o;
    $41 = ((($40)) + 4|0);
    $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
    $43 = ((($42)) + 33|0);
    $44 = HEAPU8[$43>>0]|(HEAPU8[$43+1>>0]<<8)|(HEAPU8[$43+2>>0]<<16)|(HEAPU8[$43+3>>0]<<24);
    $45 = (__eval_routine($39,$tmp,$va,1,$44,162,163)|0);
    $46 = ($45|0)==(0);
    if ($46) {
     dest=$val; stop=dest+17|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
     HEAP8[$val>>0]=0&255;HEAP8[$val+1>>0]=(0>>8)&255;HEAP8[$val+2>>0]=(0>>16)&255;HEAP8[$val+3>>0]=0>>24;
     $47 = $s;
     $48 = ((($47)) + 75|0);
     $49 = HEAPU8[$48>>0]|(HEAPU8[$48+1>>0]<<8)|(HEAPU8[$48+2>>0]<<16)|(HEAPU8[$48+3>>0]<<24);
     $50 = ((($49)) + 20|0);
     (__public_value_to_internal_object($50,$val)|0);
     $51 = HEAPU8[$val>>0]|(HEAPU8[$val+1>>0]<<8)|(HEAPU8[$val+2>>0]<<16)|(HEAPU8[$val+3>>0]<<24);
     $52 = ($51|0)!=(2);
     if (!($52)) {
      $o = $val;
      break L4;
     }
     $ignored = 0;
     $53 = $o;
     $54 = ($53|0)!=(0|0);
     $55 = $s;
     $56 = $s;
     $57 = ((($56)) + 67|0);
     $58 = HEAPU8[$57>>0]|(HEAPU8[$57+1>>0]<<8)|(HEAPU8[$57+2>>0]<<16)|(HEAPU8[$57+3>>0]<<24);
     $59 = (__set_current_error($55,16,$58)|0);
     $60 = ($59<<24>>24)!=(0);
     if ($54) {
      if (!($60)) {
       $127 = $result;
       STACKTOP = sp;return ($127|0);
      }
      $61 = $s;
      $62 = $o;
      $63 = ((($62)) + 9|0);
      $64 = HEAPU8[$63>>0]|(HEAPU8[$63+1>>0]<<8)|(HEAPU8[$63+2>>0]<<16)|(HEAPU8[$63+3>>0]<<24);
      $65 = $o;
      $66 = ((($65)) + 13|0);
      $67 = HEAPU8[$66>>0]|(HEAPU8[$66+1>>0]<<8);
      $68 = $o;
      $69 = ((($68)) + 15|0);
      $70 = HEAPU8[$69>>0]|(HEAPU8[$69+1>>0]<<8);
      __set_error_pos($61,$64,$67,$70);
      $ignored = 3;
      $127 = $result;
      STACKTOP = sp;return ($127|0);
     } else {
      if (!($60)) {
       $127 = $result;
       STACKTOP = sp;return ($127|0);
      }
      $71 = $s;
      __set_error_pos($71,0,0,0);
      $ignored = 3;
      $127 = $result;
      STACKTOP = sp;return ($127|0);
     }
    }
   }
   break;
  }
  case 7:  {
   $72 = $o;
   $73 = ((($72)) + 4|0);
   $74 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
   $75 = ((($74)) + 29|0);
   $76 = HEAPU8[$75>>0]|(HEAPU8[$75+1>>0]<<8)|(HEAPU8[$75+2>>0]<<16)|(HEAPU8[$75+3>>0]<<24);
   $77 = ($76|0)!=(0|0);
   if ($77) {
    $78 = $self;
    $79 = ((($78)) + 12|0);
    $80 = HEAPU8[$79>>0]|(HEAPU8[$79+1>>0]<<8)|(HEAPU8[$79+2>>0]<<16)|(HEAPU8[$79+3>>0]<<24);
    $81 = ($80|0)==(1);
    if ($81) {
     $result = 0;
     $127 = $result;
     STACKTOP = sp;return ($127|0);
    } else {
     $82 = $h;
     $83 = ($82*5)|0;
     $84 = $o;
     $85 = ((($84)) + 4|0);
     $86 = HEAPU8[$85>>0]|(HEAPU8[$85+1>>0]<<8)|(HEAPU8[$85+2>>0]<<16)|(HEAPU8[$85+3>>0]<<24);
     $87 = ((($86)) + 29|0);
     $88 = HEAPU8[$87>>0]|(HEAPU8[$87+1>>0]<<8)|(HEAPU8[$87+2>>0]<<16)|(HEAPU8[$87+3>>0]<<24);
     $89 = $o;
     $90 = ((($89)) + 4|0);
     $91 = HEAPU8[$90>>0]|(HEAPU8[$90+1>>0]<<8)|(HEAPU8[$90+2>>0]<<16)|(HEAPU8[$90+3>>0]<<24);
     $92 = ((($91)) + 13|0);
     $93 = HEAPU8[$92>>0]|(HEAPU8[$92+1>>0]<<8)|(HEAPU8[$92+2>>0]<<16)|(HEAPU8[$92+3>>0]<<24);
     $94 = $o;
     $95 = ((($94)) + 4|0);
     $96 = HEAPU8[$95>>0]|(HEAPU8[$95+1>>0]<<8)|(HEAPU8[$95+2>>0]<<16)|(HEAPU8[$95+3>>0]<<24);
     $97 = ((($96)) + 17|0);
     $98 = HEAPU8[$97>>0]|(HEAPU8[$97+1>>0]<<8)|(HEAPU8[$97+2>>0]<<16)|(HEAPU8[$97+3>>0]<<24);
     $99 = (FUNCTION_TABLE_iii[$88 & 255]($93,$98)|0);
     $100 = (($83) + ($99))|0;
     $h = $100;
     $101 = $h;
     $102 = $self;
     $103 = ((($102)) + 12|0);
     $104 = HEAPU8[$103>>0]|(HEAPU8[$103+1>>0]<<8)|(HEAPU8[$103+2>>0]<<16)|(HEAPU8[$103+3>>0]<<24);
     $105 = (($101>>>0) % ($104>>>0))&-1;
     $result = $105;
     $127 = $result;
     STACKTOP = sp;return ($127|0);
    }
   }
   break;
  }
  default: {
  }
  }
 } while(0);
 $106 = $self;
 $107 = ((($106)) + 12|0);
 $108 = HEAPU8[$107>>0]|(HEAPU8[$107+1>>0]<<8)|(HEAPU8[$107+2>>0]<<16)|(HEAPU8[$107+3>>0]<<24);
 $109 = ($108|0)==(1);
 if ($109) {
  $result = 0;
  $127 = $result;
  STACKTOP = sp;return ($127|0);
 }
 $i = 0;
 while(1) {
  $110 = $i;
  $111 = ($110>>>0)<(4);
  $112 = $h;
  if (!($111)) {
   break;
  }
  $113 = ($112*5)|0;
  $114 = $i;
  $115 = $o;
  $116 = ((($115)) + 4|0);
  $117 = (($116) + ($114)|0);
  $118 = HEAP8[$117>>0]|0;
  $119 = $118&255;
  $120 = (($113) + ($119))|0;
  $h = $120;
  $121 = $i;
  $122 = (($121) + 1)|0;
  $i = $122;
 }
 $123 = $self;
 $124 = ((($123)) + 12|0);
 $125 = HEAPU8[$124>>0]|(HEAPU8[$124+1>>0]<<8)|(HEAPU8[$124+2>>0]<<16)|(HEAPU8[$124+3>>0]<<24);
 $126 = (($112>>>0) % ($125>>>0))&-1;
 $result = $126;
 $127 = $result;
 STACKTOP = sp;return ($127|0);
}
function __destroy_object_with_extra($data,$extra) {
 $data = $data|0;
 $extra = $extra|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $obj = 0;
 var $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $data;
 $1 = $extra;
 $result = -1;
 $obj = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 if (!($3)) {
  ___assert_fail((6381|0),(4322|0),10075,(10489|0));
  // unreachable;
 }
 $4 = $0;
 $obj = $4;
 $5 = $obj;
 $6 = (__dispose_object($5)|0);
 $7 = ($6|0)!=(0);
 if (!($7)) {
  $18 = $result;
  STACKTOP = sp;return ($18|0);
 }
 $8 = $obj;
 $9 = ($8|0)!=(0|0);
 if (!($9)) {
  ___assert_fail((4369|0),(4322|0),10080,(10489|0));
  // unreachable;
 }
 $10 = $obj;
 _mb_free($10);
 $obj = 0;
 $11 = $1;
 $obj = $11;
 $12 = $obj;
 $13 = (__dispose_object($12)|0);
 $14 = ($13|0)!=(0);
 if (!($14)) {
  $18 = $result;
  STACKTOP = sp;return ($18|0);
 }
 $15 = $obj;
 $16 = ($15|0)!=(0|0);
 if (!($16)) {
  ___assert_fail((4369|0),(4322|0),10084,(10489|0));
  // unreachable;
 }
 $17 = $obj;
 _mb_free($17);
 $obj = 0;
 $18 = $result;
 STACKTOP = sp;return ($18|0);
}
function __unref_dict($ref,$data) {
 $ref = $ref|0;
 $data = $data|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $ref;
 $1 = $data;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 if (!($3)) {
  ___assert_fail((9745|0),(4322|0),7710,(10463|0));
  // unreachable;
 }
 $4 = $0;
 $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($6|0)==(1);
 if (!($7)) {
  STACKTOP = sp;return;
 }
 $8 = $1;
 __destroy_dict($8);
 STACKTOP = sp;return;
}
function __destroy_dict($c) {
 $c = $c|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $c;
 $1 = $0;
 $2 = ($1|0)!=(0|0);
 if (!($2)) {
  ___assert_fail((4883|0),(4322|0),7555,(10475|0));
  // unreachable;
 }
 $3 = $0;
 $4 = ((($3)) + 19|0);
 $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
 (__ht_foreach($5,152)|0);
 $6 = $0;
 $7 = ((($6)) + 19|0);
 $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
 __ht_destroy($8);
 $9 = $0;
 __destroy_ref($9);
 $10 = $0;
 $11 = ($10|0)!=(0|0);
 if ($11) {
  $12 = $0;
  _mb_free($12);
  $0 = 0;
  STACKTOP = sp;return;
 } else {
  ___assert_fail((4369|0),(4322|0),7560,(10475|0));
  // unreachable;
 }
}
function __unref_list($ref,$data) {
 $ref = $ref|0;
 $data = $data|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $ref;
 $1 = $data;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 if (!($3)) {
  ___assert_fail((9745|0),(4322|0),7702,(10545|0));
  // unreachable;
 }
 $4 = $0;
 $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($6|0)==(1);
 if (!($7)) {
  STACKTOP = sp;return;
 }
 $8 = $1;
 __destroy_list($8);
 STACKTOP = sp;return;
}
function __destroy_list($c) {
 $c = $c|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $c;
 $1 = $0;
 $2 = ($1|0)!=(0|0);
 if (!($2)) {
  ___assert_fail((4883|0),(4322|0),7530,(10557|0));
  // unreachable;
 }
 $3 = $0;
 $4 = ((($3)) + 35|0);
 $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
 $6 = ($5|0)!=(0|0);
 do {
  if ($6) {
   $7 = $0;
   $8 = ((($7)) + 35|0);
   $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
   $10 = ($9|0)!=(0|0);
   if ($10) {
    $11 = $0;
    $12 = ((($11)) + 35|0);
    $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
    _mb_free($13);
    $14 = $0;
    $15 = ((($14)) + 35|0);
    HEAP8[$15>>0]=0&255;HEAP8[$15+1>>0]=(0>>8)&255;HEAP8[$15+2>>0]=(0>>16)&255;HEAP8[$15+3>>0]=0>>24;
    break;
   } else {
    ___assert_fail((4369|0),(4322|0),7532,(10557|0));
    // unreachable;
   }
  }
 } while(0);
 $16 = $0;
 $17 = ((($16)) + 19|0);
 $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
 (__ls_foreach($18,134)|0);
 $19 = $0;
 $20 = ((($19)) + 19|0);
 $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
 __ls_destroy($21);
 $22 = $0;
 __destroy_ref($22);
 $23 = $0;
 $24 = ($23|0)!=(0|0);
 if ($24) {
  $25 = $0;
  _mb_free($25);
  $0 = 0;
  STACKTOP = sp;return;
 } else {
  ___assert_fail((4369|0),(4322|0),7536,(10557|0));
  // unreachable;
 }
}
function __unref_array($ref,$data) {
 $ref = $ref|0;
 $data = $data|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $ref;
 $1 = $data;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 if (!($3)) {
  ___assert_fail((9745|0),(4322|0),7506,(10713|0));
  // unreachable;
 }
 $4 = $0;
 $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($6|0)==(1);
 if (!($7)) {
  STACKTOP = sp;return;
 }
 $8 = $1;
 __destroy_array($8);
 STACKTOP = sp;return;
}
function __destroy_array($arr) {
 $arr = $arr|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $arr;
 $1 = $0;
 $2 = ($1|0)!=(0|0);
 if (!($2)) {
  ___assert_fail((8576|0),(4322|0),7161,(10726|0));
  // unreachable;
 }
 $3 = $0;
 __clear_array($3);
 $4 = $0;
 $5 = ((($4)) + 17|0);
 $6 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
 $7 = ($6|0)!=(0|0);
 do {
  if ($7) {
   $8 = $0;
   $9 = ((($8)) + 17|0);
   $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
   $11 = ($10|0)!=(0|0);
   if ($11) {
    $12 = $0;
    $13 = ((($12)) + 17|0);
    $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
    _mb_free($14);
    $15 = $0;
    $16 = ((($15)) + 17|0);
    HEAP8[$16>>0]=0&255;HEAP8[$16+1>>0]=(0>>8)&255;HEAP8[$16+2>>0]=(0>>16)&255;HEAP8[$16+3>>0]=0>>24;
    break;
   } else {
    ___assert_fail((4369|0),(4322|0),7165,(10726|0));
    // unreachable;
   }
  }
 } while(0);
 $17 = $0;
 __destroy_ref($17);
 $18 = $0;
 $19 = ($18|0)!=(0|0);
 if ($19) {
  $20 = $0;
  _mb_free($20);
  $0 = 0;
  STACKTOP = sp;return;
 } else {
  ___assert_fail((4369|0),(4322|0),7175,(10726|0));
  // unreachable;
 }
}
function __reference_scope_by_class($s,$p,$c) {
 $s = $s|0;
 $p = $p|0;
 $c = $c|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $or$cond = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $p;
 $2 = $c;
 $result = 0;
 $3 = $0;
 $4 = ($3|0)!=(0|0);
 $5 = $1;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if (!($or$cond)) {
  ___assert_fail((8115|0),(4322|0),9291,(10834|0));
  // unreachable;
 }
 $7 = $1;
 $8 = ((($7)) + 4|0);
 $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
 $10 = ($9|0)==(2);
 if ($10) {
  $11 = $1;
  $12 = ((($11)) + 12|0);
  $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
  $1 = $13;
 }
 $14 = (__create_running_context(0)|0);
 $result = $14;
 $15 = $result;
 $16 = ((($15)) + 4|0);
 HEAP8[$16>>0]=2&255;HEAP8[$16+1>>0]=(2>>8)&255;HEAP8[$16+2>>0]=(2>>16)&255;HEAP8[$16+3>>0]=2>>24;
 $17 = $1;
 $18 = $result;
 $19 = ((($18)) + 12|0);
 HEAP8[$19>>0]=$17&255;HEAP8[$19+1>>0]=($17>>8)&255;HEAP8[$19+2>>0]=($17>>16)&255;HEAP8[$19+3>>0]=$17>>24;
 $20 = $result;
 STACKTOP = sp;return ($20|0);
}
function __unref_class($ref,$data) {
 $ref = $ref|0;
 $data = $data|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $ref;
 $1 = $data;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 if (!($3)) {
  ___assert_fail((9745|0),(4322|0),8343,(10910|0));
  // unreachable;
 }
 $4 = $0;
 $5 = ((($4)) + 13|0);
 $6 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
 $7 = ((($6)) + 12|0);
 $8 = HEAP8[$7>>0]|0;
 $9 = $8 & 1;
 $10 = ($9<<24>>24)!=(0);
 if ($10) {
  $11 = $0;
  $12 = ((($11)) + 13|0);
  $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
  $14 = $1;
  $15 = ((($14)) + 29|0);
  $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
  $17 = $1;
  __out_of_scope($13,$16,$17,0,0);
 }
 $18 = $0;
 $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
 $20 = HEAP32[$19>>2]|0;
 $21 = ($20|0)==(1);
 if (!($21)) {
  STACKTOP = sp;return;
 }
 $22 = $1;
 __destroy_class($22);
 STACKTOP = sp;return;
}
function __destroy_class($c) {
 $c = $c|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $c;
 $1 = $0;
 $2 = ($1|0)!=(0|0);
 if (!($2)) {
  ___assert_fail((4883|0),(4322|0),8354,(10923|0));
  // unreachable;
 }
 $3 = $0;
 $4 = ((($3)) + 25|0);
 $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
 $6 = ($5|0)!=(0|0);
 if ($6) {
  $7 = $0;
  $8 = ((($7)) + 13|0);
  $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
  $10 = $0;
  __unlink_meta_class($9,$10);
  $11 = $0;
  $12 = ((($11)) + 25|0);
  $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
  __ls_destroy($13);
 }
 $14 = $0;
 $15 = ((($14)) + 29|0);
 $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
 $17 = ((($16)) + 8|0);
 $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
 $19 = ($18|0)!=(0|0);
 if ($19) {
  $20 = $0;
  $21 = ((($20)) + 29|0);
  $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
  $23 = ((($22)) + 8|0);
  $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
  (__ht_foreach($24,134)|0);
  $25 = $0;
  $26 = ((($25)) + 29|0);
  $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
  $28 = ((($27)) + 8|0);
  $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
  __ht_destroy($29);
 }
 $30 = $0;
 $31 = ((($30)) + 29|0);
 $32 = HEAPU8[$31>>0]|(HEAPU8[$31+1>>0]<<8)|(HEAPU8[$31+2>>0]<<16)|(HEAPU8[$31+3>>0]<<24);
 $33 = ((($32)) + 32|0);
 $34 = HEAPU8[$33>>0]|(HEAPU8[$33+1>>0]<<8)|(HEAPU8[$33+2>>0]<<16)|(HEAPU8[$33+3>>0]<<24);
 $35 = ($34|0)!=(0|0);
 if ($35) {
  $36 = $0;
  $37 = ((($36)) + 29|0);
  $38 = HEAPU8[$37>>0]|(HEAPU8[$37+1>>0]<<8)|(HEAPU8[$37+2>>0]<<16)|(HEAPU8[$37+3>>0]<<24);
  $39 = ((($38)) + 32|0);
  $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8)|(HEAPU8[$39+2>>0]<<16)|(HEAPU8[$39+3>>0]<<24);
  __ls_destroy($40);
  $41 = $0;
  $42 = ((($41)) + 29|0);
  $43 = HEAPU8[$42>>0]|(HEAPU8[$42+1>>0]<<8)|(HEAPU8[$42+2>>0]<<16)|(HEAPU8[$42+3>>0]<<24);
  $44 = ((($43)) + 32|0);
  HEAP8[$44>>0]=0&255;HEAP8[$44+1>>0]=(0>>8)&255;HEAP8[$44+2>>0]=(0>>16)&255;HEAP8[$44+3>>0]=0>>24;
 }
 $45 = $0;
 $46 = ((($45)) + 29|0);
 $47 = HEAPU8[$46>>0]|(HEAPU8[$46+1>>0]<<8)|(HEAPU8[$46+2>>0]<<16)|(HEAPU8[$46+3>>0]<<24);
 $48 = ($47|0)!=(0|0);
 if (!($48)) {
  ___assert_fail((4369|0),(4322|0),8370,(10923|0));
  // unreachable;
 }
 $49 = $0;
 $50 = ((($49)) + 29|0);
 $51 = HEAPU8[$50>>0]|(HEAPU8[$50+1>>0]<<8)|(HEAPU8[$50+2>>0]<<16)|(HEAPU8[$50+3>>0]<<24);
 _mb_free($51);
 $52 = $0;
 $53 = ((($52)) + 29|0);
 HEAP8[$53>>0]=0&255;HEAP8[$53+1>>0]=(0>>8)&255;HEAP8[$53+2>>0]=(0>>16)&255;HEAP8[$53+3>>0]=0>>24;
 $54 = $0;
 __destroy_ref($54);
 $55 = $0;
 $56 = ((($55)) + 17|0);
 $57 = HEAPU8[$56>>0]|(HEAPU8[$56+1>>0]<<8)|(HEAPU8[$56+2>>0]<<16)|(HEAPU8[$56+3>>0]<<24);
 $58 = ($57|0)!=(0|0);
 if (!($58)) {
  ___assert_fail((4369|0),(4322|0),8372,(10923|0));
  // unreachable;
 }
 $59 = $0;
 $60 = ((($59)) + 17|0);
 $61 = HEAPU8[$60>>0]|(HEAPU8[$60+1>>0]<<8)|(HEAPU8[$60+2>>0]<<16)|(HEAPU8[$60+3>>0]<<24);
 _mb_free($61);
 $62 = $0;
 $63 = ((($62)) + 17|0);
 HEAP8[$63>>0]=0&255;HEAP8[$63+1>>0]=(0>>8)&255;HEAP8[$63+2>>0]=(0>>16)&255;HEAP8[$63+3>>0]=0>>24;
 $64 = $0;
 $65 = ($64|0)!=(0|0);
 if ($65) {
  $66 = $0;
  _mb_free($66);
  $0 = 0;
  STACKTOP = sp;return;
 } else {
  ___assert_fail((4369|0),(4322|0),8373,(10923|0));
  // unreachable;
 }
}
function __unlink_meta_class($s,$derived) {
 $s = $s|0;
 $derived = $derived|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $__lst = 0, $__opresult = 0, $__tmp = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $derived;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 if (!($or$cond)) {
  ___assert_fail((10938|0),(4322|0),8436,(10951|0));
  // unreachable;
 }
 $6 = $1;
 $7 = ((($6)) + 25|0);
 $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
 $__lst = $8;
 $__opresult = 0;
 $__tmp = 0;
 $9 = $1;
 $10 = ((($9)) + 25|0);
 $11 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
 $12 = ($11|0)!=(0|0);
 if (!($12)) {
  ___assert_fail((10970|0),(4322|0),8438,(10951|0));
  // unreachable;
 }
 $13 = $__lst;
 $14 = ((($13)) + 8|0);
 $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
 $__lst = $15;
 while(1) {
  $16 = $__lst;
  $17 = ($16|0)!=(0|0);
  if (!($17)) {
   label = 13;
   break;
  }
  $18 = $__lst;
  $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
  $20 = $__lst;
  $21 = ((($20)) + 12|0);
  $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
  $23 = $1;
  (__unlink_meta_instance($19,$22,$23)|0);
  $24 = $__lst;
  $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
  $26 = $__lst;
  $27 = ((($26)) + 12|0);
  $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
  $29 = (__do_nothing_on_object($25,$28)|0);
  $__opresult = $29;
  $30 = $__lst;
  $__tmp = $30;
  $31 = $__lst;
  $32 = ((($31)) + 8|0);
  $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
  $__lst = $33;
  $34 = $__opresult;
  $35 = (-1)==($34|0);
  if (!($35)) {
   continue;
  }
  $36 = $__lst;
  $37 = $__tmp;
  $38 = ((($37)) + 4|0);
  $39 = HEAPU8[$38>>0]|(HEAPU8[$38+1>>0]<<8)|(HEAPU8[$38+2>>0]<<16)|(HEAPU8[$38+3>>0]<<24);
  $40 = ((($39)) + 8|0);
  HEAP8[$40>>0]=$36&255;HEAP8[$40+1>>0]=($36>>8)&255;HEAP8[$40+2>>0]=($36>>16)&255;HEAP8[$40+3>>0]=$36>>24;
  $41 = $__lst;
  $42 = ($41|0)!=(0|0);
  if ($42) {
   $43 = $__tmp;
   $44 = ((($43)) + 4|0);
   $45 = HEAPU8[$44>>0]|(HEAPU8[$44+1>>0]<<8)|(HEAPU8[$44+2>>0]<<16)|(HEAPU8[$44+3>>0]<<24);
   $46 = $__lst;
   $47 = ((($46)) + 4|0);
   HEAP8[$47>>0]=$45&255;HEAP8[$47+1>>0]=($45>>8)&255;HEAP8[$47+2>>0]=($45>>16)&255;HEAP8[$47+3>>0]=$45>>24;
  }
  $48 = $__tmp;
  $49 = ($48|0)!=(0|0);
  if (!($49)) {
   label = 12;
   break;
  }
  $50 = $__tmp;
  _mb_free($50);
  $__tmp = 0;
  $51 = $1;
  $52 = ((($51)) + 25|0);
  $53 = HEAPU8[$52>>0]|(HEAPU8[$52+1>>0]<<8)|(HEAPU8[$52+2>>0]<<16)|(HEAPU8[$52+3>>0]<<24);
  $54 = HEAPU8[$53>>0]|(HEAPU8[$53+1>>0]<<8)|(HEAPU8[$53+2>>0]<<16)|(HEAPU8[$53+3>>0]<<24);
  $55 = ((($54)) + -1|0);
  $56 = $1;
  $57 = ((($56)) + 25|0);
  $58 = HEAPU8[$57>>0]|(HEAPU8[$57+1>>0]<<8)|(HEAPU8[$57+2>>0]<<16)|(HEAPU8[$57+3>>0]<<24);
  HEAP8[$58>>0]=$55&255;HEAP8[$58+1>>0]=($55>>8)&255;HEAP8[$58+2>>0]=($55>>16)&255;HEAP8[$58+3>>0]=$55>>24;
 }
 if ((label|0) == 12) {
  ___assert_fail((4369|0),(4322|0),8438,(10951|0));
  // unreachable;
 }
 else if ((label|0) == 13) {
  $59 = $1;
  $60 = ((($59)) + 25|0);
  $61 = HEAPU8[$60>>0]|(HEAPU8[$60+1>>0]<<8)|(HEAPU8[$60+2>>0]<<16)|(HEAPU8[$60+3>>0]<<24);
  __ls_clear($61);
  STACKTOP = sp;return;
 }
}
function __unlink_meta_instance($data,$extra,$derived) {
 $data = $data|0;
 $extra = $extra|0;
 $derived = $derived|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $base = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $data;
 $1 = $extra;
 $2 = $derived;
 $base = 0;
 $3 = $0;
 $4 = ($3|0)!=(0|0);
 $5 = $2;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if ($or$cond) {
  $7 = $0;
  $base = $7;
  $8 = $base;
  $9 = $base;
  (__unref($8,$9)|0);
  STACKTOP = sp;return 0;
 } else {
  ___assert_fail((10989|0),(4322|0),8447,(11005|0));
  // unreachable;
 }
 return (0)|0;
}
function __search_identifier_accessor($s,$scope,$n,$ht,$sp,$unknown_for_not_found) {
 $s = $s|0;
 $scope = $scope|0;
 $n = $n|0;
 $ht = $ht|0;
 $sp = $sp|0;
 $unknown_for_not_found = $unknown_for_not_found|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $acc = 0, $i = 0, $instance = 0, $j = 0, $nc = 0, $obj = 0, $or$cond = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $acc = sp + 48|0;
 $1 = $s;
 $2 = $scope;
 $3 = $n;
 $4 = $ht;
 $5 = $sp;
 $6 = $unknown_for_not_found;
 $result = 0;
 $obj = 0;
 $i = 0;
 $j = 0;
 $nc = 0;
 $instance = 0;
 $7 = $1;
 $8 = ($7|0)!=(0|0);
 $9 = $3;
 $10 = ($9|0)!=(0|0);
 $or$cond = $8 & $10;
 if (!($or$cond)) {
  ___assert_fail((5294|0),(4322|0),9660,(11061|0));
  // unreachable;
 }
 L4: while(1) {
  $11 = $i;
  $12 = ($11|0)==(0);
  if (!($12)) {
   $13 = $i;
   $14 = ($13|0)>(0);
   if (!($14)) {
    label = 29;
    break;
   }
   $15 = $i;
   $16 = (($15) - 1)|0;
   $17 = $3;
   $18 = (($17) + ($16)|0);
   $19 = HEAP8[$18>>0]|0;
   $20 = $19 << 24 >> 24;
   $21 = ($20|0)!=(0);
   if (!($21)) {
    label = 29;
    break;
   }
  }
  $22 = $i;
  $23 = $3;
  $24 = (($23) + ($22)|0);
  $25 = HEAP8[$24>>0]|0;
  $26 = $j;
  $27 = (($acc) + ($26)|0);
  HEAP8[$27>>0] = $25;
  $28 = $j;
  $29 = (($acc) + ($28)|0);
  $30 = HEAP8[$29>>0]|0;
  $31 = (__is_accessor_char($30)|0);
  $32 = $31&255;
  $33 = ($32|0)!=(0);
  if (!($33)) {
   $34 = $j;
   $35 = (($acc) + ($34)|0);
   $36 = HEAP8[$35>>0]|0;
   $37 = $36 << 24 >> 24;
   $38 = ($37|0)==(0);
   if (!($38)) {
    $98 = $j;
    $99 = (($98) + 1)|0;
    $j = $99;
    $100 = $i;
    $101 = (($100) + 1)|0;
    $i = $101;
    continue;
   }
  }
  $39 = $j;
  $40 = (($acc) + ($39)|0);
  HEAP8[$40>>0] = 0;
  $41 = $nc;
  $42 = (($41) + 1)|0;
  $nc = $42;
  $43 = $instance;
  $44 = ($43|0)!=(0|0);
  if ($44) {
   $45 = $1;
   $46 = $instance;
   $47 = $4;
   $48 = $5;
   $49 = (__search_identifier_in_class($45,$46,$acc,$47,$48)|0);
   $result = $49;
   $50 = $result;
   $51 = ($50|0)!=(0|0);
   if (!($51)) {
    $52 = $6;
    $53 = $52&255;
    $54 = ($53|0)!=(0);
    if ($54) {
     label = 12;
     break;
    }
   }
  } else {
   $56 = $nc;
   $57 = ($56|0)>(1);
   if ($57) {
    label = 14;
    break;
   }
   $58 = $1;
   $59 = $2;
   $60 = $4;
   $61 = $5;
   $62 = (__search_identifier_in_scope_chain($58,$59,$acc,0,$60,$61)|0);
   $result = $62;
  }
  $63 = $result;
  $64 = ($63|0)!=(0|0);
  if (!($64)) {
   label = 17;
   break;
  }
  $65 = $result;
  $66 = HEAPU8[$65>>0]|(HEAPU8[$65+1>>0]<<8)|(HEAPU8[$65+2>>0]<<16)|(HEAPU8[$65+3>>0]<<24);
  $obj = $66;
  $67 = $obj;
  $68 = ($67|0)!=(0|0);
  if (!($68)) {
   label = 19;
   break;
  }
  $69 = $obj;
  $70 = HEAPU8[$69>>0]|(HEAPU8[$69+1>>0]<<8)|(HEAPU8[$69+2>>0]<<16)|(HEAPU8[$69+3>>0]<<24);
  switch ($70|0) {
  case 9:  {
   $71 = $obj;
   $72 = ((($71)) + 4|0);
   $73 = HEAPU8[$72>>0]|(HEAPU8[$72+1>>0]<<8)|(HEAPU8[$72+2>>0]<<16)|(HEAPU8[$72+3>>0]<<24);
   $74 = ((($73)) + 4|0);
   $75 = HEAPU8[$74>>0]|(HEAPU8[$74+1>>0]<<8)|(HEAPU8[$74+2>>0]<<16)|(HEAPU8[$74+3>>0]<<24);
   $76 = HEAPU8[$75>>0]|(HEAPU8[$75+1>>0]<<8)|(HEAPU8[$75+2>>0]<<16)|(HEAPU8[$75+3>>0]<<24);
   $77 = ($76|0)==(7);
   if ($77) {
    label = 22;
    break L4;
   }
   $79 = $obj;
   $80 = ((($79)) + 4|0);
   $81 = HEAPU8[$80>>0]|(HEAPU8[$80+1>>0]<<8)|(HEAPU8[$80+2>>0]<<16)|(HEAPU8[$80+3>>0]<<24);
   $82 = ((($81)) + 4|0);
   $83 = HEAPU8[$82>>0]|(HEAPU8[$82+1>>0]<<8)|(HEAPU8[$82+2>>0]<<16)|(HEAPU8[$82+3>>0]<<24);
   $84 = HEAPU8[$83>>0]|(HEAPU8[$83+1>>0]<<8)|(HEAPU8[$83+2>>0]<<16)|(HEAPU8[$83+3>>0]<<24);
   $85 = ($84|0)==(16);
   if ($85) {
    $86 = $obj;
    $87 = ((($86)) + 4|0);
    $88 = HEAPU8[$87>>0]|(HEAPU8[$87+1>>0]<<8)|(HEAPU8[$87+2>>0]<<16)|(HEAPU8[$87+3>>0]<<24);
    $89 = ((($88)) + 4|0);
    $90 = HEAPU8[$89>>0]|(HEAPU8[$89+1>>0]<<8)|(HEAPU8[$89+2>>0]<<16)|(HEAPU8[$89+3>>0]<<24);
    $91 = ((($90)) + 4|0);
    $92 = HEAPU8[$91>>0]|(HEAPU8[$91+1>>0]<<8)|(HEAPU8[$91+2>>0]<<16)|(HEAPU8[$91+3>>0]<<24);
    $instance = $92;
   }
   break;
  }
  case 16:  {
   $93 = $obj;
   $94 = ((($93)) + 4|0);
   $95 = HEAPU8[$94>>0]|(HEAPU8[$94+1>>0]<<8)|(HEAPU8[$94+2>>0]<<16)|(HEAPU8[$94+3>>0]<<24);
   $instance = $95;
   break;
  }
  case 17: case 10:  {
   break;
  }
  default: {
   label = 26;
   break L4;
  }
  }
  $j = 0;
  $96 = $i;
  $97 = (($96) + 1)|0;
  $i = $97;
 }
 if ((label|0) == 12) {
  $result = 11089;
  $55 = $result;
  $0 = $55;
  $103 = $0;
  STACKTOP = sp;return ($103|0);
 }
 else if ((label|0) == 14) {
  $0 = 0;
  $103 = $0;
  STACKTOP = sp;return ($103|0);
 }
 else if ((label|0) == 17) {
  $0 = 0;
  $103 = $0;
  STACKTOP = sp;return ($103|0);
 }
 else if ((label|0) == 19) {
  $0 = 0;
  $103 = $0;
  STACKTOP = sp;return ($103|0);
 }
 else if ((label|0) == 22) {
  $78 = $result;
  $0 = $78;
  $103 = $0;
  STACKTOP = sp;return ($103|0);
 }
 else if ((label|0) == 26) {
  ___assert_fail((8593|0),(4322|0),9713,(11061|0));
  // unreachable;
 }
 else if ((label|0) == 29) {
  $102 = $result;
  $0 = $102;
  $103 = $0;
  STACKTOP = sp;return ($103|0);
 }
 return (0)|0;
}
function __is_expression_terminal($s,$obj) {
 $s = $s|0;
 $obj = $obj|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $obj;
 $result = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 if (!($or$cond)) {
  ___assert_fail((11434|0),(4322|0),3677,(12177|0));
  // unreachable;
 }
 $6 = $1;
 $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
 $8 = ($7|0)==(22);
 if ($8) {
  $52 = 1;
 } else {
  $9 = $1;
  $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
  $11 = ($10|0)==(19);
  if ($11) {
   $52 = 1;
  } else {
   $12 = $1;
   $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
   $14 = ($13|0)==(8);
   if ($14) {
    $15 = $1;
    $16 = ((($15)) + 4|0);
    $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
    $18 = ((($17)) + 4|0);
    $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
    $20 = ($19|0)==(24|0);
    if ($20) {
     $52 = 1;
    } else {
     $21 = $1;
     $22 = ((($21)) + 4|0);
     $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
     $24 = ((($23)) + 4|0);
     $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
     $26 = ($25|0)==(25|0);
     if ($26) {
      $52 = 1;
     } else {
      $27 = $1;
      $28 = ((($27)) + 4|0);
      $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
      $30 = ((($29)) + 4|0);
      $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8)|(HEAPU8[$30+2>>0]<<16)|(HEAPU8[$30+3>>0]<<24);
      $32 = ($31|0)==(26|0);
      if ($32) {
       $52 = 1;
      } else {
       $33 = $1;
       $34 = ((($33)) + 4|0);
       $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
       $36 = ((($35)) + 4|0);
       $37 = HEAPU8[$36>>0]|(HEAPU8[$36+1>>0]<<8)|(HEAPU8[$36+2>>0]<<16)|(HEAPU8[$36+3>>0]<<24);
       $38 = ($37|0)==(27|0);
       if ($38) {
        $52 = 1;
       } else {
        $39 = $1;
        $40 = ((($39)) + 4|0);
        $41 = HEAPU8[$40>>0]|(HEAPU8[$40+1>>0]<<8)|(HEAPU8[$40+2>>0]<<16)|(HEAPU8[$40+3>>0]<<24);
        $42 = ((($41)) + 4|0);
        $43 = HEAPU8[$42>>0]|(HEAPU8[$42+1>>0]<<8)|(HEAPU8[$42+2>>0]<<16)|(HEAPU8[$42+3>>0]<<24);
        $44 = ($43|0)==(30|0);
        if ($44) {
         $52 = 1;
        } else {
         $45 = $1;
         $46 = ((($45)) + 4|0);
         $47 = HEAPU8[$46>>0]|(HEAPU8[$46+1>>0]<<8)|(HEAPU8[$46+2>>0]<<16)|(HEAPU8[$46+3>>0]<<24);
         $48 = ((($47)) + 4|0);
         $49 = HEAPU8[$48>>0]|(HEAPU8[$48+1>>0]<<8)|(HEAPU8[$48+2>>0]<<16)|(HEAPU8[$48+3>>0]<<24);
         $50 = ($49|0)==(31|0);
         $52 = $50;
        }
       }
      }
     }
    }
   } else {
    $52 = 0;
   }
  }
 }
 $51 = $52&1;
 $53 = $51&255;
 $result = $53;
 $54 = $result;
 STACKTOP = sp;return ($54|0);
}
function __is_unary($op) {
 $op = $op|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $op;
 $1 = $0;
 $2 = ($1|0)==(19|0);
 $3 = $0;
 $4 = ($3|0)==(18|0);
 $5 = $2 ? 1 : $4;
 $6 = $5&1;
 $7 = $6&255;
 STACKTOP = sp;return ($7|0);
}
function __remove_source_object($data,$extra) {
 $data = $data|0;
 $extra = $extra|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $data;
 $1 = $extra;
 $result = -1;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 if ($3) {
  $4 = $result;
  STACKTOP = sp;return ($4|0);
 } else {
  ___assert_fail((6381|0),(4322|0),10192,(12155|0));
  // unreachable;
 }
 return (0)|0;
}
function __get_priority($op1,$op2) {
 $op1 = $op1|0;
 $op2 = $op2|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $idx1 = 0, $idx2 = 0, $or$cond = 0, $or$cond3 = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $op1;
 $1 = $op2;
 $result = 0;
 $idx1 = 0;
 $idx2 = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 if (!($or$cond)) {
  ___assert_fail((11543|0),(4322|0),3584,(11554|0));
  // unreachable;
 }
 $6 = $0;
 $7 = (__get_priority_index($6)|0);
 $idx1 = $7;
 $8 = $1;
 $9 = (__get_priority_index($8)|0);
 $idx2 = $9;
 $10 = $idx1;
 $11 = ($10>>>0)<(20);
 $12 = $idx2;
 $13 = ($12>>>0)<(20);
 $or$cond3 = $11 & $13;
 if ($or$cond3) {
  $14 = $idx2;
  $15 = $idx1;
  $16 = (11697 + (($15*20)|0)|0);
  $17 = (($16) + ($14)|0);
  $18 = HEAP8[$17>>0]|0;
  $result = $18;
  $19 = $result;
  STACKTOP = sp;return ($19|0);
 } else {
  ___assert_fail((11568|0),(4322|0),3588,(11554|0));
  // unreachable;
 }
 return (0)|0;
}
function __operate_operand($s,$optr,$opnd1,$opnd2,$status) {
 $s = $s|0;
 $optr = $optr|0;
 $opnd1 = $opnd1|0;
 $opnd2 = $opnd2|0;
 $status = $status|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $result = 0, $ret = 0, $tp = 0, $tpptr = 0;
 var dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $tp = sp + 36|0;
 $tpptr = sp + 4|0;
 $1 = $s;
 $2 = $optr;
 $3 = $opnd1;
 $4 = $opnd2;
 $5 = $status;
 $result = 0;
 HEAP32[$tpptr>>2] = 0;
 $ret = 0;
 $6 = $1;
 $7 = ($6|0)!=(0|0);
 $8 = $2;
 $9 = ($8|0)!=(0|0);
 $or$cond = $7 & $9;
 if (!($or$cond)) {
  ___assert_fail((11493|0),(4322|0),3640,(11503|0));
  // unreachable;
 }
 $10 = $2;
 $11 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
 $12 = ($11|0)==(8);
 if (!($12)) {
  ___assert_fail((11520|0),(4322|0),3641,(11503|0));
  // unreachable;
 }
 $13 = $3;
 $14 = ($13|0)!=(0|0);
 if (!($14)) {
  $15 = $result;
  $0 = $15;
  $54 = $0;
  STACKTOP = sp;return ($54|0);
 }
 $16 = (__create_object()|0);
 $result = $16;
 dest=$tp; stop=dest+12|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
 $17 = $3;
 HEAP8[$tp>>0]=$17&255;HEAP8[$tp+1>>0]=($17>>8)&255;HEAP8[$tp+2>>0]=($17>>16)&255;HEAP8[$tp+3>>0]=$17>>24;
 $18 = $4;
 $19 = ((($tp)) + 4|0);
 HEAP8[$19>>0]=$18&255;HEAP8[$19+1>>0]=($18>>8)&255;HEAP8[$19+2>>0]=($18>>16)&255;HEAP8[$19+3>>0]=$18>>24;
 $20 = $result;
 $21 = ((($tp)) + 8|0);
 HEAP8[$21>>0]=$20&255;HEAP8[$21+1>>0]=($20>>8)&255;HEAP8[$21+2>>0]=($20>>16)&255;HEAP8[$21+3>>0]=$20>>24;
 HEAP32[$tpptr>>2] = $tp;
 $22 = $2;
 $23 = ((($22)) + 4|0);
 $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
 $25 = ((($24)) + 4|0);
 $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
 $27 = $1;
 $28 = (FUNCTION_TABLE_iii[$26 & 255]($27,$tpptr)|0);
 $ret = $28;
 $29 = $5;
 $30 = ($29|0)!=(0|0);
 if ($30) {
  $31 = $ret;
  $32 = $5;
  HEAP32[$32>>2] = $31;
 }
 $33 = $ret;
 $34 = ($33|0)!=(0);
 if ($34) {
  $35 = $ret;
  $36 = ($35|0)!=(2);
  do {
   if ($36) {
    $37 = $result;
    $38 = ($37|0)!=(0|0);
    if ($38) {
     $39 = $result;
     _mb_free($39);
     $result = 0;
     break;
    } else {
     ___assert_fail((4369|0),(4322|0),3659,(11503|0));
     // unreachable;
    }
   }
  } while(0);
  $40 = $1;
  $41 = (__set_current_error($40,36,0)|0);
  $42 = ($41<<24>>24)!=(0);
  if ($42) {
   $43 = $1;
   $44 = $2;
   $45 = ((($44)) + 9|0);
   $46 = HEAPU8[$45>>0]|(HEAPU8[$45+1>>0]<<8)|(HEAPU8[$45+2>>0]<<16)|(HEAPU8[$45+3>>0]<<24);
   $47 = $2;
   $48 = ((($47)) + 13|0);
   $49 = HEAPU8[$48>>0]|(HEAPU8[$48+1>>0]<<8);
   $50 = $2;
   $51 = ((($50)) + 15|0);
   $52 = HEAPU8[$51>>0]|(HEAPU8[$51+1>>0]<<8);
   __set_error_pos($43,$46,$49,$52);
  }
 }
 $53 = $result;
 $0 = $53;
 $54 = $0;
 STACKTOP = sp;return ($54|0);
}
function __is_unexpected_calc_type($s,$obj) {
 $s = $s|0;
 $obj = $obj|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $obj;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 if (!($3)) {
  ___assert_fail((4803|0),(4322|0),3696,(11468|0));
  // unreachable;
 }
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 if ($5) {
  $6 = $1;
  $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
  $8 = ($7|0)==(8);
  if ($8) {
   $28 = 1;
  } else {
   $9 = $1;
   $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
   $11 = ($10|0)==(15);
   if ($11) {
    $28 = 1;
   } else {
    $12 = $1;
    $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
    $14 = ($13|0)==(18);
    if ($14) {
     $28 = 1;
    } else {
     $15 = $1;
     $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
     $17 = ($16|0)==(19);
     if ($17) {
      $28 = 1;
     } else {
      $18 = $1;
      $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
      $20 = ($19|0)==(20);
      if ($20) {
       $28 = 1;
      } else {
       $21 = $1;
       $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
       $23 = ($22|0)==(21);
       if ($23) {
        $28 = 1;
       } else {
        $24 = $1;
        $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
        $26 = ($25|0)==(22);
        $28 = $26;
       }
      }
     }
    }
   }
  }
 } else {
  $28 = 1;
 }
 $27 = $28&1;
 $29 = $27&255;
 STACKTOP = sp;return ($29|0);
}
function __is_referenced_calc_type($s,$obj) {
 $s = $s|0;
 $obj = $obj|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $obj;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 if (!($or$cond)) {
  ___assert_fail((11434|0),(4322|0),3715,(11443|0));
  // unreachable;
 }
 $6 = $1;
 $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
 $8 = ($7|0)==(7);
 if ($8) {
  $31 = 1;
 } else {
  $9 = $1;
  $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
  $11 = ($10|0)==(11);
  if ($11) {
   $31 = 1;
  } else {
   $12 = $1;
   $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
   $14 = ($13|0)==(13);
   if ($14) {
    $31 = 1;
   } else {
    $15 = $1;
    $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
    $17 = ($16|0)==(12);
    if ($17) {
     $31 = 1;
    } else {
     $18 = $1;
     $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
     $20 = ($19|0)==(14);
     if ($20) {
      $31 = 1;
     } else {
      $21 = $1;
      $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
      $23 = ($22|0)==(16);
      if ($23) {
       $31 = 1;
      } else {
       $24 = $1;
       $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
       $26 = ($25|0)==(10);
       if ($26) {
        $31 = 1;
       } else {
        $27 = $1;
        $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
        $29 = ($28|0)==(17);
        $31 = $29;
       }
      }
     }
    }
   }
  }
 }
 $30 = $31&1;
 $32 = $30&255;
 STACKTOP = sp;return ($32|0);
}
function __remove_if_exists($data,$extra,$ls) {
 $data = $data|0;
 $extra = $extra|0;
 $ls = $ls|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $obj = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $data;
 $1 = $extra;
 $2 = $ls;
 $obj = 0;
 $3 = $0;
 $obj = $3;
 $4 = $2;
 $5 = $obj;
 (__ls_try_remove($4,$5,136,0)|0);
 STACKTOP = sp;return;
}
function __destroy_object_not_compile_time($data,$extra) {
 $data = $data|0;
 $extra = $extra|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $obj = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $data;
 $1 = $extra;
 $result = -1;
 $obj = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 if (!($3)) {
  ___assert_fail((6381|0),(4322|0),10096,(11401|0));
  // unreachable;
 }
 $4 = $0;
 $obj = $4;
 $5 = $obj;
 $6 = ((($5)) + 9|0);
 $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
 $8 = ($7|0)!=(0);
 if ($8) {
  $15 = $result;
  STACKTOP = sp;return ($15|0);
 }
 $9 = $obj;
 $10 = (__dispose_object($9)|0);
 $11 = ($10|0)!=(0);
 if (!($11)) {
  $15 = $result;
  STACKTOP = sp;return ($15|0);
 }
 $12 = $obj;
 $13 = ($12|0)!=(0|0);
 if (!($13)) {
  ___assert_fail((4369|0),(4322|0),10102,(11401|0));
  // unreachable;
 }
 $14 = $obj;
 _mb_free($14);
 $obj = 0;
 $15 = $result;
 STACKTOP = sp;return ($15|0);
}
function __get_priority_index($op) {
 $op = $op|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $funcs = 0, $i = 0, dest = 0, label = 0, sp = 0, src = 0;
 var stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $funcs = sp;
 $1 = $op;
 $i = 0;
 dest=$funcs; src=604; stop=dest+80|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
 $2 = $1;
 $3 = ($2|0)!=(0|0);
 if (!($3)) {
  ___assert_fail((12097|0),(4322|0),3621,(12100|0));
  // unreachable;
 }
 $i = 0;
 while(1) {
  $4 = $i;
  $5 = ($4>>>0)<(20);
  if (!($5)) {
   label = 8;
   break;
  }
  $6 = $1;
  $7 = $i;
  $8 = (($funcs) + ($7<<2)|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = ($6|0)==($9|0);
  $11 = $i;
  if ($10) {
   label = 6;
   break;
  }
  $13 = (($11) + 1)|0;
  $i = $13;
 }
 if ((label|0) == 6) {
  $0 = $11;
  $12 = $0;
  STACKTOP = sp;return ($12|0);
 }
 else if ((label|0) == 8) {
  ___assert_fail((12120|0),(4322|0),3628,(12100|0));
  // unreachable;
 }
 return (0)|0;
}
function __core_not($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0.0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__hr = 0, $__hr1 = 0, $__hr2 = 0, $__hr3 = 0, $__hr4 = 0, $__hr5 = 0, $__hr6 = 0, $arg = 0, $ast = 0, $calc_depth = 0, $or$cond = 0, $result = 0, $ret = 0, $running = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $arg = sp + 64|0;
 $ret = sp + 56|0;
 $1 = $s;
 $2 = $l;
 $result = 0;
 $ast = 0;
 $running = 0;
 $calc_depth = 0;
 $3 = $1;
 $4 = ($3|0)!=(0|0);
 $5 = $2;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),15450,(12145|0));
  // unreachable;
 }
 $7 = $1;
 $8 = ((($7)) + 75|0);
 $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
 $running = $9;
 $10 = $2;
 $11 = HEAP32[$10>>2]|0;
 $ast = $11;
 $12 = $ast;
 $13 = ($12|0)!=(0|0);
 if ($13) {
  $14 = $ast;
  $15 = ((($14)) + 8|0);
  $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
  $ast = $16;
 }
 $17 = $running;
 $18 = ((($17)) + 28|0);
 $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
 $calc_depth = $19;
 $20 = ((($arg)) + 4|0);
 ;HEAP8[$20>>0]=0|0;HEAP8[$20+1>>0]=0|0;HEAP8[$20+2>>0]=0|0;HEAP8[$20+3>>0]=0|0;
 HEAP8[$arg>>0]=0&255;HEAP8[$arg+1>>0]=(0>>8)&255;HEAP8[$arg+2>>0]=(0>>16)&255;HEAP8[$arg+3>>0]=0>>24;
 $21 = ((($ret)) + 4|0);
 ;HEAP8[$21>>0]=0|0;HEAP8[$21+1>>0]=0|0;HEAP8[$21+2>>0]=0|0;HEAP8[$21+3>>0]=0|0;
 HEAP8[$ret>>0]=0&255;HEAP8[$ret+1>>0]=(0>>8)&255;HEAP8[$ret+2>>0]=(0>>16)&255;HEAP8[$ret+3>>0]=0>>24;
 $22 = $ast;
 $23 = ($22|0)!=(0|0);
 if ($23) {
  $24 = $ast;
  $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
  $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
  $27 = ($26|0)==(8);
  if ($27) {
   $28 = $ast;
   $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
   $30 = ((($29)) + 4|0);
   $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8)|(HEAPU8[$30+2>>0]<<16)|(HEAPU8[$30+3>>0]<<24);
   $32 = ((($31)) + 4|0);
   $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
   $34 = ($33|0)==(7|0);
   if ($34) {
    $35 = $1;
    $36 = $2;
    $37 = (_mb_attempt_open_bracket($35,$36)|0);
    $__hr = $37;
    $38 = $__hr;
    $39 = ($38|0)!=(0);
    if ($39) {
     $40 = $__hr;
     $0 = $40;
     $104 = $0;
     STACKTOP = sp;return ($104|0);
    }
    $41 = $1;
    $42 = $2;
    $43 = (_mb_pop_value($41,$42,$arg)|0);
    $__hr1 = $43;
    $44 = $__hr1;
    $45 = ($44|0)!=(0);
    if ($45) {
     $46 = $__hr1;
     $0 = $46;
     $104 = $0;
     STACKTOP = sp;return ($104|0);
    }
    $47 = $1;
    $48 = $2;
    $49 = (_mb_attempt_close_bracket($47,$48)|0);
    $__hr2 = $49;
    $50 = $__hr2;
    $51 = ($50|0)!=(0);
    if ($51) {
     $52 = $__hr2;
     $0 = $52;
     $104 = $0;
     STACKTOP = sp;return ($104|0);
    }
   } else {
    label = 14;
   }
  } else {
   label = 14;
  }
 } else {
  label = 14;
 }
 if ((label|0) == 14) {
  $53 = $running;
  $54 = ((($53)) + 28|0);
  HEAP8[$54>>0]=1&255;HEAP8[$54+1>>0]=(1>>8)&255;HEAP8[$54+2>>0]=(1>>16)&255;HEAP8[$54+3>>0]=1>>24;
  $55 = $1;
  $56 = $2;
  $57 = (_mb_attempt_func_begin($55,$56)|0);
  $__hr3 = $57;
  $58 = $__hr3;
  $59 = ($58|0)!=(0);
  if ($59) {
   $60 = $__hr3;
   $0 = $60;
   $104 = $0;
   STACKTOP = sp;return ($104|0);
  }
  $61 = $1;
  $62 = $2;
  $63 = (_mb_pop_value($61,$62,$arg)|0);
  $__hr4 = $63;
  $64 = $__hr4;
  $65 = ($64|0)!=(0);
  if ($65) {
   $66 = $__hr4;
   $0 = $66;
   $104 = $0;
   STACKTOP = sp;return ($104|0);
  }
  $67 = $1;
  $68 = $2;
  $69 = (_mb_attempt_func_end($67,$68)|0);
  $__hr5 = $69;
  $70 = $__hr5;
  $71 = ($70|0)!=(0);
  if ($71) {
   $72 = $__hr5;
   $0 = $72;
   $104 = $0;
   STACKTOP = sp;return ($104|0);
  }
 }
 $73 = HEAPU8[$arg>>0]|(HEAPU8[$arg+1>>0]<<8)|(HEAPU8[$arg+2>>0]<<16)|(HEAPU8[$arg+3>>0]<<24);
 switch ($73|0) {
 case 0:  {
  $74 = ((($ret)) + 4|0);
  HEAP8[$74>>0]=1&255;HEAP8[$74+1>>0]=(1>>8)&255;HEAP8[$74+2>>0]=(1>>16)&255;HEAP8[$74+3>>0]=1>>24;
  HEAP8[$ret>>0]=2&255;HEAP8[$ret+1>>0]=(2>>8)&255;HEAP8[$ret+2>>0]=(2>>16)&255;HEAP8[$ret+3>>0]=2>>24;
  break;
 }
 case 2:  {
  $75 = ((($arg)) + 4|0);
  $76 = HEAPU8[$75>>0]|(HEAPU8[$75+1>>0]<<8)|(HEAPU8[$75+2>>0]<<16)|(HEAPU8[$75+3>>0]<<24);
  $77 = ($76|0)!=(0);
  $78 = $77 ^ 1;
  $79 = $78 ^ 1;
  $80 = $79 ^ 1;
  $81 = $80 ? 1 : 0;
  $82 = ((($ret)) + 4|0);
  HEAP8[$82>>0]=$81&255;HEAP8[$82+1>>0]=($81>>8)&255;HEAP8[$82+2>>0]=($81>>16)&255;HEAP8[$82+3>>0]=$81>>24;
  HEAP8[$ret>>0]=2&255;HEAP8[$ret+1>>0]=(2>>8)&255;HEAP8[$ret+2>>0]=(2>>16)&255;HEAP8[$ret+3>>0]=2>>24;
  break;
 }
 case 4:  {
  $83 = ((($arg)) + 4|0);
  HEAP8[tempDoublePtr>>0]=HEAP8[$83>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$83+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$83+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$83+3>>0];$84 = +HEAPF32[tempDoublePtr>>2];
  $85 = $84 == 0.0;
  $86 = $85 ^ 1;
  $87 = $86 ^ 1;
  $88 = $87 ? 1 : 0;
  $89 = ((($ret)) + 4|0);
  HEAP8[$89>>0]=$88&255;HEAP8[$89+1>>0]=($88>>8)&255;HEAP8[$89+2>>0]=($88>>16)&255;HEAP8[$89+3>>0]=$88>>24;
  HEAP8[$ret>>0]=2&255;HEAP8[$ret+1>>0]=(2>>8)&255;HEAP8[$ret+2>>0]=(2>>16)&255;HEAP8[$ret+3>>0]=2>>24;
  break;
 }
 default: {
  $90 = ((($ret)) + 4|0);
  HEAP8[$90>>0]=0&255;HEAP8[$90+1>>0]=(0>>8)&255;HEAP8[$90+2>>0]=(0>>16)&255;HEAP8[$90+3>>0]=0>>24;
  HEAP8[$ret>>0]=2&255;HEAP8[$ret+1>>0]=(2>>8)&255;HEAP8[$ret+2>>0]=(2>>16)&255;HEAP8[$ret+3>>0]=2>>24;
 }
 }
 $91 = $1;
 __assign_public_value($91,$arg,0,1);
 $92 = $1;
 $93 = $2;
 $94 = ((($ret)) + 4|0);
 $95 = HEAPU8[$94>>0]|(HEAPU8[$94+1>>0]<<8)|(HEAPU8[$94+2>>0]<<16)|(HEAPU8[$94+3>>0]<<24);
 $96 = (_mb_push_int($92,$93,$95)|0);
 $__hr6 = $96;
 $97 = $__hr6;
 $98 = ($97|0)!=(0);
 if ($98) {
  $99 = $__hr6;
  $0 = $99;
  $104 = $0;
  STACKTOP = sp;return ($104|0);
 } else {
  $100 = $calc_depth;
  $101 = $running;
  $102 = ((($101)) + 28|0);
  HEAP8[$102>>0]=$100&255;HEAP8[$102+1>>0]=($100>>8)&255;HEAP8[$102+2>>0]=($100>>16)&255;HEAP8[$102+3>>0]=$100>>24;
  $103 = $result;
  $0 = $103;
  $104 = $0;
  STACKTOP = sp;return ($104|0);
 }
 return (0)|0;
}
function __generate_func_name($s,$n,$with_mod) {
 $s = $s|0;
 $n = $n|0;
 $with_mod = $with_mod|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $_ml = 0, $_sl = 0, $name = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $n;
 $2 = $with_mod;
 $name = 0;
 $_sl = 0;
 $3 = $0;
 $4 = ($3|0)!=(0|0);
 $5 = $1;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if (!($or$cond)) {
  ___assert_fail((5294|0),(4322|0),11853,(12372|0));
  // unreachable;
 }
 $7 = $1;
 $8 = (_strlen($7)|0);
 $_sl = $8;
 $9 = $2;
 $10 = $9&255;
 $11 = ($10|0)!=(0);
 if ($11) {
  $12 = $0;
  $13 = ((($12)) + 59|0);
  $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
  $15 = ($14|0)!=(0|0);
  if ($15) {
   $16 = $0;
   $17 = ((($16)) + 59|0);
   $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
   $19 = (_strlen($18)|0);
   $_ml = $19;
   $20 = $_ml;
   $21 = (($20) + 1)|0;
   $22 = $_sl;
   $23 = (($21) + ($22))|0;
   $24 = (($23) + 1)|0;
   $25 = (_mb_malloc($24)|0);
   $name = $25;
   $26 = $name;
   $27 = $0;
   $28 = ((($27)) + 59|0);
   $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
   $30 = $_ml;
   _memcpy(($26|0),($29|0),($30|0))|0;
   $31 = $_ml;
   $32 = $name;
   $33 = (($32) + ($31)|0);
   HEAP8[$33>>0] = 46;
   $34 = $name;
   $35 = $_ml;
   $36 = (($34) + ($35)|0);
   $37 = ((($36)) + 1|0);
   $38 = $1;
   $39 = $_sl;
   $40 = (($39) + 1)|0;
   _memcpy(($37|0),($38|0),($40|0))|0;
   $48 = $name;
   (_mb_strupr($48)|0);
   $49 = $name;
   STACKTOP = sp;return ($49|0);
  }
 }
 $41 = $_sl;
 $42 = (($41) + 1)|0;
 $43 = (_mb_malloc($42)|0);
 $name = $43;
 $44 = $name;
 $45 = $1;
 $46 = $_sl;
 $47 = (($46) + 1)|0;
 _memcpy(($44|0),($45|0),($47|0))|0;
 $48 = $name;
 (_mb_strupr($48)|0);
 $49 = $name;
 STACKTOP = sp;return ($49|0);
}
function __ls_cmp_extra_string($node,$info) {
 $node = $node|0;
 $info = $info|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $n = 0, $s1 = 0, $s2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $node;
 $1 = $info;
 $2 = $0;
 $n = $2;
 $3 = $n;
 $4 = ((($3)) + 12|0);
 $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
 $s1 = $5;
 $6 = $1;
 $s2 = $6;
 $7 = $s1;
 $8 = $s2;
 $9 = (_strcmp($7,$8)|0);
 STACKTOP = sp;return ($9|0);
}
function __ls_cmp_module_func($node,$info) {
 $node = $node|0;
 $info = $info|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $m = 0, $s = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $node;
 $1 = $info;
 $2 = $0;
 $m = $2;
 $3 = $1;
 $s = $3;
 $4 = $m;
 $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
 $6 = $s;
 $7 = ((($6)) + 59|0);
 $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
 $9 = (_strcmp($5,$8)|0);
 STACKTOP = sp;return ($9|0);
}
function __ls_destroy_module_func($data,$extra) {
 $data = $data|0;
 $extra = $extra|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $mod = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $data;
 $1 = $extra;
 $result = -1;
 $mod = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 if (!($3)) {
  ___assert_fail((6381|0),(4322|0),11821,(12348|0));
  // unreachable;
 }
 $4 = $0;
 $mod = $4;
 $5 = $mod;
 $6 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
 $7 = ($6|0)!=(0|0);
 if (!($7)) {
  ___assert_fail((4369|0),(4322|0),11824,(12348|0));
  // unreachable;
 }
 $8 = $mod;
 $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
 _mb_free($9);
 $10 = $mod;
 HEAP8[$10>>0]=0&255;HEAP8[$10+1>>0]=(0>>8)&255;HEAP8[$10+2>>0]=(0>>16)&255;HEAP8[$10+3>>0]=0>>24;
 $11 = $mod;
 $12 = ($11|0)!=(0|0);
 if ($12) {
  $13 = $mod;
  _mb_free($13);
  $mod = 0;
  $14 = $result;
  STACKTOP = sp;return ($14|0);
 } else {
  ___assert_fail((4369|0),(4322|0),11825,(12348|0));
  // unreachable;
 }
 return (0)|0;
}
function __create_module_func($s,$f) {
 $s = $s|0;
 $f = $f|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $s;
 $2 = $f;
 $result = 0;
 $3 = $1;
 $4 = ($3|0)!=(0|0);
 if (!($4)) {
  ___assert_fail((4803|0),(4322|0),11803,(12407|0));
  // unreachable;
 }
 $5 = $1;
 $6 = ((($5)) + 59|0);
 $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
 $8 = ($7|0)!=(0|0);
 if ($8) {
  $10 = (_mb_malloc(8)|0);
  $result = $10;
  $11 = $1;
  $12 = ((($11)) + 59|0);
  $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
  $14 = (_mb_strdup($13,0)|0);
  $15 = $result;
  HEAP8[$15>>0]=$14&255;HEAP8[$15+1>>0]=($14>>8)&255;HEAP8[$15+2>>0]=($14>>16)&255;HEAP8[$15+3>>0]=$14>>24;
  $16 = $2;
  $17 = $result;
  $18 = ((($17)) + 4|0);
  HEAP8[$18>>0]=$16&255;HEAP8[$18+1>>0]=($16>>8)&255;HEAP8[$18+2>>0]=($16>>16)&255;HEAP8[$18+3>>0]=$16>>24;
  $19 = $result;
  $0 = $19;
  $20 = $0;
  STACKTOP = sp;return ($20|0);
 } else {
  $9 = $result;
  $0 = $9;
  $20 = $0;
  STACKTOP = sp;return ($20|0);
 }
 return (0)|0;
}
function __ls_create_node($data) {
 $data = $data|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $result = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $data;
 $result = 0;
 $1 = (_mb_malloc(16)|0);
 $result = $1;
 $2 = $result;
 $3 = ($2|0)!=(0|0);
 if ($3) {
  $4 = $result;
  dest=$4; stop=dest+16|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
  $5 = $0;
  $6 = $result;
  HEAP8[$6>>0]=$5&255;HEAP8[$6+1>>0]=($5>>8)&255;HEAP8[$6+2>>0]=($5>>16)&255;HEAP8[$6+3>>0]=$5>>24;
  $7 = $result;
  STACKTOP = sp;return ($7|0);
 } else {
  ___assert_fail((12440|0),(4322|0),2379,(12447|0));
  // unreachable;
 }
 return (0)|0;
}
function __gc_get_reachable($s,$ht,$end) {
 $s = $s|0;
 $ht = $ht|0;
 $end = $end|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $9 = 0, $__bucket = 0, $__lst = 0, $__opresult = 0, $__tmp = 0, $__ul = 0, $or$cond = 0, $running = 0, $scope = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $ht;
 $2 = $end;
 $running = 0;
 $scope = 0;
 $3 = $0;
 $4 = ($3|0)!=(0|0);
 $5 = $1;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if (!($or$cond)) {
  ___assert_fail((13189|0),(4322|0),6645,(13197|0));
  // unreachable;
 }
 $7 = $0;
 $8 = ((($7)) + 75|0);
 $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
 $running = $9;
 L4: while(1) {
  $10 = $running;
  $11 = ($10|0)!=(0|0);
  if (!($11)) {
   label = 23;
   break;
  }
  $12 = $running;
  $13 = $2;
  $14 = ($12|0)!=($13|0);
  if (!($14)) {
   label = 23;
   break;
  }
  $15 = $running;
  $16 = ((($15)) + 8|0);
  $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
  $scope = $17;
  $18 = $scope;
  $19 = ($18|0)!=(0|0);
  L8: do {
   if ($19) {
    $__bucket = 0;
    $__ul = 0;
    $20 = $scope;
    $21 = ((($20)) + 20|0);
    $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
    $23 = ($22|0)!=(0|0);
    if ($23) {
     $__ul = 0;
     while(1) {
      $24 = $__ul;
      $25 = $scope;
      $26 = ((($25)) + 12|0);
      $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
      $28 = ($24>>>0)<($27>>>0);
      if (!($28)) {
       break L8;
      }
      $29 = $__ul;
      $30 = $scope;
      $31 = ((($30)) + 20|0);
      $32 = HEAPU8[$31>>0]|(HEAPU8[$31+1>>0]<<8)|(HEAPU8[$31+2>>0]<<16)|(HEAPU8[$31+3>>0]<<24);
      $33 = (($32) + ($29<<2)|0);
      $34 = HEAP32[$33>>2]|0;
      $__bucket = $34;
      $35 = $__bucket;
      $36 = ($35|0)!=(0|0);
      L14: do {
       if ($36) {
        $37 = $__bucket;
        $__lst = $37;
        $__opresult = 0;
        $__tmp = 0;
        $38 = $__bucket;
        $39 = ($38|0)!=(0|0);
        if (!($39)) {
         label = 12;
         break L4;
        }
        $40 = $__lst;
        $41 = ((($40)) + 8|0);
        $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
        $__lst = $42;
        while(1) {
         $43 = $__lst;
         $44 = ($43|0)!=(0|0);
         if (!($44)) {
          break L14;
         }
         $45 = $__lst;
         $46 = HEAPU8[$45>>0]|(HEAPU8[$45+1>>0]<<8)|(HEAPU8[$45+2>>0]<<16)|(HEAPU8[$45+3>>0]<<24);
         $47 = $__lst;
         $48 = ((($47)) + 12|0);
         $49 = HEAPU8[$48>>0]|(HEAPU8[$48+1>>0]<<8)|(HEAPU8[$48+2>>0]<<16)|(HEAPU8[$48+3>>0]<<24);
         $50 = $1;
         (__gc_add_reachable($46,$49,$50)|0);
         $51 = $__lst;
         $52 = HEAPU8[$51>>0]|(HEAPU8[$51+1>>0]<<8)|(HEAPU8[$51+2>>0]<<16)|(HEAPU8[$51+3>>0]<<24);
         $53 = $__lst;
         $54 = ((($53)) + 12|0);
         $55 = HEAPU8[$54>>0]|(HEAPU8[$54+1>>0]<<8)|(HEAPU8[$54+2>>0]<<16)|(HEAPU8[$54+3>>0]<<24);
         $56 = (__do_nothing_on_object($52,$55)|0);
         $__opresult = $56;
         $57 = $__lst;
         $__tmp = $57;
         $58 = $__lst;
         $59 = ((($58)) + 8|0);
         $60 = HEAPU8[$59>>0]|(HEAPU8[$59+1>>0]<<8)|(HEAPU8[$59+2>>0]<<16)|(HEAPU8[$59+3>>0]<<24);
         $__lst = $60;
         $61 = $__opresult;
         $62 = (-1)==($61|0);
         if (!($62)) {
          continue;
         }
         $63 = $__lst;
         $64 = $__tmp;
         $65 = ((($64)) + 4|0);
         $66 = HEAPU8[$65>>0]|(HEAPU8[$65+1>>0]<<8)|(HEAPU8[$65+2>>0]<<16)|(HEAPU8[$65+3>>0]<<24);
         $67 = ((($66)) + 8|0);
         HEAP8[$67>>0]=$63&255;HEAP8[$67+1>>0]=($63>>8)&255;HEAP8[$67+2>>0]=($63>>16)&255;HEAP8[$67+3>>0]=$63>>24;
         $68 = $__lst;
         $69 = ($68|0)!=(0|0);
         if ($69) {
          $70 = $__tmp;
          $71 = ((($70)) + 4|0);
          $72 = HEAPU8[$71>>0]|(HEAPU8[$71+1>>0]<<8)|(HEAPU8[$71+2>>0]<<16)|(HEAPU8[$71+3>>0]<<24);
          $73 = $__lst;
          $74 = ((($73)) + 4|0);
          HEAP8[$74>>0]=$72&255;HEAP8[$74+1>>0]=($72>>8)&255;HEAP8[$74+2>>0]=($72>>16)&255;HEAP8[$74+3>>0]=$72>>24;
         }
         $75 = $__tmp;
         $76 = ($75|0)!=(0|0);
         if (!($76)) {
          label = 20;
          break L4;
         }
         $77 = $__tmp;
         _mb_free($77);
         $__tmp = 0;
         $78 = $__bucket;
         $79 = HEAPU8[$78>>0]|(HEAPU8[$78+1>>0]<<8)|(HEAPU8[$78+2>>0]<<16)|(HEAPU8[$78+3>>0]<<24);
         $80 = ((($79)) + -1|0);
         $81 = $__bucket;
         HEAP8[$81>>0]=$80&255;HEAP8[$81+1>>0]=($80>>8)&255;HEAP8[$81+2>>0]=($80>>16)&255;HEAP8[$81+3>>0]=$80>>24;
        }
       }
      } while(0);
      $82 = $__ul;
      $83 = (($82) + 1)|0;
      $__ul = $83;
     }
    }
   }
  } while(0);
  $84 = $running;
  $85 = HEAPU8[$84>>0]|(HEAPU8[$84+1>>0]<<8)|(HEAPU8[$84+2>>0]<<16)|(HEAPU8[$84+3>>0]<<24);
  $running = $85;
 }
 if ((label|0) == 12) {
  ___assert_fail((4526|0),(4322|0),6651,(13197|0));
  // unreachable;
 }
 else if ((label|0) == 20) {
  ___assert_fail((4369|0),(4322|0),6651,(13197|0));
  // unreachable;
 }
 else if ((label|0) == 23) {
  STACKTOP = sp;return;
 }
}
function __gc_get_reachable_in_forked($data,$extra,$valid) {
 $data = $data|0;
 $extra = $extra|0;
 $valid = $valid|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $result = 0, $root = 0, $s = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $data;
 $1 = $extra;
 $2 = $valid;
 $result = 0;
 $s = 0;
 $root = 0;
 $3 = $0;
 $4 = ($3|0)!=(0|0);
 if ($4) {
  $5 = $0;
  $s = $5;
  $6 = $s;
  $7 = ((($6)) + 75|0);
  $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
  $9 = (__get_root_scope($8)|0);
  $root = $9;
  $10 = $s;
  $11 = $2;
  $12 = $root;
  __gc_get_reachable($10,$11,$12);
  $13 = $result;
  STACKTOP = sp;return ($13|0);
 } else {
  ___assert_fail((6381|0),(4322|0),6630,(13161|0));
  // unreachable;
 }
 return (0)|0;
}
function __gc_alive_marker($s,$h,$val) {
 $s = $s|0;
 $h = $h|0;
 $val = $val|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $ht = 0, $obj = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $obj = sp + 12|0;
 $0 = $s;
 $1 = $h;
 $ht = 0;
 $2 = $1;
 $ht = $2;
 dest=$obj; stop=dest+17|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
 HEAP8[$obj>>0]=0&255;HEAP8[$obj+1>>0]=(0>>8)&255;HEAP8[$obj+2>>0]=(0>>16)&255;HEAP8[$obj+3>>0]=0>>24;
 (__public_value_to_internal_object($val,$obj)|0);
 $3 = $1;
 (__gc_add_reachable($obj,0,$3)|0);
 STACKTOP = sp;return;
}
function __gc_destroy_garbage_class($data,$extra,$gc) {
 $data = $data|0;
 $extra = $extra|0;
 $gc = $gc|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__bucket = 0, $__lst = 0, $__opresult = 0, $__tmp = 0, $__ul = 0, $cond = 0, $instance = 0, $or$cond = 0, $proc = 0, $ref = 0, $result = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $data;
 $1 = $extra;
 $2 = $gc;
 $result = 0;
 $ref = 0;
 $proc = 1;
 $instance = 0;
 $3 = $0;
 $4 = ($3|0)!=(0|0);
 $5 = $1;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if (!($or$cond)) {
  ___assert_fail((9287|0),(4322|0),6854,(12969|0));
  // unreachable;
 }
 $7 = $1;
 $ref = $7;
 $8 = $2;
 $9 = ((($8)) + 8|0);
 $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
 $11 = $ref;
 $12 = (__ht_find($10,$11)|0);
 $13 = ($12|0)!=(0|0);
 if ($13) {
  $proc = 1;
 } else {
  $14 = $ref;
  $15 = ((($14)) + 12|0);
  $16 = HEAP8[$15>>0]|0;
  $17 = $16 << 24 >> 24;
  $cond = ($17|0)==(16);
  if ($cond) {
   $18 = $0;
   $instance = $18;
   $__bucket = 0;
   $__ul = 0;
   $19 = $instance;
   $20 = ((($19)) + 29|0);
   $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
   $22 = ((($21)) + 8|0);
   $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
   $24 = ((($23)) + 20|0);
   $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
   $26 = ($25|0)!=(0|0);
   L9: do {
    if ($26) {
     $__ul = 0;
     L11: while(1) {
      $27 = $__ul;
      $28 = $instance;
      $29 = ((($28)) + 29|0);
      $30 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8)|(HEAPU8[$29+2>>0]<<16)|(HEAPU8[$29+3>>0]<<24);
      $31 = ((($30)) + 8|0);
      $32 = HEAPU8[$31>>0]|(HEAPU8[$31+1>>0]<<8)|(HEAPU8[$31+2>>0]<<16)|(HEAPU8[$31+3>>0]<<24);
      $33 = ((($32)) + 12|0);
      $34 = HEAPU8[$33>>0]|(HEAPU8[$33+1>>0]<<8)|(HEAPU8[$33+2>>0]<<16)|(HEAPU8[$33+3>>0]<<24);
      $35 = ($27>>>0)<($34>>>0);
      if (!($35)) {
       break L9;
      }
      $36 = $__ul;
      $37 = $instance;
      $38 = ((($37)) + 29|0);
      $39 = HEAPU8[$38>>0]|(HEAPU8[$38+1>>0]<<8)|(HEAPU8[$38+2>>0]<<16)|(HEAPU8[$38+3>>0]<<24);
      $40 = ((($39)) + 8|0);
      $41 = HEAPU8[$40>>0]|(HEAPU8[$40+1>>0]<<8)|(HEAPU8[$40+2>>0]<<16)|(HEAPU8[$40+3>>0]<<24);
      $42 = ((($41)) + 20|0);
      $43 = HEAPU8[$42>>0]|(HEAPU8[$42+1>>0]<<8)|(HEAPU8[$42+2>>0]<<16)|(HEAPU8[$42+3>>0]<<24);
      $44 = (($43) + ($36<<2)|0);
      $45 = HEAP32[$44>>2]|0;
      $__bucket = $45;
      $46 = $__bucket;
      $47 = ($46|0)!=(0|0);
      L14: do {
       if ($47) {
        $48 = $__bucket;
        $__lst = $48;
        $__opresult = 0;
        $__tmp = 0;
        $49 = $__bucket;
        $50 = ($49|0)!=(0|0);
        if (!($50)) {
         label = 11;
         break L11;
        }
        $51 = $__lst;
        $52 = ((($51)) + 8|0);
        $53 = HEAPU8[$52>>0]|(HEAPU8[$52+1>>0]<<8)|(HEAPU8[$52+2>>0]<<16)|(HEAPU8[$52+3>>0]<<24);
        $__lst = $53;
        while(1) {
         $54 = $__lst;
         $55 = ($54|0)!=(0|0);
         if (!($55)) {
          break L14;
         }
         $56 = $__lst;
         $57 = HEAPU8[$56>>0]|(HEAPU8[$56+1>>0]<<8)|(HEAPU8[$56+2>>0]<<16)|(HEAPU8[$56+3>>0]<<24);
         $58 = $__lst;
         $59 = ((($58)) + 12|0);
         $60 = HEAPU8[$59>>0]|(HEAPU8[$59+1>>0]<<8)|(HEAPU8[$59+2>>0]<<16)|(HEAPU8[$59+3>>0]<<24);
         $61 = $2;
         (__gc_destroy_garbage_in_class($57,$60,$61)|0);
         $62 = $__lst;
         $63 = HEAPU8[$62>>0]|(HEAPU8[$62+1>>0]<<8)|(HEAPU8[$62+2>>0]<<16)|(HEAPU8[$62+3>>0]<<24);
         $64 = $__lst;
         $65 = ((($64)) + 12|0);
         $66 = HEAPU8[$65>>0]|(HEAPU8[$65+1>>0]<<8)|(HEAPU8[$65+2>>0]<<16)|(HEAPU8[$65+3>>0]<<24);
         $67 = (__do_nothing_on_object($63,$66)|0);
         $__opresult = $67;
         $68 = $__lst;
         $__tmp = $68;
         $69 = $__lst;
         $70 = ((($69)) + 8|0);
         $71 = HEAPU8[$70>>0]|(HEAPU8[$70+1>>0]<<8)|(HEAPU8[$70+2>>0]<<16)|(HEAPU8[$70+3>>0]<<24);
         $__lst = $71;
         $72 = $__opresult;
         $73 = (-1)==($72|0);
         if (!($73)) {
          continue;
         }
         $74 = $__lst;
         $75 = $__tmp;
         $76 = ((($75)) + 4|0);
         $77 = HEAPU8[$76>>0]|(HEAPU8[$76+1>>0]<<8)|(HEAPU8[$76+2>>0]<<16)|(HEAPU8[$76+3>>0]<<24);
         $78 = ((($77)) + 8|0);
         HEAP8[$78>>0]=$74&255;HEAP8[$78+1>>0]=($74>>8)&255;HEAP8[$78+2>>0]=($74>>16)&255;HEAP8[$78+3>>0]=$74>>24;
         $79 = $__lst;
         $80 = ($79|0)!=(0|0);
         if ($80) {
          $81 = $__tmp;
          $82 = ((($81)) + 4|0);
          $83 = HEAPU8[$82>>0]|(HEAPU8[$82+1>>0]<<8)|(HEAPU8[$82+2>>0]<<16)|(HEAPU8[$82+3>>0]<<24);
          $84 = $__lst;
          $85 = ((($84)) + 4|0);
          HEAP8[$85>>0]=$83&255;HEAP8[$85+1>>0]=($83>>8)&255;HEAP8[$85+2>>0]=($83>>16)&255;HEAP8[$85+3>>0]=$83>>24;
         }
         $86 = $__tmp;
         $87 = ($86|0)!=(0|0);
         if (!($87)) {
          label = 19;
          break L11;
         }
         $88 = $__tmp;
         _mb_free($88);
         $__tmp = 0;
         $89 = $__bucket;
         $90 = HEAPU8[$89>>0]|(HEAPU8[$89+1>>0]<<8)|(HEAPU8[$89+2>>0]<<16)|(HEAPU8[$89+3>>0]<<24);
         $91 = ((($90)) + -1|0);
         $92 = $__bucket;
         HEAP8[$92>>0]=$91&255;HEAP8[$92+1>>0]=($91>>8)&255;HEAP8[$92+2>>0]=($91>>16)&255;HEAP8[$92+3>>0]=$91>>24;
        }
       }
      } while(0);
      $93 = $__ul;
      $94 = (($93) + 1)|0;
      $__ul = $94;
     }
     if ((label|0) == 11) {
      ___assert_fail((4526|0),(4322|0),6865,(12969|0));
      // unreachable;
     }
     else if ((label|0) == 19) {
      ___assert_fail((4369|0),(4322|0),6865,(12969|0));
      // unreachable;
     }
    }
   } while(0);
   $95 = $instance;
   $96 = ((($95)) + 29|0);
   $97 = HEAPU8[$96>>0]|(HEAPU8[$96+1>>0]<<8)|(HEAPU8[$96+2>>0]<<16)|(HEAPU8[$96+3>>0]<<24);
   $98 = ((($97)) + 8|0);
   $99 = HEAPU8[$98>>0]|(HEAPU8[$98+1>>0]<<8)|(HEAPU8[$98+2>>0]<<16)|(HEAPU8[$98+3>>0]<<24);
   __ht_clear($99);
   $100 = $instance;
   $101 = ((($100)) + 25|0);
   $102 = HEAPU8[$101>>0]|(HEAPU8[$101+1>>0]<<8)|(HEAPU8[$101+2>>0]<<16)|(HEAPU8[$101+3>>0]<<24);
   __ls_clear($102);
   $103 = $instance;
   $104 = ((($103)) + 29|0);
   $105 = HEAPU8[$104>>0]|(HEAPU8[$104+1>>0]<<8)|(HEAPU8[$104+2>>0]<<16)|(HEAPU8[$104+3>>0]<<24);
   $106 = ((($105)) + 32|0);
   $107 = HEAPU8[$106>>0]|(HEAPU8[$106+1>>0]<<8)|(HEAPU8[$106+2>>0]<<16)|(HEAPU8[$106+3>>0]<<24);
   $108 = ($107|0)!=(0|0);
   if ($108) {
    $109 = $instance;
    $110 = ((($109)) + 29|0);
    $111 = HEAPU8[$110>>0]|(HEAPU8[$110+1>>0]<<8)|(HEAPU8[$110+2>>0]<<16)|(HEAPU8[$110+3>>0]<<24);
    $112 = ((($111)) + 32|0);
    $113 = HEAPU8[$112>>0]|(HEAPU8[$112+1>>0]<<8)|(HEAPU8[$112+2>>0]<<16)|(HEAPU8[$112+3>>0]<<24);
    __ls_destroy($113);
    $114 = $instance;
    $115 = ((($114)) + 29|0);
    $116 = HEAPU8[$115>>0]|(HEAPU8[$115+1>>0]<<8)|(HEAPU8[$115+2>>0]<<16)|(HEAPU8[$115+3>>0]<<24);
    $117 = ((($116)) + 32|0);
    HEAP8[$117>>0]=0&255;HEAP8[$117+1>>0]=(0>>8)&255;HEAP8[$117+2>>0]=(0>>16)&255;HEAP8[$117+3>>0]=0>>24;
   }
  } else {
   $proc = 0;
  }
  $118 = $proc;
  $119 = $118&255;
  $120 = ($119|0)!=(0);
  if ($120) {
   $121 = $ref;
   $122 = HEAPU8[$121>>0]|(HEAPU8[$121+1>>0]<<8)|(HEAPU8[$121+2>>0]<<16)|(HEAPU8[$121+3>>0]<<24);
   $123 = ($122|0)!=(0|0);
   if ($123) {
    $124 = $ref;
    $125 = $0;
    (__unref($124,$125)|0);
   }
  }
 }
 $126 = $proc;
 $127 = ($126<<24>>24)!=(0);
 if (!($127)) {
  $128 = $result;
  STACKTOP = sp;return ($128|0);
 }
 $result = -1;
 $128 = $result;
 STACKTOP = sp;return ($128|0);
}
function __gc_destroy_garbage($data,$extra,$gc) {
 $data = $data|0;
 $extra = $extra|0;
 $gc = $gc|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0;
 var $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0;
 var $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0;
 var $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0;
 var $350 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__bucket = 0, $__bucket4 = 0, $__bucket9 = 0, $__lst = 0, $__lst1 = 0, $__lst11 = 0, $__lst6 = 0, $__opresult = 0, $__opresult12 = 0;
 var $__opresult2 = 0, $__opresult7 = 0, $__tmp = 0, $__tmp13 = 0, $__tmp3 = 0, $__tmp8 = 0, $__ul = 0, $__ul10 = 0, $__ul5 = 0, $dct = 0, $lst = 0, $or$cond = 0, $outs = 0, $proc = 0, $ref = 0, $result = 0, $routine = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $data;
 $1 = $extra;
 $2 = $gc;
 $result = 0;
 $ref = 0;
 $proc = 1;
 $lst = 0;
 $dct = 0;
 $routine = 0;
 $outs = 0;
 $3 = $0;
 $4 = ($3|0)!=(0|0);
 $5 = $1;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if (!($or$cond)) {
  ___assert_fail((9287|0),(4322|0),6780,(12780|0));
  // unreachable;
 }
 $7 = $1;
 $ref = $7;
 $8 = $2;
 $9 = ((($8)) + 8|0);
 $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
 $11 = $ref;
 $12 = (__ht_find($10,$11)|0);
 $13 = ($12|0)!=(0|0);
 if ($13) {
  $proc = 1;
 } else {
  $14 = $ref;
  $15 = ((($14)) + 12|0);
  $16 = HEAP8[$15>>0]|0;
  $17 = $16 << 24 >> 24;
  L7: do {
   switch ($17|0) {
   case 11:  {
    $18 = $0;
    $lst = $18;
    $19 = $lst;
    $20 = ((($19)) + 19|0);
    $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
    $__lst = $21;
    $__opresult = 0;
    $__tmp = 0;
    $22 = $lst;
    $23 = ((($22)) + 19|0);
    $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
    $25 = ($24|0)!=(0|0);
    if (!($25)) {
     ___assert_fail((12800|0),(4322|0),6792,(12780|0));
     // unreachable;
    }
    $26 = $__lst;
    $27 = ((($26)) + 8|0);
    $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
    $__lst = $28;
    while(1) {
     $29 = $__lst;
     $30 = ($29|0)!=(0|0);
     if (!($30)) {
      label = 16;
      break;
     }
     $31 = $__lst;
     $32 = HEAPU8[$31>>0]|(HEAPU8[$31+1>>0]<<8)|(HEAPU8[$31+2>>0]<<16)|(HEAPU8[$31+3>>0]<<24);
     $33 = $__lst;
     $34 = ((($33)) + 12|0);
     $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
     $36 = $2;
     (__gc_destroy_garbage_in_list($32,$35,$36)|0);
     $37 = $__lst;
     $38 = HEAPU8[$37>>0]|(HEAPU8[$37+1>>0]<<8)|(HEAPU8[$37+2>>0]<<16)|(HEAPU8[$37+3>>0]<<24);
     $39 = $__lst;
     $40 = ((($39)) + 12|0);
     $41 = HEAPU8[$40>>0]|(HEAPU8[$40+1>>0]<<8)|(HEAPU8[$40+2>>0]<<16)|(HEAPU8[$40+3>>0]<<24);
     $42 = (__do_nothing_on_object($38,$41)|0);
     $__opresult = $42;
     $43 = $__lst;
     $__tmp = $43;
     $44 = $__lst;
     $45 = ((($44)) + 8|0);
     $46 = HEAPU8[$45>>0]|(HEAPU8[$45+1>>0]<<8)|(HEAPU8[$45+2>>0]<<16)|(HEAPU8[$45+3>>0]<<24);
     $__lst = $46;
     $47 = $__opresult;
     $48 = (-1)==($47|0);
     if (!($48)) {
      continue;
     }
     $49 = $__lst;
     $50 = $__tmp;
     $51 = ((($50)) + 4|0);
     $52 = HEAPU8[$51>>0]|(HEAPU8[$51+1>>0]<<8)|(HEAPU8[$51+2>>0]<<16)|(HEAPU8[$51+3>>0]<<24);
     $53 = ((($52)) + 8|0);
     HEAP8[$53>>0]=$49&255;HEAP8[$53+1>>0]=($49>>8)&255;HEAP8[$53+2>>0]=($49>>16)&255;HEAP8[$53+3>>0]=$49>>24;
     $54 = $__lst;
     $55 = ($54|0)!=(0|0);
     if ($55) {
      $56 = $__tmp;
      $57 = ((($56)) + 4|0);
      $58 = HEAPU8[$57>>0]|(HEAPU8[$57+1>>0]<<8)|(HEAPU8[$57+2>>0]<<16)|(HEAPU8[$57+3>>0]<<24);
      $59 = $__lst;
      $60 = ((($59)) + 4|0);
      HEAP8[$60>>0]=$58&255;HEAP8[$60+1>>0]=($58>>8)&255;HEAP8[$60+2>>0]=($58>>16)&255;HEAP8[$60+3>>0]=$58>>24;
     }
     $61 = $__tmp;
     $62 = ($61|0)!=(0|0);
     if (!($62)) {
      label = 15;
      break;
     }
     $63 = $__tmp;
     _mb_free($63);
     $__tmp = 0;
     $64 = $lst;
     $65 = ((($64)) + 19|0);
     $66 = HEAPU8[$65>>0]|(HEAPU8[$65+1>>0]<<8)|(HEAPU8[$65+2>>0]<<16)|(HEAPU8[$65+3>>0]<<24);
     $67 = HEAPU8[$66>>0]|(HEAPU8[$66+1>>0]<<8)|(HEAPU8[$66+2>>0]<<16)|(HEAPU8[$66+3>>0]<<24);
     $68 = ((($67)) + -1|0);
     $69 = $lst;
     $70 = ((($69)) + 19|0);
     $71 = HEAPU8[$70>>0]|(HEAPU8[$70+1>>0]<<8)|(HEAPU8[$70+2>>0]<<16)|(HEAPU8[$70+3>>0]<<24);
     HEAP8[$71>>0]=$68&255;HEAP8[$71+1>>0]=($68>>8)&255;HEAP8[$71+2>>0]=($68>>16)&255;HEAP8[$71+3>>0]=$68>>24;
    }
    if ((label|0) == 15) {
     ___assert_fail((4369|0),(4322|0),6792,(12780|0));
     // unreachable;
    }
    else if ((label|0) == 16) {
     $72 = $lst;
     $73 = ((($72)) + 19|0);
     $74 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
     __ls_clear($74);
     $75 = $lst;
     $76 = ((($75)) + 31|0);
     HEAP8[$76>>0]=0&255;HEAP8[$76+1>>0]=(0>>8)&255;HEAP8[$76+2>>0]=(0>>16)&255;HEAP8[$76+3>>0]=0>>24;
     break L7;
    }
    break;
   }
   case 13:  {
    $77 = $0;
    $dct = $77;
    $__bucket = 0;
    $__ul = 0;
    $78 = $dct;
    $79 = ((($78)) + 19|0);
    $80 = HEAPU8[$79>>0]|(HEAPU8[$79+1>>0]<<8)|(HEAPU8[$79+2>>0]<<16)|(HEAPU8[$79+3>>0]<<24);
    $81 = ((($80)) + 20|0);
    $82 = HEAPU8[$81>>0]|(HEAPU8[$81+1>>0]<<8)|(HEAPU8[$81+2>>0]<<16)|(HEAPU8[$81+3>>0]<<24);
    $83 = ($82|0)!=(0|0);
    L25: do {
     if ($83) {
      $__ul = 0;
      L27: while(1) {
       $84 = $__ul;
       $85 = $dct;
       $86 = ((($85)) + 19|0);
       $87 = HEAPU8[$86>>0]|(HEAPU8[$86+1>>0]<<8)|(HEAPU8[$86+2>>0]<<16)|(HEAPU8[$86+3>>0]<<24);
       $88 = ((($87)) + 12|0);
       $89 = HEAPU8[$88>>0]|(HEAPU8[$88+1>>0]<<8)|(HEAPU8[$88+2>>0]<<16)|(HEAPU8[$88+3>>0]<<24);
       $90 = ($84>>>0)<($89>>>0);
       if (!($90)) {
        break L25;
       }
       $91 = $__ul;
       $92 = $dct;
       $93 = ((($92)) + 19|0);
       $94 = HEAPU8[$93>>0]|(HEAPU8[$93+1>>0]<<8)|(HEAPU8[$93+2>>0]<<16)|(HEAPU8[$93+3>>0]<<24);
       $95 = ((($94)) + 20|0);
       $96 = HEAPU8[$95>>0]|(HEAPU8[$95+1>>0]<<8)|(HEAPU8[$95+2>>0]<<16)|(HEAPU8[$95+3>>0]<<24);
       $97 = (($96) + ($91<<2)|0);
       $98 = HEAP32[$97>>2]|0;
       $__bucket = $98;
       $99 = $__bucket;
       $100 = ($99|0)!=(0|0);
       L30: do {
        if ($100) {
         $101 = $__bucket;
         $__lst1 = $101;
         $__opresult2 = 0;
         $__tmp3 = 0;
         $102 = $__bucket;
         $103 = ($102|0)!=(0|0);
         if (!($103)) {
          label = 22;
          break L27;
         }
         $104 = $__lst1;
         $105 = ((($104)) + 8|0);
         $106 = HEAPU8[$105>>0]|(HEAPU8[$105+1>>0]<<8)|(HEAPU8[$105+2>>0]<<16)|(HEAPU8[$105+3>>0]<<24);
         $__lst1 = $106;
         while(1) {
          $107 = $__lst1;
          $108 = ($107|0)!=(0|0);
          if (!($108)) {
           break L30;
          }
          $109 = $__lst1;
          $110 = HEAPU8[$109>>0]|(HEAPU8[$109+1>>0]<<8)|(HEAPU8[$109+2>>0]<<16)|(HEAPU8[$109+3>>0]<<24);
          $111 = $__lst1;
          $112 = ((($111)) + 12|0);
          $113 = HEAPU8[$112>>0]|(HEAPU8[$112+1>>0]<<8)|(HEAPU8[$112+2>>0]<<16)|(HEAPU8[$112+3>>0]<<24);
          $114 = $2;
          (__gc_destroy_garbage_in_dict($110,$113,$114)|0);
          $115 = $__lst1;
          $116 = HEAPU8[$115>>0]|(HEAPU8[$115+1>>0]<<8)|(HEAPU8[$115+2>>0]<<16)|(HEAPU8[$115+3>>0]<<24);
          $117 = $__lst1;
          $118 = ((($117)) + 12|0);
          $119 = HEAPU8[$118>>0]|(HEAPU8[$118+1>>0]<<8)|(HEAPU8[$118+2>>0]<<16)|(HEAPU8[$118+3>>0]<<24);
          $120 = (__do_nothing_on_object($116,$119)|0);
          $__opresult2 = $120;
          $121 = $__lst1;
          $__tmp3 = $121;
          $122 = $__lst1;
          $123 = ((($122)) + 8|0);
          $124 = HEAPU8[$123>>0]|(HEAPU8[$123+1>>0]<<8)|(HEAPU8[$123+2>>0]<<16)|(HEAPU8[$123+3>>0]<<24);
          $__lst1 = $124;
          $125 = $__opresult2;
          $126 = (-1)==($125|0);
          if (!($126)) {
           continue;
          }
          $127 = $__lst1;
          $128 = $__tmp3;
          $129 = ((($128)) + 4|0);
          $130 = HEAPU8[$129>>0]|(HEAPU8[$129+1>>0]<<8)|(HEAPU8[$129+2>>0]<<16)|(HEAPU8[$129+3>>0]<<24);
          $131 = ((($130)) + 8|0);
          HEAP8[$131>>0]=$127&255;HEAP8[$131+1>>0]=($127>>8)&255;HEAP8[$131+2>>0]=($127>>16)&255;HEAP8[$131+3>>0]=$127>>24;
          $132 = $__lst1;
          $133 = ($132|0)!=(0|0);
          if ($133) {
           $134 = $__tmp3;
           $135 = ((($134)) + 4|0);
           $136 = HEAPU8[$135>>0]|(HEAPU8[$135+1>>0]<<8)|(HEAPU8[$135+2>>0]<<16)|(HEAPU8[$135+3>>0]<<24);
           $137 = $__lst1;
           $138 = ((($137)) + 4|0);
           HEAP8[$138>>0]=$136&255;HEAP8[$138+1>>0]=($136>>8)&255;HEAP8[$138+2>>0]=($136>>16)&255;HEAP8[$138+3>>0]=$136>>24;
          }
          $139 = $__tmp3;
          $140 = ($139|0)!=(0|0);
          if (!($140)) {
           label = 30;
           break L27;
          }
          $141 = $__tmp3;
          _mb_free($141);
          $__tmp3 = 0;
          $142 = $__bucket;
          $143 = HEAPU8[$142>>0]|(HEAPU8[$142+1>>0]<<8)|(HEAPU8[$142+2>>0]<<16)|(HEAPU8[$142+3>>0]<<24);
          $144 = ((($143)) + -1|0);
          $145 = $__bucket;
          HEAP8[$145>>0]=$144&255;HEAP8[$145+1>>0]=($144>>8)&255;HEAP8[$145+2>>0]=($144>>16)&255;HEAP8[$145+3>>0]=$144>>24;
         }
        }
       } while(0);
       $146 = $__ul;
       $147 = (($146) + 1)|0;
       $__ul = $147;
      }
      if ((label|0) == 22) {
       ___assert_fail((4526|0),(4322|0),6799,(12780|0));
       // unreachable;
      }
      else if ((label|0) == 30) {
       ___assert_fail((4369|0),(4322|0),6799,(12780|0));
       // unreachable;
      }
     }
    } while(0);
    $148 = $dct;
    $149 = ((($148)) + 19|0);
    $150 = HEAPU8[$149>>0]|(HEAPU8[$149+1>>0]<<8)|(HEAPU8[$149+2>>0]<<16)|(HEAPU8[$149+3>>0]<<24);
    __ht_clear($150);
    break;
   }
   case 17:  {
    $151 = $0;
    $routine = $151;
    $152 = $routine;
    $153 = ((($152)) + 58|0);
    $154 = HEAPU8[$153>>0]|(HEAPU8[$153+1>>0]<<8)|(HEAPU8[$153+2>>0]<<16)|(HEAPU8[$153+3>>0]<<24);
    $155 = ($154|0)==(2);
    if ($155) {
     $__bucket4 = 0;
     $__ul5 = 0;
     $156 = $routine;
     $157 = ((($156)) + 17|0);
     $158 = HEAPU8[$157>>0]|(HEAPU8[$157+1>>0]<<8)|(HEAPU8[$157+2>>0]<<16)|(HEAPU8[$157+3>>0]<<24);
     $159 = ((($158)) + 8|0);
     $160 = HEAPU8[$159>>0]|(HEAPU8[$159+1>>0]<<8)|(HEAPU8[$159+2>>0]<<16)|(HEAPU8[$159+3>>0]<<24);
     $161 = ((($160)) + 20|0);
     $162 = HEAPU8[$161>>0]|(HEAPU8[$161+1>>0]<<8)|(HEAPU8[$161+2>>0]<<16)|(HEAPU8[$161+3>>0]<<24);
     $163 = ($162|0)!=(0|0);
     L48: do {
      if ($163) {
       $__ul5 = 0;
       L50: while(1) {
        $164 = $__ul5;
        $165 = $routine;
        $166 = ((($165)) + 17|0);
        $167 = HEAPU8[$166>>0]|(HEAPU8[$166+1>>0]<<8)|(HEAPU8[$166+2>>0]<<16)|(HEAPU8[$166+3>>0]<<24);
        $168 = ((($167)) + 8|0);
        $169 = HEAPU8[$168>>0]|(HEAPU8[$168+1>>0]<<8)|(HEAPU8[$168+2>>0]<<16)|(HEAPU8[$168+3>>0]<<24);
        $170 = ((($169)) + 12|0);
        $171 = HEAPU8[$170>>0]|(HEAPU8[$170+1>>0]<<8)|(HEAPU8[$170+2>>0]<<16)|(HEAPU8[$170+3>>0]<<24);
        $172 = ($164>>>0)<($171>>>0);
        if (!($172)) {
         break L48;
        }
        $173 = $__ul5;
        $174 = $routine;
        $175 = ((($174)) + 17|0);
        $176 = HEAPU8[$175>>0]|(HEAPU8[$175+1>>0]<<8)|(HEAPU8[$175+2>>0]<<16)|(HEAPU8[$175+3>>0]<<24);
        $177 = ((($176)) + 8|0);
        $178 = HEAPU8[$177>>0]|(HEAPU8[$177+1>>0]<<8)|(HEAPU8[$177+2>>0]<<16)|(HEAPU8[$177+3>>0]<<24);
        $179 = ((($178)) + 20|0);
        $180 = HEAPU8[$179>>0]|(HEAPU8[$179+1>>0]<<8)|(HEAPU8[$179+2>>0]<<16)|(HEAPU8[$179+3>>0]<<24);
        $181 = (($180) + ($173<<2)|0);
        $182 = HEAP32[$181>>2]|0;
        $__bucket4 = $182;
        $183 = $__bucket4;
        $184 = ($183|0)!=(0|0);
        L53: do {
         if ($184) {
          $185 = $__bucket4;
          $__lst6 = $185;
          $__opresult7 = 0;
          $__tmp8 = 0;
          $186 = $__bucket4;
          $187 = ($186|0)!=(0|0);
          if (!($187)) {
           label = 39;
           break L50;
          }
          $188 = $__lst6;
          $189 = ((($188)) + 8|0);
          $190 = HEAPU8[$189>>0]|(HEAPU8[$189+1>>0]<<8)|(HEAPU8[$189+2>>0]<<16)|(HEAPU8[$189+3>>0]<<24);
          $__lst6 = $190;
          while(1) {
           $191 = $__lst6;
           $192 = ($191|0)!=(0|0);
           if (!($192)) {
            break L53;
           }
           $193 = $__lst6;
           $194 = HEAPU8[$193>>0]|(HEAPU8[$193+1>>0]<<8)|(HEAPU8[$193+2>>0]<<16)|(HEAPU8[$193+3>>0]<<24);
           $195 = $__lst6;
           $196 = ((($195)) + 12|0);
           $197 = HEAPU8[$196>>0]|(HEAPU8[$196+1>>0]<<8)|(HEAPU8[$196+2>>0]<<16)|(HEAPU8[$196+3>>0]<<24);
           $198 = $2;
           (__gc_destroy_garbage_in_lambda($194,$197,$198)|0);
           $199 = $__lst6;
           $200 = HEAPU8[$199>>0]|(HEAPU8[$199+1>>0]<<8)|(HEAPU8[$199+2>>0]<<16)|(HEAPU8[$199+3>>0]<<24);
           $201 = $__lst6;
           $202 = ((($201)) + 12|0);
           $203 = HEAPU8[$202>>0]|(HEAPU8[$202+1>>0]<<8)|(HEAPU8[$202+2>>0]<<16)|(HEAPU8[$202+3>>0]<<24);
           $204 = (__do_nothing_on_object($200,$203)|0);
           $__opresult7 = $204;
           $205 = $__lst6;
           $__tmp8 = $205;
           $206 = $__lst6;
           $207 = ((($206)) + 8|0);
           $208 = HEAPU8[$207>>0]|(HEAPU8[$207+1>>0]<<8)|(HEAPU8[$207+2>>0]<<16)|(HEAPU8[$207+3>>0]<<24);
           $__lst6 = $208;
           $209 = $__opresult7;
           $210 = (-1)==($209|0);
           if (!($210)) {
            continue;
           }
           $211 = $__lst6;
           $212 = $__tmp8;
           $213 = ((($212)) + 4|0);
           $214 = HEAPU8[$213>>0]|(HEAPU8[$213+1>>0]<<8)|(HEAPU8[$213+2>>0]<<16)|(HEAPU8[$213+3>>0]<<24);
           $215 = ((($214)) + 8|0);
           HEAP8[$215>>0]=$211&255;HEAP8[$215+1>>0]=($211>>8)&255;HEAP8[$215+2>>0]=($211>>16)&255;HEAP8[$215+3>>0]=$211>>24;
           $216 = $__lst6;
           $217 = ($216|0)!=(0|0);
           if ($217) {
            $218 = $__tmp8;
            $219 = ((($218)) + 4|0);
            $220 = HEAPU8[$219>>0]|(HEAPU8[$219+1>>0]<<8)|(HEAPU8[$219+2>>0]<<16)|(HEAPU8[$219+3>>0]<<24);
            $221 = $__lst6;
            $222 = ((($221)) + 4|0);
            HEAP8[$222>>0]=$220&255;HEAP8[$222+1>>0]=($220>>8)&255;HEAP8[$222+2>>0]=($220>>16)&255;HEAP8[$222+3>>0]=$220>>24;
           }
           $223 = $__tmp8;
           $224 = ($223|0)!=(0|0);
           if (!($224)) {
            label = 47;
            break L50;
           }
           $225 = $__tmp8;
           _mb_free($225);
           $__tmp8 = 0;
           $226 = $__bucket4;
           $227 = HEAPU8[$226>>0]|(HEAPU8[$226+1>>0]<<8)|(HEAPU8[$226+2>>0]<<16)|(HEAPU8[$226+3>>0]<<24);
           $228 = ((($227)) + -1|0);
           $229 = $__bucket4;
           HEAP8[$229>>0]=$228&255;HEAP8[$229+1>>0]=($228>>8)&255;HEAP8[$229+2>>0]=($228>>16)&255;HEAP8[$229+3>>0]=$228>>24;
          }
         }
        } while(0);
        $230 = $__ul5;
        $231 = (($230) + 1)|0;
        $__ul5 = $231;
       }
       if ((label|0) == 39) {
        ___assert_fail((4526|0),(4322|0),6808,(12780|0));
        // unreachable;
       }
       else if ((label|0) == 47) {
        ___assert_fail((4369|0),(4322|0),6808,(12780|0));
        // unreachable;
       }
      }
     } while(0);
     $232 = $routine;
     $233 = ((($232)) + 17|0);
     $234 = HEAPU8[$233>>0]|(HEAPU8[$233+1>>0]<<8)|(HEAPU8[$233+2>>0]<<16)|(HEAPU8[$233+3>>0]<<24);
     $235 = ((($234)) + 8|0);
     $236 = HEAPU8[$235>>0]|(HEAPU8[$235+1>>0]<<8)|(HEAPU8[$235+2>>0]<<16)|(HEAPU8[$235+3>>0]<<24);
     __ht_clear($236);
     $237 = $routine;
     $238 = ((($237)) + 25|0);
     $239 = HEAPU8[$238>>0]|(HEAPU8[$238+1>>0]<<8)|(HEAPU8[$238+2>>0]<<16)|(HEAPU8[$238+3>>0]<<24);
     $outs = $239;
     $240 = $outs;
     $241 = ($240|0)!=(0|0);
     if ($241) {
      $242 = $2;
      $243 = ((($242)) + 8|0);
      $244 = HEAPU8[$243>>0]|(HEAPU8[$243+1>>0]<<8)|(HEAPU8[$243+2>>0]<<16)|(HEAPU8[$243+3>>0]<<24);
      $245 = $outs;
      $246 = (__ht_find($244,$245)|0);
      $247 = ($246|0)!=(0|0);
      if (!($247)) {
       $248 = $outs;
       $249 = $outs;
       $250 = $2;
       __gc_add($248,$249,$250);
      }
      $251 = $routine;
      $252 = ((($251)) + 25|0);
      HEAP8[$252>>0]=0&255;HEAP8[$252+1>>0]=(0>>8)&255;HEAP8[$252+2>>0]=(0>>16)&255;HEAP8[$252+3>>0]=0>>24;
     }
     L74: while(1) {
      $253 = $outs;
      $254 = ($253|0)!=(0|0);
      if (!($254)) {
       break L7;
      }
      $255 = $2;
      $256 = ((($255)) + 8|0);
      $257 = HEAPU8[$256>>0]|(HEAPU8[$256+1>>0]<<8)|(HEAPU8[$256+2>>0]<<16)|(HEAPU8[$256+3>>0]<<24);
      $258 = $outs;
      $259 = (__ht_find($257,$258)|0);
      $260 = ($259|0)!=(0|0);
      if ($260) {
       break L7;
      }
      $__bucket9 = 0;
      $__ul10 = 0;
      $261 = $outs;
      $262 = ((($261)) + 21|0);
      $263 = HEAPU8[$262>>0]|(HEAPU8[$262+1>>0]<<8)|(HEAPU8[$262+2>>0]<<16)|(HEAPU8[$262+3>>0]<<24);
      $264 = ((($263)) + 8|0);
      $265 = HEAPU8[$264>>0]|(HEAPU8[$264+1>>0]<<8)|(HEAPU8[$264+2>>0]<<16)|(HEAPU8[$264+3>>0]<<24);
      $266 = ((($265)) + 20|0);
      $267 = HEAPU8[$266>>0]|(HEAPU8[$266+1>>0]<<8)|(HEAPU8[$266+2>>0]<<16)|(HEAPU8[$266+3>>0]<<24);
      $268 = ($267|0)!=(0|0);
      L78: do {
       if ($268) {
        $__ul10 = 0;
        while(1) {
         $269 = $__ul10;
         $270 = $outs;
         $271 = ((($270)) + 21|0);
         $272 = HEAPU8[$271>>0]|(HEAPU8[$271+1>>0]<<8)|(HEAPU8[$271+2>>0]<<16)|(HEAPU8[$271+3>>0]<<24);
         $273 = ((($272)) + 8|0);
         $274 = HEAPU8[$273>>0]|(HEAPU8[$273+1>>0]<<8)|(HEAPU8[$273+2>>0]<<16)|(HEAPU8[$273+3>>0]<<24);
         $275 = ((($274)) + 12|0);
         $276 = HEAPU8[$275>>0]|(HEAPU8[$275+1>>0]<<8)|(HEAPU8[$275+2>>0]<<16)|(HEAPU8[$275+3>>0]<<24);
         $277 = ($269>>>0)<($276>>>0);
         if (!($277)) {
          break L78;
         }
         $278 = $__ul10;
         $279 = $outs;
         $280 = ((($279)) + 21|0);
         $281 = HEAPU8[$280>>0]|(HEAPU8[$280+1>>0]<<8)|(HEAPU8[$280+2>>0]<<16)|(HEAPU8[$280+3>>0]<<24);
         $282 = ((($281)) + 8|0);
         $283 = HEAPU8[$282>>0]|(HEAPU8[$282+1>>0]<<8)|(HEAPU8[$282+2>>0]<<16)|(HEAPU8[$282+3>>0]<<24);
         $284 = ((($283)) + 20|0);
         $285 = HEAPU8[$284>>0]|(HEAPU8[$284+1>>0]<<8)|(HEAPU8[$284+2>>0]<<16)|(HEAPU8[$284+3>>0]<<24);
         $286 = (($285) + ($278<<2)|0);
         $287 = HEAP32[$286>>2]|0;
         $__bucket9 = $287;
         $288 = $__bucket9;
         $289 = ($288|0)!=(0|0);
         L83: do {
          if ($289) {
           $290 = $__bucket9;
           $__lst11 = $290;
           $__opresult12 = 0;
           $__tmp13 = 0;
           $291 = $__bucket9;
           $292 = ($291|0)!=(0|0);
           if (!($292)) {
            label = 60;
            break L74;
           }
           $293 = $__lst11;
           $294 = ((($293)) + 8|0);
           $295 = HEAPU8[$294>>0]|(HEAPU8[$294+1>>0]<<8)|(HEAPU8[$294+2>>0]<<16)|(HEAPU8[$294+3>>0]<<24);
           $__lst11 = $295;
           while(1) {
            $296 = $__lst11;
            $297 = ($296|0)!=(0|0);
            if (!($297)) {
             break L83;
            }
            $298 = $__lst11;
            $299 = HEAPU8[$298>>0]|(HEAPU8[$298+1>>0]<<8)|(HEAPU8[$298+2>>0]<<16)|(HEAPU8[$298+3>>0]<<24);
            $300 = $__lst11;
            $301 = ((($300)) + 12|0);
            $302 = HEAPU8[$301>>0]|(HEAPU8[$301+1>>0]<<8)|(HEAPU8[$301+2>>0]<<16)|(HEAPU8[$301+3>>0]<<24);
            $303 = $routine;
            (__remove_this_lambda_from_upvalue($299,$302,$303)|0);
            $304 = $__lst11;
            $305 = HEAPU8[$304>>0]|(HEAPU8[$304+1>>0]<<8)|(HEAPU8[$304+2>>0]<<16)|(HEAPU8[$304+3>>0]<<24);
            $306 = $__lst11;
            $307 = ((($306)) + 12|0);
            $308 = HEAPU8[$307>>0]|(HEAPU8[$307+1>>0]<<8)|(HEAPU8[$307+2>>0]<<16)|(HEAPU8[$307+3>>0]<<24);
            $309 = (__do_nothing_on_object($305,$308)|0);
            $__opresult12 = $309;
            $310 = $__lst11;
            $__tmp13 = $310;
            $311 = $__lst11;
            $312 = ((($311)) + 8|0);
            $313 = HEAPU8[$312>>0]|(HEAPU8[$312+1>>0]<<8)|(HEAPU8[$312+2>>0]<<16)|(HEAPU8[$312+3>>0]<<24);
            $__lst11 = $313;
            $314 = $__opresult12;
            $315 = (-1)==($314|0);
            if (!($315)) {
             continue;
            }
            $316 = $__lst11;
            $317 = $__tmp13;
            $318 = ((($317)) + 4|0);
            $319 = HEAPU8[$318>>0]|(HEAPU8[$318+1>>0]<<8)|(HEAPU8[$318+2>>0]<<16)|(HEAPU8[$318+3>>0]<<24);
            $320 = ((($319)) + 8|0);
            HEAP8[$320>>0]=$316&255;HEAP8[$320+1>>0]=($316>>8)&255;HEAP8[$320+2>>0]=($316>>16)&255;HEAP8[$320+3>>0]=$316>>24;
            $321 = $__lst11;
            $322 = ($321|0)!=(0|0);
            if ($322) {
             $323 = $__tmp13;
             $324 = ((($323)) + 4|0);
             $325 = HEAPU8[$324>>0]|(HEAPU8[$324+1>>0]<<8)|(HEAPU8[$324+2>>0]<<16)|(HEAPU8[$324+3>>0]<<24);
             $326 = $__lst11;
             $327 = ((($326)) + 4|0);
             HEAP8[$327>>0]=$325&255;HEAP8[$327+1>>0]=($325>>8)&255;HEAP8[$327+2>>0]=($325>>16)&255;HEAP8[$327+3>>0]=$325>>24;
            }
            $328 = $__tmp13;
            $329 = ($328|0)!=(0|0);
            if (!($329)) {
             label = 68;
             break L74;
            }
            $330 = $__tmp13;
            _mb_free($330);
            $__tmp13 = 0;
            $331 = $__bucket9;
            $332 = HEAPU8[$331>>0]|(HEAPU8[$331+1>>0]<<8)|(HEAPU8[$331+2>>0]<<16)|(HEAPU8[$331+3>>0]<<24);
            $333 = ((($332)) + -1|0);
            $334 = $__bucket9;
            HEAP8[$334>>0]=$333&255;HEAP8[$334+1>>0]=($333>>8)&255;HEAP8[$334+2>>0]=($333>>16)&255;HEAP8[$334+3>>0]=$333>>24;
           }
          }
         } while(0);
         $335 = $__ul10;
         $336 = (($335) + 1)|0;
         $__ul10 = $336;
        }
       }
      } while(0);
      $337 = $outs;
      $338 = ((($337)) + 17|0);
      $339 = HEAPU8[$338>>0]|(HEAPU8[$338+1>>0]<<8)|(HEAPU8[$338+2>>0]<<16)|(HEAPU8[$338+3>>0]<<24);
      $outs = $339;
     }
     if ((label|0) == 60) {
      ___assert_fail((4526|0),(4322|0),6819,(12780|0));
      // unreachable;
     }
     else if ((label|0) == 68) {
      ___assert_fail((4369|0),(4322|0),6819,(12780|0));
      // unreachable;
     }
    }
    break;
   }
   case 10: case 7:  {
    break;
   }
   default: {
    $proc = 0;
   }
   }
  } while(0);
  $340 = $proc;
  $341 = $340&255;
  $342 = ($341|0)!=(0);
  if ($342) {
   $343 = $ref;
   $344 = HEAPU8[$343>>0]|(HEAPU8[$343+1>>0]<<8)|(HEAPU8[$343+2>>0]<<16)|(HEAPU8[$343+3>>0]<<24);
   $345 = ($344|0)!=(0|0);
   if ($345) {
    $346 = $ref;
    $347 = $0;
    (__unref($346,$347)|0);
   }
  }
 }
 $348 = $proc;
 $349 = ($348<<24>>24)!=(0);
 if (!($349)) {
  $350 = $result;
  STACKTOP = sp;return ($350|0);
 }
 $result = -1;
 $350 = $result;
 STACKTOP = sp;return ($350|0);
}
function __gc_destroy_garbage_outer_scope($data,$extra,$gc) {
 $data = $data|0;
 $extra = $extra|0;
 $gc = $gc|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $cond = 0, $or$cond = 0;
 var $outs = 0, $proc = 0, $ref = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $data;
 $1 = $extra;
 $2 = $gc;
 $result = 0;
 $ref = 0;
 $proc = 1;
 $outs = 0;
 $3 = $0;
 $4 = ($3|0)!=(0|0);
 $5 = $1;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if (!($or$cond)) {
  ___assert_fail((9287|0),(4322|0),6900,(12683|0));
  // unreachable;
 }
 $7 = $1;
 $ref = $7;
 $8 = $2;
 $9 = ((($8)) + 8|0);
 $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
 $11 = $ref;
 $12 = (__ht_find($10,$11)|0);
 $13 = ($12|0)!=(0|0);
 if ($13) {
  $proc = 1;
 } else {
  $14 = $ref;
  $15 = ((($14)) + 12|0);
  $16 = HEAP8[$15>>0]|0;
  $17 = $16 << 24 >> 24;
  $cond = ($17|0)==(18);
  if ($cond) {
   $18 = $0;
   $outs = $18;
   $19 = $2;
   $20 = ((($19)) + 8|0);
   $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
   $22 = $outs;
   $23 = (__ht_find($21,$22)|0);
   $24 = ($23|0)!=(0|0);
   if (!($24)) {
    $25 = $outs;
    $26 = $2;
    __gc_destroy_garbage_in_outer_scope($25,$26);
   }
  } else {
   $proc = 0;
  }
  $27 = $proc;
  $28 = $27&255;
  $29 = ($28|0)!=(0);
  if ($29) {
   $30 = $ref;
   $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8)|(HEAPU8[$30+2>>0]<<16)|(HEAPU8[$30+3>>0]<<24);
   $32 = ($31|0)!=(0|0);
   if ($32) {
    $33 = $ref;
    $34 = $0;
    (__unref($33,$34)|0);
   }
  }
 }
 $35 = $proc;
 $36 = ($35<<24>>24)!=(0);
 if (!($36)) {
  $37 = $result;
  STACKTOP = sp;return ($37|0);
 }
 $result = -1;
 $37 = $result;
 STACKTOP = sp;return ($37|0);
}
function __gc_swap_tables($s) {
 $s = $s|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $tmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $tmp = 0;
 $1 = $0;
 $2 = ($1|0)!=(0|0);
 if ($2) {
  $3 = $0;
  $4 = ((($3)) + 21|0);
  $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
  $tmp = $5;
  $6 = $0;
  $7 = ((($6)) + 21|0);
  $8 = ((($7)) + 4|0);
  $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
  $10 = $0;
  $11 = ((($10)) + 21|0);
  HEAP8[$11>>0]=$9&255;HEAP8[$11+1>>0]=($9>>8)&255;HEAP8[$11+2>>0]=($9>>16)&255;HEAP8[$11+3>>0]=$9>>24;
  $12 = $tmp;
  $13 = $0;
  $14 = ((($13)) + 21|0);
  $15 = ((($14)) + 4|0);
  HEAP8[$15>>0]=$12&255;HEAP8[$15+1>>0]=($12>>8)&255;HEAP8[$15+2>>0]=($12>>16)&255;HEAP8[$15+3>>0]=$12>>24;
  STACKTOP = sp;return;
 } else {
  ___assert_fail((4803|0),(4322|0),6935,(12667|0));
  // unreachable;
 }
}
function __gc_destroy_garbage_in_outer_scope($p,$gc) {
 $p = $p|0;
 $gc = $gc|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $9 = 0, $__bucket = 0, $__lst = 0, $__opresult = 0, $__tmp = 0, $__ul = 0, $scope = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $p;
 $1 = $gc;
 L1: while(1) {
  $2 = $0;
  $3 = ($2|0)!=(0|0);
  if (!($3)) {
   label = 19;
   break;
  }
  $4 = $0;
  $scope = $4;
  $5 = $0;
  $6 = ((($5)) + 17|0);
  $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
  $0 = $7;
  $__bucket = 0;
  $__ul = 0;
  $8 = $scope;
  $9 = ((($8)) + 21|0);
  $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
  $11 = ((($10)) + 8|0);
  $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
  $13 = ((($12)) + 20|0);
  $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
  $15 = ($14|0)!=(0|0);
  L4: do {
   if ($15) {
    $__ul = 0;
    while(1) {
     $16 = $__ul;
     $17 = $scope;
     $18 = ((($17)) + 21|0);
     $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
     $20 = ((($19)) + 8|0);
     $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
     $22 = ((($21)) + 12|0);
     $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
     $24 = ($16>>>0)<($23>>>0);
     if (!($24)) {
      break L4;
     }
     $25 = $__ul;
     $26 = $scope;
     $27 = ((($26)) + 21|0);
     $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
     $29 = ((($28)) + 8|0);
     $30 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8)|(HEAPU8[$29+2>>0]<<16)|(HEAPU8[$29+3>>0]<<24);
     $31 = ((($30)) + 20|0);
     $32 = HEAPU8[$31>>0]|(HEAPU8[$31+1>>0]<<8)|(HEAPU8[$31+2>>0]<<16)|(HEAPU8[$31+3>>0]<<24);
     $33 = (($32) + ($25<<2)|0);
     $34 = HEAP32[$33>>2]|0;
     $__bucket = $34;
     $35 = $__bucket;
     $36 = ($35|0)!=(0|0);
     L9: do {
      if ($36) {
       $37 = $__bucket;
       $__lst = $37;
       $__opresult = 0;
       $__tmp = 0;
       $38 = $__bucket;
       $39 = ($38|0)!=(0|0);
       if (!($39)) {
        label = 8;
        break L1;
       }
       $40 = $__lst;
       $41 = ((($40)) + 8|0);
       $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
       $__lst = $42;
       while(1) {
        $43 = $__lst;
        $44 = ($43|0)!=(0|0);
        if (!($44)) {
         break L9;
        }
        $45 = $__lst;
        $46 = HEAPU8[$45>>0]|(HEAPU8[$45+1>>0]<<8)|(HEAPU8[$45+2>>0]<<16)|(HEAPU8[$45+3>>0]<<24);
        $47 = $__lst;
        $48 = ((($47)) + 12|0);
        $49 = HEAPU8[$48>>0]|(HEAPU8[$48+1>>0]<<8)|(HEAPU8[$48+2>>0]<<16)|(HEAPU8[$48+3>>0]<<24);
        $50 = $1;
        (__gc_destroy_garbage_in_lambda($46,$49,$50)|0);
        $51 = $__lst;
        $52 = HEAPU8[$51>>0]|(HEAPU8[$51+1>>0]<<8)|(HEAPU8[$51+2>>0]<<16)|(HEAPU8[$51+3>>0]<<24);
        $53 = $__lst;
        $54 = ((($53)) + 12|0);
        $55 = HEAPU8[$54>>0]|(HEAPU8[$54+1>>0]<<8)|(HEAPU8[$54+2>>0]<<16)|(HEAPU8[$54+3>>0]<<24);
        $56 = (__do_nothing_on_object($52,$55)|0);
        $__opresult = $56;
        $57 = $__lst;
        $__tmp = $57;
        $58 = $__lst;
        $59 = ((($58)) + 8|0);
        $60 = HEAPU8[$59>>0]|(HEAPU8[$59+1>>0]<<8)|(HEAPU8[$59+2>>0]<<16)|(HEAPU8[$59+3>>0]<<24);
        $__lst = $60;
        $61 = $__opresult;
        $62 = (-1)==($61|0);
        if (!($62)) {
         continue;
        }
        $63 = $__lst;
        $64 = $__tmp;
        $65 = ((($64)) + 4|0);
        $66 = HEAPU8[$65>>0]|(HEAPU8[$65+1>>0]<<8)|(HEAPU8[$65+2>>0]<<16)|(HEAPU8[$65+3>>0]<<24);
        $67 = ((($66)) + 8|0);
        HEAP8[$67>>0]=$63&255;HEAP8[$67+1>>0]=($63>>8)&255;HEAP8[$67+2>>0]=($63>>16)&255;HEAP8[$67+3>>0]=$63>>24;
        $68 = $__lst;
        $69 = ($68|0)!=(0|0);
        if ($69) {
         $70 = $__tmp;
         $71 = ((($70)) + 4|0);
         $72 = HEAPU8[$71>>0]|(HEAPU8[$71+1>>0]<<8)|(HEAPU8[$71+2>>0]<<16)|(HEAPU8[$71+3>>0]<<24);
         $73 = $__lst;
         $74 = ((($73)) + 4|0);
         HEAP8[$74>>0]=$72&255;HEAP8[$74+1>>0]=($72>>8)&255;HEAP8[$74+2>>0]=($72>>16)&255;HEAP8[$74+3>>0]=$72>>24;
        }
        $75 = $__tmp;
        $76 = ($75|0)!=(0|0);
        if (!($76)) {
         label = 16;
         break L1;
        }
        $77 = $__tmp;
        _mb_free($77);
        $__tmp = 0;
        $78 = $__bucket;
        $79 = HEAPU8[$78>>0]|(HEAPU8[$78+1>>0]<<8)|(HEAPU8[$78+2>>0]<<16)|(HEAPU8[$78+3>>0]<<24);
        $80 = ((($79)) + -1|0);
        $81 = $__bucket;
        HEAP8[$81>>0]=$80&255;HEAP8[$81+1>>0]=($80>>8)&255;HEAP8[$81+2>>0]=($80>>16)&255;HEAP8[$81+3>>0]=$80>>24;
       }
      }
     } while(0);
     $82 = $__ul;
     $83 = (($82) + 1)|0;
     $__ul = $83;
    }
   }
  } while(0);
  $84 = $scope;
  $85 = ((($84)) + 21|0);
  $86 = HEAPU8[$85>>0]|(HEAPU8[$85+1>>0]<<8)|(HEAPU8[$85+2>>0]<<16)|(HEAPU8[$85+3>>0]<<24);
  $87 = ((($86)) + 8|0);
  $88 = HEAPU8[$87>>0]|(HEAPU8[$87+1>>0]<<8)|(HEAPU8[$87+2>>0]<<16)|(HEAPU8[$87+3>>0]<<24);
  __ht_clear($88);
 }
 if ((label|0) == 8) {
  ___assert_fail((4526|0),(4322|0),6760,(12715|0));
  // unreachable;
 }
 else if ((label|0) == 16) {
  ___assert_fail((4369|0),(4322|0),6760,(12715|0));
  // unreachable;
 }
 else if ((label|0) == 19) {
  STACKTOP = sp;return;
 }
}
function __gc_destroy_garbage_in_lambda($data,$extra,$gc) {
 $data = $data|0;
 $extra = $extra|0;
 $gc = $gc|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0;
 var $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0;
 var $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;
 var $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $obj = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $data;
 $1 = $extra;
 $2 = $gc;
 $result = -1;
 $obj = 0;
 $3 = $0;
 $4 = ($3|0)!=(0|0);
 if (!($4)) {
  ___assert_fail((6381|0),(4322|0),6732,(12750|0));
  // unreachable;
 }
 $5 = $0;
 $obj = $5;
 $6 = $obj;
 $7 = ($6|0)!=(0|0);
 do {
  if ($7) {
   $8 = $obj;
   $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
   $10 = ($9|0)==(9);
   if ($10) {
    $11 = $obj;
    $12 = (__is_string($11)|0);
    $13 = $12&255;
    $14 = ($13|0)!=(0);
    do {
     if ($14) {
      $15 = $obj;
      $16 = ((($15)) + 4|0);
      $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
      $18 = ((($17)) + 8|0);
      $19 = HEAP8[$18>>0]|0;
      $20 = $19 & 3;
      $21 = $20&255;
      $22 = ($21|0)!=(0);
      if ($22) {
       $23 = $obj;
       $24 = ((($23)) + 4|0);
       $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
       $26 = ((($25)) + 4|0);
       $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
       $28 = ($27|0)!=(0|0);
       if ($28) {
        $29 = $obj;
        $30 = ((($29)) + 4|0);
        $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8)|(HEAPU8[$30+2>>0]<<16)|(HEAPU8[$30+3>>0]<<24);
        $32 = ((($31)) + 4|0);
        $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
        _mb_free($33);
        $34 = $obj;
        $35 = ((($34)) + 4|0);
        $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
        $37 = ((($36)) + 4|0);
        HEAP8[$37>>0]=0&255;HEAP8[$37+1>>0]=(0>>8)&255;HEAP8[$37+2>>0]=(0>>16)&255;HEAP8[$37+3>>0]=0>>24;
        break;
       } else {
        ___assert_fail((4369|0),(4322|0),6738,(12750|0));
        // unreachable;
       }
      } else {
       label = 10;
      }
     } else {
      label = 10;
     }
    } while(0);
    if ((label|0) == 10) {
     $38 = $obj;
     $39 = ((($38)) + 4|0);
     $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8)|(HEAPU8[$39+2>>0]<<16)|(HEAPU8[$39+3>>0]<<24);
     $41 = ((($40)) + 4|0);
     $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
     $43 = $2;
     (__gc_destroy_garbage_in_lambda($42,0,$43)|0);
    }
    $44 = $obj;
    $45 = ((($44)) + 4|0);
    $46 = HEAPU8[$45>>0]|(HEAPU8[$45+1>>0]<<8)|(HEAPU8[$45+2>>0]<<16)|(HEAPU8[$45+3>>0]<<24);
    $47 = HEAPU8[$46>>0]|(HEAPU8[$46+1>>0]<<8)|(HEAPU8[$46+2>>0]<<16)|(HEAPU8[$46+3>>0]<<24);
    $48 = ($47|0)!=(0|0);
    if (!($48)) {
     ___assert_fail((4369|0),(4322|0),6745,(12750|0));
     // unreachable;
    }
    $49 = $obj;
    $50 = ((($49)) + 4|0);
    $51 = HEAPU8[$50>>0]|(HEAPU8[$50+1>>0]<<8)|(HEAPU8[$50+2>>0]<<16)|(HEAPU8[$50+3>>0]<<24);
    $52 = HEAPU8[$51>>0]|(HEAPU8[$51+1>>0]<<8)|(HEAPU8[$51+2>>0]<<16)|(HEAPU8[$51+3>>0]<<24);
    _mb_free($52);
    $53 = $obj;
    $54 = ((($53)) + 4|0);
    $55 = HEAPU8[$54>>0]|(HEAPU8[$54+1>>0]<<8)|(HEAPU8[$54+2>>0]<<16)|(HEAPU8[$54+3>>0]<<24);
    HEAP8[$55>>0]=0&255;HEAP8[$55+1>>0]=(0>>8)&255;HEAP8[$55+2>>0]=(0>>16)&255;HEAP8[$55+3>>0]=0>>24;
    $56 = $obj;
    $57 = ((($56)) + 4|0);
    $58 = HEAPU8[$57>>0]|(HEAPU8[$57+1>>0]<<8)|(HEAPU8[$57+2>>0]<<16)|(HEAPU8[$57+3>>0]<<24);
    $59 = ($58|0)!=(0|0);
    if ($59) {
     $60 = $obj;
     $61 = ((($60)) + 4|0);
     $62 = HEAPU8[$61>>0]|(HEAPU8[$61+1>>0]<<8)|(HEAPU8[$61+2>>0]<<16)|(HEAPU8[$61+3>>0]<<24);
     _mb_free($62);
     $63 = $obj;
     $64 = ((($63)) + 4|0);
     HEAP8[$64>>0]=0&255;HEAP8[$64+1>>0]=(0>>8)&255;HEAP8[$64+2>>0]=(0>>16)&255;HEAP8[$64+3>>0]=0>>24;
     break;
    } else {
     ___assert_fail((4369|0),(4322|0),6746,(12750|0));
     // unreachable;
    }
   } else {
    label = 16;
   }
  } else {
   label = 16;
  }
 } while(0);
 L22: do {
  if ((label|0) == 16) {
   $65 = $obj;
   $66 = ((($65)) + 4|0);
   $67 = HEAPU8[$66>>0]|(HEAPU8[$66+1>>0]<<8)|(HEAPU8[$66+2>>0]<<16)|(HEAPU8[$66+3>>0]<<24);
   $68 = ($67|0)!=(0|0);
   if ($68) {
    $69 = $2;
    $70 = ((($69)) + 8|0);
    $71 = HEAPU8[$70>>0]|(HEAPU8[$70+1>>0]<<8)|(HEAPU8[$70+2>>0]<<16)|(HEAPU8[$70+3>>0]<<24);
    $72 = $obj;
    $73 = ((($72)) + 4|0);
    $74 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
    $75 = (__ht_find($71,$74)|0);
    $76 = ($75|0)!=(0|0);
    if ($76) {
     break;
    }
   }
   $77 = $obj;
   $78 = HEAPU8[$77>>0]|(HEAPU8[$77+1>>0]<<8)|(HEAPU8[$77+2>>0]<<16)|(HEAPU8[$77+3>>0]<<24);
   switch ($78|0) {
   case 7:  {
    $79 = $obj;
    $80 = ((($79)) + 4|0);
    $81 = HEAPU8[$80>>0]|(HEAPU8[$80+1>>0]<<8)|(HEAPU8[$80+2>>0]<<16)|(HEAPU8[$80+3>>0]<<24);
    $82 = $obj;
    $83 = ((($82)) + 4|0);
    $84 = HEAPU8[$83>>0]|(HEAPU8[$83+1>>0]<<8)|(HEAPU8[$83+2>>0]<<16)|(HEAPU8[$83+3>>0]<<24);
    $85 = $2;
    __gc_add($81,$84,$85);
    break L22;
    break;
   }
   case 10:  {
    $86 = $obj;
    $87 = ((($86)) + 8|0);
    $88 = HEAP8[$87>>0]|0;
    $89 = $88 & 1;
    $90 = ($89<<24>>24)!=(0);
    if ($90) {
     break L22;
    }
    $91 = $obj;
    $92 = ((($91)) + 4|0);
    $93 = HEAPU8[$92>>0]|(HEAPU8[$92+1>>0]<<8)|(HEAPU8[$92+2>>0]<<16)|(HEAPU8[$92+3>>0]<<24);
    $94 = $obj;
    $95 = ((($94)) + 4|0);
    $96 = HEAPU8[$95>>0]|(HEAPU8[$95+1>>0]<<8)|(HEAPU8[$95+2>>0]<<16)|(HEAPU8[$95+3>>0]<<24);
    $97 = $2;
    __gc_add($93,$96,$97);
    break L22;
    break;
   }
   case 11:  {
    $98 = $obj;
    $99 = ((($98)) + 4|0);
    $100 = HEAPU8[$99>>0]|(HEAPU8[$99+1>>0]<<8)|(HEAPU8[$99+2>>0]<<16)|(HEAPU8[$99+3>>0]<<24);
    $101 = $obj;
    $102 = ((($101)) + 4|0);
    $103 = HEAPU8[$102>>0]|(HEAPU8[$102+1>>0]<<8)|(HEAPU8[$102+2>>0]<<16)|(HEAPU8[$102+3>>0]<<24);
    $104 = $2;
    __gc_add($100,$103,$104);
    break L22;
    break;
   }
   case 13:  {
    $105 = $obj;
    $106 = ((($105)) + 4|0);
    $107 = HEAPU8[$106>>0]|(HEAPU8[$106+1>>0]<<8)|(HEAPU8[$106+2>>0]<<16)|(HEAPU8[$106+3>>0]<<24);
    $108 = $obj;
    $109 = ((($108)) + 4|0);
    $110 = HEAPU8[$109>>0]|(HEAPU8[$109+1>>0]<<8)|(HEAPU8[$109+2>>0]<<16)|(HEAPU8[$109+3>>0]<<24);
    $111 = $2;
    __gc_add($107,$110,$111);
    break L22;
    break;
   }
   case 12:  {
    $112 = $obj;
    $113 = ((($112)) + 4|0);
    $114 = HEAPU8[$113>>0]|(HEAPU8[$113+1>>0]<<8)|(HEAPU8[$113+2>>0]<<16)|(HEAPU8[$113+3>>0]<<24);
    (__destroy_list_it($114)|0);
    break L22;
    break;
   }
   case 14:  {
    $115 = $obj;
    $116 = ((($115)) + 4|0);
    $117 = HEAPU8[$116>>0]|(HEAPU8[$116+1>>0]<<8)|(HEAPU8[$116+2>>0]<<16)|(HEAPU8[$116+3>>0]<<24);
    (__destroy_dict_it($117)|0);
    break L22;
    break;
   }
   case 16:  {
    $118 = $obj;
    $119 = ((($118)) + 8|0);
    $120 = HEAP8[$119>>0]|0;
    $121 = $120 & 1;
    $122 = ($121<<24>>24)!=(0);
    if ($122) {
     break L22;
    }
    $123 = $obj;
    $124 = ((($123)) + 4|0);
    $125 = HEAPU8[$124>>0]|(HEAPU8[$124+1>>0]<<8)|(HEAPU8[$124+2>>0]<<16)|(HEAPU8[$124+3>>0]<<24);
    $126 = $obj;
    $127 = ((($126)) + 4|0);
    $128 = HEAPU8[$127>>0]|(HEAPU8[$127+1>>0]<<8)|(HEAPU8[$127+2>>0]<<16)|(HEAPU8[$127+3>>0]<<24);
    $129 = $2;
    __gc_add($125,$128,$129);
    break L22;
    break;
   }
   case 17:  {
    $130 = $obj;
    $131 = ((($130)) + 8|0);
    $132 = HEAP8[$131>>0]|0;
    $133 = $132 & 1;
    $134 = ($133<<24>>24)!=(0);
    if ($134) {
     break L22;
    }
    $135 = $obj;
    $136 = ((($135)) + 4|0);
    $137 = HEAPU8[$136>>0]|(HEAPU8[$136+1>>0]<<8)|(HEAPU8[$136+2>>0]<<16)|(HEAPU8[$136+3>>0]<<24);
    $138 = ((($137)) + 58|0);
    $139 = HEAPU8[$138>>0]|(HEAPU8[$138+1>>0]<<8)|(HEAPU8[$138+2>>0]<<16)|(HEAPU8[$138+3>>0]<<24);
    $140 = ($139|0)==(2);
    if (!($140)) {
     break L22;
    }
    $141 = $obj;
    $142 = ((($141)) + 4|0);
    $143 = HEAPU8[$142>>0]|(HEAPU8[$142+1>>0]<<8)|(HEAPU8[$142+2>>0]<<16)|(HEAPU8[$142+3>>0]<<24);
    $144 = $obj;
    $145 = ((($144)) + 4|0);
    $146 = HEAPU8[$145>>0]|(HEAPU8[$145+1>>0]<<8)|(HEAPU8[$145+2>>0]<<16)|(HEAPU8[$145+3>>0]<<24);
    $147 = $2;
    __gc_add($143,$146,$147);
    break L22;
    break;
   }
   case 4:  {
    $148 = $obj;
    (__dispose_object($148)|0);
    break L22;
    break;
   }
   default: {
    break L22;
   }
   }
  }
 } while(0);
 $149 = $obj;
 $150 = ($149|0)!=(0|0);
 if ($150) {
  $151 = $obj;
  _mb_free($151);
  $obj = 0;
  $152 = $result;
  STACKTOP = sp;return ($152|0);
 } else {
  ___assert_fail((4369|0),(4322|0),6750,(12750|0));
  // unreachable;
 }
 return (0)|0;
}
function __gc_destroy_garbage_in_list($data,$extra,$gc) {
 $data = $data|0;
 $extra = $extra|0;
 $gc = $gc|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $obj = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $data;
 $1 = $extra;
 $2 = $gc;
 $result = -1;
 $obj = 0;
 $3 = $0;
 $4 = ($3|0)!=(0|0);
 if (!($4)) {
  ___assert_fail((6381|0),(4322|0),6675,(12941|0));
  // unreachable;
 }
 $5 = $0;
 $obj = $5;
 $6 = $obj;
 $7 = ((($6)) + 4|0);
 $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
 $9 = ($8|0)!=(0|0);
 if ($9) {
  $10 = $2;
  $11 = ((($10)) + 8|0);
  $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
  $13 = $obj;
  $14 = ((($13)) + 4|0);
  $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
  $16 = (__ht_find($12,$15)|0);
  $17 = ($16|0)!=(0|0);
  if (!($17)) {
   label = 5;
  }
 } else {
  label = 5;
 }
 L6: do {
  if ((label|0) == 5) {
   $18 = $obj;
   $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
   switch ($19|0) {
   case 7:  {
    $20 = $obj;
    $21 = ((($20)) + 4|0);
    $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
    $23 = $obj;
    $24 = ((($23)) + 4|0);
    $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
    $26 = $2;
    __gc_add($22,$25,$26);
    break L6;
    break;
   }
   case 10:  {
    $27 = $obj;
    $28 = ((($27)) + 8|0);
    $29 = HEAP8[$28>>0]|0;
    $30 = $29 & 1;
    $31 = ($30<<24>>24)!=(0);
    if ($31) {
     break L6;
    }
    $32 = $obj;
    $33 = ((($32)) + 4|0);
    $34 = HEAPU8[$33>>0]|(HEAPU8[$33+1>>0]<<8)|(HEAPU8[$33+2>>0]<<16)|(HEAPU8[$33+3>>0]<<24);
    $35 = $obj;
    $36 = ((($35)) + 4|0);
    $37 = HEAPU8[$36>>0]|(HEAPU8[$36+1>>0]<<8)|(HEAPU8[$36+2>>0]<<16)|(HEAPU8[$36+3>>0]<<24);
    $38 = $2;
    __gc_add($34,$37,$38);
    break L6;
    break;
   }
   case 11:  {
    $39 = $obj;
    $40 = ((($39)) + 4|0);
    $41 = HEAPU8[$40>>0]|(HEAPU8[$40+1>>0]<<8)|(HEAPU8[$40+2>>0]<<16)|(HEAPU8[$40+3>>0]<<24);
    $42 = $obj;
    $43 = ((($42)) + 4|0);
    $44 = HEAPU8[$43>>0]|(HEAPU8[$43+1>>0]<<8)|(HEAPU8[$43+2>>0]<<16)|(HEAPU8[$43+3>>0]<<24);
    $45 = $2;
    __gc_add($41,$44,$45);
    break L6;
    break;
   }
   case 13:  {
    $46 = $obj;
    $47 = ((($46)) + 4|0);
    $48 = HEAPU8[$47>>0]|(HEAPU8[$47+1>>0]<<8)|(HEAPU8[$47+2>>0]<<16)|(HEAPU8[$47+3>>0]<<24);
    $49 = $obj;
    $50 = ((($49)) + 4|0);
    $51 = HEAPU8[$50>>0]|(HEAPU8[$50+1>>0]<<8)|(HEAPU8[$50+2>>0]<<16)|(HEAPU8[$50+3>>0]<<24);
    $52 = $2;
    __gc_add($48,$51,$52);
    break L6;
    break;
   }
   case 12:  {
    $53 = $obj;
    $54 = ((($53)) + 4|0);
    $55 = HEAPU8[$54>>0]|(HEAPU8[$54+1>>0]<<8)|(HEAPU8[$54+2>>0]<<16)|(HEAPU8[$54+3>>0]<<24);
    (__destroy_list_it($55)|0);
    break L6;
    break;
   }
   case 14:  {
    $56 = $obj;
    $57 = ((($56)) + 4|0);
    $58 = HEAPU8[$57>>0]|(HEAPU8[$57+1>>0]<<8)|(HEAPU8[$57+2>>0]<<16)|(HEAPU8[$57+3>>0]<<24);
    (__destroy_dict_it($58)|0);
    break L6;
    break;
   }
   case 16:  {
    $59 = $obj;
    $60 = ((($59)) + 8|0);
    $61 = HEAP8[$60>>0]|0;
    $62 = $61 & 1;
    $63 = ($62<<24>>24)!=(0);
    if ($63) {
     break L6;
    }
    $64 = $obj;
    $65 = ((($64)) + 4|0);
    $66 = HEAPU8[$65>>0]|(HEAPU8[$65+1>>0]<<8)|(HEAPU8[$65+2>>0]<<16)|(HEAPU8[$65+3>>0]<<24);
    $67 = $obj;
    $68 = ((($67)) + 4|0);
    $69 = HEAPU8[$68>>0]|(HEAPU8[$68+1>>0]<<8)|(HEAPU8[$68+2>>0]<<16)|(HEAPU8[$68+3>>0]<<24);
    $70 = $2;
    __gc_add($66,$69,$70);
    break L6;
    break;
   }
   case 17:  {
    $71 = $obj;
    $72 = ((($71)) + 8|0);
    $73 = HEAP8[$72>>0]|0;
    $74 = $73 & 1;
    $75 = ($74<<24>>24)!=(0);
    if ($75) {
     break L6;
    }
    $76 = $obj;
    $77 = ((($76)) + 4|0);
    $78 = HEAPU8[$77>>0]|(HEAPU8[$77+1>>0]<<8)|(HEAPU8[$77+2>>0]<<16)|(HEAPU8[$77+3>>0]<<24);
    $79 = ((($78)) + 58|0);
    $80 = HEAPU8[$79>>0]|(HEAPU8[$79+1>>0]<<8)|(HEAPU8[$79+2>>0]<<16)|(HEAPU8[$79+3>>0]<<24);
    $81 = ($80|0)==(2);
    if (!($81)) {
     break L6;
    }
    $82 = $obj;
    $83 = ((($82)) + 4|0);
    $84 = HEAPU8[$83>>0]|(HEAPU8[$83+1>>0]<<8)|(HEAPU8[$83+2>>0]<<16)|(HEAPU8[$83+3>>0]<<24);
    $85 = $obj;
    $86 = ((($85)) + 4|0);
    $87 = HEAPU8[$86>>0]|(HEAPU8[$86+1>>0]<<8)|(HEAPU8[$86+2>>0]<<16)|(HEAPU8[$86+3>>0]<<24);
    $88 = $2;
    __gc_add($84,$87,$88);
    break L6;
    break;
   }
   case 4:  {
    $89 = $obj;
    (__dispose_object($89)|0);
    break L6;
    break;
   }
   default: {
    break L6;
   }
   }
  }
 } while(0);
 $90 = $obj;
 $91 = ($90|0)!=(0|0);
 if ($91) {
  $92 = $obj;
  _mb_free($92);
  $obj = 0;
  $93 = $result;
  STACKTOP = sp;return ($93|0);
 } else {
  ___assert_fail((4369|0),(4322|0),6679,(12941|0));
  // unreachable;
 }
 return (0)|0;
}
function __gc_destroy_garbage_in_dict($data,$extra,$gc) {
 $data = $data|0;
 $extra = $extra|0;
 $gc = $gc|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, $obj = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $data;
 $1 = $extra;
 $2 = $gc;
 $result = -1;
 $obj = 0;
 $3 = $0;
 $4 = ($3|0)!=(0|0);
 if (!($4)) {
  ___assert_fail((6381|0),(4322|0),6689,(12913|0));
  // unreachable;
 }
 $5 = $0;
 $obj = $5;
 $6 = $obj;
 $7 = ((($6)) + 4|0);
 $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
 $9 = ($8|0)!=(0|0);
 if ($9) {
  $10 = $2;
  $11 = ((($10)) + 8|0);
  $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
  $13 = $obj;
  $14 = ((($13)) + 4|0);
  $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
  $16 = (__ht_find($12,$15)|0);
  $17 = ($16|0)!=(0|0);
  if (!($17)) {
   label = 5;
  }
 } else {
  label = 5;
 }
 L6: do {
  if ((label|0) == 5) {
   $18 = $obj;
   $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
   switch ($19|0) {
   case 7:  {
    $20 = $obj;
    $21 = ((($20)) + 4|0);
    $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
    $23 = $obj;
    $24 = ((($23)) + 4|0);
    $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
    $26 = $2;
    __gc_add($22,$25,$26);
    break L6;
    break;
   }
   case 10:  {
    $27 = $obj;
    $28 = ((($27)) + 8|0);
    $29 = HEAP8[$28>>0]|0;
    $30 = $29 & 1;
    $31 = ($30<<24>>24)!=(0);
    if ($31) {
     break L6;
    }
    $32 = $obj;
    $33 = ((($32)) + 4|0);
    $34 = HEAPU8[$33>>0]|(HEAPU8[$33+1>>0]<<8)|(HEAPU8[$33+2>>0]<<16)|(HEAPU8[$33+3>>0]<<24);
    $35 = $obj;
    $36 = ((($35)) + 4|0);
    $37 = HEAPU8[$36>>0]|(HEAPU8[$36+1>>0]<<8)|(HEAPU8[$36+2>>0]<<16)|(HEAPU8[$36+3>>0]<<24);
    $38 = $2;
    __gc_add($34,$37,$38);
    break L6;
    break;
   }
   case 11:  {
    $39 = $obj;
    $40 = ((($39)) + 4|0);
    $41 = HEAPU8[$40>>0]|(HEAPU8[$40+1>>0]<<8)|(HEAPU8[$40+2>>0]<<16)|(HEAPU8[$40+3>>0]<<24);
    $42 = $obj;
    $43 = ((($42)) + 4|0);
    $44 = HEAPU8[$43>>0]|(HEAPU8[$43+1>>0]<<8)|(HEAPU8[$43+2>>0]<<16)|(HEAPU8[$43+3>>0]<<24);
    $45 = $2;
    __gc_add($41,$44,$45);
    break L6;
    break;
   }
   case 13:  {
    $46 = $obj;
    $47 = ((($46)) + 4|0);
    $48 = HEAPU8[$47>>0]|(HEAPU8[$47+1>>0]<<8)|(HEAPU8[$47+2>>0]<<16)|(HEAPU8[$47+3>>0]<<24);
    $49 = $obj;
    $50 = ((($49)) + 4|0);
    $51 = HEAPU8[$50>>0]|(HEAPU8[$50+1>>0]<<8)|(HEAPU8[$50+2>>0]<<16)|(HEAPU8[$50+3>>0]<<24);
    $52 = $2;
    __gc_add($48,$51,$52);
    break L6;
    break;
   }
   case 12:  {
    $53 = $obj;
    $54 = ((($53)) + 4|0);
    $55 = HEAPU8[$54>>0]|(HEAPU8[$54+1>>0]<<8)|(HEAPU8[$54+2>>0]<<16)|(HEAPU8[$54+3>>0]<<24);
    (__destroy_list_it($55)|0);
    break L6;
    break;
   }
   case 14:  {
    $56 = $obj;
    $57 = ((($56)) + 4|0);
    $58 = HEAPU8[$57>>0]|(HEAPU8[$57+1>>0]<<8)|(HEAPU8[$57+2>>0]<<16)|(HEAPU8[$57+3>>0]<<24);
    (__destroy_dict_it($58)|0);
    break L6;
    break;
   }
   case 16:  {
    $59 = $obj;
    $60 = ((($59)) + 8|0);
    $61 = HEAP8[$60>>0]|0;
    $62 = $61 & 1;
    $63 = ($62<<24>>24)!=(0);
    if ($63) {
     break L6;
    }
    $64 = $obj;
    $65 = ((($64)) + 4|0);
    $66 = HEAPU8[$65>>0]|(HEAPU8[$65+1>>0]<<8)|(HEAPU8[$65+2>>0]<<16)|(HEAPU8[$65+3>>0]<<24);
    $67 = $obj;
    $68 = ((($67)) + 4|0);
    $69 = HEAPU8[$68>>0]|(HEAPU8[$68+1>>0]<<8)|(HEAPU8[$68+2>>0]<<16)|(HEAPU8[$68+3>>0]<<24);
    $70 = $2;
    __gc_add($66,$69,$70);
    break L6;
    break;
   }
   case 17:  {
    $71 = $obj;
    $72 = ((($71)) + 8|0);
    $73 = HEAP8[$72>>0]|0;
    $74 = $73 & 1;
    $75 = ($74<<24>>24)!=(0);
    if ($75) {
     break L6;
    }
    $76 = $obj;
    $77 = ((($76)) + 4|0);
    $78 = HEAPU8[$77>>0]|(HEAPU8[$77+1>>0]<<8)|(HEAPU8[$77+2>>0]<<16)|(HEAPU8[$77+3>>0]<<24);
    $79 = ((($78)) + 58|0);
    $80 = HEAPU8[$79>>0]|(HEAPU8[$79+1>>0]<<8)|(HEAPU8[$79+2>>0]<<16)|(HEAPU8[$79+3>>0]<<24);
    $81 = ($80|0)==(2);
    if (!($81)) {
     break L6;
    }
    $82 = $obj;
    $83 = ((($82)) + 4|0);
    $84 = HEAPU8[$83>>0]|(HEAPU8[$83+1>>0]<<8)|(HEAPU8[$83+2>>0]<<16)|(HEAPU8[$83+3>>0]<<24);
    $85 = $obj;
    $86 = ((($85)) + 4|0);
    $87 = HEAPU8[$86>>0]|(HEAPU8[$86+1>>0]<<8)|(HEAPU8[$86+2>>0]<<16)|(HEAPU8[$86+3>>0]<<24);
    $88 = $2;
    __gc_add($84,$87,$88);
    break L6;
    break;
   }
   case 4:  {
    $89 = $obj;
    (__dispose_object($89)|0);
    break L6;
    break;
   }
   default: {
    break L6;
   }
   }
  }
 } while(0);
 $90 = $obj;
 $91 = ($90|0)!=(0|0);
 if (!($91)) {
  ___assert_fail((4369|0),(4322|0),6693,(12913|0));
  // unreachable;
 }
 $92 = $obj;
 _mb_free($92);
 $obj = 0;
 $93 = $1;
 $obj = $93;
 $94 = $obj;
 $95 = ((($94)) + 4|0);
 $96 = HEAPU8[$95>>0]|(HEAPU8[$95+1>>0]<<8)|(HEAPU8[$95+2>>0]<<16)|(HEAPU8[$95+3>>0]<<24);
 $97 = ($96|0)!=(0|0);
 if ($97) {
  $98 = $2;
  $99 = ((($98)) + 8|0);
  $100 = HEAPU8[$99>>0]|(HEAPU8[$99+1>>0]<<8)|(HEAPU8[$99+2>>0]<<16)|(HEAPU8[$99+3>>0]<<24);
  $101 = $obj;
  $102 = ((($101)) + 4|0);
  $103 = HEAPU8[$102>>0]|(HEAPU8[$102+1>>0]<<8)|(HEAPU8[$102+2>>0]<<16)|(HEAPU8[$102+3>>0]<<24);
  $104 = (__ht_find($100,$103)|0);
  $105 = ($104|0)!=(0|0);
  if (!($105)) {
   label = 23;
  }
 } else {
  label = 23;
 }
 L28: do {
  if ((label|0) == 23) {
   $106 = $obj;
   $107 = HEAPU8[$106>>0]|(HEAPU8[$106+1>>0]<<8)|(HEAPU8[$106+2>>0]<<16)|(HEAPU8[$106+3>>0]<<24);
   switch ($107|0) {
   case 7:  {
    $108 = $obj;
    $109 = ((($108)) + 4|0);
    $110 = HEAPU8[$109>>0]|(HEAPU8[$109+1>>0]<<8)|(HEAPU8[$109+2>>0]<<16)|(HEAPU8[$109+3>>0]<<24);
    $111 = $obj;
    $112 = ((($111)) + 4|0);
    $113 = HEAPU8[$112>>0]|(HEAPU8[$112+1>>0]<<8)|(HEAPU8[$112+2>>0]<<16)|(HEAPU8[$112+3>>0]<<24);
    $114 = $2;
    __gc_add($110,$113,$114);
    break L28;
    break;
   }
   case 10:  {
    $115 = $obj;
    $116 = ((($115)) + 8|0);
    $117 = HEAP8[$116>>0]|0;
    $118 = $117 & 1;
    $119 = ($118<<24>>24)!=(0);
    if ($119) {
     break L28;
    }
    $120 = $obj;
    $121 = ((($120)) + 4|0);
    $122 = HEAPU8[$121>>0]|(HEAPU8[$121+1>>0]<<8)|(HEAPU8[$121+2>>0]<<16)|(HEAPU8[$121+3>>0]<<24);
    $123 = $obj;
    $124 = ((($123)) + 4|0);
    $125 = HEAPU8[$124>>0]|(HEAPU8[$124+1>>0]<<8)|(HEAPU8[$124+2>>0]<<16)|(HEAPU8[$124+3>>0]<<24);
    $126 = $2;
    __gc_add($122,$125,$126);
    break L28;
    break;
   }
   case 11:  {
    $127 = $obj;
    $128 = ((($127)) + 4|0);
    $129 = HEAPU8[$128>>0]|(HEAPU8[$128+1>>0]<<8)|(HEAPU8[$128+2>>0]<<16)|(HEAPU8[$128+3>>0]<<24);
    $130 = $obj;
    $131 = ((($130)) + 4|0);
    $132 = HEAPU8[$131>>0]|(HEAPU8[$131+1>>0]<<8)|(HEAPU8[$131+2>>0]<<16)|(HEAPU8[$131+3>>0]<<24);
    $133 = $2;
    __gc_add($129,$132,$133);
    break L28;
    break;
   }
   case 13:  {
    $134 = $obj;
    $135 = ((($134)) + 4|0);
    $136 = HEAPU8[$135>>0]|(HEAPU8[$135+1>>0]<<8)|(HEAPU8[$135+2>>0]<<16)|(HEAPU8[$135+3>>0]<<24);
    $137 = $obj;
    $138 = ((($137)) + 4|0);
    $139 = HEAPU8[$138>>0]|(HEAPU8[$138+1>>0]<<8)|(HEAPU8[$138+2>>0]<<16)|(HEAPU8[$138+3>>0]<<24);
    $140 = $2;
    __gc_add($136,$139,$140);
    break L28;
    break;
   }
   case 12:  {
    $141 = $obj;
    $142 = ((($141)) + 4|0);
    $143 = HEAPU8[$142>>0]|(HEAPU8[$142+1>>0]<<8)|(HEAPU8[$142+2>>0]<<16)|(HEAPU8[$142+3>>0]<<24);
    (__destroy_list_it($143)|0);
    break L28;
    break;
   }
   case 14:  {
    $144 = $obj;
    $145 = ((($144)) + 4|0);
    $146 = HEAPU8[$145>>0]|(HEAPU8[$145+1>>0]<<8)|(HEAPU8[$145+2>>0]<<16)|(HEAPU8[$145+3>>0]<<24);
    (__destroy_dict_it($146)|0);
    break L28;
    break;
   }
   case 16:  {
    $147 = $obj;
    $148 = ((($147)) + 8|0);
    $149 = HEAP8[$148>>0]|0;
    $150 = $149 & 1;
    $151 = ($150<<24>>24)!=(0);
    if ($151) {
     break L28;
    }
    $152 = $obj;
    $153 = ((($152)) + 4|0);
    $154 = HEAPU8[$153>>0]|(HEAPU8[$153+1>>0]<<8)|(HEAPU8[$153+2>>0]<<16)|(HEAPU8[$153+3>>0]<<24);
    $155 = $obj;
    $156 = ((($155)) + 4|0);
    $157 = HEAPU8[$156>>0]|(HEAPU8[$156+1>>0]<<8)|(HEAPU8[$156+2>>0]<<16)|(HEAPU8[$156+3>>0]<<24);
    $158 = $2;
    __gc_add($154,$157,$158);
    break L28;
    break;
   }
   case 17:  {
    $159 = $obj;
    $160 = ((($159)) + 8|0);
    $161 = HEAP8[$160>>0]|0;
    $162 = $161 & 1;
    $163 = ($162<<24>>24)!=(0);
    if ($163) {
     break L28;
    }
    $164 = $obj;
    $165 = ((($164)) + 4|0);
    $166 = HEAPU8[$165>>0]|(HEAPU8[$165+1>>0]<<8)|(HEAPU8[$165+2>>0]<<16)|(HEAPU8[$165+3>>0]<<24);
    $167 = ((($166)) + 58|0);
    $168 = HEAPU8[$167>>0]|(HEAPU8[$167+1>>0]<<8)|(HEAPU8[$167+2>>0]<<16)|(HEAPU8[$167+3>>0]<<24);
    $169 = ($168|0)==(2);
    if (!($169)) {
     break L28;
    }
    $170 = $obj;
    $171 = ((($170)) + 4|0);
    $172 = HEAPU8[$171>>0]|(HEAPU8[$171+1>>0]<<8)|(HEAPU8[$171+2>>0]<<16)|(HEAPU8[$171+3>>0]<<24);
    $173 = $obj;
    $174 = ((($173)) + 4|0);
    $175 = HEAPU8[$174>>0]|(HEAPU8[$174+1>>0]<<8)|(HEAPU8[$174+2>>0]<<16)|(HEAPU8[$174+3>>0]<<24);
    $176 = $2;
    __gc_add($172,$175,$176);
    break L28;
    break;
   }
   case 4:  {
    $177 = $obj;
    (__dispose_object($177)|0);
    break L28;
    break;
   }
   default: {
    break L28;
   }
   }
  }
 } while(0);
 $178 = $obj;
 $179 = ($178|0)!=(0|0);
 if ($179) {
  $180 = $obj;
  _mb_free($180);
  $obj = 0;
  $181 = $result;
  STACKTOP = sp;return ($181|0);
 } else {
  ___assert_fail((4369|0),(4322|0),6697,(12913|0));
  // unreachable;
 }
 return (0)|0;
}
function __remove_this_lambda_from_upvalue($data,$extra,$routine) {
 $data = $data|0;
 $extra = $extra|0;
 $routine = $routine|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $obj = 0, $result = 0, dest = 0;
 var label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $data;
 $1 = $extra;
 $2 = $routine;
 $result = 0;
 $obj = 0;
 $3 = $2;
 $4 = ((($3)) + 58|0);
 $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
 $6 = ($5|0)==(2);
 if (!($6)) {
  ___assert_fail((12810|0),(4322|0),9188,(12840|0));
  // unreachable;
 }
 $7 = $0;
 $obj = $7;
 $8 = $obj;
 $9 = ($8|0)!=(0|0);
 if ($9) {
  $10 = $obj;
  $11 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
  $12 = ($11|0)==(9);
  if ($12) {
   $13 = $obj;
   $14 = ((($13)) + 4|0);
   $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
   $16 = ((($15)) + 4|0);
   $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
   $obj = $17;
  }
 }
 $18 = $obj;
 $19 = ($18|0)!=(0|0);
 if (!($19)) {
  $36 = $result;
  STACKTOP = sp;return ($36|0);
 }
 $20 = $obj;
 $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
 $22 = ($21|0)==(17);
 if (!($22)) {
  $36 = $result;
  STACKTOP = sp;return ($36|0);
 }
 $23 = $obj;
 $24 = ((($23)) + 4|0);
 $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
 $26 = $2;
 $27 = ($25|0)==($26|0);
 if (!($27)) {
  $36 = $result;
  STACKTOP = sp;return ($36|0);
 }
 $28 = $obj;
 $29 = ((($28)) + 4|0);
 $30 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8)|(HEAPU8[$29+2>>0]<<16)|(HEAPU8[$29+3>>0]<<24);
 $31 = ((($30)) + 58|0);
 $32 = HEAPU8[$31>>0]|(HEAPU8[$31+1>>0]<<8)|(HEAPU8[$31+2>>0]<<16)|(HEAPU8[$31+3>>0]<<24);
 $33 = ($32|0)==(2);
 if (!($33)) {
  ___assert_fail((12873|0),(4322|0),9195,(12840|0));
  // unreachable;
 }
 $34 = $obj;
 dest=$34; stop=dest+17|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
 $35 = $obj;
 HEAP8[$35>>0]=0&255;HEAP8[$35+1>>0]=(0>>8)&255;HEAP8[$35+2>>0]=(0>>16)&255;HEAP8[$35+3>>0]=0>>24;
 $36 = $result;
 STACKTOP = sp;return ($36|0);
}
function __gc_destroy_garbage_in_class($data,$extra,$gc) {
 $data = $data|0;
 $extra = $extra|0;
 $gc = $gc|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $obj = 0, $result = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $data;
 $1 = $extra;
 $2 = $gc;
 $result = -1;
 $obj = 0;
 $3 = $0;
 $4 = ($3|0)!=(0|0);
 if (!($4)) {
  ___assert_fail((6381|0),(4322|0),6709,(12995|0));
  // unreachable;
 }
 $5 = $0;
 $obj = $5;
 $6 = $obj;
 $7 = ($6|0)!=(0|0);
 do {
  if ($7) {
   $8 = $obj;
   $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
   $10 = ($9|0)==(9);
   if ($10) {
    $11 = $obj;
    $12 = ((($11)) + 4|0);
    $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
    $14 = ((($13)) + 4|0);
    $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
    $16 = $2;
    (__gc_destroy_garbage_in_class($15,0,$16)|0);
    $17 = $obj;
    $18 = ((($17)) + 4|0);
    $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
    $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8)|(HEAPU8[$19+2>>0]<<16)|(HEAPU8[$19+3>>0]<<24);
    $21 = ($20|0)!=(0|0);
    if (!($21)) {
     ___assert_fail((4369|0),(4322|0),6714,(12995|0));
     // unreachable;
    }
    $22 = $obj;
    $23 = ((($22)) + 4|0);
    $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
    $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
    _mb_free($25);
    $26 = $obj;
    $27 = ((($26)) + 4|0);
    $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
    HEAP8[$28>>0]=0&255;HEAP8[$28+1>>0]=(0>>8)&255;HEAP8[$28+2>>0]=(0>>16)&255;HEAP8[$28+3>>0]=0>>24;
    $29 = $obj;
    $30 = ((($29)) + 4|0);
    $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8)|(HEAPU8[$30+2>>0]<<16)|(HEAPU8[$30+3>>0]<<24);
    $32 = ($31|0)!=(0|0);
    if ($32) {
     $33 = $obj;
     $34 = ((($33)) + 4|0);
     $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
     _mb_free($35);
     $36 = $obj;
     $37 = ((($36)) + 4|0);
     HEAP8[$37>>0]=0&255;HEAP8[$37+1>>0]=(0>>8)&255;HEAP8[$37+2>>0]=(0>>16)&255;HEAP8[$37+3>>0]=0>>24;
     break;
    } else {
     ___assert_fail((4369|0),(4322|0),6715,(12995|0));
     // unreachable;
    }
   } else {
    label = 10;
   }
  } else {
   label = 10;
  }
 } while(0);
 L13: do {
  if ((label|0) == 10) {
   $38 = $obj;
   $39 = ((($38)) + 4|0);
   $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8)|(HEAPU8[$39+2>>0]<<16)|(HEAPU8[$39+3>>0]<<24);
   $41 = ($40|0)!=(0|0);
   if ($41) {
    $42 = $2;
    $43 = ((($42)) + 8|0);
    $44 = HEAPU8[$43>>0]|(HEAPU8[$43+1>>0]<<8)|(HEAPU8[$43+2>>0]<<16)|(HEAPU8[$43+3>>0]<<24);
    $45 = $obj;
    $46 = ((($45)) + 4|0);
    $47 = HEAPU8[$46>>0]|(HEAPU8[$46+1>>0]<<8)|(HEAPU8[$46+2>>0]<<16)|(HEAPU8[$46+3>>0]<<24);
    $48 = (__ht_find($44,$47)|0);
    $49 = ($48|0)!=(0|0);
    if ($49) {
     break;
    }
   }
   $50 = $obj;
   $51 = HEAPU8[$50>>0]|(HEAPU8[$50+1>>0]<<8)|(HEAPU8[$50+2>>0]<<16)|(HEAPU8[$50+3>>0]<<24);
   switch ($51|0) {
   case 7:  {
    $52 = $obj;
    $53 = ((($52)) + 4|0);
    $54 = HEAPU8[$53>>0]|(HEAPU8[$53+1>>0]<<8)|(HEAPU8[$53+2>>0]<<16)|(HEAPU8[$53+3>>0]<<24);
    $55 = $obj;
    $56 = ((($55)) + 4|0);
    $57 = HEAPU8[$56>>0]|(HEAPU8[$56+1>>0]<<8)|(HEAPU8[$56+2>>0]<<16)|(HEAPU8[$56+3>>0]<<24);
    $58 = $2;
    __gc_add($54,$57,$58);
    break L13;
    break;
   }
   case 10:  {
    $59 = $obj;
    $60 = ((($59)) + 8|0);
    $61 = HEAP8[$60>>0]|0;
    $62 = $61 & 1;
    $63 = ($62<<24>>24)!=(0);
    if ($63) {
     break L13;
    }
    $64 = $obj;
    $65 = ((($64)) + 4|0);
    $66 = HEAPU8[$65>>0]|(HEAPU8[$65+1>>0]<<8)|(HEAPU8[$65+2>>0]<<16)|(HEAPU8[$65+3>>0]<<24);
    $67 = $obj;
    $68 = ((($67)) + 4|0);
    $69 = HEAPU8[$68>>0]|(HEAPU8[$68+1>>0]<<8)|(HEAPU8[$68+2>>0]<<16)|(HEAPU8[$68+3>>0]<<24);
    $70 = $2;
    __gc_add($66,$69,$70);
    break L13;
    break;
   }
   case 11:  {
    $71 = $obj;
    $72 = ((($71)) + 4|0);
    $73 = HEAPU8[$72>>0]|(HEAPU8[$72+1>>0]<<8)|(HEAPU8[$72+2>>0]<<16)|(HEAPU8[$72+3>>0]<<24);
    $74 = $obj;
    $75 = ((($74)) + 4|0);
    $76 = HEAPU8[$75>>0]|(HEAPU8[$75+1>>0]<<8)|(HEAPU8[$75+2>>0]<<16)|(HEAPU8[$75+3>>0]<<24);
    $77 = $2;
    __gc_add($73,$76,$77);
    break L13;
    break;
   }
   case 13:  {
    $78 = $obj;
    $79 = ((($78)) + 4|0);
    $80 = HEAPU8[$79>>0]|(HEAPU8[$79+1>>0]<<8)|(HEAPU8[$79+2>>0]<<16)|(HEAPU8[$79+3>>0]<<24);
    $81 = $obj;
    $82 = ((($81)) + 4|0);
    $83 = HEAPU8[$82>>0]|(HEAPU8[$82+1>>0]<<8)|(HEAPU8[$82+2>>0]<<16)|(HEAPU8[$82+3>>0]<<24);
    $84 = $2;
    __gc_add($80,$83,$84);
    break L13;
    break;
   }
   case 12:  {
    $85 = $obj;
    $86 = ((($85)) + 4|0);
    $87 = HEAPU8[$86>>0]|(HEAPU8[$86+1>>0]<<8)|(HEAPU8[$86+2>>0]<<16)|(HEAPU8[$86+3>>0]<<24);
    (__destroy_list_it($87)|0);
    break L13;
    break;
   }
   case 14:  {
    $88 = $obj;
    $89 = ((($88)) + 4|0);
    $90 = HEAPU8[$89>>0]|(HEAPU8[$89+1>>0]<<8)|(HEAPU8[$89+2>>0]<<16)|(HEAPU8[$89+3>>0]<<24);
    (__destroy_dict_it($90)|0);
    break L13;
    break;
   }
   case 16:  {
    $91 = $obj;
    $92 = ((($91)) + 8|0);
    $93 = HEAP8[$92>>0]|0;
    $94 = $93 & 1;
    $95 = ($94<<24>>24)!=(0);
    if ($95) {
     break L13;
    }
    $96 = $obj;
    $97 = ((($96)) + 4|0);
    $98 = HEAPU8[$97>>0]|(HEAPU8[$97+1>>0]<<8)|(HEAPU8[$97+2>>0]<<16)|(HEAPU8[$97+3>>0]<<24);
    $99 = $obj;
    $100 = ((($99)) + 4|0);
    $101 = HEAPU8[$100>>0]|(HEAPU8[$100+1>>0]<<8)|(HEAPU8[$100+2>>0]<<16)|(HEAPU8[$100+3>>0]<<24);
    $102 = $2;
    __gc_add($98,$101,$102);
    break L13;
    break;
   }
   case 17:  {
    $103 = $obj;
    $104 = ((($103)) + 8|0);
    $105 = HEAP8[$104>>0]|0;
    $106 = $105 & 1;
    $107 = ($106<<24>>24)!=(0);
    if (!($107)) {
     $108 = $obj;
     $109 = ((($108)) + 4|0);
     $110 = HEAPU8[$109>>0]|(HEAPU8[$109+1>>0]<<8)|(HEAPU8[$109+2>>0]<<16)|(HEAPU8[$109+3>>0]<<24);
     $111 = ((($110)) + 58|0);
     $112 = HEAPU8[$111>>0]|(HEAPU8[$111+1>>0]<<8)|(HEAPU8[$111+2>>0]<<16)|(HEAPU8[$111+3>>0]<<24);
     $113 = ($112|0)==(2);
     if ($113) {
      $114 = $obj;
      $115 = ((($114)) + 4|0);
      $116 = HEAPU8[$115>>0]|(HEAPU8[$115+1>>0]<<8)|(HEAPU8[$115+2>>0]<<16)|(HEAPU8[$115+3>>0]<<24);
      $117 = $obj;
      $118 = ((($117)) + 4|0);
      $119 = HEAPU8[$118>>0]|(HEAPU8[$118+1>>0]<<8)|(HEAPU8[$118+2>>0]<<16)|(HEAPU8[$118+3>>0]<<24);
      $120 = $2;
      __gc_add($116,$119,$120);
      break L13;
     }
    }
    $121 = $obj;
    $122 = ((($121)) + 8|0);
    $123 = HEAP8[$122>>0]|0;
    $124 = $123 & 1;
    $125 = ($124<<24>>24)!=(0);
    if ($125) {
     break L13;
    }
    $126 = $obj;
    $127 = ((($126)) + 4|0);
    $128 = HEAPU8[$127>>0]|(HEAPU8[$127+1>>0]<<8)|(HEAPU8[$127+2>>0]<<16)|(HEAPU8[$127+3>>0]<<24);
    $129 = ((($128)) + 58|0);
    $130 = HEAPU8[$129>>0]|(HEAPU8[$129+1>>0]<<8)|(HEAPU8[$129+2>>0]<<16)|(HEAPU8[$129+3>>0]<<24);
    $131 = ($130|0)!=(2);
    if (!($131)) {
     break L13;
    }
    $132 = $obj;
    (__dispose_object($132)|0);
    break L13;
    break;
   }
   case 4:  {
    $133 = $obj;
    (__dispose_object($133)|0);
    break L13;
    break;
   }
   default: {
    break L13;
   }
   }
  }
 } while(0);
 $134 = $obj;
 $135 = ($134|0)!=(0|0);
 if ($135) {
  $136 = $obj;
  _mb_free($136);
  $obj = 0;
  $137 = $result;
  STACKTOP = sp;return ($137|0);
 } else {
  ___assert_fail((4369|0),(4322|0),6719,(12995|0));
  // unreachable;
 }
 return (0)|0;
}
function __gc_add_reachable($data,$extra,$h) {
 $data = $data|0;
 $extra = $extra|0;
 $h = $h|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0;
 var $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0;
 var $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0;
 var $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0;
 var $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0;
 var $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0;
 var $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0;
 var $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0;
 var $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0;
 var $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0;
 var $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0;
 var $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0;
 var $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0;
 var $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0;
 var $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0;
 var $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0;
 var $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0;
 var $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0;
 var $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0;
 var $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__bucket = 0, $__bucket12 = 0, $__bucket17 = 0, $__bucket7 = 0, $__lst = 0, $__lst1 = 0, $__lst14 = 0, $__lst19 = 0, $__lst4 = 0, $__lst9 = 0, $__opresult = 0, $__opresult10 = 0, $__opresult15 = 0;
 var $__opresult2 = 0, $__opresult20 = 0, $__opresult5 = 0, $__tmp = 0, $__tmp11 = 0, $__tmp16 = 0, $__tmp21 = 0, $__tmp3 = 0, $__tmp6 = 0, $__ul = 0, $__ul13 = 0, $__ul18 = 0, $__ul8 = 0, $ht = 0, $obj = 0, $or$cond = 0, $outs = 0, $result = 0, $val = 0, $val$byval_copy = 0;
 var $var = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $val$byval_copy = sp + 136|0;
 $val = sp + 144|0;
 $0 = $data;
 $1 = $extra;
 $2 = $h;
 $result = 0;
 $obj = 0;
 $var = 0;
 $ht = 0;
 $3 = $0;
 $4 = ($3|0)!=(0|0);
 $5 = $2;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if (!($or$cond)) {
  ___assert_fail((13024|0),(4322|0),6512,(13034|0));
  // unreachable;
 }
 $7 = $2;
 $ht = $7;
 $8 = $0;
 $obj = $8;
 $9 = $obj;
 $10 = (__is_internal_object($9)|0);
 $11 = ($10<<24>>24)!=(0);
 if ($11) {
  $626 = $result;
  STACKTOP = sp;return ($626|0);
 }
 $12 = $obj;
 $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
 do {
  switch ($13|0) {
  case 9:  {
   $14 = $obj;
   $15 = ((($14)) + 4|0);
   $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
   $var = $16;
   $17 = $var;
   $18 = ((($17)) + 4|0);
   $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
   $20 = $1;
   $21 = $ht;
   (__gc_add_reachable($19,$20,$21)|0);
   $626 = $result;
   STACKTOP = sp;return ($626|0);
   break;
  }
  case 7:  {
   $22 = $ht;
   $23 = $obj;
   $24 = ((($23)) + 4|0);
   $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
   $26 = (__ht_find($22,$25)|0);
   $27 = ($26|0)!=(0|0);
   if (!($27)) {
    $28 = $ht;
    $29 = $obj;
    $30 = ((($29)) + 4|0);
    $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8)|(HEAPU8[$30+2>>0]<<16)|(HEAPU8[$30+3>>0]<<24);
    $32 = $obj;
    $33 = ((($32)) + 4|0);
    $34 = HEAPU8[$33>>0]|(HEAPU8[$33+1>>0]<<8)|(HEAPU8[$33+2>>0]<<16)|(HEAPU8[$33+3>>0]<<24);
    (__ht_set_or_insert($28,$31,$34)|0);
   }
   $35 = $obj;
   $36 = ((($35)) + 4|0);
   $37 = HEAPU8[$36>>0]|(HEAPU8[$36+1>>0]<<8)|(HEAPU8[$36+2>>0]<<16)|(HEAPU8[$36+3>>0]<<24);
   $38 = ((($37)) + 41|0);
   $39 = HEAPU8[$38>>0]|(HEAPU8[$38+1>>0]<<8)|(HEAPU8[$38+2>>0]<<16)|(HEAPU8[$38+3>>0]<<24);
   $40 = ($39|0)!=(0|0);
   if (!($40)) {
    $626 = $result;
    STACKTOP = sp;return ($626|0);
   }
   $41 = ((($val)) + 4|0);
   ;HEAP8[$41>>0]=0|0;HEAP8[$41+1>>0]=0|0;HEAP8[$41+2>>0]=0|0;HEAP8[$41+3>>0]=0|0;
   HEAP8[$val>>0]=0&255;HEAP8[$val+1>>0]=(0>>8)&255;HEAP8[$val+2>>0]=(0>>16)&255;HEAP8[$val+3>>0]=0>>24;
   $42 = $obj;
   (__internal_object_to_public_value($42,$val)|0);
   $43 = $obj;
   $44 = ((($43)) + 4|0);
   $45 = HEAPU8[$44>>0]|(HEAPU8[$44+1>>0]<<8)|(HEAPU8[$44+2>>0]<<16)|(HEAPU8[$44+3>>0]<<24);
   $46 = ((($45)) + 41|0);
   $47 = HEAPU8[$46>>0]|(HEAPU8[$46+1>>0]<<8)|(HEAPU8[$46+2>>0]<<16)|(HEAPU8[$46+3>>0]<<24);
   $48 = $obj;
   $49 = ((($48)) + 4|0);
   $50 = HEAPU8[$49>>0]|(HEAPU8[$49+1>>0]<<8)|(HEAPU8[$49+2>>0]<<16)|(HEAPU8[$49+3>>0]<<24);
   $51 = ((($50)) + 13|0);
   $52 = HEAPU8[$51>>0]|(HEAPU8[$51+1>>0]<<8)|(HEAPU8[$51+2>>0]<<16)|(HEAPU8[$51+3>>0]<<24);
   $53 = $2;
   ;HEAP32[$val$byval_copy>>2]=HEAP32[$val>>2]|0;HEAP32[$val$byval_copy+4>>2]=HEAP32[$val+4>>2]|0;
   FUNCTION_TABLE_viiii[$47 & 0]($52,$53,$val$byval_copy,140);
   $626 = $result;
   STACKTOP = sp;return ($626|0);
   break;
  }
  case 10:  {
   $54 = $ht;
   $55 = $obj;
   $56 = ((($55)) + 4|0);
   $57 = HEAPU8[$56>>0]|(HEAPU8[$56+1>>0]<<8)|(HEAPU8[$56+2>>0]<<16)|(HEAPU8[$56+3>>0]<<24);
   $58 = (__ht_find($54,$57)|0);
   $59 = ($58|0)!=(0|0);
   if ($59) {
    $626 = $result;
    STACKTOP = sp;return ($626|0);
   }
   $60 = $ht;
   $61 = $obj;
   $62 = ((($61)) + 4|0);
   $63 = HEAPU8[$62>>0]|(HEAPU8[$62+1>>0]<<8)|(HEAPU8[$62+2>>0]<<16)|(HEAPU8[$62+3>>0]<<24);
   $64 = $obj;
   $65 = ((($64)) + 4|0);
   $66 = HEAPU8[$65>>0]|(HEAPU8[$65+1>>0]<<8)|(HEAPU8[$65+2>>0]<<16)|(HEAPU8[$65+3>>0]<<24);
   (__ht_set_or_insert($60,$63,$66)|0);
   $626 = $result;
   STACKTOP = sp;return ($626|0);
   break;
  }
  case 11:  {
   $67 = $ht;
   $68 = $obj;
   $69 = ((($68)) + 4|0);
   $70 = HEAPU8[$69>>0]|(HEAPU8[$69+1>>0]<<8)|(HEAPU8[$69+2>>0]<<16)|(HEAPU8[$69+3>>0]<<24);
   $71 = (__ht_find($67,$70)|0);
   $72 = ($71|0)!=(0|0);
   if ($72) {
    $626 = $result;
    STACKTOP = sp;return ($626|0);
   }
   $73 = $ht;
   $74 = $obj;
   $75 = ((($74)) + 4|0);
   $76 = HEAPU8[$75>>0]|(HEAPU8[$75+1>>0]<<8)|(HEAPU8[$75+2>>0]<<16)|(HEAPU8[$75+3>>0]<<24);
   $77 = $obj;
   $78 = ((($77)) + 4|0);
   $79 = HEAPU8[$78>>0]|(HEAPU8[$78+1>>0]<<8)|(HEAPU8[$78+2>>0]<<16)|(HEAPU8[$78+3>>0]<<24);
   (__ht_set_or_insert($73,$76,$79)|0);
   $80 = $obj;
   $81 = ((($80)) + 4|0);
   $82 = HEAPU8[$81>>0]|(HEAPU8[$81+1>>0]<<8)|(HEAPU8[$81+2>>0]<<16)|(HEAPU8[$81+3>>0]<<24);
   $83 = ((($82)) + 19|0);
   $84 = HEAPU8[$83>>0]|(HEAPU8[$83+1>>0]<<8)|(HEAPU8[$83+2>>0]<<16)|(HEAPU8[$83+3>>0]<<24);
   $__lst = $84;
   $__opresult = 0;
   $__tmp = 0;
   $85 = $obj;
   $86 = ((($85)) + 4|0);
   $87 = HEAPU8[$86>>0]|(HEAPU8[$86+1>>0]<<8)|(HEAPU8[$86+2>>0]<<16)|(HEAPU8[$86+3>>0]<<24);
   $88 = ((($87)) + 19|0);
   $89 = HEAPU8[$88>>0]|(HEAPU8[$88+1>>0]<<8)|(HEAPU8[$88+2>>0]<<16)|(HEAPU8[$88+3>>0]<<24);
   $90 = ($89|0)!=(0|0);
   if (!($90)) {
    ___assert_fail((9376|0),(4322|0),6550,(13034|0));
    // unreachable;
   }
   $91 = $__lst;
   $92 = ((($91)) + 8|0);
   $93 = HEAPU8[$92>>0]|(HEAPU8[$92+1>>0]<<8)|(HEAPU8[$92+2>>0]<<16)|(HEAPU8[$92+3>>0]<<24);
   $__lst = $93;
   while(1) {
    $94 = $__lst;
    $95 = ($94|0)!=(0|0);
    if (!($95)) {
     label = 102;
     break;
    }
    $96 = $__lst;
    $97 = HEAPU8[$96>>0]|(HEAPU8[$96+1>>0]<<8)|(HEAPU8[$96+2>>0]<<16)|(HEAPU8[$96+3>>0]<<24);
    $98 = $__lst;
    $99 = ((($98)) + 12|0);
    $100 = HEAPU8[$99>>0]|(HEAPU8[$99+1>>0]<<8)|(HEAPU8[$99+2>>0]<<16)|(HEAPU8[$99+3>>0]<<24);
    $101 = $ht;
    (__gc_add_reachable($97,$100,$101)|0);
    $102 = $__lst;
    $103 = HEAPU8[$102>>0]|(HEAPU8[$102+1>>0]<<8)|(HEAPU8[$102+2>>0]<<16)|(HEAPU8[$102+3>>0]<<24);
    $104 = $__lst;
    $105 = ((($104)) + 12|0);
    $106 = HEAPU8[$105>>0]|(HEAPU8[$105+1>>0]<<8)|(HEAPU8[$105+2>>0]<<16)|(HEAPU8[$105+3>>0]<<24);
    $107 = (__do_nothing_on_object($103,$106)|0);
    $__opresult = $107;
    $108 = $__lst;
    $__tmp = $108;
    $109 = $__lst;
    $110 = ((($109)) + 8|0);
    $111 = HEAPU8[$110>>0]|(HEAPU8[$110+1>>0]<<8)|(HEAPU8[$110+2>>0]<<16)|(HEAPU8[$110+3>>0]<<24);
    $__lst = $111;
    $112 = $__opresult;
    $113 = (-1)==($112|0);
    if (!($113)) {
     continue;
    }
    $114 = $__lst;
    $115 = $__tmp;
    $116 = ((($115)) + 4|0);
    $117 = HEAPU8[$116>>0]|(HEAPU8[$116+1>>0]<<8)|(HEAPU8[$116+2>>0]<<16)|(HEAPU8[$116+3>>0]<<24);
    $118 = ((($117)) + 8|0);
    HEAP8[$118>>0]=$114&255;HEAP8[$118+1>>0]=($114>>8)&255;HEAP8[$118+2>>0]=($114>>16)&255;HEAP8[$118+3>>0]=$114>>24;
    $119 = $__lst;
    $120 = ($119|0)!=(0|0);
    if ($120) {
     $121 = $__tmp;
     $122 = ((($121)) + 4|0);
     $123 = HEAPU8[$122>>0]|(HEAPU8[$122+1>>0]<<8)|(HEAPU8[$122+2>>0]<<16)|(HEAPU8[$122+3>>0]<<24);
     $124 = $__lst;
     $125 = ((($124)) + 4|0);
     HEAP8[$125>>0]=$123&255;HEAP8[$125+1>>0]=($123>>8)&255;HEAP8[$125+2>>0]=($123>>16)&255;HEAP8[$125+3>>0]=$123>>24;
    }
    $126 = $__tmp;
    $127 = ($126|0)!=(0|0);
    if (!($127)) {
     label = 22;
     break;
    }
    $128 = $__tmp;
    _mb_free($128);
    $__tmp = 0;
    $129 = $obj;
    $130 = ((($129)) + 4|0);
    $131 = HEAPU8[$130>>0]|(HEAPU8[$130+1>>0]<<8)|(HEAPU8[$130+2>>0]<<16)|(HEAPU8[$130+3>>0]<<24);
    $132 = ((($131)) + 19|0);
    $133 = HEAPU8[$132>>0]|(HEAPU8[$132+1>>0]<<8)|(HEAPU8[$132+2>>0]<<16)|(HEAPU8[$132+3>>0]<<24);
    $134 = HEAPU8[$133>>0]|(HEAPU8[$133+1>>0]<<8)|(HEAPU8[$133+2>>0]<<16)|(HEAPU8[$133+3>>0]<<24);
    $135 = ((($134)) + -1|0);
    $136 = $obj;
    $137 = ((($136)) + 4|0);
    $138 = HEAPU8[$137>>0]|(HEAPU8[$137+1>>0]<<8)|(HEAPU8[$137+2>>0]<<16)|(HEAPU8[$137+3>>0]<<24);
    $139 = ((($138)) + 19|0);
    $140 = HEAPU8[$139>>0]|(HEAPU8[$139+1>>0]<<8)|(HEAPU8[$139+2>>0]<<16)|(HEAPU8[$139+3>>0]<<24);
    HEAP8[$140>>0]=$135&255;HEAP8[$140+1>>0]=($135>>8)&255;HEAP8[$140+2>>0]=($135>>16)&255;HEAP8[$140+3>>0]=$135>>24;
   }
   if ((label|0) == 22) {
    ___assert_fail((4369|0),(4322|0),6550,(13034|0));
    // unreachable;
   }
   else if ((label|0) == 102) {
    $626 = $result;
    STACKTOP = sp;return ($626|0);
   }
   break;
  }
  case 13:  {
   $141 = $ht;
   $142 = $obj;
   $143 = ((($142)) + 4|0);
   $144 = HEAPU8[$143>>0]|(HEAPU8[$143+1>>0]<<8)|(HEAPU8[$143+2>>0]<<16)|(HEAPU8[$143+3>>0]<<24);
   $145 = (__ht_find($141,$144)|0);
   $146 = ($145|0)!=(0|0);
   if ($146) {
    $626 = $result;
    STACKTOP = sp;return ($626|0);
   }
   $147 = $ht;
   $148 = $obj;
   $149 = ((($148)) + 4|0);
   $150 = HEAPU8[$149>>0]|(HEAPU8[$149+1>>0]<<8)|(HEAPU8[$149+2>>0]<<16)|(HEAPU8[$149+3>>0]<<24);
   $151 = $obj;
   $152 = ((($151)) + 4|0);
   $153 = HEAPU8[$152>>0]|(HEAPU8[$152+1>>0]<<8)|(HEAPU8[$152+2>>0]<<16)|(HEAPU8[$152+3>>0]<<24);
   (__ht_set_or_insert($147,$150,$153)|0);
   $__bucket = 0;
   $__ul = 0;
   $154 = $obj;
   $155 = ((($154)) + 4|0);
   $156 = HEAPU8[$155>>0]|(HEAPU8[$155+1>>0]<<8)|(HEAPU8[$155+2>>0]<<16)|(HEAPU8[$155+3>>0]<<24);
   $157 = ((($156)) + 19|0);
   $158 = HEAPU8[$157>>0]|(HEAPU8[$157+1>>0]<<8)|(HEAPU8[$157+2>>0]<<16)|(HEAPU8[$157+3>>0]<<24);
   $159 = ((($158)) + 20|0);
   $160 = HEAPU8[$159>>0]|(HEAPU8[$159+1>>0]<<8)|(HEAPU8[$159+2>>0]<<16)|(HEAPU8[$159+3>>0]<<24);
   $161 = ($160|0)!=(0|0);
   if (!($161)) {
    $626 = $result;
    STACKTOP = sp;return ($626|0);
   }
   $__ul = 0;
   L48: while(1) {
    $162 = $__ul;
    $163 = $obj;
    $164 = ((($163)) + 4|0);
    $165 = HEAPU8[$164>>0]|(HEAPU8[$164+1>>0]<<8)|(HEAPU8[$164+2>>0]<<16)|(HEAPU8[$164+3>>0]<<24);
    $166 = ((($165)) + 19|0);
    $167 = HEAPU8[$166>>0]|(HEAPU8[$166+1>>0]<<8)|(HEAPU8[$166+2>>0]<<16)|(HEAPU8[$166+3>>0]<<24);
    $168 = ((($167)) + 12|0);
    $169 = HEAPU8[$168>>0]|(HEAPU8[$168+1>>0]<<8)|(HEAPU8[$168+2>>0]<<16)|(HEAPU8[$168+3>>0]<<24);
    $170 = ($162>>>0)<($169>>>0);
    if (!($170)) {
     label = 102;
     break;
    }
    $171 = $__ul;
    $172 = $obj;
    $173 = ((($172)) + 4|0);
    $174 = HEAPU8[$173>>0]|(HEAPU8[$173+1>>0]<<8)|(HEAPU8[$173+2>>0]<<16)|(HEAPU8[$173+3>>0]<<24);
    $175 = ((($174)) + 19|0);
    $176 = HEAPU8[$175>>0]|(HEAPU8[$175+1>>0]<<8)|(HEAPU8[$175+2>>0]<<16)|(HEAPU8[$175+3>>0]<<24);
    $177 = ((($176)) + 20|0);
    $178 = HEAPU8[$177>>0]|(HEAPU8[$177+1>>0]<<8)|(HEAPU8[$177+2>>0]<<16)|(HEAPU8[$177+3>>0]<<24);
    $179 = (($178) + ($171<<2)|0);
    $180 = HEAP32[$179>>2]|0;
    $__bucket = $180;
    $181 = $__bucket;
    $182 = ($181|0)!=(0|0);
    L51: do {
     if ($182) {
      $183 = $__bucket;
      $__lst1 = $183;
      $__opresult2 = 0;
      $__tmp3 = 0;
      $184 = $__bucket;
      $185 = ($184|0)!=(0|0);
      if (!($185)) {
       label = 29;
       break L48;
      }
      $186 = $__lst1;
      $187 = ((($186)) + 8|0);
      $188 = HEAPU8[$187>>0]|(HEAPU8[$187+1>>0]<<8)|(HEAPU8[$187+2>>0]<<16)|(HEAPU8[$187+3>>0]<<24);
      $__lst1 = $188;
      while(1) {
       $189 = $__lst1;
       $190 = ($189|0)!=(0|0);
       if (!($190)) {
        break L51;
       }
       $191 = $__lst1;
       $192 = HEAPU8[$191>>0]|(HEAPU8[$191+1>>0]<<8)|(HEAPU8[$191+2>>0]<<16)|(HEAPU8[$191+3>>0]<<24);
       $193 = $__lst1;
       $194 = ((($193)) + 12|0);
       $195 = HEAPU8[$194>>0]|(HEAPU8[$194+1>>0]<<8)|(HEAPU8[$194+2>>0]<<16)|(HEAPU8[$194+3>>0]<<24);
       $196 = $ht;
       (__gc_add_reachable_both($192,$195,$196)|0);
       $197 = $__lst1;
       $198 = HEAPU8[$197>>0]|(HEAPU8[$197+1>>0]<<8)|(HEAPU8[$197+2>>0]<<16)|(HEAPU8[$197+3>>0]<<24);
       $199 = $__lst1;
       $200 = ((($199)) + 12|0);
       $201 = HEAPU8[$200>>0]|(HEAPU8[$200+1>>0]<<8)|(HEAPU8[$200+2>>0]<<16)|(HEAPU8[$200+3>>0]<<24);
       $202 = (__do_nothing_on_object($198,$201)|0);
       $__opresult2 = $202;
       $203 = $__lst1;
       $__tmp3 = $203;
       $204 = $__lst1;
       $205 = ((($204)) + 8|0);
       $206 = HEAPU8[$205>>0]|(HEAPU8[$205+1>>0]<<8)|(HEAPU8[$205+2>>0]<<16)|(HEAPU8[$205+3>>0]<<24);
       $__lst1 = $206;
       $207 = $__opresult2;
       $208 = (-1)==($207|0);
       if (!($208)) {
        continue;
       }
       $209 = $__lst1;
       $210 = $__tmp3;
       $211 = ((($210)) + 4|0);
       $212 = HEAPU8[$211>>0]|(HEAPU8[$211+1>>0]<<8)|(HEAPU8[$211+2>>0]<<16)|(HEAPU8[$211+3>>0]<<24);
       $213 = ((($212)) + 8|0);
       HEAP8[$213>>0]=$209&255;HEAP8[$213+1>>0]=($209>>8)&255;HEAP8[$213+2>>0]=($209>>16)&255;HEAP8[$213+3>>0]=$209>>24;
       $214 = $__lst1;
       $215 = ($214|0)!=(0|0);
       if ($215) {
        $216 = $__tmp3;
        $217 = ((($216)) + 4|0);
        $218 = HEAPU8[$217>>0]|(HEAPU8[$217+1>>0]<<8)|(HEAPU8[$217+2>>0]<<16)|(HEAPU8[$217+3>>0]<<24);
        $219 = $__lst1;
        $220 = ((($219)) + 4|0);
        HEAP8[$220>>0]=$218&255;HEAP8[$220+1>>0]=($218>>8)&255;HEAP8[$220+2>>0]=($218>>16)&255;HEAP8[$220+3>>0]=$218>>24;
       }
       $221 = $__tmp3;
       $222 = ($221|0)!=(0|0);
       if (!($222)) {
        label = 37;
        break L48;
       }
       $223 = $__tmp3;
       _mb_free($223);
       $__tmp3 = 0;
       $224 = $__bucket;
       $225 = HEAPU8[$224>>0]|(HEAPU8[$224+1>>0]<<8)|(HEAPU8[$224+2>>0]<<16)|(HEAPU8[$224+3>>0]<<24);
       $226 = ((($225)) + -1|0);
       $227 = $__bucket;
       HEAP8[$227>>0]=$226&255;HEAP8[$227+1>>0]=($226>>8)&255;HEAP8[$227+2>>0]=($226>>16)&255;HEAP8[$227+3>>0]=$226>>24;
      }
     }
    } while(0);
    $228 = $__ul;
    $229 = (($228) + 1)|0;
    $__ul = $229;
   }
   if ((label|0) == 29) {
    ___assert_fail((4526|0),(4322|0),6557,(13034|0));
    // unreachable;
   }
   else if ((label|0) == 37) {
    ___assert_fail((4369|0),(4322|0),6557,(13034|0));
    // unreachable;
   }
   else if ((label|0) == 102) {
    $626 = $result;
    STACKTOP = sp;return ($626|0);
   }
   break;
  }
  case 12:  {
   $230 = $ht;
   $231 = $obj;
   $232 = ((($231)) + 4|0);
   $233 = HEAPU8[$232>>0]|(HEAPU8[$232+1>>0]<<8)|(HEAPU8[$232+2>>0]<<16)|(HEAPU8[$232+3>>0]<<24);
   $234 = ((($233)) + 17|0);
   $235 = HEAPU8[$234>>0]|(HEAPU8[$234+1>>0]<<8)|(HEAPU8[$234+2>>0]<<16)|(HEAPU8[$234+3>>0]<<24);
   $236 = (__ht_find($230,$235)|0);
   $237 = ($236|0)!=(0|0);
   if ($237) {
    $626 = $result;
    STACKTOP = sp;return ($626|0);
   }
   $238 = $ht;
   $239 = $obj;
   $240 = ((($239)) + 4|0);
   $241 = HEAPU8[$240>>0]|(HEAPU8[$240+1>>0]<<8)|(HEAPU8[$240+2>>0]<<16)|(HEAPU8[$240+3>>0]<<24);
   $242 = ((($241)) + 17|0);
   $243 = HEAPU8[$242>>0]|(HEAPU8[$242+1>>0]<<8)|(HEAPU8[$242+2>>0]<<16)|(HEAPU8[$242+3>>0]<<24);
   $244 = $obj;
   $245 = ((($244)) + 4|0);
   $246 = HEAPU8[$245>>0]|(HEAPU8[$245+1>>0]<<8)|(HEAPU8[$245+2>>0]<<16)|(HEAPU8[$245+3>>0]<<24);
   $247 = ((($246)) + 17|0);
   $248 = HEAPU8[$247>>0]|(HEAPU8[$247+1>>0]<<8)|(HEAPU8[$247+2>>0]<<16)|(HEAPU8[$247+3>>0]<<24);
   (__ht_set_or_insert($238,$243,$248)|0);
   $249 = $obj;
   $250 = ((($249)) + 4|0);
   $251 = HEAPU8[$250>>0]|(HEAPU8[$250+1>>0]<<8)|(HEAPU8[$250+2>>0]<<16)|(HEAPU8[$250+3>>0]<<24);
   $252 = ((($251)) + 17|0);
   $253 = HEAPU8[$252>>0]|(HEAPU8[$252+1>>0]<<8)|(HEAPU8[$252+2>>0]<<16)|(HEAPU8[$252+3>>0]<<24);
   $254 = ((($253)) + 19|0);
   $255 = HEAPU8[$254>>0]|(HEAPU8[$254+1>>0]<<8)|(HEAPU8[$254+2>>0]<<16)|(HEAPU8[$254+3>>0]<<24);
   $__lst4 = $255;
   $__opresult5 = 0;
   $__tmp6 = 0;
   $256 = $obj;
   $257 = ((($256)) + 4|0);
   $258 = HEAPU8[$257>>0]|(HEAPU8[$257+1>>0]<<8)|(HEAPU8[$257+2>>0]<<16)|(HEAPU8[$257+3>>0]<<24);
   $259 = ((($258)) + 17|0);
   $260 = HEAPU8[$259>>0]|(HEAPU8[$259+1>>0]<<8)|(HEAPU8[$259+2>>0]<<16)|(HEAPU8[$259+3>>0]<<24);
   $261 = ((($260)) + 19|0);
   $262 = HEAPU8[$261>>0]|(HEAPU8[$261+1>>0]<<8)|(HEAPU8[$261+2>>0]<<16)|(HEAPU8[$261+3>>0]<<24);
   $263 = ($262|0)!=(0|0);
   if (!($263)) {
    ___assert_fail((13052|0),(4322|0),6564,(13034|0));
    // unreachable;
   }
   $264 = $__lst4;
   $265 = ((($264)) + 8|0);
   $266 = HEAPU8[$265>>0]|(HEAPU8[$265+1>>0]<<8)|(HEAPU8[$265+2>>0]<<16)|(HEAPU8[$265+3>>0]<<24);
   $__lst4 = $266;
   while(1) {
    $267 = $__lst4;
    $268 = ($267|0)!=(0|0);
    if (!($268)) {
     label = 102;
     break;
    }
    $269 = $__lst4;
    $270 = HEAPU8[$269>>0]|(HEAPU8[$269+1>>0]<<8)|(HEAPU8[$269+2>>0]<<16)|(HEAPU8[$269+3>>0]<<24);
    $271 = $__lst4;
    $272 = ((($271)) + 12|0);
    $273 = HEAPU8[$272>>0]|(HEAPU8[$272+1>>0]<<8)|(HEAPU8[$272+2>>0]<<16)|(HEAPU8[$272+3>>0]<<24);
    $274 = $ht;
    (__gc_add_reachable($270,$273,$274)|0);
    $275 = $__lst4;
    $276 = HEAPU8[$275>>0]|(HEAPU8[$275+1>>0]<<8)|(HEAPU8[$275+2>>0]<<16)|(HEAPU8[$275+3>>0]<<24);
    $277 = $__lst4;
    $278 = ((($277)) + 12|0);
    $279 = HEAPU8[$278>>0]|(HEAPU8[$278+1>>0]<<8)|(HEAPU8[$278+2>>0]<<16)|(HEAPU8[$278+3>>0]<<24);
    $280 = (__do_nothing_on_object($276,$279)|0);
    $__opresult5 = $280;
    $281 = $__lst4;
    $__tmp6 = $281;
    $282 = $__lst4;
    $283 = ((($282)) + 8|0);
    $284 = HEAPU8[$283>>0]|(HEAPU8[$283+1>>0]<<8)|(HEAPU8[$283+2>>0]<<16)|(HEAPU8[$283+3>>0]<<24);
    $__lst4 = $284;
    $285 = $__opresult5;
    $286 = (-1)==($285|0);
    if (!($286)) {
     continue;
    }
    $287 = $__lst4;
    $288 = $__tmp6;
    $289 = ((($288)) + 4|0);
    $290 = HEAPU8[$289>>0]|(HEAPU8[$289+1>>0]<<8)|(HEAPU8[$289+2>>0]<<16)|(HEAPU8[$289+3>>0]<<24);
    $291 = ((($290)) + 8|0);
    HEAP8[$291>>0]=$287&255;HEAP8[$291+1>>0]=($287>>8)&255;HEAP8[$291+2>>0]=($287>>16)&255;HEAP8[$291+3>>0]=$287>>24;
    $292 = $__lst4;
    $293 = ($292|0)!=(0|0);
    if ($293) {
     $294 = $__tmp6;
     $295 = ((($294)) + 4|0);
     $296 = HEAPU8[$295>>0]|(HEAPU8[$295+1>>0]<<8)|(HEAPU8[$295+2>>0]<<16)|(HEAPU8[$295+3>>0]<<24);
     $297 = $__lst4;
     $298 = ((($297)) + 4|0);
     HEAP8[$298>>0]=$296&255;HEAP8[$298+1>>0]=($296>>8)&255;HEAP8[$298+2>>0]=($296>>16)&255;HEAP8[$298+3>>0]=$296>>24;
    }
    $299 = $__tmp6;
    $300 = ($299|0)!=(0|0);
    if (!($300)) {
     label = 49;
     break;
    }
    $301 = $__tmp6;
    _mb_free($301);
    $__tmp6 = 0;
    $302 = $obj;
    $303 = ((($302)) + 4|0);
    $304 = HEAPU8[$303>>0]|(HEAPU8[$303+1>>0]<<8)|(HEAPU8[$303+2>>0]<<16)|(HEAPU8[$303+3>>0]<<24);
    $305 = ((($304)) + 17|0);
    $306 = HEAPU8[$305>>0]|(HEAPU8[$305+1>>0]<<8)|(HEAPU8[$305+2>>0]<<16)|(HEAPU8[$305+3>>0]<<24);
    $307 = ((($306)) + 19|0);
    $308 = HEAPU8[$307>>0]|(HEAPU8[$307+1>>0]<<8)|(HEAPU8[$307+2>>0]<<16)|(HEAPU8[$307+3>>0]<<24);
    $309 = HEAPU8[$308>>0]|(HEAPU8[$308+1>>0]<<8)|(HEAPU8[$308+2>>0]<<16)|(HEAPU8[$308+3>>0]<<24);
    $310 = ((($309)) + -1|0);
    $311 = $obj;
    $312 = ((($311)) + 4|0);
    $313 = HEAPU8[$312>>0]|(HEAPU8[$312+1>>0]<<8)|(HEAPU8[$312+2>>0]<<16)|(HEAPU8[$312+3>>0]<<24);
    $314 = ((($313)) + 17|0);
    $315 = HEAPU8[$314>>0]|(HEAPU8[$314+1>>0]<<8)|(HEAPU8[$314+2>>0]<<16)|(HEAPU8[$314+3>>0]<<24);
    $316 = ((($315)) + 19|0);
    $317 = HEAPU8[$316>>0]|(HEAPU8[$316+1>>0]<<8)|(HEAPU8[$316+2>>0]<<16)|(HEAPU8[$316+3>>0]<<24);
    HEAP8[$317>>0]=$310&255;HEAP8[$317+1>>0]=($310>>8)&255;HEAP8[$317+2>>0]=($310>>16)&255;HEAP8[$317+3>>0]=$310>>24;
   }
   if ((label|0) == 49) {
    ___assert_fail((4369|0),(4322|0),6564,(13034|0));
    // unreachable;
   }
   else if ((label|0) == 102) {
    $626 = $result;
    STACKTOP = sp;return ($626|0);
   }
   break;
  }
  case 14:  {
   $318 = $ht;
   $319 = $obj;
   $320 = ((($319)) + 4|0);
   $321 = HEAPU8[$320>>0]|(HEAPU8[$320+1>>0]<<8)|(HEAPU8[$320+2>>0]<<16)|(HEAPU8[$320+3>>0]<<24);
   $322 = ((($321)) + 17|0);
   $323 = HEAPU8[$322>>0]|(HEAPU8[$322+1>>0]<<8)|(HEAPU8[$322+2>>0]<<16)|(HEAPU8[$322+3>>0]<<24);
   $324 = (__ht_find($318,$323)|0);
   $325 = ($324|0)!=(0|0);
   if ($325) {
    $626 = $result;
    STACKTOP = sp;return ($626|0);
   }
   $326 = $ht;
   $327 = $obj;
   $328 = ((($327)) + 4|0);
   $329 = HEAPU8[$328>>0]|(HEAPU8[$328+1>>0]<<8)|(HEAPU8[$328+2>>0]<<16)|(HEAPU8[$328+3>>0]<<24);
   $330 = ((($329)) + 17|0);
   $331 = HEAPU8[$330>>0]|(HEAPU8[$330+1>>0]<<8)|(HEAPU8[$330+2>>0]<<16)|(HEAPU8[$330+3>>0]<<24);
   $332 = $obj;
   $333 = ((($332)) + 4|0);
   $334 = HEAPU8[$333>>0]|(HEAPU8[$333+1>>0]<<8)|(HEAPU8[$333+2>>0]<<16)|(HEAPU8[$333+3>>0]<<24);
   $335 = ((($334)) + 17|0);
   $336 = HEAPU8[$335>>0]|(HEAPU8[$335+1>>0]<<8)|(HEAPU8[$335+2>>0]<<16)|(HEAPU8[$335+3>>0]<<24);
   (__ht_set_or_insert($326,$331,$336)|0);
   $__bucket7 = 0;
   $__ul8 = 0;
   $337 = $obj;
   $338 = ((($337)) + 4|0);
   $339 = HEAPU8[$338>>0]|(HEAPU8[$338+1>>0]<<8)|(HEAPU8[$338+2>>0]<<16)|(HEAPU8[$338+3>>0]<<24);
   $340 = ((($339)) + 17|0);
   $341 = HEAPU8[$340>>0]|(HEAPU8[$340+1>>0]<<8)|(HEAPU8[$340+2>>0]<<16)|(HEAPU8[$340+3>>0]<<24);
   $342 = ((($341)) + 19|0);
   $343 = HEAPU8[$342>>0]|(HEAPU8[$342+1>>0]<<8)|(HEAPU8[$342+2>>0]<<16)|(HEAPU8[$342+3>>0]<<24);
   $344 = ((($343)) + 20|0);
   $345 = HEAPU8[$344>>0]|(HEAPU8[$344+1>>0]<<8)|(HEAPU8[$344+2>>0]<<16)|(HEAPU8[$344+3>>0]<<24);
   $346 = ($345|0)!=(0|0);
   if (!($346)) {
    $626 = $result;
    STACKTOP = sp;return ($626|0);
   }
   $__ul8 = 0;
   L92: while(1) {
    $347 = $__ul8;
    $348 = $obj;
    $349 = ((($348)) + 4|0);
    $350 = HEAPU8[$349>>0]|(HEAPU8[$349+1>>0]<<8)|(HEAPU8[$349+2>>0]<<16)|(HEAPU8[$349+3>>0]<<24);
    $351 = ((($350)) + 17|0);
    $352 = HEAPU8[$351>>0]|(HEAPU8[$351+1>>0]<<8)|(HEAPU8[$351+2>>0]<<16)|(HEAPU8[$351+3>>0]<<24);
    $353 = ((($352)) + 19|0);
    $354 = HEAPU8[$353>>0]|(HEAPU8[$353+1>>0]<<8)|(HEAPU8[$353+2>>0]<<16)|(HEAPU8[$353+3>>0]<<24);
    $355 = ((($354)) + 12|0);
    $356 = HEAPU8[$355>>0]|(HEAPU8[$355+1>>0]<<8)|(HEAPU8[$355+2>>0]<<16)|(HEAPU8[$355+3>>0]<<24);
    $357 = ($347>>>0)<($356>>>0);
    if (!($357)) {
     label = 102;
     break;
    }
    $358 = $__ul8;
    $359 = $obj;
    $360 = ((($359)) + 4|0);
    $361 = HEAPU8[$360>>0]|(HEAPU8[$360+1>>0]<<8)|(HEAPU8[$360+2>>0]<<16)|(HEAPU8[$360+3>>0]<<24);
    $362 = ((($361)) + 17|0);
    $363 = HEAPU8[$362>>0]|(HEAPU8[$362+1>>0]<<8)|(HEAPU8[$362+2>>0]<<16)|(HEAPU8[$362+3>>0]<<24);
    $364 = ((($363)) + 19|0);
    $365 = HEAPU8[$364>>0]|(HEAPU8[$364+1>>0]<<8)|(HEAPU8[$364+2>>0]<<16)|(HEAPU8[$364+3>>0]<<24);
    $366 = ((($365)) + 20|0);
    $367 = HEAPU8[$366>>0]|(HEAPU8[$366+1>>0]<<8)|(HEAPU8[$366+2>>0]<<16)|(HEAPU8[$366+3>>0]<<24);
    $368 = (($367) + ($358<<2)|0);
    $369 = HEAP32[$368>>2]|0;
    $__bucket7 = $369;
    $370 = $__bucket7;
    $371 = ($370|0)!=(0|0);
    L95: do {
     if ($371) {
      $372 = $__bucket7;
      $__lst9 = $372;
      $__opresult10 = 0;
      $__tmp11 = 0;
      $373 = $__bucket7;
      $374 = ($373|0)!=(0|0);
      if (!($374)) {
       label = 56;
       break L92;
      }
      $375 = $__lst9;
      $376 = ((($375)) + 8|0);
      $377 = HEAPU8[$376>>0]|(HEAPU8[$376+1>>0]<<8)|(HEAPU8[$376+2>>0]<<16)|(HEAPU8[$376+3>>0]<<24);
      $__lst9 = $377;
      while(1) {
       $378 = $__lst9;
       $379 = ($378|0)!=(0|0);
       if (!($379)) {
        break L95;
       }
       $380 = $__lst9;
       $381 = HEAPU8[$380>>0]|(HEAPU8[$380+1>>0]<<8)|(HEAPU8[$380+2>>0]<<16)|(HEAPU8[$380+3>>0]<<24);
       $382 = $__lst9;
       $383 = ((($382)) + 12|0);
       $384 = HEAPU8[$383>>0]|(HEAPU8[$383+1>>0]<<8)|(HEAPU8[$383+2>>0]<<16)|(HEAPU8[$383+3>>0]<<24);
       $385 = $ht;
       (__gc_add_reachable_both($381,$384,$385)|0);
       $386 = $__lst9;
       $387 = HEAPU8[$386>>0]|(HEAPU8[$386+1>>0]<<8)|(HEAPU8[$386+2>>0]<<16)|(HEAPU8[$386+3>>0]<<24);
       $388 = $__lst9;
       $389 = ((($388)) + 12|0);
       $390 = HEAPU8[$389>>0]|(HEAPU8[$389+1>>0]<<8)|(HEAPU8[$389+2>>0]<<16)|(HEAPU8[$389+3>>0]<<24);
       $391 = (__do_nothing_on_object($387,$390)|0);
       $__opresult10 = $391;
       $392 = $__lst9;
       $__tmp11 = $392;
       $393 = $__lst9;
       $394 = ((($393)) + 8|0);
       $395 = HEAPU8[$394>>0]|(HEAPU8[$394+1>>0]<<8)|(HEAPU8[$394+2>>0]<<16)|(HEAPU8[$394+3>>0]<<24);
       $__lst9 = $395;
       $396 = $__opresult10;
       $397 = (-1)==($396|0);
       if (!($397)) {
        continue;
       }
       $398 = $__lst9;
       $399 = $__tmp11;
       $400 = ((($399)) + 4|0);
       $401 = HEAPU8[$400>>0]|(HEAPU8[$400+1>>0]<<8)|(HEAPU8[$400+2>>0]<<16)|(HEAPU8[$400+3>>0]<<24);
       $402 = ((($401)) + 8|0);
       HEAP8[$402>>0]=$398&255;HEAP8[$402+1>>0]=($398>>8)&255;HEAP8[$402+2>>0]=($398>>16)&255;HEAP8[$402+3>>0]=$398>>24;
       $403 = $__lst9;
       $404 = ($403|0)!=(0|0);
       if ($404) {
        $405 = $__tmp11;
        $406 = ((($405)) + 4|0);
        $407 = HEAPU8[$406>>0]|(HEAPU8[$406+1>>0]<<8)|(HEAPU8[$406+2>>0]<<16)|(HEAPU8[$406+3>>0]<<24);
        $408 = $__lst9;
        $409 = ((($408)) + 4|0);
        HEAP8[$409>>0]=$407&255;HEAP8[$409+1>>0]=($407>>8)&255;HEAP8[$409+2>>0]=($407>>16)&255;HEAP8[$409+3>>0]=$407>>24;
       }
       $410 = $__tmp11;
       $411 = ($410|0)!=(0|0);
       if (!($411)) {
        label = 64;
        break L92;
       }
       $412 = $__tmp11;
       _mb_free($412);
       $__tmp11 = 0;
       $413 = $__bucket7;
       $414 = HEAPU8[$413>>0]|(HEAPU8[$413+1>>0]<<8)|(HEAPU8[$413+2>>0]<<16)|(HEAPU8[$413+3>>0]<<24);
       $415 = ((($414)) + -1|0);
       $416 = $__bucket7;
       HEAP8[$416>>0]=$415&255;HEAP8[$416+1>>0]=($415>>8)&255;HEAP8[$416+2>>0]=($415>>16)&255;HEAP8[$416+3>>0]=$415>>24;
      }
     }
    } while(0);
    $417 = $__ul8;
    $418 = (($417) + 1)|0;
    $__ul8 = $418;
   }
   if ((label|0) == 56) {
    ___assert_fail((4526|0),(4322|0),6571,(13034|0));
    // unreachable;
   }
   else if ((label|0) == 64) {
    ___assert_fail((4369|0),(4322|0),6571,(13034|0));
    // unreachable;
   }
   else if ((label|0) == 102) {
    $626 = $result;
    STACKTOP = sp;return ($626|0);
   }
   break;
  }
  case 16:  {
   $419 = $ht;
   $420 = $obj;
   $421 = ((($420)) + 4|0);
   $422 = HEAPU8[$421>>0]|(HEAPU8[$421+1>>0]<<8)|(HEAPU8[$421+2>>0]<<16)|(HEAPU8[$421+3>>0]<<24);
   $423 = (__ht_find($419,$422)|0);
   $424 = ($423|0)!=(0|0);
   if ($424) {
    $626 = $result;
    STACKTOP = sp;return ($626|0);
   }
   $425 = $ht;
   $426 = $obj;
   $427 = ((($426)) + 4|0);
   $428 = HEAPU8[$427>>0]|(HEAPU8[$427+1>>0]<<8)|(HEAPU8[$427+2>>0]<<16)|(HEAPU8[$427+3>>0]<<24);
   $429 = $obj;
   $430 = ((($429)) + 4|0);
   $431 = HEAPU8[$430>>0]|(HEAPU8[$430+1>>0]<<8)|(HEAPU8[$430+2>>0]<<16)|(HEAPU8[$430+3>>0]<<24);
   (__ht_set_or_insert($425,$428,$431)|0);
   $432 = $obj;
   $433 = ((($432)) + 4|0);
   $434 = HEAPU8[$433>>0]|(HEAPU8[$433+1>>0]<<8)|(HEAPU8[$433+2>>0]<<16)|(HEAPU8[$433+3>>0]<<24);
   $435 = $ht;
   (__traverse_class($434,164,165,-1,0,$435,0)|0);
   $626 = $result;
   STACKTOP = sp;return ($626|0);
   break;
  }
  case 17:  {
   $436 = $obj;
   $437 = ((($436)) + 4|0);
   $438 = HEAPU8[$437>>0]|(HEAPU8[$437+1>>0]<<8)|(HEAPU8[$437+2>>0]<<16)|(HEAPU8[$437+3>>0]<<24);
   $439 = ((($438)) + 58|0);
   $440 = HEAPU8[$439>>0]|(HEAPU8[$439+1>>0]<<8)|(HEAPU8[$439+2>>0]<<16)|(HEAPU8[$439+3>>0]<<24);
   $441 = ($440|0)==(2);
   if (!($441)) {
    $626 = $result;
    STACKTOP = sp;return ($626|0);
   }
   $442 = $ht;
   $443 = $obj;
   $444 = ((($443)) + 4|0);
   $445 = HEAPU8[$444>>0]|(HEAPU8[$444+1>>0]<<8)|(HEAPU8[$444+2>>0]<<16)|(HEAPU8[$444+3>>0]<<24);
   $446 = (__ht_find($442,$445)|0);
   $447 = ($446|0)!=(0|0);
   if ($447) {
    $626 = $result;
    STACKTOP = sp;return ($626|0);
   }
   $448 = $obj;
   $449 = ((($448)) + 4|0);
   $450 = HEAPU8[$449>>0]|(HEAPU8[$449+1>>0]<<8)|(HEAPU8[$449+2>>0]<<16)|(HEAPU8[$449+3>>0]<<24);
   $451 = ((($450)) + 25|0);
   $452 = HEAPU8[$451>>0]|(HEAPU8[$451+1>>0]<<8)|(HEAPU8[$451+2>>0]<<16)|(HEAPU8[$451+3>>0]<<24);
   $outs = $452;
   $453 = $ht;
   $454 = $obj;
   $455 = ((($454)) + 4|0);
   $456 = HEAPU8[$455>>0]|(HEAPU8[$455+1>>0]<<8)|(HEAPU8[$455+2>>0]<<16)|(HEAPU8[$455+3>>0]<<24);
   $457 = $obj;
   $458 = ((($457)) + 4|0);
   $459 = HEAPU8[$458>>0]|(HEAPU8[$458+1>>0]<<8)|(HEAPU8[$458+2>>0]<<16)|(HEAPU8[$458+3>>0]<<24);
   (__ht_set_or_insert($453,$456,$459)|0);
   $__bucket12 = 0;
   $__ul13 = 0;
   $460 = $obj;
   $461 = ((($460)) + 4|0);
   $462 = HEAPU8[$461>>0]|(HEAPU8[$461+1>>0]<<8)|(HEAPU8[$461+2>>0]<<16)|(HEAPU8[$461+3>>0]<<24);
   $463 = ((($462)) + 17|0);
   $464 = HEAPU8[$463>>0]|(HEAPU8[$463+1>>0]<<8)|(HEAPU8[$463+2>>0]<<16)|(HEAPU8[$463+3>>0]<<24);
   $465 = ((($464)) + 8|0);
   $466 = HEAPU8[$465>>0]|(HEAPU8[$465+1>>0]<<8)|(HEAPU8[$465+2>>0]<<16)|(HEAPU8[$465+3>>0]<<24);
   $467 = ((($466)) + 20|0);
   $468 = HEAPU8[$467>>0]|(HEAPU8[$467+1>>0]<<8)|(HEAPU8[$467+2>>0]<<16)|(HEAPU8[$467+3>>0]<<24);
   $469 = ($468|0)!=(0|0);
   L123: do {
    if ($469) {
     $__ul13 = 0;
     L125: while(1) {
      $470 = $__ul13;
      $471 = $obj;
      $472 = ((($471)) + 4|0);
      $473 = HEAPU8[$472>>0]|(HEAPU8[$472+1>>0]<<8)|(HEAPU8[$472+2>>0]<<16)|(HEAPU8[$472+3>>0]<<24);
      $474 = ((($473)) + 17|0);
      $475 = HEAPU8[$474>>0]|(HEAPU8[$474+1>>0]<<8)|(HEAPU8[$474+2>>0]<<16)|(HEAPU8[$474+3>>0]<<24);
      $476 = ((($475)) + 8|0);
      $477 = HEAPU8[$476>>0]|(HEAPU8[$476+1>>0]<<8)|(HEAPU8[$476+2>>0]<<16)|(HEAPU8[$476+3>>0]<<24);
      $478 = ((($477)) + 12|0);
      $479 = HEAPU8[$478>>0]|(HEAPU8[$478+1>>0]<<8)|(HEAPU8[$478+2>>0]<<16)|(HEAPU8[$478+3>>0]<<24);
      $480 = ($470>>>0)<($479>>>0);
      if (!($480)) {
       break L123;
      }
      $481 = $__ul13;
      $482 = $obj;
      $483 = ((($482)) + 4|0);
      $484 = HEAPU8[$483>>0]|(HEAPU8[$483+1>>0]<<8)|(HEAPU8[$483+2>>0]<<16)|(HEAPU8[$483+3>>0]<<24);
      $485 = ((($484)) + 17|0);
      $486 = HEAPU8[$485>>0]|(HEAPU8[$485+1>>0]<<8)|(HEAPU8[$485+2>>0]<<16)|(HEAPU8[$485+3>>0]<<24);
      $487 = ((($486)) + 8|0);
      $488 = HEAPU8[$487>>0]|(HEAPU8[$487+1>>0]<<8)|(HEAPU8[$487+2>>0]<<16)|(HEAPU8[$487+3>>0]<<24);
      $489 = ((($488)) + 20|0);
      $490 = HEAPU8[$489>>0]|(HEAPU8[$489+1>>0]<<8)|(HEAPU8[$489+2>>0]<<16)|(HEAPU8[$489+3>>0]<<24);
      $491 = (($490) + ($481<<2)|0);
      $492 = HEAP32[$491>>2]|0;
      $__bucket12 = $492;
      $493 = $__bucket12;
      $494 = ($493|0)!=(0|0);
      L128: do {
       if ($494) {
        $495 = $__bucket12;
        $__lst14 = $495;
        $__opresult15 = 0;
        $__tmp16 = 0;
        $496 = $__bucket12;
        $497 = ($496|0)!=(0|0);
        if (!($497)) {
         label = 75;
         break L125;
        }
        $498 = $__lst14;
        $499 = ((($498)) + 8|0);
        $500 = HEAPU8[$499>>0]|(HEAPU8[$499+1>>0]<<8)|(HEAPU8[$499+2>>0]<<16)|(HEAPU8[$499+3>>0]<<24);
        $__lst14 = $500;
        while(1) {
         $501 = $__lst14;
         $502 = ($501|0)!=(0|0);
         if (!($502)) {
          break L128;
         }
         $503 = $__lst14;
         $504 = HEAPU8[$503>>0]|(HEAPU8[$503+1>>0]<<8)|(HEAPU8[$503+2>>0]<<16)|(HEAPU8[$503+3>>0]<<24);
         $505 = $__lst14;
         $506 = ((($505)) + 12|0);
         $507 = HEAPU8[$506>>0]|(HEAPU8[$506+1>>0]<<8)|(HEAPU8[$506+2>>0]<<16)|(HEAPU8[$506+3>>0]<<24);
         $508 = $ht;
         (__gc_add_reachable($504,$507,$508)|0);
         $509 = $__lst14;
         $510 = HEAPU8[$509>>0]|(HEAPU8[$509+1>>0]<<8)|(HEAPU8[$509+2>>0]<<16)|(HEAPU8[$509+3>>0]<<24);
         $511 = $__lst14;
         $512 = ((($511)) + 12|0);
         $513 = HEAPU8[$512>>0]|(HEAPU8[$512+1>>0]<<8)|(HEAPU8[$512+2>>0]<<16)|(HEAPU8[$512+3>>0]<<24);
         $514 = (__do_nothing_on_object($510,$513)|0);
         $__opresult15 = $514;
         $515 = $__lst14;
         $__tmp16 = $515;
         $516 = $__lst14;
         $517 = ((($516)) + 8|0);
         $518 = HEAPU8[$517>>0]|(HEAPU8[$517+1>>0]<<8)|(HEAPU8[$517+2>>0]<<16)|(HEAPU8[$517+3>>0]<<24);
         $__lst14 = $518;
         $519 = $__opresult15;
         $520 = (-1)==($519|0);
         if (!($520)) {
          continue;
         }
         $521 = $__lst14;
         $522 = $__tmp16;
         $523 = ((($522)) + 4|0);
         $524 = HEAPU8[$523>>0]|(HEAPU8[$523+1>>0]<<8)|(HEAPU8[$523+2>>0]<<16)|(HEAPU8[$523+3>>0]<<24);
         $525 = ((($524)) + 8|0);
         HEAP8[$525>>0]=$521&255;HEAP8[$525+1>>0]=($521>>8)&255;HEAP8[$525+2>>0]=($521>>16)&255;HEAP8[$525+3>>0]=$521>>24;
         $526 = $__lst14;
         $527 = ($526|0)!=(0|0);
         if ($527) {
          $528 = $__tmp16;
          $529 = ((($528)) + 4|0);
          $530 = HEAPU8[$529>>0]|(HEAPU8[$529+1>>0]<<8)|(HEAPU8[$529+2>>0]<<16)|(HEAPU8[$529+3>>0]<<24);
          $531 = $__lst14;
          $532 = ((($531)) + 4|0);
          HEAP8[$532>>0]=$530&255;HEAP8[$532+1>>0]=($530>>8)&255;HEAP8[$532+2>>0]=($530>>16)&255;HEAP8[$532+3>>0]=$530>>24;
         }
         $533 = $__tmp16;
         $534 = ($533|0)!=(0|0);
         if (!($534)) {
          label = 83;
          break L125;
         }
         $535 = $__tmp16;
         _mb_free($535);
         $__tmp16 = 0;
         $536 = $__bucket12;
         $537 = HEAPU8[$536>>0]|(HEAPU8[$536+1>>0]<<8)|(HEAPU8[$536+2>>0]<<16)|(HEAPU8[$536+3>>0]<<24);
         $538 = ((($537)) + -1|0);
         $539 = $__bucket12;
         HEAP8[$539>>0]=$538&255;HEAP8[$539+1>>0]=($538>>8)&255;HEAP8[$539+2>>0]=($538>>16)&255;HEAP8[$539+3>>0]=$538>>24;
        }
       }
      } while(0);
      $540 = $__ul13;
      $541 = (($540) + 1)|0;
      $__ul13 = $541;
     }
     if ((label|0) == 75) {
      ___assert_fail((4526|0),(4322|0),6591,(13034|0));
      // unreachable;
     }
     else if ((label|0) == 83) {
      ___assert_fail((4369|0),(4322|0),6591,(13034|0));
      // unreachable;
     }
    }
   } while(0);
   L143: while(1) {
    $542 = $outs;
    $543 = ($542|0)!=(0|0);
    if (!($543)) {
     label = 102;
     break;
    }
    $544 = $ht;
    $545 = $outs;
    $546 = $outs;
    (__ht_set_or_insert($544,$545,$546)|0);
    $__bucket17 = 0;
    $__ul18 = 0;
    $547 = $outs;
    $548 = ((($547)) + 21|0);
    $549 = HEAPU8[$548>>0]|(HEAPU8[$548+1>>0]<<8)|(HEAPU8[$548+2>>0]<<16)|(HEAPU8[$548+3>>0]<<24);
    $550 = ((($549)) + 8|0);
    $551 = HEAPU8[$550>>0]|(HEAPU8[$550+1>>0]<<8)|(HEAPU8[$550+2>>0]<<16)|(HEAPU8[$550+3>>0]<<24);
    $552 = ((($551)) + 20|0);
    $553 = HEAPU8[$552>>0]|(HEAPU8[$552+1>>0]<<8)|(HEAPU8[$552+2>>0]<<16)|(HEAPU8[$552+3>>0]<<24);
    $554 = ($553|0)!=(0|0);
    L146: do {
     if ($554) {
      $__ul18 = 0;
      while(1) {
       $555 = $__ul18;
       $556 = $outs;
       $557 = ((($556)) + 21|0);
       $558 = HEAPU8[$557>>0]|(HEAPU8[$557+1>>0]<<8)|(HEAPU8[$557+2>>0]<<16)|(HEAPU8[$557+3>>0]<<24);
       $559 = ((($558)) + 8|0);
       $560 = HEAPU8[$559>>0]|(HEAPU8[$559+1>>0]<<8)|(HEAPU8[$559+2>>0]<<16)|(HEAPU8[$559+3>>0]<<24);
       $561 = ((($560)) + 12|0);
       $562 = HEAPU8[$561>>0]|(HEAPU8[$561+1>>0]<<8)|(HEAPU8[$561+2>>0]<<16)|(HEAPU8[$561+3>>0]<<24);
       $563 = ($555>>>0)<($562>>>0);
       if (!($563)) {
        break L146;
       }
       $564 = $__ul18;
       $565 = $outs;
       $566 = ((($565)) + 21|0);
       $567 = HEAPU8[$566>>0]|(HEAPU8[$566+1>>0]<<8)|(HEAPU8[$566+2>>0]<<16)|(HEAPU8[$566+3>>0]<<24);
       $568 = ((($567)) + 8|0);
       $569 = HEAPU8[$568>>0]|(HEAPU8[$568+1>>0]<<8)|(HEAPU8[$568+2>>0]<<16)|(HEAPU8[$568+3>>0]<<24);
       $570 = ((($569)) + 20|0);
       $571 = HEAPU8[$570>>0]|(HEAPU8[$570+1>>0]<<8)|(HEAPU8[$570+2>>0]<<16)|(HEAPU8[$570+3>>0]<<24);
       $572 = (($571) + ($564<<2)|0);
       $573 = HEAP32[$572>>2]|0;
       $__bucket17 = $573;
       $574 = $__bucket17;
       $575 = ($574|0)!=(0|0);
       L151: do {
        if ($575) {
         $576 = $__bucket17;
         $__lst19 = $576;
         $__opresult20 = 0;
         $__tmp21 = 0;
         $577 = $__bucket17;
         $578 = ($577|0)!=(0|0);
         if (!($578)) {
          label = 91;
          break L143;
         }
         $579 = $__lst19;
         $580 = ((($579)) + 8|0);
         $581 = HEAPU8[$580>>0]|(HEAPU8[$580+1>>0]<<8)|(HEAPU8[$580+2>>0]<<16)|(HEAPU8[$580+3>>0]<<24);
         $__lst19 = $581;
         while(1) {
          $582 = $__lst19;
          $583 = ($582|0)!=(0|0);
          if (!($583)) {
           break L151;
          }
          $584 = $__lst19;
          $585 = HEAPU8[$584>>0]|(HEAPU8[$584+1>>0]<<8)|(HEAPU8[$584+2>>0]<<16)|(HEAPU8[$584+3>>0]<<24);
          $586 = $__lst19;
          $587 = ((($586)) + 12|0);
          $588 = HEAPU8[$587>>0]|(HEAPU8[$587+1>>0]<<8)|(HEAPU8[$587+2>>0]<<16)|(HEAPU8[$587+3>>0]<<24);
          $589 = $ht;
          (__gc_add_reachable($585,$588,$589)|0);
          $590 = $__lst19;
          $591 = HEAPU8[$590>>0]|(HEAPU8[$590+1>>0]<<8)|(HEAPU8[$590+2>>0]<<16)|(HEAPU8[$590+3>>0]<<24);
          $592 = $__lst19;
          $593 = ((($592)) + 12|0);
          $594 = HEAPU8[$593>>0]|(HEAPU8[$593+1>>0]<<8)|(HEAPU8[$593+2>>0]<<16)|(HEAPU8[$593+3>>0]<<24);
          $595 = (__do_nothing_on_object($591,$594)|0);
          $__opresult20 = $595;
          $596 = $__lst19;
          $__tmp21 = $596;
          $597 = $__lst19;
          $598 = ((($597)) + 8|0);
          $599 = HEAPU8[$598>>0]|(HEAPU8[$598+1>>0]<<8)|(HEAPU8[$598+2>>0]<<16)|(HEAPU8[$598+3>>0]<<24);
          $__lst19 = $599;
          $600 = $__opresult20;
          $601 = (-1)==($600|0);
          if (!($601)) {
           continue;
          }
          $602 = $__lst19;
          $603 = $__tmp21;
          $604 = ((($603)) + 4|0);
          $605 = HEAPU8[$604>>0]|(HEAPU8[$604+1>>0]<<8)|(HEAPU8[$604+2>>0]<<16)|(HEAPU8[$604+3>>0]<<24);
          $606 = ((($605)) + 8|0);
          HEAP8[$606>>0]=$602&255;HEAP8[$606+1>>0]=($602>>8)&255;HEAP8[$606+2>>0]=($602>>16)&255;HEAP8[$606+3>>0]=$602>>24;
          $607 = $__lst19;
          $608 = ($607|0)!=(0|0);
          if ($608) {
           $609 = $__tmp21;
           $610 = ((($609)) + 4|0);
           $611 = HEAPU8[$610>>0]|(HEAPU8[$610+1>>0]<<8)|(HEAPU8[$610+2>>0]<<16)|(HEAPU8[$610+3>>0]<<24);
           $612 = $__lst19;
           $613 = ((($612)) + 4|0);
           HEAP8[$613>>0]=$611&255;HEAP8[$613+1>>0]=($611>>8)&255;HEAP8[$613+2>>0]=($611>>16)&255;HEAP8[$613+3>>0]=$611>>24;
          }
          $614 = $__tmp21;
          $615 = ($614|0)!=(0|0);
          if (!($615)) {
           label = 99;
           break L143;
          }
          $616 = $__tmp21;
          _mb_free($616);
          $__tmp21 = 0;
          $617 = $__bucket17;
          $618 = HEAPU8[$617>>0]|(HEAPU8[$617+1>>0]<<8)|(HEAPU8[$617+2>>0]<<16)|(HEAPU8[$617+3>>0]<<24);
          $619 = ((($618)) + -1|0);
          $620 = $__bucket17;
          HEAP8[$620>>0]=$619&255;HEAP8[$620+1>>0]=($619>>8)&255;HEAP8[$620+2>>0]=($619>>16)&255;HEAP8[$620+3>>0]=$619>>24;
         }
        }
       } while(0);
       $621 = $__ul18;
       $622 = (($621) + 1)|0;
       $__ul18 = $622;
      }
     }
    } while(0);
    $623 = $outs;
    $624 = ((($623)) + 17|0);
    $625 = HEAPU8[$624>>0]|(HEAPU8[$624+1>>0]<<8)|(HEAPU8[$624+2>>0]<<16)|(HEAPU8[$624+3>>0]<<24);
    $outs = $625;
   }
   if ((label|0) == 91) {
    ___assert_fail((4526|0),(4322|0),6594,(13034|0));
    // unreachable;
   }
   else if ((label|0) == 99) {
    ___assert_fail((4369|0),(4322|0),6594,(13034|0));
    // unreachable;
   }
   else if ((label|0) == 102) {
    $626 = $result;
    STACKTOP = sp;return ($626|0);
   }
   break;
  }
  default: {
   $626 = $result;
   STACKTOP = sp;return ($626|0);
  }
  }
 } while(0);
 return (0)|0;
}
function __gc_add_reachable_both($data,$extra,$h) {
 $data = $data|0;
 $extra = $extra|0;
 $h = $h|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0;
 var $or$cond3 = 0, $or$cond5 = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $data;
 $1 = $extra;
 $2 = $h;
 $result = 0;
 $3 = $0;
 $4 = ($3|0)!=(0|0);
 $5 = $1;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if ($or$cond) {
 }
 $7 = $0;
 $8 = ($7|0)!=(0|0);
 $9 = $1;
 $10 = ($9|0)!=(0|0);
 $or$cond3 = $8 & $10;
 $11 = $2;
 $12 = ($11|0)!=(0|0);
 $or$cond5 = $or$cond3 & $12;
 if ($or$cond5) {
  $13 = $1;
  $14 = $2;
  (__gc_add_reachable($13,0,$14)|0);
  $15 = $0;
  $16 = $1;
  $17 = $2;
  (__gc_add_reachable($15,$16,$17)|0);
  $18 = $result;
  STACKTOP = sp;return ($18|0);
 } else {
  ___assert_fail((13119|0),(4322|0),6614,(13138|0));
  // unreachable;
 }
 return (0)|0;
}
function __add_class_meta_reachable($meta,$ht,$ret) {
 $meta = $meta|0;
 $ht = $ht|0;
 $ret = $ret|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $htable = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $meta;
 $1 = $ht;
 $2 = $ret;
 $3 = $1;
 $htable = $3;
 $4 = $0;
 $5 = ($4|0)!=(0|0);
 $6 = $1;
 $7 = ($6|0)!=(0|0);
 $or$cond = $5 & $7;
 if (!($or$cond)) {
  ___assert_fail((13082|0),(4322|0),8602,(13093|0));
  // unreachable;
 }
 $8 = $htable;
 $9 = $0;
 $10 = (__ht_find($8,$9)|0);
 $11 = ($10|0)!=(0|0);
 if ($11) {
  STACKTOP = sp;return 1;
 }
 $12 = $htable;
 $13 = $0;
 $14 = $0;
 (__ht_set_or_insert($12,$13,$14)|0);
 STACKTOP = sp;return 1;
}
function __compare_public_value_and_internal_object($pbl,$itn) {
 $pbl = $pbl|0;
 $itn = $itn|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $7 = 0, $8 = 0, $9 = 0, $result = 0, $tmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $tmp = sp + 16|0;
 $0 = $pbl;
 $1 = $itn;
 $result = 0;
 $2 = ((($tmp)) + 4|0);
 ;HEAP8[$2>>0]=0|0;HEAP8[$2+1>>0]=0|0;HEAP8[$2+2>>0]=0|0;HEAP8[$2+3>>0]=0|0;
 HEAP8[$tmp>>0]=0&255;HEAP8[$tmp+1>>0]=(0>>8)&255;HEAP8[$tmp+2>>0]=(0>>16)&255;HEAP8[$tmp+3>>0]=0>>24;
 $3 = $1;
 (__internal_object_to_public_value($3,$tmp)|0);
 $4 = $0;
 $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
 $6 = HEAPU8[$tmp>>0]|(HEAPU8[$tmp+1>>0]<<8)|(HEAPU8[$tmp+2>>0]<<16)|(HEAPU8[$tmp+3>>0]<<24);
 $7 = ($5|0)!=($6|0);
 $8 = $0;
 $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
 L1: do {
  if ($7) {
   $10 = HEAPU8[$tmp>>0]|(HEAPU8[$tmp+1>>0]<<8)|(HEAPU8[$tmp+2>>0]<<16)|(HEAPU8[$tmp+3>>0]<<24);
   $11 = (($9) - ($10))|0;
   $result = $11;
  } else {
   do {
    switch ($9|0) {
    case 0:  {
     $result = 0;
     break L1;
     break;
    }
    case 2:  {
     $12 = $0;
     $13 = ((($12)) + 4|0);
     $14 = ((($tmp)) + 4|0);
     $15 = (_mb_memcmp($13,$14,4)|0);
     $result = $15;
     break L1;
     break;
    }
    case 4:  {
     $16 = $0;
     $17 = ((($16)) + 4|0);
     $18 = ((($tmp)) + 4|0);
     $19 = (_mb_memcmp($17,$18,4)|0);
     $result = $19;
     break L1;
     break;
    }
    case 8:  {
     $20 = $0;
     $21 = ((($20)) + 4|0);
     $22 = ((($tmp)) + 4|0);
     $23 = (_mb_memcmp($21,$22,4)|0);
     $result = $23;
     break L1;
     break;
    }
    case 16:  {
     $24 = $0;
     $25 = ((($24)) + 4|0);
     $26 = ((($tmp)) + 4|0);
     $27 = (_mb_memcmp($25,$26,4)|0);
     $result = $27;
     break L1;
     break;
    }
    case 32:  {
     $28 = $0;
     $29 = ((($28)) + 4|0);
     $30 = ((($tmp)) + 4|0);
     $31 = (_mb_memcmp($29,$30,4)|0);
     $result = $31;
     break L1;
     break;
    }
    case 64:  {
     $32 = $0;
     $33 = ((($32)) + 4|0);
     $34 = ((($tmp)) + 4|0);
     $35 = (_mb_memcmp($33,$34,4)|0);
     $result = $35;
     break L1;
     break;
    }
    case 128:  {
     $36 = $0;
     $37 = ((($36)) + 4|0);
     $38 = ((($tmp)) + 4|0);
     $39 = (_mb_memcmp($37,$38,4)|0);
     $result = $39;
     break L1;
     break;
    }
    case 256:  {
     $40 = $0;
     $41 = ((($40)) + 4|0);
     $42 = ((($tmp)) + 4|0);
     $43 = (_mb_memcmp($41,$42,4)|0);
     $result = $43;
     break L1;
     break;
    }
    case 512:  {
     $44 = $0;
     $45 = ((($44)) + 4|0);
     $46 = ((($tmp)) + 4|0);
     $47 = (_mb_memcmp($45,$46,4)|0);
     $result = $47;
     break L1;
     break;
    }
    case 1024:  {
     $48 = $0;
     $49 = ((($48)) + 4|0);
     $50 = ((($tmp)) + 4|0);
     $51 = (_mb_memcmp($49,$50,4)|0);
     $result = $51;
     break L1;
     break;
    }
    case 2048:  {
     $52 = $0;
     $53 = ((($52)) + 4|0);
     $54 = ((($tmp)) + 4|0);
     $55 = (_mb_memcmp($53,$54,4)|0);
     $result = $55;
     break L1;
     break;
    }
    case 4096:  {
     $56 = $0;
     $57 = ((($56)) + 4|0);
     $58 = ((($tmp)) + 4|0);
     $59 = (_mb_memcmp($57,$58,4)|0);
     $result = $59;
     break L1;
     break;
    }
    case 8192:  {
     $60 = $0;
     $61 = ((($60)) + 4|0);
     $62 = ((($tmp)) + 4|0);
     $63 = (_mb_memcmp($61,$62,4)|0);
     $result = $63;
     break L1;
     break;
    }
    default: {
     $64 = $0;
     $65 = ((($64)) + 4|0);
     $66 = ((($tmp)) + 4|0);
     $67 = (_mb_memcmp($65,$66,4)|0);
     $result = $67;
     break L1;
    }
    }
   } while(0);
  }
 } while(0);
 $68 = $result;
 STACKTOP = sp;return ($68|0);
}
function __core_new($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $__hr = 0, $__hr1 = 0, $__hr2 = 0, $__hr3 = 0, $arg = 0, $instance = 0, $obj = 0, $or$cond = 0, $result = 0, $ret = 0;
 var $ret$byval_copy = 0, $switch$split2D = 0, $tgt = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ret$byval_copy = sp + 40|0;
 $arg = sp + 96|0;
 $obj = sp + 73|0;
 $tgt = sp + 56|0;
 $ret = sp + 48|0;
 $1 = $s;
 $2 = $l;
 $result = 0;
 $instance = 0;
 $3 = $1;
 $4 = ($3|0)!=(0|0);
 $5 = $2;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),16859,(14149|0));
  // unreachable;
 }
 $7 = ((($ret)) + 4|0);
 ;HEAP8[$7>>0]=0|0;HEAP8[$7+1>>0]=0|0;HEAP8[$7+2>>0]=0|0;HEAP8[$7+3>>0]=0|0;
 HEAP8[$ret>>0]=0&255;HEAP8[$ret+1>>0]=(0>>8)&255;HEAP8[$ret+2>>0]=(0>>16)&255;HEAP8[$ret+3>>0]=0>>24;
 $8 = $1;
 $9 = $2;
 $10 = (_mb_attempt_func_begin($8,$9)|0);
 $__hr = $10;
 $11 = $__hr;
 $12 = ($11|0)!=(0);
 if ($12) {
  $13 = $__hr;
  $0 = $13;
  $89 = $0;
  STACKTOP = sp;return ($89|0);
 }
 $14 = $1;
 $15 = $2;
 $16 = (_mb_pop_value($14,$15,$arg)|0);
 $__hr1 = $16;
 $17 = $__hr1;
 $18 = ($17|0)!=(0);
 if ($18) {
  $19 = $__hr1;
  $0 = $19;
  $89 = $0;
  STACKTOP = sp;return ($89|0);
 }
 $20 = $1;
 $21 = $2;
 $22 = (_mb_attempt_func_end($20,$21)|0);
 $__hr2 = $22;
 $23 = $__hr2;
 $24 = ($23|0)!=(0);
 if ($24) {
  $25 = $__hr2;
  $0 = $25;
  $89 = $0;
  STACKTOP = sp;return ($89|0);
 }
 dest=$obj; stop=dest+17|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
 HEAP8[$obj>>0]=0&255;HEAP8[$obj+1>>0]=(0>>8)&255;HEAP8[$obj+2>>0]=(0>>16)&255;HEAP8[$obj+3>>0]=0>>24;
 dest=$tgt; stop=dest+17|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
 HEAP8[$tgt>>0]=0&255;HEAP8[$tgt+1>>0]=(0>>8)&255;HEAP8[$tgt+2>>0]=(0>>16)&255;HEAP8[$tgt+3>>0]=0>>24;
 $26 = HEAPU8[$arg>>0]|(HEAPU8[$arg+1>>0]<<8)|(HEAPU8[$arg+2>>0]<<16)|(HEAPU8[$arg+3>>0]<<24);
 $switch$split2D = ($26|0)<(4096);
 L16: do {
  if ($switch$split2D) {
   switch ($26|0) {
   case 8:  {
    break;
   }
   default: {
    label = 13;
    break L16;
   }
   }
   $27 = ((($arg)) + 4|0);
   $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
   $29 = (_mb_strupr($28)|0);
   $30 = ((($arg)) + 4|0);
   HEAP8[$30>>0]=$29&255;HEAP8[$30+1>>0]=($29>>8)&255;HEAP8[$30+2>>0]=($29>>16)&255;HEAP8[$30+3>>0]=$29>>24;
   $31 = $1;
   $32 = ((($arg)) + 4|0);
   $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
   $34 = (__reflect_string_to_class($31,$33,$arg)|0);
   $instance = $34;
   $35 = ($34|0)==(0|0);
   if ($35) {
    label = 13;
   } else {
    $36 = $instance;
    $37 = $instance;
    (__ref($36,$37)|0);
    label = 12;
   }
  } else {
   switch ($26|0) {
   case 4096:  {
    label = 12;
    break;
   }
   default: {
    label = 13;
   }
   }
  }
 } while(0);
 do {
  if ((label|0) == 12) {
   (__public_value_to_internal_object($arg,$obj)|0);
   $38 = $1;
   (__clone_object($38,$obj,$tgt,0,1)|0);
   HEAP8[$ret>>0]=4096&255;HEAP8[$ret+1>>0]=(4096>>8)&255;HEAP8[$ret+2>>0]=(4096>>16)&255;HEAP8[$ret+3>>0]=4096>>24;
   $39 = ((($tgt)) + 4|0);
   $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8)|(HEAPU8[$39+2>>0]<<16)|(HEAPU8[$39+3>>0]<<24);
   $41 = ((($ret)) + 4|0);
   HEAP8[$41>>0]=$40&255;HEAP8[$41+1>>0]=($40>>8)&255;HEAP8[$41+2>>0]=($40>>16)&255;HEAP8[$41+3>>0]=$40>>24;
   $42 = $1;
   $43 = $2;
   ;HEAP32[$ret$byval_copy>>2]=HEAP32[$ret>>2]|0;HEAP32[$ret$byval_copy+4>>2]=HEAP32[$ret+4>>2]|0;
   $44 = (_mb_push_value($42,$43,$ret$byval_copy)|0);
   $__hr3 = $44;
   $45 = $__hr3;
   $46 = ($45|0)!=(0);
   if (!($46)) {
    $86 = $1;
    __assign_public_value($86,$ret,0,0);
    break;
   }
   $85 = $__hr3;
   $0 = $85;
   $89 = $0;
   STACKTOP = sp;return ($89|0);
  }
  else if ((label|0) == 13) {
   $47 = $2;
   $48 = ($47|0)!=(0|0);
   if ($48) {
    $49 = $2;
    $50 = HEAP32[$49>>2]|0;
    $51 = ($50|0)!=(0|0);
    if ($51) {
     $52 = $2;
     $53 = HEAP32[$52>>2]|0;
     $54 = HEAPU8[$53>>0]|(HEAPU8[$53+1>>0]<<8)|(HEAPU8[$53+2>>0]<<16)|(HEAPU8[$53+3>>0]<<24);
     $55 = ($54|0)!=(0|0);
     if ($55) {
      $56 = $1;
      $57 = $1;
      $58 = ((($57)) + 67|0);
      $59 = HEAPU8[$58>>0]|(HEAPU8[$58+1>>0]<<8)|(HEAPU8[$58+2>>0]<<16)|(HEAPU8[$58+3>>0]<<24);
      $60 = (__set_current_error($56,57,$59)|0);
      $61 = ($60<<24>>24)!=(0);
      if (!($61)) {
       break;
      }
      $62 = $1;
      $63 = $2;
      $64 = HEAP32[$63>>2]|0;
      $65 = HEAPU8[$64>>0]|(HEAPU8[$64+1>>0]<<8)|(HEAPU8[$64+2>>0]<<16)|(HEAPU8[$64+3>>0]<<24);
      $66 = ((($65)) + 9|0);
      $67 = HEAPU8[$66>>0]|(HEAPU8[$66+1>>0]<<8)|(HEAPU8[$66+2>>0]<<16)|(HEAPU8[$66+3>>0]<<24);
      $68 = $2;
      $69 = HEAP32[$68>>2]|0;
      $70 = HEAPU8[$69>>0]|(HEAPU8[$69+1>>0]<<8)|(HEAPU8[$69+2>>0]<<16)|(HEAPU8[$69+3>>0]<<24);
      $71 = ((($70)) + 13|0);
      $72 = HEAPU8[$71>>0]|(HEAPU8[$71+1>>0]<<8);
      $73 = $2;
      $74 = HEAP32[$73>>2]|0;
      $75 = HEAPU8[$74>>0]|(HEAPU8[$74+1>>0]<<8)|(HEAPU8[$74+2>>0]<<16)|(HEAPU8[$74+3>>0]<<24);
      $76 = ((($75)) + 15|0);
      $77 = HEAPU8[$76>>0]|(HEAPU8[$76+1>>0]<<8);
      __set_error_pos($62,$67,$72,$77);
      $result = 3;
      break;
     }
    }
   }
   $78 = $1;
   $79 = $1;
   $80 = ((($79)) + 67|0);
   $81 = HEAPU8[$80>>0]|(HEAPU8[$80+1>>0]<<8)|(HEAPU8[$80+2>>0]<<16)|(HEAPU8[$80+3>>0]<<24);
   $82 = (__set_current_error($78,57,$81)|0);
   $83 = ($82<<24>>24)!=(0);
   if ($83) {
    $84 = $1;
    __set_error_pos($84,0,0,0);
    $result = 3;
   }
  }
 } while(0);
 $87 = $1;
 __assign_public_value($87,$arg,0,1);
 $88 = $result;
 $0 = $88;
 $89 = $0;
 STACKTOP = sp;return ($89|0);
}
function __core_reflect($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $__hr = 0, $__hr1 = 0, $__hr2 = 0, $__hr3 = 0, $arg = 0, $coll = 0, $instance = 0, $obj = 0;
 var $or$cond = 0, $result = 0, $ret = 0, $ret$byval_copy = 0, $switch$split2D = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ret$byval_copy = sp + 40|0;
 $arg = sp + 80|0;
 $obj = sp + 56|0;
 $ret = sp + 48|0;
 $1 = $s;
 $2 = $l;
 $result = 0;
 $instance = 0;
 $coll = 0;
 $3 = $1;
 $4 = ($3|0)!=(0|0);
 $5 = $2;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),16930,(14104|0));
  // unreachable;
 }
 $7 = ((($ret)) + 4|0);
 ;HEAP8[$7>>0]=0|0;HEAP8[$7+1>>0]=0|0;HEAP8[$7+2>>0]=0|0;HEAP8[$7+3>>0]=0|0;
 HEAP8[$ret>>0]=0&255;HEAP8[$ret+1>>0]=(0>>8)&255;HEAP8[$ret+2>>0]=(0>>16)&255;HEAP8[$ret+3>>0]=0>>24;
 $8 = $1;
 $9 = $2;
 $10 = (_mb_attempt_func_begin($8,$9)|0);
 $__hr = $10;
 $11 = $__hr;
 $12 = ($11|0)!=(0);
 if ($12) {
  $13 = $__hr;
  $0 = $13;
  $91 = $0;
  STACKTOP = sp;return ($91|0);
 }
 $14 = $1;
 $15 = $2;
 $16 = (_mb_pop_value($14,$15,$arg)|0);
 $__hr1 = $16;
 $17 = $__hr1;
 $18 = ($17|0)!=(0);
 if ($18) {
  $19 = $__hr1;
  $0 = $19;
  $91 = $0;
  STACKTOP = sp;return ($91|0);
 }
 $20 = $1;
 $21 = $2;
 $22 = (_mb_attempt_func_end($20,$21)|0);
 $__hr2 = $22;
 $23 = $__hr2;
 $24 = ($23|0)!=(0);
 if ($24) {
  $25 = $__hr2;
  $0 = $25;
  $91 = $0;
  STACKTOP = sp;return ($91|0);
 }
 dest=$obj; stop=dest+17|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
 HEAP8[$obj>>0]=0&255;HEAP8[$obj+1>>0]=(0>>8)&255;HEAP8[$obj+2>>0]=(0>>16)&255;HEAP8[$obj+3>>0]=0>>24;
 $26 = HEAPU8[$arg>>0]|(HEAPU8[$arg+1>>0]<<8)|(HEAPU8[$arg+2>>0]<<16)|(HEAPU8[$arg+3>>0]<<24);
 $switch$split2D = ($26|0)<(4096);
 L16: do {
  if ($switch$split2D) {
   switch ($26|0) {
   case 8:  {
    break;
   }
   default: {
    label = 13;
    break L16;
   }
   }
   $27 = ((($arg)) + 4|0);
   $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
   $29 = (_mb_strupr($28)|0);
   $30 = ((($arg)) + 4|0);
   HEAP8[$30>>0]=$29&255;HEAP8[$30+1>>0]=($29>>8)&255;HEAP8[$30+2>>0]=($29>>16)&255;HEAP8[$30+3>>0]=$29>>24;
   $31 = $1;
   $32 = ((($arg)) + 4|0);
   $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
   $34 = (__reflect_string_to_class($31,$33,$arg)|0);
   $instance = $34;
   $35 = ($34|0)==(0|0);
   if ($35) {
    label = 13;
   } else {
    $36 = $instance;
    $37 = $instance;
    (__ref($36,$37)|0);
    label = 12;
   }
  } else {
   switch ($26|0) {
   case 4096:  {
    label = 12;
    break;
   }
   default: {
    label = 13;
   }
   }
  }
 } while(0);
 do {
  if ((label|0) == 12) {
   (__public_value_to_internal_object($arg,$obj)|0);
   $38 = $1;
   $39 = (__create_dict($38)|0);
   $coll = $39;
   $40 = ((($obj)) + 4|0);
   $41 = HEAPU8[$40>>0]|(HEAPU8[$40+1>>0]<<8)|(HEAPU8[$40+2>>0]<<16)|(HEAPU8[$40+3>>0]<<24);
   $42 = $coll;
   (__traverse_class($41,166,0,-1,0,$42,0)|0);
   HEAP8[$ret>>0]=1024&255;HEAP8[$ret+1>>0]=(1024>>8)&255;HEAP8[$ret+2>>0]=(1024>>16)&255;HEAP8[$ret+3>>0]=1024>>24;
   $43 = $coll;
   $44 = ((($ret)) + 4|0);
   HEAP8[$44>>0]=$43&255;HEAP8[$44+1>>0]=($43>>8)&255;HEAP8[$44+2>>0]=($43>>16)&255;HEAP8[$44+3>>0]=$43>>24;
   $45 = $1;
   $46 = $2;
   ;HEAP32[$ret$byval_copy>>2]=HEAP32[$ret>>2]|0;HEAP32[$ret$byval_copy+4>>2]=HEAP32[$ret+4>>2]|0;
   $47 = (_mb_push_value($45,$46,$ret$byval_copy)|0);
   $__hr3 = $47;
   $48 = $__hr3;
   $49 = ($48|0)!=(0);
   if ($49) {
    $88 = $__hr3;
    $0 = $88;
    $91 = $0;
    STACKTOP = sp;return ($91|0);
   }
  }
  else if ((label|0) == 13) {
   $50 = $2;
   $51 = ($50|0)!=(0|0);
   if ($51) {
    $52 = $2;
    $53 = HEAP32[$52>>2]|0;
    $54 = ($53|0)!=(0|0);
    if ($54) {
     $55 = $2;
     $56 = HEAP32[$55>>2]|0;
     $57 = HEAPU8[$56>>0]|(HEAPU8[$56+1>>0]<<8)|(HEAPU8[$56+2>>0]<<16)|(HEAPU8[$56+3>>0]<<24);
     $58 = ($57|0)!=(0|0);
     if ($58) {
      $59 = $1;
      $60 = $1;
      $61 = ((($60)) + 67|0);
      $62 = HEAPU8[$61>>0]|(HEAPU8[$61+1>>0]<<8)|(HEAPU8[$61+2>>0]<<16)|(HEAPU8[$61+3>>0]<<24);
      $63 = (__set_current_error($59,57,$62)|0);
      $64 = ($63<<24>>24)!=(0);
      if (!($64)) {
       break;
      }
      $65 = $1;
      $66 = $2;
      $67 = HEAP32[$66>>2]|0;
      $68 = HEAPU8[$67>>0]|(HEAPU8[$67+1>>0]<<8)|(HEAPU8[$67+2>>0]<<16)|(HEAPU8[$67+3>>0]<<24);
      $69 = ((($68)) + 9|0);
      $70 = HEAPU8[$69>>0]|(HEAPU8[$69+1>>0]<<8)|(HEAPU8[$69+2>>0]<<16)|(HEAPU8[$69+3>>0]<<24);
      $71 = $2;
      $72 = HEAP32[$71>>2]|0;
      $73 = HEAPU8[$72>>0]|(HEAPU8[$72+1>>0]<<8)|(HEAPU8[$72+2>>0]<<16)|(HEAPU8[$72+3>>0]<<24);
      $74 = ((($73)) + 13|0);
      $75 = HEAPU8[$74>>0]|(HEAPU8[$74+1>>0]<<8);
      $76 = $2;
      $77 = HEAP32[$76>>2]|0;
      $78 = HEAPU8[$77>>0]|(HEAPU8[$77+1>>0]<<8)|(HEAPU8[$77+2>>0]<<16)|(HEAPU8[$77+3>>0]<<24);
      $79 = ((($78)) + 15|0);
      $80 = HEAPU8[$79>>0]|(HEAPU8[$79+1>>0]<<8);
      __set_error_pos($65,$70,$75,$80);
      $result = 3;
      break;
     }
    }
   }
   $81 = $1;
   $82 = $1;
   $83 = ((($82)) + 67|0);
   $84 = HEAPU8[$83>>0]|(HEAPU8[$83+1>>0]<<8)|(HEAPU8[$83+2>>0]<<16)|(HEAPU8[$83+3>>0]<<24);
   $85 = (__set_current_error($81,57,$84)|0);
   $86 = ($85<<24>>24)!=(0);
   if ($86) {
    $87 = $1;
    __set_error_pos($87,0,0,0);
    $result = 3;
   }
  }
 } while(0);
 $89 = $1;
 __assign_public_value($89,$arg,0,1);
 $90 = $result;
 $0 = $90;
 $91 = $0;
 STACKTOP = sp;return ($91|0);
}
function __core_lambda($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0;
 var $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $ast = 0, $brackets = 0, $fp = 0, $obj = 0, $or$cond = 0, $popped = 0, $result = 0, $ret = 0, $ret$byval_copy = 0, $routine = 0, $running = 0, $ul = 0;
 var $v = 0, $var = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ret$byval_copy = sp + 48|0;
 $ret = sp + 64|0;
 $obj = sp + 8|0;
 $v = sp;
 $0 = $s;
 $1 = $l;
 $result = 0;
 $running = 0;
 $routine = 0;
 $ast = 0;
 $brackets = 0;
 $var = 0;
 HEAP32[$obj>>2] = 0;
 $ul = 0;
 $popped = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),16992,(13989|0));
  // unreachable;
 }
 $6 = (_mb_malloc(62)|0);
 $routine = $6;
 $7 = $0;
 $8 = $routine;
 $9 = (__init_lambda($7,$8)|0);
 $running = $9;
 $10 = $0;
 $11 = $1;
 $12 = (_mb_attempt_open_bracket($10,$11)|0);
 $result = $12;
 $13 = $result;
 $14 = ($13|0)!=(0);
 L4: do {
  if (!($14)) {
   while(1) {
    $15 = $0;
    $16 = $1;
    $17 = (_mb_has_arg($15,$16)|0);
    $18 = ($17|0)!=(0);
    if (!($18)) {
     break;
    }
    $fp = 0;
    HEAP32[$v>>2] = 0;
    $19 = $routine;
    $20 = ((($19)) + 21|0);
    $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
    $22 = ($21|0)!=(0|0);
    if (!($22)) {
     $23 = (__ls_create()|0);
     $24 = $routine;
     $25 = ((($24)) + 21|0);
     HEAP8[$25>>0]=$23&255;HEAP8[$25+1>>0]=($23>>8)&255;HEAP8[$25+2>>0]=($23>>16)&255;HEAP8[$25+3>>0]=$23>>24;
    }
    $26 = $1;
    $27 = HEAP32[$26>>2]|0;
    $ast = $27;
    $28 = $ast;
    $29 = ($28|0)!=(0|0);
    if ($29) {
     $30 = $ast;
     $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8)|(HEAPU8[$30+2>>0]<<16)|(HEAPU8[$30+3>>0]<<24);
     $32 = HEAPU8[$31>>0]|(HEAPU8[$31+1>>0]<<8)|(HEAPU8[$31+2>>0]<<16)|(HEAPU8[$31+3>>0]<<24);
     $33 = ($32|0)==(8);
     if ($33) {
      $34 = $ast;
      $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
      $36 = ((($35)) + 4|0);
      $37 = HEAPU8[$36>>0]|(HEAPU8[$36+1>>0]<<8)|(HEAPU8[$36+2>>0]<<16)|(HEAPU8[$36+3>>0]<<24);
      $38 = ((($37)) + 4|0);
      $39 = HEAPU8[$38>>0]|(HEAPU8[$38+1>>0]<<8)|(HEAPU8[$38+2>>0]<<16)|(HEAPU8[$38+3>>0]<<24);
      $40 = ($39|0)==(44|0);
      if ($40) {
       label = 10;
       break;
      }
     }
    }
    $49 = $0;
    $50 = $1;
    $51 = (_mb_get_var($49,$50,$v,1)|0);
    $result = $51;
    $52 = $result;
    $53 = ($52|0)!=(0);
    if ($53) {
     break L4;
    }
    $54 = HEAP32[$v>>2]|0;
    $55 = ($54|0)!=(0|0);
    if (!($55)) {
     label = 14;
     break;
    }
    $56 = HEAP32[$v>>2]|0;
    $57 = HEAPU8[$56>>0]|(HEAPU8[$56+1>>0]<<8)|(HEAPU8[$56+2>>0]<<16)|(HEAPU8[$56+3>>0]<<24);
    $58 = ($57|0)==(9);
    if (!($58)) {
     label = 14;
     break;
    }
    $97 = HEAP32[$v>>2]|0;
    $98 = ((($97)) + 4|0);
    $99 = HEAPU8[$98>>0]|(HEAPU8[$98+1>>0]<<8)|(HEAPU8[$98+2>>0]<<16)|(HEAPU8[$98+3>>0]<<24);
    $var = $99;
    $100 = $var;
    $101 = ((($100)) + 8|0);
    $102 = HEAP8[$101>>0]|0;
    $103 = $102 & 3;
    $fp = $103;
    HEAP32[$obj>>2] = 0;
    $104 = $var;
    $105 = HEAPU8[$104>>0]|(HEAPU8[$104+1>>0]<<8)|(HEAPU8[$104+2>>0]<<16)|(HEAPU8[$104+3>>0]<<24);
    $106 = (__create_var($obj,$105,0,1)|0);
    $var = $106;
    $107 = $fp;
    $108 = $var;
    $109 = ((($108)) + 8|0);
    $110 = HEAP8[$109>>0]|0;
    $111 = $107 & 3;
    $112 = $110 & -4;
    $113 = $112 | $111;
    HEAP8[$109>>0] = $113;
    $114 = $routine;
    $115 = ((($114)) + 17|0);
    $116 = HEAPU8[$115>>0]|(HEAPU8[$115+1>>0]<<8)|(HEAPU8[$115+2>>0]<<16)|(HEAPU8[$115+3>>0]<<24);
    $117 = ((($116)) + 8|0);
    $118 = HEAPU8[$117>>0]|(HEAPU8[$117+1>>0]<<8)|(HEAPU8[$117+2>>0]<<16)|(HEAPU8[$117+3>>0]<<24);
    $119 = $var;
    $120 = HEAPU8[$119>>0]|(HEAPU8[$119+1>>0]<<8)|(HEAPU8[$119+2>>0]<<16)|(HEAPU8[$119+3>>0]<<24);
    $121 = HEAP32[$obj>>2]|0;
    $122 = (__ht_set_or_insert($118,$120,$121)|0);
    $ul = $122;
    $123 = $ul;
    $124 = ($123|0)!=(0);
    if (!($124)) {
     label = 22;
     break;
    }
    $125 = $routine;
    $126 = ((($125)) + 21|0);
    $127 = HEAPU8[$126>>0]|(HEAPU8[$126+1>>0]<<8)|(HEAPU8[$126+2>>0]<<16)|(HEAPU8[$126+3>>0]<<24);
    $128 = $var;
    (__ls_pushback($127,$128)|0);
    $129 = $1;
    $130 = HEAP32[$129>>2]|0;
    $ast = $130;
    $131 = $ast;
    $132 = HEAPU8[$131>>0]|(HEAPU8[$131+1>>0]<<8)|(HEAPU8[$131+2>>0]<<16)|(HEAPU8[$131+3>>0]<<24);
    $133 = HEAPU8[$132>>0]|(HEAPU8[$132+1>>0]<<8)|(HEAPU8[$132+2>>0]<<16)|(HEAPU8[$132+3>>0]<<24);
    $134 = ($133|0)==(8);
    if ($134) {
     $135 = $ast;
     $136 = HEAPU8[$135>>0]|(HEAPU8[$135+1>>0]<<8)|(HEAPU8[$135+2>>0]<<16)|(HEAPU8[$135+3>>0]<<24);
     $137 = ((($136)) + 4|0);
     $138 = HEAPU8[$137>>0]|(HEAPU8[$137+1>>0]<<8)|(HEAPU8[$137+2>>0]<<16)|(HEAPU8[$137+3>>0]<<24);
     $139 = ((($138)) + 4|0);
     $140 = HEAPU8[$139>>0]|(HEAPU8[$139+1>>0]<<8)|(HEAPU8[$139+2>>0]<<16)|(HEAPU8[$139+3>>0]<<24);
     $141 = ($140|0)==(8|0);
     if ($141) {
      break;
     }
    }
    $142 = $ast;
    $143 = $1;
    HEAP32[$143>>2] = $142;
   }
   if ((label|0) == 10) {
    $41 = $routine;
    $42 = ((($41)) + 21|0);
    $43 = HEAPU8[$42>>0]|(HEAPU8[$42+1>>0]<<8)|(HEAPU8[$42+2>>0]<<16)|(HEAPU8[$42+3>>0]<<24);
    (__ls_pushback($43,8226)|0);
    $44 = $ast;
    $45 = ((($44)) + 8|0);
    $46 = HEAPU8[$45>>0]|(HEAPU8[$45+1>>0]<<8)|(HEAPU8[$45+2>>0]<<16)|(HEAPU8[$45+3>>0]<<24);
    $ast = $46;
    $47 = $ast;
    $48 = $1;
    HEAP32[$48>>2] = $47;
   }
   else if ((label|0) == 14) {
    $59 = $1;
    $60 = ($59|0)!=(0|0);
    if ($60) {
     $61 = $1;
     $62 = HEAP32[$61>>2]|0;
     $63 = ($62|0)!=(0|0);
     if ($63) {
      $64 = $1;
      $65 = HEAP32[$64>>2]|0;
      $66 = HEAPU8[$65>>0]|(HEAPU8[$65+1>>0]<<8)|(HEAPU8[$65+2>>0]<<16)|(HEAPU8[$65+3>>0]<<24);
      $67 = ($66|0)!=(0|0);
      if ($67) {
       $68 = $0;
       $69 = $0;
       $70 = ((($69)) + 67|0);
       $71 = HEAPU8[$70>>0]|(HEAPU8[$70+1>>0]<<8)|(HEAPU8[$70+2>>0]<<16)|(HEAPU8[$70+3>>0]<<24);
       $72 = (__set_current_error($68,60,$71)|0);
       $73 = ($72<<24>>24)!=(0);
       if (!($73)) {
        break;
       }
       $74 = $0;
       $75 = $1;
       $76 = HEAP32[$75>>2]|0;
       $77 = HEAPU8[$76>>0]|(HEAPU8[$76+1>>0]<<8)|(HEAPU8[$76+2>>0]<<16)|(HEAPU8[$76+3>>0]<<24);
       $78 = ((($77)) + 9|0);
       $79 = HEAPU8[$78>>0]|(HEAPU8[$78+1>>0]<<8)|(HEAPU8[$78+2>>0]<<16)|(HEAPU8[$78+3>>0]<<24);
       $80 = $1;
       $81 = HEAP32[$80>>2]|0;
       $82 = HEAPU8[$81>>0]|(HEAPU8[$81+1>>0]<<8)|(HEAPU8[$81+2>>0]<<16)|(HEAPU8[$81+3>>0]<<24);
       $83 = ((($82)) + 13|0);
       $84 = HEAPU8[$83>>0]|(HEAPU8[$83+1>>0]<<8);
       $85 = $1;
       $86 = HEAP32[$85>>2]|0;
       $87 = HEAPU8[$86>>0]|(HEAPU8[$86+1>>0]<<8)|(HEAPU8[$86+2>>0]<<16)|(HEAPU8[$86+3>>0]<<24);
       $88 = ((($87)) + 15|0);
       $89 = HEAPU8[$88>>0]|(HEAPU8[$88+1>>0]<<8);
       __set_error_pos($74,$79,$84,$89);
       $result = 3;
       break;
      }
     }
    }
    $90 = $0;
    $91 = $0;
    $92 = ((($91)) + 67|0);
    $93 = HEAPU8[$92>>0]|(HEAPU8[$92+1>>0]<<8)|(HEAPU8[$92+2>>0]<<16)|(HEAPU8[$92+3>>0]<<24);
    $94 = (__set_current_error($90,60,$93)|0);
    $95 = ($94<<24>>24)!=(0);
    if (!($95)) {
     break;
    }
    $96 = $0;
    __set_error_pos($96,0,0,0);
    $result = 3;
    break;
   }
   else if ((label|0) == 22) {
    ___assert_fail((8058|0),(4322|0),17036,(13989|0));
    // unreachable;
   }
   $144 = $0;
   $145 = $1;
   $146 = (_mb_attempt_close_bracket($144,$145)|0);
   $result = $146;
   $147 = $result;
   $148 = ($147|0)!=(0);
   if (!($148)) {
    $149 = $1;
    $150 = HEAP32[$149>>2]|0;
    $ast = $150;
    $151 = $ast;
    $152 = ($151|0)!=(0|0);
    if ($152) {
     $153 = $ast;
     $154 = ((($153)) + 4|0);
     $155 = HEAPU8[$154>>0]|(HEAPU8[$154+1>>0]<<8)|(HEAPU8[$154+2>>0]<<16)|(HEAPU8[$154+3>>0]<<24);
     $ast = $155;
    }
    while(1) {
     $156 = $ast;
     $157 = ($156|0)!=(0|0);
     if ($157) {
      $158 = $ast;
      $159 = ((($158)) + 8|0);
      $160 = HEAPU8[$159>>0]|(HEAPU8[$159+1>>0]<<8)|(HEAPU8[$159+2>>0]<<16)|(HEAPU8[$159+3>>0]<<24);
      $161 = HEAPU8[$160>>0]|(HEAPU8[$160+1>>0]<<8)|(HEAPU8[$160+2>>0]<<16)|(HEAPU8[$160+3>>0]<<24);
      $162 = ($161|0)!=(0|0);
      if ($162) {
       $163 = $ast;
       $164 = ((($163)) + 8|0);
       $165 = HEAPU8[$164>>0]|(HEAPU8[$164+1>>0]<<8)|(HEAPU8[$164+2>>0]<<16)|(HEAPU8[$164+3>>0]<<24);
       $166 = HEAPU8[$165>>0]|(HEAPU8[$165+1>>0]<<8)|(HEAPU8[$165+2>>0]<<16)|(HEAPU8[$165+3>>0]<<24);
       $167 = HEAPU8[$166>>0]|(HEAPU8[$166+1>>0]<<8)|(HEAPU8[$166+2>>0]<<16)|(HEAPU8[$166+3>>0]<<24);
       $168 = ($167|0)==(22);
       $306 = $168;
      } else {
       $306 = 0;
      }
     } else {
      $306 = 0;
     }
     $169 = $ast;
     if (!($306)) {
      break;
     }
     $170 = ((($169)) + 8|0);
     $171 = HEAPU8[$170>>0]|(HEAPU8[$170+1>>0]<<8)|(HEAPU8[$170+2>>0]<<16)|(HEAPU8[$170+3>>0]<<24);
     $ast = $171;
    }
    $172 = $1;
    HEAP32[$172>>2] = $169;
    $173 = $0;
    $174 = $1;
    $175 = (_mb_attempt_open_bracket($173,$174)|0);
    $result = $175;
    $176 = $result;
    $177 = ($176|0)!=(0);
    if (!($177)) {
     $178 = $1;
     $179 = HEAP32[$178>>2]|0;
     $ast = $179;
     $180 = $ast;
     $181 = $routine;
     $182 = ((($181)) + 37|0);
     HEAP8[$182>>0]=$180&255;HEAP8[$182+1>>0]=($180>>8)&255;HEAP8[$182+2>>0]=($180>>16)&255;HEAP8[$182+3>>0]=$180>>24;
     while(1) {
      $183 = $ast;
      $184 = ($183|0)!=(0|0);
      if ($184) {
       $185 = $brackets;
       $186 = ($185|0)!=(0);
       if ($186) {
        $307 = 1;
       } else {
        $187 = $ast;
        $188 = HEAPU8[$187>>0]|(HEAPU8[$187+1>>0]<<8)|(HEAPU8[$187+2>>0]<<16)|(HEAPU8[$187+3>>0]<<24);
        $189 = HEAPU8[$188>>0]|(HEAPU8[$188+1>>0]<<8)|(HEAPU8[$188+2>>0]<<16)|(HEAPU8[$188+3>>0]<<24);
        $190 = ($189|0)==(8);
        if ($190) {
         $191 = $ast;
         $192 = HEAPU8[$191>>0]|(HEAPU8[$191+1>>0]<<8)|(HEAPU8[$191+2>>0]<<16)|(HEAPU8[$191+3>>0]<<24);
         $193 = ((($192)) + 4|0);
         $194 = HEAPU8[$193>>0]|(HEAPU8[$193+1>>0]<<8)|(HEAPU8[$193+2>>0]<<16)|(HEAPU8[$193+3>>0]<<24);
         $195 = ((($194)) + 4|0);
         $196 = HEAPU8[$195>>0]|(HEAPU8[$195+1>>0]<<8)|(HEAPU8[$195+2>>0]<<16)|(HEAPU8[$195+3>>0]<<24);
         $197 = ($196|0)==(8|0);
         $199 = $197;
        } else {
         $199 = 0;
        }
        $198 = $199 ^ 1;
        $307 = $198;
       }
      } else {
       $307 = 0;
      }
      $200 = $ast;
      if (!($307)) {
       label = 60;
       break;
      }
      $201 = HEAPU8[$200>>0]|(HEAPU8[$200+1>>0]<<8)|(HEAPU8[$200+2>>0]<<16)|(HEAPU8[$200+3>>0]<<24);
      $202 = HEAPU8[$201>>0]|(HEAPU8[$201+1>>0]<<8)|(HEAPU8[$201+2>>0]<<16)|(HEAPU8[$201+3>>0]<<24);
      $203 = ($202|0)==(8);
      if ($203) {
       $204 = $ast;
       $205 = HEAPU8[$204>>0]|(HEAPU8[$204+1>>0]<<8)|(HEAPU8[$204+2>>0]<<16)|(HEAPU8[$204+3>>0]<<24);
       $206 = ((($205)) + 4|0);
       $207 = HEAPU8[$206>>0]|(HEAPU8[$206+1>>0]<<8)|(HEAPU8[$206+2>>0]<<16)|(HEAPU8[$206+3>>0]<<24);
       $208 = ((($207)) + 4|0);
       $209 = HEAPU8[$208>>0]|(HEAPU8[$208+1>>0]<<8)|(HEAPU8[$208+2>>0]<<16)|(HEAPU8[$208+3>>0]<<24);
       $210 = ($209|0)==(7|0);
       if ($210) {
        $211 = $brackets;
        $212 = (($211) + 1)|0;
        $brackets = $212;
       } else {
        label = 45;
       }
      } else {
       label = 45;
      }
      if ((label|0) == 45) {
       label = 0;
       $213 = $ast;
       $214 = HEAPU8[$213>>0]|(HEAPU8[$213+1>>0]<<8)|(HEAPU8[$213+2>>0]<<16)|(HEAPU8[$213+3>>0]<<24);
       $215 = HEAPU8[$214>>0]|(HEAPU8[$214+1>>0]<<8)|(HEAPU8[$214+2>>0]<<16)|(HEAPU8[$214+3>>0]<<24);
       $216 = ($215|0)==(8);
       if ($216) {
        $217 = $ast;
        $218 = HEAPU8[$217>>0]|(HEAPU8[$217+1>>0]<<8)|(HEAPU8[$217+2>>0]<<16)|(HEAPU8[$217+3>>0]<<24);
        $219 = ((($218)) + 4|0);
        $220 = HEAPU8[$219>>0]|(HEAPU8[$219+1>>0]<<8)|(HEAPU8[$219+2>>0]<<16)|(HEAPU8[$219+3>>0]<<24);
        $221 = ((($220)) + 4|0);
        $222 = HEAPU8[$221>>0]|(HEAPU8[$221+1>>0]<<8)|(HEAPU8[$221+2>>0]<<16)|(HEAPU8[$221+3>>0]<<24);
        $223 = ($222|0)==(8|0);
        if ($223) {
         $224 = $brackets;
         $225 = (($224) + -1)|0;
         $brackets = $225;
        }
       }
      }
      $226 = $ast;
      $227 = ($226|0)!=(0|0);
      if ($227) {
       $228 = $0;
       $229 = $routine;
       $230 = $ast;
       $231 = HEAPU8[$230>>0]|(HEAPU8[$230+1>>0]<<8)|(HEAPU8[$230+2>>0]<<16)|(HEAPU8[$230+3>>0]<<24);
       $232 = (__is_valid_lambda_body_node($228,$229,$231)|0);
       $233 = ($232<<24>>24)!=(0);
       if (!($233)) {
        break;
       }
      }
      $272 = $ast;
      $273 = ($272|0)!=(0|0);
      if ($273) {
       $274 = $0;
       $275 = $routine;
       $276 = $ast;
       $277 = HEAPU8[$276>>0]|(HEAPU8[$276+1>>0]<<8)|(HEAPU8[$276+2>>0]<<16)|(HEAPU8[$276+3>>0]<<24);
       __try_mark_upvalue($274,$275,$277);
      }
      $278 = $ast;
      $279 = ((($278)) + 8|0);
      $280 = HEAPU8[$279>>0]|(HEAPU8[$279+1>>0]<<8)|(HEAPU8[$279+2>>0]<<16)|(HEAPU8[$279+3>>0]<<24);
      $ast = $280;
     }
     if ((label|0) == 60) {
      $281 = $1;
      HEAP32[$281>>2] = $200;
      $282 = $ast;
      $283 = $routine;
      $284 = ((($283)) + 41|0);
      HEAP8[$284>>0]=$282&255;HEAP8[$284+1>>0]=($282>>8)&255;HEAP8[$284+2>>0]=($282>>16)&255;HEAP8[$284+3>>0]=$282>>24;
      $285 = $0;
      $286 = $1;
      $287 = (_mb_attempt_close_bracket($285,$286)|0);
      $result = $287;
      $288 = $result;
      $289 = ($288|0)!=(0);
      if ($289) {
       break;
      }
      $290 = $0;
      (__pop_scope($290,0)|0);
      $popped = 1;
      HEAP8[$ret>>0]=8192&255;HEAP8[$ret+1>>0]=(8192>>8)&255;HEAP8[$ret+2>>0]=(8192>>16)&255;HEAP8[$ret+3>>0]=8192>>24;
      $291 = $routine;
      $292 = ((($ret)) + 4|0);
      HEAP8[$292>>0]=$291&255;HEAP8[$292+1>>0]=($291>>8)&255;HEAP8[$292+2>>0]=($291>>16)&255;HEAP8[$292+3>>0]=$291>>24;
      $293 = $0;
      $294 = $1;
      ;HEAP32[$ret$byval_copy>>2]=HEAP32[$ret>>2]|0;HEAP32[$ret$byval_copy+4>>2]=HEAP32[$ret+4>>2]|0;
      $295 = (_mb_push_value($293,$294,$ret$byval_copy)|0);
      $result = $295;
      $296 = $result;
      $297 = ($296|0)!=(0);
      if ($297) {
       break;
      }
      $305 = $result;
      STACKTOP = sp;return ($305|0);
     }
     $234 = $1;
     $235 = ($234|0)!=(0|0);
     if ($235) {
      $236 = $1;
      $237 = HEAP32[$236>>2]|0;
      $238 = ($237|0)!=(0|0);
      if ($238) {
       $239 = $1;
       $240 = HEAP32[$239>>2]|0;
       $241 = HEAPU8[$240>>0]|(HEAPU8[$240+1>>0]<<8)|(HEAPU8[$240+2>>0]<<16)|(HEAPU8[$240+3>>0]<<24);
       $242 = ($241|0)!=(0|0);
       if ($242) {
        $243 = $0;
        $244 = $0;
        $245 = ((($244)) + 67|0);
        $246 = HEAPU8[$245>>0]|(HEAPU8[$245+1>>0]<<8)|(HEAPU8[$245+2>>0]<<16)|(HEAPU8[$245+3>>0]<<24);
        $247 = (__set_current_error($243,60,$246)|0);
        $248 = ($247<<24>>24)!=(0);
        if (!($248)) {
         break;
        }
        $249 = $0;
        $250 = $1;
        $251 = HEAP32[$250>>2]|0;
        $252 = HEAPU8[$251>>0]|(HEAPU8[$251+1>>0]<<8)|(HEAPU8[$251+2>>0]<<16)|(HEAPU8[$251+3>>0]<<24);
        $253 = ((($252)) + 9|0);
        $254 = HEAPU8[$253>>0]|(HEAPU8[$253+1>>0]<<8)|(HEAPU8[$253+2>>0]<<16)|(HEAPU8[$253+3>>0]<<24);
        $255 = $1;
        $256 = HEAP32[$255>>2]|0;
        $257 = HEAPU8[$256>>0]|(HEAPU8[$256+1>>0]<<8)|(HEAPU8[$256+2>>0]<<16)|(HEAPU8[$256+3>>0]<<24);
        $258 = ((($257)) + 13|0);
        $259 = HEAPU8[$258>>0]|(HEAPU8[$258+1>>0]<<8);
        $260 = $1;
        $261 = HEAP32[$260>>2]|0;
        $262 = HEAPU8[$261>>0]|(HEAPU8[$261+1>>0]<<8)|(HEAPU8[$261+2>>0]<<16)|(HEAPU8[$261+3>>0]<<24);
        $263 = ((($262)) + 15|0);
        $264 = HEAPU8[$263>>0]|(HEAPU8[$263+1>>0]<<8);
        __set_error_pos($249,$254,$259,$264);
        $result = 3;
        break;
       }
      }
     }
     $265 = $0;
     $266 = $0;
     $267 = ((($266)) + 67|0);
     $268 = HEAPU8[$267>>0]|(HEAPU8[$267+1>>0]<<8)|(HEAPU8[$267+2>>0]<<16)|(HEAPU8[$267+3>>0]<<24);
     $269 = (__set_current_error($265,60,$268)|0);
     $270 = ($269<<24>>24)!=(0);
     if ($270) {
      $271 = $0;
      __set_error_pos($271,0,0,0);
      $result = 3;
     }
    }
   }
  }
 } while(0);
 $298 = $popped;
 $299 = ($298<<24>>24)!=(0);
 if (!($299)) {
  $300 = $0;
  (__pop_scope($300,0)|0);
 }
 $301 = $routine;
 $302 = ($301|0)!=(0|0);
 if (!($302)) {
  $305 = $result;
  STACKTOP = sp;return ($305|0);
 }
 $303 = $0;
 $304 = $routine;
 __destroy_routine($303,$304);
 $305 = $result;
 STACKTOP = sp;return ($305|0);
}
function __core_mem($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__hr = 0, $__hr1 = 0, $__hr2 = 0, $or$cond = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $s;
 $2 = $l;
 $result = 0;
 $3 = $1;
 $4 = ($3|0)!=(0|0);
 $5 = $2;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),17106,(13979|0));
  // unreachable;
 }
 $7 = $1;
 $8 = $2;
 $9 = (_mb_attempt_func_begin($7,$8)|0);
 $__hr = $9;
 $10 = $__hr;
 $11 = ($10|0)!=(0);
 if ($11) {
  $12 = $__hr;
  $0 = $12;
  $27 = $0;
  STACKTOP = sp;return ($27|0);
 }
 $13 = $1;
 $14 = $2;
 $15 = (_mb_attempt_func_end($13,$14)|0);
 $__hr1 = $15;
 $16 = $__hr1;
 $17 = ($16|0)!=(0);
 if ($17) {
  $18 = $__hr1;
  $0 = $18;
  $27 = $0;
  STACKTOP = sp;return ($27|0);
 }
 $19 = $1;
 $20 = $2;
 $21 = HEAP32[600>>2]|0;
 $22 = (_mb_push_int($19,$20,$21)|0);
 $__hr2 = $22;
 $23 = $__hr2;
 $24 = ($23|0)!=(0);
 if ($24) {
  $25 = $__hr2;
  $0 = $25;
  $27 = $0;
  STACKTOP = sp;return ($27|0);
 } else {
  $26 = $result;
  $0 = $26;
  $27 = $0;
  STACKTOP = sp;return ($27|0);
 }
 return (0)|0;
}
function __core_type($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $__hr = 0, $__hr1 = 0, $__hr2 = 0, $__hr3 = 0, $arg = 0, $arg$byval_copy = 0, $e = 0, $i = 0, $or$cond = 0, $os = 0, $result = 0, $types = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $arg$byval_copy = sp + 120|0;
 $arg = sp + 128|0;
 $types = sp + 16|0;
 $1 = $s;
 $2 = $l;
 $result = 0;
 $i = 0;
 $os = 0;
 $3 = $1;
 $4 = ($3|0)!=(0|0);
 $5 = $2;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),17125,(13968|0));
  // unreachable;
 }
 $7 = ((($arg)) + 4|0);
 ;HEAP8[$7>>0]=0|0;HEAP8[$7+1>>0]=0|0;HEAP8[$7+2>>0]=0|0;HEAP8[$7+3>>0]=0|0;
 HEAP8[$arg>>0]=0&255;HEAP8[$arg+1>>0]=(0>>8)&255;HEAP8[$arg+2>>0]=(0>>16)&255;HEAP8[$arg+3>>0]=0>>24;
 $8 = $1;
 $9 = $2;
 $10 = (_mb_attempt_open_bracket($8,$9)|0);
 $__hr = $10;
 $11 = $__hr;
 $12 = ($11|0)!=(0);
 if ($12) {
  $13 = $__hr;
  $0 = $13;
  $61 = $0;
  STACKTOP = sp;return ($61|0);
 }
 $14 = $1;
 $15 = $2;
 $16 = (_mb_pop_value($14,$15,$arg)|0);
 $__hr1 = $16;
 $17 = $__hr1;
 $18 = ($17|0)!=(0);
 if ($18) {
  $19 = $__hr1;
  $0 = $19;
  $61 = $0;
  STACKTOP = sp;return ($61|0);
 }
 $20 = HEAPU8[$arg>>0]|(HEAPU8[$arg+1>>0]<<8)|(HEAPU8[$arg+2>>0]<<16)|(HEAPU8[$arg+3>>0]<<24);
 $21 = ($20|0)==(8);
 L12: do {
  if ($21) {
   dest=$types; src=684; stop=dest+72|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
   $i = 0;
   while(1) {
    $22 = $i;
    $23 = ($22>>>0)<(18);
    if (!($23)) {
     label = 13;
     break L12;
    }
    $24 = $i;
    $25 = (($types) + ($24<<2)|0);
    $26 = HEAP32[$25>>2]|0;
    $e = $26;
    $27 = $e;
    $28 = (_mb_get_type_string($27)|0);
    $29 = ((($arg)) + 4|0);
    $30 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8)|(HEAPU8[$29+2>>0]<<16)|(HEAPU8[$29+3>>0]<<24);
    $31 = (_strcasecmp($28,$30)|0);
    $32 = ($31|0)!=(0);
    if (!($32)) {
     break;
    }
    $35 = $i;
    $36 = (($35) + 1)|0;
    $i = $36;
   }
   $33 = $e;
   $34 = ((($arg)) + 4|0);
   HEAP8[$34>>0]=$33&255;HEAP8[$34+1>>0]=($33>>8)&255;HEAP8[$34+2>>0]=($33>>16)&255;HEAP8[$34+3>>0]=$33>>24;
   HEAP8[$arg>>0]=16&255;HEAP8[$arg+1>>0]=(16>>8)&255;HEAP8[$arg+2>>0]=(16>>16)&255;HEAP8[$arg+3>>0]=16>>24;
  } else {
   label = 13;
  }
 } while(0);
 if ((label|0) == 13) {
  $37 = $1;
  $38 = $2;
  $39 = (__try_overridden($37,$38,$arg,4652,128)|0);
  $os = $39;
  $40 = $os;
  $41 = $40 & 1;
  $42 = ($41|0)==(0);
  if ($42) {
   $43 = HEAPU8[$arg>>0]|(HEAPU8[$arg+1>>0]<<8)|(HEAPU8[$arg+2>>0]<<16)|(HEAPU8[$arg+3>>0]<<24);
   $44 = ((($arg)) + 4|0);
   HEAP8[$44>>0]=$43&255;HEAP8[$44+1>>0]=($43>>8)&255;HEAP8[$44+2>>0]=($43>>16)&255;HEAP8[$44+3>>0]=$43>>24;
   HEAP8[$arg>>0]=16&255;HEAP8[$arg+1>>0]=(16>>8)&255;HEAP8[$arg+2>>0]=(16>>16)&255;HEAP8[$arg+3>>0]=16>>24;
  }
 }
 $45 = $1;
 $46 = $2;
 $47 = (_mb_attempt_close_bracket($45,$46)|0);
 $__hr2 = $47;
 $48 = $__hr2;
 $49 = ($48|0)!=(0);
 if ($49) {
  $50 = $__hr2;
  $0 = $50;
  $61 = $0;
  STACKTOP = sp;return ($61|0);
 }
 $51 = $os;
 $52 = $51 & 2;
 $53 = ($52|0)==(0);
 if ($53) {
  $54 = $1;
  $55 = $2;
  ;HEAP32[$arg$byval_copy>>2]=HEAP32[$arg>>2]|0;HEAP32[$arg$byval_copy+4>>2]=HEAP32[$arg+4>>2]|0;
  $56 = (_mb_push_value($54,$55,$arg$byval_copy)|0);
  $__hr3 = $56;
  $57 = $__hr3;
  $58 = ($57|0)!=(0);
  if ($58) {
   $59 = $__hr3;
   $0 = $59;
   $61 = $0;
   STACKTOP = sp;return ($61|0);
  }
 }
 $60 = $result;
 $0 = $60;
 $61 = $0;
 STACKTOP = sp;return ($61|0);
}
function __init_lambda($s,$routine) {
 $s = $s|0;
 $routine = $routine|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $lambda = 0, $or$cond = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $routine;
 $result = 0;
 $lambda = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 if (!($or$cond)) {
  ___assert_fail((9884|0),(4322|0),8911,(14091|0));
  // unreachable;
 }
 $6 = $0;
 $7 = $1;
 __init_routine($6,$7,0,0);
 $8 = $1;
 $9 = ((($8)) + 58|0);
 $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
 $11 = ($10|0)==(2);
 if ($11) {
  $12 = $1;
  $lambda = $12;
  $13 = (__create_running_context(1)|0);
  $14 = $lambda;
  $15 = ((($14)) + 17|0);
  HEAP8[$15>>0]=$13&255;HEAP8[$15+1>>0]=($13>>8)&255;HEAP8[$15+2>>0]=($13>>16)&255;HEAP8[$15+3>>0]=$13>>24;
  $16 = $0;
  $17 = $lambda;
  $18 = ((($17)) + 17|0);
  $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
  $20 = (__push_scope_by_routine($16,$19)|0);
  $result = $20;
  $21 = $result;
  STACKTOP = sp;return ($21|0);
 } else {
  ___assert_fail((12810|0),(4322|0),8914,(14091|0));
  // unreachable;
 }
 return (0)|0;
}
function __is_valid_lambda_body_node($s,$lambda,$obj) {
 $s = $s|0;
 $lambda = $lambda|0;
 $obj = $obj|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $lambda;
 $2 = $obj;
 $3 = $2;
 $4 = HEAPU8[$3>>0]|(HEAPU8[$3+1>>0]<<8)|(HEAPU8[$3+2>>0]<<16)|(HEAPU8[$3+3>>0]<<24);
 $5 = ($4|0)==(8);
 if ($5) {
  $6 = $2;
  $7 = ((($6)) + 4|0);
  $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
  $9 = ((($8)) + 4|0);
  $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
  $11 = ($10|0)==(42|0);
  if ($11) {
   $40 = 0;
   $39 = $40&1;
   $41 = $39&255;
   STACKTOP = sp;return ($41|0);
  }
 }
 $12 = $2;
 $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
 $14 = ($13|0)==(8);
 if ($14) {
  $15 = $2;
  $16 = ((($15)) + 4|0);
  $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
  $18 = ((($17)) + 4|0);
  $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
  $20 = ($19|0)==(43|0);
  if ($20) {
   $40 = 0;
   $39 = $40&1;
   $41 = $39&255;
   STACKTOP = sp;return ($41|0);
  }
 }
 $21 = $2;
 $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
 $23 = ($22|0)==(8);
 if ($23) {
  $24 = $2;
  $25 = ((($24)) + 4|0);
  $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
  $27 = ((($26)) + 4|0);
  $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
  $29 = ($28|0)==(45|0);
  if ($29) {
   $40 = 0;
   $39 = $40&1;
   $41 = $39&255;
   STACKTOP = sp;return ($41|0);
  }
 }
 $30 = $2;
 $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8)|(HEAPU8[$30+2>>0]<<16)|(HEAPU8[$30+3>>0]<<24);
 $32 = ($31|0)==(8);
 if ($32) {
  $33 = $2;
  $34 = ((($33)) + 4|0);
  $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
  $36 = ((($35)) + 4|0);
  $37 = HEAPU8[$36>>0]|(HEAPU8[$36+1>>0]<<8)|(HEAPU8[$36+2>>0]<<16)|(HEAPU8[$36+3>>0]<<24);
  $38 = ($37|0)==(46|0);
  if ($38) {
   $40 = 0;
   $39 = $40&1;
   $41 = $39&255;
   STACKTOP = sp;return ($41|0);
  }
 }
 $40 = 1;
 $39 = $40&1;
 $41 = $39&255;
 STACKTOP = sp;return ($41|0);
}
function __try_mark_upvalue($s,$r,$obj) {
 $s = $s|0;
 $r = $r|0;
 $obj = $obj|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $cond = 0, $lambda = 0, $node = 0, $or$cond = 0, $or$cond3 = 0, $or$cond5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $r;
 $2 = $obj;
 $lambda = 0;
 $node = 0;
 $3 = $0;
 $4 = ($3|0)!=(0|0);
 $5 = $1;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if ($or$cond) {
 }
 $7 = $0;
 $8 = ($7|0)!=(0|0);
 $9 = $1;
 $10 = ($9|0)!=(0|0);
 $or$cond3 = $8 & $10;
 $11 = $2;
 $12 = ($11|0)!=(0|0);
 $or$cond5 = $or$cond3 & $12;
 if (!($or$cond5)) {
  ___assert_fail((14002|0),(4322|0),9011,(14016|0));
  // unreachable;
 }
 $13 = $1;
 $14 = ((($13)) + 58|0);
 $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
 $16 = ($15|0)==(2);
 if (!($16)) {
  ___assert_fail((14034|0),(4322|0),9012,(14016|0));
  // unreachable;
 }
 $17 = $1;
 $lambda = $17;
 $18 = $2;
 $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
 $cond = ($19|0)==(9);
 if (!($cond)) {
  STACKTOP = sp;return;
 }
 $20 = $lambda;
 $21 = ((($20)) + 17|0);
 $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
 $23 = ((($22)) + 8|0);
 $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
 $25 = $2;
 $26 = ((($25)) + 4|0);
 $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
 $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
 $29 = (__ht_find($24,$28)|0);
 $node = $29;
 $30 = $node;
 $31 = ($30|0)!=(0|0);
 if ($31) {
  $32 = $node;
  $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
  $34 = ($33|0)!=(0|0);
  if ($34) {
   STACKTOP = sp;return;
  }
 }
 $35 = $0;
 $36 = $lambda;
 $37 = $2;
 $38 = $2;
 $39 = ((($38)) + 4|0);
 $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8)|(HEAPU8[$39+2>>0]<<16)|(HEAPU8[$39+3>>0]<<24);
 $41 = HEAPU8[$40>>0]|(HEAPU8[$40+1>>0]<<8)|(HEAPU8[$40+2>>0]<<16)|(HEAPU8[$40+3>>0]<<24);
 __mark_upvalue($35,$36,$37,$41);
 STACKTOP = sp;return;
}
function __mark_upvalue($s,$lambda,$obj,$n) {
 $s = $s|0;
 $lambda = $lambda|0;
 $obj = $obj|0;
 $n = $n|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $found_in_scope = 0, $or$cond = 0, $or$cond3 = 0, $or$cond5 = 0, $or$cond7 = 0, $rot = 0, $running = 0, $scp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $found_in_scope = sp + 8|0;
 $0 = $s;
 $1 = $lambda;
 $2 = $obj;
 $3 = $n;
 $running = 0;
 HEAP32[$found_in_scope>>2] = 0;
 $scp = 0;
 $4 = $0;
 $5 = ($4|0)!=(0|0);
 $6 = $1;
 $7 = ($6|0)!=(0|0);
 $or$cond = $5 & $7;
 if ($or$cond) {
 }
 $8 = $0;
 $9 = ($8|0)!=(0|0);
 $10 = $1;
 $11 = ($10|0)!=(0|0);
 $or$cond3 = $9 & $11;
 $12 = $2;
 $13 = ($12|0)!=(0|0);
 $or$cond5 = $or$cond3 & $13;
 if (!($or$cond5)) {
  ___assert_fail((14058|0),(4322|0),8986,(14077|0));
  // unreachable;
 }
 $14 = $0;
 $15 = ((($14)) + 75|0);
 $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
 $running = $16;
 $17 = $0;
 $18 = $running;
 $19 = $3;
 $20 = (__search_identifier_in_scope_chain($17,$18,$19,1,0,$found_in_scope)|0);
 $scp = $20;
 $21 = $scp;
 $22 = ($21|0)!=(0|0);
 $23 = HEAP32[$found_in_scope>>2]|0;
 $24 = ($23|0)!=(0|0);
 $or$cond7 = $22 & $24;
 if ($or$cond7) {
  $25 = $scp;
  $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
  $rot = $26;
  $27 = $rot;
  $28 = ($27|0)!=(0|0);
  do {
   if ($28) {
    $29 = $rot;
    $30 = ($29|0)!=(0|0);
    if ($30) {
     $31 = $rot;
     $32 = HEAPU8[$31>>0]|(HEAPU8[$31+1>>0]<<8)|(HEAPU8[$31+2>>0]<<16)|(HEAPU8[$31+3>>0]<<24);
     $33 = ($32|0)==(17);
     if ($33) {
      $34 = $rot;
      $58 = $34;
      break;
     }
    }
    $35 = $rot;
    $36 = ($35|0)!=(0|0);
    if ($36) {
     $37 = $rot;
     $38 = HEAPU8[$37>>0]|(HEAPU8[$37+1>>0]<<8)|(HEAPU8[$37+2>>0]<<16)|(HEAPU8[$37+3>>0]<<24);
     $39 = ($38|0)==(9);
     if ($39) {
      $40 = $rot;
      $41 = ((($40)) + 4|0);
      $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
      $43 = ((($42)) + 4|0);
      $44 = HEAPU8[$43>>0]|(HEAPU8[$43+1>>0]<<8)|(HEAPU8[$43+2>>0]<<16)|(HEAPU8[$43+3>>0]<<24);
      $45 = ($44|0)!=(0|0);
      if ($45) {
       $46 = $rot;
       $47 = ((($46)) + 4|0);
       $48 = HEAPU8[$47>>0]|(HEAPU8[$47+1>>0]<<8)|(HEAPU8[$47+2>>0]<<16)|(HEAPU8[$47+3>>0]<<24);
       $49 = ((($48)) + 4|0);
       $50 = HEAPU8[$49>>0]|(HEAPU8[$49+1>>0]<<8)|(HEAPU8[$49+2>>0]<<16)|(HEAPU8[$49+3>>0]<<24);
       $51 = HEAPU8[$50>>0]|(HEAPU8[$50+1>>0]<<8)|(HEAPU8[$50+2>>0]<<16)|(HEAPU8[$50+3>>0]<<24);
       $52 = ($51|0)==(17);
       if ($52) {
        $53 = $rot;
        $54 = ((($53)) + 4|0);
        $55 = HEAPU8[$54>>0]|(HEAPU8[$54+1>>0]<<8)|(HEAPU8[$54+2>>0]<<16)|(HEAPU8[$54+3>>0]<<24);
        $56 = ((($55)) + 4|0);
        $57 = HEAPU8[$56>>0]|(HEAPU8[$56+1>>0]<<8)|(HEAPU8[$56+2>>0]<<16)|(HEAPU8[$56+3>>0]<<24);
        $58 = $57;
       } else {
        $58 = 0;
       }
      } else {
       $58 = 0;
      }
     } else {
      $58 = 0;
     }
    } else {
     $58 = 0;
    }
   } else {
    $58 = 0;
   }
  } while(0);
  $rot = $58;
  $59 = $rot;
  $60 = ($59|0)!=(0|0);
  if ($60) {
   $61 = $1;
   $62 = ((($61)) + 17|0);
   $63 = HEAPU8[$62>>0]|(HEAPU8[$62+1>>0]<<8)|(HEAPU8[$62+2>>0]<<16)|(HEAPU8[$62+3>>0]<<24);
   $64 = ($63|0)!=(0|0);
   if ($64) {
    $65 = $1;
    $66 = ((($65)) + 17|0);
    $67 = HEAPU8[$66>>0]|(HEAPU8[$66+1>>0]<<8)|(HEAPU8[$66+2>>0]<<16)|(HEAPU8[$66+3>>0]<<24);
    $68 = HEAPU8[$67>>0]|(HEAPU8[$67+1>>0]<<8)|(HEAPU8[$67+2>>0]<<16)|(HEAPU8[$67+3>>0]<<24);
    $69 = HEAP32[$found_in_scope>>2]|0;
    $70 = ($68|0)!=($69|0);
    if ($70) {
     STACKTOP = sp;return;
    }
   }
  }
  $71 = HEAP32[$found_in_scope>>2]|0;
  $72 = ((($71)) + 32|0);
  $73 = HEAPU8[$72>>0]|(HEAPU8[$72+1>>0]<<8)|(HEAPU8[$72+2>>0]<<16)|(HEAPU8[$72+3>>0]<<24);
  $74 = ($73|0)!=(0|0);
  if (!($74)) {
   $75 = (__ls_create()|0);
   $76 = HEAP32[$found_in_scope>>2]|0;
   $77 = ((($76)) + 32|0);
   HEAP8[$77>>0]=$75&255;HEAP8[$77+1>>0]=($75>>8)&255;HEAP8[$77+2>>0]=($75>>16)&255;HEAP8[$77+3>>0]=$75>>24;
  }
  $78 = HEAP32[$found_in_scope>>2]|0;
  $79 = ((($78)) + 32|0);
  $80 = HEAPU8[$79>>0]|(HEAPU8[$79+1>>0]<<8)|(HEAPU8[$79+2>>0]<<16)|(HEAPU8[$79+3>>0]<<24);
  $81 = $1;
  $82 = (__ls_find($80,$81,137,0)|0);
  $83 = ($82|0)!=(0|0);
  if (!($83)) {
   $84 = HEAP32[$found_in_scope>>2]|0;
   $85 = ((($84)) + 32|0);
   $86 = HEAPU8[$85>>0]|(HEAPU8[$85+1>>0]<<8)|(HEAPU8[$85+2>>0]<<16)|(HEAPU8[$85+3>>0]<<24);
   $87 = $1;
   (__ls_pushback($86,$87)|0);
  }
 }
 $88 = $1;
 $89 = ((($88)) + 33|0);
 $90 = HEAPU8[$89>>0]|(HEAPU8[$89+1>>0]<<8)|(HEAPU8[$89+2>>0]<<16)|(HEAPU8[$89+3>>0]<<24);
 $91 = ($90|0)!=(0|0);
 if (!($91)) {
  $92 = (__ht_create(0,127,128,0)|0);
  $93 = $1;
  $94 = ((($93)) + 33|0);
  HEAP8[$94>>0]=$92&255;HEAP8[$94+1>>0]=($92>>8)&255;HEAP8[$94+2>>0]=($92>>16)&255;HEAP8[$94+3>>0]=$92>>24;
 }
 $95 = $1;
 $96 = ((($95)) + 33|0);
 $97 = HEAPU8[$96>>0]|(HEAPU8[$96+1>>0]<<8)|(HEAPU8[$96+2>>0]<<16)|(HEAPU8[$96+3>>0]<<24);
 $98 = $2;
 $99 = ((($98)) + 4|0);
 $100 = HEAPU8[$99>>0]|(HEAPU8[$99+1>>0]<<8)|(HEAPU8[$99+2>>0]<<16)|(HEAPU8[$99+3>>0]<<24);
 $101 = HEAPU8[$100>>0]|(HEAPU8[$100+1>>0]<<8)|(HEAPU8[$100+2>>0]<<16)|(HEAPU8[$100+3>>0]<<24);
 $102 = $2;
 (__ht_set_or_insert($97,$101,$102)|0);
 STACKTOP = sp;return;
}
function __reflect_string_to_class($s,$n,$arg) {
 $s = $s|0;
 $n = $n|0;
 $arg = $arg|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $c = 0, $cs = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $s;
 $2 = $n;
 $3 = $arg;
 $cs = 0;
 $c = 0;
 $4 = $1;
 $5 = $2;
 $6 = (__search_identifier_in_scope_chain($4,0,$5,0,0,0)|0);
 $cs = $6;
 $7 = $cs;
 $8 = ($7|0)!=(0|0);
 if (!($8)) {
  $0 = 0;
  $54 = $0;
  STACKTOP = sp;return ($54|0);
 }
 $9 = $cs;
 $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
 $c = $10;
 $11 = $c;
 $12 = ($11|0)!=(0|0);
 if (!($12)) {
  $0 = 0;
  $54 = $0;
  STACKTOP = sp;return ($54|0);
 }
 $13 = $c;
 $14 = ($13|0)!=(0|0);
 do {
  if ($14) {
   $15 = $c;
   $16 = ($15|0)!=(0|0);
   if ($16) {
    $17 = $c;
    $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
    $19 = ($18|0)==(16);
    if ($19) {
     $20 = $c;
     $44 = $20;
     break;
    }
   }
   $21 = $c;
   $22 = ($21|0)!=(0|0);
   if ($22) {
    $23 = $c;
    $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
    $25 = ($24|0)==(9);
    if ($25) {
     $26 = $c;
     $27 = ((($26)) + 4|0);
     $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
     $29 = ((($28)) + 4|0);
     $30 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8)|(HEAPU8[$29+2>>0]<<16)|(HEAPU8[$29+3>>0]<<24);
     $31 = ($30|0)!=(0|0);
     if ($31) {
      $32 = $c;
      $33 = ((($32)) + 4|0);
      $34 = HEAPU8[$33>>0]|(HEAPU8[$33+1>>0]<<8)|(HEAPU8[$33+2>>0]<<16)|(HEAPU8[$33+3>>0]<<24);
      $35 = ((($34)) + 4|0);
      $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
      $37 = HEAPU8[$36>>0]|(HEAPU8[$36+1>>0]<<8)|(HEAPU8[$36+2>>0]<<16)|(HEAPU8[$36+3>>0]<<24);
      $38 = ($37|0)==(16);
      if ($38) {
       $39 = $c;
       $40 = ((($39)) + 4|0);
       $41 = HEAPU8[$40>>0]|(HEAPU8[$40+1>>0]<<8)|(HEAPU8[$40+2>>0]<<16)|(HEAPU8[$40+3>>0]<<24);
       $42 = ((($41)) + 4|0);
       $43 = HEAPU8[$42>>0]|(HEAPU8[$42+1>>0]<<8)|(HEAPU8[$42+2>>0]<<16)|(HEAPU8[$42+3>>0]<<24);
       $44 = $43;
      } else {
       $44 = 0;
      }
     } else {
      $44 = 0;
     }
    } else {
     $44 = 0;
    }
   } else {
    $44 = 0;
   }
  } else {
   $44 = 0;
  }
 } while(0);
 $c = $44;
 $45 = $c;
 $46 = ($45|0)!=(0|0);
 if (!($46)) {
  $0 = 0;
  $54 = $0;
  STACKTOP = sp;return ($54|0);
 }
 $47 = $3;
 $48 = ($47|0)!=(0|0);
 if ($48) {
  $49 = $c;
  $50 = $3;
  (__internal_object_to_public_value($49,$50)|0);
 }
 $51 = $c;
 $52 = ((($51)) + 4|0);
 $53 = HEAPU8[$52>>0]|(HEAPU8[$52+1>>0]<<8)|(HEAPU8[$52+2>>0]<<16)|(HEAPU8[$52+3>>0]<<24);
 $0 = $53;
 $54 = $0;
 STACKTOP = sp;return ($54|0);
}
function __reflect_class_field($data,$extra,$d) {
 $data = $data|0;
 $extra = $extra|0;
 $d = $d|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $coll = 0, $key = 0, $key1 = 0, $obj = 0, $or$cond = 0, $result = 0, $sub = 0, $tmp = 0;
 var $val = 0, $val2 = 0, $var = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $tmp = sp + 64|0;
 $key = sp + 56|0;
 $val = sp + 48|0;
 $key1 = sp + 40|0;
 $val2 = sp + 32|0;
 $0 = $data;
 $1 = $extra;
 $2 = $d;
 $result = 0;
 $obj = 0;
 $var = 0;
 $sub = 0;
 $3 = $2;
 $coll = $3;
 $4 = $0;
 $5 = ($4|0)!=(0|0);
 $6 = $2;
 $7 = ($6|0)!=(0|0);
 $or$cond = $5 & $7;
 if (!($or$cond)) {
  ___assert_fail((14118|0),(4322|0),8621,(14128|0));
  // unreachable;
 }
 dest=$tmp; stop=dest+17|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
 HEAP8[$tmp>>0]=0&255;HEAP8[$tmp+1>>0]=(0>>8)&255;HEAP8[$tmp+2>>0]=(0>>16)&255;HEAP8[$tmp+3>>0]=0>>24;
 HEAP8[$tmp>>0]=4&255;HEAP8[$tmp+1>>0]=(4>>8)&255;HEAP8[$tmp+2>>0]=(4>>16)&255;HEAP8[$tmp+3>>0]=4>>24;
 $8 = $0;
 $obj = $8;
 $9 = $obj;
 $10 = (__is_internal_object($9)|0);
 $11 = ($10<<24>>24)!=(0);
 if ($11) {
  $51 = $result;
  STACKTOP = sp;return ($51|0);
 }
 $12 = $obj;
 $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
 switch ($13|0) {
 case 9:  {
  $14 = $obj;
  $15 = ((($14)) + 4|0);
  $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
  $var = $16;
  $17 = $var;
  $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
  $19 = ((($tmp)) + 4|0);
  HEAP8[$19>>0]=$18&255;HEAP8[$19+1>>0]=($18>>8)&255;HEAP8[$19+2>>0]=($18>>16)&255;HEAP8[$19+3>>0]=$18>>24;
  $20 = $coll;
  $21 = ((($20)) + 19|0);
  $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
  $23 = (__ht_find($22,$tmp)|0);
  $24 = ($23|0)!=(0|0);
  if ($24) {
   $51 = $result;
   STACKTOP = sp;return ($51|0);
  }
  $25 = $var;
  $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
  $27 = ((($key)) + 4|0);
  HEAP8[$27>>0]=$26&255;HEAP8[$27+1>>0]=($26>>8)&255;HEAP8[$27+2>>0]=($26>>16)&255;HEAP8[$27+3>>0]=$26>>24;
  HEAP8[$key>>0]=8&255;HEAP8[$key+1>>0]=(8>>8)&255;HEAP8[$key+2>>0]=(8>>16)&255;HEAP8[$key+3>>0]=8>>24;
  $28 = $obj;
  (__internal_object_to_public_value($28,$val)|0);
  $29 = $coll;
  (__set_dict($29,$key,$val,0,0)|0);
  $51 = $result;
  STACKTOP = sp;return ($51|0);
  break;
 }
 case 17:  {
  $30 = $obj;
  $31 = ((($30)) + 4|0);
  $32 = HEAPU8[$31>>0]|(HEAPU8[$31+1>>0]<<8)|(HEAPU8[$31+2>>0]<<16)|(HEAPU8[$31+3>>0]<<24);
  $sub = $32;
  $33 = $sub;
  $34 = ((($33)) + 45|0);
  $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
  $36 = ((($tmp)) + 4|0);
  HEAP8[$36>>0]=$35&255;HEAP8[$36+1>>0]=($35>>8)&255;HEAP8[$36+2>>0]=($35>>16)&255;HEAP8[$36+3>>0]=$35>>24;
  $37 = $coll;
  $38 = ((($37)) + 19|0);
  $39 = HEAPU8[$38>>0]|(HEAPU8[$38+1>>0]<<8)|(HEAPU8[$38+2>>0]<<16)|(HEAPU8[$38+3>>0]<<24);
  $40 = (__ht_find($39,$tmp)|0);
  $41 = ($40|0)!=(0|0);
  if ($41) {
   $51 = $result;
   STACKTOP = sp;return ($51|0);
  }
  $42 = $sub;
  $43 = ((($42)) + 45|0);
  $44 = HEAPU8[$43>>0]|(HEAPU8[$43+1>>0]<<8)|(HEAPU8[$43+2>>0]<<16)|(HEAPU8[$43+3>>0]<<24);
  $45 = ((($key1)) + 4|0);
  HEAP8[$45>>0]=$44&255;HEAP8[$45+1>>0]=($44>>8)&255;HEAP8[$45+2>>0]=($44>>16)&255;HEAP8[$45+3>>0]=$44>>24;
  HEAP8[$key1>>0]=8&255;HEAP8[$key1+1>>0]=(8>>8)&255;HEAP8[$key1+2>>0]=(8>>16)&255;HEAP8[$key1+3>>0]=8>>24;
  $46 = $obj;
  $47 = HEAPU8[$46>>0]|(HEAPU8[$46+1>>0]<<8)|(HEAPU8[$46+2>>0]<<16)|(HEAPU8[$46+3>>0]<<24);
  $48 = (__internal_type_to_public_type($47)|0);
  $49 = ((($val2)) + 4|0);
  HEAP8[$49>>0]=$48&255;HEAP8[$49+1>>0]=($48>>8)&255;HEAP8[$49+2>>0]=($48>>16)&255;HEAP8[$49+3>>0]=$48>>24;
  HEAP8[$val2>>0]=16&255;HEAP8[$val2+1>>0]=(16>>8)&255;HEAP8[$val2+2>>0]=(16>>16)&255;HEAP8[$val2+3>>0]=16>>24;
  $50 = $coll;
  (__set_dict($50,$key1,$val2,0,0)|0);
  $51 = $result;
  STACKTOP = sp;return ($51|0);
  break;
 }
 default: {
  $51 = $result;
  STACKTOP = sp;return ($51|0);
 }
 }
 return (0)|0;
}
function __std_abs($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0.0, $3 = 0, $30 = 0.0, $31 = 0.0, $32 = 0.0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $9 = 0;
 var $__hr = 0, $arg = 0, $arg$byval_copy = 0, $or$cond = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $arg$byval_copy = sp + 24|0;
 $arg = sp + 32|0;
 $1 = $s;
 $2 = $l;
 $result = 0;
 $3 = $1;
 $4 = ($3|0)!=(0|0);
 $5 = $2;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),17220,(15102|0));
  // unreachable;
 }
 $7 = ((($arg)) + 4|0);
 ;HEAP8[$7>>0]=0|0;HEAP8[$7+1>>0]=0|0;HEAP8[$7+2>>0]=0|0;HEAP8[$7+3>>0]=0|0;
 HEAP8[$arg>>0]=0&255;HEAP8[$arg+1>>0]=(0>>8)&255;HEAP8[$arg+2>>0]=(0>>16)&255;HEAP8[$arg+3>>0]=0>>24;
 $8 = $1;
 $9 = $2;
 $10 = (_mb_attempt_open_bracket($8,$9)|0);
 $result = $10;
 $11 = $result;
 $12 = ($11|0)!=(0);
 L4: do {
  if (!($12)) {
   $13 = $1;
   $14 = $2;
   $15 = (_mb_pop_value($13,$14,$arg)|0);
   $result = $15;
   $16 = $result;
   $17 = ($16|0)!=(0);
   if (!($17)) {
    $18 = $1;
    $19 = $2;
    $20 = (_mb_attempt_close_bracket($18,$19)|0);
    $result = $20;
    $21 = $result;
    $22 = ($21|0)!=(0);
    if (!($22)) {
     $23 = HEAPU8[$arg>>0]|(HEAPU8[$arg+1>>0]<<8)|(HEAPU8[$arg+2>>0]<<16)|(HEAPU8[$arg+3>>0]<<24);
     switch ($23|0) {
     case 2:  {
      $24 = ((($arg)) + 4|0);
      $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
      $26 = (Math_abs(($25|0))|0);
      $27 = ((($arg)) + 4|0);
      HEAP8[$27>>0]=$26&255;HEAP8[$27+1>>0]=($26>>8)&255;HEAP8[$27+2>>0]=($26>>16)&255;HEAP8[$27+3>>0]=$26>>24;
      break L4;
      break;
     }
     case 4:  {
      $28 = ((($arg)) + 4|0);
      HEAP8[tempDoublePtr>>0]=HEAP8[$28>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$28+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$28+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$28+3>>0];$29 = +HEAPF32[tempDoublePtr>>2];
      $30 = $29;
      $31 = (+Math_abs((+$30)));
      $32 = $31;
      $33 = ((($arg)) + 4|0);
      HEAPF32[tempDoublePtr>>2]=$32;HEAP8[$33>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$33+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$33+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$33+3>>0]=HEAP8[tempDoublePtr+3>>0];
      break L4;
      break;
     }
     default: {
      $34 = $2;
      $35 = ($34|0)!=(0|0);
      if ($35) {
       $36 = $2;
       $37 = HEAP32[$36>>2]|0;
       $38 = ($37|0)!=(0|0);
       if ($38) {
        $39 = $2;
        $40 = HEAP32[$39>>2]|0;
        $41 = HEAPU8[$40>>0]|(HEAPU8[$40+1>>0]<<8)|(HEAPU8[$40+2>>0]<<16)|(HEAPU8[$40+3>>0]<<24);
        $42 = ($41|0)!=(0|0);
        if ($42) {
         $43 = $1;
         $44 = $1;
         $45 = ((($44)) + 67|0);
         $46 = HEAPU8[$45>>0]|(HEAPU8[$45+1>>0]<<8)|(HEAPU8[$45+2>>0]<<16)|(HEAPU8[$45+3>>0]<<24);
         $47 = (__set_current_error($43,17,$46)|0);
         $48 = ($47<<24>>24)!=(0);
         if (!($48)) {
          break L4;
         }
         $49 = $1;
         $50 = $2;
         $51 = HEAP32[$50>>2]|0;
         $52 = HEAPU8[$51>>0]|(HEAPU8[$51+1>>0]<<8)|(HEAPU8[$51+2>>0]<<16)|(HEAPU8[$51+3>>0]<<24);
         $53 = ((($52)) + 9|0);
         $54 = HEAPU8[$53>>0]|(HEAPU8[$53+1>>0]<<8)|(HEAPU8[$53+2>>0]<<16)|(HEAPU8[$53+3>>0]<<24);
         $55 = $2;
         $56 = HEAP32[$55>>2]|0;
         $57 = HEAPU8[$56>>0]|(HEAPU8[$56+1>>0]<<8)|(HEAPU8[$56+2>>0]<<16)|(HEAPU8[$56+3>>0]<<24);
         $58 = ((($57)) + 13|0);
         $59 = HEAPU8[$58>>0]|(HEAPU8[$58+1>>0]<<8);
         $60 = $2;
         $61 = HEAP32[$60>>2]|0;
         $62 = HEAPU8[$61>>0]|(HEAPU8[$61+1>>0]<<8)|(HEAPU8[$61+2>>0]<<16)|(HEAPU8[$61+3>>0]<<24);
         $63 = ((($62)) + 15|0);
         $64 = HEAPU8[$63>>0]|(HEAPU8[$63+1>>0]<<8);
         __set_error_pos($49,$54,$59,$64);
         break L4;
        }
       }
      }
      $65 = $1;
      $66 = $1;
      $67 = ((($66)) + 67|0);
      $68 = HEAPU8[$67>>0]|(HEAPU8[$67+1>>0]<<8)|(HEAPU8[$67+2>>0]<<16)|(HEAPU8[$67+3>>0]<<24);
      $69 = (__set_current_error($65,17,$68)|0);
      $70 = ($69<<24>>24)!=(0);
      if (!($70)) {
       break L4;
      }
      $71 = $1;
      __set_error_pos($71,0,0,0);
      break L4;
     }
     }
    }
   }
  }
 } while(0);
 $72 = $1;
 $73 = $2;
 ;HEAP32[$arg$byval_copy>>2]=HEAP32[$arg>>2]|0;HEAP32[$arg$byval_copy+4>>2]=HEAP32[$arg+4>>2]|0;
 $74 = (_mb_push_value($72,$73,$arg$byval_copy)|0);
 $__hr = $74;
 $75 = $__hr;
 $76 = ($75|0)!=(0);
 if ($76) {
  $77 = $__hr;
  $0 = $77;
  $79 = $0;
  STACKTOP = sp;return ($79|0);
 } else {
  $78 = $result;
  $0 = $78;
  $79 = $0;
  STACKTOP = sp;return ($79|0);
 }
 return (0)|0;
}
function __std_sgn($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0.0, $34 = 0, $35 = 0, $36 = 0.0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $9 = 0, $arg = 0, $or$cond = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $arg = sp + 16|0;
 $0 = $s;
 $1 = $l;
 $result = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),17256,(15093|0));
  // unreachable;
 }
 $6 = ((($arg)) + 4|0);
 ;HEAP8[$6>>0]=0|0;HEAP8[$6+1>>0]=0|0;HEAP8[$6+2>>0]=0|0;HEAP8[$6+3>>0]=0|0;
 HEAP8[$arg>>0]=0&255;HEAP8[$arg+1>>0]=(0>>8)&255;HEAP8[$arg+2>>0]=(0>>16)&255;HEAP8[$arg+3>>0]=0>>24;
 $7 = $0;
 $8 = $1;
 $9 = (_mb_attempt_open_bracket($7,$8)|0);
 $result = $9;
 $10 = $result;
 $11 = ($10|0)!=(0);
 if ($11) {
  $84 = $0;
  __assign_public_value($84,$arg,0,1);
  $85 = $result;
  STACKTOP = sp;return ($85|0);
 }
 $12 = $0;
 $13 = $1;
 $14 = (_mb_pop_value($12,$13,$arg)|0);
 $result = $14;
 $15 = $result;
 $16 = ($15|0)!=(0);
 if ($16) {
  $84 = $0;
  __assign_public_value($84,$arg,0,1);
  $85 = $result;
  STACKTOP = sp;return ($85|0);
 }
 $17 = $0;
 $18 = $1;
 $19 = (_mb_attempt_close_bracket($17,$18)|0);
 $result = $19;
 $20 = $result;
 $21 = ($20|0)!=(0);
 if ($21) {
  $84 = $0;
  __assign_public_value($84,$arg,0,1);
  $85 = $result;
  STACKTOP = sp;return ($85|0);
 }
 $22 = HEAPU8[$arg>>0]|(HEAPU8[$arg+1>>0]<<8)|(HEAPU8[$arg+2>>0]<<16)|(HEAPU8[$arg+3>>0]<<24);
 switch ($22|0) {
 case 2:  {
  $23 = ((($arg)) + 4|0);
  $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
  $25 = ($24|0)!=(0);
  if ($25) {
   $26 = ((($arg)) + 4|0);
   $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
   $28 = ($27|0)>(0);
   $29 = $28 ? 1 : -1;
   $31 = $29;
  } else {
   $31 = 0;
  }
  $30 = ((($arg)) + 4|0);
  HEAP8[$30>>0]=$31&255;HEAP8[$30+1>>0]=($31>>8)&255;HEAP8[$30+2>>0]=($31>>16)&255;HEAP8[$30+3>>0]=$31>>24;
  break;
 }
 case 4:  {
  $32 = ((($arg)) + 4|0);
  HEAP8[tempDoublePtr>>0]=HEAP8[$32>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$32+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$32+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$32+3>>0];$33 = +HEAPF32[tempDoublePtr>>2];
  $34 = $33 != 0.0;
  if ($34) {
   $35 = ((($arg)) + 4|0);
   HEAP8[tempDoublePtr>>0]=HEAP8[$35>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$35+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$35+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$35+3>>0];$36 = +HEAPF32[tempDoublePtr>>2];
   $37 = $36 > 0.0;
   $38 = $37 ? 1 : -1;
   $40 = $38;
  } else {
   $40 = 0;
  }
  $39 = ((($arg)) + 4|0);
  HEAP8[$39>>0]=$40&255;HEAP8[$39+1>>0]=($40>>8)&255;HEAP8[$39+2>>0]=($40>>16)&255;HEAP8[$39+3>>0]=$40>>24;
  HEAP8[$arg>>0]=2&255;HEAP8[$arg+1>>0]=(2>>8)&255;HEAP8[$arg+2>>0]=(2>>16)&255;HEAP8[$arg+3>>0]=2>>24;
  break;
 }
 default: {
  $41 = $1;
  $42 = ($41|0)!=(0|0);
  if ($42) {
   $43 = $1;
   $44 = HEAP32[$43>>2]|0;
   $45 = ($44|0)!=(0|0);
   if ($45) {
    $46 = $1;
    $47 = HEAP32[$46>>2]|0;
    $48 = HEAPU8[$47>>0]|(HEAPU8[$47+1>>0]<<8)|(HEAPU8[$47+2>>0]<<16)|(HEAPU8[$47+3>>0]<<24);
    $49 = ($48|0)!=(0|0);
    if ($49) {
     $50 = $0;
     $51 = $0;
     $52 = ((($51)) + 67|0);
     $53 = HEAPU8[$52>>0]|(HEAPU8[$52+1>>0]<<8)|(HEAPU8[$52+2>>0]<<16)|(HEAPU8[$52+3>>0]<<24);
     $54 = (__set_current_error($50,17,$53)|0);
     $55 = ($54<<24>>24)!=(0);
     if (!($55)) {
      $84 = $0;
      __assign_public_value($84,$arg,0,1);
      $85 = $result;
      STACKTOP = sp;return ($85|0);
     }
     $56 = $0;
     $57 = $1;
     $58 = HEAP32[$57>>2]|0;
     $59 = HEAPU8[$58>>0]|(HEAPU8[$58+1>>0]<<8)|(HEAPU8[$58+2>>0]<<16)|(HEAPU8[$58+3>>0]<<24);
     $60 = ((($59)) + 9|0);
     $61 = HEAPU8[$60>>0]|(HEAPU8[$60+1>>0]<<8)|(HEAPU8[$60+2>>0]<<16)|(HEAPU8[$60+3>>0]<<24);
     $62 = $1;
     $63 = HEAP32[$62>>2]|0;
     $64 = HEAPU8[$63>>0]|(HEAPU8[$63+1>>0]<<8)|(HEAPU8[$63+2>>0]<<16)|(HEAPU8[$63+3>>0]<<24);
     $65 = ((($64)) + 13|0);
     $66 = HEAPU8[$65>>0]|(HEAPU8[$65+1>>0]<<8);
     $67 = $1;
     $68 = HEAP32[$67>>2]|0;
     $69 = HEAPU8[$68>>0]|(HEAPU8[$68+1>>0]<<8)|(HEAPU8[$68+2>>0]<<16)|(HEAPU8[$68+3>>0]<<24);
     $70 = ((($69)) + 15|0);
     $71 = HEAPU8[$70>>0]|(HEAPU8[$70+1>>0]<<8);
     __set_error_pos($56,$61,$66,$71);
     $84 = $0;
     __assign_public_value($84,$arg,0,1);
     $85 = $result;
     STACKTOP = sp;return ($85|0);
    }
   }
  }
  $72 = $0;
  $73 = $0;
  $74 = ((($73)) + 67|0);
  $75 = HEAPU8[$74>>0]|(HEAPU8[$74+1>>0]<<8)|(HEAPU8[$74+2>>0]<<16)|(HEAPU8[$74+3>>0]<<24);
  $76 = (__set_current_error($72,17,$75)|0);
  $77 = ($76<<24>>24)!=(0);
  if (!($77)) {
   $84 = $0;
   __assign_public_value($84,$arg,0,1);
   $85 = $result;
   STACKTOP = sp;return ($85|0);
  }
  $78 = $0;
  __set_error_pos($78,0,0,0);
  $84 = $0;
  __assign_public_value($84,$arg,0,1);
  $85 = $result;
  STACKTOP = sp;return ($85|0);
 }
 }
 $79 = $0;
 $80 = $1;
 $81 = ((($arg)) + 4|0);
 $82 = HEAPU8[$81>>0]|(HEAPU8[$81+1>>0]<<8)|(HEAPU8[$81+2>>0]<<16)|(HEAPU8[$81+3>>0]<<24);
 $83 = (_mb_push_int($79,$80,$82)|0);
 $result = $83;
 $84 = $0;
 __assign_public_value($84,$arg,0,1);
 $85 = $result;
 STACKTOP = sp;return ($85|0);
}
function __std_sqr($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0.0;
 var $27 = 0.0, $28 = 0.0, $29 = 0.0, $3 = 0, $30 = 0, $31 = 0, $32 = 0.0, $33 = 0.0, $34 = 0.0, $35 = 0.0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0.0, $79 = 0, $8 = 0, $80 = 0.0;
 var $81 = 0, $82 = 0.0, $83 = 0, $84 = 0, $85 = 0.0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $__hr = 0, $arg = 0, $arg$byval_copy = 0, $or$cond = 0;
 var $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $arg$byval_copy = sp + 24|0;
 $arg = sp + 32|0;
 $1 = $s;
 $2 = $l;
 $result = 0;
 $3 = $1;
 $4 = ($3|0)!=(0|0);
 $5 = $2;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),17294,(15084|0));
  // unreachable;
 }
 $7 = ((($arg)) + 4|0);
 ;HEAP8[$7>>0]=0|0;HEAP8[$7+1>>0]=0|0;HEAP8[$7+2>>0]=0|0;HEAP8[$7+3>>0]=0|0;
 HEAP8[$arg>>0]=0&255;HEAP8[$arg+1>>0]=(0>>8)&255;HEAP8[$arg+2>>0]=(0>>16)&255;HEAP8[$arg+3>>0]=0>>24;
 $8 = $1;
 $9 = $2;
 $10 = (_mb_attempt_open_bracket($8,$9)|0);
 $result = $10;
 $11 = $result;
 $12 = ($11|0)!=(0);
 L4: do {
  if (!($12)) {
   $13 = $1;
   $14 = $2;
   $15 = (_mb_pop_value($13,$14,$arg)|0);
   $result = $15;
   $16 = $result;
   $17 = ($16|0)!=(0);
   if (!($17)) {
    $18 = $1;
    $19 = $2;
    $20 = (_mb_attempt_close_bracket($18,$19)|0);
    $result = $20;
    $21 = $result;
    $22 = ($21|0)!=(0);
    if (!($22)) {
     $23 = HEAPU8[$arg>>0]|(HEAPU8[$arg+1>>0]<<8)|(HEAPU8[$arg+2>>0]<<16)|(HEAPU8[$arg+3>>0]<<24);
     switch ($23|0) {
     case 2:  {
      $24 = ((($arg)) + 4|0);
      $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
      $26 = (+($25|0));
      $27 = $26;
      $28 = (+Math_sqrt((+$27)));
      $29 = $28;
      $30 = ((($arg)) + 4|0);
      HEAPF32[tempDoublePtr>>2]=$29;HEAP8[$30>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$30+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$30+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$30+3>>0]=HEAP8[tempDoublePtr+3>>0];
      HEAP8[$arg>>0]=4&255;HEAP8[$arg+1>>0]=(4>>8)&255;HEAP8[$arg+2>>0]=(4>>16)&255;HEAP8[$arg+3>>0]=4>>24;
      break;
     }
     case 4:  {
      $31 = ((($arg)) + 4|0);
      HEAP8[tempDoublePtr>>0]=HEAP8[$31>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$31+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$31+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$31+3>>0];$32 = +HEAPF32[tempDoublePtr>>2];
      $33 = $32;
      $34 = (+Math_sqrt((+$33)));
      $35 = $34;
      $36 = ((($arg)) + 4|0);
      HEAPF32[tempDoublePtr>>2]=$35;HEAP8[$36>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$36+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$36+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$36+3>>0]=HEAP8[tempDoublePtr+3>>0];
      break;
     }
     default: {
      $37 = $2;
      $38 = ($37|0)!=(0|0);
      if ($38) {
       $39 = $2;
       $40 = HEAP32[$39>>2]|0;
       $41 = ($40|0)!=(0|0);
       if ($41) {
        $42 = $2;
        $43 = HEAP32[$42>>2]|0;
        $44 = HEAPU8[$43>>0]|(HEAPU8[$43+1>>0]<<8)|(HEAPU8[$43+2>>0]<<16)|(HEAPU8[$43+3>>0]<<24);
        $45 = ($44|0)!=(0|0);
        if ($45) {
         $46 = $1;
         $47 = $1;
         $48 = ((($47)) + 67|0);
         $49 = HEAPU8[$48>>0]|(HEAPU8[$48+1>>0]<<8)|(HEAPU8[$48+2>>0]<<16)|(HEAPU8[$48+3>>0]<<24);
         $50 = (__set_current_error($46,17,$49)|0);
         $51 = ($50<<24>>24)!=(0);
         if (!($51)) {
          break L4;
         }
         $52 = $1;
         $53 = $2;
         $54 = HEAP32[$53>>2]|0;
         $55 = HEAPU8[$54>>0]|(HEAPU8[$54+1>>0]<<8)|(HEAPU8[$54+2>>0]<<16)|(HEAPU8[$54+3>>0]<<24);
         $56 = ((($55)) + 9|0);
         $57 = HEAPU8[$56>>0]|(HEAPU8[$56+1>>0]<<8)|(HEAPU8[$56+2>>0]<<16)|(HEAPU8[$56+3>>0]<<24);
         $58 = $2;
         $59 = HEAP32[$58>>2]|0;
         $60 = HEAPU8[$59>>0]|(HEAPU8[$59+1>>0]<<8)|(HEAPU8[$59+2>>0]<<16)|(HEAPU8[$59+3>>0]<<24);
         $61 = ((($60)) + 13|0);
         $62 = HEAPU8[$61>>0]|(HEAPU8[$61+1>>0]<<8);
         $63 = $2;
         $64 = HEAP32[$63>>2]|0;
         $65 = HEAPU8[$64>>0]|(HEAPU8[$64+1>>0]<<8)|(HEAPU8[$64+2>>0]<<16)|(HEAPU8[$64+3>>0]<<24);
         $66 = ((($65)) + 15|0);
         $67 = HEAPU8[$66>>0]|(HEAPU8[$66+1>>0]<<8);
         __set_error_pos($52,$57,$62,$67);
         break L4;
        }
       }
      }
      $68 = $1;
      $69 = $1;
      $70 = ((($69)) + 67|0);
      $71 = HEAPU8[$70>>0]|(HEAPU8[$70+1>>0]<<8)|(HEAPU8[$70+2>>0]<<16)|(HEAPU8[$70+3>>0]<<24);
      $72 = (__set_current_error($68,17,$71)|0);
      $73 = ($72<<24>>24)!=(0);
      if (!($73)) {
       break L4;
      }
      $74 = $1;
      __set_error_pos($74,0,0,0);
      break L4;
     }
     }
     $75 = HEAPU8[$arg>>0]|(HEAPU8[$arg+1>>0]<<8)|(HEAPU8[$arg+2>>0]<<16)|(HEAPU8[$arg+3>>0]<<24);
     $76 = ($75|0)==(4);
     if ($76) {
      $77 = ((($arg)) + 4|0);
      HEAP8[tempDoublePtr>>0]=HEAP8[$77>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$77+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$77+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$77+3>>0];$78 = +HEAPF32[tempDoublePtr>>2];
      $79 = (~~(($78)));
      $80 = (+($79|0));
      $81 = ((($arg)) + 4|0);
      HEAP8[tempDoublePtr>>0]=HEAP8[$81>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$81+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$81+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$81+3>>0];$82 = +HEAPF32[tempDoublePtr>>2];
      $83 = $80 == $82;
      if ($83) {
       HEAP8[$arg>>0]=2&255;HEAP8[$arg+1>>0]=(2>>8)&255;HEAP8[$arg+2>>0]=(2>>16)&255;HEAP8[$arg+3>>0]=2>>24;
       $84 = ((($arg)) + 4|0);
       HEAP8[tempDoublePtr>>0]=HEAP8[$84>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$84+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$84+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$84+3>>0];$85 = +HEAPF32[tempDoublePtr>>2];
       $86 = (~~(($85)));
       $87 = ((($arg)) + 4|0);
       HEAP8[$87>>0]=$86&255;HEAP8[$87+1>>0]=($86>>8)&255;HEAP8[$87+2>>0]=($86>>16)&255;HEAP8[$87+3>>0]=$86>>24;
      }
     }
    }
   }
  }
 } while(0);
 $88 = $1;
 $89 = $2;
 ;HEAP32[$arg$byval_copy>>2]=HEAP32[$arg>>2]|0;HEAP32[$arg$byval_copy+4>>2]=HEAP32[$arg+4>>2]|0;
 $90 = (_mb_push_value($88,$89,$arg$byval_copy)|0);
 $__hr = $90;
 $91 = $__hr;
 $92 = ($91|0)!=(0);
 if ($92) {
  $93 = $__hr;
  $0 = $93;
  $95 = $0;
  STACKTOP = sp;return ($95|0);
 } else {
  $94 = $result;
  $0 = $94;
  $95 = $0;
  STACKTOP = sp;return ($95|0);
 }
 return (0)|0;
}
function __std_floor($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0.0, $25 = 0.0, $26 = 0.0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $8 = 0, $9 = 0, $arg = 0, $or$cond = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $arg = sp + 16|0;
 $0 = $s;
 $1 = $l;
 $result = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),17317,(15073|0));
  // unreachable;
 }
 $6 = ((($arg)) + 4|0);
 ;HEAP8[$6>>0]=0|0;HEAP8[$6+1>>0]=0|0;HEAP8[$6+2>>0]=0|0;HEAP8[$6+3>>0]=0|0;
 HEAP8[$arg>>0]=0&255;HEAP8[$arg+1>>0]=(0>>8)&255;HEAP8[$arg+2>>0]=(0>>16)&255;HEAP8[$arg+3>>0]=0>>24;
 $7 = $0;
 $8 = $1;
 $9 = (_mb_attempt_open_bracket($7,$8)|0);
 $result = $9;
 $10 = $result;
 $11 = ($10|0)!=(0);
 L4: do {
  if (!($11)) {
   $12 = $0;
   $13 = $1;
   $14 = (_mb_pop_value($12,$13,$arg)|0);
   $result = $14;
   $15 = $result;
   $16 = ($15|0)!=(0);
   if (!($16)) {
    $17 = $0;
    $18 = $1;
    $19 = (_mb_attempt_close_bracket($17,$18)|0);
    $result = $19;
    $20 = $result;
    $21 = ($20|0)!=(0);
    if (!($21)) {
     $22 = HEAPU8[$arg>>0]|(HEAPU8[$arg+1>>0]<<8)|(HEAPU8[$arg+2>>0]<<16)|(HEAPU8[$arg+3>>0]<<24);
     switch ($22|0) {
     case 2:  {
      break;
     }
     case 4:  {
      $23 = ((($arg)) + 4|0);
      HEAP8[tempDoublePtr>>0]=HEAP8[$23>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$23+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$23+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$23+3>>0];$24 = +HEAPF32[tempDoublePtr>>2];
      $25 = $24;
      $26 = (+Math_floor((+$25)));
      $27 = (~~(($26)));
      $28 = ((($arg)) + 4|0);
      HEAP8[$28>>0]=$27&255;HEAP8[$28+1>>0]=($27>>8)&255;HEAP8[$28+2>>0]=($27>>16)&255;HEAP8[$28+3>>0]=$27>>24;
      HEAP8[$arg>>0]=2&255;HEAP8[$arg+1>>0]=(2>>8)&255;HEAP8[$arg+2>>0]=(2>>16)&255;HEAP8[$arg+3>>0]=2>>24;
      break;
     }
     default: {
      $29 = $1;
      $30 = ($29|0)!=(0|0);
      if ($30) {
       $31 = $1;
       $32 = HEAP32[$31>>2]|0;
       $33 = ($32|0)!=(0|0);
       if ($33) {
        $34 = $1;
        $35 = HEAP32[$34>>2]|0;
        $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
        $37 = ($36|0)!=(0|0);
        if ($37) {
         $38 = $0;
         $39 = $0;
         $40 = ((($39)) + 67|0);
         $41 = HEAPU8[$40>>0]|(HEAPU8[$40+1>>0]<<8)|(HEAPU8[$40+2>>0]<<16)|(HEAPU8[$40+3>>0]<<24);
         $42 = (__set_current_error($38,17,$41)|0);
         $43 = ($42<<24>>24)!=(0);
         if (!($43)) {
          break L4;
         }
         $44 = $0;
         $45 = $1;
         $46 = HEAP32[$45>>2]|0;
         $47 = HEAPU8[$46>>0]|(HEAPU8[$46+1>>0]<<8)|(HEAPU8[$46+2>>0]<<16)|(HEAPU8[$46+3>>0]<<24);
         $48 = ((($47)) + 9|0);
         $49 = HEAPU8[$48>>0]|(HEAPU8[$48+1>>0]<<8)|(HEAPU8[$48+2>>0]<<16)|(HEAPU8[$48+3>>0]<<24);
         $50 = $1;
         $51 = HEAP32[$50>>2]|0;
         $52 = HEAPU8[$51>>0]|(HEAPU8[$51+1>>0]<<8)|(HEAPU8[$51+2>>0]<<16)|(HEAPU8[$51+3>>0]<<24);
         $53 = ((($52)) + 13|0);
         $54 = HEAPU8[$53>>0]|(HEAPU8[$53+1>>0]<<8);
         $55 = $1;
         $56 = HEAP32[$55>>2]|0;
         $57 = HEAPU8[$56>>0]|(HEAPU8[$56+1>>0]<<8)|(HEAPU8[$56+2>>0]<<16)|(HEAPU8[$56+3>>0]<<24);
         $58 = ((($57)) + 15|0);
         $59 = HEAPU8[$58>>0]|(HEAPU8[$58+1>>0]<<8);
         __set_error_pos($44,$49,$54,$59);
         break L4;
        }
       }
      }
      $60 = $0;
      $61 = $0;
      $62 = ((($61)) + 67|0);
      $63 = HEAPU8[$62>>0]|(HEAPU8[$62+1>>0]<<8)|(HEAPU8[$62+2>>0]<<16)|(HEAPU8[$62+3>>0]<<24);
      $64 = (__set_current_error($60,17,$63)|0);
      $65 = ($64<<24>>24)!=(0);
      if (!($65)) {
       break L4;
      }
      $66 = $0;
      __set_error_pos($66,0,0,0);
      break L4;
     }
     }
     $67 = $0;
     $68 = $1;
     $69 = ((($arg)) + 4|0);
     $70 = HEAPU8[$69>>0]|(HEAPU8[$69+1>>0]<<8)|(HEAPU8[$69+2>>0]<<16)|(HEAPU8[$69+3>>0]<<24);
     $71 = (_mb_push_int($67,$68,$70)|0);
     $result = $71;
    }
   }
  }
 } while(0);
 $72 = $0;
 __assign_public_value($72,$arg,0,1);
 $73 = $result;
 STACKTOP = sp;return ($73|0);
}
function __std_ceil($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0.0, $25 = 0.0, $26 = 0.0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $8 = 0, $9 = 0, $arg = 0, $or$cond = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $arg = sp + 16|0;
 $0 = $s;
 $1 = $l;
 $result = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),17353,(15063|0));
  // unreachable;
 }
 $6 = ((($arg)) + 4|0);
 ;HEAP8[$6>>0]=0|0;HEAP8[$6+1>>0]=0|0;HEAP8[$6+2>>0]=0|0;HEAP8[$6+3>>0]=0|0;
 HEAP8[$arg>>0]=0&255;HEAP8[$arg+1>>0]=(0>>8)&255;HEAP8[$arg+2>>0]=(0>>16)&255;HEAP8[$arg+3>>0]=0>>24;
 $7 = $0;
 $8 = $1;
 $9 = (_mb_attempt_open_bracket($7,$8)|0);
 $result = $9;
 $10 = $result;
 $11 = ($10|0)!=(0);
 L4: do {
  if (!($11)) {
   $12 = $0;
   $13 = $1;
   $14 = (_mb_pop_value($12,$13,$arg)|0);
   $result = $14;
   $15 = $result;
   $16 = ($15|0)!=(0);
   if (!($16)) {
    $17 = $0;
    $18 = $1;
    $19 = (_mb_attempt_close_bracket($17,$18)|0);
    $result = $19;
    $20 = $result;
    $21 = ($20|0)!=(0);
    if (!($21)) {
     $22 = HEAPU8[$arg>>0]|(HEAPU8[$arg+1>>0]<<8)|(HEAPU8[$arg+2>>0]<<16)|(HEAPU8[$arg+3>>0]<<24);
     switch ($22|0) {
     case 2:  {
      break;
     }
     case 4:  {
      $23 = ((($arg)) + 4|0);
      HEAP8[tempDoublePtr>>0]=HEAP8[$23>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$23+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$23+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$23+3>>0];$24 = +HEAPF32[tempDoublePtr>>2];
      $25 = $24;
      $26 = (+Math_ceil((+$25)));
      $27 = (~~(($26)));
      $28 = ((($arg)) + 4|0);
      HEAP8[$28>>0]=$27&255;HEAP8[$28+1>>0]=($27>>8)&255;HEAP8[$28+2>>0]=($27>>16)&255;HEAP8[$28+3>>0]=$27>>24;
      HEAP8[$arg>>0]=2&255;HEAP8[$arg+1>>0]=(2>>8)&255;HEAP8[$arg+2>>0]=(2>>16)&255;HEAP8[$arg+3>>0]=2>>24;
      break;
     }
     default: {
      $29 = $1;
      $30 = ($29|0)!=(0|0);
      if ($30) {
       $31 = $1;
       $32 = HEAP32[$31>>2]|0;
       $33 = ($32|0)!=(0|0);
       if ($33) {
        $34 = $1;
        $35 = HEAP32[$34>>2]|0;
        $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
        $37 = ($36|0)!=(0|0);
        if ($37) {
         $38 = $0;
         $39 = $0;
         $40 = ((($39)) + 67|0);
         $41 = HEAPU8[$40>>0]|(HEAPU8[$40+1>>0]<<8)|(HEAPU8[$40+2>>0]<<16)|(HEAPU8[$40+3>>0]<<24);
         $42 = (__set_current_error($38,17,$41)|0);
         $43 = ($42<<24>>24)!=(0);
         if (!($43)) {
          break L4;
         }
         $44 = $0;
         $45 = $1;
         $46 = HEAP32[$45>>2]|0;
         $47 = HEAPU8[$46>>0]|(HEAPU8[$46+1>>0]<<8)|(HEAPU8[$46+2>>0]<<16)|(HEAPU8[$46+3>>0]<<24);
         $48 = ((($47)) + 9|0);
         $49 = HEAPU8[$48>>0]|(HEAPU8[$48+1>>0]<<8)|(HEAPU8[$48+2>>0]<<16)|(HEAPU8[$48+3>>0]<<24);
         $50 = $1;
         $51 = HEAP32[$50>>2]|0;
         $52 = HEAPU8[$51>>0]|(HEAPU8[$51+1>>0]<<8)|(HEAPU8[$51+2>>0]<<16)|(HEAPU8[$51+3>>0]<<24);
         $53 = ((($52)) + 13|0);
         $54 = HEAPU8[$53>>0]|(HEAPU8[$53+1>>0]<<8);
         $55 = $1;
         $56 = HEAP32[$55>>2]|0;
         $57 = HEAPU8[$56>>0]|(HEAPU8[$56+1>>0]<<8)|(HEAPU8[$56+2>>0]<<16)|(HEAPU8[$56+3>>0]<<24);
         $58 = ((($57)) + 15|0);
         $59 = HEAPU8[$58>>0]|(HEAPU8[$58+1>>0]<<8);
         __set_error_pos($44,$49,$54,$59);
         break L4;
        }
       }
      }
      $60 = $0;
      $61 = $0;
      $62 = ((($61)) + 67|0);
      $63 = HEAPU8[$62>>0]|(HEAPU8[$62+1>>0]<<8)|(HEAPU8[$62+2>>0]<<16)|(HEAPU8[$62+3>>0]<<24);
      $64 = (__set_current_error($60,17,$63)|0);
      $65 = ($64<<24>>24)!=(0);
      if (!($65)) {
       break L4;
      }
      $66 = $0;
      __set_error_pos($66,0,0,0);
      break L4;
     }
     }
     $67 = $0;
     $68 = $1;
     $69 = ((($arg)) + 4|0);
     $70 = HEAPU8[$69>>0]|(HEAPU8[$69+1>>0]<<8)|(HEAPU8[$69+2>>0]<<16)|(HEAPU8[$69+3>>0]<<24);
     $71 = (_mb_push_int($67,$68,$70)|0);
     $result = $71;
    }
   }
  }
 } while(0);
 $72 = $0;
 __assign_public_value($72,$arg,0,1);
 $73 = $result;
 STACKTOP = sp;return ($73|0);
}
function __std_fix($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0.0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $8 = 0, $9 = 0, $arg = 0, $or$cond = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $arg = sp + 16|0;
 $0 = $s;
 $1 = $l;
 $result = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),17389,(15054|0));
  // unreachable;
 }
 $6 = ((($arg)) + 4|0);
 ;HEAP8[$6>>0]=0|0;HEAP8[$6+1>>0]=0|0;HEAP8[$6+2>>0]=0|0;HEAP8[$6+3>>0]=0|0;
 HEAP8[$arg>>0]=0&255;HEAP8[$arg+1>>0]=(0>>8)&255;HEAP8[$arg+2>>0]=(0>>16)&255;HEAP8[$arg+3>>0]=0>>24;
 $7 = $0;
 $8 = $1;
 $9 = (_mb_attempt_open_bracket($7,$8)|0);
 $result = $9;
 $10 = $result;
 $11 = ($10|0)!=(0);
 L4: do {
  if (!($11)) {
   $12 = $0;
   $13 = $1;
   $14 = (_mb_pop_value($12,$13,$arg)|0);
   $result = $14;
   $15 = $result;
   $16 = ($15|0)!=(0);
   if (!($16)) {
    $17 = $0;
    $18 = $1;
    $19 = (_mb_attempt_close_bracket($17,$18)|0);
    $result = $19;
    $20 = $result;
    $21 = ($20|0)!=(0);
    if (!($21)) {
     $22 = HEAPU8[$arg>>0]|(HEAPU8[$arg+1>>0]<<8)|(HEAPU8[$arg+2>>0]<<16)|(HEAPU8[$arg+3>>0]<<24);
     switch ($22|0) {
     case 2:  {
      break;
     }
     case 4:  {
      $23 = ((($arg)) + 4|0);
      HEAP8[tempDoublePtr>>0]=HEAP8[$23>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$23+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$23+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$23+3>>0];$24 = +HEAPF32[tempDoublePtr>>2];
      $25 = (~~(($24)));
      $26 = ((($arg)) + 4|0);
      HEAP8[$26>>0]=$25&255;HEAP8[$26+1>>0]=($25>>8)&255;HEAP8[$26+2>>0]=($25>>16)&255;HEAP8[$26+3>>0]=$25>>24;
      HEAP8[$arg>>0]=2&255;HEAP8[$arg+1>>0]=(2>>8)&255;HEAP8[$arg+2>>0]=(2>>16)&255;HEAP8[$arg+3>>0]=2>>24;
      break;
     }
     default: {
      $27 = $1;
      $28 = ($27|0)!=(0|0);
      if ($28) {
       $29 = $1;
       $30 = HEAP32[$29>>2]|0;
       $31 = ($30|0)!=(0|0);
       if ($31) {
        $32 = $1;
        $33 = HEAP32[$32>>2]|0;
        $34 = HEAPU8[$33>>0]|(HEAPU8[$33+1>>0]<<8)|(HEAPU8[$33+2>>0]<<16)|(HEAPU8[$33+3>>0]<<24);
        $35 = ($34|0)!=(0|0);
        if ($35) {
         $36 = $0;
         $37 = $0;
         $38 = ((($37)) + 67|0);
         $39 = HEAPU8[$38>>0]|(HEAPU8[$38+1>>0]<<8)|(HEAPU8[$38+2>>0]<<16)|(HEAPU8[$38+3>>0]<<24);
         $40 = (__set_current_error($36,17,$39)|0);
         $41 = ($40<<24>>24)!=(0);
         if (!($41)) {
          break L4;
         }
         $42 = $0;
         $43 = $1;
         $44 = HEAP32[$43>>2]|0;
         $45 = HEAPU8[$44>>0]|(HEAPU8[$44+1>>0]<<8)|(HEAPU8[$44+2>>0]<<16)|(HEAPU8[$44+3>>0]<<24);
         $46 = ((($45)) + 9|0);
         $47 = HEAPU8[$46>>0]|(HEAPU8[$46+1>>0]<<8)|(HEAPU8[$46+2>>0]<<16)|(HEAPU8[$46+3>>0]<<24);
         $48 = $1;
         $49 = HEAP32[$48>>2]|0;
         $50 = HEAPU8[$49>>0]|(HEAPU8[$49+1>>0]<<8)|(HEAPU8[$49+2>>0]<<16)|(HEAPU8[$49+3>>0]<<24);
         $51 = ((($50)) + 13|0);
         $52 = HEAPU8[$51>>0]|(HEAPU8[$51+1>>0]<<8);
         $53 = $1;
         $54 = HEAP32[$53>>2]|0;
         $55 = HEAPU8[$54>>0]|(HEAPU8[$54+1>>0]<<8)|(HEAPU8[$54+2>>0]<<16)|(HEAPU8[$54+3>>0]<<24);
         $56 = ((($55)) + 15|0);
         $57 = HEAPU8[$56>>0]|(HEAPU8[$56+1>>0]<<8);
         __set_error_pos($42,$47,$52,$57);
         break L4;
        }
       }
      }
      $58 = $0;
      $59 = $0;
      $60 = ((($59)) + 67|0);
      $61 = HEAPU8[$60>>0]|(HEAPU8[$60+1>>0]<<8)|(HEAPU8[$60+2>>0]<<16)|(HEAPU8[$60+3>>0]<<24);
      $62 = (__set_current_error($58,17,$61)|0);
      $63 = ($62<<24>>24)!=(0);
      if (!($63)) {
       break L4;
      }
      $64 = $0;
      __set_error_pos($64,0,0,0);
      break L4;
     }
     }
     $65 = $0;
     $66 = $1;
     $67 = ((($arg)) + 4|0);
     $68 = HEAPU8[$67>>0]|(HEAPU8[$67+1>>0]<<8)|(HEAPU8[$67+2>>0]<<16)|(HEAPU8[$67+3>>0]<<24);
     $69 = (_mb_push_int($65,$66,$68)|0);
     $result = $69;
    }
   }
  }
 } while(0);
 $70 = $0;
 __assign_public_value($70,$arg,0,1);
 $71 = $result;
 STACKTOP = sp;return ($71|0);
}
function __std_round($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0.0, $25 = 0.0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $8 = 0, $9 = 0, $arg = 0, $or$cond = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $arg = sp + 16|0;
 $0 = $s;
 $1 = $l;
 $result = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),17425,(15043|0));
  // unreachable;
 }
 $6 = ((($arg)) + 4|0);
 ;HEAP8[$6>>0]=0|0;HEAP8[$6+1>>0]=0|0;HEAP8[$6+2>>0]=0|0;HEAP8[$6+3>>0]=0|0;
 HEAP8[$arg>>0]=0&255;HEAP8[$arg+1>>0]=(0>>8)&255;HEAP8[$arg+2>>0]=(0>>16)&255;HEAP8[$arg+3>>0]=0>>24;
 $7 = $0;
 $8 = $1;
 $9 = (_mb_attempt_open_bracket($7,$8)|0);
 $result = $9;
 $10 = $result;
 $11 = ($10|0)!=(0);
 L4: do {
  if (!($11)) {
   $12 = $0;
   $13 = $1;
   $14 = (_mb_pop_value($12,$13,$arg)|0);
   $result = $14;
   $15 = $result;
   $16 = ($15|0)!=(0);
   if (!($16)) {
    $17 = $0;
    $18 = $1;
    $19 = (_mb_attempt_close_bracket($17,$18)|0);
    $result = $19;
    $20 = $result;
    $21 = ($20|0)!=(0);
    if (!($21)) {
     $22 = HEAPU8[$arg>>0]|(HEAPU8[$arg+1>>0]<<8)|(HEAPU8[$arg+2>>0]<<16)|(HEAPU8[$arg+3>>0]<<24);
     switch ($22|0) {
     case 2:  {
      break;
     }
     case 4:  {
      $23 = ((($arg)) + 4|0);
      HEAP8[tempDoublePtr>>0]=HEAP8[$23>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$23+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$23+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$23+3>>0];$24 = +HEAPF32[tempDoublePtr>>2];
      $25 = $24 + 0.5;
      $26 = (~~(($25)));
      $27 = ((($arg)) + 4|0);
      HEAP8[$27>>0]=$26&255;HEAP8[$27+1>>0]=($26>>8)&255;HEAP8[$27+2>>0]=($26>>16)&255;HEAP8[$27+3>>0]=$26>>24;
      HEAP8[$arg>>0]=2&255;HEAP8[$arg+1>>0]=(2>>8)&255;HEAP8[$arg+2>>0]=(2>>16)&255;HEAP8[$arg+3>>0]=2>>24;
      break;
     }
     default: {
      $28 = $1;
      $29 = ($28|0)!=(0|0);
      if ($29) {
       $30 = $1;
       $31 = HEAP32[$30>>2]|0;
       $32 = ($31|0)!=(0|0);
       if ($32) {
        $33 = $1;
        $34 = HEAP32[$33>>2]|0;
        $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
        $36 = ($35|0)!=(0|0);
        if ($36) {
         $37 = $0;
         $38 = $0;
         $39 = ((($38)) + 67|0);
         $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8)|(HEAPU8[$39+2>>0]<<16)|(HEAPU8[$39+3>>0]<<24);
         $41 = (__set_current_error($37,17,$40)|0);
         $42 = ($41<<24>>24)!=(0);
         if (!($42)) {
          break L4;
         }
         $43 = $0;
         $44 = $1;
         $45 = HEAP32[$44>>2]|0;
         $46 = HEAPU8[$45>>0]|(HEAPU8[$45+1>>0]<<8)|(HEAPU8[$45+2>>0]<<16)|(HEAPU8[$45+3>>0]<<24);
         $47 = ((($46)) + 9|0);
         $48 = HEAPU8[$47>>0]|(HEAPU8[$47+1>>0]<<8)|(HEAPU8[$47+2>>0]<<16)|(HEAPU8[$47+3>>0]<<24);
         $49 = $1;
         $50 = HEAP32[$49>>2]|0;
         $51 = HEAPU8[$50>>0]|(HEAPU8[$50+1>>0]<<8)|(HEAPU8[$50+2>>0]<<16)|(HEAPU8[$50+3>>0]<<24);
         $52 = ((($51)) + 13|0);
         $53 = HEAPU8[$52>>0]|(HEAPU8[$52+1>>0]<<8);
         $54 = $1;
         $55 = HEAP32[$54>>2]|0;
         $56 = HEAPU8[$55>>0]|(HEAPU8[$55+1>>0]<<8)|(HEAPU8[$55+2>>0]<<16)|(HEAPU8[$55+3>>0]<<24);
         $57 = ((($56)) + 15|0);
         $58 = HEAPU8[$57>>0]|(HEAPU8[$57+1>>0]<<8);
         __set_error_pos($43,$48,$53,$58);
         break L4;
        }
       }
      }
      $59 = $0;
      $60 = $0;
      $61 = ((($60)) + 67|0);
      $62 = HEAPU8[$61>>0]|(HEAPU8[$61+1>>0]<<8)|(HEAPU8[$61+2>>0]<<16)|(HEAPU8[$61+3>>0]<<24);
      $63 = (__set_current_error($59,17,$62)|0);
      $64 = ($63<<24>>24)!=(0);
      if (!($64)) {
       break L4;
      }
      $65 = $0;
      __set_error_pos($65,0,0,0);
      break L4;
     }
     }
     $66 = $0;
     $67 = $1;
     $68 = ((($arg)) + 4|0);
     $69 = HEAPU8[$68>>0]|(HEAPU8[$68+1>>0]<<8)|(HEAPU8[$68+2>>0]<<16)|(HEAPU8[$68+3>>0]<<24);
     $70 = (_mb_push_int($66,$67,$69)|0);
     $result = $70;
    }
   }
  }
 } while(0);
 $71 = $0;
 __assign_public_value($71,$arg,0,1);
 $72 = $result;
 STACKTOP = sp;return ($72|0);
}
function __std_srnd($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__hr = 0, $__hr1 = 0, $__hr2 = 0, $or$cond = 0, $result = 0, $seed = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $seed = sp + 12|0;
 $1 = $s;
 $2 = $l;
 $result = 0;
 HEAP32[$seed>>2] = 0;
 $3 = $1;
 $4 = ($3|0)!=(0|0);
 $5 = $2;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),17461,(15033|0));
  // unreachable;
 }
 $7 = $1;
 $8 = $2;
 $9 = (_mb_attempt_open_bracket($7,$8)|0);
 $__hr = $9;
 $10 = $__hr;
 $11 = ($10|0)!=(0);
 if ($11) {
  $12 = $__hr;
  $0 = $12;
  $27 = $0;
  STACKTOP = sp;return ($27|0);
 }
 $13 = $1;
 $14 = $2;
 $15 = (_mb_pop_int($13,$14,$seed)|0);
 $__hr1 = $15;
 $16 = $__hr1;
 $17 = ($16|0)!=(0);
 if ($17) {
  $18 = $__hr1;
  $0 = $18;
  $27 = $0;
  STACKTOP = sp;return ($27|0);
 }
 $19 = $1;
 $20 = $2;
 $21 = (_mb_attempt_close_bracket($19,$20)|0);
 $__hr2 = $21;
 $22 = $__hr2;
 $23 = ($22|0)!=(0);
 if ($23) {
  $24 = $__hr2;
  $0 = $24;
  $27 = $0;
  STACKTOP = sp;return ($27|0);
 } else {
  $25 = HEAP32[$seed>>2]|0;
  _srand($25);
  $26 = $result;
  $0 = $26;
  $27 = $0;
  STACKTOP = sp;return ($27|0);
 }
 return (0)|0;
}
function __std_rnd($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0.0, $115 = 0;
 var $116 = 0, $117 = 0.0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0.0, $138 = 0.0, $139 = 0, $14 = 0, $140 = 0, $141 = 0.0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__hr = 0, $__hr1 = 0, $__hr2 = 0, $__hr3 = 0, $__hr4 = 0, $__hr5 = 0, $__hr6 = 0, $__hr7 = 0, $ast = 0, $hg = 0, $lw = 0, $or$cond = 0;
 var $or$cond3 = 0, $result = 0, $rnd = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $hg = sp + 32|0;
 $1 = $s;
 $2 = $l;
 $result = 0;
 $ast = 0;
 $rnd = 0.0;
 $3 = $1;
 $4 = ($3|0)!=(0|0);
 $5 = $2;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),17480,(15024|0));
  // unreachable;
 }
 $7 = $2;
 $8 = HEAP32[$7>>2]|0;
 $ast = $8;
 $9 = $ast;
 $10 = ($9|0)!=(0|0);
 do {
  if ($10) {
   $11 = $ast;
   $12 = ((($11)) + 8|0);
   $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
   $14 = ($13|0)!=(0|0);
   if ($14) {
    $15 = $ast;
    $16 = ((($15)) + 8|0);
    $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
    $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
    $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
    $20 = ($19|0)==(8);
    if ($20) {
     $21 = $ast;
     $22 = ((($21)) + 8|0);
     $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
     $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
     $25 = ((($24)) + 4|0);
     $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
     $27 = ((($26)) + 4|0);
     $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
     $29 = ($28|0)==(7|0);
     if ($29) {
      $lw = 0;
      HEAP32[$hg>>2] = 0;
      $30 = $1;
      $31 = $2;
      $32 = (_mb_attempt_open_bracket($30,$31)|0);
      $__hr = $32;
      $33 = $__hr;
      $34 = ($33|0)!=(0);
      if ($34) {
       $35 = $__hr;
       $0 = $35;
       $147 = $0;
       STACKTOP = sp;return ($147|0);
      }
      $36 = $1;
      $37 = $2;
      $38 = (_mb_has_arg($36,$37)|0);
      $39 = ($38|0)!=(0);
      if ($39) {
       $40 = $1;
       $41 = $2;
       $42 = (_mb_pop_int($40,$41,$hg)|0);
       $__hr1 = $42;
       $43 = $__hr1;
       $44 = ($43|0)!=(0);
       if ($44) {
        $45 = $__hr1;
        $0 = $45;
        $147 = $0;
        STACKTOP = sp;return ($147|0);
       }
      }
      $46 = $1;
      $47 = $2;
      $48 = (_mb_has_arg($46,$47)|0);
      $49 = ($48|0)!=(0);
      if ($49) {
       $50 = HEAP32[$hg>>2]|0;
       $lw = $50;
       $51 = $1;
       $52 = $2;
       $53 = (_mb_pop_int($51,$52,$hg)|0);
       $__hr2 = $53;
       $54 = $__hr2;
       $55 = ($54|0)!=(0);
       if ($55) {
        $56 = $__hr2;
        $0 = $56;
        $147 = $0;
        STACKTOP = sp;return ($147|0);
       }
      }
      $57 = $1;
      $58 = $2;
      $59 = (_mb_attempt_close_bracket($57,$58)|0);
      $__hr3 = $59;
      $60 = $__hr3;
      $61 = ($60|0)!=(0);
      if ($61) {
       $62 = $__hr3;
       $0 = $62;
       $147 = $0;
       STACKTOP = sp;return ($147|0);
      }
      $63 = $lw;
      $64 = HEAP32[$hg>>2]|0;
      $65 = ($63|0)>=($64|0);
      $66 = HEAP32[$hg>>2]|0;
      $67 = ($66|0)>(2147483647);
      $or$cond3 = $65 | $67;
      if (!($or$cond3)) {
       $106 = (_rand()|0);
       $107 = HEAP32[$hg>>2]|0;
       $108 = $lw;
       $109 = (($107) - ($108))|0;
       $110 = (($109) + 1)|0;
       $111 = (($106|0) % ($110|0))&-1;
       $112 = $lw;
       $113 = (($111) + ($112))|0;
       $114 = (+($113|0));
       $rnd = $114;
       $115 = $1;
       $116 = $2;
       $117 = $rnd;
       $118 = (~~(($117)));
       $119 = (_mb_push_int($115,$116,$118)|0);
       $__hr4 = $119;
       $120 = $__hr4;
       $121 = ($120|0)!=(0);
       if (!($121)) {
        break;
       }
       $122 = $__hr4;
       $0 = $122;
       $147 = $0;
       STACKTOP = sp;return ($147|0);
      }
      $68 = $2;
      $69 = ($68|0)!=(0|0);
      if ($69) {
       $70 = $2;
       $71 = HEAP32[$70>>2]|0;
       $72 = ($71|0)!=(0|0);
       if ($72) {
        $73 = $2;
        $74 = HEAP32[$73>>2]|0;
        $75 = HEAPU8[$74>>0]|(HEAPU8[$74+1>>0]<<8)|(HEAPU8[$74+2>>0]<<16)|(HEAPU8[$74+3>>0]<<24);
        $76 = ($75|0)!=(0|0);
        if ($76) {
         $77 = $1;
         $78 = $1;
         $79 = ((($78)) + 67|0);
         $80 = HEAPU8[$79>>0]|(HEAPU8[$79+1>>0]<<8)|(HEAPU8[$79+2>>0]<<16)|(HEAPU8[$79+3>>0]<<24);
         $81 = (__set_current_error($77,20,$80)|0);
         $82 = ($81<<24>>24)!=(0);
         if (!($82)) {
          break;
         }
         $83 = $1;
         $84 = $2;
         $85 = HEAP32[$84>>2]|0;
         $86 = HEAPU8[$85>>0]|(HEAPU8[$85+1>>0]<<8)|(HEAPU8[$85+2>>0]<<16)|(HEAPU8[$85+3>>0]<<24);
         $87 = ((($86)) + 9|0);
         $88 = HEAPU8[$87>>0]|(HEAPU8[$87+1>>0]<<8)|(HEAPU8[$87+2>>0]<<16)|(HEAPU8[$87+3>>0]<<24);
         $89 = $2;
         $90 = HEAP32[$89>>2]|0;
         $91 = HEAPU8[$90>>0]|(HEAPU8[$90+1>>0]<<8)|(HEAPU8[$90+2>>0]<<16)|(HEAPU8[$90+3>>0]<<24);
         $92 = ((($91)) + 13|0);
         $93 = HEAPU8[$92>>0]|(HEAPU8[$92+1>>0]<<8);
         $94 = $2;
         $95 = HEAP32[$94>>2]|0;
         $96 = HEAPU8[$95>>0]|(HEAPU8[$95+1>>0]<<8)|(HEAPU8[$95+2>>0]<<16)|(HEAPU8[$95+3>>0]<<24);
         $97 = ((($96)) + 15|0);
         $98 = HEAPU8[$97>>0]|(HEAPU8[$97+1>>0]<<8);
         __set_error_pos($83,$88,$93,$98);
         $result = 3;
         break;
        }
       }
      }
      $99 = $1;
      $100 = $1;
      $101 = ((($100)) + 67|0);
      $102 = HEAPU8[$101>>0]|(HEAPU8[$101+1>>0]<<8)|(HEAPU8[$101+2>>0]<<16)|(HEAPU8[$101+3>>0]<<24);
      $103 = (__set_current_error($99,20,$102)|0);
      $104 = ($103<<24>>24)!=(0);
      if ($104) {
       $105 = $1;
       __set_error_pos($105,0,0,0);
       $result = 3;
      }
     } else {
      label = 27;
     }
    } else {
     label = 27;
    }
   } else {
    label = 27;
   }
  } else {
   label = 27;
  }
 } while(0);
 if ((label|0) == 27) {
  $123 = $1;
  $124 = $2;
  $125 = (_mb_attempt_func_begin($123,$124)|0);
  $__hr5 = $125;
  $126 = $__hr5;
  $127 = ($126|0)!=(0);
  if ($127) {
   $128 = $__hr5;
   $0 = $128;
   $147 = $0;
   STACKTOP = sp;return ($147|0);
  }
  $129 = $1;
  $130 = $2;
  $131 = (_mb_attempt_func_end($129,$130)|0);
  $__hr6 = $131;
  $132 = $__hr6;
  $133 = ($132|0)!=(0);
  if ($133) {
   $134 = $__hr6;
   $0 = $134;
   $147 = $0;
   STACKTOP = sp;return ($147|0);
  }
  $135 = (_rand()|0);
  $136 = (($135|0) % 101)&-1;
  $137 = (+($136|0));
  $138 = $137 / 100.0;
  $rnd = $138;
  $139 = $1;
  $140 = $2;
  $141 = $rnd;
  $142 = (_mb_push_real($139,$140,$141)|0);
  $__hr7 = $142;
  $143 = $__hr7;
  $144 = ($143|0)!=(0);
  if ($144) {
   $145 = $__hr7;
   $0 = $145;
   $147 = $0;
   STACKTOP = sp;return ($147|0);
  }
 }
 $146 = $result;
 $0 = $146;
 $147 = $0;
 STACKTOP = sp;return ($147|0);
}
function __std_sin($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0.0;
 var $27 = 0.0, $28 = 0.0, $29 = 0.0, $3 = 0, $30 = 0, $31 = 0, $32 = 0.0, $33 = 0.0, $34 = 0.0, $35 = 0.0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0.0, $79 = 0, $8 = 0, $80 = 0.0;
 var $81 = 0, $82 = 0.0, $83 = 0, $84 = 0, $85 = 0.0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $__hr = 0, $arg = 0, $arg$byval_copy = 0, $or$cond = 0;
 var $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $arg$byval_copy = sp + 24|0;
 $arg = sp + 32|0;
 $1 = $s;
 $2 = $l;
 $result = 0;
 $3 = $1;
 $4 = ($3|0)!=(0|0);
 $5 = $2;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),17526,(15015|0));
  // unreachable;
 }
 $7 = ((($arg)) + 4|0);
 ;HEAP8[$7>>0]=0|0;HEAP8[$7+1>>0]=0|0;HEAP8[$7+2>>0]=0|0;HEAP8[$7+3>>0]=0|0;
 HEAP8[$arg>>0]=0&255;HEAP8[$arg+1>>0]=(0>>8)&255;HEAP8[$arg+2>>0]=(0>>16)&255;HEAP8[$arg+3>>0]=0>>24;
 $8 = $1;
 $9 = $2;
 $10 = (_mb_attempt_open_bracket($8,$9)|0);
 $result = $10;
 $11 = $result;
 $12 = ($11|0)!=(0);
 L4: do {
  if (!($12)) {
   $13 = $1;
   $14 = $2;
   $15 = (_mb_pop_value($13,$14,$arg)|0);
   $result = $15;
   $16 = $result;
   $17 = ($16|0)!=(0);
   if (!($17)) {
    $18 = $1;
    $19 = $2;
    $20 = (_mb_attempt_close_bracket($18,$19)|0);
    $result = $20;
    $21 = $result;
    $22 = ($21|0)!=(0);
    if (!($22)) {
     $23 = HEAPU8[$arg>>0]|(HEAPU8[$arg+1>>0]<<8)|(HEAPU8[$arg+2>>0]<<16)|(HEAPU8[$arg+3>>0]<<24);
     switch ($23|0) {
     case 2:  {
      $24 = ((($arg)) + 4|0);
      $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
      $26 = (+($25|0));
      $27 = $26;
      $28 = (+Math_sin((+$27)));
      $29 = $28;
      $30 = ((($arg)) + 4|0);
      HEAPF32[tempDoublePtr>>2]=$29;HEAP8[$30>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$30+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$30+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$30+3>>0]=HEAP8[tempDoublePtr+3>>0];
      HEAP8[$arg>>0]=4&255;HEAP8[$arg+1>>0]=(4>>8)&255;HEAP8[$arg+2>>0]=(4>>16)&255;HEAP8[$arg+3>>0]=4>>24;
      break;
     }
     case 4:  {
      $31 = ((($arg)) + 4|0);
      HEAP8[tempDoublePtr>>0]=HEAP8[$31>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$31+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$31+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$31+3>>0];$32 = +HEAPF32[tempDoublePtr>>2];
      $33 = $32;
      $34 = (+Math_sin((+$33)));
      $35 = $34;
      $36 = ((($arg)) + 4|0);
      HEAPF32[tempDoublePtr>>2]=$35;HEAP8[$36>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$36+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$36+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$36+3>>0]=HEAP8[tempDoublePtr+3>>0];
      break;
     }
     default: {
      $37 = $2;
      $38 = ($37|0)!=(0|0);
      if ($38) {
       $39 = $2;
       $40 = HEAP32[$39>>2]|0;
       $41 = ($40|0)!=(0|0);
       if ($41) {
        $42 = $2;
        $43 = HEAP32[$42>>2]|0;
        $44 = HEAPU8[$43>>0]|(HEAPU8[$43+1>>0]<<8)|(HEAPU8[$43+2>>0]<<16)|(HEAPU8[$43+3>>0]<<24);
        $45 = ($44|0)!=(0|0);
        if ($45) {
         $46 = $1;
         $47 = $1;
         $48 = ((($47)) + 67|0);
         $49 = HEAPU8[$48>>0]|(HEAPU8[$48+1>>0]<<8)|(HEAPU8[$48+2>>0]<<16)|(HEAPU8[$48+3>>0]<<24);
         $50 = (__set_current_error($46,17,$49)|0);
         $51 = ($50<<24>>24)!=(0);
         if (!($51)) {
          break L4;
         }
         $52 = $1;
         $53 = $2;
         $54 = HEAP32[$53>>2]|0;
         $55 = HEAPU8[$54>>0]|(HEAPU8[$54+1>>0]<<8)|(HEAPU8[$54+2>>0]<<16)|(HEAPU8[$54+3>>0]<<24);
         $56 = ((($55)) + 9|0);
         $57 = HEAPU8[$56>>0]|(HEAPU8[$56+1>>0]<<8)|(HEAPU8[$56+2>>0]<<16)|(HEAPU8[$56+3>>0]<<24);
         $58 = $2;
         $59 = HEAP32[$58>>2]|0;
         $60 = HEAPU8[$59>>0]|(HEAPU8[$59+1>>0]<<8)|(HEAPU8[$59+2>>0]<<16)|(HEAPU8[$59+3>>0]<<24);
         $61 = ((($60)) + 13|0);
         $62 = HEAPU8[$61>>0]|(HEAPU8[$61+1>>0]<<8);
         $63 = $2;
         $64 = HEAP32[$63>>2]|0;
         $65 = HEAPU8[$64>>0]|(HEAPU8[$64+1>>0]<<8)|(HEAPU8[$64+2>>0]<<16)|(HEAPU8[$64+3>>0]<<24);
         $66 = ((($65)) + 15|0);
         $67 = HEAPU8[$66>>0]|(HEAPU8[$66+1>>0]<<8);
         __set_error_pos($52,$57,$62,$67);
         break L4;
        }
       }
      }
      $68 = $1;
      $69 = $1;
      $70 = ((($69)) + 67|0);
      $71 = HEAPU8[$70>>0]|(HEAPU8[$70+1>>0]<<8)|(HEAPU8[$70+2>>0]<<16)|(HEAPU8[$70+3>>0]<<24);
      $72 = (__set_current_error($68,17,$71)|0);
      $73 = ($72<<24>>24)!=(0);
      if (!($73)) {
       break L4;
      }
      $74 = $1;
      __set_error_pos($74,0,0,0);
      break L4;
     }
     }
     $75 = HEAPU8[$arg>>0]|(HEAPU8[$arg+1>>0]<<8)|(HEAPU8[$arg+2>>0]<<16)|(HEAPU8[$arg+3>>0]<<24);
     $76 = ($75|0)==(4);
     if ($76) {
      $77 = ((($arg)) + 4|0);
      HEAP8[tempDoublePtr>>0]=HEAP8[$77>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$77+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$77+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$77+3>>0];$78 = +HEAPF32[tempDoublePtr>>2];
      $79 = (~~(($78)));
      $80 = (+($79|0));
      $81 = ((($arg)) + 4|0);
      HEAP8[tempDoublePtr>>0]=HEAP8[$81>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$81+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$81+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$81+3>>0];$82 = +HEAPF32[tempDoublePtr>>2];
      $83 = $80 == $82;
      if ($83) {
       HEAP8[$arg>>0]=2&255;HEAP8[$arg+1>>0]=(2>>8)&255;HEAP8[$arg+2>>0]=(2>>16)&255;HEAP8[$arg+3>>0]=2>>24;
       $84 = ((($arg)) + 4|0);
       HEAP8[tempDoublePtr>>0]=HEAP8[$84>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$84+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$84+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$84+3>>0];$85 = +HEAPF32[tempDoublePtr>>2];
       $86 = (~~(($85)));
       $87 = ((($arg)) + 4|0);
       HEAP8[$87>>0]=$86&255;HEAP8[$87+1>>0]=($86>>8)&255;HEAP8[$87+2>>0]=($86>>16)&255;HEAP8[$87+3>>0]=$86>>24;
      }
     }
    }
   }
  }
 } while(0);
 $88 = $1;
 $89 = $2;
 ;HEAP32[$arg$byval_copy>>2]=HEAP32[$arg>>2]|0;HEAP32[$arg$byval_copy+4>>2]=HEAP32[$arg+4>>2]|0;
 $90 = (_mb_push_value($88,$89,$arg$byval_copy)|0);
 $__hr = $90;
 $91 = $__hr;
 $92 = ($91|0)!=(0);
 if ($92) {
  $93 = $__hr;
  $0 = $93;
  $95 = $0;
  STACKTOP = sp;return ($95|0);
 } else {
  $94 = $result;
  $0 = $94;
  $95 = $0;
  STACKTOP = sp;return ($95|0);
 }
 return (0)|0;
}
function __std_cos($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0.0;
 var $27 = 0.0, $28 = 0.0, $29 = 0.0, $3 = 0, $30 = 0, $31 = 0, $32 = 0.0, $33 = 0.0, $34 = 0.0, $35 = 0.0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0.0, $79 = 0, $8 = 0, $80 = 0.0;
 var $81 = 0, $82 = 0.0, $83 = 0, $84 = 0, $85 = 0.0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $__hr = 0, $arg = 0, $arg$byval_copy = 0, $or$cond = 0;
 var $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $arg$byval_copy = sp + 24|0;
 $arg = sp + 32|0;
 $1 = $s;
 $2 = $l;
 $result = 0;
 $3 = $1;
 $4 = ($3|0)!=(0|0);
 $5 = $2;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),17549,(15006|0));
  // unreachable;
 }
 $7 = ((($arg)) + 4|0);
 ;HEAP8[$7>>0]=0|0;HEAP8[$7+1>>0]=0|0;HEAP8[$7+2>>0]=0|0;HEAP8[$7+3>>0]=0|0;
 HEAP8[$arg>>0]=0&255;HEAP8[$arg+1>>0]=(0>>8)&255;HEAP8[$arg+2>>0]=(0>>16)&255;HEAP8[$arg+3>>0]=0>>24;
 $8 = $1;
 $9 = $2;
 $10 = (_mb_attempt_open_bracket($8,$9)|0);
 $result = $10;
 $11 = $result;
 $12 = ($11|0)!=(0);
 L4: do {
  if (!($12)) {
   $13 = $1;
   $14 = $2;
   $15 = (_mb_pop_value($13,$14,$arg)|0);
   $result = $15;
   $16 = $result;
   $17 = ($16|0)!=(0);
   if (!($17)) {
    $18 = $1;
    $19 = $2;
    $20 = (_mb_attempt_close_bracket($18,$19)|0);
    $result = $20;
    $21 = $result;
    $22 = ($21|0)!=(0);
    if (!($22)) {
     $23 = HEAPU8[$arg>>0]|(HEAPU8[$arg+1>>0]<<8)|(HEAPU8[$arg+2>>0]<<16)|(HEAPU8[$arg+3>>0]<<24);
     switch ($23|0) {
     case 2:  {
      $24 = ((($arg)) + 4|0);
      $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
      $26 = (+($25|0));
      $27 = $26;
      $28 = (+Math_cos((+$27)));
      $29 = $28;
      $30 = ((($arg)) + 4|0);
      HEAPF32[tempDoublePtr>>2]=$29;HEAP8[$30>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$30+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$30+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$30+3>>0]=HEAP8[tempDoublePtr+3>>0];
      HEAP8[$arg>>0]=4&255;HEAP8[$arg+1>>0]=(4>>8)&255;HEAP8[$arg+2>>0]=(4>>16)&255;HEAP8[$arg+3>>0]=4>>24;
      break;
     }
     case 4:  {
      $31 = ((($arg)) + 4|0);
      HEAP8[tempDoublePtr>>0]=HEAP8[$31>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$31+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$31+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$31+3>>0];$32 = +HEAPF32[tempDoublePtr>>2];
      $33 = $32;
      $34 = (+Math_cos((+$33)));
      $35 = $34;
      $36 = ((($arg)) + 4|0);
      HEAPF32[tempDoublePtr>>2]=$35;HEAP8[$36>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$36+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$36+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$36+3>>0]=HEAP8[tempDoublePtr+3>>0];
      break;
     }
     default: {
      $37 = $2;
      $38 = ($37|0)!=(0|0);
      if ($38) {
       $39 = $2;
       $40 = HEAP32[$39>>2]|0;
       $41 = ($40|0)!=(0|0);
       if ($41) {
        $42 = $2;
        $43 = HEAP32[$42>>2]|0;
        $44 = HEAPU8[$43>>0]|(HEAPU8[$43+1>>0]<<8)|(HEAPU8[$43+2>>0]<<16)|(HEAPU8[$43+3>>0]<<24);
        $45 = ($44|0)!=(0|0);
        if ($45) {
         $46 = $1;
         $47 = $1;
         $48 = ((($47)) + 67|0);
         $49 = HEAPU8[$48>>0]|(HEAPU8[$48+1>>0]<<8)|(HEAPU8[$48+2>>0]<<16)|(HEAPU8[$48+3>>0]<<24);
         $50 = (__set_current_error($46,17,$49)|0);
         $51 = ($50<<24>>24)!=(0);
         if (!($51)) {
          break L4;
         }
         $52 = $1;
         $53 = $2;
         $54 = HEAP32[$53>>2]|0;
         $55 = HEAPU8[$54>>0]|(HEAPU8[$54+1>>0]<<8)|(HEAPU8[$54+2>>0]<<16)|(HEAPU8[$54+3>>0]<<24);
         $56 = ((($55)) + 9|0);
         $57 = HEAPU8[$56>>0]|(HEAPU8[$56+1>>0]<<8)|(HEAPU8[$56+2>>0]<<16)|(HEAPU8[$56+3>>0]<<24);
         $58 = $2;
         $59 = HEAP32[$58>>2]|0;
         $60 = HEAPU8[$59>>0]|(HEAPU8[$59+1>>0]<<8)|(HEAPU8[$59+2>>0]<<16)|(HEAPU8[$59+3>>0]<<24);
         $61 = ((($60)) + 13|0);
         $62 = HEAPU8[$61>>0]|(HEAPU8[$61+1>>0]<<8);
         $63 = $2;
         $64 = HEAP32[$63>>2]|0;
         $65 = HEAPU8[$64>>0]|(HEAPU8[$64+1>>0]<<8)|(HEAPU8[$64+2>>0]<<16)|(HEAPU8[$64+3>>0]<<24);
         $66 = ((($65)) + 15|0);
         $67 = HEAPU8[$66>>0]|(HEAPU8[$66+1>>0]<<8);
         __set_error_pos($52,$57,$62,$67);
         break L4;
        }
       }
      }
      $68 = $1;
      $69 = $1;
      $70 = ((($69)) + 67|0);
      $71 = HEAPU8[$70>>0]|(HEAPU8[$70+1>>0]<<8)|(HEAPU8[$70+2>>0]<<16)|(HEAPU8[$70+3>>0]<<24);
      $72 = (__set_current_error($68,17,$71)|0);
      $73 = ($72<<24>>24)!=(0);
      if (!($73)) {
       break L4;
      }
      $74 = $1;
      __set_error_pos($74,0,0,0);
      break L4;
     }
     }
     $75 = HEAPU8[$arg>>0]|(HEAPU8[$arg+1>>0]<<8)|(HEAPU8[$arg+2>>0]<<16)|(HEAPU8[$arg+3>>0]<<24);
     $76 = ($75|0)==(4);
     if ($76) {
      $77 = ((($arg)) + 4|0);
      HEAP8[tempDoublePtr>>0]=HEAP8[$77>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$77+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$77+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$77+3>>0];$78 = +HEAPF32[tempDoublePtr>>2];
      $79 = (~~(($78)));
      $80 = (+($79|0));
      $81 = ((($arg)) + 4|0);
      HEAP8[tempDoublePtr>>0]=HEAP8[$81>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$81+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$81+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$81+3>>0];$82 = +HEAPF32[tempDoublePtr>>2];
      $83 = $80 == $82;
      if ($83) {
       HEAP8[$arg>>0]=2&255;HEAP8[$arg+1>>0]=(2>>8)&255;HEAP8[$arg+2>>0]=(2>>16)&255;HEAP8[$arg+3>>0]=2>>24;
       $84 = ((($arg)) + 4|0);
       HEAP8[tempDoublePtr>>0]=HEAP8[$84>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$84+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$84+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$84+3>>0];$85 = +HEAPF32[tempDoublePtr>>2];
       $86 = (~~(($85)));
       $87 = ((($arg)) + 4|0);
       HEAP8[$87>>0]=$86&255;HEAP8[$87+1>>0]=($86>>8)&255;HEAP8[$87+2>>0]=($86>>16)&255;HEAP8[$87+3>>0]=$86>>24;
      }
     }
    }
   }
  }
 } while(0);
 $88 = $1;
 $89 = $2;
 ;HEAP32[$arg$byval_copy>>2]=HEAP32[$arg>>2]|0;HEAP32[$arg$byval_copy+4>>2]=HEAP32[$arg+4>>2]|0;
 $90 = (_mb_push_value($88,$89,$arg$byval_copy)|0);
 $__hr = $90;
 $91 = $__hr;
 $92 = ($91|0)!=(0);
 if ($92) {
  $93 = $__hr;
  $0 = $93;
  $95 = $0;
  STACKTOP = sp;return ($95|0);
 } else {
  $94 = $result;
  $0 = $94;
  $95 = $0;
  STACKTOP = sp;return ($95|0);
 }
 return (0)|0;
}
function __std_tan($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0.0;
 var $27 = 0.0, $28 = 0.0, $29 = 0.0, $3 = 0, $30 = 0, $31 = 0, $32 = 0.0, $33 = 0.0, $34 = 0.0, $35 = 0.0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0.0, $79 = 0, $8 = 0, $80 = 0.0;
 var $81 = 0, $82 = 0.0, $83 = 0, $84 = 0, $85 = 0.0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $__hr = 0, $arg = 0, $arg$byval_copy = 0, $or$cond = 0;
 var $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $arg$byval_copy = sp + 24|0;
 $arg = sp + 32|0;
 $1 = $s;
 $2 = $l;
 $result = 0;
 $3 = $1;
 $4 = ($3|0)!=(0|0);
 $5 = $2;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),17572,(14997|0));
  // unreachable;
 }
 $7 = ((($arg)) + 4|0);
 ;HEAP8[$7>>0]=0|0;HEAP8[$7+1>>0]=0|0;HEAP8[$7+2>>0]=0|0;HEAP8[$7+3>>0]=0|0;
 HEAP8[$arg>>0]=0&255;HEAP8[$arg+1>>0]=(0>>8)&255;HEAP8[$arg+2>>0]=(0>>16)&255;HEAP8[$arg+3>>0]=0>>24;
 $8 = $1;
 $9 = $2;
 $10 = (_mb_attempt_open_bracket($8,$9)|0);
 $result = $10;
 $11 = $result;
 $12 = ($11|0)!=(0);
 L4: do {
  if (!($12)) {
   $13 = $1;
   $14 = $2;
   $15 = (_mb_pop_value($13,$14,$arg)|0);
   $result = $15;
   $16 = $result;
   $17 = ($16|0)!=(0);
   if (!($17)) {
    $18 = $1;
    $19 = $2;
    $20 = (_mb_attempt_close_bracket($18,$19)|0);
    $result = $20;
    $21 = $result;
    $22 = ($21|0)!=(0);
    if (!($22)) {
     $23 = HEAPU8[$arg>>0]|(HEAPU8[$arg+1>>0]<<8)|(HEAPU8[$arg+2>>0]<<16)|(HEAPU8[$arg+3>>0]<<24);
     switch ($23|0) {
     case 2:  {
      $24 = ((($arg)) + 4|0);
      $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
      $26 = (+($25|0));
      $27 = $26;
      $28 = (+Math_tan((+$27)));
      $29 = $28;
      $30 = ((($arg)) + 4|0);
      HEAPF32[tempDoublePtr>>2]=$29;HEAP8[$30>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$30+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$30+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$30+3>>0]=HEAP8[tempDoublePtr+3>>0];
      HEAP8[$arg>>0]=4&255;HEAP8[$arg+1>>0]=(4>>8)&255;HEAP8[$arg+2>>0]=(4>>16)&255;HEAP8[$arg+3>>0]=4>>24;
      break;
     }
     case 4:  {
      $31 = ((($arg)) + 4|0);
      HEAP8[tempDoublePtr>>0]=HEAP8[$31>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$31+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$31+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$31+3>>0];$32 = +HEAPF32[tempDoublePtr>>2];
      $33 = $32;
      $34 = (+Math_tan((+$33)));
      $35 = $34;
      $36 = ((($arg)) + 4|0);
      HEAPF32[tempDoublePtr>>2]=$35;HEAP8[$36>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$36+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$36+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$36+3>>0]=HEAP8[tempDoublePtr+3>>0];
      break;
     }
     default: {
      $37 = $2;
      $38 = ($37|0)!=(0|0);
      if ($38) {
       $39 = $2;
       $40 = HEAP32[$39>>2]|0;
       $41 = ($40|0)!=(0|0);
       if ($41) {
        $42 = $2;
        $43 = HEAP32[$42>>2]|0;
        $44 = HEAPU8[$43>>0]|(HEAPU8[$43+1>>0]<<8)|(HEAPU8[$43+2>>0]<<16)|(HEAPU8[$43+3>>0]<<24);
        $45 = ($44|0)!=(0|0);
        if ($45) {
         $46 = $1;
         $47 = $1;
         $48 = ((($47)) + 67|0);
         $49 = HEAPU8[$48>>0]|(HEAPU8[$48+1>>0]<<8)|(HEAPU8[$48+2>>0]<<16)|(HEAPU8[$48+3>>0]<<24);
         $50 = (__set_current_error($46,17,$49)|0);
         $51 = ($50<<24>>24)!=(0);
         if (!($51)) {
          break L4;
         }
         $52 = $1;
         $53 = $2;
         $54 = HEAP32[$53>>2]|0;
         $55 = HEAPU8[$54>>0]|(HEAPU8[$54+1>>0]<<8)|(HEAPU8[$54+2>>0]<<16)|(HEAPU8[$54+3>>0]<<24);
         $56 = ((($55)) + 9|0);
         $57 = HEAPU8[$56>>0]|(HEAPU8[$56+1>>0]<<8)|(HEAPU8[$56+2>>0]<<16)|(HEAPU8[$56+3>>0]<<24);
         $58 = $2;
         $59 = HEAP32[$58>>2]|0;
         $60 = HEAPU8[$59>>0]|(HEAPU8[$59+1>>0]<<8)|(HEAPU8[$59+2>>0]<<16)|(HEAPU8[$59+3>>0]<<24);
         $61 = ((($60)) + 13|0);
         $62 = HEAPU8[$61>>0]|(HEAPU8[$61+1>>0]<<8);
         $63 = $2;
         $64 = HEAP32[$63>>2]|0;
         $65 = HEAPU8[$64>>0]|(HEAPU8[$64+1>>0]<<8)|(HEAPU8[$64+2>>0]<<16)|(HEAPU8[$64+3>>0]<<24);
         $66 = ((($65)) + 15|0);
         $67 = HEAPU8[$66>>0]|(HEAPU8[$66+1>>0]<<8);
         __set_error_pos($52,$57,$62,$67);
         break L4;
        }
       }
      }
      $68 = $1;
      $69 = $1;
      $70 = ((($69)) + 67|0);
      $71 = HEAPU8[$70>>0]|(HEAPU8[$70+1>>0]<<8)|(HEAPU8[$70+2>>0]<<16)|(HEAPU8[$70+3>>0]<<24);
      $72 = (__set_current_error($68,17,$71)|0);
      $73 = ($72<<24>>24)!=(0);
      if (!($73)) {
       break L4;
      }
      $74 = $1;
      __set_error_pos($74,0,0,0);
      break L4;
     }
     }
     $75 = HEAPU8[$arg>>0]|(HEAPU8[$arg+1>>0]<<8)|(HEAPU8[$arg+2>>0]<<16)|(HEAPU8[$arg+3>>0]<<24);
     $76 = ($75|0)==(4);
     if ($76) {
      $77 = ((($arg)) + 4|0);
      HEAP8[tempDoublePtr>>0]=HEAP8[$77>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$77+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$77+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$77+3>>0];$78 = +HEAPF32[tempDoublePtr>>2];
      $79 = (~~(($78)));
      $80 = (+($79|0));
      $81 = ((($arg)) + 4|0);
      HEAP8[tempDoublePtr>>0]=HEAP8[$81>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$81+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$81+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$81+3>>0];$82 = +HEAPF32[tempDoublePtr>>2];
      $83 = $80 == $82;
      if ($83) {
       HEAP8[$arg>>0]=2&255;HEAP8[$arg+1>>0]=(2>>8)&255;HEAP8[$arg+2>>0]=(2>>16)&255;HEAP8[$arg+3>>0]=2>>24;
       $84 = ((($arg)) + 4|0);
       HEAP8[tempDoublePtr>>0]=HEAP8[$84>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$84+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$84+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$84+3>>0];$85 = +HEAPF32[tempDoublePtr>>2];
       $86 = (~~(($85)));
       $87 = ((($arg)) + 4|0);
       HEAP8[$87>>0]=$86&255;HEAP8[$87+1>>0]=($86>>8)&255;HEAP8[$87+2>>0]=($86>>16)&255;HEAP8[$87+3>>0]=$86>>24;
      }
     }
    }
   }
  }
 } while(0);
 $88 = $1;
 $89 = $2;
 ;HEAP32[$arg$byval_copy>>2]=HEAP32[$arg>>2]|0;HEAP32[$arg$byval_copy+4>>2]=HEAP32[$arg+4>>2]|0;
 $90 = (_mb_push_value($88,$89,$arg$byval_copy)|0);
 $__hr = $90;
 $91 = $__hr;
 $92 = ($91|0)!=(0);
 if ($92) {
  $93 = $__hr;
  $0 = $93;
  $95 = $0;
  STACKTOP = sp;return ($95|0);
 } else {
  $94 = $result;
  $0 = $94;
  $95 = $0;
  STACKTOP = sp;return ($95|0);
 }
 return (0)|0;
}
function __std_asin($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0.0;
 var $27 = 0.0, $28 = 0.0, $29 = 0.0, $3 = 0, $30 = 0, $31 = 0, $32 = 0.0, $33 = 0.0, $34 = 0.0, $35 = 0.0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0.0, $79 = 0, $8 = 0, $80 = 0.0;
 var $81 = 0, $82 = 0.0, $83 = 0, $84 = 0, $85 = 0.0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $__hr = 0, $arg = 0, $arg$byval_copy = 0, $or$cond = 0;
 var $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $arg$byval_copy = sp + 24|0;
 $arg = sp + 32|0;
 $1 = $s;
 $2 = $l;
 $result = 0;
 $3 = $1;
 $4 = ($3|0)!=(0|0);
 $5 = $2;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),17595,(14987|0));
  // unreachable;
 }
 $7 = ((($arg)) + 4|0);
 ;HEAP8[$7>>0]=0|0;HEAP8[$7+1>>0]=0|0;HEAP8[$7+2>>0]=0|0;HEAP8[$7+3>>0]=0|0;
 HEAP8[$arg>>0]=0&255;HEAP8[$arg+1>>0]=(0>>8)&255;HEAP8[$arg+2>>0]=(0>>16)&255;HEAP8[$arg+3>>0]=0>>24;
 $8 = $1;
 $9 = $2;
 $10 = (_mb_attempt_open_bracket($8,$9)|0);
 $result = $10;
 $11 = $result;
 $12 = ($11|0)!=(0);
 L4: do {
  if (!($12)) {
   $13 = $1;
   $14 = $2;
   $15 = (_mb_pop_value($13,$14,$arg)|0);
   $result = $15;
   $16 = $result;
   $17 = ($16|0)!=(0);
   if (!($17)) {
    $18 = $1;
    $19 = $2;
    $20 = (_mb_attempt_close_bracket($18,$19)|0);
    $result = $20;
    $21 = $result;
    $22 = ($21|0)!=(0);
    if (!($22)) {
     $23 = HEAPU8[$arg>>0]|(HEAPU8[$arg+1>>0]<<8)|(HEAPU8[$arg+2>>0]<<16)|(HEAPU8[$arg+3>>0]<<24);
     switch ($23|0) {
     case 2:  {
      $24 = ((($arg)) + 4|0);
      $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
      $26 = (+($25|0));
      $27 = $26;
      $28 = (+Math_asin((+$27)));
      $29 = $28;
      $30 = ((($arg)) + 4|0);
      HEAPF32[tempDoublePtr>>2]=$29;HEAP8[$30>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$30+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$30+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$30+3>>0]=HEAP8[tempDoublePtr+3>>0];
      HEAP8[$arg>>0]=4&255;HEAP8[$arg+1>>0]=(4>>8)&255;HEAP8[$arg+2>>0]=(4>>16)&255;HEAP8[$arg+3>>0]=4>>24;
      break;
     }
     case 4:  {
      $31 = ((($arg)) + 4|0);
      HEAP8[tempDoublePtr>>0]=HEAP8[$31>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$31+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$31+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$31+3>>0];$32 = +HEAPF32[tempDoublePtr>>2];
      $33 = $32;
      $34 = (+Math_asin((+$33)));
      $35 = $34;
      $36 = ((($arg)) + 4|0);
      HEAPF32[tempDoublePtr>>2]=$35;HEAP8[$36>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$36+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$36+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$36+3>>0]=HEAP8[tempDoublePtr+3>>0];
      break;
     }
     default: {
      $37 = $2;
      $38 = ($37|0)!=(0|0);
      if ($38) {
       $39 = $2;
       $40 = HEAP32[$39>>2]|0;
       $41 = ($40|0)!=(0|0);
       if ($41) {
        $42 = $2;
        $43 = HEAP32[$42>>2]|0;
        $44 = HEAPU8[$43>>0]|(HEAPU8[$43+1>>0]<<8)|(HEAPU8[$43+2>>0]<<16)|(HEAPU8[$43+3>>0]<<24);
        $45 = ($44|0)!=(0|0);
        if ($45) {
         $46 = $1;
         $47 = $1;
         $48 = ((($47)) + 67|0);
         $49 = HEAPU8[$48>>0]|(HEAPU8[$48+1>>0]<<8)|(HEAPU8[$48+2>>0]<<16)|(HEAPU8[$48+3>>0]<<24);
         $50 = (__set_current_error($46,17,$49)|0);
         $51 = ($50<<24>>24)!=(0);
         if (!($51)) {
          break L4;
         }
         $52 = $1;
         $53 = $2;
         $54 = HEAP32[$53>>2]|0;
         $55 = HEAPU8[$54>>0]|(HEAPU8[$54+1>>0]<<8)|(HEAPU8[$54+2>>0]<<16)|(HEAPU8[$54+3>>0]<<24);
         $56 = ((($55)) + 9|0);
         $57 = HEAPU8[$56>>0]|(HEAPU8[$56+1>>0]<<8)|(HEAPU8[$56+2>>0]<<16)|(HEAPU8[$56+3>>0]<<24);
         $58 = $2;
         $59 = HEAP32[$58>>2]|0;
         $60 = HEAPU8[$59>>0]|(HEAPU8[$59+1>>0]<<8)|(HEAPU8[$59+2>>0]<<16)|(HEAPU8[$59+3>>0]<<24);
         $61 = ((($60)) + 13|0);
         $62 = HEAPU8[$61>>0]|(HEAPU8[$61+1>>0]<<8);
         $63 = $2;
         $64 = HEAP32[$63>>2]|0;
         $65 = HEAPU8[$64>>0]|(HEAPU8[$64+1>>0]<<8)|(HEAPU8[$64+2>>0]<<16)|(HEAPU8[$64+3>>0]<<24);
         $66 = ((($65)) + 15|0);
         $67 = HEAPU8[$66>>0]|(HEAPU8[$66+1>>0]<<8);
         __set_error_pos($52,$57,$62,$67);
         break L4;
        }
       }
      }
      $68 = $1;
      $69 = $1;
      $70 = ((($69)) + 67|0);
      $71 = HEAPU8[$70>>0]|(HEAPU8[$70+1>>0]<<8)|(HEAPU8[$70+2>>0]<<16)|(HEAPU8[$70+3>>0]<<24);
      $72 = (__set_current_error($68,17,$71)|0);
      $73 = ($72<<24>>24)!=(0);
      if (!($73)) {
       break L4;
      }
      $74 = $1;
      __set_error_pos($74,0,0,0);
      break L4;
     }
     }
     $75 = HEAPU8[$arg>>0]|(HEAPU8[$arg+1>>0]<<8)|(HEAPU8[$arg+2>>0]<<16)|(HEAPU8[$arg+3>>0]<<24);
     $76 = ($75|0)==(4);
     if ($76) {
      $77 = ((($arg)) + 4|0);
      HEAP8[tempDoublePtr>>0]=HEAP8[$77>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$77+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$77+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$77+3>>0];$78 = +HEAPF32[tempDoublePtr>>2];
      $79 = (~~(($78)));
      $80 = (+($79|0));
      $81 = ((($arg)) + 4|0);
      HEAP8[tempDoublePtr>>0]=HEAP8[$81>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$81+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$81+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$81+3>>0];$82 = +HEAPF32[tempDoublePtr>>2];
      $83 = $80 == $82;
      if ($83) {
       HEAP8[$arg>>0]=2&255;HEAP8[$arg+1>>0]=(2>>8)&255;HEAP8[$arg+2>>0]=(2>>16)&255;HEAP8[$arg+3>>0]=2>>24;
       $84 = ((($arg)) + 4|0);
       HEAP8[tempDoublePtr>>0]=HEAP8[$84>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$84+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$84+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$84+3>>0];$85 = +HEAPF32[tempDoublePtr>>2];
       $86 = (~~(($85)));
       $87 = ((($arg)) + 4|0);
       HEAP8[$87>>0]=$86&255;HEAP8[$87+1>>0]=($86>>8)&255;HEAP8[$87+2>>0]=($86>>16)&255;HEAP8[$87+3>>0]=$86>>24;
      }
     }
    }
   }
  }
 } while(0);
 $88 = $1;
 $89 = $2;
 ;HEAP32[$arg$byval_copy>>2]=HEAP32[$arg>>2]|0;HEAP32[$arg$byval_copy+4>>2]=HEAP32[$arg+4>>2]|0;
 $90 = (_mb_push_value($88,$89,$arg$byval_copy)|0);
 $__hr = $90;
 $91 = $__hr;
 $92 = ($91|0)!=(0);
 if ($92) {
  $93 = $__hr;
  $0 = $93;
  $95 = $0;
  STACKTOP = sp;return ($95|0);
 } else {
  $94 = $result;
  $0 = $94;
  $95 = $0;
  STACKTOP = sp;return ($95|0);
 }
 return (0)|0;
}
function __std_acos($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0.0;
 var $27 = 0.0, $28 = 0.0, $29 = 0.0, $3 = 0, $30 = 0, $31 = 0, $32 = 0.0, $33 = 0.0, $34 = 0.0, $35 = 0.0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0.0, $79 = 0, $8 = 0, $80 = 0.0;
 var $81 = 0, $82 = 0.0, $83 = 0, $84 = 0, $85 = 0.0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $__hr = 0, $arg = 0, $arg$byval_copy = 0, $or$cond = 0;
 var $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $arg$byval_copy = sp + 24|0;
 $arg = sp + 32|0;
 $1 = $s;
 $2 = $l;
 $result = 0;
 $3 = $1;
 $4 = ($3|0)!=(0|0);
 $5 = $2;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),17618,(14977|0));
  // unreachable;
 }
 $7 = ((($arg)) + 4|0);
 ;HEAP8[$7>>0]=0|0;HEAP8[$7+1>>0]=0|0;HEAP8[$7+2>>0]=0|0;HEAP8[$7+3>>0]=0|0;
 HEAP8[$arg>>0]=0&255;HEAP8[$arg+1>>0]=(0>>8)&255;HEAP8[$arg+2>>0]=(0>>16)&255;HEAP8[$arg+3>>0]=0>>24;
 $8 = $1;
 $9 = $2;
 $10 = (_mb_attempt_open_bracket($8,$9)|0);
 $result = $10;
 $11 = $result;
 $12 = ($11|0)!=(0);
 L4: do {
  if (!($12)) {
   $13 = $1;
   $14 = $2;
   $15 = (_mb_pop_value($13,$14,$arg)|0);
   $result = $15;
   $16 = $result;
   $17 = ($16|0)!=(0);
   if (!($17)) {
    $18 = $1;
    $19 = $2;
    $20 = (_mb_attempt_close_bracket($18,$19)|0);
    $result = $20;
    $21 = $result;
    $22 = ($21|0)!=(0);
    if (!($22)) {
     $23 = HEAPU8[$arg>>0]|(HEAPU8[$arg+1>>0]<<8)|(HEAPU8[$arg+2>>0]<<16)|(HEAPU8[$arg+3>>0]<<24);
     switch ($23|0) {
     case 2:  {
      $24 = ((($arg)) + 4|0);
      $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
      $26 = (+($25|0));
      $27 = $26;
      $28 = (+Math_acos((+$27)));
      $29 = $28;
      $30 = ((($arg)) + 4|0);
      HEAPF32[tempDoublePtr>>2]=$29;HEAP8[$30>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$30+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$30+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$30+3>>0]=HEAP8[tempDoublePtr+3>>0];
      HEAP8[$arg>>0]=4&255;HEAP8[$arg+1>>0]=(4>>8)&255;HEAP8[$arg+2>>0]=(4>>16)&255;HEAP8[$arg+3>>0]=4>>24;
      break;
     }
     case 4:  {
      $31 = ((($arg)) + 4|0);
      HEAP8[tempDoublePtr>>0]=HEAP8[$31>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$31+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$31+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$31+3>>0];$32 = +HEAPF32[tempDoublePtr>>2];
      $33 = $32;
      $34 = (+Math_acos((+$33)));
      $35 = $34;
      $36 = ((($arg)) + 4|0);
      HEAPF32[tempDoublePtr>>2]=$35;HEAP8[$36>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$36+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$36+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$36+3>>0]=HEAP8[tempDoublePtr+3>>0];
      break;
     }
     default: {
      $37 = $2;
      $38 = ($37|0)!=(0|0);
      if ($38) {
       $39 = $2;
       $40 = HEAP32[$39>>2]|0;
       $41 = ($40|0)!=(0|0);
       if ($41) {
        $42 = $2;
        $43 = HEAP32[$42>>2]|0;
        $44 = HEAPU8[$43>>0]|(HEAPU8[$43+1>>0]<<8)|(HEAPU8[$43+2>>0]<<16)|(HEAPU8[$43+3>>0]<<24);
        $45 = ($44|0)!=(0|0);
        if ($45) {
         $46 = $1;
         $47 = $1;
         $48 = ((($47)) + 67|0);
         $49 = HEAPU8[$48>>0]|(HEAPU8[$48+1>>0]<<8)|(HEAPU8[$48+2>>0]<<16)|(HEAPU8[$48+3>>0]<<24);
         $50 = (__set_current_error($46,17,$49)|0);
         $51 = ($50<<24>>24)!=(0);
         if (!($51)) {
          break L4;
         }
         $52 = $1;
         $53 = $2;
         $54 = HEAP32[$53>>2]|0;
         $55 = HEAPU8[$54>>0]|(HEAPU8[$54+1>>0]<<8)|(HEAPU8[$54+2>>0]<<16)|(HEAPU8[$54+3>>0]<<24);
         $56 = ((($55)) + 9|0);
         $57 = HEAPU8[$56>>0]|(HEAPU8[$56+1>>0]<<8)|(HEAPU8[$56+2>>0]<<16)|(HEAPU8[$56+3>>0]<<24);
         $58 = $2;
         $59 = HEAP32[$58>>2]|0;
         $60 = HEAPU8[$59>>0]|(HEAPU8[$59+1>>0]<<8)|(HEAPU8[$59+2>>0]<<16)|(HEAPU8[$59+3>>0]<<24);
         $61 = ((($60)) + 13|0);
         $62 = HEAPU8[$61>>0]|(HEAPU8[$61+1>>0]<<8);
         $63 = $2;
         $64 = HEAP32[$63>>2]|0;
         $65 = HEAPU8[$64>>0]|(HEAPU8[$64+1>>0]<<8)|(HEAPU8[$64+2>>0]<<16)|(HEAPU8[$64+3>>0]<<24);
         $66 = ((($65)) + 15|0);
         $67 = HEAPU8[$66>>0]|(HEAPU8[$66+1>>0]<<8);
         __set_error_pos($52,$57,$62,$67);
         break L4;
        }
       }
      }
      $68 = $1;
      $69 = $1;
      $70 = ((($69)) + 67|0);
      $71 = HEAPU8[$70>>0]|(HEAPU8[$70+1>>0]<<8)|(HEAPU8[$70+2>>0]<<16)|(HEAPU8[$70+3>>0]<<24);
      $72 = (__set_current_error($68,17,$71)|0);
      $73 = ($72<<24>>24)!=(0);
      if (!($73)) {
       break L4;
      }
      $74 = $1;
      __set_error_pos($74,0,0,0);
      break L4;
     }
     }
     $75 = HEAPU8[$arg>>0]|(HEAPU8[$arg+1>>0]<<8)|(HEAPU8[$arg+2>>0]<<16)|(HEAPU8[$arg+3>>0]<<24);
     $76 = ($75|0)==(4);
     if ($76) {
      $77 = ((($arg)) + 4|0);
      HEAP8[tempDoublePtr>>0]=HEAP8[$77>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$77+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$77+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$77+3>>0];$78 = +HEAPF32[tempDoublePtr>>2];
      $79 = (~~(($78)));
      $80 = (+($79|0));
      $81 = ((($arg)) + 4|0);
      HEAP8[tempDoublePtr>>0]=HEAP8[$81>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$81+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$81+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$81+3>>0];$82 = +HEAPF32[tempDoublePtr>>2];
      $83 = $80 == $82;
      if ($83) {
       HEAP8[$arg>>0]=2&255;HEAP8[$arg+1>>0]=(2>>8)&255;HEAP8[$arg+2>>0]=(2>>16)&255;HEAP8[$arg+3>>0]=2>>24;
       $84 = ((($arg)) + 4|0);
       HEAP8[tempDoublePtr>>0]=HEAP8[$84>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$84+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$84+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$84+3>>0];$85 = +HEAPF32[tempDoublePtr>>2];
       $86 = (~~(($85)));
       $87 = ((($arg)) + 4|0);
       HEAP8[$87>>0]=$86&255;HEAP8[$87+1>>0]=($86>>8)&255;HEAP8[$87+2>>0]=($86>>16)&255;HEAP8[$87+3>>0]=$86>>24;
      }
     }
    }
   }
  }
 } while(0);
 $88 = $1;
 $89 = $2;
 ;HEAP32[$arg$byval_copy>>2]=HEAP32[$arg>>2]|0;HEAP32[$arg$byval_copy+4>>2]=HEAP32[$arg+4>>2]|0;
 $90 = (_mb_push_value($88,$89,$arg$byval_copy)|0);
 $__hr = $90;
 $91 = $__hr;
 $92 = ($91|0)!=(0);
 if ($92) {
  $93 = $__hr;
  $0 = $93;
  $95 = $0;
  STACKTOP = sp;return ($95|0);
 } else {
  $94 = $result;
  $0 = $94;
  $95 = $0;
  STACKTOP = sp;return ($95|0);
 }
 return (0)|0;
}
function __std_atan($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0.0;
 var $27 = 0.0, $28 = 0.0, $29 = 0.0, $3 = 0, $30 = 0, $31 = 0, $32 = 0.0, $33 = 0.0, $34 = 0.0, $35 = 0.0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0.0, $79 = 0, $8 = 0, $80 = 0.0;
 var $81 = 0, $82 = 0.0, $83 = 0, $84 = 0, $85 = 0.0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $__hr = 0, $arg = 0, $arg$byval_copy = 0, $or$cond = 0;
 var $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $arg$byval_copy = sp + 24|0;
 $arg = sp + 32|0;
 $1 = $s;
 $2 = $l;
 $result = 0;
 $3 = $1;
 $4 = ($3|0)!=(0|0);
 $5 = $2;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),17641,(14967|0));
  // unreachable;
 }
 $7 = ((($arg)) + 4|0);
 ;HEAP8[$7>>0]=0|0;HEAP8[$7+1>>0]=0|0;HEAP8[$7+2>>0]=0|0;HEAP8[$7+3>>0]=0|0;
 HEAP8[$arg>>0]=0&255;HEAP8[$arg+1>>0]=(0>>8)&255;HEAP8[$arg+2>>0]=(0>>16)&255;HEAP8[$arg+3>>0]=0>>24;
 $8 = $1;
 $9 = $2;
 $10 = (_mb_attempt_open_bracket($8,$9)|0);
 $result = $10;
 $11 = $result;
 $12 = ($11|0)!=(0);
 L4: do {
  if (!($12)) {
   $13 = $1;
   $14 = $2;
   $15 = (_mb_pop_value($13,$14,$arg)|0);
   $result = $15;
   $16 = $result;
   $17 = ($16|0)!=(0);
   if (!($17)) {
    $18 = $1;
    $19 = $2;
    $20 = (_mb_attempt_close_bracket($18,$19)|0);
    $result = $20;
    $21 = $result;
    $22 = ($21|0)!=(0);
    if (!($22)) {
     $23 = HEAPU8[$arg>>0]|(HEAPU8[$arg+1>>0]<<8)|(HEAPU8[$arg+2>>0]<<16)|(HEAPU8[$arg+3>>0]<<24);
     switch ($23|0) {
     case 2:  {
      $24 = ((($arg)) + 4|0);
      $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
      $26 = (+($25|0));
      $27 = $26;
      $28 = (+Math_atan((+$27)));
      $29 = $28;
      $30 = ((($arg)) + 4|0);
      HEAPF32[tempDoublePtr>>2]=$29;HEAP8[$30>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$30+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$30+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$30+3>>0]=HEAP8[tempDoublePtr+3>>0];
      HEAP8[$arg>>0]=4&255;HEAP8[$arg+1>>0]=(4>>8)&255;HEAP8[$arg+2>>0]=(4>>16)&255;HEAP8[$arg+3>>0]=4>>24;
      break;
     }
     case 4:  {
      $31 = ((($arg)) + 4|0);
      HEAP8[tempDoublePtr>>0]=HEAP8[$31>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$31+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$31+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$31+3>>0];$32 = +HEAPF32[tempDoublePtr>>2];
      $33 = $32;
      $34 = (+Math_atan((+$33)));
      $35 = $34;
      $36 = ((($arg)) + 4|0);
      HEAPF32[tempDoublePtr>>2]=$35;HEAP8[$36>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$36+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$36+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$36+3>>0]=HEAP8[tempDoublePtr+3>>0];
      break;
     }
     default: {
      $37 = $2;
      $38 = ($37|0)!=(0|0);
      if ($38) {
       $39 = $2;
       $40 = HEAP32[$39>>2]|0;
       $41 = ($40|0)!=(0|0);
       if ($41) {
        $42 = $2;
        $43 = HEAP32[$42>>2]|0;
        $44 = HEAPU8[$43>>0]|(HEAPU8[$43+1>>0]<<8)|(HEAPU8[$43+2>>0]<<16)|(HEAPU8[$43+3>>0]<<24);
        $45 = ($44|0)!=(0|0);
        if ($45) {
         $46 = $1;
         $47 = $1;
         $48 = ((($47)) + 67|0);
         $49 = HEAPU8[$48>>0]|(HEAPU8[$48+1>>0]<<8)|(HEAPU8[$48+2>>0]<<16)|(HEAPU8[$48+3>>0]<<24);
         $50 = (__set_current_error($46,17,$49)|0);
         $51 = ($50<<24>>24)!=(0);
         if (!($51)) {
          break L4;
         }
         $52 = $1;
         $53 = $2;
         $54 = HEAP32[$53>>2]|0;
         $55 = HEAPU8[$54>>0]|(HEAPU8[$54+1>>0]<<8)|(HEAPU8[$54+2>>0]<<16)|(HEAPU8[$54+3>>0]<<24);
         $56 = ((($55)) + 9|0);
         $57 = HEAPU8[$56>>0]|(HEAPU8[$56+1>>0]<<8)|(HEAPU8[$56+2>>0]<<16)|(HEAPU8[$56+3>>0]<<24);
         $58 = $2;
         $59 = HEAP32[$58>>2]|0;
         $60 = HEAPU8[$59>>0]|(HEAPU8[$59+1>>0]<<8)|(HEAPU8[$59+2>>0]<<16)|(HEAPU8[$59+3>>0]<<24);
         $61 = ((($60)) + 13|0);
         $62 = HEAPU8[$61>>0]|(HEAPU8[$61+1>>0]<<8);
         $63 = $2;
         $64 = HEAP32[$63>>2]|0;
         $65 = HEAPU8[$64>>0]|(HEAPU8[$64+1>>0]<<8)|(HEAPU8[$64+2>>0]<<16)|(HEAPU8[$64+3>>0]<<24);
         $66 = ((($65)) + 15|0);
         $67 = HEAPU8[$66>>0]|(HEAPU8[$66+1>>0]<<8);
         __set_error_pos($52,$57,$62,$67);
         break L4;
        }
       }
      }
      $68 = $1;
      $69 = $1;
      $70 = ((($69)) + 67|0);
      $71 = HEAPU8[$70>>0]|(HEAPU8[$70+1>>0]<<8)|(HEAPU8[$70+2>>0]<<16)|(HEAPU8[$70+3>>0]<<24);
      $72 = (__set_current_error($68,17,$71)|0);
      $73 = ($72<<24>>24)!=(0);
      if (!($73)) {
       break L4;
      }
      $74 = $1;
      __set_error_pos($74,0,0,0);
      break L4;
     }
     }
     $75 = HEAPU8[$arg>>0]|(HEAPU8[$arg+1>>0]<<8)|(HEAPU8[$arg+2>>0]<<16)|(HEAPU8[$arg+3>>0]<<24);
     $76 = ($75|0)==(4);
     if ($76) {
      $77 = ((($arg)) + 4|0);
      HEAP8[tempDoublePtr>>0]=HEAP8[$77>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$77+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$77+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$77+3>>0];$78 = +HEAPF32[tempDoublePtr>>2];
      $79 = (~~(($78)));
      $80 = (+($79|0));
      $81 = ((($arg)) + 4|0);
      HEAP8[tempDoublePtr>>0]=HEAP8[$81>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$81+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$81+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$81+3>>0];$82 = +HEAPF32[tempDoublePtr>>2];
      $83 = $80 == $82;
      if ($83) {
       HEAP8[$arg>>0]=2&255;HEAP8[$arg+1>>0]=(2>>8)&255;HEAP8[$arg+2>>0]=(2>>16)&255;HEAP8[$arg+3>>0]=2>>24;
       $84 = ((($arg)) + 4|0);
       HEAP8[tempDoublePtr>>0]=HEAP8[$84>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$84+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$84+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$84+3>>0];$85 = +HEAPF32[tempDoublePtr>>2];
       $86 = (~~(($85)));
       $87 = ((($arg)) + 4|0);
       HEAP8[$87>>0]=$86&255;HEAP8[$87+1>>0]=($86>>8)&255;HEAP8[$87+2>>0]=($86>>16)&255;HEAP8[$87+3>>0]=$86>>24;
      }
     }
    }
   }
  }
 } while(0);
 $88 = $1;
 $89 = $2;
 ;HEAP32[$arg$byval_copy>>2]=HEAP32[$arg>>2]|0;HEAP32[$arg$byval_copy+4>>2]=HEAP32[$arg+4>>2]|0;
 $90 = (_mb_push_value($88,$89,$arg$byval_copy)|0);
 $__hr = $90;
 $91 = $__hr;
 $92 = ($91|0)!=(0);
 if ($92) {
  $93 = $__hr;
  $0 = $93;
  $95 = $0;
  STACKTOP = sp;return ($95|0);
 } else {
  $94 = $result;
  $0 = $94;
  $95 = $0;
  STACKTOP = sp;return ($95|0);
 }
 return (0)|0;
}
function __std_exp($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0.0;
 var $27 = 0.0, $28 = 0.0, $29 = 0.0, $3 = 0, $30 = 0, $31 = 0, $32 = 0.0, $33 = 0.0, $34 = 0.0, $35 = 0.0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0.0, $79 = 0, $8 = 0, $80 = 0.0;
 var $81 = 0, $82 = 0.0, $83 = 0, $84 = 0, $85 = 0.0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $__hr = 0, $arg = 0, $arg$byval_copy = 0, $or$cond = 0;
 var $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $arg$byval_copy = sp + 24|0;
 $arg = sp + 32|0;
 $1 = $s;
 $2 = $l;
 $result = 0;
 $3 = $1;
 $4 = ($3|0)!=(0|0);
 $5 = $2;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),17664,(14958|0));
  // unreachable;
 }
 $7 = ((($arg)) + 4|0);
 ;HEAP8[$7>>0]=0|0;HEAP8[$7+1>>0]=0|0;HEAP8[$7+2>>0]=0|0;HEAP8[$7+3>>0]=0|0;
 HEAP8[$arg>>0]=0&255;HEAP8[$arg+1>>0]=(0>>8)&255;HEAP8[$arg+2>>0]=(0>>16)&255;HEAP8[$arg+3>>0]=0>>24;
 $8 = $1;
 $9 = $2;
 $10 = (_mb_attempt_open_bracket($8,$9)|0);
 $result = $10;
 $11 = $result;
 $12 = ($11|0)!=(0);
 L4: do {
  if (!($12)) {
   $13 = $1;
   $14 = $2;
   $15 = (_mb_pop_value($13,$14,$arg)|0);
   $result = $15;
   $16 = $result;
   $17 = ($16|0)!=(0);
   if (!($17)) {
    $18 = $1;
    $19 = $2;
    $20 = (_mb_attempt_close_bracket($18,$19)|0);
    $result = $20;
    $21 = $result;
    $22 = ($21|0)!=(0);
    if (!($22)) {
     $23 = HEAPU8[$arg>>0]|(HEAPU8[$arg+1>>0]<<8)|(HEAPU8[$arg+2>>0]<<16)|(HEAPU8[$arg+3>>0]<<24);
     switch ($23|0) {
     case 2:  {
      $24 = ((($arg)) + 4|0);
      $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
      $26 = (+($25|0));
      $27 = $26;
      $28 = (+Math_exp((+$27)));
      $29 = $28;
      $30 = ((($arg)) + 4|0);
      HEAPF32[tempDoublePtr>>2]=$29;HEAP8[$30>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$30+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$30+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$30+3>>0]=HEAP8[tempDoublePtr+3>>0];
      HEAP8[$arg>>0]=4&255;HEAP8[$arg+1>>0]=(4>>8)&255;HEAP8[$arg+2>>0]=(4>>16)&255;HEAP8[$arg+3>>0]=4>>24;
      break;
     }
     case 4:  {
      $31 = ((($arg)) + 4|0);
      HEAP8[tempDoublePtr>>0]=HEAP8[$31>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$31+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$31+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$31+3>>0];$32 = +HEAPF32[tempDoublePtr>>2];
      $33 = $32;
      $34 = (+Math_exp((+$33)));
      $35 = $34;
      $36 = ((($arg)) + 4|0);
      HEAPF32[tempDoublePtr>>2]=$35;HEAP8[$36>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$36+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$36+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$36+3>>0]=HEAP8[tempDoublePtr+3>>0];
      break;
     }
     default: {
      $37 = $2;
      $38 = ($37|0)!=(0|0);
      if ($38) {
       $39 = $2;
       $40 = HEAP32[$39>>2]|0;
       $41 = ($40|0)!=(0|0);
       if ($41) {
        $42 = $2;
        $43 = HEAP32[$42>>2]|0;
        $44 = HEAPU8[$43>>0]|(HEAPU8[$43+1>>0]<<8)|(HEAPU8[$43+2>>0]<<16)|(HEAPU8[$43+3>>0]<<24);
        $45 = ($44|0)!=(0|0);
        if ($45) {
         $46 = $1;
         $47 = $1;
         $48 = ((($47)) + 67|0);
         $49 = HEAPU8[$48>>0]|(HEAPU8[$48+1>>0]<<8)|(HEAPU8[$48+2>>0]<<16)|(HEAPU8[$48+3>>0]<<24);
         $50 = (__set_current_error($46,17,$49)|0);
         $51 = ($50<<24>>24)!=(0);
         if (!($51)) {
          break L4;
         }
         $52 = $1;
         $53 = $2;
         $54 = HEAP32[$53>>2]|0;
         $55 = HEAPU8[$54>>0]|(HEAPU8[$54+1>>0]<<8)|(HEAPU8[$54+2>>0]<<16)|(HEAPU8[$54+3>>0]<<24);
         $56 = ((($55)) + 9|0);
         $57 = HEAPU8[$56>>0]|(HEAPU8[$56+1>>0]<<8)|(HEAPU8[$56+2>>0]<<16)|(HEAPU8[$56+3>>0]<<24);
         $58 = $2;
         $59 = HEAP32[$58>>2]|0;
         $60 = HEAPU8[$59>>0]|(HEAPU8[$59+1>>0]<<8)|(HEAPU8[$59+2>>0]<<16)|(HEAPU8[$59+3>>0]<<24);
         $61 = ((($60)) + 13|0);
         $62 = HEAPU8[$61>>0]|(HEAPU8[$61+1>>0]<<8);
         $63 = $2;
         $64 = HEAP32[$63>>2]|0;
         $65 = HEAPU8[$64>>0]|(HEAPU8[$64+1>>0]<<8)|(HEAPU8[$64+2>>0]<<16)|(HEAPU8[$64+3>>0]<<24);
         $66 = ((($65)) + 15|0);
         $67 = HEAPU8[$66>>0]|(HEAPU8[$66+1>>0]<<8);
         __set_error_pos($52,$57,$62,$67);
         break L4;
        }
       }
      }
      $68 = $1;
      $69 = $1;
      $70 = ((($69)) + 67|0);
      $71 = HEAPU8[$70>>0]|(HEAPU8[$70+1>>0]<<8)|(HEAPU8[$70+2>>0]<<16)|(HEAPU8[$70+3>>0]<<24);
      $72 = (__set_current_error($68,17,$71)|0);
      $73 = ($72<<24>>24)!=(0);
      if (!($73)) {
       break L4;
      }
      $74 = $1;
      __set_error_pos($74,0,0,0);
      break L4;
     }
     }
     $75 = HEAPU8[$arg>>0]|(HEAPU8[$arg+1>>0]<<8)|(HEAPU8[$arg+2>>0]<<16)|(HEAPU8[$arg+3>>0]<<24);
     $76 = ($75|0)==(4);
     if ($76) {
      $77 = ((($arg)) + 4|0);
      HEAP8[tempDoublePtr>>0]=HEAP8[$77>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$77+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$77+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$77+3>>0];$78 = +HEAPF32[tempDoublePtr>>2];
      $79 = (~~(($78)));
      $80 = (+($79|0));
      $81 = ((($arg)) + 4|0);
      HEAP8[tempDoublePtr>>0]=HEAP8[$81>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$81+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$81+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$81+3>>0];$82 = +HEAPF32[tempDoublePtr>>2];
      $83 = $80 == $82;
      if ($83) {
       HEAP8[$arg>>0]=2&255;HEAP8[$arg+1>>0]=(2>>8)&255;HEAP8[$arg+2>>0]=(2>>16)&255;HEAP8[$arg+3>>0]=2>>24;
       $84 = ((($arg)) + 4|0);
       HEAP8[tempDoublePtr>>0]=HEAP8[$84>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$84+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$84+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$84+3>>0];$85 = +HEAPF32[tempDoublePtr>>2];
       $86 = (~~(($85)));
       $87 = ((($arg)) + 4|0);
       HEAP8[$87>>0]=$86&255;HEAP8[$87+1>>0]=($86>>8)&255;HEAP8[$87+2>>0]=($86>>16)&255;HEAP8[$87+3>>0]=$86>>24;
      }
     }
    }
   }
  }
 } while(0);
 $88 = $1;
 $89 = $2;
 ;HEAP32[$arg$byval_copy>>2]=HEAP32[$arg>>2]|0;HEAP32[$arg$byval_copy+4>>2]=HEAP32[$arg+4>>2]|0;
 $90 = (_mb_push_value($88,$89,$arg$byval_copy)|0);
 $__hr = $90;
 $91 = $__hr;
 $92 = ($91|0)!=(0);
 if ($92) {
  $93 = $__hr;
  $0 = $93;
  $95 = $0;
  STACKTOP = sp;return ($95|0);
 } else {
  $94 = $result;
  $0 = $94;
  $95 = $0;
  STACKTOP = sp;return ($95|0);
 }
 return (0)|0;
}
function __std_log($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0.0;
 var $27 = 0.0, $28 = 0.0, $29 = 0.0, $3 = 0, $30 = 0, $31 = 0, $32 = 0.0, $33 = 0.0, $34 = 0.0, $35 = 0.0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0.0, $79 = 0, $8 = 0, $80 = 0.0;
 var $81 = 0, $82 = 0.0, $83 = 0, $84 = 0, $85 = 0.0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $__hr = 0, $arg = 0, $arg$byval_copy = 0, $or$cond = 0;
 var $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $arg$byval_copy = sp + 24|0;
 $arg = sp + 32|0;
 $1 = $s;
 $2 = $l;
 $result = 0;
 $3 = $1;
 $4 = ($3|0)!=(0|0);
 $5 = $2;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),17687,(14949|0));
  // unreachable;
 }
 $7 = ((($arg)) + 4|0);
 ;HEAP8[$7>>0]=0|0;HEAP8[$7+1>>0]=0|0;HEAP8[$7+2>>0]=0|0;HEAP8[$7+3>>0]=0|0;
 HEAP8[$arg>>0]=0&255;HEAP8[$arg+1>>0]=(0>>8)&255;HEAP8[$arg+2>>0]=(0>>16)&255;HEAP8[$arg+3>>0]=0>>24;
 $8 = $1;
 $9 = $2;
 $10 = (_mb_attempt_open_bracket($8,$9)|0);
 $result = $10;
 $11 = $result;
 $12 = ($11|0)!=(0);
 L4: do {
  if (!($12)) {
   $13 = $1;
   $14 = $2;
   $15 = (_mb_pop_value($13,$14,$arg)|0);
   $result = $15;
   $16 = $result;
   $17 = ($16|0)!=(0);
   if (!($17)) {
    $18 = $1;
    $19 = $2;
    $20 = (_mb_attempt_close_bracket($18,$19)|0);
    $result = $20;
    $21 = $result;
    $22 = ($21|0)!=(0);
    if (!($22)) {
     $23 = HEAPU8[$arg>>0]|(HEAPU8[$arg+1>>0]<<8)|(HEAPU8[$arg+2>>0]<<16)|(HEAPU8[$arg+3>>0]<<24);
     switch ($23|0) {
     case 2:  {
      $24 = ((($arg)) + 4|0);
      $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
      $26 = (+($25|0));
      $27 = $26;
      $28 = (+Math_log((+$27)));
      $29 = $28;
      $30 = ((($arg)) + 4|0);
      HEAPF32[tempDoublePtr>>2]=$29;HEAP8[$30>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$30+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$30+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$30+3>>0]=HEAP8[tempDoublePtr+3>>0];
      HEAP8[$arg>>0]=4&255;HEAP8[$arg+1>>0]=(4>>8)&255;HEAP8[$arg+2>>0]=(4>>16)&255;HEAP8[$arg+3>>0]=4>>24;
      break;
     }
     case 4:  {
      $31 = ((($arg)) + 4|0);
      HEAP8[tempDoublePtr>>0]=HEAP8[$31>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$31+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$31+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$31+3>>0];$32 = +HEAPF32[tempDoublePtr>>2];
      $33 = $32;
      $34 = (+Math_log((+$33)));
      $35 = $34;
      $36 = ((($arg)) + 4|0);
      HEAPF32[tempDoublePtr>>2]=$35;HEAP8[$36>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$36+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$36+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$36+3>>0]=HEAP8[tempDoublePtr+3>>0];
      break;
     }
     default: {
      $37 = $2;
      $38 = ($37|0)!=(0|0);
      if ($38) {
       $39 = $2;
       $40 = HEAP32[$39>>2]|0;
       $41 = ($40|0)!=(0|0);
       if ($41) {
        $42 = $2;
        $43 = HEAP32[$42>>2]|0;
        $44 = HEAPU8[$43>>0]|(HEAPU8[$43+1>>0]<<8)|(HEAPU8[$43+2>>0]<<16)|(HEAPU8[$43+3>>0]<<24);
        $45 = ($44|0)!=(0|0);
        if ($45) {
         $46 = $1;
         $47 = $1;
         $48 = ((($47)) + 67|0);
         $49 = HEAPU8[$48>>0]|(HEAPU8[$48+1>>0]<<8)|(HEAPU8[$48+2>>0]<<16)|(HEAPU8[$48+3>>0]<<24);
         $50 = (__set_current_error($46,17,$49)|0);
         $51 = ($50<<24>>24)!=(0);
         if (!($51)) {
          break L4;
         }
         $52 = $1;
         $53 = $2;
         $54 = HEAP32[$53>>2]|0;
         $55 = HEAPU8[$54>>0]|(HEAPU8[$54+1>>0]<<8)|(HEAPU8[$54+2>>0]<<16)|(HEAPU8[$54+3>>0]<<24);
         $56 = ((($55)) + 9|0);
         $57 = HEAPU8[$56>>0]|(HEAPU8[$56+1>>0]<<8)|(HEAPU8[$56+2>>0]<<16)|(HEAPU8[$56+3>>0]<<24);
         $58 = $2;
         $59 = HEAP32[$58>>2]|0;
         $60 = HEAPU8[$59>>0]|(HEAPU8[$59+1>>0]<<8)|(HEAPU8[$59+2>>0]<<16)|(HEAPU8[$59+3>>0]<<24);
         $61 = ((($60)) + 13|0);
         $62 = HEAPU8[$61>>0]|(HEAPU8[$61+1>>0]<<8);
         $63 = $2;
         $64 = HEAP32[$63>>2]|0;
         $65 = HEAPU8[$64>>0]|(HEAPU8[$64+1>>0]<<8)|(HEAPU8[$64+2>>0]<<16)|(HEAPU8[$64+3>>0]<<24);
         $66 = ((($65)) + 15|0);
         $67 = HEAPU8[$66>>0]|(HEAPU8[$66+1>>0]<<8);
         __set_error_pos($52,$57,$62,$67);
         break L4;
        }
       }
      }
      $68 = $1;
      $69 = $1;
      $70 = ((($69)) + 67|0);
      $71 = HEAPU8[$70>>0]|(HEAPU8[$70+1>>0]<<8)|(HEAPU8[$70+2>>0]<<16)|(HEAPU8[$70+3>>0]<<24);
      $72 = (__set_current_error($68,17,$71)|0);
      $73 = ($72<<24>>24)!=(0);
      if (!($73)) {
       break L4;
      }
      $74 = $1;
      __set_error_pos($74,0,0,0);
      break L4;
     }
     }
     $75 = HEAPU8[$arg>>0]|(HEAPU8[$arg+1>>0]<<8)|(HEAPU8[$arg+2>>0]<<16)|(HEAPU8[$arg+3>>0]<<24);
     $76 = ($75|0)==(4);
     if ($76) {
      $77 = ((($arg)) + 4|0);
      HEAP8[tempDoublePtr>>0]=HEAP8[$77>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$77+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$77+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$77+3>>0];$78 = +HEAPF32[tempDoublePtr>>2];
      $79 = (~~(($78)));
      $80 = (+($79|0));
      $81 = ((($arg)) + 4|0);
      HEAP8[tempDoublePtr>>0]=HEAP8[$81>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$81+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$81+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$81+3>>0];$82 = +HEAPF32[tempDoublePtr>>2];
      $83 = $80 == $82;
      if ($83) {
       HEAP8[$arg>>0]=2&255;HEAP8[$arg+1>>0]=(2>>8)&255;HEAP8[$arg+2>>0]=(2>>16)&255;HEAP8[$arg+3>>0]=2>>24;
       $84 = ((($arg)) + 4|0);
       HEAP8[tempDoublePtr>>0]=HEAP8[$84>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$84+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$84+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$84+3>>0];$85 = +HEAPF32[tempDoublePtr>>2];
       $86 = (~~(($85)));
       $87 = ((($arg)) + 4|0);
       HEAP8[$87>>0]=$86&255;HEAP8[$87+1>>0]=($86>>8)&255;HEAP8[$87+2>>0]=($86>>16)&255;HEAP8[$87+3>>0]=$86>>24;
      }
     }
    }
   }
  }
 } while(0);
 $88 = $1;
 $89 = $2;
 ;HEAP32[$arg$byval_copy>>2]=HEAP32[$arg>>2]|0;HEAP32[$arg$byval_copy+4>>2]=HEAP32[$arg+4>>2]|0;
 $90 = (_mb_push_value($88,$89,$arg$byval_copy)|0);
 $__hr = $90;
 $91 = $__hr;
 $92 = ($91|0)!=(0);
 if ($92) {
  $93 = $__hr;
  $0 = $93;
  $95 = $0;
  STACKTOP = sp;return ($95|0);
 } else {
  $94 = $result;
  $0 = $94;
  $95 = $0;
  STACKTOP = sp;return ($95|0);
 }
 return (0)|0;
}
function __std_asc($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $9 = 0, $__hr = 0, $__hr1 = 0, $__hr2 = 0, $__hr3 = 0, $arg = 0, $or$cond = 0, $result = 0, $sz = 0, $val = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $arg = sp + 24|0;
 $val = sp + 20|0;
 $1 = $s;
 $2 = $l;
 $result = 0;
 HEAP32[$arg>>2] = 0;
 HEAP32[$val>>2] = 0;
 $sz = 0;
 $3 = $1;
 $4 = ($3|0)!=(0|0);
 $5 = $2;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),17714,(14940|0));
  // unreachable;
 }
 $7 = $1;
 $8 = $2;
 $9 = (_mb_attempt_open_bracket($7,$8)|0);
 $__hr = $9;
 $10 = $__hr;
 $11 = ($10|0)!=(0);
 if ($11) {
  $12 = $__hr;
  $0 = $12;
  $81 = $0;
  STACKTOP = sp;return ($81|0);
 }
 $13 = $1;
 $14 = $2;
 $15 = (_mb_pop_string($13,$14,$arg)|0);
 $__hr1 = $15;
 $16 = $__hr1;
 $17 = ($16|0)!=(0);
 if ($17) {
  $18 = $__hr1;
  $0 = $18;
  $81 = $0;
  STACKTOP = sp;return ($81|0);
 }
 $19 = $1;
 $20 = $2;
 $21 = (_mb_attempt_close_bracket($19,$20)|0);
 $__hr2 = $21;
 $22 = $__hr2;
 $23 = ($22|0)!=(0);
 if ($23) {
  $24 = $__hr2;
  $0 = $24;
  $81 = $0;
  STACKTOP = sp;return ($81|0);
 }
 $25 = HEAP32[$arg>>2]|0;
 $26 = HEAP8[$25>>0]|0;
 $27 = $26 << 24 >> 24;
 $28 = ($27|0)==(0);
 do {
  if ($28) {
   $result = 3;
  } else {
   $29 = HEAP32[$arg>>2]|0;
   $30 = (_mb_uu_ischar($29)|0);
   $sz = $30;
   $31 = $sz;
   $32 = (4)<($31>>>0);
   if (!($32)) {
    $71 = HEAP32[$arg>>2]|0;
    $72 = $sz;
    _memcpy(($val|0),($71|0),($72|0))|0;
    $73 = $1;
    $74 = $2;
    $75 = HEAP32[$val>>2]|0;
    $76 = (_mb_push_int($73,$74,$75)|0);
    $__hr3 = $76;
    $77 = $__hr3;
    $78 = ($77|0)!=(0);
    if (!($78)) {
     break;
    }
    $79 = $__hr3;
    $0 = $79;
    $81 = $0;
    STACKTOP = sp;return ($81|0);
   }
   $sz = 4;
   $33 = $2;
   $34 = ($33|0)!=(0|0);
   if ($34) {
    $35 = $2;
    $36 = HEAP32[$35>>2]|0;
    $37 = ($36|0)!=(0|0);
    if ($37) {
     $38 = $2;
     $39 = HEAP32[$38>>2]|0;
     $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8)|(HEAPU8[$39+2>>0]<<16)|(HEAPU8[$39+3>>0]<<24);
     $41 = ($40|0)!=(0|0);
     if ($41) {
      $42 = $1;
      $43 = $1;
      $44 = ((($43)) + 67|0);
      $45 = HEAPU8[$44>>0]|(HEAPU8[$44+1>>0]<<8)|(HEAPU8[$44+2>>0]<<16)|(HEAPU8[$44+3>>0]<<24);
      $46 = (__set_current_error($42,13,$45)|0);
      $47 = ($46<<24>>24)!=(0);
      if (!($47)) {
       break;
      }
      $48 = $1;
      $49 = $2;
      $50 = HEAP32[$49>>2]|0;
      $51 = HEAPU8[$50>>0]|(HEAPU8[$50+1>>0]<<8)|(HEAPU8[$50+2>>0]<<16)|(HEAPU8[$50+3>>0]<<24);
      $52 = ((($51)) + 9|0);
      $53 = HEAPU8[$52>>0]|(HEAPU8[$52+1>>0]<<8)|(HEAPU8[$52+2>>0]<<16)|(HEAPU8[$52+3>>0]<<24);
      $54 = $2;
      $55 = HEAP32[$54>>2]|0;
      $56 = HEAPU8[$55>>0]|(HEAPU8[$55+1>>0]<<8)|(HEAPU8[$55+2>>0]<<16)|(HEAPU8[$55+3>>0]<<24);
      $57 = ((($56)) + 13|0);
      $58 = HEAPU8[$57>>0]|(HEAPU8[$57+1>>0]<<8);
      $59 = $2;
      $60 = HEAP32[$59>>2]|0;
      $61 = HEAPU8[$60>>0]|(HEAPU8[$60+1>>0]<<8)|(HEAPU8[$60+2>>0]<<16)|(HEAPU8[$60+3>>0]<<24);
      $62 = ((($61)) + 15|0);
      $63 = HEAPU8[$62>>0]|(HEAPU8[$62+1>>0]<<8);
      __set_error_pos($48,$53,$58,$63);
      break;
     }
    }
   }
   $64 = $1;
   $65 = $1;
   $66 = ((($65)) + 67|0);
   $67 = HEAPU8[$66>>0]|(HEAPU8[$66+1>>0]<<8)|(HEAPU8[$66+2>>0]<<16)|(HEAPU8[$66+3>>0]<<24);
   $68 = (__set_current_error($64,13,$67)|0);
   $69 = ($68<<24>>24)!=(0);
   if ($69) {
    $70 = $1;
    __set_error_pos($70,0,0,0);
   }
  }
 } while(0);
 $80 = $result;
 $0 = $80;
 $81 = $0;
 STACKTOP = sp;return ($81|0);
}
function __std_chr($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__hr = 0, $__hr1 = 0, $__hr2 = 0;
 var $__hr3 = 0, $arg = 0, $chr = 0, $or$cond = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $arg = sp + 20|0;
 $1 = $s;
 $2 = $l;
 $result = 0;
 HEAP32[$arg>>2] = 0;
 $chr = 0;
 $3 = $1;
 $4 = ($3|0)!=(0|0);
 $5 = $2;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),17749,(14931|0));
  // unreachable;
 }
 $7 = $1;
 $8 = $2;
 $9 = (_mb_attempt_open_bracket($7,$8)|0);
 $__hr = $9;
 $10 = $__hr;
 $11 = ($10|0)!=(0);
 if ($11) {
  $12 = $__hr;
  $0 = $12;
  $36 = $0;
  STACKTOP = sp;return ($36|0);
 }
 $13 = $1;
 $14 = $2;
 $15 = (_mb_pop_int($13,$14,$arg)|0);
 $__hr1 = $15;
 $16 = $__hr1;
 $17 = ($16|0)!=(0);
 if ($17) {
  $18 = $__hr1;
  $0 = $18;
  $36 = $0;
  STACKTOP = sp;return ($36|0);
 }
 $19 = $1;
 $20 = $2;
 $21 = (_mb_attempt_close_bracket($19,$20)|0);
 $__hr2 = $21;
 $22 = $__hr2;
 $23 = ($22|0)!=(0);
 if ($23) {
  $24 = $__hr2;
  $0 = $24;
  $36 = $0;
  STACKTOP = sp;return ($36|0);
 }
 $25 = (_mb_malloc(5)|0);
 $chr = $25;
 $26 = $chr;
 ;HEAP8[$26>>0]=0|0;HEAP8[$26+1>>0]=0|0;HEAP8[$26+2>>0]=0|0;HEAP8[$26+3>>0]=0|0;HEAP8[$26+4>>0]=0|0;
 $27 = $chr;
 ;HEAP8[$27>>0]=HEAP8[$arg>>0]|0;HEAP8[$27+1>>0]=HEAP8[$arg+1>>0]|0;HEAP8[$27+2>>0]=HEAP8[$arg+2>>0]|0;HEAP8[$27+3>>0]=HEAP8[$arg+3>>0]|0;
 $28 = $1;
 $29 = $2;
 $30 = $chr;
 $31 = (_mb_push_string($28,$29,$30)|0);
 $__hr3 = $31;
 $32 = $__hr3;
 $33 = ($32|0)!=(0);
 if ($33) {
  $34 = $__hr3;
  $0 = $34;
  $36 = $0;
  STACKTOP = sp;return ($36|0);
 } else {
  $35 = $result;
  $0 = $35;
  $36 = $0;
  STACKTOP = sp;return ($36|0);
 }
 return (0)|0;
}
function __std_left($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__hr = 0;
 var $__hr1 = 0, $__hr2 = 0, $__hr3 = 0, $__hr4 = 0, $arg = 0, $count = 0, $or$cond = 0, $result = 0, $sub = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $arg = sp + 28|0;
 $count = sp + 24|0;
 $sub = sp + 20|0;
 $1 = $s;
 $2 = $l;
 $result = 0;
 HEAP32[$arg>>2] = 0;
 HEAP32[$count>>2] = 0;
 HEAP32[$sub>>2] = 0;
 $3 = $1;
 $4 = ($3|0)!=(0|0);
 $5 = $2;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),17772,(14921|0));
  // unreachable;
 }
 $7 = $1;
 $8 = $2;
 $9 = (_mb_attempt_open_bracket($7,$8)|0);
 $__hr = $9;
 $10 = $__hr;
 $11 = ($10|0)!=(0);
 if ($11) {
  $12 = $__hr;
  $0 = $12;
  $158 = $0;
  STACKTOP = sp;return ($158|0);
 }
 $13 = $1;
 $14 = $2;
 $15 = (_mb_pop_string($13,$14,$arg)|0);
 $__hr1 = $15;
 $16 = $__hr1;
 $17 = ($16|0)!=(0);
 if ($17) {
  $18 = $__hr1;
  $0 = $18;
  $158 = $0;
  STACKTOP = sp;return ($158|0);
 }
 $19 = $1;
 $20 = $2;
 $21 = (_mb_pop_int($19,$20,$count)|0);
 $__hr2 = $21;
 $22 = $__hr2;
 $23 = ($22|0)!=(0);
 if ($23) {
  $24 = $__hr2;
  $0 = $24;
  $158 = $0;
  STACKTOP = sp;return ($158|0);
 }
 $25 = $1;
 $26 = $2;
 $27 = (_mb_attempt_close_bracket($25,$26)|0);
 $__hr3 = $27;
 $28 = $__hr3;
 $29 = ($28|0)!=(0);
 if ($29) {
  $30 = $__hr3;
  $0 = $30;
  $158 = $0;
  STACKTOP = sp;return ($158|0);
 }
 $31 = HEAP32[$count>>2]|0;
 $32 = ($31|0)<=(0);
 L20: do {
  if ($32) {
   $33 = $2;
   $34 = ($33|0)!=(0|0);
   if ($34) {
    $35 = $2;
    $36 = HEAP32[$35>>2]|0;
    $37 = ($36|0)!=(0|0);
    if ($37) {
     $38 = $2;
     $39 = HEAP32[$38>>2]|0;
     $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8)|(HEAPU8[$39+2>>0]<<16)|(HEAPU8[$39+3>>0]<<24);
     $41 = ($40|0)!=(0|0);
     if ($41) {
      $42 = $1;
      $43 = $1;
      $44 = ((($43)) + 67|0);
      $45 = HEAPU8[$44>>0]|(HEAPU8[$44+1>>0]<<8)|(HEAPU8[$44+2>>0]<<16)|(HEAPU8[$44+3>>0]<<24);
      $46 = (__set_current_error($42,20,$45)|0);
      $47 = ($46<<24>>24)!=(0);
      if (!($47)) {
       break;
      }
      $48 = $1;
      $49 = $2;
      $50 = HEAP32[$49>>2]|0;
      $51 = HEAPU8[$50>>0]|(HEAPU8[$50+1>>0]<<8)|(HEAPU8[$50+2>>0]<<16)|(HEAPU8[$50+3>>0]<<24);
      $52 = ((($51)) + 9|0);
      $53 = HEAPU8[$52>>0]|(HEAPU8[$52+1>>0]<<8)|(HEAPU8[$52+2>>0]<<16)|(HEAPU8[$52+3>>0]<<24);
      $54 = $2;
      $55 = HEAP32[$54>>2]|0;
      $56 = HEAPU8[$55>>0]|(HEAPU8[$55+1>>0]<<8)|(HEAPU8[$55+2>>0]<<16)|(HEAPU8[$55+3>>0]<<24);
      $57 = ((($56)) + 13|0);
      $58 = HEAPU8[$57>>0]|(HEAPU8[$57+1>>0]<<8);
      $59 = $2;
      $60 = HEAP32[$59>>2]|0;
      $61 = HEAPU8[$60>>0]|(HEAPU8[$60+1>>0]<<8)|(HEAPU8[$60+2>>0]<<16)|(HEAPU8[$60+3>>0]<<24);
      $62 = ((($61)) + 15|0);
      $63 = HEAPU8[$62>>0]|(HEAPU8[$62+1>>0]<<8);
      __set_error_pos($48,$53,$58,$63);
      $result = 3;
      break;
     }
    }
   }
   $64 = $1;
   $65 = $1;
   $66 = ((($65)) + 67|0);
   $67 = HEAPU8[$66>>0]|(HEAPU8[$66+1>>0]<<8)|(HEAPU8[$66+2>>0]<<16)|(HEAPU8[$66+3>>0]<<24);
   $68 = (__set_current_error($64,20,$67)|0);
   $69 = ($68<<24>>24)!=(0);
   if ($69) {
    $70 = $1;
    __set_error_pos($70,0,0,0);
    $result = 3;
   }
  } else {
   $71 = HEAP32[$arg>>2]|0;
   $72 = HEAP32[$count>>2]|0;
   $73 = (_mb_uu_substr($71,0,$72,$sub)|0);
   switch ($73|0) {
   case 0:  {
    $74 = $2;
    $75 = ($74|0)!=(0|0);
    if ($75) {
     $76 = $2;
     $77 = HEAP32[$76>>2]|0;
     $78 = ($77|0)!=(0|0);
     if ($78) {
      $79 = $2;
      $80 = HEAP32[$79>>2]|0;
      $81 = HEAPU8[$80>>0]|(HEAPU8[$80+1>>0]<<8)|(HEAPU8[$80+2>>0]<<16)|(HEAPU8[$80+3>>0]<<24);
      $82 = ($81|0)!=(0|0);
      if ($82) {
       $83 = $1;
       $84 = $1;
       $85 = ((($84)) + 67|0);
       $86 = HEAPU8[$85>>0]|(HEAPU8[$85+1>>0]<<8)|(HEAPU8[$85+2>>0]<<16)|(HEAPU8[$85+3>>0]<<24);
       $87 = (__set_current_error($83,15,$86)|0);
       $88 = ($87<<24>>24)!=(0);
       if (!($88)) {
        break L20;
       }
       $89 = $1;
       $90 = $2;
       $91 = HEAP32[$90>>2]|0;
       $92 = HEAPU8[$91>>0]|(HEAPU8[$91+1>>0]<<8)|(HEAPU8[$91+2>>0]<<16)|(HEAPU8[$91+3>>0]<<24);
       $93 = ((($92)) + 9|0);
       $94 = HEAPU8[$93>>0]|(HEAPU8[$93+1>>0]<<8)|(HEAPU8[$93+2>>0]<<16)|(HEAPU8[$93+3>>0]<<24);
       $95 = $2;
       $96 = HEAP32[$95>>2]|0;
       $97 = HEAPU8[$96>>0]|(HEAPU8[$96+1>>0]<<8)|(HEAPU8[$96+2>>0]<<16)|(HEAPU8[$96+3>>0]<<24);
       $98 = ((($97)) + 13|0);
       $99 = HEAPU8[$98>>0]|(HEAPU8[$98+1>>0]<<8);
       $100 = $2;
       $101 = HEAP32[$100>>2]|0;
       $102 = HEAPU8[$101>>0]|(HEAPU8[$101+1>>0]<<8)|(HEAPU8[$101+2>>0]<<16)|(HEAPU8[$101+3>>0]<<24);
       $103 = ((($102)) + 15|0);
       $104 = HEAPU8[$103>>0]|(HEAPU8[$103+1>>0]<<8);
       __set_error_pos($89,$94,$99,$104);
       $result = 3;
       break L20;
      }
     }
    }
    $105 = $1;
    $106 = $1;
    $107 = ((($106)) + 67|0);
    $108 = HEAPU8[$107>>0]|(HEAPU8[$107+1>>0]<<8)|(HEAPU8[$107+2>>0]<<16)|(HEAPU8[$107+3>>0]<<24);
    $109 = (__set_current_error($105,15,$108)|0);
    $110 = ($109<<24>>24)!=(0);
    if (!($110)) {
     break L20;
    }
    $111 = $1;
    __set_error_pos($111,0,0,0);
    $result = 3;
    break L20;
    break;
   }
   case -1:  {
    $112 = $2;
    $113 = ($112|0)!=(0|0);
    if ($113) {
     $114 = $2;
     $115 = HEAP32[$114>>2]|0;
     $116 = ($115|0)!=(0|0);
     if ($116) {
      $117 = $2;
      $118 = HEAP32[$117>>2]|0;
      $119 = HEAPU8[$118>>0]|(HEAPU8[$118+1>>0]<<8)|(HEAPU8[$118+2>>0]<<16)|(HEAPU8[$118+3>>0]<<24);
      $120 = ($119|0)!=(0|0);
      if ($120) {
       $121 = $1;
       $122 = $1;
       $123 = ((($122)) + 67|0);
       $124 = HEAPU8[$123>>0]|(HEAPU8[$123+1>>0]<<8)|(HEAPU8[$123+2>>0]<<16)|(HEAPU8[$123+3>>0]<<24);
       $125 = (__set_current_error($121,20,$124)|0);
       $126 = ($125<<24>>24)!=(0);
       if (!($126)) {
        break L20;
       }
       $127 = $1;
       $128 = $2;
       $129 = HEAP32[$128>>2]|0;
       $130 = HEAPU8[$129>>0]|(HEAPU8[$129+1>>0]<<8)|(HEAPU8[$129+2>>0]<<16)|(HEAPU8[$129+3>>0]<<24);
       $131 = ((($130)) + 9|0);
       $132 = HEAPU8[$131>>0]|(HEAPU8[$131+1>>0]<<8)|(HEAPU8[$131+2>>0]<<16)|(HEAPU8[$131+3>>0]<<24);
       $133 = $2;
       $134 = HEAP32[$133>>2]|0;
       $135 = HEAPU8[$134>>0]|(HEAPU8[$134+1>>0]<<8)|(HEAPU8[$134+2>>0]<<16)|(HEAPU8[$134+3>>0]<<24);
       $136 = ((($135)) + 13|0);
       $137 = HEAPU8[$136>>0]|(HEAPU8[$136+1>>0]<<8);
       $138 = $2;
       $139 = HEAP32[$138>>2]|0;
       $140 = HEAPU8[$139>>0]|(HEAPU8[$139+1>>0]<<8)|(HEAPU8[$139+2>>0]<<16)|(HEAPU8[$139+3>>0]<<24);
       $141 = ((($140)) + 15|0);
       $142 = HEAPU8[$141>>0]|(HEAPU8[$141+1>>0]<<8);
       __set_error_pos($127,$132,$137,$142);
       $result = 3;
       break L20;
      }
     }
    }
    $143 = $1;
    $144 = $1;
    $145 = ((($144)) + 67|0);
    $146 = HEAPU8[$145>>0]|(HEAPU8[$145+1>>0]<<8)|(HEAPU8[$145+2>>0]<<16)|(HEAPU8[$145+3>>0]<<24);
    $147 = (__set_current_error($143,20,$146)|0);
    $148 = ($147<<24>>24)!=(0);
    if (!($148)) {
     break L20;
    }
    $149 = $1;
    __set_error_pos($149,0,0,0);
    $result = 3;
    break L20;
    break;
   }
   default: {
    $150 = $1;
    $151 = $2;
    $152 = HEAP32[$sub>>2]|0;
    $153 = (_mb_push_string($150,$151,$152)|0);
    $__hr4 = $153;
    $154 = $__hr4;
    $155 = ($154|0)!=(0);
    if (!($155)) {
     break L20;
    }
    $156 = $__hr4;
    $0 = $156;
    $158 = $0;
    STACKTOP = sp;return ($158|0);
   }
   }
  }
 } while(0);
 $157 = $result;
 $0 = $157;
 $158 = $0;
 STACKTOP = sp;return ($158|0);
}
function __std_mid($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__hr = 0, $__hr1 = 0, $__hr2 = 0, $__hr3 = 0, $__hr4 = 0, $__hr5 = 0, $arg = 0, $count = 0;
 var $or$cond = 0, $or$cond3 = 0, $result = 0, $start = 0, $sub = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $arg = sp + 36|0;
 $start = sp + 32|0;
 $count = sp + 28|0;
 $sub = sp + 24|0;
 $1 = $s;
 $2 = $l;
 $result = 0;
 HEAP32[$arg>>2] = 0;
 HEAP32[$start>>2] = 0;
 HEAP32[$count>>2] = 0;
 HEAP32[$sub>>2] = 0;
 $3 = $1;
 $4 = ($3|0)!=(0|0);
 $5 = $2;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),17815,(14912|0));
  // unreachable;
 }
 $7 = $1;
 $8 = $2;
 $9 = (_mb_attempt_open_bracket($7,$8)|0);
 $__hr = $9;
 $10 = $__hr;
 $11 = ($10|0)!=(0);
 if ($11) {
  $12 = $__hr;
  $0 = $12;
  $171 = $0;
  STACKTOP = sp;return ($171|0);
 }
 $13 = $1;
 $14 = $2;
 $15 = (_mb_pop_string($13,$14,$arg)|0);
 $__hr1 = $15;
 $16 = $__hr1;
 $17 = ($16|0)!=(0);
 if ($17) {
  $18 = $__hr1;
  $0 = $18;
  $171 = $0;
  STACKTOP = sp;return ($171|0);
 }
 $19 = $1;
 $20 = $2;
 $21 = (_mb_pop_int($19,$20,$start)|0);
 $__hr2 = $21;
 $22 = $__hr2;
 $23 = ($22|0)!=(0);
 if ($23) {
  $24 = $__hr2;
  $0 = $24;
  $171 = $0;
  STACKTOP = sp;return ($171|0);
 }
 $25 = $1;
 $26 = $2;
 $27 = (_mb_pop_int($25,$26,$count)|0);
 $__hr3 = $27;
 $28 = $__hr3;
 $29 = ($28|0)!=(0);
 if ($29) {
  $30 = $__hr3;
  $0 = $30;
  $171 = $0;
  STACKTOP = sp;return ($171|0);
 }
 $31 = $1;
 $32 = $2;
 $33 = (_mb_attempt_close_bracket($31,$32)|0);
 $__hr4 = $33;
 $34 = $__hr4;
 $35 = ($34|0)!=(0);
 if ($35) {
  $36 = $__hr4;
  $0 = $36;
  $171 = $0;
  STACKTOP = sp;return ($171|0);
 }
 $37 = HEAP32[$count>>2]|0;
 $38 = ($37|0)<=(0);
 $39 = HEAP32[$start>>2]|0;
 $40 = ($39|0)<(0);
 $or$cond3 = $38 | $40;
 L24: do {
  if ($or$cond3) {
   label = 15;
  } else {
   $41 = HEAP32[$start>>2]|0;
   $42 = HEAP32[$arg>>2]|0;
   $43 = (_strlen($42)|0);
   $44 = ($41|0)>=($43|0);
   if ($44) {
    label = 15;
   } else {
    $83 = HEAP32[$arg>>2]|0;
    $84 = HEAP32[$start>>2]|0;
    $85 = HEAP32[$count>>2]|0;
    $86 = (_mb_uu_substr($83,$84,$85,$sub)|0);
    switch ($86|0) {
    case 0:  {
     $87 = $2;
     $88 = ($87|0)!=(0|0);
     if ($88) {
      $89 = $2;
      $90 = HEAP32[$89>>2]|0;
      $91 = ($90|0)!=(0|0);
      if ($91) {
       $92 = $2;
       $93 = HEAP32[$92>>2]|0;
       $94 = HEAPU8[$93>>0]|(HEAPU8[$93+1>>0]<<8)|(HEAPU8[$93+2>>0]<<16)|(HEAPU8[$93+3>>0]<<24);
       $95 = ($94|0)!=(0|0);
       if ($95) {
        $96 = $1;
        $97 = $1;
        $98 = ((($97)) + 67|0);
        $99 = HEAPU8[$98>>0]|(HEAPU8[$98+1>>0]<<8)|(HEAPU8[$98+2>>0]<<16)|(HEAPU8[$98+3>>0]<<24);
        $100 = (__set_current_error($96,15,$99)|0);
        $101 = ($100<<24>>24)!=(0);
        if (!($101)) {
         break L24;
        }
        $102 = $1;
        $103 = $2;
        $104 = HEAP32[$103>>2]|0;
        $105 = HEAPU8[$104>>0]|(HEAPU8[$104+1>>0]<<8)|(HEAPU8[$104+2>>0]<<16)|(HEAPU8[$104+3>>0]<<24);
        $106 = ((($105)) + 9|0);
        $107 = HEAPU8[$106>>0]|(HEAPU8[$106+1>>0]<<8)|(HEAPU8[$106+2>>0]<<16)|(HEAPU8[$106+3>>0]<<24);
        $108 = $2;
        $109 = HEAP32[$108>>2]|0;
        $110 = HEAPU8[$109>>0]|(HEAPU8[$109+1>>0]<<8)|(HEAPU8[$109+2>>0]<<16)|(HEAPU8[$109+3>>0]<<24);
        $111 = ((($110)) + 13|0);
        $112 = HEAPU8[$111>>0]|(HEAPU8[$111+1>>0]<<8);
        $113 = $2;
        $114 = HEAP32[$113>>2]|0;
        $115 = HEAPU8[$114>>0]|(HEAPU8[$114+1>>0]<<8)|(HEAPU8[$114+2>>0]<<16)|(HEAPU8[$114+3>>0]<<24);
        $116 = ((($115)) + 15|0);
        $117 = HEAPU8[$116>>0]|(HEAPU8[$116+1>>0]<<8);
        __set_error_pos($102,$107,$112,$117);
        $result = 3;
        break L24;
       }
      }
     }
     $118 = $1;
     $119 = $1;
     $120 = ((($119)) + 67|0);
     $121 = HEAPU8[$120>>0]|(HEAPU8[$120+1>>0]<<8)|(HEAPU8[$120+2>>0]<<16)|(HEAPU8[$120+3>>0]<<24);
     $122 = (__set_current_error($118,15,$121)|0);
     $123 = ($122<<24>>24)!=(0);
     if (!($123)) {
      break L24;
     }
     $124 = $1;
     __set_error_pos($124,0,0,0);
     $result = 3;
     break L24;
     break;
    }
    case -1:  {
     $125 = $2;
     $126 = ($125|0)!=(0|0);
     if ($126) {
      $127 = $2;
      $128 = HEAP32[$127>>2]|0;
      $129 = ($128|0)!=(0|0);
      if ($129) {
       $130 = $2;
       $131 = HEAP32[$130>>2]|0;
       $132 = HEAPU8[$131>>0]|(HEAPU8[$131+1>>0]<<8)|(HEAPU8[$131+2>>0]<<16)|(HEAPU8[$131+3>>0]<<24);
       $133 = ($132|0)!=(0|0);
       if ($133) {
        $134 = $1;
        $135 = $1;
        $136 = ((($135)) + 67|0);
        $137 = HEAPU8[$136>>0]|(HEAPU8[$136+1>>0]<<8)|(HEAPU8[$136+2>>0]<<16)|(HEAPU8[$136+3>>0]<<24);
        $138 = (__set_current_error($134,20,$137)|0);
        $139 = ($138<<24>>24)!=(0);
        if (!($139)) {
         break L24;
        }
        $140 = $1;
        $141 = $2;
        $142 = HEAP32[$141>>2]|0;
        $143 = HEAPU8[$142>>0]|(HEAPU8[$142+1>>0]<<8)|(HEAPU8[$142+2>>0]<<16)|(HEAPU8[$142+3>>0]<<24);
        $144 = ((($143)) + 9|0);
        $145 = HEAPU8[$144>>0]|(HEAPU8[$144+1>>0]<<8)|(HEAPU8[$144+2>>0]<<16)|(HEAPU8[$144+3>>0]<<24);
        $146 = $2;
        $147 = HEAP32[$146>>2]|0;
        $148 = HEAPU8[$147>>0]|(HEAPU8[$147+1>>0]<<8)|(HEAPU8[$147+2>>0]<<16)|(HEAPU8[$147+3>>0]<<24);
        $149 = ((($148)) + 13|0);
        $150 = HEAPU8[$149>>0]|(HEAPU8[$149+1>>0]<<8);
        $151 = $2;
        $152 = HEAP32[$151>>2]|0;
        $153 = HEAPU8[$152>>0]|(HEAPU8[$152+1>>0]<<8)|(HEAPU8[$152+2>>0]<<16)|(HEAPU8[$152+3>>0]<<24);
        $154 = ((($153)) + 15|0);
        $155 = HEAPU8[$154>>0]|(HEAPU8[$154+1>>0]<<8);
        __set_error_pos($140,$145,$150,$155);
        $result = 3;
        break L24;
       }
      }
     }
     $156 = $1;
     $157 = $1;
     $158 = ((($157)) + 67|0);
     $159 = HEAPU8[$158>>0]|(HEAPU8[$158+1>>0]<<8)|(HEAPU8[$158+2>>0]<<16)|(HEAPU8[$158+3>>0]<<24);
     $160 = (__set_current_error($156,20,$159)|0);
     $161 = ($160<<24>>24)!=(0);
     if (!($161)) {
      break L24;
     }
     $162 = $1;
     __set_error_pos($162,0,0,0);
     $result = 3;
     break L24;
     break;
    }
    default: {
     $163 = $1;
     $164 = $2;
     $165 = HEAP32[$sub>>2]|0;
     $166 = (_mb_push_string($163,$164,$165)|0);
     $__hr5 = $166;
     $167 = $__hr5;
     $168 = ($167|0)!=(0);
     if (!($168)) {
      break L24;
     }
     $169 = $__hr5;
     $0 = $169;
     $171 = $0;
     STACKTOP = sp;return ($171|0);
    }
    }
   }
  }
 } while(0);
 do {
  if ((label|0) == 15) {
   $45 = $2;
   $46 = ($45|0)!=(0|0);
   if ($46) {
    $47 = $2;
    $48 = HEAP32[$47>>2]|0;
    $49 = ($48|0)!=(0|0);
    if ($49) {
     $50 = $2;
     $51 = HEAP32[$50>>2]|0;
     $52 = HEAPU8[$51>>0]|(HEAPU8[$51+1>>0]<<8)|(HEAPU8[$51+2>>0]<<16)|(HEAPU8[$51+3>>0]<<24);
     $53 = ($52|0)!=(0|0);
     if ($53) {
      $54 = $1;
      $55 = $1;
      $56 = ((($55)) + 67|0);
      $57 = HEAPU8[$56>>0]|(HEAPU8[$56+1>>0]<<8)|(HEAPU8[$56+2>>0]<<16)|(HEAPU8[$56+3>>0]<<24);
      $58 = (__set_current_error($54,20,$57)|0);
      $59 = ($58<<24>>24)!=(0);
      if (!($59)) {
       break;
      }
      $60 = $1;
      $61 = $2;
      $62 = HEAP32[$61>>2]|0;
      $63 = HEAPU8[$62>>0]|(HEAPU8[$62+1>>0]<<8)|(HEAPU8[$62+2>>0]<<16)|(HEAPU8[$62+3>>0]<<24);
      $64 = ((($63)) + 9|0);
      $65 = HEAPU8[$64>>0]|(HEAPU8[$64+1>>0]<<8)|(HEAPU8[$64+2>>0]<<16)|(HEAPU8[$64+3>>0]<<24);
      $66 = $2;
      $67 = HEAP32[$66>>2]|0;
      $68 = HEAPU8[$67>>0]|(HEAPU8[$67+1>>0]<<8)|(HEAPU8[$67+2>>0]<<16)|(HEAPU8[$67+3>>0]<<24);
      $69 = ((($68)) + 13|0);
      $70 = HEAPU8[$69>>0]|(HEAPU8[$69+1>>0]<<8);
      $71 = $2;
      $72 = HEAP32[$71>>2]|0;
      $73 = HEAPU8[$72>>0]|(HEAPU8[$72+1>>0]<<8)|(HEAPU8[$72+2>>0]<<16)|(HEAPU8[$72+3>>0]<<24);
      $74 = ((($73)) + 15|0);
      $75 = HEAPU8[$74>>0]|(HEAPU8[$74+1>>0]<<8);
      __set_error_pos($60,$65,$70,$75);
      $result = 3;
      break;
     }
    }
   }
   $76 = $1;
   $77 = $1;
   $78 = ((($77)) + 67|0);
   $79 = HEAPU8[$78>>0]|(HEAPU8[$78+1>>0]<<8)|(HEAPU8[$78+2>>0]<<16)|(HEAPU8[$78+3>>0]<<24);
   $80 = (__set_current_error($76,20,$79)|0);
   $81 = ($80<<24>>24)!=(0);
   if ($81) {
    $82 = $1;
    __set_error_pos($82,0,0,0);
    $result = 3;
   }
  }
 } while(0);
 $170 = $result;
 $0 = $170;
 $171 = $0;
 STACKTOP = sp;return ($171|0);
}
function __std_right($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $__hr = 0, $__hr1 = 0, $__hr2 = 0, $__hr3 = 0, $__hr4 = 0, $arg = 0, $count = 0, $or$cond = 0, $result = 0, $sub = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $arg = sp + 28|0;
 $count = sp + 24|0;
 $sub = sp + 20|0;
 $1 = $s;
 $2 = $l;
 $result = 0;
 HEAP32[$arg>>2] = 0;
 HEAP32[$count>>2] = 0;
 HEAP32[$sub>>2] = 0;
 $3 = $1;
 $4 = ($3|0)!=(0|0);
 $5 = $2;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),17858,(14901|0));
  // unreachable;
 }
 $7 = $1;
 $8 = $2;
 $9 = (_mb_attempt_open_bracket($7,$8)|0);
 $__hr = $9;
 $10 = $__hr;
 $11 = ($10|0)!=(0);
 if ($11) {
  $12 = $__hr;
  $0 = $12;
  $162 = $0;
  STACKTOP = sp;return ($162|0);
 }
 $13 = $1;
 $14 = $2;
 $15 = (_mb_pop_string($13,$14,$arg)|0);
 $__hr1 = $15;
 $16 = $__hr1;
 $17 = ($16|0)!=(0);
 if ($17) {
  $18 = $__hr1;
  $0 = $18;
  $162 = $0;
  STACKTOP = sp;return ($162|0);
 }
 $19 = $1;
 $20 = $2;
 $21 = (_mb_pop_int($19,$20,$count)|0);
 $__hr2 = $21;
 $22 = $__hr2;
 $23 = ($22|0)!=(0);
 if ($23) {
  $24 = $__hr2;
  $0 = $24;
  $162 = $0;
  STACKTOP = sp;return ($162|0);
 }
 $25 = $1;
 $26 = $2;
 $27 = (_mb_attempt_close_bracket($25,$26)|0);
 $__hr3 = $27;
 $28 = $__hr3;
 $29 = ($28|0)!=(0);
 if ($29) {
  $30 = $__hr3;
  $0 = $30;
  $162 = $0;
  STACKTOP = sp;return ($162|0);
 }
 $31 = HEAP32[$count>>2]|0;
 $32 = ($31|0)<=(0);
 L20: do {
  if ($32) {
   $33 = $2;
   $34 = ($33|0)!=(0|0);
   if ($34) {
    $35 = $2;
    $36 = HEAP32[$35>>2]|0;
    $37 = ($36|0)!=(0|0);
    if ($37) {
     $38 = $2;
     $39 = HEAP32[$38>>2]|0;
     $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8)|(HEAPU8[$39+2>>0]<<16)|(HEAPU8[$39+3>>0]<<24);
     $41 = ($40|0)!=(0|0);
     if ($41) {
      $42 = $1;
      $43 = $1;
      $44 = ((($43)) + 67|0);
      $45 = HEAPU8[$44>>0]|(HEAPU8[$44+1>>0]<<8)|(HEAPU8[$44+2>>0]<<16)|(HEAPU8[$44+3>>0]<<24);
      $46 = (__set_current_error($42,20,$45)|0);
      $47 = ($46<<24>>24)!=(0);
      if (!($47)) {
       break;
      }
      $48 = $1;
      $49 = $2;
      $50 = HEAP32[$49>>2]|0;
      $51 = HEAPU8[$50>>0]|(HEAPU8[$50+1>>0]<<8)|(HEAPU8[$50+2>>0]<<16)|(HEAPU8[$50+3>>0]<<24);
      $52 = ((($51)) + 9|0);
      $53 = HEAPU8[$52>>0]|(HEAPU8[$52+1>>0]<<8)|(HEAPU8[$52+2>>0]<<16)|(HEAPU8[$52+3>>0]<<24);
      $54 = $2;
      $55 = HEAP32[$54>>2]|0;
      $56 = HEAPU8[$55>>0]|(HEAPU8[$55+1>>0]<<8)|(HEAPU8[$55+2>>0]<<16)|(HEAPU8[$55+3>>0]<<24);
      $57 = ((($56)) + 13|0);
      $58 = HEAPU8[$57>>0]|(HEAPU8[$57+1>>0]<<8);
      $59 = $2;
      $60 = HEAP32[$59>>2]|0;
      $61 = HEAPU8[$60>>0]|(HEAPU8[$60+1>>0]<<8)|(HEAPU8[$60+2>>0]<<16)|(HEAPU8[$60+3>>0]<<24);
      $62 = ((($61)) + 15|0);
      $63 = HEAPU8[$62>>0]|(HEAPU8[$62+1>>0]<<8);
      __set_error_pos($48,$53,$58,$63);
      $result = 3;
      break;
     }
    }
   }
   $64 = $1;
   $65 = $1;
   $66 = ((($65)) + 67|0);
   $67 = HEAPU8[$66>>0]|(HEAPU8[$66+1>>0]<<8)|(HEAPU8[$66+2>>0]<<16)|(HEAPU8[$66+3>>0]<<24);
   $68 = (__set_current_error($64,20,$67)|0);
   $69 = ($68<<24>>24)!=(0);
   if ($69) {
    $70 = $1;
    __set_error_pos($70,0,0,0);
    $result = 3;
   }
  } else {
   $71 = HEAP32[$arg>>2]|0;
   $72 = HEAP32[$arg>>2]|0;
   $73 = (_mb_uu_strlen($72)|0);
   $74 = HEAP32[$count>>2]|0;
   $75 = (($73) - ($74))|0;
   $76 = HEAP32[$count>>2]|0;
   $77 = (_mb_uu_substr($71,$75,$76,$sub)|0);
   switch ($77|0) {
   case 0:  {
    $78 = $2;
    $79 = ($78|0)!=(0|0);
    if ($79) {
     $80 = $2;
     $81 = HEAP32[$80>>2]|0;
     $82 = ($81|0)!=(0|0);
     if ($82) {
      $83 = $2;
      $84 = HEAP32[$83>>2]|0;
      $85 = HEAPU8[$84>>0]|(HEAPU8[$84+1>>0]<<8)|(HEAPU8[$84+2>>0]<<16)|(HEAPU8[$84+3>>0]<<24);
      $86 = ($85|0)!=(0|0);
      if ($86) {
       $87 = $1;
       $88 = $1;
       $89 = ((($88)) + 67|0);
       $90 = HEAPU8[$89>>0]|(HEAPU8[$89+1>>0]<<8)|(HEAPU8[$89+2>>0]<<16)|(HEAPU8[$89+3>>0]<<24);
       $91 = (__set_current_error($87,15,$90)|0);
       $92 = ($91<<24>>24)!=(0);
       if (!($92)) {
        break L20;
       }
       $93 = $1;
       $94 = $2;
       $95 = HEAP32[$94>>2]|0;
       $96 = HEAPU8[$95>>0]|(HEAPU8[$95+1>>0]<<8)|(HEAPU8[$95+2>>0]<<16)|(HEAPU8[$95+3>>0]<<24);
       $97 = ((($96)) + 9|0);
       $98 = HEAPU8[$97>>0]|(HEAPU8[$97+1>>0]<<8)|(HEAPU8[$97+2>>0]<<16)|(HEAPU8[$97+3>>0]<<24);
       $99 = $2;
       $100 = HEAP32[$99>>2]|0;
       $101 = HEAPU8[$100>>0]|(HEAPU8[$100+1>>0]<<8)|(HEAPU8[$100+2>>0]<<16)|(HEAPU8[$100+3>>0]<<24);
       $102 = ((($101)) + 13|0);
       $103 = HEAPU8[$102>>0]|(HEAPU8[$102+1>>0]<<8);
       $104 = $2;
       $105 = HEAP32[$104>>2]|0;
       $106 = HEAPU8[$105>>0]|(HEAPU8[$105+1>>0]<<8)|(HEAPU8[$105+2>>0]<<16)|(HEAPU8[$105+3>>0]<<24);
       $107 = ((($106)) + 15|0);
       $108 = HEAPU8[$107>>0]|(HEAPU8[$107+1>>0]<<8);
       __set_error_pos($93,$98,$103,$108);
       $result = 3;
       break L20;
      }
     }
    }
    $109 = $1;
    $110 = $1;
    $111 = ((($110)) + 67|0);
    $112 = HEAPU8[$111>>0]|(HEAPU8[$111+1>>0]<<8)|(HEAPU8[$111+2>>0]<<16)|(HEAPU8[$111+3>>0]<<24);
    $113 = (__set_current_error($109,15,$112)|0);
    $114 = ($113<<24>>24)!=(0);
    if (!($114)) {
     break L20;
    }
    $115 = $1;
    __set_error_pos($115,0,0,0);
    $result = 3;
    break L20;
    break;
   }
   case -1:  {
    $116 = $2;
    $117 = ($116|0)!=(0|0);
    if ($117) {
     $118 = $2;
     $119 = HEAP32[$118>>2]|0;
     $120 = ($119|0)!=(0|0);
     if ($120) {
      $121 = $2;
      $122 = HEAP32[$121>>2]|0;
      $123 = HEAPU8[$122>>0]|(HEAPU8[$122+1>>0]<<8)|(HEAPU8[$122+2>>0]<<16)|(HEAPU8[$122+3>>0]<<24);
      $124 = ($123|0)!=(0|0);
      if ($124) {
       $125 = $1;
       $126 = $1;
       $127 = ((($126)) + 67|0);
       $128 = HEAPU8[$127>>0]|(HEAPU8[$127+1>>0]<<8)|(HEAPU8[$127+2>>0]<<16)|(HEAPU8[$127+3>>0]<<24);
       $129 = (__set_current_error($125,20,$128)|0);
       $130 = ($129<<24>>24)!=(0);
       if (!($130)) {
        break L20;
       }
       $131 = $1;
       $132 = $2;
       $133 = HEAP32[$132>>2]|0;
       $134 = HEAPU8[$133>>0]|(HEAPU8[$133+1>>0]<<8)|(HEAPU8[$133+2>>0]<<16)|(HEAPU8[$133+3>>0]<<24);
       $135 = ((($134)) + 9|0);
       $136 = HEAPU8[$135>>0]|(HEAPU8[$135+1>>0]<<8)|(HEAPU8[$135+2>>0]<<16)|(HEAPU8[$135+3>>0]<<24);
       $137 = $2;
       $138 = HEAP32[$137>>2]|0;
       $139 = HEAPU8[$138>>0]|(HEAPU8[$138+1>>0]<<8)|(HEAPU8[$138+2>>0]<<16)|(HEAPU8[$138+3>>0]<<24);
       $140 = ((($139)) + 13|0);
       $141 = HEAPU8[$140>>0]|(HEAPU8[$140+1>>0]<<8);
       $142 = $2;
       $143 = HEAP32[$142>>2]|0;
       $144 = HEAPU8[$143>>0]|(HEAPU8[$143+1>>0]<<8)|(HEAPU8[$143+2>>0]<<16)|(HEAPU8[$143+3>>0]<<24);
       $145 = ((($144)) + 15|0);
       $146 = HEAPU8[$145>>0]|(HEAPU8[$145+1>>0]<<8);
       __set_error_pos($131,$136,$141,$146);
       $result = 3;
       break L20;
      }
     }
    }
    $147 = $1;
    $148 = $1;
    $149 = ((($148)) + 67|0);
    $150 = HEAPU8[$149>>0]|(HEAPU8[$149+1>>0]<<8)|(HEAPU8[$149+2>>0]<<16)|(HEAPU8[$149+3>>0]<<24);
    $151 = (__set_current_error($147,20,$150)|0);
    $152 = ($151<<24>>24)!=(0);
    if (!($152)) {
     break L20;
    }
    $153 = $1;
    __set_error_pos($153,0,0,0);
    $result = 3;
    break L20;
    break;
   }
   default: {
    $154 = $1;
    $155 = $2;
    $156 = HEAP32[$sub>>2]|0;
    $157 = (_mb_push_string($154,$155,$156)|0);
    $__hr4 = $157;
    $158 = $__hr4;
    $159 = ($158|0)!=(0);
    if (!($159)) {
     break L20;
    }
    $160 = $__hr4;
    $0 = $160;
    $162 = $0;
    STACKTOP = sp;return ($162|0);
   }
   }
  }
 } while(0);
 $161 = $result;
 $0 = $161;
 $162 = $0;
 STACKTOP = sp;return ($162|0);
}
function __std_str($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0.0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__hr = 0, $__hr2 = 0, $__hr3 = 0, $__hr6 = 0;
 var $__hr7 = 0, $arg = 0, $buf = 0, $got_tostr = 0, $instance = 0, $lbuf = 0, $or$cond = 0, $result = 0, $ret = 0, $ret1 = 0, $ret5 = 0, $sp = 0, $sp4 = 0, $val_obj = 0, $vararg_buffer = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer = sp;
 $arg = sp + 128|0;
 $buf = sp + 88|0;
 $got_tostr = sp + 85|0;
 $val_obj = sp + 68|0;
 $1 = $s;
 $2 = $l;
 $result = 0;
 $lbuf = 32;
 $3 = $1;
 $4 = ($3|0)!=(0|0);
 $5 = $2;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),17900,(14851|0));
  // unreachable;
 }
 $7 = ((($arg)) + 4|0);
 ;HEAP8[$7>>0]=0|0;HEAP8[$7+1>>0]=0|0;HEAP8[$7+2>>0]=0|0;HEAP8[$7+3>>0]=0|0;
 HEAP8[$arg>>0]=0&255;HEAP8[$arg+1>>0]=(0>>8)&255;HEAP8[$arg+2>>0]=(0>>16)&255;HEAP8[$arg+3>>0]=0>>24;
 __init_dynamic_buffer($buf);
 $8 = $1;
 $9 = $2;
 $10 = (_mb_attempt_open_bracket($8,$9)|0);
 $result = $10;
 $11 = $result;
 $12 = ($11|0)!=(0);
 L4: do {
  if (!($12)) {
   $13 = $1;
   $14 = $2;
   $15 = (_mb_pop_value($13,$14,$arg)|0);
   $result = $15;
   $16 = $result;
   $17 = ($16|0)!=(0);
   if (!($17)) {
    $18 = $1;
    $19 = $2;
    $20 = (_mb_attempt_close_bracket($18,$19)|0);
    $result = $20;
    $21 = $result;
    $22 = ($21|0)!=(0);
    if (!($22)) {
     $23 = HEAPU8[$arg>>0]|(HEAPU8[$arg+1>>0]<<8)|(HEAPU8[$arg+2>>0]<<16)|(HEAPU8[$arg+3>>0]<<24);
     switch ($23|0) {
     case 2:  {
      $lbuf = 32;
      $24 = $lbuf;
      __resize_dynamic_buffer($buf,1,$24);
      $25 = ((($buf)) + 32|0);
      $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
      $27 = ((($arg)) + 4|0);
      $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
      HEAP32[$vararg_buffer>>2] = $28;
      $29 = (_sprintf($26,14602,$vararg_buffer)|0);
      $30 = $lbuf;
      $31 = ($29>>>0)>=($30>>>0);
      if ($31) {
       ___assert_fail((14860|0),(4322|0),17917,(14851|0));
       // unreachable;
      }
      break;
     }
     case 4:  {
      $lbuf = 318;
      $32 = $lbuf;
      __resize_dynamic_buffer($buf,1,$32);
      $33 = ((($arg)) + 4|0);
      HEAP8[tempDoublePtr>>0]=HEAP8[$33>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$33+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$33+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$33+3>>0];$34 = +HEAPF32[tempDoublePtr>>2];
      $35 = ((($buf)) + 32|0);
      $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
      $37 = $lbuf;
      __real_to_str_std($34,$36,$37);
      break;
     }
     case 8:  {
      $38 = ((($arg)) + 4|0);
      $39 = HEAPU8[$38>>0]|(HEAPU8[$38+1>>0]<<8)|(HEAPU8[$38+2>>0]<<16)|(HEAPU8[$38+3>>0]<<24);
      $40 = ((($arg)) + 4|0);
      $41 = HEAPU8[$40>>0]|(HEAPU8[$40+1>>0]<<8)|(HEAPU8[$40+2>>0]<<16)|(HEAPU8[$40+3>>0]<<24);
      $42 = (_strlen($41)|0);
      $43 = (($42) + 1)|0;
      $44 = (_mb_strdup($39,$43)|0);
      $ret = $44;
      $45 = $1;
      $46 = $2;
      $47 = $ret;
      $48 = (_mb_push_string($45,$46,$47)|0);
      $__hr = $48;
      $49 = $__hr;
      $50 = ($49|0)!=(0);
      if (!($50)) {
       break L4;
      }
      $51 = $__hr;
      $0 = $51;
      $115 = $0;
      STACKTOP = sp;return ($115|0);
      break;
     }
     case 16:  {
      $52 = ((($arg)) + 4|0);
      $53 = HEAPU8[$52>>0]|(HEAPU8[$52+1>>0]<<8)|(HEAPU8[$52+2>>0]<<16)|(HEAPU8[$52+3>>0]<<24);
      $54 = (_mb_get_type_string($53)|0);
      $sp = $54;
      $55 = $sp;
      $56 = $sp;
      $57 = (_strlen($56)|0);
      $58 = (($57) + 1)|0;
      $59 = (_mb_strdup($55,$58)|0);
      $ret1 = $59;
      $60 = $1;
      $61 = $2;
      $62 = $ret1;
      $63 = (_mb_push_string($60,$61,$62)|0);
      $__hr2 = $63;
      $64 = $__hr2;
      $65 = ($64|0)!=(0);
      if (!($65)) {
       break L4;
      }
      $66 = $__hr2;
      $0 = $66;
      $115 = $0;
      STACKTOP = sp;return ($115|0);
      break;
     }
     case 4096:  {
      HEAP8[$got_tostr>>0] = 0;
      $67 = ((($arg)) + 4|0);
      $68 = HEAPU8[$67>>0]|(HEAPU8[$67+1>>0]<<8)|(HEAPU8[$67+2>>0]<<16)|(HEAPU8[$67+3>>0]<<24);
      $instance = $68;
      dest=$val_obj; stop=dest+17|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
      HEAP8[$val_obj>>0]=0&255;HEAP8[$val_obj+1>>0]=(0>>8)&255;HEAP8[$val_obj+2>>0]=(0>>16)&255;HEAP8[$val_obj+3>>0]=0>>24;
      $69 = $1;
      $70 = $2;
      $71 = $instance;
      $72 = (__format_class_to_string($69,$70,$71,$val_obj,$got_tostr)|0);
      $result = $72;
      $73 = ($72|0)==(0);
      if (!($73)) {
       break L4;
      }
      $74 = HEAP8[$got_tostr>>0]|0;
      $75 = ($74<<24>>24)!=(0);
      if ($75) {
       $76 = $1;
       $77 = $2;
       $78 = ((($val_obj)) + 4|0);
       $79 = HEAPU8[$78>>0]|(HEAPU8[$78+1>>0]<<8)|(HEAPU8[$78+2>>0]<<16)|(HEAPU8[$78+3>>0]<<24);
       $80 = (_mb_push_string($76,$77,$79)|0);
       $__hr3 = $80;
       $81 = $__hr3;
       $82 = ($81|0)!=(0);
       if (!($82)) {
        break L4;
       }
       $83 = $__hr3;
       $0 = $83;
       $115 = $0;
       STACKTOP = sp;return ($115|0);
      } else {
       $84 = (__internal_type_to_public_type(16)|0);
       $85 = (_mb_get_type_string($84)|0);
       $sp4 = $85;
       $86 = $sp4;
       $87 = $sp4;
       $88 = (_strlen($87)|0);
       $89 = (($88) + 1)|0;
       $90 = (_mb_strdup($86,$89)|0);
       $ret5 = $90;
       $91 = $1;
       $92 = $2;
       $93 = $ret5;
       $94 = (_mb_push_string($91,$92,$93)|0);
       $__hr6 = $94;
       $95 = $__hr6;
       $96 = ($95|0)!=(0);
       if (!($96)) {
        break L4;
       }
       $97 = $__hr6;
       $0 = $97;
       $115 = $0;
       STACKTOP = sp;return ($115|0);
      }
      break;
     }
     default: {
      $result = 3;
      break L4;
     }
     }
     $98 = $1;
     $99 = $2;
     $100 = ((($buf)) + 32|0);
     $101 = HEAPU8[$100>>0]|(HEAPU8[$100+1>>0]<<8)|(HEAPU8[$100+2>>0]<<16)|(HEAPU8[$100+3>>0]<<24);
     $102 = ($101|0)!=($buf|0);
     $103 = ((($buf)) + 32|0);
     $104 = HEAPU8[$103>>0]|(HEAPU8[$103+1>>0]<<8)|(HEAPU8[$103+2>>0]<<16)|(HEAPU8[$103+3>>0]<<24);
     if ($102) {
      $108 = $104;
     } else {
      $105 = ((($buf)) + 36|0);
      $106 = HEAPU8[$105>>0]|(HEAPU8[$105+1>>0]<<8)|(HEAPU8[$105+2>>0]<<16)|(HEAPU8[$105+3>>0]<<24);
      $107 = (_mb_memdup($104,$106)|0);
      $108 = $107;
     }
     $109 = (_mb_push_string($98,$99,$108)|0);
     $__hr7 = $109;
     $110 = $__hr7;
     $111 = ($110|0)!=(0);
     if ($111) {
      $112 = $__hr7;
      $0 = $112;
      $115 = $0;
      STACKTOP = sp;return ($115|0);
     }
    }
   }
  }
 } while(0);
 $113 = $1;
 __assign_public_value($113,$arg,0,1);
 $114 = $result;
 $0 = $114;
 $115 = $0;
 STACKTOP = sp;return ($115|0);
}
function __std_val($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0.0, $98 = 0.0, $99 = 0, $__hr = 0, $__hr1 = 0, $__hr2 = 0, $__hr3 = 0, $__hr4 = 0, $__hr5 = 0, $__hr6 = 0, $arg = 0;
 var $ast = 0, $conv_suc = 0, $ocoi = 0, $or$cond = 0, $os = 0, $result = 0, $ret = 0, $ret$byval_copy = 0, $ret$byval_copy2 = 0, $ret$byval_copy3 = 0, $ret$byval_copy4 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ret$byval_copy4 = sp + 80|0;
 $ret$byval_copy3 = sp + 72|0;
 $ret$byval_copy2 = sp + 64|0;
 $ret$byval_copy = sp + 56|0;
 $conv_suc = sp + 36|0;
 $arg = sp + 120|0;
 $ocoi = sp + 96|0;
 $ret = sp + 88|0;
 $1 = $s;
 $2 = $l;
 $result = 0;
 HEAP32[$conv_suc>>2] = 0;
 $os = 0;
 $ast = 0;
 $3 = $1;
 $4 = ($3|0)!=(0|0);
 $5 = $2;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),17992,(14827|0));
  // unreachable;
 }
 $7 = ((($arg)) + 4|0);
 ;HEAP8[$7>>0]=0|0;HEAP8[$7+1>>0]=0|0;HEAP8[$7+2>>0]=0|0;HEAP8[$7+3>>0]=0|0;
 HEAP8[$arg>>0]=0&255;HEAP8[$arg+1>>0]=(0>>8)&255;HEAP8[$arg+2>>0]=(0>>16)&255;HEAP8[$arg+3>>0]=0>>24;
 $8 = ((($ret)) + 4|0);
 ;HEAP8[$8>>0]=0|0;HEAP8[$8+1>>0]=0|0;HEAP8[$8+2>>0]=0|0;HEAP8[$8+3>>0]=0|0;
 HEAP8[$ret>>0]=0&255;HEAP8[$ret+1>>0]=(0>>8)&255;HEAP8[$ret+2>>0]=(0>>16)&255;HEAP8[$ret+3>>0]=0>>24;
 $9 = $1;
 $10 = $2;
 $11 = (_mb_attempt_open_bracket($9,$10)|0);
 $__hr = $11;
 $12 = $__hr;
 $13 = ($12|0)!=(0);
 if ($13) {
  $14 = $__hr;
  $0 = $14;
  $271 = $0;
  STACKTOP = sp;return ($271|0);
 }
 $15 = $2;
 $16 = HEAP32[$15>>2]|0;
 $ast = $16;
 $17 = $ast;
 $18 = ($17|0)!=(0|0);
 do {
  if ($18) {
   $19 = $ast;
   $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8)|(HEAPU8[$19+2>>0]<<16)|(HEAPU8[$19+3>>0]<<24);
   $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
   $22 = ($21|0)==(8);
   if ($22) {
    $23 = $ast;
    $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
    $25 = ((($24)) + 4|0);
    $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
    $27 = ((($26)) + 4|0);
    $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
    $29 = ($28|0)==(97|0);
    if ($29) {
     $30 = $2;
     $31 = ($30|0)!=(0|0);
     if ($31) {
      $32 = $2;
      $33 = HEAP32[$32>>2]|0;
      $34 = ($33|0)!=(0|0);
      if ($34) {
       $35 = $2;
       $36 = HEAP32[$35>>2]|0;
       $37 = HEAPU8[$36>>0]|(HEAPU8[$36+1>>0]<<8)|(HEAPU8[$36+2>>0]<<16)|(HEAPU8[$36+3>>0]<<24);
       $38 = ($37|0)!=(0|0);
       if ($38) {
        $39 = $1;
        $40 = $1;
        $41 = ((($40)) + 67|0);
        $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
        $43 = (__set_current_error($39,63,$42)|0);
        $44 = ($43<<24>>24)!=(0);
        if (!($44)) {
         break;
        }
        $45 = $1;
        $46 = $2;
        $47 = HEAP32[$46>>2]|0;
        $48 = HEAPU8[$47>>0]|(HEAPU8[$47+1>>0]<<8)|(HEAPU8[$47+2>>0]<<16)|(HEAPU8[$47+3>>0]<<24);
        $49 = ((($48)) + 9|0);
        $50 = HEAPU8[$49>>0]|(HEAPU8[$49+1>>0]<<8)|(HEAPU8[$49+2>>0]<<16)|(HEAPU8[$49+3>>0]<<24);
        $51 = $2;
        $52 = HEAP32[$51>>2]|0;
        $53 = HEAPU8[$52>>0]|(HEAPU8[$52+1>>0]<<8)|(HEAPU8[$52+2>>0]<<16)|(HEAPU8[$52+3>>0]<<24);
        $54 = ((($53)) + 13|0);
        $55 = HEAPU8[$54>>0]|(HEAPU8[$54+1>>0]<<8);
        $56 = $2;
        $57 = HEAP32[$56>>2]|0;
        $58 = HEAPU8[$57>>0]|(HEAPU8[$57+1>>0]<<8)|(HEAPU8[$57+2>>0]<<16)|(HEAPU8[$57+3>>0]<<24);
        $59 = ((($58)) + 15|0);
        $60 = HEAPU8[$59>>0]|(HEAPU8[$59+1>>0]<<8);
        __set_error_pos($45,$50,$55,$60);
        $result = 3;
        break;
       }
      }
     }
     $61 = $1;
     $62 = $1;
     $63 = ((($62)) + 67|0);
     $64 = HEAPU8[$63>>0]|(HEAPU8[$63+1>>0]<<8)|(HEAPU8[$63+2>>0]<<16)|(HEAPU8[$63+3>>0]<<24);
     $65 = (__set_current_error($61,63,$64)|0);
     $66 = ($65<<24>>24)!=(0);
     if ($66) {
      $67 = $1;
      __set_error_pos($67,0,0,0);
      $result = 3;
     }
    } else {
     label = 15;
    }
   } else {
    label = 15;
   }
  } else {
   label = 15;
  }
 } while(0);
 L19: do {
  if ((label|0) == 15) {
   $68 = $1;
   $69 = $2;
   $70 = (_mb_pop_value($68,$69,$arg)|0);
   $__hr1 = $70;
   $71 = $__hr1;
   $72 = ($71|0)!=(0);
   if ($72) {
    $73 = $__hr1;
    $0 = $73;
    $271 = $0;
    STACKTOP = sp;return ($271|0);
   }
   $74 = $1;
   $75 = $2;
   $76 = (__try_overridden($74,$75,$arg,14513,128)|0);
   $os = $76;
   $77 = $os;
   $78 = $77 & 1;
   $79 = ($78|0)==(0);
   if (!($79)) {
    $255 = $os;
    $256 = $255 & 2;
    $257 = ($256|0)==(0);
    if (!($257)) {
     break;
    }
    $258 = $1;
    $259 = $2;
    ;HEAP32[$ret$byval_copy4>>2]=HEAP32[$ret>>2]|0;HEAP32[$ret$byval_copy4+4>>2]=HEAP32[$ret+4>>2]|0;
    $260 = (_mb_push_value($258,$259,$ret$byval_copy4)|0);
    $__hr5 = $260;
    $261 = $__hr5;
    $262 = ($261|0)!=(0);
    if (!($262)) {
     break;
    }
    $263 = $__hr5;
    $0 = $263;
    $271 = $0;
    STACKTOP = sp;return ($271|0);
   }
   $80 = HEAPU8[$arg>>0]|(HEAPU8[$arg+1>>0]<<8)|(HEAPU8[$arg+2>>0]<<16)|(HEAPU8[$arg+3>>0]<<24);
   switch ($80|0) {
   case 8:  {
    $81 = ((($arg)) + 4|0);
    $82 = HEAPU8[$81>>0]|(HEAPU8[$81+1>>0]<<8)|(HEAPU8[$81+2>>0]<<16)|(HEAPU8[$81+3>>0]<<24);
    $83 = (_strtol($82,$conv_suc,0)|0);
    $84 = ((($ret)) + 4|0);
    HEAP8[$84>>0]=$83&255;HEAP8[$84+1>>0]=($83>>8)&255;HEAP8[$84+2>>0]=($83>>16)&255;HEAP8[$84+3>>0]=$83>>24;
    $85 = HEAP32[$conv_suc>>2]|0;
    $86 = HEAP8[$85>>0]|0;
    $87 = $86 << 24 >> 24;
    $88 = ($87|0)==(0);
    if ($88) {
     HEAP8[$ret>>0]=2&255;HEAP8[$ret+1>>0]=(2>>8)&255;HEAP8[$ret+2>>0]=(2>>16)&255;HEAP8[$ret+3>>0]=2>>24;
     $89 = $1;
     $90 = $2;
     ;HEAP32[$ret$byval_copy>>2]=HEAP32[$ret>>2]|0;HEAP32[$ret$byval_copy+4>>2]=HEAP32[$ret+4>>2]|0;
     $91 = (_mb_push_value($89,$90,$ret$byval_copy)|0);
     $__hr2 = $91;
     $92 = $__hr2;
     $93 = ($92|0)!=(0);
     if (!($93)) {
      break L19;
     }
     $94 = $__hr2;
     $0 = $94;
     $271 = $0;
     STACKTOP = sp;return ($271|0);
    }
    $95 = ((($arg)) + 4|0);
    $96 = HEAPU8[$95>>0]|(HEAPU8[$95+1>>0]<<8)|(HEAPU8[$95+2>>0]<<16)|(HEAPU8[$95+3>>0]<<24);
    $97 = (+_strtod($96,$conv_suc));
    $98 = $97;
    $99 = ((($ret)) + 4|0);
    HEAPF32[tempDoublePtr>>2]=$98;HEAP8[$99>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$99+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$99+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$99+3>>0]=HEAP8[tempDoublePtr+3>>0];
    $100 = HEAP32[$conv_suc>>2]|0;
    $101 = HEAP8[$100>>0]|0;
    $102 = $101 << 24 >> 24;
    $103 = ($102|0)==(0);
    if (!($103)) {
     $result = 3;
     break L19;
    }
    HEAP8[$ret>>0]=4&255;HEAP8[$ret+1>>0]=(4>>8)&255;HEAP8[$ret+2>>0]=(4>>16)&255;HEAP8[$ret+3>>0]=4>>24;
    $104 = $1;
    $105 = $2;
    ;HEAP32[$ret$byval_copy2>>2]=HEAP32[$ret>>2]|0;HEAP32[$ret$byval_copy2+4>>2]=HEAP32[$ret+4>>2]|0;
    $106 = (_mb_push_value($104,$105,$ret$byval_copy2)|0);
    $__hr3 = $106;
    $107 = $__hr3;
    $108 = ($107|0)!=(0);
    if (!($108)) {
     break L19;
    }
    $109 = $__hr3;
    $0 = $109;
    $271 = $0;
    STACKTOP = sp;return ($271|0);
    break;
   }
   case 512:  {
    dest=$ocoi; stop=dest+17|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
    HEAP8[$ocoi>>0]=0&255;HEAP8[$ocoi+1>>0]=(0>>8)&255;HEAP8[$ocoi+2>>0]=(0>>16)&255;HEAP8[$ocoi+3>>0]=0>>24;
    (__public_value_to_internal_object($arg,$ocoi)|0);
    $110 = $2;
    $111 = ($110|0)!=(0|0);
    if ($111) {
     $112 = $2;
     $113 = HEAP32[$112>>2]|0;
     $114 = ($113|0)!=(0|0);
     if ($114) {
      $115 = $2;
      $116 = HEAP32[$115>>2]|0;
      $117 = HEAPU8[$116>>0]|(HEAPU8[$116+1>>0]<<8)|(HEAPU8[$116+2>>0]<<16)|(HEAPU8[$116+3>>0]<<24);
      $118 = ($117|0)!=(0|0);
      if ($118) {
       $119 = $1;
       $120 = $1;
       $121 = ((($120)) + 67|0);
       $122 = HEAPU8[$121>>0]|(HEAPU8[$121+1>>0]<<8)|(HEAPU8[$121+2>>0]<<16)|(HEAPU8[$121+3>>0]<<24);
       $123 = (__set_current_error($119,14,$122)|0);
       $124 = ($123<<24>>24)!=(0);
       if (!($124)) {
        break L19;
       }
       $125 = $1;
       $126 = $2;
       $127 = HEAP32[$126>>2]|0;
       $128 = HEAPU8[$127>>0]|(HEAPU8[$127+1>>0]<<8)|(HEAPU8[$127+2>>0]<<16)|(HEAPU8[$127+3>>0]<<24);
       $129 = ((($128)) + 9|0);
       $130 = HEAPU8[$129>>0]|(HEAPU8[$129+1>>0]<<8)|(HEAPU8[$129+2>>0]<<16)|(HEAPU8[$129+3>>0]<<24);
       $131 = $2;
       $132 = HEAP32[$131>>2]|0;
       $133 = HEAPU8[$132>>0]|(HEAPU8[$132+1>>0]<<8)|(HEAPU8[$132+2>>0]<<16)|(HEAPU8[$132+3>>0]<<24);
       $134 = ((($133)) + 13|0);
       $135 = HEAPU8[$134>>0]|(HEAPU8[$134+1>>0]<<8);
       $136 = $2;
       $137 = HEAP32[$136>>2]|0;
       $138 = HEAPU8[$137>>0]|(HEAPU8[$137+1>>0]<<8)|(HEAPU8[$137+2>>0]<<16)|(HEAPU8[$137+3>>0]<<24);
       $139 = ((($138)) + 15|0);
       $140 = HEAPU8[$139>>0]|(HEAPU8[$139+1>>0]<<8);
       __set_error_pos($125,$130,$135,$140);
       $result = 3;
       break L19;
      }
     }
    }
    $141 = $1;
    $142 = $1;
    $143 = ((($142)) + 67|0);
    $144 = HEAPU8[$143>>0]|(HEAPU8[$143+1>>0]<<8)|(HEAPU8[$143+2>>0]<<16)|(HEAPU8[$143+3>>0]<<24);
    $145 = (__set_current_error($141,14,$144)|0);
    $146 = ($145<<24>>24)!=(0);
    if (!($146)) {
     break L19;
    }
    $147 = $1;
    __set_error_pos($147,0,0,0);
    $result = 3;
    break L19;
    break;
   }
   case 2048:  {
    dest=$ocoi; stop=dest+17|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
    HEAP8[$ocoi>>0]=0&255;HEAP8[$ocoi+1>>0]=(0>>8)&255;HEAP8[$ocoi+2>>0]=(0>>16)&255;HEAP8[$ocoi+3>>0]=0>>24;
    (__public_value_to_internal_object($arg,$ocoi)|0);
    $148 = ((($ocoi)) + 4|0);
    $149 = HEAPU8[$148>>0]|(HEAPU8[$148+1>>0]<<8)|(HEAPU8[$148+2>>0]<<16)|(HEAPU8[$148+3>>0]<<24);
    $150 = ($149|0)!=(0|0);
    if ($150) {
     $151 = ((($ocoi)) + 4|0);
     $152 = HEAPU8[$151>>0]|(HEAPU8[$151+1>>0]<<8)|(HEAPU8[$151+2>>0]<<16)|(HEAPU8[$151+3>>0]<<24);
     $153 = ((($152)) + 26|0);
     $154 = HEAPU8[$153>>0]|(HEAPU8[$153+1>>0]<<8)|(HEAPU8[$153+2>>0]<<16)|(HEAPU8[$153+3>>0]<<24);
     $155 = ($154|0)!=(0|0);
     if ($155) {
      $156 = ((($ocoi)) + 4|0);
      $157 = HEAPU8[$156>>0]|(HEAPU8[$156+1>>0]<<8)|(HEAPU8[$156+2>>0]<<16)|(HEAPU8[$156+3>>0]<<24);
      $158 = ((($157)) + 26|0);
      $159 = HEAPU8[$158>>0]|(HEAPU8[$158+1>>0]<<8)|(HEAPU8[$158+2>>0]<<16)|(HEAPU8[$158+3>>0]<<24);
      $160 = ($159|0)!=((-1)|0);
      if ($160) {
       $161 = ((($ocoi)) + 4|0);
       $162 = HEAPU8[$161>>0]|(HEAPU8[$161+1>>0]<<8)|(HEAPU8[$161+2>>0]<<16)|(HEAPU8[$161+3>>0]<<24);
       $163 = ((($162)) + 26|0);
       $164 = HEAPU8[$163>>0]|(HEAPU8[$163+1>>0]<<8)|(HEAPU8[$163+2>>0]<<16)|(HEAPU8[$163+3>>0]<<24);
       $165 = HEAPU8[$164>>0]|(HEAPU8[$164+1>>0]<<8)|(HEAPU8[$164+2>>0]<<16)|(HEAPU8[$164+3>>0]<<24);
       $166 = ($165|0)!=(0|0);
       if ($166) {
        $167 = ((($ocoi)) + 4|0);
        $168 = HEAPU8[$167>>0]|(HEAPU8[$167+1>>0]<<8)|(HEAPU8[$167+2>>0]<<16)|(HEAPU8[$167+3>>0]<<24);
        $169 = ((($168)) + 26|0);
        $170 = HEAPU8[$169>>0]|(HEAPU8[$169+1>>0]<<8)|(HEAPU8[$169+2>>0]<<16)|(HEAPU8[$169+3>>0]<<24);
        $171 = HEAPU8[$170>>0]|(HEAPU8[$170+1>>0]<<8)|(HEAPU8[$170+2>>0]<<16)|(HEAPU8[$170+3>>0]<<24);
        (__internal_object_to_public_value($171,$ret)|0);
        $172 = $1;
        $173 = $2;
        ;HEAP32[$ret$byval_copy3>>2]=HEAP32[$ret>>2]|0;HEAP32[$ret$byval_copy3+4>>2]=HEAP32[$ret+4>>2]|0;
        $174 = (_mb_push_value($172,$173,$ret$byval_copy3)|0);
        $__hr4 = $174;
        $175 = $__hr4;
        $176 = ($175|0)!=(0);
        if (!($176)) {
         break L19;
        }
        $177 = $__hr4;
        $0 = $177;
        $271 = $0;
        STACKTOP = sp;return ($271|0);
       }
      }
     }
    }
    $178 = $2;
    $179 = ($178|0)!=(0|0);
    if ($179) {
     $180 = $2;
     $181 = HEAP32[$180>>2]|0;
     $182 = ($181|0)!=(0|0);
     if ($182) {
      $183 = $2;
      $184 = HEAP32[$183>>2]|0;
      $185 = HEAPU8[$184>>0]|(HEAPU8[$184+1>>0]<<8)|(HEAPU8[$184+2>>0]<<16)|(HEAPU8[$184+3>>0]<<24);
      $186 = ($185|0)!=(0|0);
      if ($186) {
       $187 = $1;
       $188 = $1;
       $189 = ((($188)) + 67|0);
       $190 = HEAPU8[$189>>0]|(HEAPU8[$189+1>>0]<<8)|(HEAPU8[$189+2>>0]<<16)|(HEAPU8[$189+3>>0]<<24);
       $191 = (__set_current_error($187,63,$190)|0);
       $192 = ($191<<24>>24)!=(0);
       if (!($192)) {
        break L19;
       }
       $193 = $1;
       $194 = $2;
       $195 = HEAP32[$194>>2]|0;
       $196 = HEAPU8[$195>>0]|(HEAPU8[$195+1>>0]<<8)|(HEAPU8[$195+2>>0]<<16)|(HEAPU8[$195+3>>0]<<24);
       $197 = ((($196)) + 9|0);
       $198 = HEAPU8[$197>>0]|(HEAPU8[$197+1>>0]<<8)|(HEAPU8[$197+2>>0]<<16)|(HEAPU8[$197+3>>0]<<24);
       $199 = $2;
       $200 = HEAP32[$199>>2]|0;
       $201 = HEAPU8[$200>>0]|(HEAPU8[$200+1>>0]<<8)|(HEAPU8[$200+2>>0]<<16)|(HEAPU8[$200+3>>0]<<24);
       $202 = ((($201)) + 13|0);
       $203 = HEAPU8[$202>>0]|(HEAPU8[$202+1>>0]<<8);
       $204 = $2;
       $205 = HEAP32[$204>>2]|0;
       $206 = HEAPU8[$205>>0]|(HEAPU8[$205+1>>0]<<8)|(HEAPU8[$205+2>>0]<<16)|(HEAPU8[$205+3>>0]<<24);
       $207 = ((($206)) + 15|0);
       $208 = HEAPU8[$207>>0]|(HEAPU8[$207+1>>0]<<8);
       __set_error_pos($193,$198,$203,$208);
       $result = 3;
       break L19;
      }
     }
    }
    $209 = $1;
    $210 = $1;
    $211 = ((($210)) + 67|0);
    $212 = HEAPU8[$211>>0]|(HEAPU8[$211+1>>0]<<8)|(HEAPU8[$211+2>>0]<<16)|(HEAPU8[$211+3>>0]<<24);
    $213 = (__set_current_error($209,63,$212)|0);
    $214 = ($213<<24>>24)!=(0);
    if (!($214)) {
     break L19;
    }
    $215 = $1;
    __set_error_pos($215,0,0,0);
    $result = 3;
    break L19;
    break;
   }
   default: {
    $216 = $1;
    __assign_public_value($216,$arg,0,1);
    $217 = $2;
    $218 = ($217|0)!=(0|0);
    if ($218) {
     $219 = $2;
     $220 = HEAP32[$219>>2]|0;
     $221 = ($220|0)!=(0|0);
     if ($221) {
      $222 = $2;
      $223 = HEAP32[$222>>2]|0;
      $224 = HEAPU8[$223>>0]|(HEAPU8[$223+1>>0]<<8)|(HEAPU8[$223+2>>0]<<16)|(HEAPU8[$223+3>>0]<<24);
      $225 = ($224|0)!=(0|0);
      if ($225) {
       $226 = $1;
       $227 = $1;
       $228 = ((($227)) + 67|0);
       $229 = HEAPU8[$228>>0]|(HEAPU8[$228+1>>0]<<8)|(HEAPU8[$228+2>>0]<<16)|(HEAPU8[$228+3>>0]<<24);
       $230 = (__set_current_error($226,14,$229)|0);
       $231 = ($230<<24>>24)!=(0);
       if (!($231)) {
        break L19;
       }
       $232 = $1;
       $233 = $2;
       $234 = HEAP32[$233>>2]|0;
       $235 = HEAPU8[$234>>0]|(HEAPU8[$234+1>>0]<<8)|(HEAPU8[$234+2>>0]<<16)|(HEAPU8[$234+3>>0]<<24);
       $236 = ((($235)) + 9|0);
       $237 = HEAPU8[$236>>0]|(HEAPU8[$236+1>>0]<<8)|(HEAPU8[$236+2>>0]<<16)|(HEAPU8[$236+3>>0]<<24);
       $238 = $2;
       $239 = HEAP32[$238>>2]|0;
       $240 = HEAPU8[$239>>0]|(HEAPU8[$239+1>>0]<<8)|(HEAPU8[$239+2>>0]<<16)|(HEAPU8[$239+3>>0]<<24);
       $241 = ((($240)) + 13|0);
       $242 = HEAPU8[$241>>0]|(HEAPU8[$241+1>>0]<<8);
       $243 = $2;
       $244 = HEAP32[$243>>2]|0;
       $245 = HEAPU8[$244>>0]|(HEAPU8[$244+1>>0]<<8)|(HEAPU8[$244+2>>0]<<16)|(HEAPU8[$244+3>>0]<<24);
       $246 = ((($245)) + 15|0);
       $247 = HEAPU8[$246>>0]|(HEAPU8[$246+1>>0]<<8);
       __set_error_pos($232,$237,$242,$247);
       $result = 3;
       break L19;
      }
     }
    }
    $248 = $1;
    $249 = $1;
    $250 = ((($249)) + 67|0);
    $251 = HEAPU8[$250>>0]|(HEAPU8[$250+1>>0]<<8)|(HEAPU8[$250+2>>0]<<16)|(HEAPU8[$250+3>>0]<<24);
    $252 = (__set_current_error($248,14,$251)|0);
    $253 = ($252<<24>>24)!=(0);
    if (!($253)) {
     break L19;
    }
    $254 = $1;
    __set_error_pos($254,0,0,0);
    $result = 3;
    break L19;
   }
   }
  }
 } while(0);
 $264 = $1;
 $265 = $2;
 $266 = (_mb_attempt_close_bracket($264,$265)|0);
 $__hr6 = $266;
 $267 = $__hr6;
 $268 = ($267|0)!=(0);
 if ($268) {
  $269 = $__hr6;
  $0 = $269;
  $271 = $0;
  STACKTOP = sp;return ($271|0);
 } else {
  $270 = $result;
  $0 = $270;
  $271 = $0;
  STACKTOP = sp;return ($271|0);
 }
 return (0)|0;
}
function __std_len($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $arg = 0, $arr = 0, $ast = 0, $dct = 0, $lst = 0, $obj = 0, $or$cond = 0, $os = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $arg = sp + 40|0;
 $0 = $s;
 $1 = $l;
 $result = 0;
 $ast = 0;
 $obj = 0;
 $arr = 0;
 $lst = 0;
 $dct = 0;
 $os = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),18077,(14818|0));
  // unreachable;
 }
 $6 = ((($arg)) + 4|0);
 ;HEAP8[$6>>0]=0|0;HEAP8[$6+1>>0]=0|0;HEAP8[$6+2>>0]=0|0;HEAP8[$6+3>>0]=0|0;
 HEAP8[$arg>>0]=0&255;HEAP8[$arg+1>>0]=(0>>8)&255;HEAP8[$arg+2>>0]=(0>>16)&255;HEAP8[$arg+3>>0]=0>>24;
 $7 = $0;
 $8 = $1;
 $9 = (_mb_attempt_open_bracket($7,$8)|0);
 $result = $9;
 $10 = $result;
 $11 = ($10|0)!=(0);
 L4: do {
  if (!($11)) {
   $12 = $1;
   $13 = HEAP32[$12>>2]|0;
   $ast = $13;
   $14 = $ast;
   $15 = ($14|0)!=(0|0);
   if ($15) {
    $16 = $ast;
    $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
    $obj = $17;
   }
   $18 = $obj;
   $19 = ($18|0)!=(0|0);
   if ($19) {
    $20 = $obj;
    $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
    $22 = ($21|0)==(8);
    if ($22) {
     $23 = $obj;
     $24 = ((($23)) + 4|0);
     $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
     $26 = ((($25)) + 4|0);
     $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
     $28 = ($27|0)==(44|0);
     if ($28) {
      $29 = $ast;
      $30 = ((($29)) + 8|0);
      $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8)|(HEAPU8[$30+2>>0]<<16)|(HEAPU8[$30+3>>0]<<24);
      $ast = $31;
      $32 = $ast;
      $33 = $1;
      HEAP32[$33>>2] = $32;
      $34 = $0;
      $35 = $1;
      $36 = $0;
      $37 = ((($36)) + 84|0);
      $38 = HEAPU8[$37>>0]|(HEAPU8[$37+1>>0]<<8)|(HEAPU8[$37+2>>0]<<16)|(HEAPU8[$37+3>>0]<<24);
      $39 = ($38|0)!=(0|0);
      if ($39) {
       $40 = $0;
       $41 = ((($40)) + 84|0);
       $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
       $43 = (__ls_count($42)|0);
       $44 = $43;
      } else {
       $44 = 0;
      }
      $45 = (_mb_push_int($34,$35,$44)|0);
      $result = $45;
      $46 = $result;
      $47 = ($46|0)!=(0);
      if ($47) {
       break;
      }
      $48 = $0;
      $49 = $1;
      $50 = (_mb_attempt_close_bracket($48,$49)|0);
      $result = $50;
      break;
     }
    }
   }
   $51 = $0;
   $52 = $1;
   $53 = (_mb_pop_value($51,$52,$arg)|0);
   $result = $53;
   $54 = $result;
   $55 = ($54|0)!=(0);
   if (!($55)) {
    $56 = $0;
    $57 = $1;
    $58 = (__try_overridden($56,$57,$arg,14517,128)|0);
    $os = $58;
    $59 = $os;
    $60 = $59 & 1;
    $61 = ($60|0)==(0);
    L19: do {
     if ($61) {
      $62 = HEAPU8[$arg>>0]|(HEAPU8[$arg+1>>0]<<8)|(HEAPU8[$arg+2>>0]<<16)|(HEAPU8[$arg+3>>0]<<24);
      switch ($62|0) {
      case 8:  {
       $63 = $0;
       $64 = $1;
       $65 = ((($arg)) + 4|0);
       $66 = HEAPU8[$65>>0]|(HEAPU8[$65+1>>0]<<8)|(HEAPU8[$65+2>>0]<<16)|(HEAPU8[$65+3>>0]<<24);
       $67 = (_mb_uu_strlen($66)|0);
       $68 = (_mb_push_int($63,$64,$67)|0);
       $result = $68;
       $69 = $result;
       $70 = ($69|0)!=(0);
       if ($70) {
        break L4;
       } else {
        break L19;
       }
       break;
      }
      case 128:  {
       $71 = ((($arg)) + 4|0);
       $72 = HEAPU8[$71>>0]|(HEAPU8[$71+1>>0]<<8)|(HEAPU8[$71+2>>0]<<16)|(HEAPU8[$71+3>>0]<<24);
       $arr = $72;
       $73 = $0;
       $74 = $1;
       $75 = $arr;
       $76 = ((($75)) + 29|0);
       $77 = HEAPU8[$76>>0]|(HEAPU8[$76+1>>0]<<8)|(HEAPU8[$76+2>>0]<<16)|(HEAPU8[$76+3>>0]<<24);
       $78 = (_mb_push_int($73,$74,$77)|0);
       $result = $78;
       $79 = $result;
       $80 = ($79|0)!=(0);
       if ($80) {
        break L4;
       } else {
        break L19;
       }
       break;
      }
      case 256:  {
       $81 = ((($arg)) + 4|0);
       $82 = HEAPU8[$81>>0]|(HEAPU8[$81+1>>0]<<8)|(HEAPU8[$81+2>>0]<<16)|(HEAPU8[$81+3>>0]<<24);
       $lst = $82;
       $83 = $0;
       $84 = $1;
       $85 = $lst;
       $86 = ((($85)) + 31|0);
       $87 = HEAPU8[$86>>0]|(HEAPU8[$86+1>>0]<<8)|(HEAPU8[$86+2>>0]<<16)|(HEAPU8[$86+3>>0]<<24);
       $88 = (_mb_push_int($83,$84,$87)|0);
       $result = $88;
       $89 = $result;
       $90 = ($89|0)!=(0);
       if ($90) {
        break L4;
       }
       $91 = $0;
       __assign_public_value($91,$arg,0,1);
       break L19;
       break;
      }
      case 1024:  {
       $92 = ((($arg)) + 4|0);
       $93 = HEAPU8[$92>>0]|(HEAPU8[$92+1>>0]<<8)|(HEAPU8[$92+2>>0]<<16)|(HEAPU8[$92+3>>0]<<24);
       $dct = $93;
       $94 = $0;
       $95 = $1;
       $96 = $dct;
       $97 = ((($96)) + 19|0);
       $98 = HEAPU8[$97>>0]|(HEAPU8[$97+1>>0]<<8)|(HEAPU8[$97+2>>0]<<16)|(HEAPU8[$97+3>>0]<<24);
       $99 = (__ht_count($98)|0);
       $100 = (_mb_push_int($94,$95,$99)|0);
       $result = $100;
       $101 = $result;
       $102 = ($101|0)!=(0);
       if ($102) {
        break L4;
       }
       $103 = $0;
       __assign_public_value($103,$arg,0,1);
       break L19;
       break;
      }
      default: {
       $104 = $ast;
       $105 = ($104|0)!=(0|0);
       if ($105) {
        $106 = $ast;
        $107 = HEAPU8[$106>>0]|(HEAPU8[$106+1>>0]<<8)|(HEAPU8[$106+2>>0]<<16)|(HEAPU8[$106+3>>0]<<24);
        $108 = ($107|0)!=(0|0);
        if ($108) {
         $109 = $0;
         $110 = $0;
         $111 = ((($110)) + 67|0);
         $112 = HEAPU8[$111>>0]|(HEAPU8[$111+1>>0]<<8)|(HEAPU8[$111+2>>0]<<16)|(HEAPU8[$111+3>>0]<<24);
         $113 = (__set_current_error($109,3,$112)|0);
         $114 = ($113<<24>>24)!=(0);
         if (!($114)) {
          break L4;
         }
         $115 = $0;
         $116 = $ast;
         $117 = HEAPU8[$116>>0]|(HEAPU8[$116+1>>0]<<8)|(HEAPU8[$116+2>>0]<<16)|(HEAPU8[$116+3>>0]<<24);
         $118 = ((($117)) + 9|0);
         $119 = HEAPU8[$118>>0]|(HEAPU8[$118+1>>0]<<8)|(HEAPU8[$118+2>>0]<<16)|(HEAPU8[$118+3>>0]<<24);
         $120 = $ast;
         $121 = HEAPU8[$120>>0]|(HEAPU8[$120+1>>0]<<8)|(HEAPU8[$120+2>>0]<<16)|(HEAPU8[$120+3>>0]<<24);
         $122 = ((($121)) + 13|0);
         $123 = HEAPU8[$122>>0]|(HEAPU8[$122+1>>0]<<8);
         $124 = $ast;
         $125 = HEAPU8[$124>>0]|(HEAPU8[$124+1>>0]<<8)|(HEAPU8[$124+2>>0]<<16)|(HEAPU8[$124+3>>0]<<24);
         $126 = ((($125)) + 15|0);
         $127 = HEAPU8[$126>>0]|(HEAPU8[$126+1>>0]<<8);
         __set_error_pos($115,$119,$123,$127);
         $result = 3;
         break L4;
        }
       }
       $128 = $0;
       $129 = $0;
       $130 = ((($129)) + 67|0);
       $131 = HEAPU8[$130>>0]|(HEAPU8[$130+1>>0]<<8)|(HEAPU8[$130+2>>0]<<16)|(HEAPU8[$130+3>>0]<<24);
       $132 = (__set_current_error($128,3,$131)|0);
       $133 = ($132<<24>>24)!=(0);
       if (!($133)) {
        break L4;
       }
       $134 = $0;
       __set_error_pos($134,0,0,0);
       $result = 3;
       break L4;
      }
      }
     } else {
      $135 = $os;
      $136 = $135 & 2;
      $137 = ($136|0)==(0);
      if ($137) {
       $138 = $0;
       $139 = $1;
       $140 = (_mb_push_int($138,$139,0)|0);
       $result = $140;
       $141 = $result;
       $142 = ($141|0)!=(0);
       if ($142) {
        break L4;
       }
      }
     }
    } while(0);
    $143 = $0;
    $144 = $1;
    $145 = (_mb_attempt_close_bracket($143,$144)|0);
    $result = $145;
   }
  }
 } while(0);
 $146 = $0;
 __assign_public_value($146,$arg,0,1);
 $147 = $result;
 STACKTOP = sp;return ($147|0);
}
function __std_get($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0;
 var $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0;
 var $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0;
 var $332 = 0, $333 = 0, $334 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $arg = 0, $field = 0, $fnode = 0, $fobj = 0, $index = 0;
 var $obj = 0, $or$cond = 0, $os = 0, $ov = 0, $result = 0, $ret = 0, $ret$byval_copy = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ret$byval_copy = sp + 32|0;
 $ov = sp + 80|0;
 $arg = sp + 72|0;
 $obj = sp + 48|0;
 $index = sp + 16|0;
 $field = sp + 12|0;
 $ret = sp + 40|0;
 $0 = $s;
 $1 = $l;
 $result = 0;
 HEAP32[$index>>2] = 0;
 HEAP32[$field>>2] = 0;
 $fnode = 0;
 $fobj = 0;
 $os = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),18161,(14809|0));
  // unreachable;
 }
 $6 = ((($ov)) + 4|0);
 ;HEAP8[$6>>0]=0|0;HEAP8[$6+1>>0]=0|0;HEAP8[$6+2>>0]=0|0;HEAP8[$6+3>>0]=0|0;
 HEAP8[$ov>>0]=0&255;HEAP8[$ov+1>>0]=(0>>8)&255;HEAP8[$ov+2>>0]=(0>>16)&255;HEAP8[$ov+3>>0]=0>>24;
 $7 = ((($arg)) + 4|0);
 ;HEAP8[$7>>0]=0|0;HEAP8[$7+1>>0]=0|0;HEAP8[$7+2>>0]=0|0;HEAP8[$7+3>>0]=0|0;
 HEAP8[$arg>>0]=0&255;HEAP8[$arg+1>>0]=(0>>8)&255;HEAP8[$arg+2>>0]=(0>>16)&255;HEAP8[$arg+3>>0]=0>>24;
 $8 = ((($ret)) + 4|0);
 ;HEAP8[$8>>0]=0|0;HEAP8[$8+1>>0]=0|0;HEAP8[$8+2>>0]=0|0;HEAP8[$8+3>>0]=0|0;
 HEAP8[$ret>>0]=0&255;HEAP8[$ret+1>>0]=(0>>8)&255;HEAP8[$ret+2>>0]=(0>>16)&255;HEAP8[$ret+3>>0]=0>>24;
 $9 = $0;
 $10 = $1;
 $11 = (_mb_attempt_open_bracket($9,$10)|0);
 $result = $11;
 $12 = $result;
 $13 = ($12|0)!=(0);
 if ($13) {
  $333 = $0;
  __assign_public_value($333,$ov,0,1);
  $334 = $result;
  STACKTOP = sp;return ($334|0);
 }
 $14 = $0;
 $15 = $1;
 $16 = (_mb_pop_value($14,$15,$ov)|0);
 $result = $16;
 $17 = $result;
 $18 = ($17|0)!=(0);
 if ($18) {
  $333 = $0;
  __assign_public_value($333,$ov,0,1);
  $334 = $result;
  STACKTOP = sp;return ($334|0);
 }
 $19 = $0;
 $20 = $1;
 $21 = (__try_overridden($19,$20,$ov,6206,128)|0);
 $os = $21;
 $22 = $os;
 $23 = $22 & 1;
 $24 = ($23|0)==(0);
 L10: do {
  if ($24) {
   dest=$obj; stop=dest+17|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
   HEAP8[$obj>>0]=0&255;HEAP8[$obj+1>>0]=(0>>8)&255;HEAP8[$obj+2>>0]=(0>>16)&255;HEAP8[$obj+3>>0]=0>>24;
   $25 = HEAPU8[$ov>>0]|(HEAPU8[$ov+1>>0]<<8)|(HEAPU8[$ov+2>>0]<<16)|(HEAPU8[$ov+3>>0]<<24);
   switch ($25|0) {
   case 256:  {
    (__public_value_to_internal_object($ov,$obj)|0);
    $26 = $0;
    $27 = $1;
    $28 = (_mb_pop_int($26,$27,$index)|0);
    $result = $28;
    $29 = $result;
    $30 = ($29|0)!=(0);
    if ($30) {
     $333 = $0;
     __assign_public_value($333,$ov,0,1);
     $334 = $result;
     STACKTOP = sp;return ($334|0);
    }
    $31 = ((($obj)) + 4|0);
    $32 = HEAPU8[$31>>0]|(HEAPU8[$31+1>>0]<<8)|(HEAPU8[$31+2>>0]<<16)|(HEAPU8[$31+3>>0]<<24);
    $33 = HEAP32[$index>>2]|0;
    $34 = (__at_list($32,$33,$ret)|0);
    $35 = ($34<<24>>24)!=(0);
    if ($35) {
     break L10;
    }
    $36 = $1;
    $37 = ($36|0)!=(0|0);
    if ($37) {
     $38 = $1;
     $39 = HEAP32[$38>>2]|0;
     $40 = ($39|0)!=(0|0);
     if ($40) {
      $41 = $1;
      $42 = HEAP32[$41>>2]|0;
      $43 = HEAPU8[$42>>0]|(HEAPU8[$42+1>>0]<<8)|(HEAPU8[$42+2>>0]<<16)|(HEAPU8[$42+3>>0]<<24);
      $44 = ($43|0)!=(0|0);
      if ($44) {
       $45 = $0;
       $46 = $0;
       $47 = ((($46)) + 67|0);
       $48 = HEAPU8[$47>>0]|(HEAPU8[$47+1>>0]<<8)|(HEAPU8[$47+2>>0]<<16)|(HEAPU8[$47+3>>0]<<24);
       $49 = (__set_current_error($45,21,$48)|0);
       $50 = ($49<<24>>24)!=(0);
       if (!($50)) {
        $333 = $0;
        __assign_public_value($333,$ov,0,1);
        $334 = $result;
        STACKTOP = sp;return ($334|0);
       }
       $51 = $0;
       $52 = $1;
       $53 = HEAP32[$52>>2]|0;
       $54 = HEAPU8[$53>>0]|(HEAPU8[$53+1>>0]<<8)|(HEAPU8[$53+2>>0]<<16)|(HEAPU8[$53+3>>0]<<24);
       $55 = ((($54)) + 9|0);
       $56 = HEAPU8[$55>>0]|(HEAPU8[$55+1>>0]<<8)|(HEAPU8[$55+2>>0]<<16)|(HEAPU8[$55+3>>0]<<24);
       $57 = $1;
       $58 = HEAP32[$57>>2]|0;
       $59 = HEAPU8[$58>>0]|(HEAPU8[$58+1>>0]<<8)|(HEAPU8[$58+2>>0]<<16)|(HEAPU8[$58+3>>0]<<24);
       $60 = ((($59)) + 13|0);
       $61 = HEAPU8[$60>>0]|(HEAPU8[$60+1>>0]<<8);
       $62 = $1;
       $63 = HEAP32[$62>>2]|0;
       $64 = HEAPU8[$63>>0]|(HEAPU8[$63+1>>0]<<8)|(HEAPU8[$63+2>>0]<<16)|(HEAPU8[$63+3>>0]<<24);
       $65 = ((($64)) + 15|0);
       $66 = HEAPU8[$65>>0]|(HEAPU8[$65+1>>0]<<8);
       __set_error_pos($51,$56,$61,$66);
       $result = 3;
       $333 = $0;
       __assign_public_value($333,$ov,0,1);
       $334 = $result;
       STACKTOP = sp;return ($334|0);
      }
     }
    }
    $67 = $0;
    $68 = $0;
    $69 = ((($68)) + 67|0);
    $70 = HEAPU8[$69>>0]|(HEAPU8[$69+1>>0]<<8)|(HEAPU8[$69+2>>0]<<16)|(HEAPU8[$69+3>>0]<<24);
    $71 = (__set_current_error($67,21,$70)|0);
    $72 = ($71<<24>>24)!=(0);
    if (!($72)) {
     $333 = $0;
     __assign_public_value($333,$ov,0,1);
     $334 = $result;
     STACKTOP = sp;return ($334|0);
    }
    $73 = $0;
    __set_error_pos($73,0,0,0);
    $result = 3;
    $333 = $0;
    __assign_public_value($333,$ov,0,1);
    $334 = $result;
    STACKTOP = sp;return ($334|0);
    break;
   }
   case 1024:  {
    (__public_value_to_internal_object($ov,$obj)|0);
    $74 = $0;
    $75 = $1;
    $76 = (_mb_pop_value($74,$75,$arg)|0);
    $result = $76;
    $77 = $result;
    $78 = ($77|0)!=(0);
    if ($78) {
     $333 = $0;
     __assign_public_value($333,$ov,0,1);
     $334 = $result;
     STACKTOP = sp;return ($334|0);
    }
    $79 = ((($obj)) + 4|0);
    $80 = HEAPU8[$79>>0]|(HEAPU8[$79+1>>0]<<8)|(HEAPU8[$79+2>>0]<<16)|(HEAPU8[$79+3>>0]<<24);
    $81 = (__find_dict($80,$arg,$ret)|0);
    $82 = ($81<<24>>24)!=(0);
    if ($82) {
     break L10;
    }
    $83 = $1;
    $84 = ($83|0)!=(0|0);
    if ($84) {
     $85 = $1;
     $86 = HEAP32[$85>>2]|0;
     $87 = ($86|0)!=(0|0);
     if ($87) {
      $88 = $1;
      $89 = HEAP32[$88>>2]|0;
      $90 = HEAPU8[$89>>0]|(HEAPU8[$89+1>>0]<<8)|(HEAPU8[$89+2>>0]<<16)|(HEAPU8[$89+3>>0]<<24);
      $91 = ($90|0)!=(0|0);
      if ($91) {
       $92 = $0;
       $93 = $0;
       $94 = ((($93)) + 67|0);
       $95 = HEAPU8[$94>>0]|(HEAPU8[$94+1>>0]<<8)|(HEAPU8[$94+2>>0]<<16)|(HEAPU8[$94+3>>0]<<24);
       $96 = (__set_current_error($92,21,$95)|0);
       $97 = ($96<<24>>24)!=(0);
       if (!($97)) {
        $333 = $0;
        __assign_public_value($333,$ov,0,1);
        $334 = $result;
        STACKTOP = sp;return ($334|0);
       }
       $98 = $0;
       $99 = $1;
       $100 = HEAP32[$99>>2]|0;
       $101 = HEAPU8[$100>>0]|(HEAPU8[$100+1>>0]<<8)|(HEAPU8[$100+2>>0]<<16)|(HEAPU8[$100+3>>0]<<24);
       $102 = ((($101)) + 9|0);
       $103 = HEAPU8[$102>>0]|(HEAPU8[$102+1>>0]<<8)|(HEAPU8[$102+2>>0]<<16)|(HEAPU8[$102+3>>0]<<24);
       $104 = $1;
       $105 = HEAP32[$104>>2]|0;
       $106 = HEAPU8[$105>>0]|(HEAPU8[$105+1>>0]<<8)|(HEAPU8[$105+2>>0]<<16)|(HEAPU8[$105+3>>0]<<24);
       $107 = ((($106)) + 13|0);
       $108 = HEAPU8[$107>>0]|(HEAPU8[$107+1>>0]<<8);
       $109 = $1;
       $110 = HEAP32[$109>>2]|0;
       $111 = HEAPU8[$110>>0]|(HEAPU8[$110+1>>0]<<8)|(HEAPU8[$110+2>>0]<<16)|(HEAPU8[$110+3>>0]<<24);
       $112 = ((($111)) + 15|0);
       $113 = HEAPU8[$112>>0]|(HEAPU8[$112+1>>0]<<8);
       __set_error_pos($98,$103,$108,$113);
       $result = 3;
       $333 = $0;
       __assign_public_value($333,$ov,0,1);
       $334 = $result;
       STACKTOP = sp;return ($334|0);
      }
     }
    }
    $114 = $0;
    $115 = $0;
    $116 = ((($115)) + 67|0);
    $117 = HEAPU8[$116>>0]|(HEAPU8[$116+1>>0]<<8)|(HEAPU8[$116+2>>0]<<16)|(HEAPU8[$116+3>>0]<<24);
    $118 = (__set_current_error($114,21,$117)|0);
    $119 = ($118<<24>>24)!=(0);
    if (!($119)) {
     $333 = $0;
     __assign_public_value($333,$ov,0,1);
     $334 = $result;
     STACKTOP = sp;return ($334|0);
    }
    $120 = $0;
    __set_error_pos($120,0,0,0);
    $result = 3;
    $333 = $0;
    __assign_public_value($333,$ov,0,1);
    $334 = $result;
    STACKTOP = sp;return ($334|0);
    break;
   }
   case 512:  {
    (__public_value_to_internal_object($ov,$obj)|0);
    $121 = ((($obj)) + 4|0);
    $122 = HEAPU8[$121>>0]|(HEAPU8[$121+1>>0]<<8)|(HEAPU8[$121+2>>0]<<16)|(HEAPU8[$121+3>>0]<<24);
    $123 = ($122|0)!=(0|0);
    if ($123) {
     $124 = ((($obj)) + 4|0);
     $125 = HEAPU8[$124>>0]|(HEAPU8[$124+1>>0]<<8)|(HEAPU8[$124+2>>0]<<16)|(HEAPU8[$124+3>>0]<<24);
     $126 = ((($125)) + 17|0);
     $127 = HEAPU8[$126>>0]|(HEAPU8[$126+1>>0]<<8)|(HEAPU8[$126+2>>0]<<16)|(HEAPU8[$126+3>>0]<<24);
     $128 = ((($127)) + 35|0);
     $129 = HEAPU8[$128>>0]|(HEAPU8[$128+1>>0]<<8)|(HEAPU8[$128+2>>0]<<16)|(HEAPU8[$128+3>>0]<<24);
     $130 = ($129|0)!=(0|0);
     if (!($130)) {
      $131 = ((($obj)) + 4|0);
      $132 = HEAPU8[$131>>0]|(HEAPU8[$131+1>>0]<<8)|(HEAPU8[$131+2>>0]<<16)|(HEAPU8[$131+3>>0]<<24);
      $133 = ((($132)) + 22|0);
      $134 = HEAPU8[$133>>0]|(HEAPU8[$133+1>>0]<<8)|(HEAPU8[$133+2>>0]<<16)|(HEAPU8[$133+3>>0]<<24);
      $135 = ($134|0)!=(0|0);
      if ($135) {
       $136 = ((($obj)) + 4|0);
       $137 = HEAPU8[$136>>0]|(HEAPU8[$136+1>>0]<<8)|(HEAPU8[$136+2>>0]<<16)|(HEAPU8[$136+3>>0]<<24);
       $138 = ((($137)) + 22|0);
       $139 = HEAPU8[$138>>0]|(HEAPU8[$138+1>>0]<<8)|(HEAPU8[$138+2>>0]<<16)|(HEAPU8[$138+3>>0]<<24);
       $140 = HEAPU8[$139>>0]|(HEAPU8[$139+1>>0]<<8)|(HEAPU8[$139+2>>0]<<16)|(HEAPU8[$139+3>>0]<<24);
       $141 = ($140|0)!=(0|0);
       if ($141) {
        $142 = ((($obj)) + 4|0);
        $143 = HEAPU8[$142>>0]|(HEAPU8[$142+1>>0]<<8)|(HEAPU8[$142+2>>0]<<16)|(HEAPU8[$142+3>>0]<<24);
        $144 = ((($143)) + 22|0);
        $145 = HEAPU8[$144>>0]|(HEAPU8[$144+1>>0]<<8)|(HEAPU8[$144+2>>0]<<16)|(HEAPU8[$144+3>>0]<<24);
        $146 = HEAPU8[$145>>0]|(HEAPU8[$145+1>>0]<<8)|(HEAPU8[$145+2>>0]<<16)|(HEAPU8[$145+3>>0]<<24);
        (__internal_object_to_public_value($146,$ret)|0);
        break L10;
       }
      }
     }
    }
    $147 = ((($obj)) + 4|0);
    $148 = HEAPU8[$147>>0]|(HEAPU8[$147+1>>0]<<8)|(HEAPU8[$147+2>>0]<<16)|(HEAPU8[$147+3>>0]<<24);
    $149 = ($148|0)!=(0|0);
    if ($149) {
     $150 = ((($obj)) + 4|0);
     $151 = HEAPU8[$150>>0]|(HEAPU8[$150+1>>0]<<8)|(HEAPU8[$150+2>>0]<<16)|(HEAPU8[$150+3>>0]<<24);
     $152 = ((($151)) + 17|0);
     $153 = HEAPU8[$152>>0]|(HEAPU8[$152+1>>0]<<8)|(HEAPU8[$152+2>>0]<<16)|(HEAPU8[$152+3>>0]<<24);
     $154 = ((($153)) + 35|0);
     $155 = HEAPU8[$154>>0]|(HEAPU8[$154+1>>0]<<8)|(HEAPU8[$154+2>>0]<<16)|(HEAPU8[$154+3>>0]<<24);
     $156 = ($155|0)!=(0|0);
     if ($156) {
      $157 = ((($obj)) + 4|0);
      $158 = HEAPU8[$157>>0]|(HEAPU8[$157+1>>0]<<8)|(HEAPU8[$157+2>>0]<<16)|(HEAPU8[$157+3>>0]<<24);
      $159 = ((($158)) + 22|0);
      $160 = HEAPU8[$159>>0]|(HEAPU8[$159+1>>0]<<8)|(HEAPU8[$159+2>>0]<<16)|(HEAPU8[$159+3>>0]<<24);
      $161 = ((($ret)) + 4|0);
      HEAP8[$161>>0]=$160&255;HEAP8[$161+1>>0]=($160>>8)&255;HEAP8[$161+2>>0]=($160>>16)&255;HEAP8[$161+3>>0]=$160>>24;
      HEAP8[$ret>>0]=2&255;HEAP8[$ret+1>>0]=(2>>8)&255;HEAP8[$ret+2>>0]=(2>>16)&255;HEAP8[$ret+3>>0]=2>>24;
      break L10;
     }
    }
    $162 = $1;
    $163 = ($162|0)!=(0|0);
    if ($163) {
     $164 = $1;
     $165 = HEAP32[$164>>2]|0;
     $166 = ($165|0)!=(0|0);
     if ($166) {
      $167 = $1;
      $168 = HEAP32[$167>>2]|0;
      $169 = HEAPU8[$168>>0]|(HEAPU8[$168+1>>0]<<8)|(HEAPU8[$168+2>>0]<<16)|(HEAPU8[$168+3>>0]<<24);
      $170 = ($169|0)!=(0|0);
      if ($170) {
       $171 = $0;
       $172 = $0;
       $173 = ((($172)) + 67|0);
       $174 = HEAPU8[$173>>0]|(HEAPU8[$173+1>>0]<<8)|(HEAPU8[$173+2>>0]<<16)|(HEAPU8[$173+3>>0]<<24);
       $175 = (__set_current_error($171,63,$174)|0);
       $176 = ($175<<24>>24)!=(0);
       if (!($176)) {
        $333 = $0;
        __assign_public_value($333,$ov,0,1);
        $334 = $result;
        STACKTOP = sp;return ($334|0);
       }
       $177 = $0;
       $178 = $1;
       $179 = HEAP32[$178>>2]|0;
       $180 = HEAPU8[$179>>0]|(HEAPU8[$179+1>>0]<<8)|(HEAPU8[$179+2>>0]<<16)|(HEAPU8[$179+3>>0]<<24);
       $181 = ((($180)) + 9|0);
       $182 = HEAPU8[$181>>0]|(HEAPU8[$181+1>>0]<<8)|(HEAPU8[$181+2>>0]<<16)|(HEAPU8[$181+3>>0]<<24);
       $183 = $1;
       $184 = HEAP32[$183>>2]|0;
       $185 = HEAPU8[$184>>0]|(HEAPU8[$184+1>>0]<<8)|(HEAPU8[$184+2>>0]<<16)|(HEAPU8[$184+3>>0]<<24);
       $186 = ((($185)) + 13|0);
       $187 = HEAPU8[$186>>0]|(HEAPU8[$186+1>>0]<<8);
       $188 = $1;
       $189 = HEAP32[$188>>2]|0;
       $190 = HEAPU8[$189>>0]|(HEAPU8[$189+1>>0]<<8)|(HEAPU8[$189+2>>0]<<16)|(HEAPU8[$189+3>>0]<<24);
       $191 = ((($190)) + 15|0);
       $192 = HEAPU8[$191>>0]|(HEAPU8[$191+1>>0]<<8);
       __set_error_pos($177,$182,$187,$192);
       $result = 3;
       $333 = $0;
       __assign_public_value($333,$ov,0,1);
       $334 = $result;
       STACKTOP = sp;return ($334|0);
      }
     }
    }
    $193 = $0;
    $194 = $0;
    $195 = ((($194)) + 67|0);
    $196 = HEAPU8[$195>>0]|(HEAPU8[$195+1>>0]<<8)|(HEAPU8[$195+2>>0]<<16)|(HEAPU8[$195+3>>0]<<24);
    $197 = (__set_current_error($193,63,$196)|0);
    $198 = ($197<<24>>24)!=(0);
    if (!($198)) {
     $333 = $0;
     __assign_public_value($333,$ov,0,1);
     $334 = $result;
     STACKTOP = sp;return ($334|0);
    }
    $199 = $0;
    __set_error_pos($199,0,0,0);
    $result = 3;
    $333 = $0;
    __assign_public_value($333,$ov,0,1);
    $334 = $result;
    STACKTOP = sp;return ($334|0);
    break;
   }
   case 2048:  {
    (__public_value_to_internal_object($ov,$obj)|0);
    $200 = ((($obj)) + 4|0);
    $201 = HEAPU8[$200>>0]|(HEAPU8[$200+1>>0]<<8)|(HEAPU8[$200+2>>0]<<16)|(HEAPU8[$200+3>>0]<<24);
    $202 = ($201|0)!=(0|0);
    if ($202) {
     $203 = ((($obj)) + 4|0);
     $204 = HEAPU8[$203>>0]|(HEAPU8[$203+1>>0]<<8)|(HEAPU8[$203+2>>0]<<16)|(HEAPU8[$203+3>>0]<<24);
     $205 = ((($204)) + 26|0);
     $206 = HEAPU8[$205>>0]|(HEAPU8[$205+1>>0]<<8)|(HEAPU8[$205+2>>0]<<16)|(HEAPU8[$205+3>>0]<<24);
     $207 = ($206|0)!=(0|0);
     if ($207) {
      $208 = ((($obj)) + 4|0);
      $209 = HEAPU8[$208>>0]|(HEAPU8[$208+1>>0]<<8)|(HEAPU8[$208+2>>0]<<16)|(HEAPU8[$208+3>>0]<<24);
      $210 = ((($209)) + 26|0);
      $211 = HEAPU8[$210>>0]|(HEAPU8[$210+1>>0]<<8)|(HEAPU8[$210+2>>0]<<16)|(HEAPU8[$210+3>>0]<<24);
      $212 = ($211|0)!=((-1)|0);
      if ($212) {
       $213 = ((($obj)) + 4|0);
       $214 = HEAPU8[$213>>0]|(HEAPU8[$213+1>>0]<<8)|(HEAPU8[$213+2>>0]<<16)|(HEAPU8[$213+3>>0]<<24);
       $215 = ((($214)) + 26|0);
       $216 = HEAPU8[$215>>0]|(HEAPU8[$215+1>>0]<<8)|(HEAPU8[$215+2>>0]<<16)|(HEAPU8[$215+3>>0]<<24);
       $217 = ((($216)) + 12|0);
       $218 = HEAPU8[$217>>0]|(HEAPU8[$217+1>>0]<<8)|(HEAPU8[$217+2>>0]<<16)|(HEAPU8[$217+3>>0]<<24);
       $219 = ($218|0)!=(0|0);
       if ($219) {
        $220 = ((($obj)) + 4|0);
        $221 = HEAPU8[$220>>0]|(HEAPU8[$220+1>>0]<<8)|(HEAPU8[$220+2>>0]<<16)|(HEAPU8[$220+3>>0]<<24);
        $222 = ((($221)) + 26|0);
        $223 = HEAPU8[$222>>0]|(HEAPU8[$222+1>>0]<<8)|(HEAPU8[$222+2>>0]<<16)|(HEAPU8[$222+3>>0]<<24);
        $224 = ((($223)) + 12|0);
        $225 = HEAPU8[$224>>0]|(HEAPU8[$224+1>>0]<<8)|(HEAPU8[$224+2>>0]<<16)|(HEAPU8[$224+3>>0]<<24);
        (__internal_object_to_public_value($225,$ret)|0);
        break L10;
       }
      }
     }
    }
    $226 = $1;
    $227 = ($226|0)!=(0|0);
    if ($227) {
     $228 = $1;
     $229 = HEAP32[$228>>2]|0;
     $230 = ($229|0)!=(0|0);
     if ($230) {
      $231 = $1;
      $232 = HEAP32[$231>>2]|0;
      $233 = HEAPU8[$232>>0]|(HEAPU8[$232+1>>0]<<8)|(HEAPU8[$232+2>>0]<<16)|(HEAPU8[$232+3>>0]<<24);
      $234 = ($233|0)!=(0|0);
      if ($234) {
       $235 = $0;
       $236 = $0;
       $237 = ((($236)) + 67|0);
       $238 = HEAPU8[$237>>0]|(HEAPU8[$237+1>>0]<<8)|(HEAPU8[$237+2>>0]<<16)|(HEAPU8[$237+3>>0]<<24);
       $239 = (__set_current_error($235,63,$238)|0);
       $240 = ($239<<24>>24)!=(0);
       if (!($240)) {
        $333 = $0;
        __assign_public_value($333,$ov,0,1);
        $334 = $result;
        STACKTOP = sp;return ($334|0);
       }
       $241 = $0;
       $242 = $1;
       $243 = HEAP32[$242>>2]|0;
       $244 = HEAPU8[$243>>0]|(HEAPU8[$243+1>>0]<<8)|(HEAPU8[$243+2>>0]<<16)|(HEAPU8[$243+3>>0]<<24);
       $245 = ((($244)) + 9|0);
       $246 = HEAPU8[$245>>0]|(HEAPU8[$245+1>>0]<<8)|(HEAPU8[$245+2>>0]<<16)|(HEAPU8[$245+3>>0]<<24);
       $247 = $1;
       $248 = HEAP32[$247>>2]|0;
       $249 = HEAPU8[$248>>0]|(HEAPU8[$248+1>>0]<<8)|(HEAPU8[$248+2>>0]<<16)|(HEAPU8[$248+3>>0]<<24);
       $250 = ((($249)) + 13|0);
       $251 = HEAPU8[$250>>0]|(HEAPU8[$250+1>>0]<<8);
       $252 = $1;
       $253 = HEAP32[$252>>2]|0;
       $254 = HEAPU8[$253>>0]|(HEAPU8[$253+1>>0]<<8)|(HEAPU8[$253+2>>0]<<16)|(HEAPU8[$253+3>>0]<<24);
       $255 = ((($254)) + 15|0);
       $256 = HEAPU8[$255>>0]|(HEAPU8[$255+1>>0]<<8);
       __set_error_pos($241,$246,$251,$256);
       $result = 3;
       $333 = $0;
       __assign_public_value($333,$ov,0,1);
       $334 = $result;
       STACKTOP = sp;return ($334|0);
      }
     }
    }
    $257 = $0;
    $258 = $0;
    $259 = ((($258)) + 67|0);
    $260 = HEAPU8[$259>>0]|(HEAPU8[$259+1>>0]<<8)|(HEAPU8[$259+2>>0]<<16)|(HEAPU8[$259+3>>0]<<24);
    $261 = (__set_current_error($257,63,$260)|0);
    $262 = ($261<<24>>24)!=(0);
    if (!($262)) {
     $333 = $0;
     __assign_public_value($333,$ov,0,1);
     $334 = $result;
     STACKTOP = sp;return ($334|0);
    }
    $263 = $0;
    __set_error_pos($263,0,0,0);
    $result = 3;
    $333 = $0;
    __assign_public_value($333,$ov,0,1);
    $334 = $result;
    STACKTOP = sp;return ($334|0);
    break;
   }
   case 4096:  {
    (__public_value_to_internal_object($ov,$obj)|0);
    $264 = $0;
    $265 = $1;
    $266 = (_mb_pop_string($264,$265,$field)|0);
    $result = $266;
    $267 = $result;
    $268 = ($267|0)!=(0);
    if ($268) {
     $333 = $0;
     __assign_public_value($333,$ov,0,1);
     $334 = $result;
     STACKTOP = sp;return ($334|0);
    }
    $269 = HEAP32[$field>>2]|0;
    $270 = (_mb_strupr($269)|0);
    HEAP32[$field>>2] = $270;
    $271 = $0;
    $272 = ((($obj)) + 4|0);
    $273 = HEAPU8[$272>>0]|(HEAPU8[$272+1>>0]<<8)|(HEAPU8[$272+2>>0]<<16)|(HEAPU8[$272+3>>0]<<24);
    $274 = HEAP32[$field>>2]|0;
    $275 = (__search_identifier_in_class($271,$273,$274,0,0)|0);
    $fnode = $275;
    $276 = $fnode;
    $277 = ($276|0)!=(0|0);
    if (!($277)) {
     break L10;
    }
    $278 = $fnode;
    $279 = HEAPU8[$278>>0]|(HEAPU8[$278+1>>0]<<8)|(HEAPU8[$278+2>>0]<<16)|(HEAPU8[$278+3>>0]<<24);
    $280 = ($279|0)!=(0|0);
    if (!($280)) {
     break L10;
    }
    $281 = $fnode;
    $282 = HEAPU8[$281>>0]|(HEAPU8[$281+1>>0]<<8)|(HEAPU8[$281+2>>0]<<16)|(HEAPU8[$281+3>>0]<<24);
    $fobj = $282;
    $283 = $fobj;
    (__internal_object_to_public_value($283,$ret)|0);
    break L10;
    break;
   }
   default: {
    $284 = $1;
    $285 = ($284|0)!=(0|0);
    if ($285) {
     $286 = $1;
     $287 = HEAP32[$286>>2]|0;
     $288 = ($287|0)!=(0|0);
     if ($288) {
      $289 = $1;
      $290 = HEAP32[$289>>2]|0;
      $291 = HEAPU8[$290>>0]|(HEAPU8[$290+1>>0]<<8)|(HEAPU8[$290+2>>0]<<16)|(HEAPU8[$290+3>>0]<<24);
      $292 = ($291|0)!=(0|0);
      if ($292) {
       $293 = $0;
       $294 = $0;
       $295 = ((($294)) + 67|0);
       $296 = HEAPU8[$295>>0]|(HEAPU8[$295+1>>0]<<8)|(HEAPU8[$295+2>>0]<<16)|(HEAPU8[$295+3>>0]<<24);
       $297 = (__set_current_error($293,66,$296)|0);
       $298 = ($297<<24>>24)!=(0);
       if (!($298)) {
        $333 = $0;
        __assign_public_value($333,$ov,0,1);
        $334 = $result;
        STACKTOP = sp;return ($334|0);
       }
       $299 = $0;
       $300 = $1;
       $301 = HEAP32[$300>>2]|0;
       $302 = HEAPU8[$301>>0]|(HEAPU8[$301+1>>0]<<8)|(HEAPU8[$301+2>>0]<<16)|(HEAPU8[$301+3>>0]<<24);
       $303 = ((($302)) + 9|0);
       $304 = HEAPU8[$303>>0]|(HEAPU8[$303+1>>0]<<8)|(HEAPU8[$303+2>>0]<<16)|(HEAPU8[$303+3>>0]<<24);
       $305 = $1;
       $306 = HEAP32[$305>>2]|0;
       $307 = HEAPU8[$306>>0]|(HEAPU8[$306+1>>0]<<8)|(HEAPU8[$306+2>>0]<<16)|(HEAPU8[$306+3>>0]<<24);
       $308 = ((($307)) + 13|0);
       $309 = HEAPU8[$308>>0]|(HEAPU8[$308+1>>0]<<8);
       $310 = $1;
       $311 = HEAP32[$310>>2]|0;
       $312 = HEAPU8[$311>>0]|(HEAPU8[$311+1>>0]<<8)|(HEAPU8[$311+2>>0]<<16)|(HEAPU8[$311+3>>0]<<24);
       $313 = ((($312)) + 15|0);
       $314 = HEAPU8[$313>>0]|(HEAPU8[$313+1>>0]<<8);
       __set_error_pos($299,$304,$309,$314);
       $result = 3;
       $333 = $0;
       __assign_public_value($333,$ov,0,1);
       $334 = $result;
       STACKTOP = sp;return ($334|0);
      }
     }
    }
    $315 = $0;
    $316 = $0;
    $317 = ((($316)) + 67|0);
    $318 = HEAPU8[$317>>0]|(HEAPU8[$317+1>>0]<<8)|(HEAPU8[$317+2>>0]<<16)|(HEAPU8[$317+3>>0]<<24);
    $319 = (__set_current_error($315,66,$318)|0);
    $320 = ($319<<24>>24)!=(0);
    if (!($320)) {
     $333 = $0;
     __assign_public_value($333,$ov,0,1);
     $334 = $result;
     STACKTOP = sp;return ($334|0);
    }
    $321 = $0;
    __set_error_pos($321,0,0,0);
    $result = 3;
    $333 = $0;
    __assign_public_value($333,$ov,0,1);
    $334 = $result;
    STACKTOP = sp;return ($334|0);
   }
   }
  }
 } while(0);
 $322 = $0;
 $323 = $1;
 $324 = (_mb_attempt_close_bracket($322,$323)|0);
 $result = $324;
 $325 = $result;
 $326 = ($325|0)!=(0);
 if ($326) {
  $333 = $0;
  __assign_public_value($333,$ov,0,1);
  $334 = $result;
  STACKTOP = sp;return ($334|0);
 }
 $327 = $os;
 $328 = $327 & 2;
 $329 = ($328|0)==(0);
 if (!($329)) {
  $333 = $0;
  __assign_public_value($333,$ov,0,1);
  $334 = $result;
  STACKTOP = sp;return ($334|0);
 }
 $330 = $0;
 $331 = $1;
 ;HEAP32[$ret$byval_copy>>2]=HEAP32[$ret>>2]|0;HEAP32[$ret$byval_copy+4>>2]=HEAP32[$ret+4>>2]|0;
 $332 = (_mb_push_value($330,$331,$ret$byval_copy)|0);
 $result = $332;
 $333 = $0;
 __assign_public_value($333,$ov,0,1);
 $334 = $result;
 STACKTOP = sp;return ($334|0);
}
function __std_set($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0;
 var $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0;
 var $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;
 var $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $field = 0, $fnode = 0, $fobj = 0, $idx = 0, $key = 0, $nobj = 0, $nv = 0;
 var $obj = 0, $or$cond = 0, $os = 0, $ov = 0, $ov$byval_copy = 0, $oval = 0, $result = 0, $switch$split12D = 0, $switch$split2D = 0, $val = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ov$byval_copy = sp + 40|0;
 $ov = sp + 96|0;
 $key = sp + 88|0;
 $val = sp + 80|0;
 $obj = sp + 56|0;
 $oval = sp + 24|0;
 $idx = sp + 20|0;
 $field = sp + 16|0;
 $nv = sp + 48|0;
 $nobj = sp;
 $0 = $s;
 $1 = $l;
 $result = 0;
 HEAP32[$oval>>2] = 0;
 HEAP32[$idx>>2] = 0;
 HEAP32[$field>>2] = 0;
 $fnode = 0;
 $fobj = 0;
 $os = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),18263,(14800|0));
  // unreachable;
 }
 $6 = ((($ov)) + 4|0);
 ;HEAP8[$6>>0]=0|0;HEAP8[$6+1>>0]=0|0;HEAP8[$6+2>>0]=0|0;HEAP8[$6+3>>0]=0|0;
 HEAP8[$ov>>0]=0&255;HEAP8[$ov+1>>0]=(0>>8)&255;HEAP8[$ov+2>>0]=(0>>16)&255;HEAP8[$ov+3>>0]=0>>24;
 $7 = ((($key)) + 4|0);
 ;HEAP8[$7>>0]=0|0;HEAP8[$7+1>>0]=0|0;HEAP8[$7+2>>0]=0|0;HEAP8[$7+3>>0]=0|0;
 HEAP8[$key>>0]=0&255;HEAP8[$key+1>>0]=(0>>8)&255;HEAP8[$key+2>>0]=(0>>16)&255;HEAP8[$key+3>>0]=0>>24;
 $8 = ((($val)) + 4|0);
 ;HEAP8[$8>>0]=0|0;HEAP8[$8+1>>0]=0|0;HEAP8[$8+2>>0]=0|0;HEAP8[$8+3>>0]=0|0;
 HEAP8[$val>>0]=0&255;HEAP8[$val+1>>0]=(0>>8)&255;HEAP8[$val+2>>0]=(0>>16)&255;HEAP8[$val+3>>0]=0>>24;
 $9 = $0;
 $10 = $1;
 $11 = (_mb_attempt_open_bracket($9,$10)|0);
 $result = $11;
 $12 = $result;
 $13 = ($12|0)!=(0);
 L4: do {
  if (!($13)) {
   $14 = $0;
   $15 = $1;
   $16 = (_mb_pop_value($14,$15,$ov)|0);
   $result = $16;
   $17 = $result;
   $18 = ($17|0)!=(0);
   if (!($18)) {
    $19 = $0;
    $20 = $1;
    $21 = (__try_overridden($19,$20,$ov,14521,128)|0);
    $os = $21;
    $22 = $os;
    $23 = $22 & 1;
    $24 = ($23|0)==(0);
    L7: do {
     if ($24) {
      dest=$obj; stop=dest+17|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
      HEAP8[$obj>>0]=0&255;HEAP8[$obj+1>>0]=(0>>8)&255;HEAP8[$obj+2>>0]=(0>>16)&255;HEAP8[$obj+3>>0]=0>>24;
      $25 = HEAPU8[$ov>>0]|(HEAPU8[$ov+1>>0]<<8)|(HEAPU8[$ov+2>>0]<<16)|(HEAPU8[$ov+3>>0]<<24);
      $switch$split2D = ($25|0)<(1024);
      L9: do {
       if ($switch$split2D) {
        switch ($25|0) {
        case 256:  {
         break;
        }
        default: {
         break L9;
        }
        }
        (__public_value_to_internal_object($ov,$obj)|0);
        while(1) {
         $26 = $0;
         $27 = $1;
         $28 = (_mb_has_arg($26,$27)|0);
         $29 = ($28|0)!=(0);
         if (!($29)) {
          break L7;
         }
         $30 = ((($val)) + 4|0);
         ;HEAP8[$30>>0]=0|0;HEAP8[$30+1>>0]=0|0;HEAP8[$30+2>>0]=0|0;HEAP8[$30+3>>0]=0|0;
         HEAP8[$val>>0]=0&255;HEAP8[$val+1>>0]=(0>>8)&255;HEAP8[$val+2>>0]=(0>>16)&255;HEAP8[$val+3>>0]=0>>24;
         $31 = $0;
         $32 = $1;
         $33 = (_mb_pop_int($31,$32,$idx)|0);
         $result = $33;
         $34 = $result;
         $35 = ($34|0)!=(0);
         if ($35) {
          break L4;
         }
         $36 = $0;
         $37 = $1;
         $38 = (_mb_pop_value($36,$37,$val)|0);
         $result = $38;
         $39 = $result;
         $40 = ($39|0)!=(0);
         if ($40) {
          break L4;
         }
         $41 = ((($obj)) + 4|0);
         $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
         $43 = HEAP32[$idx>>2]|0;
         $44 = (__set_list($42,$43,$val,$oval)|0);
         $45 = ($44<<24>>24)!=(0);
         if (!($45)) {
          break;
         }
        }
        $46 = HEAP32[$oval>>2]|0;
        $47 = ($46|0)!=(0|0);
        if ($47) {
         $48 = HEAP32[$oval>>2]|0;
         (__destroy_object($48,0)|0);
        }
        $49 = $1;
        $50 = ($49|0)!=(0|0);
        if ($50) {
         $51 = $1;
         $52 = HEAP32[$51>>2]|0;
         $53 = ($52|0)!=(0|0);
         if ($53) {
          $54 = $1;
          $55 = HEAP32[$54>>2]|0;
          $56 = HEAPU8[$55>>0]|(HEAPU8[$55+1>>0]<<8)|(HEAPU8[$55+2>>0]<<16)|(HEAPU8[$55+3>>0]<<24);
          $57 = ($56|0)!=(0|0);
          if ($57) {
           $58 = $0;
           $59 = $0;
           $60 = ((($59)) + 67|0);
           $61 = HEAPU8[$60>>0]|(HEAPU8[$60+1>>0]<<8)|(HEAPU8[$60+2>>0]<<16)|(HEAPU8[$60+3>>0]<<24);
           $62 = (__set_current_error($58,21,$61)|0);
           $63 = ($62<<24>>24)!=(0);
           if (!($63)) {
            break L4;
           }
           $64 = $0;
           $65 = $1;
           $66 = HEAP32[$65>>2]|0;
           $67 = HEAPU8[$66>>0]|(HEAPU8[$66+1>>0]<<8)|(HEAPU8[$66+2>>0]<<16)|(HEAPU8[$66+3>>0]<<24);
           $68 = ((($67)) + 9|0);
           $69 = HEAPU8[$68>>0]|(HEAPU8[$68+1>>0]<<8)|(HEAPU8[$68+2>>0]<<16)|(HEAPU8[$68+3>>0]<<24);
           $70 = $1;
           $71 = HEAP32[$70>>2]|0;
           $72 = HEAPU8[$71>>0]|(HEAPU8[$71+1>>0]<<8)|(HEAPU8[$71+2>>0]<<16)|(HEAPU8[$71+3>>0]<<24);
           $73 = ((($72)) + 13|0);
           $74 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8);
           $75 = $1;
           $76 = HEAP32[$75>>2]|0;
           $77 = HEAPU8[$76>>0]|(HEAPU8[$76+1>>0]<<8)|(HEAPU8[$76+2>>0]<<16)|(HEAPU8[$76+3>>0]<<24);
           $78 = ((($77)) + 15|0);
           $79 = HEAPU8[$78>>0]|(HEAPU8[$78+1>>0]<<8);
           __set_error_pos($64,$69,$74,$79);
           $result = 3;
           break L4;
          }
         }
        }
        $80 = $0;
        $81 = $0;
        $82 = ((($81)) + 67|0);
        $83 = HEAPU8[$82>>0]|(HEAPU8[$82+1>>0]<<8)|(HEAPU8[$82+2>>0]<<16)|(HEAPU8[$82+3>>0]<<24);
        $84 = (__set_current_error($80,21,$83)|0);
        $85 = ($84<<24>>24)!=(0);
        if (!($85)) {
         break L4;
        }
        $86 = $0;
        __set_error_pos($86,0,0,0);
        $result = 3;
        break L4;
       } else {
        $switch$split12D = ($25|0)<(4096);
        if ($switch$split12D) {
         switch ($25|0) {
         case 1024:  {
          break;
         }
         default: {
          break L9;
         }
         }
         (__public_value_to_internal_object($ov,$obj)|0);
         while(1) {
          $87 = $0;
          $88 = $1;
          $89 = (_mb_has_arg($87,$88)|0);
          $90 = ($89|0)!=(0);
          if (!($90)) {
           break L7;
          }
          $91 = ((($key)) + 4|0);
          ;HEAP8[$91>>0]=0|0;HEAP8[$91+1>>0]=0|0;HEAP8[$91+2>>0]=0|0;HEAP8[$91+3>>0]=0|0;
          HEAP8[$key>>0]=0&255;HEAP8[$key+1>>0]=(0>>8)&255;HEAP8[$key+2>>0]=(0>>16)&255;HEAP8[$key+3>>0]=0>>24;
          $92 = ((($val)) + 4|0);
          ;HEAP8[$92>>0]=0|0;HEAP8[$92+1>>0]=0|0;HEAP8[$92+2>>0]=0|0;HEAP8[$92+3>>0]=0|0;
          HEAP8[$val>>0]=0&255;HEAP8[$val+1>>0]=(0>>8)&255;HEAP8[$val+2>>0]=(0>>16)&255;HEAP8[$val+3>>0]=0>>24;
          $93 = $0;
          $94 = $1;
          $95 = (_mb_pop_value($93,$94,$key)|0);
          $result = $95;
          $96 = $result;
          $97 = ($96|0)!=(0);
          if ($97) {
           break L4;
          }
          $98 = $0;
          $99 = $1;
          $100 = (_mb_pop_value($98,$99,$val)|0);
          $result = $100;
          $101 = $result;
          $102 = ($101|0)!=(0);
          if ($102) {
           break L4;
          }
          $103 = ((($obj)) + 4|0);
          $104 = HEAPU8[$103>>0]|(HEAPU8[$103+1>>0]<<8)|(HEAPU8[$103+2>>0]<<16)|(HEAPU8[$103+3>>0]<<24);
          $105 = (__set_dict($104,$key,$val,0,0)|0);
          $106 = ($105<<24>>24)!=(0);
          if (!($106)) {
           break;
          }
         }
         $107 = $1;
         $108 = ($107|0)!=(0|0);
         if ($108) {
          $109 = $1;
          $110 = HEAP32[$109>>2]|0;
          $111 = ($110|0)!=(0|0);
          if ($111) {
           $112 = $1;
           $113 = HEAP32[$112>>2]|0;
           $114 = HEAPU8[$113>>0]|(HEAPU8[$113+1>>0]<<8)|(HEAPU8[$113+2>>0]<<16)|(HEAPU8[$113+3>>0]<<24);
           $115 = ($114|0)!=(0|0);
           if ($115) {
            $116 = $0;
            $117 = $0;
            $118 = ((($117)) + 67|0);
            $119 = HEAPU8[$118>>0]|(HEAPU8[$118+1>>0]<<8)|(HEAPU8[$118+2>>0]<<16)|(HEAPU8[$118+3>>0]<<24);
            $120 = (__set_current_error($116,48,$119)|0);
            $121 = ($120<<24>>24)!=(0);
            if (!($121)) {
             break L4;
            }
            $122 = $0;
            $123 = $1;
            $124 = HEAP32[$123>>2]|0;
            $125 = HEAPU8[$124>>0]|(HEAPU8[$124+1>>0]<<8)|(HEAPU8[$124+2>>0]<<16)|(HEAPU8[$124+3>>0]<<24);
            $126 = ((($125)) + 9|0);
            $127 = HEAPU8[$126>>0]|(HEAPU8[$126+1>>0]<<8)|(HEAPU8[$126+2>>0]<<16)|(HEAPU8[$126+3>>0]<<24);
            $128 = $1;
            $129 = HEAP32[$128>>2]|0;
            $130 = HEAPU8[$129>>0]|(HEAPU8[$129+1>>0]<<8)|(HEAPU8[$129+2>>0]<<16)|(HEAPU8[$129+3>>0]<<24);
            $131 = ((($130)) + 13|0);
            $132 = HEAPU8[$131>>0]|(HEAPU8[$131+1>>0]<<8);
            $133 = $1;
            $134 = HEAP32[$133>>2]|0;
            $135 = HEAPU8[$134>>0]|(HEAPU8[$134+1>>0]<<8)|(HEAPU8[$134+2>>0]<<16)|(HEAPU8[$134+3>>0]<<24);
            $136 = ((($135)) + 15|0);
            $137 = HEAPU8[$136>>0]|(HEAPU8[$136+1>>0]<<8);
            __set_error_pos($122,$127,$132,$137);
            $result = 3;
            break L4;
           }
          }
         }
         $138 = $0;
         $139 = $0;
         $140 = ((($139)) + 67|0);
         $141 = HEAPU8[$140>>0]|(HEAPU8[$140+1>>0]<<8)|(HEAPU8[$140+2>>0]<<16)|(HEAPU8[$140+3>>0]<<24);
         $142 = (__set_current_error($138,48,$141)|0);
         $143 = ($142<<24>>24)!=(0);
         if (!($143)) {
          break L4;
         }
         $144 = $0;
         __set_error_pos($144,0,0,0);
         $result = 3;
         break L4;
        }
        switch ($25|0) {
        case 4096:  {
         break;
        }
        default: {
         break L9;
        }
        }
        $145 = ((($nv)) + 4|0);
        ;HEAP8[$145>>0]=0|0;HEAP8[$145+1>>0]=0|0;HEAP8[$145+2>>0]=0|0;HEAP8[$145+3>>0]=0|0;
        HEAP8[$nv>>0]=0&255;HEAP8[$nv+1>>0]=(0>>8)&255;HEAP8[$nv+2>>0]=(0>>16)&255;HEAP8[$nv+3>>0]=0>>24;
        (__public_value_to_internal_object($ov,$obj)|0);
        $146 = $0;
        $147 = $1;
        $148 = (_mb_pop_string($146,$147,$field)|0);
        $result = $148;
        $149 = $result;
        $150 = ($149|0)!=(0);
        if ($150) {
         break L4;
        }
        $151 = $0;
        $152 = $1;
        $153 = (_mb_pop_value($151,$152,$nv)|0);
        $result = $153;
        $154 = $result;
        $155 = ($154|0)!=(0);
        if ($155) {
         break L4;
        }
        $156 = HEAP32[$field>>2]|0;
        $157 = (_mb_strupr($156)|0);
        HEAP32[$field>>2] = $157;
        $158 = $0;
        $159 = ((($obj)) + 4|0);
        $160 = HEAPU8[$159>>0]|(HEAPU8[$159+1>>0]<<8)|(HEAPU8[$159+2>>0]<<16)|(HEAPU8[$159+3>>0]<<24);
        $161 = HEAP32[$field>>2]|0;
        $162 = (__search_identifier_in_class($158,$160,$161,0,0)|0);
        $fnode = $162;
        $163 = $fnode;
        $164 = ($163|0)!=(0|0);
        if ($164) {
         $165 = $fnode;
         $166 = HEAPU8[$165>>0]|(HEAPU8[$165+1>>0]<<8)|(HEAPU8[$165+2>>0]<<16)|(HEAPU8[$165+3>>0]<<24);
         $167 = ($166|0)!=(0|0);
         if ($167) {
          $168 = $fnode;
          $169 = HEAPU8[$168>>0]|(HEAPU8[$168+1>>0]<<8)|(HEAPU8[$168+2>>0]<<16)|(HEAPU8[$168+3>>0]<<24);
          $170 = HEAPU8[$169>>0]|(HEAPU8[$169+1>>0]<<8)|(HEAPU8[$169+2>>0]<<16)|(HEAPU8[$169+3>>0]<<24);
          $171 = ($170|0)==(9);
          if ($171) {
           HEAP32[$nobj>>2] = 0;
           $172 = $fnode;
           $173 = HEAPU8[$172>>0]|(HEAPU8[$172+1>>0]<<8)|(HEAPU8[$172+2>>0]<<16)|(HEAPU8[$172+3>>0]<<24);
           $fobj = $173;
           $174 = $fobj;
           $175 = ((($174)) + 4|0);
           $176 = HEAPU8[$175>>0]|(HEAPU8[$175+1>>0]<<8)|(HEAPU8[$175+2>>0]<<16)|(HEAPU8[$175+3>>0]<<24);
           $177 = ((($176)) + 4|0);
           $178 = HEAPU8[$177>>0]|(HEAPU8[$177+1>>0]<<8)|(HEAPU8[$177+2>>0]<<16)|(HEAPU8[$177+3>>0]<<24);
           (__destroy_object($178,0)|0);
           (__create_internal_object_from_public_value($nv,$nobj)|0);
           $179 = HEAP32[$nobj>>2]|0;
           $180 = $fobj;
           $181 = ((($180)) + 4|0);
           $182 = HEAPU8[$181>>0]|(HEAPU8[$181+1>>0]<<8)|(HEAPU8[$181+2>>0]<<16)|(HEAPU8[$181+3>>0]<<24);
           $183 = ((($182)) + 4|0);
           HEAP8[$183>>0]=$179&255;HEAP8[$183+1>>0]=($179>>8)&255;HEAP8[$183+2>>0]=($179>>16)&255;HEAP8[$183+3>>0]=$179>>24;
           break L7;
          }
         }
        }
        $184 = $1;
        $185 = ($184|0)!=(0|0);
        if ($185) {
         $186 = $1;
         $187 = HEAP32[$186>>2]|0;
         $188 = ($187|0)!=(0|0);
         if ($188) {
          $189 = $1;
          $190 = HEAP32[$189>>2]|0;
          $191 = HEAPU8[$190>>0]|(HEAPU8[$190+1>>0]<<8)|(HEAPU8[$190+2>>0]<<16)|(HEAPU8[$190+3>>0]<<24);
          $192 = ($191|0)!=(0|0);
          if ($192) {
           $193 = $0;
           $194 = $0;
           $195 = ((($194)) + 67|0);
           $196 = HEAPU8[$195>>0]|(HEAPU8[$195+1>>0]<<8)|(HEAPU8[$195+2>>0]<<16)|(HEAPU8[$195+3>>0]<<24);
           $197 = (__set_current_error($193,19,$196)|0);
           $198 = ($197<<24>>24)!=(0);
           if (!($198)) {
            break L4;
           }
           $199 = $0;
           $200 = $1;
           $201 = HEAP32[$200>>2]|0;
           $202 = HEAPU8[$201>>0]|(HEAPU8[$201+1>>0]<<8)|(HEAPU8[$201+2>>0]<<16)|(HEAPU8[$201+3>>0]<<24);
           $203 = ((($202)) + 9|0);
           $204 = HEAPU8[$203>>0]|(HEAPU8[$203+1>>0]<<8)|(HEAPU8[$203+2>>0]<<16)|(HEAPU8[$203+3>>0]<<24);
           $205 = $1;
           $206 = HEAP32[$205>>2]|0;
           $207 = HEAPU8[$206>>0]|(HEAPU8[$206+1>>0]<<8)|(HEAPU8[$206+2>>0]<<16)|(HEAPU8[$206+3>>0]<<24);
           $208 = ((($207)) + 13|0);
           $209 = HEAPU8[$208>>0]|(HEAPU8[$208+1>>0]<<8);
           $210 = $1;
           $211 = HEAP32[$210>>2]|0;
           $212 = HEAPU8[$211>>0]|(HEAPU8[$211+1>>0]<<8)|(HEAPU8[$211+2>>0]<<16)|(HEAPU8[$211+3>>0]<<24);
           $213 = ((($212)) + 15|0);
           $214 = HEAPU8[$213>>0]|(HEAPU8[$213+1>>0]<<8);
           __set_error_pos($199,$204,$209,$214);
           $result = 3;
           break L4;
          }
         }
        }
        $215 = $0;
        $216 = $0;
        $217 = ((($216)) + 67|0);
        $218 = HEAPU8[$217>>0]|(HEAPU8[$217+1>>0]<<8)|(HEAPU8[$217+2>>0]<<16)|(HEAPU8[$217+3>>0]<<24);
        $219 = (__set_current_error($215,19,$218)|0);
        $220 = ($219<<24>>24)!=(0);
        if (!($220)) {
         break L4;
        }
        $221 = $0;
        __set_error_pos($221,0,0,0);
        $result = 3;
        break L4;
       }
      } while(0);
      $222 = $1;
      $223 = ($222|0)!=(0|0);
      if ($223) {
       $224 = $1;
       $225 = HEAP32[$224>>2]|0;
       $226 = ($225|0)!=(0|0);
       if ($226) {
        $227 = $1;
        $228 = HEAP32[$227>>2]|0;
        $229 = HEAPU8[$228>>0]|(HEAPU8[$228+1>>0]<<8)|(HEAPU8[$228+2>>0]<<16)|(HEAPU8[$228+3>>0]<<24);
        $230 = ($229|0)!=(0|0);
        if ($230) {
         $231 = $0;
         $232 = $0;
         $233 = ((($232)) + 67|0);
         $234 = HEAPU8[$233>>0]|(HEAPU8[$233+1>>0]<<8)|(HEAPU8[$233+2>>0]<<16)|(HEAPU8[$233+3>>0]<<24);
         $235 = (__set_current_error($231,65,$234)|0);
         $236 = ($235<<24>>24)!=(0);
         if (!($236)) {
          break L4;
         }
         $237 = $0;
         $238 = $1;
         $239 = HEAP32[$238>>2]|0;
         $240 = HEAPU8[$239>>0]|(HEAPU8[$239+1>>0]<<8)|(HEAPU8[$239+2>>0]<<16)|(HEAPU8[$239+3>>0]<<24);
         $241 = ((($240)) + 9|0);
         $242 = HEAPU8[$241>>0]|(HEAPU8[$241+1>>0]<<8)|(HEAPU8[$241+2>>0]<<16)|(HEAPU8[$241+3>>0]<<24);
         $243 = $1;
         $244 = HEAP32[$243>>2]|0;
         $245 = HEAPU8[$244>>0]|(HEAPU8[$244+1>>0]<<8)|(HEAPU8[$244+2>>0]<<16)|(HEAPU8[$244+3>>0]<<24);
         $246 = ((($245)) + 13|0);
         $247 = HEAPU8[$246>>0]|(HEAPU8[$246+1>>0]<<8);
         $248 = $1;
         $249 = HEAP32[$248>>2]|0;
         $250 = HEAPU8[$249>>0]|(HEAPU8[$249+1>>0]<<8)|(HEAPU8[$249+2>>0]<<16)|(HEAPU8[$249+3>>0]<<24);
         $251 = ((($250)) + 15|0);
         $252 = HEAPU8[$251>>0]|(HEAPU8[$251+1>>0]<<8);
         __set_error_pos($237,$242,$247,$252);
         $result = 3;
         break L4;
        }
       }
      }
      $253 = $0;
      $254 = $0;
      $255 = ((($254)) + 67|0);
      $256 = HEAPU8[$255>>0]|(HEAPU8[$255+1>>0]<<8)|(HEAPU8[$255+2>>0]<<16)|(HEAPU8[$255+3>>0]<<24);
      $257 = (__set_current_error($253,65,$256)|0);
      $258 = ($257<<24>>24)!=(0);
      if (!($258)) {
       break L4;
      }
      $259 = $0;
      __set_error_pos($259,0,0,0);
      $result = 3;
      break L4;
     }
    } while(0);
    $260 = $0;
    $261 = $1;
    $262 = (_mb_attempt_close_bracket($260,$261)|0);
    $result = $262;
    $263 = $result;
    $264 = ($263|0)!=(0);
    if (!($264)) {
     $265 = $os;
     $266 = $265 & 2;
     $267 = ($266|0)==(0);
     if ($267) {
      $268 = $0;
      $269 = $1;
      ;HEAP32[$ov$byval_copy>>2]=HEAP32[$ov>>2]|0;HEAP32[$ov$byval_copy+4>>2]=HEAP32[$ov+4>>2]|0;
      $270 = (_mb_push_value($268,$269,$ov$byval_copy)|0);
      $result = $270;
     }
    }
   }
  }
 } while(0);
 $271 = $0;
 __assign_public_value($271,$ov,0,1);
 $272 = $result;
 STACKTOP = sp;return ($272|0);
}
function __std_print($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $280 = 0, $281 = 0.0, $282 = 0.0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0;
 var $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0;
 var $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0;
 var $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0;
 var $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0;
 var $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0;
 var $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0;
 var $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0;
 var $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0;
 var $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0;
 var $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0;
 var $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0;
 var $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0;
 var $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $ast = 0, $buf = 0, $got_tostr = 0, $instance = 0, $lbuf = 0, $obj = 0, $or$cond = 0, $or$cond3 = 0, $pathed = 0, $pathed_str = 0, $result = 0, $val_obj = 0;
 var $val_ptr = 0, $vararg_buffer = 0, $vararg_buffer10 = 0, $vararg_buffer14 = 0, $vararg_buffer18 = 0, $vararg_buffer21 = 0, $vararg_buffer24 = 0, $vararg_buffer27 = 0, $vararg_buffer30 = 0, $vararg_buffer33 = 0, $vararg_buffer7 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer33 = sp + 72|0;
 $vararg_buffer30 = sp + 64|0;
 $vararg_buffer27 = sp + 56|0;
 $vararg_buffer24 = sp + 48|0;
 $vararg_buffer21 = sp + 40|0;
 $vararg_buffer18 = sp + 32|0;
 $vararg_buffer14 = sp + 24|0;
 $vararg_buffer10 = sp + 16|0;
 $vararg_buffer7 = sp + 8|0;
 $vararg_buffer = sp;
 $ast = sp + 96|0;
 $val_obj = sp + 161|0;
 $val_ptr = sp + 88|0;
 $buf = sp + 120|0;
 $got_tostr = sp + 112|0;
 $0 = $s;
 $1 = $l;
 $result = 0;
 HEAP32[$ast>>2] = 0;
 $obj = 0;
 HEAP32[$val_ptr>>2] = 0;
 $pathed_str = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),18355,(14591|0));
  // unreachable;
 }
 $6 = $0;
 $7 = ((($6)) + 114|0);
 $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
 $9 = (($8) + 1)|0;
 HEAP8[$7>>0]=$9&255;HEAP8[$7+1>>0]=($9>>8)&255;HEAP8[$7+2>>0]=($9>>16)&255;HEAP8[$7+3>>0]=$9>>24;
 $10 = $1;
 $11 = HEAP32[$10>>2]|0;
 HEAP32[$ast>>2] = $11;
 $12 = HEAP32[$ast>>2]|0;
 $13 = ($12|0)!=(0|0);
 L4: do {
  if ($13) {
   $14 = HEAP32[$ast>>2]|0;
   $15 = ((($14)) + 8|0);
   $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
   $17 = ($16|0)!=(0|0);
   if ($17) {
    $18 = HEAP32[$ast>>2]|0;
    $19 = ((($18)) + 8|0);
    $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8)|(HEAPU8[$19+2>>0]<<16)|(HEAPU8[$19+3>>0]<<24);
    $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
    $22 = ($21|0)!=(0|0);
    if ($22) {
     $54 = HEAP32[$ast>>2]|0;
     $55 = ((($54)) + 8|0);
     $56 = HEAPU8[$55>>0]|(HEAPU8[$55+1>>0]<<8)|(HEAPU8[$55+2>>0]<<16)|(HEAPU8[$55+3>>0]<<24);
     HEAP32[$ast>>2] = $56;
     $57 = HEAP32[$ast>>2]|0;
     $58 = HEAPU8[$57>>0]|(HEAPU8[$57+1>>0]<<8)|(HEAPU8[$57+2>>0]<<16)|(HEAPU8[$57+3>>0]<<24);
     $obj = $58;
     L8: while(1) {
      $pathed_str = 0;
      HEAP32[$val_ptr>>2] = $val_obj;
      $59 = HEAP32[$val_ptr>>2]|0;
      dest=$59; stop=dest+17|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
      $60 = HEAP32[$val_ptr>>2]|0;
      HEAP8[$60>>0]=0&255;HEAP8[$60+1>>0]=(0>>8)&255;HEAP8[$60+2>>0]=(0>>16)&255;HEAP8[$60+3>>0]=0>>24;
      $61 = $obj;
      $62 = HEAPU8[$61>>0]|(HEAPU8[$61+1>>0]<<8)|(HEAPU8[$61+2>>0]<<16)|(HEAPU8[$61+3>>0]<<24);
      L10: do {
       switch ($62|0) {
       case 9:  {
        $63 = $obj;
        $64 = ((($63)) + 4|0);
        $65 = HEAPU8[$64>>0]|(HEAPU8[$64+1>>0]<<8)|(HEAPU8[$64+2>>0]<<16)|(HEAPU8[$64+3>>0]<<24);
        $66 = ((($65)) + 4|0);
        $67 = HEAPU8[$66>>0]|(HEAPU8[$66+1>>0]<<8)|(HEAPU8[$66+2>>0]<<16)|(HEAPU8[$66+3>>0]<<24);
        $68 = HEAPU8[$67>>0]|(HEAPU8[$67+1>>0]<<8)|(HEAPU8[$67+2>>0]<<16)|(HEAPU8[$67+3>>0]<<24);
        $69 = ($68|0)==(17);
        $70 = $obj;
        $71 = ((($70)) + 4|0);
        $72 = HEAPU8[$71>>0]|(HEAPU8[$71+1>>0]<<8)|(HEAPU8[$71+2>>0]<<16)|(HEAPU8[$71+3>>0]<<24);
        if ($69) {
         $73 = ((($72)) + 4|0);
         $74 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
         $obj = $74;
         $75 = $0;
         $76 = $obj;
         $77 = (__eval_var_in_print($75,$val_ptr,$ast,$76)|0);
         HEAP32[$val_ptr>>2] = $77;
         label = 49;
         break L10;
        }
        $78 = ((($72)) + 8|0);
        $79 = HEAP8[$78>>0]|0;
        $80 = $79 & 3;
        $81 = ($80<<24>>24)!=(0);
        if ($81) {
         $82 = $0;
         $83 = $obj;
         $84 = ((($83)) + 4|0);
         $85 = HEAPU8[$84>>0]|(HEAPU8[$84+1>>0]<<8)|(HEAPU8[$84+2>>0]<<16)|(HEAPU8[$84+3>>0]<<24);
         $86 = HEAPU8[$85>>0]|(HEAPU8[$85+1>>0]<<8)|(HEAPU8[$85+2>>0]<<16)|(HEAPU8[$85+3>>0]<<24);
         $87 = $obj;
         $88 = ((($87)) + 4|0);
         $89 = HEAPU8[$88>>0]|(HEAPU8[$88+1>>0]<<8)|(HEAPU8[$88+2>>0]<<16)|(HEAPU8[$88+3>>0]<<24);
         $90 = ((($89)) + 8|0);
         $91 = HEAP8[$90>>0]|0;
         $92 = $91 & 3;
         $93 = ($92<<24>>24)!=(0);
         $94 = $93 ^ 1;
         $95 = $94 ^ 1;
         $96 = $95 ? 2 : 0;
         $97 = (__search_identifier_in_scope_chain($82,0,$86,$96,0,0)|0);
         $pathed = $97;
         $98 = $pathed;
         $99 = ($98|0)!=(0|0);
         if ($99) {
          $100 = $pathed;
          $101 = HEAPU8[$100>>0]|(HEAPU8[$100+1>>0]<<8)|(HEAPU8[$100+2>>0]<<16)|(HEAPU8[$100+3>>0]<<24);
          $102 = ($101|0)!=(0|0);
          if ($102) {
           $103 = $obj;
           $104 = $pathed;
           $105 = HEAPU8[$104>>0]|(HEAPU8[$104+1>>0]<<8)|(HEAPU8[$104+2>>0]<<16)|(HEAPU8[$104+3>>0]<<24);
           $106 = ($103|0)!=($105|0);
           if ($106) {
            $107 = $pathed;
            $108 = HEAPU8[$107>>0]|(HEAPU8[$107+1>>0]<<8)|(HEAPU8[$107+2>>0]<<16)|(HEAPU8[$107+3>>0]<<24);
            $obj = $108;
            $109 = $0;
            $110 = $obj;
            $111 = (__eval_var_in_print($109,$val_ptr,$ast,$110)|0);
            HEAP32[$val_ptr>>2] = $111;
            $112 = HEAP32[$val_ptr>>2]|0;
            $113 = HEAPU8[$112>>0]|(HEAPU8[$112+1>>0]<<8)|(HEAPU8[$112+2>>0]<<16)|(HEAPU8[$112+3>>0]<<24);
            $114 = ($113|0)==(4);
            if ($114) {
             $pathed_str = 1;
             label = 49;
            } else {
             label = 49;
            }
           } else {
            label = 49;
           }
          } else {
           label = 49;
          }
         } else {
          label = 49;
         }
        } else {
         label = 22;
        }
        break;
       }
       case 17: case 8: case 16: case 5: case 4: case 3: case 2: case 0: case 10:  {
        label = 22;
        break;
       }
       case 19:  {
        break;
       }
       default: {
        label = 80;
        break L8;
       }
       }
      } while(0);
      L20: do {
       if ((label|0) == 22) {
        label = 0;
        $115 = $0;
        $116 = (__calc_expression($115,$ast,$val_ptr)|0);
        $result = $116;
        $117 = HEAP32[$val_ptr>>2]|0;
        $118 = HEAPU8[$117>>0]|(HEAPU8[$117+1>>0]<<8)|(HEAPU8[$117+2>>0]<<16)|(HEAPU8[$117+3>>0]<<24);
        $119 = ($118|0)==(17);
        if ($119) {
         $120 = HEAP32[$val_ptr>>2]|0;
         $121 = ((($120)) + 4|0);
         $122 = HEAPU8[$121>>0]|(HEAPU8[$121+1>>0]<<8)|(HEAPU8[$121+2>>0]<<16)|(HEAPU8[$121+3>>0]<<24);
         $123 = ((($122)) + 58|0);
         $124 = HEAPU8[$123>>0]|(HEAPU8[$123+1>>0]<<8)|(HEAPU8[$123+2>>0]<<16)|(HEAPU8[$123+3>>0]<<24);
         $125 = ($124|0)!=(2);
         if ($125) {
          $126 = HEAP32[$val_ptr>>2]|0;
          $127 = ((($126)) + 8|0);
          $128 = HEAP8[$127>>0]|0;
          $129 = $128 & -2;
          $130 = $129 | 1;
          HEAP8[$127>>0] = $130;
         }
        }
        $131 = HEAP32[$val_ptr>>2]|0;
        $132 = HEAPU8[$131>>0]|(HEAPU8[$131+1>>0]<<8)|(HEAPU8[$131+2>>0]<<16)|(HEAPU8[$131+3>>0]<<24);
        switch ($132|0) {
        case 7:  {
         $133 = HEAP32[$val_ptr>>2]|0;
         $134 = ((($133)) + 4|0);
         $135 = HEAPU8[$134>>0]|(HEAPU8[$134+1>>0]<<8)|(HEAPU8[$134+2>>0]<<16)|(HEAPU8[$134+3>>0]<<24);
         $136 = HEAP32[$val_ptr>>2]|0;
         $137 = ((($136)) + 4|0);
         $138 = HEAPU8[$137>>0]|(HEAPU8[$137+1>>0]<<8)|(HEAPU8[$137+2>>0]<<16)|(HEAPU8[$137+3>>0]<<24);
         (__ref($135,$138)|0);
         break;
        }
        case 10:  {
         $139 = HEAP32[$val_ptr>>2]|0;
         $140 = ((($139)) + 8|0);
         $141 = HEAP8[$140>>0]|0;
         $142 = $141 & 1;
         $143 = ($142<<24>>24)!=(0);
         if (!($143)) {
          $144 = HEAP32[$val_ptr>>2]|0;
          $145 = ((($144)) + 4|0);
          $146 = HEAPU8[$145>>0]|(HEAPU8[$145+1>>0]<<8)|(HEAPU8[$145+2>>0]<<16)|(HEAPU8[$145+3>>0]<<24);
          $147 = HEAP32[$val_ptr>>2]|0;
          $148 = ((($147)) + 4|0);
          $149 = HEAPU8[$148>>0]|(HEAPU8[$148+1>>0]<<8)|(HEAPU8[$148+2>>0]<<16)|(HEAPU8[$148+3>>0]<<24);
          (__ref($146,$149)|0);
         }
         break;
        }
        case 11:  {
         $150 = HEAP32[$val_ptr>>2]|0;
         $151 = ((($150)) + 4|0);
         $152 = HEAPU8[$151>>0]|(HEAPU8[$151+1>>0]<<8)|(HEAPU8[$151+2>>0]<<16)|(HEAPU8[$151+3>>0]<<24);
         $153 = HEAP32[$val_ptr>>2]|0;
         $154 = ((($153)) + 4|0);
         $155 = HEAPU8[$154>>0]|(HEAPU8[$154+1>>0]<<8)|(HEAPU8[$154+2>>0]<<16)|(HEAPU8[$154+3>>0]<<24);
         (__ref($152,$155)|0);
         break;
        }
        case 13:  {
         $156 = HEAP32[$val_ptr>>2]|0;
         $157 = ((($156)) + 4|0);
         $158 = HEAPU8[$157>>0]|(HEAPU8[$157+1>>0]<<8)|(HEAPU8[$157+2>>0]<<16)|(HEAPU8[$157+3>>0]<<24);
         $159 = HEAP32[$val_ptr>>2]|0;
         $160 = ((($159)) + 4|0);
         $161 = HEAPU8[$160>>0]|(HEAPU8[$160+1>>0]<<8)|(HEAPU8[$160+2>>0]<<16)|(HEAPU8[$160+3>>0]<<24);
         (__ref($158,$161)|0);
         break;
        }
        case 16:  {
         $162 = HEAP32[$val_ptr>>2]|0;
         $163 = ((($162)) + 4|0);
         $164 = HEAPU8[$163>>0]|(HEAPU8[$163+1>>0]<<8)|(HEAPU8[$163+2>>0]<<16)|(HEAPU8[$163+3>>0]<<24);
         $165 = HEAP32[$val_ptr>>2]|0;
         $166 = ((($165)) + 4|0);
         $167 = HEAPU8[$166>>0]|(HEAPU8[$166+1>>0]<<8)|(HEAPU8[$166+2>>0]<<16)|(HEAPU8[$166+3>>0]<<24);
         (__ref($164,$167)|0);
         break;
        }
        case 17:  {
         $168 = HEAP32[$val_ptr>>2]|0;
         $169 = ((($168)) + 8|0);
         $170 = HEAP8[$169>>0]|0;
         $171 = $170 & 1;
         $172 = ($171<<24>>24)!=(0);
         if (!($172)) {
          $173 = HEAP32[$val_ptr>>2]|0;
          $174 = ((($173)) + 4|0);
          $175 = HEAPU8[$174>>0]|(HEAPU8[$174+1>>0]<<8)|(HEAPU8[$174+2>>0]<<16)|(HEAPU8[$174+3>>0]<<24);
          $176 = ((($175)) + 58|0);
          $177 = HEAPU8[$176>>0]|(HEAPU8[$176+1>>0]<<8)|(HEAPU8[$176+2>>0]<<16)|(HEAPU8[$176+3>>0]<<24);
          $178 = ($177|0)==(2);
          if ($178) {
           $179 = HEAP32[$val_ptr>>2]|0;
           $180 = ((($179)) + 4|0);
           $181 = HEAPU8[$180>>0]|(HEAPU8[$180+1>>0]<<8)|(HEAPU8[$180+2>>0]<<16)|(HEAPU8[$180+3>>0]<<24);
           $182 = HEAP32[$val_ptr>>2]|0;
           $183 = ((($182)) + 4|0);
           $184 = HEAPU8[$183>>0]|(HEAPU8[$183+1>>0]<<8)|(HEAPU8[$183+2>>0]<<16)|(HEAPU8[$183+3>>0]<<24);
           (__ref($181,$184)|0);
          }
         }
         break;
        }
        default: {
        }
        }
        $185 = HEAP32[$val_ptr>>2]|0;
        $186 = HEAPU8[$185>>0]|(HEAPU8[$185+1>>0]<<8)|(HEAPU8[$185+2>>0]<<16)|(HEAPU8[$185+3>>0]<<24);
        switch ($186|0) {
        case 7:  {
         $187 = HEAP32[$val_ptr>>2]|0;
         $188 = ((($187)) + 4|0);
         $189 = HEAPU8[$188>>0]|(HEAPU8[$188+1>>0]<<8)|(HEAPU8[$188+2>>0]<<16)|(HEAPU8[$188+3>>0]<<24);
         $190 = HEAP32[$val_ptr>>2]|0;
         $191 = ((($190)) + 4|0);
         $192 = HEAPU8[$191>>0]|(HEAPU8[$191+1>>0]<<8)|(HEAPU8[$191+2>>0]<<16)|(HEAPU8[$191+3>>0]<<24);
         (__unref($189,$192)|0);
         label = 49;
         break L20;
         break;
        }
        case 10:  {
         $193 = HEAP32[$val_ptr>>2]|0;
         $194 = ((($193)) + 8|0);
         $195 = HEAP8[$194>>0]|0;
         $196 = $195 & 1;
         $197 = ($196<<24>>24)!=(0);
         if ($197) {
          label = 49;
          break L20;
         }
         $198 = HEAP32[$val_ptr>>2]|0;
         $199 = ((($198)) + 4|0);
         $200 = HEAPU8[$199>>0]|(HEAPU8[$199+1>>0]<<8)|(HEAPU8[$199+2>>0]<<16)|(HEAPU8[$199+3>>0]<<24);
         $201 = HEAP32[$val_ptr>>2]|0;
         $202 = ((($201)) + 4|0);
         $203 = HEAPU8[$202>>0]|(HEAPU8[$202+1>>0]<<8)|(HEAPU8[$202+2>>0]<<16)|(HEAPU8[$202+3>>0]<<24);
         (__unref($200,$203)|0);
         label = 49;
         break L20;
         break;
        }
        case 11:  {
         $204 = HEAP32[$val_ptr>>2]|0;
         $205 = ((($204)) + 4|0);
         $206 = HEAPU8[$205>>0]|(HEAPU8[$205+1>>0]<<8)|(HEAPU8[$205+2>>0]<<16)|(HEAPU8[$205+3>>0]<<24);
         $207 = HEAP32[$val_ptr>>2]|0;
         $208 = ((($207)) + 4|0);
         $209 = HEAPU8[$208>>0]|(HEAPU8[$208+1>>0]<<8)|(HEAPU8[$208+2>>0]<<16)|(HEAPU8[$208+3>>0]<<24);
         (__unref($206,$209)|0);
         label = 49;
         break L20;
         break;
        }
        case 13:  {
         $210 = HEAP32[$val_ptr>>2]|0;
         $211 = ((($210)) + 4|0);
         $212 = HEAPU8[$211>>0]|(HEAPU8[$211+1>>0]<<8)|(HEAPU8[$211+2>>0]<<16)|(HEAPU8[$211+3>>0]<<24);
         $213 = HEAP32[$val_ptr>>2]|0;
         $214 = ((($213)) + 4|0);
         $215 = HEAPU8[$214>>0]|(HEAPU8[$214+1>>0]<<8)|(HEAPU8[$214+2>>0]<<16)|(HEAPU8[$214+3>>0]<<24);
         (__unref($212,$215)|0);
         label = 49;
         break L20;
         break;
        }
        case 16:  {
         $216 = HEAP32[$val_ptr>>2]|0;
         $217 = ((($216)) + 8|0);
         $218 = HEAP8[$217>>0]|0;
         $219 = $218 & 1;
         $220 = ($219<<24>>24)!=(0);
         if ($220) {
          label = 49;
          break L20;
         }
         $221 = HEAP32[$val_ptr>>2]|0;
         $222 = ((($221)) + 4|0);
         $223 = HEAPU8[$222>>0]|(HEAPU8[$222+1>>0]<<8)|(HEAPU8[$222+2>>0]<<16)|(HEAPU8[$222+3>>0]<<24);
         $224 = HEAP32[$val_ptr>>2]|0;
         $225 = ((($224)) + 4|0);
         $226 = HEAPU8[$225>>0]|(HEAPU8[$225+1>>0]<<8)|(HEAPU8[$225+2>>0]<<16)|(HEAPU8[$225+3>>0]<<24);
         (__unref($223,$226)|0);
         label = 49;
         break L20;
         break;
        }
        case 17:  {
         $227 = HEAP32[$val_ptr>>2]|0;
         $228 = ((($227)) + 8|0);
         $229 = HEAP8[$228>>0]|0;
         $230 = $229 & 1;
         $231 = ($230<<24>>24)!=(0);
         if (!($231)) {
          $232 = HEAP32[$val_ptr>>2]|0;
          $233 = ((($232)) + 4|0);
          $234 = HEAPU8[$233>>0]|(HEAPU8[$233+1>>0]<<8)|(HEAPU8[$233+2>>0]<<16)|(HEAPU8[$233+3>>0]<<24);
          $235 = ((($234)) + 58|0);
          $236 = HEAPU8[$235>>0]|(HEAPU8[$235+1>>0]<<8)|(HEAPU8[$235+2>>0]<<16)|(HEAPU8[$235+3>>0]<<24);
          $237 = ($236|0)==(2);
          if ($237) {
           $238 = HEAP32[$val_ptr>>2]|0;
           $239 = ((($238)) + 4|0);
           $240 = HEAPU8[$239>>0]|(HEAPU8[$239+1>>0]<<8)|(HEAPU8[$239+2>>0]<<16)|(HEAPU8[$239+3>>0]<<24);
           $241 = HEAP32[$val_ptr>>2]|0;
           $242 = ((($241)) + 4|0);
           $243 = HEAPU8[$242>>0]|(HEAPU8[$242+1>>0]<<8)|(HEAPU8[$242+2>>0]<<16)|(HEAPU8[$242+3>>0]<<24);
           (__unref($240,$243)|0);
           label = 49;
           break L20;
          }
         }
         $244 = HEAP32[$val_ptr>>2]|0;
         $245 = ((($244)) + 8|0);
         $246 = HEAP8[$245>>0]|0;
         $247 = $246 & 1;
         $248 = ($247<<24>>24)!=(0);
         if ($248) {
          label = 49;
          break L20;
         }
         $249 = HEAP32[$val_ptr>>2]|0;
         $250 = ((($249)) + 4|0);
         $251 = HEAPU8[$250>>0]|(HEAPU8[$250+1>>0]<<8)|(HEAPU8[$250+2>>0]<<16)|(HEAPU8[$250+3>>0]<<24);
         $252 = ((($251)) + 58|0);
         $253 = HEAPU8[$252>>0]|(HEAPU8[$252+1>>0]<<8)|(HEAPU8[$252+2>>0]<<16)|(HEAPU8[$252+3>>0]<<24);
         $254 = ($253|0)!=(2);
         if (!($254)) {
          label = 49;
          break L20;
         }
         $255 = HEAP32[$val_ptr>>2]|0;
         $256 = ((($255)) + 4|0);
         $257 = HEAPU8[$256>>0]|(HEAPU8[$256+1>>0]<<8)|(HEAPU8[$256+2>>0]<<16)|(HEAPU8[$256+3>>0]<<24);
         __destroy_routine(0,$257);
         label = 49;
         break L20;
         break;
        }
        default: {
         label = 49;
         break L20;
        }
        }
       }
      } while(0);
      if ((label|0) == 49) {
       while(1) {
        label = 0;
        $258 = HEAP32[$val_ptr>>2]|0;
        $259 = HEAPU8[$258>>0]|(HEAPU8[$258+1>>0]<<8)|(HEAPU8[$258+2>>0]<<16)|(HEAPU8[$258+3>>0]<<24);
        $260 = ($259|0)==(0);
        if ($260) {
         label = 50;
         break;
        }
        $264 = HEAP32[$val_ptr>>2]|0;
        $265 = HEAPU8[$264>>0]|(HEAPU8[$264+1>>0]<<8)|(HEAPU8[$264+2>>0]<<16)|(HEAPU8[$264+3>>0]<<24);
        $266 = ($265|0)==(2);
        if ($266) {
         label = 52;
         break;
        }
        $273 = HEAP32[$val_ptr>>2]|0;
        $274 = HEAPU8[$273>>0]|(HEAPU8[$273+1>>0]<<8)|(HEAPU8[$273+2>>0]<<16)|(HEAPU8[$273+3>>0]<<24);
        $275 = ($274|0)==(3);
        if ($275) {
         label = 54;
         break;
        }
        $283 = HEAP32[$val_ptr>>2]|0;
        $284 = HEAPU8[$283>>0]|(HEAPU8[$283+1>>0]<<8)|(HEAPU8[$283+2>>0]<<16)|(HEAPU8[$283+3>>0]<<24);
        $285 = ($284|0)==(4);
        if ($285) {
         label = 56;
         break;
        }
        $308 = HEAP32[$val_ptr>>2]|0;
        $309 = HEAPU8[$308>>0]|(HEAPU8[$308+1>>0]<<8)|(HEAPU8[$308+2>>0]<<16)|(HEAPU8[$308+3>>0]<<24);
        $310 = ($309|0)==(7);
        $311 = HEAP32[$val_ptr>>2]|0;
        if ($310) {
         label = 62;
         break;
        }
        $347 = HEAPU8[$311>>0]|(HEAPU8[$311+1>>0]<<8)|(HEAPU8[$311+2>>0]<<16)|(HEAPU8[$311+3>>0]<<24);
        $348 = ($347|0)==(5);
        if ($348) {
         label = 69;
         break;
        }
        $356 = HEAP32[$val_ptr>>2]|0;
        $357 = HEAPU8[$356>>0]|(HEAPU8[$356+1>>0]<<8)|(HEAPU8[$356+2>>0]<<16)|(HEAPU8[$356+3>>0]<<24);
        $358 = ($357|0)==(16);
        if (!($358)) {
         label = 75;
         break;
        }
        HEAP8[$got_tostr>>0] = 0;
        $359 = HEAP32[$val_ptr>>2]|0;
        $360 = ((($359)) + 4|0);
        $361 = HEAPU8[$360>>0]|(HEAPU8[$360+1>>0]<<8)|(HEAPU8[$360+2>>0]<<16)|(HEAPU8[$360+3>>0]<<24);
        $instance = $361;
        HEAP32[$val_ptr>>2] = $val_obj;
        $362 = HEAP32[$val_ptr>>2]|0;
        dest=$362; stop=dest+17|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
        $363 = HEAP32[$val_ptr>>2]|0;
        HEAP8[$363>>0]=0&255;HEAP8[$363+1>>0]=(0>>8)&255;HEAP8[$363+2>>0]=(0>>16)&255;HEAP8[$363+3>>0]=0>>24;
        $364 = $0;
        $365 = $instance;
        $366 = HEAP32[$val_ptr>>2]|0;
        $367 = (__format_class_to_string($364,$ast,$365,$366,$got_tostr)|0);
        $result = $367;
        $368 = ($367|0)==(0);
        if (!($368)) {
         break L4;
        }
        $369 = HEAP8[$got_tostr>>0]|0;
        $370 = ($369<<24>>24)!=(0);
        if (!($370)) {
         label = 74;
         break;
        }
        $371 = HEAP32[$val_ptr>>2]|0;
        $obj = $371;
        label = 49;
       }
       do {
        if ((label|0) == 50) {
         label = 0;
         $261 = $0;
         $262 = (__get_printer($261)|0);
         $263 = $0;
         (FUNCTION_TABLE_iiii[$262 & 255]($263,4612,$vararg_buffer)|0);
        }
        else if ((label|0) == 52) {
         label = 0;
         $267 = $0;
         $268 = (__get_printer($267)|0);
         $269 = $0;
         $270 = HEAP32[$val_ptr>>2]|0;
         $271 = ((($270)) + 4|0);
         $272 = HEAPU8[$271>>0]|(HEAPU8[$271+1>>0]<<8)|(HEAPU8[$271+2>>0]<<16)|(HEAPU8[$271+3>>0]<<24);
         HEAP32[$vararg_buffer7>>2] = $272;
         (FUNCTION_TABLE_iiii[$268 & 255]($269,14602,$vararg_buffer7)|0);
        }
        else if ((label|0) == 54) {
         label = 0;
         $276 = $0;
         $277 = (__get_printer($276)|0);
         $278 = $0;
         $279 = HEAP32[$val_ptr>>2]|0;
         $280 = ((($279)) + 4|0);
         HEAP8[tempDoublePtr>>0]=HEAP8[$280>>0];HEAP8[tempDoublePtr+1>>0]=HEAP8[$280+1>>0];HEAP8[tempDoublePtr+2>>0]=HEAP8[$280+2>>0];HEAP8[tempDoublePtr+3>>0]=HEAP8[$280+3>>0];$281 = +HEAPF32[tempDoublePtr>>2];
         $282 = $281;
         HEAPF64[$vararg_buffer10>>3] = $282;
         (FUNCTION_TABLE_iiii[$277 & 255]($278,14605,$vararg_buffer10)|0);
        }
        else if ((label|0) == 56) {
         label = 0;
         $286 = $0;
         $287 = HEAP32[$val_ptr>>2]|0;
         __print_string($286,$287);
         $288 = HEAP32[$val_ptr>>2]|0;
         $289 = ((($288)) + 8|0);
         $290 = HEAP8[$289>>0]|0;
         $291 = $290 & 1;
         $292 = ($291<<24>>24)!=(0);
         if (!($292)) {
          $293 = HEAP32[$val_ptr>>2]|0;
          $294 = ((($293)) + 4|0);
          $295 = HEAPU8[$294>>0]|(HEAPU8[$294+1>>0]<<8)|(HEAPU8[$294+2>>0]<<16)|(HEAPU8[$294+3>>0]<<24);
          $296 = ($295|0)==(0|0);
          $297 = $pathed_str;
          $298 = ($297<<24>>24)!=(0);
          $or$cond3 = $296 | $298;
          if (!($or$cond3)) {
           $299 = HEAP32[$val_ptr>>2]|0;
           $300 = ((($299)) + 4|0);
           $301 = HEAPU8[$300>>0]|(HEAPU8[$300+1>>0]<<8)|(HEAPU8[$300+2>>0]<<16)|(HEAPU8[$300+3>>0]<<24);
           $302 = ($301|0)!=(0|0);
           if (!($302)) {
            label = 60;
            break L8;
           }
           $303 = HEAP32[$val_ptr>>2]|0;
           $304 = ((($303)) + 4|0);
           $305 = HEAPU8[$304>>0]|(HEAPU8[$304+1>>0]<<8)|(HEAPU8[$304+2>>0]<<16)|(HEAPU8[$304+3>>0]<<24);
           _mb_free($305);
           $306 = HEAP32[$val_ptr>>2]|0;
           $307 = ((($306)) + 4|0);
           HEAP8[$307>>0]=0&255;HEAP8[$307+1>>0]=(0>>8)&255;HEAP8[$307+2>>0]=(0>>16)&255;HEAP8[$307+3>>0]=0>>24;
          }
         }
        }
        else if ((label|0) == 62) {
         label = 0;
         $312 = ((($311)) + 4|0);
         $313 = HEAPU8[$312>>0]|(HEAPU8[$312+1>>0]<<8)|(HEAPU8[$312+2>>0]<<16)|(HEAPU8[$312+3>>0]<<24);
         $314 = ((($313)) + 37|0);
         $315 = HEAPU8[$314>>0]|(HEAPU8[$314+1>>0]<<8)|(HEAPU8[$314+2>>0]<<16)|(HEAPU8[$314+3>>0]<<24);
         $316 = ($315|0)!=(0|0);
         if (!($316)) {
          $340 = $0;
          $341 = (__get_printer($340)|0);
          $342 = $0;
          $343 = HEAP32[$val_ptr>>2]|0;
          $344 = HEAPU8[$343>>0]|(HEAPU8[$343+1>>0]<<8)|(HEAPU8[$343+2>>0]<<16)|(HEAPU8[$343+3>>0]<<24);
          $345 = (__internal_type_to_public_type($344)|0);
          $346 = (_mb_get_type_string($345)|0);
          (FUNCTION_TABLE_iiii[$341 & 255]($342,$346,$vararg_buffer18)|0);
          break;
         }
         $lbuf = 0;
         __init_dynamic_buffer($buf);
         while(1) {
          $317 = HEAP32[$val_ptr>>2]|0;
          $318 = ((($317)) + 4|0);
          $319 = HEAPU8[$318>>0]|(HEAPU8[$318+1>>0]<<8)|(HEAPU8[$318+2>>0]<<16)|(HEAPU8[$318+3>>0]<<24);
          $320 = ((($319)) + 37|0);
          $321 = HEAPU8[$320>>0]|(HEAPU8[$320+1>>0]<<8)|(HEAPU8[$320+2>>0]<<16)|(HEAPU8[$320+3>>0]<<24);
          $322 = $0;
          $323 = HEAP32[$val_ptr>>2]|0;
          $324 = ((($323)) + 4|0);
          $325 = HEAPU8[$324>>0]|(HEAPU8[$324+1>>0]<<8)|(HEAPU8[$324+2>>0]<<16)|(HEAPU8[$324+3>>0]<<24);
          $326 = ((($325)) + 17|0);
          $327 = HEAPU8[$326>>0]|(HEAPU8[$326+1>>0]<<8)|(HEAPU8[$326+2>>0]<<16)|(HEAPU8[$326+3>>0]<<24);
          $328 = ((($buf)) + 32|0);
          $329 = HEAPU8[$328>>0]|(HEAPU8[$328+1>>0]<<8)|(HEAPU8[$328+2>>0]<<16)|(HEAPU8[$328+3>>0]<<24);
          $330 = (__countof_dynamic_buffer($buf,1)|0);
          $331 = (FUNCTION_TABLE_iiiii[$321 & 255]($322,$327,$329,$330)|0);
          $lbuf = $331;
          $332 = (__countof_dynamic_buffer($buf,1)|0);
          $333 = ($331>>>0)>($332>>>0);
          if (!($333)) {
           break;
          }
          $334 = $lbuf;
          __resize_dynamic_buffer($buf,1,$334);
         }
         $335 = $0;
         $336 = (__get_printer($335)|0);
         $337 = $0;
         $338 = ((($buf)) + 32|0);
         $339 = HEAPU8[$338>>0]|(HEAPU8[$338+1>>0]<<8)|(HEAPU8[$338+2>>0]<<16)|(HEAPU8[$338+3>>0]<<24);
         HEAP32[$vararg_buffer14>>2] = $339;
         (FUNCTION_TABLE_iiii[$336 & 255]($337,14562,$vararg_buffer14)|0);
         __dispose_dynamic_buffer($buf);
        }
        else if ((label|0) == 69) {
         label = 0;
         $349 = $0;
         $350 = (__get_printer($349)|0);
         $351 = $0;
         $352 = HEAP32[$val_ptr>>2]|0;
         $353 = ((($352)) + 4|0);
         $354 = HEAPU8[$353>>0]|(HEAPU8[$353+1>>0]<<8)|(HEAPU8[$353+2>>0]<<16)|(HEAPU8[$353+3>>0]<<24);
         $355 = (_mb_get_type_string($354)|0);
         (FUNCTION_TABLE_iiii[$350 & 255]($351,$355,$vararg_buffer21)|0);
        }
        else if ((label|0) == 74) {
         label = 0;
         $372 = $0;
         $373 = (__get_printer($372)|0);
         $374 = $0;
         $375 = (__internal_type_to_public_type(16)|0);
         $376 = (_mb_get_type_string($375)|0);
         (FUNCTION_TABLE_iiii[$373 & 255]($374,$376,$vararg_buffer24)|0);
        }
        else if ((label|0) == 75) {
         label = 0;
         $377 = $0;
         $378 = (__get_printer($377)|0);
         $379 = $0;
         $380 = HEAP32[$val_ptr>>2]|0;
         $381 = HEAPU8[$380>>0]|(HEAPU8[$380+1>>0]<<8)|(HEAPU8[$380+2>>0]<<16)|(HEAPU8[$380+3>>0]<<24);
         $382 = (__internal_type_to_public_type($381)|0);
         $383 = (_mb_get_type_string($382)|0);
         (FUNCTION_TABLE_iiii[$378 & 255]($379,$383,$vararg_buffer27)|0);
        }
       } while(0);
       $384 = $result;
       $385 = ($384|0)!=(0);
       if ($385) {
        break L4;
       }
      }
      $386 = HEAP32[$ast>>2]|0;
      $387 = ($386|0)!=(0|0);
      if ($387) {
       $388 = HEAP32[$ast>>2]|0;
       $389 = HEAPU8[$388>>0]|(HEAPU8[$388+1>>0]<<8)|(HEAPU8[$388+2>>0]<<16)|(HEAPU8[$388+3>>0]<<24);
       $obj = $389;
       $390 = $obj;
       $391 = ((($390)) + 4|0);
       $392 = HEAP8[$391>>0]|0;
       $393 = $392 << 24 >> 24;
       $394 = ($393|0)!=(44);
       if ($394) {
        $395 = $0;
        $396 = (__get_printer($395)|0);
        $397 = $0;
        (FUNCTION_TABLE_iiii[$396 & 255]($397,14608,$vararg_buffer30)|0);
       }
      }
      $429 = HEAP32[$ast>>2]|0;
      $430 = ($429|0)!=(0|0);
      if (!($430)) {
       break L4;
      }
      $431 = HEAP32[$ast>>2]|0;
      $432 = HEAPU8[$431>>0]|(HEAPU8[$431+1>>0]<<8)|(HEAPU8[$431+2>>0]<<16)|(HEAPU8[$431+3>>0]<<24);
      $obj = $432;
      $433 = $0;
      $434 = $obj;
      $435 = (__is_print_terminal($433,$434)|0);
      $436 = ($435<<24>>24)!=(0);
      if ($436) {
       break L4;
      }
      $437 = $obj;
      $438 = HEAPU8[$437>>0]|(HEAPU8[$437+1>>0]<<8)|(HEAPU8[$437+2>>0]<<16)|(HEAPU8[$437+3>>0]<<24);
      $439 = ($438|0)==(19);
      if ($439) {
       $440 = $obj;
       $441 = ((($440)) + 4|0);
       $442 = HEAP8[$441>>0]|0;
       $443 = $442 << 24 >> 24;
       $444 = ($443|0)==(44);
       if (!($444)) {
        label = 90;
       }
      } else {
       label = 90;
      }
      if ((label|0) == 90) {
       label = 0;
       $445 = $obj;
       $446 = HEAPU8[$445>>0]|(HEAPU8[$445+1>>0]<<8)|(HEAPU8[$445+2>>0]<<16)|(HEAPU8[$445+3>>0]<<24);
       $447 = ($446|0)==(19);
       if (!($447)) {
        label = 93;
        break;
       }
       $448 = $obj;
       $449 = ((($448)) + 4|0);
       $450 = HEAP8[$449>>0]|0;
       $451 = $450 << 24 >> 24;
       $452 = ($451|0)==(59);
       if (!($452)) {
        label = 93;
        break;
       }
      }
      $453 = HEAP32[$ast>>2]|0;
      $454 = ((($453)) + 8|0);
      $455 = HEAPU8[$454>>0]|(HEAPU8[$454+1>>0]<<8)|(HEAPU8[$454+2>>0]<<16)|(HEAPU8[$454+3>>0]<<24);
      HEAP32[$ast>>2] = $455;
      $456 = HEAP32[$ast>>2]|0;
      $457 = HEAPU8[$456>>0]|(HEAPU8[$456+1>>0]<<8)|(HEAPU8[$456+2>>0]<<16)|(HEAPU8[$456+3>>0]<<24);
      $obj = $457;
      $458 = HEAP32[$ast>>2]|0;
      $459 = ($458|0)!=(0|0);
      if (!($459)) {
       break L4;
      }
      $491 = $obj;
      $492 = HEAPU8[$491>>0]|(HEAPU8[$491+1>>0]<<8)|(HEAPU8[$491+2>>0]<<16)|(HEAPU8[$491+3>>0]<<24);
      $493 = ($492|0)==(19);
      if ($493) {
       $494 = $obj;
       $495 = ((($494)) + 4|0);
       $496 = HEAP8[$495>>0]|0;
       $497 = $496 << 24 >> 24;
       $498 = ($497|0)==(58);
       if ($498) {
        break L4;
       }
      }
      $499 = $obj;
      $500 = HEAPU8[$499>>0]|(HEAPU8[$499+1>>0]<<8)|(HEAPU8[$499+2>>0]<<16)|(HEAPU8[$499+3>>0]<<24);
      $501 = ($500|0)==(8);
      if ($501) {
       $502 = $obj;
       $503 = ((($502)) + 4|0);
       $504 = HEAPU8[$503>>0]|(HEAPU8[$503+1>>0]<<8)|(HEAPU8[$503+2>>0]<<16)|(HEAPU8[$503+3>>0]<<24);
       $505 = ((($504)) + 4|0);
       $506 = HEAPU8[$505>>0]|(HEAPU8[$505+1>>0]<<8)|(HEAPU8[$505+2>>0]<<16)|(HEAPU8[$505+3>>0]<<24);
       $507 = ($506|0)==(8|0);
       if ($507) {
        break L4;
       }
      }
      $508 = $obj;
      $509 = HEAPU8[$508>>0]|(HEAPU8[$508+1>>0]<<8)|(HEAPU8[$508+2>>0]<<16)|(HEAPU8[$508+3>>0]<<24);
      $510 = ($509|0)==(19);
      if ($510) {
       continue;
      }
      $511 = $0;
      $512 = $obj;
      $513 = (__is_expression_terminal($511,$512)|0);
      $514 = ($513<<24>>24)!=(0);
      $515 = $514 ^ 1;
      if (!($515)) {
       break L4;
      }
     }
     if ((label|0) == 60) {
      ___assert_fail((4369|0),(4322|0),18435,(14591|0));
      // unreachable;
     }
     else if ((label|0) == 80) {
      $398 = HEAP32[$ast>>2]|0;
      $399 = ($398|0)!=(0|0);
      if ($399) {
       $400 = HEAP32[$ast>>2]|0;
       $401 = HEAPU8[$400>>0]|(HEAPU8[$400+1>>0]<<8)|(HEAPU8[$400+2>>0]<<16)|(HEAPU8[$400+3>>0]<<24);
       $402 = ($401|0)!=(0|0);
       if ($402) {
        $403 = $0;
        $404 = $0;
        $405 = ((($404)) + 67|0);
        $406 = HEAPU8[$405>>0]|(HEAPU8[$405+1>>0]<<8)|(HEAPU8[$405+2>>0]<<16)|(HEAPU8[$405+3>>0]<<24);
        $407 = (__set_current_error($403,3,$406)|0);
        $408 = ($407<<24>>24)!=(0);
        if (!($408)) {
         break;
        }
        $409 = $0;
        $410 = HEAP32[$ast>>2]|0;
        $411 = HEAPU8[$410>>0]|(HEAPU8[$410+1>>0]<<8)|(HEAPU8[$410+2>>0]<<16)|(HEAPU8[$410+3>>0]<<24);
        $412 = ((($411)) + 9|0);
        $413 = HEAPU8[$412>>0]|(HEAPU8[$412+1>>0]<<8)|(HEAPU8[$412+2>>0]<<16)|(HEAPU8[$412+3>>0]<<24);
        $414 = HEAP32[$ast>>2]|0;
        $415 = HEAPU8[$414>>0]|(HEAPU8[$414+1>>0]<<8)|(HEAPU8[$414+2>>0]<<16)|(HEAPU8[$414+3>>0]<<24);
        $416 = ((($415)) + 13|0);
        $417 = HEAPU8[$416>>0]|(HEAPU8[$416+1>>0]<<8);
        $418 = HEAP32[$ast>>2]|0;
        $419 = HEAPU8[$418>>0]|(HEAPU8[$418+1>>0]<<8)|(HEAPU8[$418+2>>0]<<16)|(HEAPU8[$418+3>>0]<<24);
        $420 = ((($419)) + 15|0);
        $421 = HEAPU8[$420>>0]|(HEAPU8[$420+1>>0]<<8);
        __set_error_pos($409,$413,$417,$421);
        $result = 3;
        break;
       }
      }
      $422 = $0;
      $423 = $0;
      $424 = ((($423)) + 67|0);
      $425 = HEAPU8[$424>>0]|(HEAPU8[$424+1>>0]<<8)|(HEAPU8[$424+2>>0]<<16)|(HEAPU8[$424+3>>0]<<24);
      $426 = (__set_current_error($422,3,$425)|0);
      $427 = ($426<<24>>24)!=(0);
      if (!($427)) {
       break;
      }
      $428 = $0;
      __set_error_pos($428,0,0,0);
      $result = 3;
      break;
     }
     else if ((label|0) == 93) {
      $460 = HEAP32[$ast>>2]|0;
      $461 = ($460|0)!=(0|0);
      if ($461) {
       $462 = HEAP32[$ast>>2]|0;
       $463 = HEAPU8[$462>>0]|(HEAPU8[$462+1>>0]<<8)|(HEAPU8[$462+2>>0]<<16)|(HEAPU8[$462+3>>0]<<24);
       $464 = ($463|0)!=(0|0);
       if ($464) {
        $465 = $0;
        $466 = $0;
        $467 = ((($466)) + 67|0);
        $468 = HEAPU8[$467>>0]|(HEAPU8[$467+1>>0]<<8)|(HEAPU8[$467+2>>0]<<16)|(HEAPU8[$467+3>>0]<<24);
        $469 = (__set_current_error($465,32,$468)|0);
        $470 = ($469<<24>>24)!=(0);
        if (!($470)) {
         break;
        }
        $471 = $0;
        $472 = HEAP32[$ast>>2]|0;
        $473 = HEAPU8[$472>>0]|(HEAPU8[$472+1>>0]<<8)|(HEAPU8[$472+2>>0]<<16)|(HEAPU8[$472+3>>0]<<24);
        $474 = ((($473)) + 9|0);
        $475 = HEAPU8[$474>>0]|(HEAPU8[$474+1>>0]<<8)|(HEAPU8[$474+2>>0]<<16)|(HEAPU8[$474+3>>0]<<24);
        $476 = HEAP32[$ast>>2]|0;
        $477 = HEAPU8[$476>>0]|(HEAPU8[$476+1>>0]<<8)|(HEAPU8[$476+2>>0]<<16)|(HEAPU8[$476+3>>0]<<24);
        $478 = ((($477)) + 13|0);
        $479 = HEAPU8[$478>>0]|(HEAPU8[$478+1>>0]<<8);
        $480 = HEAP32[$ast>>2]|0;
        $481 = HEAPU8[$480>>0]|(HEAPU8[$480+1>>0]<<8)|(HEAPU8[$480+2>>0]<<16)|(HEAPU8[$480+3>>0]<<24);
        $482 = ((($481)) + 15|0);
        $483 = HEAPU8[$482>>0]|(HEAPU8[$482+1>>0]<<8);
        __set_error_pos($471,$475,$479,$483);
        $result = 3;
        break;
       }
      }
      $484 = $0;
      $485 = $0;
      $486 = ((($485)) + 67|0);
      $487 = HEAPU8[$486>>0]|(HEAPU8[$486+1>>0]<<8)|(HEAPU8[$486+2>>0]<<16)|(HEAPU8[$486+3>>0]<<24);
      $488 = (__set_current_error($484,32,$487)|0);
      $489 = ($488<<24>>24)!=(0);
      if (!($489)) {
       break;
      }
      $490 = $0;
      __set_error_pos($490,0,0,0);
      $result = 3;
      break;
     }
    } else {
     label = 6;
    }
   } else {
    label = 6;
   }
  } else {
   label = 6;
  }
 } while(0);
 do {
  if ((label|0) == 6) {
   $23 = HEAP32[$ast>>2]|0;
   $24 = ($23|0)!=(0|0);
   if ($24) {
    $25 = HEAP32[$ast>>2]|0;
    $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
    $27 = ($26|0)!=(0|0);
    if ($27) {
     $28 = $0;
     $29 = $0;
     $30 = ((($29)) + 67|0);
     $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8)|(HEAPU8[$30+2>>0]<<16)|(HEAPU8[$30+3>>0]<<24);
     $32 = (__set_current_error($28,11,$31)|0);
     $33 = ($32<<24>>24)!=(0);
     if (!($33)) {
      break;
     }
     $34 = $0;
     $35 = HEAP32[$ast>>2]|0;
     $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
     $37 = ((($36)) + 9|0);
     $38 = HEAPU8[$37>>0]|(HEAPU8[$37+1>>0]<<8)|(HEAPU8[$37+2>>0]<<16)|(HEAPU8[$37+3>>0]<<24);
     $39 = HEAP32[$ast>>2]|0;
     $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8)|(HEAPU8[$39+2>>0]<<16)|(HEAPU8[$39+3>>0]<<24);
     $41 = ((($40)) + 13|0);
     $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8);
     $43 = HEAP32[$ast>>2]|0;
     $44 = HEAPU8[$43>>0]|(HEAPU8[$43+1>>0]<<8)|(HEAPU8[$43+2>>0]<<16)|(HEAPU8[$43+3>>0]<<24);
     $45 = ((($44)) + 15|0);
     $46 = HEAPU8[$45>>0]|(HEAPU8[$45+1>>0]<<8);
     __set_error_pos($34,$38,$42,$46);
     $result = 3;
     break;
    }
   }
   $47 = $0;
   $48 = $0;
   $49 = ((($48)) + 67|0);
   $50 = HEAPU8[$49>>0]|(HEAPU8[$49+1>>0]<<8)|(HEAPU8[$49+2>>0]<<16)|(HEAPU8[$49+3>>0]<<24);
   $51 = (__set_current_error($47,11,$50)|0);
   $52 = ($51<<24>>24)!=(0);
   if ($52) {
    $53 = $0;
    __set_error_pos($53,0,0,0);
    $result = 3;
   }
  }
 } while(0);
 $516 = $0;
 $517 = ((($516)) + 114|0);
 $518 = HEAPU8[$517>>0]|(HEAPU8[$517+1>>0]<<8)|(HEAPU8[$517+2>>0]<<16)|(HEAPU8[$517+3>>0]<<24);
 $519 = (($518) + -1)|0;
 HEAP8[$517>>0]=$519&255;HEAP8[$517+1>>0]=($519>>8)&255;HEAP8[$517+2>>0]=($519>>16)&255;HEAP8[$517+3>>0]=$519>>24;
 $520 = HEAP32[$ast>>2]|0;
 $521 = $1;
 HEAP32[$521>>2] = $520;
 $522 = $result;
 $523 = ($522|0)!=(0);
 if (!($523)) {
  $527 = $result;
  STACKTOP = sp;return ($527|0);
 }
 $524 = $0;
 $525 = (__get_printer($524)|0);
 $526 = $0;
 (FUNCTION_TABLE_iiii[$525 & 255]($526,14608,$vararg_buffer33)|0);
 $527 = $result;
 STACKTOP = sp;return ($527|0);
}
function __std_input($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0.0, $17 = 0;
 var $170 = 0.0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0;
 var $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__hr = 0, $__hr1 = 0, $ast = 0, $conv_suc = 0, $len = 0, $line = 0, $obj = 0, $or$cond = 0;
 var $pmt = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $line = sp + 48|0;
 $conv_suc = sp + 16|0;
 $1 = $s;
 $2 = $l;
 $result = 0;
 $ast = 0;
 $obj = 0;
 HEAP32[$conv_suc>>2] = 0;
 $pmt = 0;
 $3 = $1;
 $4 = ($3|0)!=(0|0);
 $5 = $2;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),18535,(14537|0));
  // unreachable;
 }
 $7 = $1;
 $8 = $2;
 $9 = (_mb_attempt_func_begin($7,$8)|0);
 $__hr = $9;
 $10 = $__hr;
 $11 = ($10|0)!=(0);
 if ($11) {
  $12 = $__hr;
  $0 = $12;
  $311 = $0;
  STACKTOP = sp;return ($311|0);
 }
 $13 = $1;
 $14 = $2;
 $15 = (_mb_attempt_func_end($13,$14)|0);
 $__hr1 = $15;
 $16 = $__hr1;
 $17 = ($16|0)!=(0);
 if ($17) {
  $18 = $__hr1;
  $0 = $18;
  $311 = $0;
  STACKTOP = sp;return ($311|0);
 }
 $19 = $2;
 $20 = HEAP32[$19>>2]|0;
 $ast = $20;
 $21 = $ast;
 $22 = ($21|0)!=(0|0);
 if ($22) {
  $23 = $ast;
  $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
  $25 = $24;
 } else {
  $25 = 0;
 }
 $obj = $25;
 $26 = $obj;
 $27 = ($26|0)!=(0|0);
 L15: do {
  if ($27) {
   $28 = $obj;
   $29 = ($28|0)!=(0|0);
   if ($29) {
    $30 = $obj;
    $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8)|(HEAPU8[$30+2>>0]<<16)|(HEAPU8[$30+3>>0]<<24);
    $32 = ($31|0)==(22);
    if ($32) {
     label = 12;
     break;
    }
   }
   $37 = $obj;
   $38 = HEAPU8[$37>>0]|(HEAPU8[$37+1>>0]<<8)|(HEAPU8[$37+2>>0]<<16)|(HEAPU8[$37+3>>0]<<24);
   $39 = ($38|0)==(4);
   do {
    if ($39) {
     $40 = $obj;
     $41 = ((($40)) + 4|0);
     $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
     $pmt = $42;
     $43 = $1;
     $44 = $obj;
     __print_string($43,$44);
     $45 = $ast;
     $46 = ((($45)) + 8|0);
     $47 = HEAPU8[$46>>0]|(HEAPU8[$46+1>>0]<<8)|(HEAPU8[$46+2>>0]<<16)|(HEAPU8[$46+3>>0]<<24);
     $ast = $47;
     $48 = $ast;
     $49 = HEAPU8[$48>>0]|(HEAPU8[$48+1>>0]<<8)|(HEAPU8[$48+2>>0]<<16)|(HEAPU8[$48+3>>0]<<24);
     $obj = $49;
     $50 = $obj;
     $51 = HEAPU8[$50>>0]|(HEAPU8[$50+1>>0]<<8)|(HEAPU8[$50+2>>0]<<16)|(HEAPU8[$50+3>>0]<<24);
     $52 = ($51|0)==(19);
     if ($52) {
      $53 = $obj;
      $54 = ((($53)) + 4|0);
      $55 = HEAP8[$54>>0]|0;
      $56 = $55 << 24 >> 24;
      $57 = ($56|0)==(44);
      if ($57) {
       $89 = $ast;
       $90 = ((($89)) + 8|0);
       $91 = HEAPU8[$90>>0]|(HEAPU8[$90+1>>0]<<8)|(HEAPU8[$90+2>>0]<<16)|(HEAPU8[$90+3>>0]<<24);
       $ast = $91;
       $92 = $ast;
       $93 = HEAPU8[$92>>0]|(HEAPU8[$92+1>>0]<<8)|(HEAPU8[$92+2>>0]<<16)|(HEAPU8[$92+3>>0]<<24);
       $obj = $93;
       break;
      }
     }
     $58 = $ast;
     $59 = ($58|0)!=(0|0);
     if ($59) {
      $60 = $ast;
      $61 = HEAPU8[$60>>0]|(HEAPU8[$60+1>>0]<<8)|(HEAPU8[$60+2>>0]<<16)|(HEAPU8[$60+3>>0]<<24);
      $62 = ($61|0)!=(0|0);
      if ($62) {
       $63 = $1;
       $64 = $1;
       $65 = ((($64)) + 67|0);
       $66 = HEAPU8[$65>>0]|(HEAPU8[$65+1>>0]<<8)|(HEAPU8[$65+2>>0]<<16)|(HEAPU8[$65+3>>0]<<24);
       $67 = (__set_current_error($63,31,$66)|0);
       $68 = ($67<<24>>24)!=(0);
       if (!($68)) {
        break L15;
       }
       $69 = $1;
       $70 = $ast;
       $71 = HEAPU8[$70>>0]|(HEAPU8[$70+1>>0]<<8)|(HEAPU8[$70+2>>0]<<16)|(HEAPU8[$70+3>>0]<<24);
       $72 = ((($71)) + 9|0);
       $73 = HEAPU8[$72>>0]|(HEAPU8[$72+1>>0]<<8)|(HEAPU8[$72+2>>0]<<16)|(HEAPU8[$72+3>>0]<<24);
       $74 = $ast;
       $75 = HEAPU8[$74>>0]|(HEAPU8[$74+1>>0]<<8)|(HEAPU8[$74+2>>0]<<16)|(HEAPU8[$74+3>>0]<<24);
       $76 = ((($75)) + 13|0);
       $77 = HEAPU8[$76>>0]|(HEAPU8[$76+1>>0]<<8);
       $78 = $ast;
       $79 = HEAPU8[$78>>0]|(HEAPU8[$78+1>>0]<<8)|(HEAPU8[$78+2>>0]<<16)|(HEAPU8[$78+3>>0]<<24);
       $80 = ((($79)) + 15|0);
       $81 = HEAPU8[$80>>0]|(HEAPU8[$80+1>>0]<<8);
       __set_error_pos($69,$73,$77,$81);
       $result = 3;
       break L15;
      }
     }
     $82 = $1;
     $83 = $1;
     $84 = ((($83)) + 67|0);
     $85 = HEAPU8[$84>>0]|(HEAPU8[$84+1>>0]<<8)|(HEAPU8[$84+2>>0]<<16)|(HEAPU8[$84+3>>0]<<24);
     $86 = (__set_current_error($82,31,$85)|0);
     $87 = ($86<<24>>24)!=(0);
     if (!($87)) {
      break L15;
     }
     $88 = $1;
     __set_error_pos($88,0,0,0);
     $result = 3;
     break L15;
    }
   } while(0);
   $94 = $obj;
   $95 = ($94|0)!=(0|0);
   if ($95) {
    $96 = $obj;
    $97 = HEAPU8[$96>>0]|(HEAPU8[$96+1>>0]<<8)|(HEAPU8[$96+2>>0]<<16)|(HEAPU8[$96+3>>0]<<24);
    $98 = ($97|0)==(9);
    if ($98) {
     $130 = $obj;
     $131 = ((($130)) + 4|0);
     $132 = HEAPU8[$131>>0]|(HEAPU8[$131+1>>0]<<8)|(HEAPU8[$131+2>>0]<<16)|(HEAPU8[$131+3>>0]<<24);
     $133 = ((($132)) + 4|0);
     $134 = HEAPU8[$133>>0]|(HEAPU8[$133+1>>0]<<8)|(HEAPU8[$133+2>>0]<<16)|(HEAPU8[$133+3>>0]<<24);
     $135 = HEAPU8[$134>>0]|(HEAPU8[$134+1>>0]<<8)|(HEAPU8[$134+2>>0]<<16)|(HEAPU8[$134+3>>0]<<24);
     $136 = ($135|0)==(2);
     if (!($136)) {
      $137 = $obj;
      $138 = ((($137)) + 4|0);
      $139 = HEAPU8[$138>>0]|(HEAPU8[$138+1>>0]<<8)|(HEAPU8[$138+2>>0]<<16)|(HEAPU8[$138+3>>0]<<24);
      $140 = ((($139)) + 4|0);
      $141 = HEAPU8[$140>>0]|(HEAPU8[$140+1>>0]<<8)|(HEAPU8[$140+2>>0]<<16)|(HEAPU8[$140+3>>0]<<24);
      $142 = HEAPU8[$141>>0]|(HEAPU8[$141+1>>0]<<8)|(HEAPU8[$141+2>>0]<<16)|(HEAPU8[$141+3>>0]<<24);
      $143 = ($142|0)==(3);
      if (!($143)) {
       $215 = $obj;
       $216 = ((($215)) + 4|0);
       $217 = HEAPU8[$216>>0]|(HEAPU8[$216+1>>0]<<8)|(HEAPU8[$216+2>>0]<<16)|(HEAPU8[$216+3>>0]<<24);
       $218 = ((($217)) + 4|0);
       $219 = HEAPU8[$218>>0]|(HEAPU8[$218+1>>0]<<8)|(HEAPU8[$218+2>>0]<<16)|(HEAPU8[$218+3>>0]<<24);
       $220 = HEAPU8[$219>>0]|(HEAPU8[$219+1>>0]<<8)|(HEAPU8[$219+2>>0]<<16)|(HEAPU8[$219+3>>0]<<24);
       $221 = ($220|0)==(4);
       if ($221) {
        $len = 0;
        $222 = $obj;
        $223 = ((($222)) + 4|0);
        $224 = HEAPU8[$223>>0]|(HEAPU8[$223+1>>0]<<8)|(HEAPU8[$223+2>>0]<<16)|(HEAPU8[$223+3>>0]<<24);
        $225 = ((($224)) + 4|0);
        $226 = HEAPU8[$225>>0]|(HEAPU8[$225+1>>0]<<8)|(HEAPU8[$225+2>>0]<<16)|(HEAPU8[$225+3>>0]<<24);
        $227 = ((($226)) + 4|0);
        $228 = HEAPU8[$227>>0]|(HEAPU8[$227+1>>0]<<8)|(HEAPU8[$227+2>>0]<<16)|(HEAPU8[$227+3>>0]<<24);
        $229 = ($228|0)!=(0|0);
        do {
         if ($229) {
          $230 = $obj;
          $231 = ((($230)) + 4|0);
          $232 = HEAPU8[$231>>0]|(HEAPU8[$231+1>>0]<<8)|(HEAPU8[$231+2>>0]<<16)|(HEAPU8[$231+3>>0]<<24);
          $233 = ((($232)) + 4|0);
          $234 = HEAPU8[$233>>0]|(HEAPU8[$233+1>>0]<<8)|(HEAPU8[$233+2>>0]<<16)|(HEAPU8[$233+3>>0]<<24);
          $235 = ((($234)) + 8|0);
          $236 = HEAP8[$235>>0]|0;
          $237 = $236 & 1;
          $238 = ($237<<24>>24)!=(0);
          if (!($238)) {
           $239 = $obj;
           $240 = ((($239)) + 4|0);
           $241 = HEAPU8[$240>>0]|(HEAPU8[$240+1>>0]<<8)|(HEAPU8[$240+2>>0]<<16)|(HEAPU8[$240+3>>0]<<24);
           $242 = ((($241)) + 4|0);
           $243 = HEAPU8[$242>>0]|(HEAPU8[$242+1>>0]<<8)|(HEAPU8[$242+2>>0]<<16)|(HEAPU8[$242+3>>0]<<24);
           $244 = ((($243)) + 4|0);
           $245 = HEAPU8[$244>>0]|(HEAPU8[$244+1>>0]<<8)|(HEAPU8[$244+2>>0]<<16)|(HEAPU8[$244+3>>0]<<24);
           $246 = ($245|0)!=(0|0);
           if ($246) {
            $247 = $obj;
            $248 = ((($247)) + 4|0);
            $249 = HEAPU8[$248>>0]|(HEAPU8[$248+1>>0]<<8)|(HEAPU8[$248+2>>0]<<16)|(HEAPU8[$248+3>>0]<<24);
            $250 = ((($249)) + 4|0);
            $251 = HEAPU8[$250>>0]|(HEAPU8[$250+1>>0]<<8)|(HEAPU8[$250+2>>0]<<16)|(HEAPU8[$250+3>>0]<<24);
            $252 = ((($251)) + 4|0);
            $253 = HEAPU8[$252>>0]|(HEAPU8[$252+1>>0]<<8)|(HEAPU8[$252+2>>0]<<16)|(HEAPU8[$252+3>>0]<<24);
            _mb_free($253);
            $254 = $obj;
            $255 = ((($254)) + 4|0);
            $256 = HEAPU8[$255>>0]|(HEAPU8[$255+1>>0]<<8)|(HEAPU8[$255+2>>0]<<16)|(HEAPU8[$255+3>>0]<<24);
            $257 = ((($256)) + 4|0);
            $258 = HEAPU8[$257>>0]|(HEAPU8[$257+1>>0]<<8)|(HEAPU8[$257+2>>0]<<16)|(HEAPU8[$257+3>>0]<<24);
            $259 = ((($258)) + 4|0);
            HEAP8[$259>>0]=0&255;HEAP8[$259+1>>0]=(0>>8)&255;HEAP8[$259+2>>0]=(0>>16)&255;HEAP8[$259+3>>0]=0>>24;
            break;
           } else {
            ___assert_fail((4369|0),(4322|0),18592,(14537|0));
            // unreachable;
           }
          }
         }
        } while(0);
        $260 = $1;
        $261 = (__get_inputer($260)|0);
        $262 = $1;
        $263 = $pmt;
        $264 = (FUNCTION_TABLE_iiiii[$261 & 255]($262,$263,$line,256)|0);
        $len = $264;
        $265 = $len;
        $266 = (($265) + 1)|0;
        $267 = (_mb_memdup($line,$266)|0);
        $268 = $obj;
        $269 = ((($268)) + 4|0);
        $270 = HEAPU8[$269>>0]|(HEAPU8[$269+1>>0]<<8)|(HEAPU8[$269+2>>0]<<16)|(HEAPU8[$269+3>>0]<<24);
        $271 = ((($270)) + 4|0);
        $272 = HEAPU8[$271>>0]|(HEAPU8[$271+1>>0]<<8)|(HEAPU8[$271+2>>0]<<16)|(HEAPU8[$271+3>>0]<<24);
        $273 = ((($272)) + 4|0);
        HEAP8[$273>>0]=$267&255;HEAP8[$273+1>>0]=($267>>8)&255;HEAP8[$273+2>>0]=($267>>16)&255;HEAP8[$273+3>>0]=$267>>24;
        $274 = $ast;
        $275 = ((($274)) + 8|0);
        $276 = HEAPU8[$275>>0]|(HEAPU8[$275+1>>0]<<8)|(HEAPU8[$275+2>>0]<<16)|(HEAPU8[$275+3>>0]<<24);
        $ast = $276;
        break;
       } else {
        $277 = $ast;
        $278 = ($277|0)!=(0|0);
        if ($278) {
         $279 = $ast;
         $280 = HEAPU8[$279>>0]|(HEAPU8[$279+1>>0]<<8)|(HEAPU8[$279+2>>0]<<16)|(HEAPU8[$279+3>>0]<<24);
         $281 = ($280|0)!=(0|0);
         if ($281) {
          $282 = $1;
          $283 = $1;
          $284 = ((($283)) + 67|0);
          $285 = HEAPU8[$284>>0]|(HEAPU8[$284+1>>0]<<8)|(HEAPU8[$284+2>>0]<<16)|(HEAPU8[$284+3>>0]<<24);
          $286 = (__set_current_error($282,24,$285)|0);
          $287 = ($286<<24>>24)!=(0);
          if (!($287)) {
           break;
          }
          $288 = $1;
          $289 = $ast;
          $290 = HEAPU8[$289>>0]|(HEAPU8[$289+1>>0]<<8)|(HEAPU8[$289+2>>0]<<16)|(HEAPU8[$289+3>>0]<<24);
          $291 = ((($290)) + 9|0);
          $292 = HEAPU8[$291>>0]|(HEAPU8[$291+1>>0]<<8)|(HEAPU8[$291+2>>0]<<16)|(HEAPU8[$291+3>>0]<<24);
          $293 = $ast;
          $294 = HEAPU8[$293>>0]|(HEAPU8[$293+1>>0]<<8)|(HEAPU8[$293+2>>0]<<16)|(HEAPU8[$293+3>>0]<<24);
          $295 = ((($294)) + 13|0);
          $296 = HEAPU8[$295>>0]|(HEAPU8[$295+1>>0]<<8);
          $297 = $ast;
          $298 = HEAPU8[$297>>0]|(HEAPU8[$297+1>>0]<<8)|(HEAPU8[$297+2>>0]<<16)|(HEAPU8[$297+3>>0]<<24);
          $299 = ((($298)) + 15|0);
          $300 = HEAPU8[$299>>0]|(HEAPU8[$299+1>>0]<<8);
          __set_error_pos($288,$292,$296,$300);
          $result = 3;
          break;
         }
        }
        $301 = $1;
        $302 = $1;
        $303 = ((($302)) + 67|0);
        $304 = HEAPU8[$303>>0]|(HEAPU8[$303+1>>0]<<8)|(HEAPU8[$303+2>>0]<<16)|(HEAPU8[$303+3>>0]<<24);
        $305 = (__set_current_error($301,24,$304)|0);
        $306 = ($305<<24>>24)!=(0);
        if (!($306)) {
         break;
        }
        $307 = $1;
        __set_error_pos($307,0,0,0);
        $result = 3;
        break;
       }
      }
     }
     $144 = $1;
     $145 = (__get_inputer($144)|0);
     $146 = $1;
     $147 = $pmt;
     (FUNCTION_TABLE_iiiii[$145 & 255]($146,$147,$line,256)|0);
     $148 = $obj;
     $149 = ((($148)) + 4|0);
     $150 = HEAPU8[$149>>0]|(HEAPU8[$149+1>>0]<<8)|(HEAPU8[$149+2>>0]<<16)|(HEAPU8[$149+3>>0]<<24);
     $151 = ((($150)) + 4|0);
     $152 = HEAPU8[$151>>0]|(HEAPU8[$151+1>>0]<<8)|(HEAPU8[$151+2>>0]<<16)|(HEAPU8[$151+3>>0]<<24);
     HEAP8[$152>>0]=2&255;HEAP8[$152+1>>0]=(2>>8)&255;HEAP8[$152+2>>0]=(2>>16)&255;HEAP8[$152+3>>0]=2>>24;
     $153 = (_strtol($line,$conv_suc,0)|0);
     $154 = $obj;
     $155 = ((($154)) + 4|0);
     $156 = HEAPU8[$155>>0]|(HEAPU8[$155+1>>0]<<8)|(HEAPU8[$155+2>>0]<<16)|(HEAPU8[$155+3>>0]<<24);
     $157 = ((($156)) + 4|0);
     $158 = HEAPU8[$157>>0]|(HEAPU8[$157+1>>0]<<8)|(HEAPU8[$157+2>>0]<<16)|(HEAPU8[$157+3>>0]<<24);
     $159 = ((($158)) + 4|0);
     HEAP8[$159>>0]=$153&255;HEAP8[$159+1>>0]=($153>>8)&255;HEAP8[$159+2>>0]=($153>>16)&255;HEAP8[$159+3>>0]=$153>>24;
     $160 = HEAP32[$conv_suc>>2]|0;
     $161 = HEAP8[$160>>0]|0;
     $162 = $161 << 24 >> 24;
     $163 = ($162|0)==(0);
     if (!($163)) {
      $164 = $obj;
      $165 = ((($164)) + 4|0);
      $166 = HEAPU8[$165>>0]|(HEAPU8[$165+1>>0]<<8)|(HEAPU8[$165+2>>0]<<16)|(HEAPU8[$165+3>>0]<<24);
      $167 = ((($166)) + 4|0);
      $168 = HEAPU8[$167>>0]|(HEAPU8[$167+1>>0]<<8)|(HEAPU8[$167+2>>0]<<16)|(HEAPU8[$167+3>>0]<<24);
      HEAP8[$168>>0]=3&255;HEAP8[$168+1>>0]=(3>>8)&255;HEAP8[$168+2>>0]=(3>>16)&255;HEAP8[$168+3>>0]=3>>24;
      $169 = (+_strtod($line,$conv_suc));
      $170 = $169;
      $171 = $obj;
      $172 = ((($171)) + 4|0);
      $173 = HEAPU8[$172>>0]|(HEAPU8[$172+1>>0]<<8)|(HEAPU8[$172+2>>0]<<16)|(HEAPU8[$172+3>>0]<<24);
      $174 = ((($173)) + 4|0);
      $175 = HEAPU8[$174>>0]|(HEAPU8[$174+1>>0]<<8)|(HEAPU8[$174+2>>0]<<16)|(HEAPU8[$174+3>>0]<<24);
      $176 = ((($175)) + 4|0);
      HEAPF32[tempDoublePtr>>2]=$170;HEAP8[$176>>0]=HEAP8[tempDoublePtr>>0];HEAP8[$176+1>>0]=HEAP8[tempDoublePtr+1>>0];HEAP8[$176+2>>0]=HEAP8[tempDoublePtr+2>>0];HEAP8[$176+3>>0]=HEAP8[tempDoublePtr+3>>0];
      $177 = HEAP32[$conv_suc>>2]|0;
      $178 = HEAP8[$177>>0]|0;
      $179 = $178 << 24 >> 24;
      $180 = ($179|0)==(0);
      if (!($180)) {
       $181 = $ast;
       $182 = ($181|0)!=(0|0);
       if ($182) {
        $183 = $ast;
        $184 = HEAPU8[$183>>0]|(HEAPU8[$183+1>>0]<<8)|(HEAPU8[$183+2>>0]<<16)|(HEAPU8[$183+3>>0]<<24);
        $185 = ($184|0)!=(0|0);
        if ($185) {
         $186 = $1;
         $187 = $1;
         $188 = ((($187)) + 67|0);
         $189 = HEAPU8[$188>>0]|(HEAPU8[$188+1>>0]<<8)|(HEAPU8[$188+2>>0]<<16)|(HEAPU8[$188+3>>0]<<24);
         $190 = (__set_current_error($186,24,$189)|0);
         $191 = ($190<<24>>24)!=(0);
         if (!($191)) {
          break;
         }
         $192 = $1;
         $193 = $ast;
         $194 = HEAPU8[$193>>0]|(HEAPU8[$193+1>>0]<<8)|(HEAPU8[$193+2>>0]<<16)|(HEAPU8[$193+3>>0]<<24);
         $195 = ((($194)) + 9|0);
         $196 = HEAPU8[$195>>0]|(HEAPU8[$195+1>>0]<<8)|(HEAPU8[$195+2>>0]<<16)|(HEAPU8[$195+3>>0]<<24);
         $197 = $ast;
         $198 = HEAPU8[$197>>0]|(HEAPU8[$197+1>>0]<<8)|(HEAPU8[$197+2>>0]<<16)|(HEAPU8[$197+3>>0]<<24);
         $199 = ((($198)) + 13|0);
         $200 = HEAPU8[$199>>0]|(HEAPU8[$199+1>>0]<<8);
         $201 = $ast;
         $202 = HEAPU8[$201>>0]|(HEAPU8[$201+1>>0]<<8)|(HEAPU8[$201+2>>0]<<16)|(HEAPU8[$201+3>>0]<<24);
         $203 = ((($202)) + 15|0);
         $204 = HEAPU8[$203>>0]|(HEAPU8[$203+1>>0]<<8);
         __set_error_pos($192,$196,$200,$204);
         $result = 3;
         break;
        }
       }
       $205 = $1;
       $206 = $1;
       $207 = ((($206)) + 67|0);
       $208 = HEAPU8[$207>>0]|(HEAPU8[$207+1>>0]<<8)|(HEAPU8[$207+2>>0]<<16)|(HEAPU8[$207+3>>0]<<24);
       $209 = (__set_current_error($205,24,$208)|0);
       $210 = ($209<<24>>24)!=(0);
       if (!($210)) {
        break;
       }
       $211 = $1;
       __set_error_pos($211,0,0,0);
       $result = 3;
       break;
      }
     }
     $212 = $ast;
     $213 = ((($212)) + 8|0);
     $214 = HEAPU8[$213>>0]|(HEAPU8[$213+1>>0]<<8)|(HEAPU8[$213+2>>0]<<16)|(HEAPU8[$213+3>>0]<<24);
     $ast = $214;
     break;
    }
   }
   $99 = $ast;
   $100 = ($99|0)!=(0|0);
   if ($100) {
    $101 = $ast;
    $102 = HEAPU8[$101>>0]|(HEAPU8[$101+1>>0]<<8)|(HEAPU8[$101+2>>0]<<16)|(HEAPU8[$101+3>>0]<<24);
    $103 = ($102|0)!=(0|0);
    if ($103) {
     $104 = $1;
     $105 = $1;
     $106 = ((($105)) + 67|0);
     $107 = HEAPU8[$106>>0]|(HEAPU8[$106+1>>0]<<8)|(HEAPU8[$106+2>>0]<<16)|(HEAPU8[$106+3>>0]<<24);
     $108 = (__set_current_error($104,19,$107)|0);
     $109 = ($108<<24>>24)!=(0);
     if (!($109)) {
      break;
     }
     $110 = $1;
     $111 = $ast;
     $112 = HEAPU8[$111>>0]|(HEAPU8[$111+1>>0]<<8)|(HEAPU8[$111+2>>0]<<16)|(HEAPU8[$111+3>>0]<<24);
     $113 = ((($112)) + 9|0);
     $114 = HEAPU8[$113>>0]|(HEAPU8[$113+1>>0]<<8)|(HEAPU8[$113+2>>0]<<16)|(HEAPU8[$113+3>>0]<<24);
     $115 = $ast;
     $116 = HEAPU8[$115>>0]|(HEAPU8[$115+1>>0]<<8)|(HEAPU8[$115+2>>0]<<16)|(HEAPU8[$115+3>>0]<<24);
     $117 = ((($116)) + 13|0);
     $118 = HEAPU8[$117>>0]|(HEAPU8[$117+1>>0]<<8);
     $119 = $ast;
     $120 = HEAPU8[$119>>0]|(HEAPU8[$119+1>>0]<<8)|(HEAPU8[$119+2>>0]<<16)|(HEAPU8[$119+3>>0]<<24);
     $121 = ((($120)) + 15|0);
     $122 = HEAPU8[$121>>0]|(HEAPU8[$121+1>>0]<<8);
     __set_error_pos($110,$114,$118,$122);
     $result = 3;
     break;
    }
   }
   $123 = $1;
   $124 = $1;
   $125 = ((($124)) + 67|0);
   $126 = HEAPU8[$125>>0]|(HEAPU8[$125+1>>0]<<8)|(HEAPU8[$125+2>>0]<<16)|(HEAPU8[$125+3>>0]<<24);
   $127 = (__set_current_error($123,19,$126)|0);
   $128 = ($127<<24>>24)!=(0);
   if ($128) {
    $129 = $1;
    __set_error_pos($129,0,0,0);
    $result = 3;
   }
  } else {
   label = 12;
  }
 } while(0);
 if ((label|0) == 12) {
  $33 = $1;
  $34 = (__get_inputer($33)|0);
  $35 = $1;
  $36 = $pmt;
  (FUNCTION_TABLE_iiiii[$34 & 255]($35,$36,$line,256)|0);
 }
 $308 = $ast;
 $309 = $2;
 HEAP32[$309>>2] = $308;
 $310 = $result;
 $0 = $310;
 $311 = $0;
 STACKTOP = sp;return ($311|0);
}
function __get_inputer($s) {
 $s = $s|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $s;
 $2 = $1;
 $3 = ($2|0)!=(0|0);
 if (!($3)) {
  ___assert_fail((4803|0),(4322|0),4882,(14578|0));
  // unreachable;
 }
 $4 = $1;
 $5 = ((($4)) + 171|0);
 $6 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
 $7 = ($6|0)!=(0|0);
 if ($7) {
  $8 = $1;
  $9 = ((($8)) + 171|0);
  $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
  $0 = $10;
  $11 = $0;
  STACKTOP = sp;return ($11|0);
 } else {
  $0 = 167;
  $11 = $0;
  STACKTOP = sp;return ($11|0);
 }
 return (0)|0;
}
function __print_string($s,$obj) {
 $s = $s|0;
 $obj = $obj|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $vararg_buffer = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer = sp;
 $0 = $s;
 $1 = $obj;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 if (!($or$cond)) {
  ___assert_fail((11434|0),(4322|0),4920,(14548|0));
  // unreachable;
 }
 $6 = $0;
 $7 = (__get_printer($6)|0);
 $8 = $0;
 $9 = $1;
 $10 = ((($9)) + 4|0);
 $11 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
 $12 = ($11|0)!=(0|0);
 if (!($12)) {
  $16 = 5011;
  HEAP32[$vararg_buffer>>2] = $16;
  (FUNCTION_TABLE_iiii[$7 & 255]($8,14562,$vararg_buffer)|0);
  STACKTOP = sp;return;
 }
 $13 = $1;
 $14 = ((($13)) + 4|0);
 $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
 $16 = $15;
 HEAP32[$vararg_buffer>>2] = $16;
 (FUNCTION_TABLE_iiii[$7 & 255]($8,14562,$vararg_buffer)|0);
 STACKTOP = sp;return;
}
function __get_printer($s) {
 $s = $s|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $s;
 $2 = $1;
 $3 = ($2|0)!=(0|0);
 if (!($3)) {
  ___assert_fail((4803|0),(4322|0),4872,(14565|0));
  // unreachable;
 }
 $4 = $1;
 $5 = ((($4)) + 167|0);
 $6 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
 $7 = ($6|0)!=(0|0);
 if ($7) {
  $8 = $1;
  $9 = ((($8)) + 167|0);
  $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
  $0 = $10;
  $11 = $0;
  STACKTOP = sp;return ($11|0);
 } else {
  $0 = 168;
  $11 = $0;
  STACKTOP = sp;return ($11|0);
 }
 return (0)|0;
}
function __standard_printer($s,$fmt,$varargs) {
 $s = $s|0;
 $fmt = $fmt|0;
 $varargs = $varargs|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $args = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $args = sp;
 $0 = $s;
 $1 = $fmt;
 HEAP32[$args>>2] = $varargs;
 $2 = $1;
 $3 = (_vprintf($2,$args)|0);
 $result = $3;
 $4 = $result;
 STACKTOP = sp;return ($4|0);
}
function __eval_var_in_print($s,$val_ptr,$ast,$obj) {
 $s = $s|0;
 $val_ptr = $val_ptr|0;
 $ast = $ast|0;
 $obj = $obj|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $8 = 0, $9 = 0, $tmp = 0, dest = 0;
 var label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $tmp = sp + 16|0;
 $0 = $s;
 $1 = $val_ptr;
 $2 = $ast;
 $3 = $obj;
 $4 = $0;
 $5 = ($4|0)!=(0|0);
 if (!($5)) {
  ___assert_fail((4803|0),(4322|0),10953,(14781|0));
  // unreachable;
 }
 $6 = $3;
 $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
 switch ($7|0) {
 case 17:  {
  $8 = $0;
  $9 = $2;
  (__execute_statement($8,$9,1)|0);
  dest=$tmp; stop=dest+17|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
  HEAP8[$tmp>>0]=0&255;HEAP8[$tmp+1>>0]=(0>>8)&255;HEAP8[$tmp+2>>0]=(0>>16)&255;HEAP8[$tmp+3>>0]=0>>24;
  $10 = $0;
  $11 = ((($10)) + 75|0);
  $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
  $13 = ((($12)) + 20|0);
  (__public_value_to_internal_object($13,$tmp)|0);
  $14 = HEAPU8[$tmp>>0]|(HEAPU8[$tmp+1>>0]<<8)|(HEAPU8[$tmp+2>>0]<<16)|(HEAPU8[$tmp+3>>0]<<24);
  $15 = ($14|0)==(4);
  if ($15) {
   $16 = ((($tmp)) + 4|0);
   $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
   $18 = ((($tmp)) + 4|0);
   $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
   $20 = (_strlen($19)|0);
   $21 = (($20) + 1)|0;
   $22 = (_mb_strdup($17,$21)|0);
   $23 = ((($tmp)) + 4|0);
   HEAP8[$23>>0]=$22&255;HEAP8[$23+1>>0]=($22>>8)&255;HEAP8[$23+2>>0]=($22>>16)&255;HEAP8[$23+3>>0]=$22>>24;
   $24 = ((($tmp)) + 8|0);
   $25 = HEAP8[$24>>0]|0;
   $26 = $25 & -2;
   HEAP8[$24>>0] = $26;
   $27 = $0;
   $28 = ((($27)) + 75|0);
   $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
   $30 = ((($29)) + 20|0);
   $31 = ((($30)) + 4|0);
   ;HEAP8[$31>>0]=0|0;HEAP8[$31+1>>0]=0|0;HEAP8[$31+2>>0]=0|0;HEAP8[$31+3>>0]=0|0;
   $32 = $0;
   $33 = ((($32)) + 75|0);
   $34 = HEAPU8[$33>>0]|(HEAPU8[$33+1>>0]<<8)|(HEAPU8[$33+2>>0]<<16)|(HEAPU8[$33+3>>0]<<24);
   $35 = ((($34)) + 20|0);
   HEAP8[$35>>0]=0&255;HEAP8[$35+1>>0]=(0>>8)&255;HEAP8[$35+2>>0]=(0>>16)&255;HEAP8[$35+3>>0]=0>>24;
  }
  $36 = $1;
  $37 = HEAP32[$36>>2]|0;
  dest=$37; src=$tmp; stop=dest+17|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
  $38 = $3;
  $39 = ((($38)) + 4|0);
  $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8)|(HEAPU8[$39+2>>0]<<16)|(HEAPU8[$39+3>>0]<<24);
  $41 = ((($40)) + 58|0);
  $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
  $43 = ($42|0)!=(3);
  if (!($43)) {
   $76 = $1;
   $77 = HEAP32[$76>>2]|0;
   STACKTOP = sp;return ($77|0);
  }
  $44 = $2;
  $45 = HEAP32[$44>>2]|0;
  $46 = ($45|0)!=(0|0);
  if (!($46)) {
   $76 = $1;
   $77 = HEAP32[$76>>2]|0;
   STACKTOP = sp;return ($77|0);
  }
  $47 = $2;
  $48 = HEAP32[$47>>2]|0;
  $49 = ((($48)) + 4|0);
  $50 = HEAPU8[$49>>0]|(HEAPU8[$49+1>>0]<<8)|(HEAPU8[$49+2>>0]<<16)|(HEAPU8[$49+3>>0]<<24);
  $51 = $2;
  HEAP32[$51>>2] = $50;
  $76 = $1;
  $77 = HEAP32[$76>>2]|0;
  STACKTOP = sp;return ($77|0);
  break;
 }
 case 9:  {
  $52 = $3;
  $53 = ((($52)) + 4|0);
  $54 = HEAPU8[$53>>0]|(HEAPU8[$53+1>>0]<<8)|(HEAPU8[$53+2>>0]<<16)|(HEAPU8[$53+3>>0]<<24);
  $55 = ((($54)) + 4|0);
  $56 = HEAPU8[$55>>0]|(HEAPU8[$55+1>>0]<<8)|(HEAPU8[$55+2>>0]<<16)|(HEAPU8[$55+3>>0]<<24);
  $57 = $1;
  HEAP32[$57>>2] = $56;
  $58 = $2;
  $59 = HEAP32[$58>>2]|0;
  $60 = ($59|0)!=(0|0);
  if (!($60)) {
   $76 = $1;
   $77 = HEAP32[$76>>2]|0;
   STACKTOP = sp;return ($77|0);
  }
  $61 = $2;
  $62 = HEAP32[$61>>2]|0;
  $63 = ((($62)) + 8|0);
  $64 = HEAPU8[$63>>0]|(HEAPU8[$63+1>>0]<<8)|(HEAPU8[$63+2>>0]<<16)|(HEAPU8[$63+3>>0]<<24);
  $65 = $2;
  HEAP32[$65>>2] = $64;
  $76 = $1;
  $77 = HEAP32[$76>>2]|0;
  STACKTOP = sp;return ($77|0);
  break;
 }
 default: {
  $66 = $3;
  $67 = $1;
  HEAP32[$67>>2] = $66;
  $68 = $2;
  $69 = HEAP32[$68>>2]|0;
  $70 = ($69|0)!=(0|0);
  if (!($70)) {
   $76 = $1;
   $77 = HEAP32[$76>>2]|0;
   STACKTOP = sp;return ($77|0);
  }
  $71 = $2;
  $72 = HEAP32[$71>>2]|0;
  $73 = ((($72)) + 8|0);
  $74 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
  $75 = $2;
  HEAP32[$75>>2] = $74;
  $76 = $1;
  $77 = HEAP32[$76>>2]|0;
  STACKTOP = sp;return ($77|0);
 }
 }
 return (0)|0;
}
function __init_dynamic_buffer($buf) {
 $buf = $buf|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $buf;
 $1 = $0;
 $2 = ($1|0)!=(0|0);
 if ($2) {
  $3 = $0;
  dest=$3; stop=dest+32|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
  $4 = $0;
  $5 = $0;
  $6 = ((($5)) + 32|0);
  HEAP8[$6>>0]=$4&255;HEAP8[$6+1>>0]=($4>>8)&255;HEAP8[$6+2>>0]=($4>>16)&255;HEAP8[$6+3>>0]=$4>>24;
  $7 = $0;
  $8 = ((($7)) + 36|0);
  HEAP8[$8>>0]=32&255;HEAP8[$8+1>>0]=(32>>8)&255;HEAP8[$8+2>>0]=(32>>16)&255;HEAP8[$8+3>>0]=32>>24;
  STACKTOP = sp;return;
 } else {
  ___assert_fail((6475|0),(4322|0),3171,(14760|0));
  // unreachable;
 }
}
function __countof_dynamic_buffer($buf,$es) {
 $buf = $buf|0;
 $es = $es|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $buf;
 $1 = $es;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 if ($3) {
  $4 = $0;
  $5 = ((($4)) + 36|0);
  $6 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
  $7 = $1;
  $8 = (($6>>>0) / ($7>>>0))&-1;
  STACKTOP = sp;return ($8|0);
 } else {
  ___assert_fail((6475|0),(4322|0),3191,(14736|0));
  // unreachable;
 }
 return (0)|0;
}
function __resize_dynamic_buffer($buf,$es,$c) {
 $buf = $buf|0;
 $es = $es|0;
 $c = $c|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $as = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $buf;
 $1 = $es;
 $2 = $c;
 $3 = $1;
 $4 = $2;
 $5 = Math_imul($3, $4)|0;
 $as = $5;
 $6 = $0;
 $7 = ($6|0)!=(0|0);
 if (!($7)) {
  ___assert_fail((6475|0),(4322|0),3200,(14713|0));
  // unreachable;
 }
 $8 = $as;
 $9 = $0;
 $10 = ((($9)) + 36|0);
 $11 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
 $12 = ($8>>>0)>($11>>>0);
 if (!($12)) {
  STACKTOP = sp;return;
 }
 $13 = $0;
 $14 = ((($13)) + 32|0);
 $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
 $16 = $0;
 $17 = ($15|0)!=($16|0);
 do {
  if ($17) {
   $18 = $0;
   $19 = ((($18)) + 32|0);
   $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8)|(HEAPU8[$19+2>>0]<<16)|(HEAPU8[$19+3>>0]<<24);
   $21 = ($20|0)!=(0|0);
   if ($21) {
    $22 = $0;
    $23 = ((($22)) + 32|0);
    $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
    _mb_free($24);
    $25 = $0;
    $26 = ((($25)) + 32|0);
    HEAP8[$26>>0]=0&255;HEAP8[$26+1>>0]=(0>>8)&255;HEAP8[$26+2>>0]=(0>>16)&255;HEAP8[$26+3>>0]=0>>24;
    break;
   } else {
    ___assert_fail((4369|0),(4322|0),3204,(14713|0));
    // unreachable;
   }
  }
 } while(0);
 $27 = $as;
 $28 = (_mb_malloc($27)|0);
 $29 = $0;
 $30 = ((($29)) + 32|0);
 HEAP8[$30>>0]=$28&255;HEAP8[$30+1>>0]=($28>>8)&255;HEAP8[$30+2>>0]=($28>>16)&255;HEAP8[$30+3>>0]=$28>>24;
 $31 = $as;
 $32 = $0;
 $33 = ((($32)) + 36|0);
 HEAP8[$33>>0]=$31&255;HEAP8[$33+1>>0]=($31>>8)&255;HEAP8[$33+2>>0]=($31>>16)&255;HEAP8[$33+3>>0]=$31>>24;
 STACKTOP = sp;return;
}
function __dispose_dynamic_buffer($buf) {
 $buf = $buf|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $buf;
 $1 = $0;
 $2 = ($1|0)!=(0|0);
 if (!($2)) {
  ___assert_fail((6475|0),(4322|0),3180,(14689|0));
  // unreachable;
 }
 $3 = $0;
 $4 = ((($3)) + 32|0);
 $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
 $6 = $0;
 $7 = ($5|0)!=($6|0);
 do {
  if ($7) {
   $8 = $0;
   $9 = ((($8)) + 32|0);
   $10 = HEAPU8[$9>>0]|(HEAPU8[$9+1>>0]<<8)|(HEAPU8[$9+2>>0]<<16)|(HEAPU8[$9+3>>0]<<24);
   $11 = ($10|0)!=(0|0);
   if ($11) {
    $12 = $0;
    $13 = ((($12)) + 32|0);
    $14 = HEAPU8[$13>>0]|(HEAPU8[$13+1>>0]<<8)|(HEAPU8[$13+2>>0]<<16)|(HEAPU8[$13+3>>0]<<24);
    _mb_free($14);
    $15 = $0;
    $16 = ((($15)) + 32|0);
    HEAP8[$16>>0]=0&255;HEAP8[$16+1>>0]=(0>>8)&255;HEAP8[$16+2>>0]=(0>>16)&255;HEAP8[$16+3>>0]=0>>24;
    break;
   } else {
    ___assert_fail((4369|0),(4322|0),3183,(14689|0));
    // unreachable;
   }
  }
 } while(0);
 $17 = $0;
 $18 = ((($17)) + 32|0);
 HEAP8[$18>>0]=0&255;HEAP8[$18+1>>0]=(0>>8)&255;HEAP8[$18+2>>0]=(0>>16)&255;HEAP8[$18+3>>0]=0>>24;
 $19 = $0;
 $20 = ((($19)) + 36|0);
 HEAP8[$20>>0]=0&255;HEAP8[$20+1>>0]=(0>>8)&255;HEAP8[$20+2>>0]=(0>>16)&255;HEAP8[$20+3>>0]=0>>24;
 STACKTOP = sp;return;
}
function __format_class_to_string($s,$l,$instance,$out,$got_tostr) {
 $s = $s|0;
 $l = $l|0;
 $instance = $instance|0;
 $out = $out|0;
 $got_tostr = $got_tostr|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $12 = 0, $13 = 0;
 var $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $or$cond3 = 0, $or$cond5 = 0, $or$cond7 = 0, $or$cond9 = 0, $result = 0;
 var $tmp = 0, $tsn = 0, $tso = 0, $va = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $tmp = sp;
 $va = sp + 40|0;
 $0 = $s;
 $1 = $l;
 $2 = $instance;
 $3 = $out;
 $4 = $got_tostr;
 $result = 0;
 $tsn = 0;
 $5 = $0;
 $6 = ($5|0)!=(0|0);
 $7 = $1;
 $8 = ($7|0)!=(0|0);
 $or$cond = $6 & $8;
 $9 = $2;
 $10 = ($9|0)!=(0|0);
 $or$cond3 = $or$cond & $10;
 if ($or$cond3) {
 }
 $11 = $0;
 $12 = ($11|0)!=(0|0);
 $13 = $1;
 $14 = ($13|0)!=(0|0);
 $or$cond5 = $12 & $14;
 $15 = $2;
 $16 = ($15|0)!=(0|0);
 $or$cond7 = $or$cond5 & $16;
 $17 = $3;
 $18 = ($17|0)!=(0|0);
 $or$cond9 = $or$cond7 & $18;
 if (!($or$cond9)) {
  ___assert_fail((14629|0),(4322|0),8665,(14655|0));
  // unreachable;
 }
 $19 = $0;
 $20 = $2;
 $21 = (__search_identifier_in_class($19,$20,14679,0,0)|0);
 $tsn = $21;
 $22 = $4;
 $23 = ($22|0)!=(0|0);
 if ($23) {
  $24 = $4;
  HEAP8[$24>>0] = 0;
 }
 $25 = $tsn;
 $26 = ($25|0)!=(0|0);
 if (!($26)) {
  $113 = $result;
  STACKTOP = sp;return ($113|0);
 }
 $27 = $tsn;
 $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
 $tso = $28;
 $29 = $1;
 $30 = HEAP32[$29>>2]|0;
 HEAP32[$tmp>>2] = $30;
 $31 = ((($va)) + 4|0);
 ;HEAP8[$31>>0]=0|0;HEAP8[$31+1>>0]=0|0;HEAP8[$31+2>>0]=0|0;HEAP8[$31+3>>0]=0|0;
 HEAP8[$va>>0]=0&255;HEAP8[$va+1>>0]=(0>>8)&255;HEAP8[$va+2>>0]=(0>>16)&255;HEAP8[$va+3>>0]=0>>24;
 $32 = $0;
 $33 = $tso;
 $34 = ((($33)) + 4|0);
 $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
 $36 = (__eval_routine($32,$tmp,$va,1,$35,162,163)|0);
 $37 = ($36|0)==(0);
 if (!($37)) {
  $113 = $result;
  STACKTOP = sp;return ($113|0);
 }
 $38 = $3;
 dest=$38; stop=dest+17|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
 $39 = $3;
 HEAP8[$39>>0]=0&255;HEAP8[$39+1>>0]=(0>>8)&255;HEAP8[$39+2>>0]=(0>>16)&255;HEAP8[$39+3>>0]=0>>24;
 $40 = $0;
 $41 = ((($40)) + 75|0);
 $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
 $43 = ((($42)) + 20|0);
 $44 = $3;
 (__public_value_to_internal_object($43,$44)|0);
 $45 = $3;
 $46 = HEAPU8[$45>>0]|(HEAPU8[$45+1>>0]<<8)|(HEAPU8[$45+2>>0]<<16)|(HEAPU8[$45+3>>0]<<24);
 $47 = ($46|0)==(4);
 if ($47) {
  $48 = $3;
  $49 = ((($48)) + 4|0);
  $50 = HEAPU8[$49>>0]|(HEAPU8[$49+1>>0]<<8)|(HEAPU8[$49+2>>0]<<16)|(HEAPU8[$49+3>>0]<<24);
  $51 = $3;
  $52 = ((($51)) + 4|0);
  $53 = HEAPU8[$52>>0]|(HEAPU8[$52+1>>0]<<8)|(HEAPU8[$52+2>>0]<<16)|(HEAPU8[$52+3>>0]<<24);
  $54 = (_strlen($53)|0);
  $55 = (($54) + 1)|0;
  $56 = (_mb_strdup($50,$55)|0);
  $57 = $3;
  $58 = ((($57)) + 4|0);
  HEAP8[$58>>0]=$56&255;HEAP8[$58+1>>0]=($56>>8)&255;HEAP8[$58+2>>0]=($56>>16)&255;HEAP8[$58+3>>0]=$56>>24;
  $59 = $3;
  $60 = ((($59)) + 8|0);
  $61 = HEAP8[$60>>0]|0;
  $62 = $61 & -2;
  HEAP8[$60>>0] = $62;
  $63 = $0;
  $64 = ((($63)) + 75|0);
  $65 = HEAPU8[$64>>0]|(HEAPU8[$64+1>>0]<<8)|(HEAPU8[$64+2>>0]<<16)|(HEAPU8[$64+3>>0]<<24);
  $66 = ((($65)) + 20|0);
  $67 = ((($66)) + 4|0);
  ;HEAP8[$67>>0]=0|0;HEAP8[$67+1>>0]=0|0;HEAP8[$67+2>>0]=0|0;HEAP8[$67+3>>0]=0|0;
  $68 = $0;
  $69 = ((($68)) + 75|0);
  $70 = HEAPU8[$69>>0]|(HEAPU8[$69+1>>0]<<8)|(HEAPU8[$69+2>>0]<<16)|(HEAPU8[$69+3>>0]<<24);
  $71 = ((($70)) + 20|0);
  HEAP8[$71>>0]=0&255;HEAP8[$71+1>>0]=(0>>8)&255;HEAP8[$71+2>>0]=(0>>16)&255;HEAP8[$71+3>>0]=0>>24;
  $72 = $4;
  $73 = ($72|0)!=(0|0);
  if (!($73)) {
   $113 = $result;
   STACKTOP = sp;return ($113|0);
  }
  $112 = $4;
  HEAP8[$112>>0] = 1;
  $113 = $result;
  STACKTOP = sp;return ($113|0);
 }
 $74 = $1;
 $75 = ($74|0)!=(0|0);
 if ($75) {
  $76 = $1;
  $77 = HEAP32[$76>>2]|0;
  $78 = ($77|0)!=(0|0);
  if ($78) {
   $79 = $1;
   $80 = HEAP32[$79>>2]|0;
   $81 = HEAPU8[$80>>0]|(HEAPU8[$80+1>>0]<<8)|(HEAPU8[$80+2>>0]<<16)|(HEAPU8[$80+3>>0]<<24);
   $82 = ($81|0)!=(0|0);
   if ($82) {
    $83 = $0;
    $84 = $0;
    $85 = ((($84)) + 67|0);
    $86 = HEAPU8[$85>>0]|(HEAPU8[$85+1>>0]<<8)|(HEAPU8[$85+2>>0]<<16)|(HEAPU8[$85+3>>0]<<24);
    $87 = (__set_current_error($83,18,$86)|0);
    $88 = ($87<<24>>24)!=(0);
    if (!($88)) {
     $113 = $result;
     STACKTOP = sp;return ($113|0);
    }
    $89 = $0;
    $90 = $1;
    $91 = HEAP32[$90>>2]|0;
    $92 = HEAPU8[$91>>0]|(HEAPU8[$91+1>>0]<<8)|(HEAPU8[$91+2>>0]<<16)|(HEAPU8[$91+3>>0]<<24);
    $93 = ((($92)) + 9|0);
    $94 = HEAPU8[$93>>0]|(HEAPU8[$93+1>>0]<<8)|(HEAPU8[$93+2>>0]<<16)|(HEAPU8[$93+3>>0]<<24);
    $95 = $1;
    $96 = HEAP32[$95>>2]|0;
    $97 = HEAPU8[$96>>0]|(HEAPU8[$96+1>>0]<<8)|(HEAPU8[$96+2>>0]<<16)|(HEAPU8[$96+3>>0]<<24);
    $98 = ((($97)) + 13|0);
    $99 = HEAPU8[$98>>0]|(HEAPU8[$98+1>>0]<<8);
    $100 = $1;
    $101 = HEAP32[$100>>2]|0;
    $102 = HEAPU8[$101>>0]|(HEAPU8[$101+1>>0]<<8)|(HEAPU8[$101+2>>0]<<16)|(HEAPU8[$101+3>>0]<<24);
    $103 = ((($102)) + 15|0);
    $104 = HEAPU8[$103>>0]|(HEAPU8[$103+1>>0]<<8);
    __set_error_pos($89,$94,$99,$104);
    $result = 3;
    $113 = $result;
    STACKTOP = sp;return ($113|0);
   }
  }
 }
 $105 = $0;
 $106 = $0;
 $107 = ((($106)) + 67|0);
 $108 = HEAPU8[$107>>0]|(HEAPU8[$107+1>>0]<<8)|(HEAPU8[$107+2>>0]<<16)|(HEAPU8[$107+3>>0]<<24);
 $109 = (__set_current_error($105,18,$108)|0);
 $110 = ($109<<24>>24)!=(0);
 if (!($110)) {
  $113 = $result;
  STACKTOP = sp;return ($113|0);
 }
 $111 = $0;
 __set_error_pos($111,0,0,0);
 $result = 3;
 $113 = $result;
 STACKTOP = sp;return ($113|0);
}
function __is_print_terminal($s,$obj) {
 $s = $s|0;
 $obj = $obj|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $s;
 $1 = $obj;
 $result = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 if (!($or$cond)) {
  ___assert_fail((11434|0),(4322|0),4796,(14610|0));
  // unreachable;
 }
 $6 = $1;
 $7 = ($6|0)!=(0|0);
 if ($7) {
  $8 = $1;
  $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
  $10 = ($9|0)==(22);
  if ($10) {
   $47 = 1;
  } else {
   label = 5;
  }
 } else {
  label = 5;
 }
 do {
  if ((label|0) == 5) {
   $11 = $1;
   $12 = HEAPU8[$11>>0]|(HEAPU8[$11+1>>0]<<8)|(HEAPU8[$11+2>>0]<<16)|(HEAPU8[$11+3>>0]<<24);
   $13 = ($12|0)==(19);
   if ($13) {
    $14 = $1;
    $15 = ((($14)) + 4|0);
    $16 = HEAP8[$15>>0]|0;
    $17 = $16 << 24 >> 24;
    $18 = ($17|0)==(58);
    if ($18) {
     $47 = 1;
     break;
    }
   }
   $19 = $1;
   $20 = HEAPU8[$19>>0]|(HEAPU8[$19+1>>0]<<8)|(HEAPU8[$19+2>>0]<<16)|(HEAPU8[$19+3>>0]<<24);
   $21 = ($20|0)==(8);
   if ($21) {
    $22 = $1;
    $23 = ((($22)) + 4|0);
    $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
    $25 = ((($24)) + 4|0);
    $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
    $27 = ($26|0)==(25|0);
    if ($27) {
     $47 = 1;
     break;
    }
   }
   $28 = $1;
   $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
   $30 = ($29|0)==(8);
   if ($30) {
    $31 = $1;
    $32 = ((($31)) + 4|0);
    $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
    $34 = ((($33)) + 4|0);
    $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
    $36 = ($35|0)==(26|0);
    if ($36) {
     $47 = 1;
     break;
    }
   }
   $37 = $1;
   $38 = HEAPU8[$37>>0]|(HEAPU8[$37+1>>0]<<8)|(HEAPU8[$37+2>>0]<<16)|(HEAPU8[$37+3>>0]<<24);
   $39 = ($38|0)==(8);
   if ($39) {
    $40 = $1;
    $41 = ((($40)) + 4|0);
    $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
    $43 = ((($42)) + 4|0);
    $44 = HEAPU8[$43>>0]|(HEAPU8[$43+1>>0]<<8)|(HEAPU8[$43+2>>0]<<16)|(HEAPU8[$43+3>>0]<<24);
    $45 = ($44|0)==(27|0);
    $47 = $45;
   } else {
    $47 = 0;
   }
  }
 } while(0);
 $46 = $47&1;
 $48 = $46&255;
 $result = $48;
 $49 = $result;
 STACKTOP = sp;return ($49|0);
}
function _mb_uu_strlen($ch) {
 $ch = $ch|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $result = 0, $t = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $ch;
 $result = 0;
 $2 = $1;
 $3 = ($2|0)!=(0|0);
 do {
  if ($3) {
   while(1) {
    $4 = $1;
    $5 = HEAP8[$4>>0]|0;
    $6 = ($5<<24>>24)!=(0);
    if (!($6)) {
     label = 7;
     break;
    }
    $7 = $1;
    $8 = (_mb_uu_ischar($7)|0);
    $t = $8;
    $9 = $t;
    $10 = ($9|0)<=(0);
    $11 = $t;
    if ($10) {
     label = 5;
     break;
    }
    $12 = $1;
    $13 = (($12) + ($11)|0);
    $1 = $13;
    $14 = $result;
    $15 = (($14) + 1)|0;
    $result = $15;
   }
   if ((label|0) == 5) {
    $0 = $11;
    break;
   }
   else if ((label|0) == 7) {
    $16 = $result;
    $0 = $16;
    break;
   }
  } else {
   $0 = 0;
  }
 } while(0);
 $17 = $0;
 STACKTOP = sp;return ($17|0);
}
function __coll_iterator($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $9 = 0, $coll = 0, $dit = 0, $lit = 0, $ocoll = 0, $or$cond = 0, $os = 0, $result = 0, $ret = 0, $ret$byval_copy = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ret$byval_copy = sp + 24|0;
 $coll = sp + 64|0;
 $ocoll = sp + 40|0;
 $ret = sp + 32|0;
 $0 = $s;
 $1 = $l;
 $result = 0;
 $lit = 0;
 $dit = 0;
 $os = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),19308,(14836|0));
  // unreachable;
 }
 $6 = ((($coll)) + 4|0);
 ;HEAP8[$6>>0]=0|0;HEAP8[$6+1>>0]=0|0;HEAP8[$6+2>>0]=0|0;HEAP8[$6+3>>0]=0|0;
 HEAP8[$coll>>0]=0&255;HEAP8[$coll+1>>0]=(0>>8)&255;HEAP8[$coll+2>>0]=(0>>16)&255;HEAP8[$coll+3>>0]=0>>24;
 $7 = ((($ret)) + 4|0);
 ;HEAP8[$7>>0]=0|0;HEAP8[$7+1>>0]=0|0;HEAP8[$7+2>>0]=0|0;HEAP8[$7+3>>0]=0|0;
 HEAP8[$ret>>0]=0&255;HEAP8[$ret+1>>0]=(0>>8)&255;HEAP8[$ret+2>>0]=(0>>16)&255;HEAP8[$ret+3>>0]=0>>24;
 $8 = $0;
 $9 = $1;
 $10 = (_mb_attempt_open_bracket($8,$9)|0);
 $result = $10;
 $11 = $result;
 $12 = ($11|0)!=(0);
 if ($12) {
  $84 = $0;
  __assign_public_value($84,$coll,0,1);
  $85 = $result;
  STACKTOP = sp;return ($85|0);
 }
 $13 = $0;
 $14 = $1;
 $15 = (_mb_pop_value($13,$14,$coll)|0);
 $result = $15;
 $16 = $result;
 $17 = ($16|0)!=(0);
 if ($17) {
  $84 = $0;
  __assign_public_value($84,$coll,0,1);
  $85 = $result;
  STACKTOP = sp;return ($85|0);
 }
 $18 = $0;
 $19 = $1;
 $20 = (__try_overridden($18,$19,$coll,6194,64)|0);
 $os = $20;
 $21 = $os;
 $22 = $21 & 1;
 $23 = ($22|0)==(0);
 L10: do {
  if ($23) {
   dest=$ocoll; stop=dest+17|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
   HEAP8[$ocoll>>0]=0&255;HEAP8[$ocoll+1>>0]=(0>>8)&255;HEAP8[$ocoll+2>>0]=(0>>16)&255;HEAP8[$ocoll+3>>0]=0>>24;
   $24 = HEAPU8[$coll>>0]|(HEAPU8[$coll+1>>0]<<8)|(HEAPU8[$coll+2>>0]<<16)|(HEAPU8[$coll+3>>0]<<24);
   switch ($24|0) {
   case 256:  {
    (__public_value_to_internal_object($coll,$ocoll)|0);
    $25 = ((($ocoll)) + 4|0);
    $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
    $27 = (__create_list_it($26,0)|0);
    $lit = $27;
    HEAP8[$ret>>0]=512&255;HEAP8[$ret+1>>0]=(512>>8)&255;HEAP8[$ret+2>>0]=(512>>16)&255;HEAP8[$ret+3>>0]=512>>24;
    $28 = $lit;
    $29 = ((($ret)) + 4|0);
    HEAP8[$29>>0]=$28&255;HEAP8[$29+1>>0]=($28>>8)&255;HEAP8[$29+2>>0]=($28>>16)&255;HEAP8[$29+3>>0]=$28>>24;
    break L10;
    break;
   }
   case 1024:  {
    (__public_value_to_internal_object($coll,$ocoll)|0);
    $30 = ((($ocoll)) + 4|0);
    $31 = HEAPU8[$30>>0]|(HEAPU8[$30+1>>0]<<8)|(HEAPU8[$30+2>>0]<<16)|(HEAPU8[$30+3>>0]<<24);
    $32 = (__create_dict_it($31,0)|0);
    $dit = $32;
    HEAP8[$ret>>0]=2048&255;HEAP8[$ret+1>>0]=(2048>>8)&255;HEAP8[$ret+2>>0]=(2048>>16)&255;HEAP8[$ret+3>>0]=2048>>24;
    $33 = $dit;
    $34 = ((($ret)) + 4|0);
    HEAP8[$34>>0]=$33&255;HEAP8[$34+1>>0]=($33>>8)&255;HEAP8[$34+2>>0]=($33>>16)&255;HEAP8[$34+3>>0]=$33>>24;
    break L10;
    break;
   }
   default: {
    $35 = $1;
    $36 = ($35|0)!=(0|0);
    if ($36) {
     $37 = $1;
     $38 = HEAP32[$37>>2]|0;
     $39 = ($38|0)!=(0|0);
     if ($39) {
      $40 = $1;
      $41 = HEAP32[$40>>2]|0;
      $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
      $43 = ($42|0)!=(0|0);
      if ($43) {
       $44 = $0;
       $45 = $0;
       $46 = ((($45)) + 67|0);
       $47 = HEAPU8[$46>>0]|(HEAPU8[$46+1>>0]<<8)|(HEAPU8[$46+2>>0]<<16)|(HEAPU8[$46+3>>0]<<24);
       $48 = (__set_current_error($44,65,$47)|0);
       $49 = ($48<<24>>24)!=(0);
       if (!($49)) {
        $84 = $0;
        __assign_public_value($84,$coll,0,1);
        $85 = $result;
        STACKTOP = sp;return ($85|0);
       }
       $50 = $0;
       $51 = $1;
       $52 = HEAP32[$51>>2]|0;
       $53 = HEAPU8[$52>>0]|(HEAPU8[$52+1>>0]<<8)|(HEAPU8[$52+2>>0]<<16)|(HEAPU8[$52+3>>0]<<24);
       $54 = ((($53)) + 9|0);
       $55 = HEAPU8[$54>>0]|(HEAPU8[$54+1>>0]<<8)|(HEAPU8[$54+2>>0]<<16)|(HEAPU8[$54+3>>0]<<24);
       $56 = $1;
       $57 = HEAP32[$56>>2]|0;
       $58 = HEAPU8[$57>>0]|(HEAPU8[$57+1>>0]<<8)|(HEAPU8[$57+2>>0]<<16)|(HEAPU8[$57+3>>0]<<24);
       $59 = ((($58)) + 13|0);
       $60 = HEAPU8[$59>>0]|(HEAPU8[$59+1>>0]<<8);
       $61 = $1;
       $62 = HEAP32[$61>>2]|0;
       $63 = HEAPU8[$62>>0]|(HEAPU8[$62+1>>0]<<8)|(HEAPU8[$62+2>>0]<<16)|(HEAPU8[$62+3>>0]<<24);
       $64 = ((($63)) + 15|0);
       $65 = HEAPU8[$64>>0]|(HEAPU8[$64+1>>0]<<8);
       __set_error_pos($50,$55,$60,$65);
       $result = 3;
       $84 = $0;
       __assign_public_value($84,$coll,0,1);
       $85 = $result;
       STACKTOP = sp;return ($85|0);
      }
     }
    }
    $66 = $0;
    $67 = $0;
    $68 = ((($67)) + 67|0);
    $69 = HEAPU8[$68>>0]|(HEAPU8[$68+1>>0]<<8)|(HEAPU8[$68+2>>0]<<16)|(HEAPU8[$68+3>>0]<<24);
    $70 = (__set_current_error($66,65,$69)|0);
    $71 = ($70<<24>>24)!=(0);
    if (!($71)) {
     $84 = $0;
     __assign_public_value($84,$coll,0,1);
     $85 = $result;
     STACKTOP = sp;return ($85|0);
    }
    $72 = $0;
    __set_error_pos($72,0,0,0);
    $result = 3;
    $84 = $0;
    __assign_public_value($84,$coll,0,1);
    $85 = $result;
    STACKTOP = sp;return ($85|0);
   }
   }
  }
 } while(0);
 $73 = $0;
 $74 = $1;
 $75 = (_mb_attempt_close_bracket($73,$74)|0);
 $result = $75;
 $76 = $result;
 $77 = ($76|0)!=(0);
 if ($77) {
  $84 = $0;
  __assign_public_value($84,$coll,0,1);
  $85 = $result;
  STACKTOP = sp;return ($85|0);
 }
 $78 = $os;
 $79 = $78 & 2;
 $80 = ($79|0)==(0);
 if (!($80)) {
  $84 = $0;
  __assign_public_value($84,$coll,0,1);
  $85 = $result;
  STACKTOP = sp;return ($85|0);
 }
 $81 = $0;
 $82 = $1;
 ;HEAP32[$ret$byval_copy>>2]=HEAP32[$ret>>2]|0;HEAP32[$ret$byval_copy+4>>2]=HEAP32[$ret+4>>2]|0;
 $83 = (_mb_push_value($81,$82,$ret$byval_copy)|0);
 $result = $83;
 $84 = $0;
 __assign_public_value($84,$coll,0,1);
 $85 = $result;
 STACKTOP = sp;return ($85|0);
}
function __real_to_str_std($r,$str,$size) {
 $r = +$r;
 $str = $str|0;
 $size = $size|0;
 var $0 = 0.0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0;
 var $4 = 0.0, $5 = 0.0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer = sp;
 $0 = $r;
 $1 = $str;
 $2 = $size;
 $i = 0;
 $3 = $1;
 $4 = $0;
 $5 = $4;
 HEAPF64[$vararg_buffer>>3] = $5;
 $6 = (_sprintf($3,14605,$vararg_buffer)|0);
 $7 = $2;
 $8 = ($6>>>0)>=($7>>>0);
 if ($8) {
  ___assert_fail((14860|0),(4322|0),6256,(14884|0));
  // unreachable;
 }
 $i = 0;
 while(1) {
  $9 = $i;
  $10 = $2;
  $11 = ($9>>>0)<($10>>>0);
  if (!($11)) {
   label = 9;
   break;
  }
  $12 = $i;
  $13 = $1;
  $14 = (($13) + ($12)|0);
  $15 = HEAP8[$14>>0]|0;
  $16 = $15 << 24 >> 24;
  $17 = ($16|0)==(44);
  $18 = $i;
  $19 = $1;
  $20 = (($19) + ($18)|0);
  if ($17) {
   label = 6;
   break;
  }
  $21 = HEAP8[$20>>0]|0;
  $22 = $21 << 24 >> 24;
  $23 = ($22|0)==(0);
  if ($23) {
   label = 9;
   break;
  }
  $24 = $i;
  $25 = (($24) + 1)|0;
  $i = $25;
 }
 if ((label|0) == 6) {
  HEAP8[$20>>0] = 46;
  STACKTOP = sp;return;
 }
 else if ((label|0) == 9) {
  STACKTOP = sp;return;
 }
}
function _mb_uu_substr($ch,$begin,$count,$o) {
 $ch = $ch|0;
 $begin = $begin|0;
 $count = $count|0;
 $o = $o|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $8 = 0, $9 = 0, $b = 0, $cnt = 0, $e = 0;
 var $l = 0, $or$cond = 0, $or$cond3 = 0, $or$cond3$not = 0, $or$cond5 = 0, $t = 0, $t1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $ch;
 $2 = $begin;
 $3 = $count;
 $4 = $o;
 $cnt = 0;
 $b = 0;
 $e = 0;
 $l = 0;
 $5 = $1;
 $6 = ($5|0)==(0|0);
 $7 = $2;
 $8 = ($7|0)<(0);
 $or$cond = $6 | $8;
 $9 = $3;
 $10 = ($9|0)<=(0);
 $or$cond3 = $or$cond | $10;
 $or$cond3$not = $or$cond3 ^ 1;
 $11 = $4;
 $12 = ($11|0)!=(0|0);
 $or$cond5 = $or$cond3$not & $12;
 if (!($or$cond5)) {
  $0 = -1;
  $76 = $0;
  STACKTOP = sp;return ($76|0);
 }
 while(1) {
  $13 = $1;
  $14 = HEAP8[$13>>0]|0;
  $15 = ($14<<24>>24)!=(0);
  if (!($15)) {
   break;
  }
  $16 = $1;
  $17 = (_mb_uu_ischar($16)|0);
  $t = $17;
  $18 = $t;
  $19 = ($18|0)<=(0);
  if ($19) {
   label = 5;
   break;
  }
  $21 = $cnt;
  $22 = $2;
  $23 = ($21|0)==($22|0);
  if ($23) {
   label = 7;
   break;
  }
  $25 = $t;
  $26 = $1;
  $27 = (($26) + ($25)|0);
  $1 = $27;
  $28 = $cnt;
  $29 = (($28) + 1)|0;
  $cnt = $29;
 }
 if ((label|0) == 5) {
  $20 = $t;
  $0 = $20;
  $76 = $0;
  STACKTOP = sp;return ($76|0);
 }
 else if ((label|0) == 7) {
  $24 = $1;
  $b = $24;
 }
 while(1) {
  $30 = $1;
  $31 = HEAP8[$30>>0]|0;
  $32 = ($31<<24>>24)!=(0);
  if (!($32)) {
   break;
  }
  $33 = $1;
  $34 = (_mb_uu_ischar($33)|0);
  $t1 = $34;
  $35 = $t1;
  $36 = ($35|0)<=(0);
  if ($36) {
   label = 11;
   break;
  }
  $38 = $cnt;
  $39 = $2;
  $40 = $3;
  $41 = (($39) + ($40))|0;
  $42 = ($38|0)==($41|0);
  if ($42) {
   label = 13;
   break;
  }
  $44 = $t1;
  $45 = $1;
  $46 = (($45) + ($44)|0);
  $1 = $46;
  $47 = $1;
  $e = $47;
  $48 = $cnt;
  $49 = (($48) + 1)|0;
  $cnt = $49;
 }
 if ((label|0) == 11) {
  $37 = $t1;
  $0 = $37;
  $76 = $0;
  STACKTOP = sp;return ($76|0);
 }
 else if ((label|0) == 13) {
  $43 = $1;
  $e = $43;
 }
 $50 = $1;
 $51 = HEAP8[$50>>0]|0;
 $52 = ($51<<24>>24)!=(0);
 if (!($52)) {
  $53 = $cnt;
  $54 = $2;
  $55 = $3;
  $56 = (($54) + ($55))|0;
  $57 = ($53|0)!=($56|0);
  if ($57) {
   $0 = -1;
   $76 = $0;
   STACKTOP = sp;return ($76|0);
  }
 }
 $58 = $e;
 $59 = $b;
 $60 = $58;
 $61 = $59;
 $62 = (($60) - ($61))|0;
 $l = $62;
 $63 = $l;
 $64 = (($63) + 1)|0;
 $65 = (_mb_malloc($64)|0);
 $66 = $4;
 HEAP32[$66>>2] = $65;
 $67 = $4;
 $68 = HEAP32[$67>>2]|0;
 $69 = $b;
 $70 = $l;
 _memcpy(($68|0),($69|0),($70|0))|0;
 $71 = $l;
 $72 = $4;
 $73 = HEAP32[$72>>2]|0;
 $74 = (($73) + ($71)|0);
 HEAP8[$74>>0] = 0;
 $75 = $l;
 $0 = $75;
 $76 = $0;
 STACKTOP = sp;return ($76|0);
}
function __coll_list($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__hr = 0, $arg = 0, $arg$byval_copy = 0, $arg$byval_copy4 = 0, $ast = 0;
 var $begin = 0, $coll = 0, $end = 0, $obj = 0, $or$cond = 0, $or$cond3 = 0, $result = 0, $step = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $arg$byval_copy4 = sp + 56|0;
 $arg$byval_copy = sp + 48|0;
 $arg = sp + 64|0;
 $ast = sp + 16|0;
 $end = sp + 4|0;
 $1 = $s;
 $2 = $l;
 $result = 0;
 $coll = 0;
 $3 = $1;
 $4 = ($3|0)!=(0|0);
 $5 = $2;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),18640,(15648|0));
  // unreachable;
 }
 $7 = $1;
 $8 = $2;
 $9 = (_mb_attempt_open_bracket($7,$8)|0);
 $__hr = $9;
 $10 = $__hr;
 $11 = ($10|0)!=(0);
 if ($11) {
  $12 = $__hr;
  $0 = $12;
  $194 = $0;
  STACKTOP = sp;return ($194|0);
 }
 $13 = $1;
 $14 = (__create_list($13)|0);
 $coll = $14;
 $15 = $1;
 $16 = $2;
 $17 = (_mb_has_arg($15,$16)|0);
 $18 = ($17|0)!=(0);
 L8: do {
  if ($18) {
   HEAP32[$ast>>2] = 0;
   $obj = 0;
   $19 = ((($arg)) + 4|0);
   ;HEAP8[$19>>0]=0|0;HEAP8[$19+1>>0]=0|0;HEAP8[$19+2>>0]=0|0;HEAP8[$19+3>>0]=0|0;
   HEAP8[$arg>>0]=0&255;HEAP8[$arg+1>>0]=(0>>8)&255;HEAP8[$arg+2>>0]=(0>>16)&255;HEAP8[$arg+3>>0]=0>>24;
   $20 = $1;
   $21 = $2;
   $22 = (_mb_pop_value($20,$21,$arg)|0);
   $result = $22;
   $23 = $result;
   $24 = ($23|0)!=(0);
   if ($24) {
    label = 38;
   } else {
    $25 = $2;
    $26 = HEAP32[$25>>2]|0;
    HEAP32[$ast>>2] = $26;
    $27 = HEAP32[$ast>>2]|0;
    $28 = ($27|0)!=(0|0);
    if ($28) {
     $29 = HEAP32[$ast>>2]|0;
     $30 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8)|(HEAPU8[$29+2>>0]<<16)|(HEAPU8[$29+3>>0]<<24);
     $obj = $30;
    }
    $31 = HEAPU8[$arg>>0]|(HEAPU8[$arg+1>>0]<<8)|(HEAPU8[$arg+2>>0]<<16)|(HEAPU8[$arg+3>>0]<<24);
    $32 = ($31|0)==(2);
    $33 = $obj;
    $34 = ($33|0)!=(0|0);
    $or$cond3 = $32 & $34;
    if ($or$cond3) {
     $35 = $obj;
     $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
     $37 = ($36|0)==(8);
     if ($37) {
      $38 = $obj;
      $39 = ((($38)) + 4|0);
      $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8)|(HEAPU8[$39+2>>0]<<16)|(HEAPU8[$39+3>>0]<<24);
      $41 = ((($40)) + 4|0);
      $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
      $43 = ($42|0)==(30|0);
      if ($43) {
       $44 = ((($arg)) + 4|0);
       $45 = HEAPU8[$44>>0]|(HEAPU8[$44+1>>0]<<8)|(HEAPU8[$44+2>>0]<<16)|(HEAPU8[$44+3>>0]<<24);
       $begin = $45;
       HEAP32[$end>>2] = 0;
       $step = 0;
       $46 = HEAP32[$ast>>2]|0;
       $47 = ((($46)) + 8|0);
       $48 = HEAPU8[$47>>0]|(HEAPU8[$47+1>>0]<<8)|(HEAPU8[$47+2>>0]<<16)|(HEAPU8[$47+3>>0]<<24);
       HEAP32[$ast>>2] = $48;
       $49 = $1;
       $50 = (_mb_pop_int($49,$ast,$end)|0);
       $result = $50;
       $51 = $result;
       $52 = ($51|0)!=(0);
       if ($52) {
        label = 38;
        break;
       }
       $53 = HEAP32[$end>>2]|0;
       $54 = $begin;
       $55 = (($53) - ($54))|0;
       $56 = ($55|0)!=(0);
       if ($56) {
        $57 = HEAP32[$end>>2]|0;
        $58 = $begin;
        $59 = (($57) - ($58))|0;
        $60 = ($59|0)>(0);
        $61 = $60 ? 1 : -1;
        $62 = $61;
       } else {
        $62 = 0;
       }
       $step = $62;
       $63 = (_mb_malloc(4)|0);
       $64 = $coll;
       $65 = ((($64)) + 35|0);
       HEAP8[$65>>0]=$63&255;HEAP8[$65+1>>0]=($63>>8)&255;HEAP8[$65+2>>0]=($63>>16)&255;HEAP8[$65+3>>0]=$63>>24;
       $66 = $begin;
       $67 = $coll;
       $68 = ((($67)) + 35|0);
       $69 = HEAPU8[$68>>0]|(HEAPU8[$68+1>>0]<<8)|(HEAPU8[$68+2>>0]<<16)|(HEAPU8[$68+3>>0]<<24);
       HEAP32[$69>>2] = $66;
       $70 = HEAP32[$end>>2]|0;
       $71 = $begin;
       $72 = (($70) - ($71))|0;
       $73 = $step;
       $74 = (($72) + ($73))|0;
       $75 = $coll;
       $76 = ((($75)) + 31|0);
       HEAP8[$76>>0]=$74&255;HEAP8[$76+1>>0]=($74>>8)&255;HEAP8[$76+2>>0]=($74>>16)&255;HEAP8[$76+3>>0]=$74>>24;
       $77 = $coll;
       $78 = ((($77)) + 31|0);
       $79 = HEAPU8[$78>>0]|(HEAPU8[$78+1>>0]<<8)|(HEAPU8[$78+2>>0]<<16)|(HEAPU8[$78+3>>0]<<24);
       $80 = ($79|0)!=(0);
       if (!($80)) {
        $81 = $coll;
        $82 = ((($81)) + 31|0);
        HEAP8[$82>>0]=1&255;HEAP8[$82+1>>0]=(1>>8)&255;HEAP8[$82+2>>0]=(1>>16)&255;HEAP8[$82+3>>0]=1>>24;
       }
       $83 = HEAP32[$ast>>2]|0;
       $84 = $2;
       HEAP32[$84>>2] = $83;
       label = 36;
       break;
      }
     }
    }
    $85 = $coll;
    $86 = (__push_list($85,$arg,0)|0);
    $87 = ($86<<24>>24)!=(0);
    if (!($87)) {
     $88 = $2;
     $89 = ($88|0)!=(0|0);
     if ($89) {
      $90 = $2;
      $91 = HEAP32[$90>>2]|0;
      $92 = ($91|0)!=(0|0);
      if ($92) {
       $93 = $2;
       $94 = HEAP32[$93>>2]|0;
       $95 = HEAPU8[$94>>0]|(HEAPU8[$94+1>>0]<<8)|(HEAPU8[$94+2>>0]<<16)|(HEAPU8[$94+3>>0]<<24);
       $96 = ($95|0)!=(0|0);
       if ($96) {
        $97 = $1;
        $98 = $1;
        $99 = ((($98)) + 67|0);
        $100 = HEAPU8[$99>>0]|(HEAPU8[$99+1>>0]<<8)|(HEAPU8[$99+2>>0]<<16)|(HEAPU8[$99+3>>0]<<24);
        $101 = (__set_current_error($97,48,$100)|0);
        $102 = ($101<<24>>24)!=(0);
        if (!($102)) {
         label = 38;
         break;
        }
        $103 = $1;
        $104 = $2;
        $105 = HEAP32[$104>>2]|0;
        $106 = HEAPU8[$105>>0]|(HEAPU8[$105+1>>0]<<8)|(HEAPU8[$105+2>>0]<<16)|(HEAPU8[$105+3>>0]<<24);
        $107 = ((($106)) + 9|0);
        $108 = HEAPU8[$107>>0]|(HEAPU8[$107+1>>0]<<8)|(HEAPU8[$107+2>>0]<<16)|(HEAPU8[$107+3>>0]<<24);
        $109 = $2;
        $110 = HEAP32[$109>>2]|0;
        $111 = HEAPU8[$110>>0]|(HEAPU8[$110+1>>0]<<8)|(HEAPU8[$110+2>>0]<<16)|(HEAPU8[$110+3>>0]<<24);
        $112 = ((($111)) + 13|0);
        $113 = HEAPU8[$112>>0]|(HEAPU8[$112+1>>0]<<8);
        $114 = $2;
        $115 = HEAP32[$114>>2]|0;
        $116 = HEAPU8[$115>>0]|(HEAPU8[$115+1>>0]<<8)|(HEAPU8[$115+2>>0]<<16)|(HEAPU8[$115+3>>0]<<24);
        $117 = ((($116)) + 15|0);
        $118 = HEAPU8[$117>>0]|(HEAPU8[$117+1>>0]<<8);
        __set_error_pos($103,$108,$113,$118);
        $result = 3;
        label = 38;
        break;
       }
      }
     }
     $119 = $1;
     $120 = $1;
     $121 = ((($120)) + 67|0);
     $122 = HEAPU8[$121>>0]|(HEAPU8[$121+1>>0]<<8)|(HEAPU8[$121+2>>0]<<16)|(HEAPU8[$121+3>>0]<<24);
     $123 = (__set_current_error($119,48,$122)|0);
     $124 = ($123<<24>>24)!=(0);
     if (!($124)) {
      label = 38;
      break;
     }
     $125 = $1;
     __set_error_pos($125,0,0,0);
     $result = 3;
     label = 38;
     break;
    }
    while(1) {
     $126 = $1;
     $127 = $2;
     $128 = (_mb_has_arg($126,$127)|0);
     $129 = ($128|0)!=(0);
     if (!($129)) {
      label = 36;
      break L8;
     }
     $130 = ((($arg)) + 4|0);
     ;HEAP8[$130>>0]=0|0;HEAP8[$130+1>>0]=0|0;HEAP8[$130+2>>0]=0|0;HEAP8[$130+3>>0]=0|0;
     HEAP8[$arg>>0]=0&255;HEAP8[$arg+1>>0]=(0>>8)&255;HEAP8[$arg+2>>0]=(0>>16)&255;HEAP8[$arg+3>>0]=0>>24;
     $131 = $1;
     $132 = $2;
     $133 = (_mb_pop_value($131,$132,$arg)|0);
     $result = $133;
     $134 = $result;
     $135 = ($134|0)!=(0);
     if ($135) {
      label = 38;
      break L8;
     }
     $136 = $coll;
     $137 = (__push_list($136,$arg,0)|0);
     $138 = ($137<<24>>24)!=(0);
     if (!($138)) {
      break;
     }
    }
    $139 = $2;
    $140 = ($139|0)!=(0|0);
    if ($140) {
     $141 = $2;
     $142 = HEAP32[$141>>2]|0;
     $143 = ($142|0)!=(0|0);
     if ($143) {
      $144 = $2;
      $145 = HEAP32[$144>>2]|0;
      $146 = HEAPU8[$145>>0]|(HEAPU8[$145+1>>0]<<8)|(HEAPU8[$145+2>>0]<<16)|(HEAPU8[$145+3>>0]<<24);
      $147 = ($146|0)!=(0|0);
      if ($147) {
       $148 = $1;
       $149 = $1;
       $150 = ((($149)) + 67|0);
       $151 = HEAPU8[$150>>0]|(HEAPU8[$150+1>>0]<<8)|(HEAPU8[$150+2>>0]<<16)|(HEAPU8[$150+3>>0]<<24);
       $152 = (__set_current_error($148,48,$151)|0);
       $153 = ($152<<24>>24)!=(0);
       if (!($153)) {
        label = 38;
        break;
       }
       $154 = $1;
       $155 = $2;
       $156 = HEAP32[$155>>2]|0;
       $157 = HEAPU8[$156>>0]|(HEAPU8[$156+1>>0]<<8)|(HEAPU8[$156+2>>0]<<16)|(HEAPU8[$156+3>>0]<<24);
       $158 = ((($157)) + 9|0);
       $159 = HEAPU8[$158>>0]|(HEAPU8[$158+1>>0]<<8)|(HEAPU8[$158+2>>0]<<16)|(HEAPU8[$158+3>>0]<<24);
       $160 = $2;
       $161 = HEAP32[$160>>2]|0;
       $162 = HEAPU8[$161>>0]|(HEAPU8[$161+1>>0]<<8)|(HEAPU8[$161+2>>0]<<16)|(HEAPU8[$161+3>>0]<<24);
       $163 = ((($162)) + 13|0);
       $164 = HEAPU8[$163>>0]|(HEAPU8[$163+1>>0]<<8);
       $165 = $2;
       $166 = HEAP32[$165>>2]|0;
       $167 = HEAPU8[$166>>0]|(HEAPU8[$166+1>>0]<<8)|(HEAPU8[$166+2>>0]<<16)|(HEAPU8[$166+3>>0]<<24);
       $168 = ((($167)) + 15|0);
       $169 = HEAPU8[$168>>0]|(HEAPU8[$168+1>>0]<<8);
       __set_error_pos($154,$159,$164,$169);
       $result = 3;
       label = 38;
       break;
      }
     }
    }
    $170 = $1;
    $171 = $1;
    $172 = ((($171)) + 67|0);
    $173 = HEAPU8[$172>>0]|(HEAPU8[$172+1>>0]<<8)|(HEAPU8[$172+2>>0]<<16)|(HEAPU8[$172+3>>0]<<24);
    $174 = (__set_current_error($170,48,$173)|0);
    $175 = ($174<<24>>24)!=(0);
    if ($175) {
     $176 = $1;
     __set_error_pos($176,0,0,0);
     $result = 3;
     label = 38;
    } else {
     label = 38;
    }
   }
  } else {
   label = 36;
  }
 } while(0);
 if ((label|0) == 36) {
  $177 = $1;
  $178 = $2;
  $179 = (_mb_attempt_close_bracket($177,$178)|0);
  $result = $179;
  $180 = $result;
  $181 = ($180|0)!=(0);
  if ($181) {
   label = 38;
  } else {
   HEAP8[$arg>>0]=256&255;HEAP8[$arg+1>>0]=(256>>8)&255;HEAP8[$arg+2>>0]=(256>>16)&255;HEAP8[$arg+3>>0]=256>>24;
   $182 = $coll;
   $183 = ((($arg)) + 4|0);
   HEAP8[$183>>0]=$182&255;HEAP8[$183+1>>0]=($182>>8)&255;HEAP8[$183+2>>0]=($182>>16)&255;HEAP8[$183+3>>0]=$182>>24;
   $184 = $1;
   $185 = $2;
   ;HEAP32[$arg$byval_copy>>2]=HEAP32[$arg>>2]|0;HEAP32[$arg$byval_copy+4>>2]=HEAP32[$arg+4>>2]|0;
   $186 = (_mb_push_value($184,$185,$arg$byval_copy)|0);
   $result = $186;
   $187 = $result;
   $188 = ($187|0)!=(0);
   if ($188) {
    label = 38;
   }
  }
 }
 if ((label|0) == 38) {
  $189 = ((($arg)) + 4|0);
  ;HEAP8[$189>>0]=0|0;HEAP8[$189+1>>0]=0|0;HEAP8[$189+2>>0]=0|0;HEAP8[$189+3>>0]=0|0;
  HEAP8[$arg>>0]=0&255;HEAP8[$arg+1>>0]=(0>>8)&255;HEAP8[$arg+2>>0]=(0>>16)&255;HEAP8[$arg+3>>0]=0>>24;
  $190 = $1;
  $191 = $2;
  ;HEAP32[$arg$byval_copy4>>2]=HEAP32[$arg>>2]|0;HEAP32[$arg$byval_copy4+4>>2]=HEAP32[$arg+4>>2]|0;
  (_mb_push_value($190,$191,$arg$byval_copy4)|0);
  $192 = $coll;
  __destroy_list($192);
 }
 $193 = $result;
 $0 = $193;
 $194 = $0;
 STACKTOP = sp;return ($194|0);
}
function __coll_dict($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $__hr = 0, $arg = 0, $arg$byval_copy = 0, $arg$byval_copy2 = 0, $coll = 0, $or$cond = 0, $result = 0, $val = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $arg$byval_copy2 = sp + 32|0;
 $arg$byval_copy = sp + 24|0;
 $arg = sp + 48|0;
 $val = sp + 40|0;
 $1 = $s;
 $2 = $l;
 $result = 0;
 $coll = 0;
 $3 = $1;
 $4 = ($3|0)!=(0|0);
 $5 = $2;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),18704,(15637|0));
  // unreachable;
 }
 $7 = $1;
 $8 = $2;
 $9 = (_mb_attempt_open_bracket($7,$8)|0);
 $__hr = $9;
 $10 = $__hr;
 $11 = ($10|0)!=(0);
 if ($11) {
  $12 = $__hr;
  $0 = $12;
  $89 = $0;
  STACKTOP = sp;return ($89|0);
 }
 $13 = $1;
 $14 = (__create_dict($13)|0);
 $coll = $14;
 while(1) {
  $15 = $1;
  $16 = $2;
  $17 = (_mb_has_arg($15,$16)|0);
  $18 = ($17|0)!=(0);
  if (!($18)) {
   label = 17;
   break;
  }
  $19 = ((($arg)) + 4|0);
  ;HEAP8[$19>>0]=0|0;HEAP8[$19+1>>0]=0|0;HEAP8[$19+2>>0]=0|0;HEAP8[$19+3>>0]=0|0;
  HEAP8[$arg>>0]=0&255;HEAP8[$arg+1>>0]=(0>>8)&255;HEAP8[$arg+2>>0]=(0>>16)&255;HEAP8[$arg+3>>0]=0>>24;
  $20 = ((($val)) + 4|0);
  ;HEAP8[$20>>0]=0|0;HEAP8[$20+1>>0]=0|0;HEAP8[$20+2>>0]=0|0;HEAP8[$20+3>>0]=0|0;
  HEAP8[$val>>0]=0&255;HEAP8[$val+1>>0]=(0>>8)&255;HEAP8[$val+2>>0]=(0>>16)&255;HEAP8[$val+3>>0]=0>>24;
  $21 = $1;
  $22 = $2;
  $23 = (_mb_pop_value($21,$22,$arg)|0);
  $result = $23;
  $24 = $result;
  $25 = ($24|0)!=(0);
  if ($25) {
   label = 19;
   break;
  }
  $26 = $1;
  $27 = $2;
  $28 = (_mb_pop_value($26,$27,$val)|0);
  $result = $28;
  $29 = $result;
  $30 = ($29|0)!=(0);
  if ($30) {
   label = 19;
   break;
  }
  $31 = $coll;
  $32 = (__set_dict($31,$arg,$val,0,0)|0);
  $33 = ($32<<24>>24)!=(0);
  if (!($33)) {
   label = 10;
   break;
  }
 }
 do {
  if ((label|0) == 10) {
   $34 = $2;
   $35 = ($34|0)!=(0|0);
   if ($35) {
    $36 = $2;
    $37 = HEAP32[$36>>2]|0;
    $38 = ($37|0)!=(0|0);
    if ($38) {
     $39 = $2;
     $40 = HEAP32[$39>>2]|0;
     $41 = HEAPU8[$40>>0]|(HEAPU8[$40+1>>0]<<8)|(HEAPU8[$40+2>>0]<<16)|(HEAPU8[$40+3>>0]<<24);
     $42 = ($41|0)!=(0|0);
     if ($42) {
      $43 = $1;
      $44 = $1;
      $45 = ((($44)) + 67|0);
      $46 = HEAPU8[$45>>0]|(HEAPU8[$45+1>>0]<<8)|(HEAPU8[$45+2>>0]<<16)|(HEAPU8[$45+3>>0]<<24);
      $47 = (__set_current_error($43,48,$46)|0);
      $48 = ($47<<24>>24)!=(0);
      if (!($48)) {
       label = 19;
       break;
      }
      $49 = $1;
      $50 = $2;
      $51 = HEAP32[$50>>2]|0;
      $52 = HEAPU8[$51>>0]|(HEAPU8[$51+1>>0]<<8)|(HEAPU8[$51+2>>0]<<16)|(HEAPU8[$51+3>>0]<<24);
      $53 = ((($52)) + 9|0);
      $54 = HEAPU8[$53>>0]|(HEAPU8[$53+1>>0]<<8)|(HEAPU8[$53+2>>0]<<16)|(HEAPU8[$53+3>>0]<<24);
      $55 = $2;
      $56 = HEAP32[$55>>2]|0;
      $57 = HEAPU8[$56>>0]|(HEAPU8[$56+1>>0]<<8)|(HEAPU8[$56+2>>0]<<16)|(HEAPU8[$56+3>>0]<<24);
      $58 = ((($57)) + 13|0);
      $59 = HEAPU8[$58>>0]|(HEAPU8[$58+1>>0]<<8);
      $60 = $2;
      $61 = HEAP32[$60>>2]|0;
      $62 = HEAPU8[$61>>0]|(HEAPU8[$61+1>>0]<<8)|(HEAPU8[$61+2>>0]<<16)|(HEAPU8[$61+3>>0]<<24);
      $63 = ((($62)) + 15|0);
      $64 = HEAPU8[$63>>0]|(HEAPU8[$63+1>>0]<<8);
      __set_error_pos($49,$54,$59,$64);
      $result = 3;
      label = 19;
      break;
     }
    }
   }
   $65 = $1;
   $66 = $1;
   $67 = ((($66)) + 67|0);
   $68 = HEAPU8[$67>>0]|(HEAPU8[$67+1>>0]<<8)|(HEAPU8[$67+2>>0]<<16)|(HEAPU8[$67+3>>0]<<24);
   $69 = (__set_current_error($65,48,$68)|0);
   $70 = ($69<<24>>24)!=(0);
   if ($70) {
    $71 = $1;
    __set_error_pos($71,0,0,0);
    $result = 3;
    label = 19;
   } else {
    label = 19;
   }
  }
  else if ((label|0) == 17) {
   $72 = $1;
   $73 = $2;
   $74 = (_mb_attempt_close_bracket($72,$73)|0);
   $result = $74;
   $75 = $result;
   $76 = ($75|0)!=(0);
   if ($76) {
    label = 19;
   } else {
    HEAP8[$arg>>0]=1024&255;HEAP8[$arg+1>>0]=(1024>>8)&255;HEAP8[$arg+2>>0]=(1024>>16)&255;HEAP8[$arg+3>>0]=1024>>24;
    $77 = $coll;
    $78 = ((($arg)) + 4|0);
    HEAP8[$78>>0]=$77&255;HEAP8[$78+1>>0]=($77>>8)&255;HEAP8[$78+2>>0]=($77>>16)&255;HEAP8[$78+3>>0]=$77>>24;
    $79 = $1;
    $80 = $2;
    ;HEAP32[$arg$byval_copy>>2]=HEAP32[$arg>>2]|0;HEAP32[$arg$byval_copy+4>>2]=HEAP32[$arg+4>>2]|0;
    $81 = (_mb_push_value($79,$80,$arg$byval_copy)|0);
    $result = $81;
    $82 = $result;
    $83 = ($82|0)!=(0);
    if ($83) {
     label = 19;
    }
   }
  }
 } while(0);
 if ((label|0) == 19) {
  $84 = ((($arg)) + 4|0);
  ;HEAP8[$84>>0]=0|0;HEAP8[$84+1>>0]=0|0;HEAP8[$84+2>>0]=0|0;HEAP8[$84+3>>0]=0|0;
  HEAP8[$arg>>0]=0&255;HEAP8[$arg+1>>0]=(0>>8)&255;HEAP8[$arg+2>>0]=(0>>16)&255;HEAP8[$arg+3>>0]=0>>24;
  $85 = $1;
  $86 = $2;
  ;HEAP32[$arg$byval_copy2>>2]=HEAP32[$arg>>2]|0;HEAP32[$arg$byval_copy2+4>>2]=HEAP32[$arg+4>>2]|0;
  (_mb_push_value($85,$86,$arg$byval_copy2)|0);
  $87 = $coll;
  __destroy_dict($87);
 }
 $88 = $result;
 $0 = $88;
 $89 = $0;
 STACKTOP = sp;return ($89|0);
}
function __coll_push($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $arg = 0, $coll = 0, $coll$byval_copy = 0, $olst = 0, $or$cond = 0, $os = 0, $result = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $coll$byval_copy = sp + 16|0;
 $coll = sp + 56|0;
 $arg = sp + 48|0;
 $olst = sp + 24|0;
 $0 = $s;
 $1 = $l;
 $result = 0;
 $os = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),18744,(15626|0));
  // unreachable;
 }
 $6 = ((($coll)) + 4|0);
 ;HEAP8[$6>>0]=0|0;HEAP8[$6+1>>0]=0|0;HEAP8[$6+2>>0]=0|0;HEAP8[$6+3>>0]=0|0;
 HEAP8[$coll>>0]=0&255;HEAP8[$coll+1>>0]=(0>>8)&255;HEAP8[$coll+2>>0]=(0>>16)&255;HEAP8[$coll+3>>0]=0>>24;
 $7 = ((($arg)) + 4|0);
 ;HEAP8[$7>>0]=0|0;HEAP8[$7+1>>0]=0|0;HEAP8[$7+2>>0]=0|0;HEAP8[$7+3>>0]=0|0;
 HEAP8[$arg>>0]=0&255;HEAP8[$arg+1>>0]=(0>>8)&255;HEAP8[$arg+2>>0]=(0>>16)&255;HEAP8[$arg+3>>0]=0>>24;
 $8 = $0;
 $9 = $1;
 $10 = (_mb_attempt_open_bracket($8,$9)|0);
 $result = $10;
 $11 = $result;
 $12 = ($11|0)!=(0);
 L4: do {
  if (!($12)) {
   $13 = $0;
   $14 = $1;
   $15 = (_mb_pop_value($13,$14,$coll)|0);
   $result = $15;
   $16 = $result;
   $17 = ($16|0)!=(0);
   if (!($17)) {
    $18 = $0;
    $19 = $1;
    $20 = (__try_overridden($18,$19,$coll,15247,64)|0);
    $os = $20;
    $21 = $os;
    $22 = $21 & 1;
    $23 = ($22|0)==(0);
    L7: do {
     if ($23) {
      $24 = HEAPU8[$coll>>0]|(HEAPU8[$coll+1>>0]<<8)|(HEAPU8[$coll+2>>0]<<16)|(HEAPU8[$coll+3>>0]<<24);
      $25 = ($24|0)!=(256);
      if ($25) {
       $26 = $1;
       $27 = ($26|0)!=(0|0);
       if ($27) {
        $28 = $1;
        $29 = HEAP32[$28>>2]|0;
        $30 = ($29|0)!=(0|0);
        if ($30) {
         $31 = $1;
         $32 = HEAP32[$31>>2]|0;
         $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
         $34 = ($33|0)!=(0|0);
         if ($34) {
          $35 = $0;
          $36 = $0;
          $37 = ((($36)) + 67|0);
          $38 = HEAPU8[$37>>0]|(HEAPU8[$37+1>>0]<<8)|(HEAPU8[$37+2>>0]<<16)|(HEAPU8[$37+3>>0]<<24);
          $39 = (__set_current_error($35,62,$38)|0);
          $40 = ($39<<24>>24)!=(0);
          if (!($40)) {
           break L4;
          }
          $41 = $0;
          $42 = $1;
          $43 = HEAP32[$42>>2]|0;
          $44 = HEAPU8[$43>>0]|(HEAPU8[$43+1>>0]<<8)|(HEAPU8[$43+2>>0]<<16)|(HEAPU8[$43+3>>0]<<24);
          $45 = ((($44)) + 9|0);
          $46 = HEAPU8[$45>>0]|(HEAPU8[$45+1>>0]<<8)|(HEAPU8[$45+2>>0]<<16)|(HEAPU8[$45+3>>0]<<24);
          $47 = $1;
          $48 = HEAP32[$47>>2]|0;
          $49 = HEAPU8[$48>>0]|(HEAPU8[$48+1>>0]<<8)|(HEAPU8[$48+2>>0]<<16)|(HEAPU8[$48+3>>0]<<24);
          $50 = ((($49)) + 13|0);
          $51 = HEAPU8[$50>>0]|(HEAPU8[$50+1>>0]<<8);
          $52 = $1;
          $53 = HEAP32[$52>>2]|0;
          $54 = HEAPU8[$53>>0]|(HEAPU8[$53+1>>0]<<8)|(HEAPU8[$53+2>>0]<<16)|(HEAPU8[$53+3>>0]<<24);
          $55 = ((($54)) + 15|0);
          $56 = HEAPU8[$55>>0]|(HEAPU8[$55+1>>0]<<8);
          __set_error_pos($41,$46,$51,$56);
          $result = 3;
          break L4;
         }
        }
       }
       $57 = $0;
       $58 = $0;
       $59 = ((($58)) + 67|0);
       $60 = HEAPU8[$59>>0]|(HEAPU8[$59+1>>0]<<8)|(HEAPU8[$59+2>>0]<<16)|(HEAPU8[$59+3>>0]<<24);
       $61 = (__set_current_error($57,62,$60)|0);
       $62 = ($61<<24>>24)!=(0);
       if (!($62)) {
        break L4;
       }
       $63 = $0;
       __set_error_pos($63,0,0,0);
       $result = 3;
       break L4;
      }
      dest=$olst; stop=dest+17|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
      HEAP8[$olst>>0]=0&255;HEAP8[$olst+1>>0]=(0>>8)&255;HEAP8[$olst+2>>0]=(0>>16)&255;HEAP8[$olst+3>>0]=0>>24;
      (__public_value_to_internal_object($coll,$olst)|0);
      while(1) {
       $64 = $0;
       $65 = $1;
       $66 = (_mb_has_arg($64,$65)|0);
       $67 = ($66|0)!=(0);
       if (!($67)) {
        break L7;
       }
       $68 = ((($arg)) + 4|0);
       ;HEAP8[$68>>0]=0|0;HEAP8[$68+1>>0]=0|0;HEAP8[$68+2>>0]=0|0;HEAP8[$68+3>>0]=0|0;
       HEAP8[$arg>>0]=0&255;HEAP8[$arg+1>>0]=(0>>8)&255;HEAP8[$arg+2>>0]=(0>>16)&255;HEAP8[$arg+3>>0]=0>>24;
       $69 = $0;
       $70 = $1;
       $71 = (_mb_pop_value($69,$70,$arg)|0);
       $result = $71;
       $72 = $result;
       $73 = ($72|0)!=(0);
       if ($73) {
        break L4;
       }
       $74 = ((($olst)) + 4|0);
       $75 = HEAPU8[$74>>0]|(HEAPU8[$74+1>>0]<<8)|(HEAPU8[$74+2>>0]<<16)|(HEAPU8[$74+3>>0]<<24);
       $76 = (__push_list($75,$arg,0)|0);
       $77 = ($76<<24>>24)!=(0);
       if (!($77)) {
        break;
       }
      }
      $78 = $1;
      $79 = ($78|0)!=(0|0);
      if ($79) {
       $80 = $1;
       $81 = HEAP32[$80>>2]|0;
       $82 = ($81|0)!=(0|0);
       if ($82) {
        $83 = $1;
        $84 = HEAP32[$83>>2]|0;
        $85 = HEAPU8[$84>>0]|(HEAPU8[$84+1>>0]<<8)|(HEAPU8[$84+2>>0]<<16)|(HEAPU8[$84+3>>0]<<24);
        $86 = ($85|0)!=(0|0);
        if ($86) {
         $87 = $0;
         $88 = $0;
         $89 = ((($88)) + 67|0);
         $90 = HEAPU8[$89>>0]|(HEAPU8[$89+1>>0]<<8)|(HEAPU8[$89+2>>0]<<16)|(HEAPU8[$89+3>>0]<<24);
         $91 = (__set_current_error($87,48,$90)|0);
         $92 = ($91<<24>>24)!=(0);
         if (!($92)) {
          break L4;
         }
         $93 = $0;
         $94 = $1;
         $95 = HEAP32[$94>>2]|0;
         $96 = HEAPU8[$95>>0]|(HEAPU8[$95+1>>0]<<8)|(HEAPU8[$95+2>>0]<<16)|(HEAPU8[$95+3>>0]<<24);
         $97 = ((($96)) + 9|0);
         $98 = HEAPU8[$97>>0]|(HEAPU8[$97+1>>0]<<8)|(HEAPU8[$97+2>>0]<<16)|(HEAPU8[$97+3>>0]<<24);
         $99 = $1;
         $100 = HEAP32[$99>>2]|0;
         $101 = HEAPU8[$100>>0]|(HEAPU8[$100+1>>0]<<8)|(HEAPU8[$100+2>>0]<<16)|(HEAPU8[$100+3>>0]<<24);
         $102 = ((($101)) + 13|0);
         $103 = HEAPU8[$102>>0]|(HEAPU8[$102+1>>0]<<8);
         $104 = $1;
         $105 = HEAP32[$104>>2]|0;
         $106 = HEAPU8[$105>>0]|(HEAPU8[$105+1>>0]<<8)|(HEAPU8[$105+2>>0]<<16)|(HEAPU8[$105+3>>0]<<24);
         $107 = ((($106)) + 15|0);
         $108 = HEAPU8[$107>>0]|(HEAPU8[$107+1>>0]<<8);
         __set_error_pos($93,$98,$103,$108);
         $result = 3;
         break L4;
        }
       }
      }
      $109 = $0;
      $110 = $0;
      $111 = ((($110)) + 67|0);
      $112 = HEAPU8[$111>>0]|(HEAPU8[$111+1>>0]<<8)|(HEAPU8[$111+2>>0]<<16)|(HEAPU8[$111+3>>0]<<24);
      $113 = (__set_current_error($109,48,$112)|0);
      $114 = ($113<<24>>24)!=(0);
      if (!($114)) {
       break L4;
      }
      $115 = $0;
      __set_error_pos($115,0,0,0);
      $result = 3;
      break L4;
     }
    } while(0);
    $116 = $0;
    $117 = $1;
    $118 = (_mb_attempt_close_bracket($116,$117)|0);
    $result = $118;
    $119 = $result;
    $120 = ($119|0)!=(0);
    if (!($120)) {
     $121 = $os;
     $122 = $121 & 2;
     $123 = ($122|0)==(0);
     if ($123) {
      $124 = $0;
      $125 = $1;
      ;HEAP32[$coll$byval_copy>>2]=HEAP32[$coll>>2]|0;HEAP32[$coll$byval_copy+4>>2]=HEAP32[$coll+4>>2]|0;
      $126 = (_mb_push_value($124,$125,$coll$byval_copy)|0);
      $result = $126;
     }
    }
   }
  }
 } while(0);
 $127 = $0;
 __assign_public_value($127,$coll,0,1);
 $128 = $result;
 STACKTOP = sp;return ($128|0);
}
function __coll_pop($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__hr = 0, $__hr1 = 0, $__hr2 = 0, $__hr3 = 0, $__hr4 = 0, $__hr5 = 0, $coll = 0, $ocoll = 0;
 var $olst = 0, $or$cond = 0, $os = 0, $result = 0, $val = 0, $val$byval_copy = 0, $val$byval_copy2 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $val$byval_copy2 = sp + 56|0;
 $val$byval_copy = sp + 48|0;
 $coll = sp + 112|0;
 $val = sp + 104|0;
 $olst = sp + 81|0;
 $ocoll = sp + 64|0;
 $1 = $s;
 $2 = $l;
 $result = 0;
 $os = 0;
 $3 = $1;
 $4 = ($3|0)!=(0|0);
 $5 = $2;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),18790,(15589|0));
  // unreachable;
 }
 $7 = ((($coll)) + 4|0);
 ;HEAP8[$7>>0]=0|0;HEAP8[$7+1>>0]=0|0;HEAP8[$7+2>>0]=0|0;HEAP8[$7+3>>0]=0|0;
 HEAP8[$coll>>0]=0&255;HEAP8[$coll+1>>0]=(0>>8)&255;HEAP8[$coll+2>>0]=(0>>16)&255;HEAP8[$coll+3>>0]=0>>24;
 $8 = ((($val)) + 4|0);
 ;HEAP8[$8>>0]=0|0;HEAP8[$8+1>>0]=0|0;HEAP8[$8+2>>0]=0|0;HEAP8[$8+3>>0]=0|0;
 HEAP8[$val>>0]=0&255;HEAP8[$val+1>>0]=(0>>8)&255;HEAP8[$val+2>>0]=(0>>16)&255;HEAP8[$val+3>>0]=0>>24;
 $9 = $1;
 $10 = $2;
 $11 = (_mb_attempt_open_bracket($9,$10)|0);
 $__hr = $11;
 $12 = $__hr;
 $13 = ($12|0)!=(0);
 if ($13) {
  $14 = $__hr;
  $0 = $14;
  $191 = $0;
  STACKTOP = sp;return ($191|0);
 }
 $15 = $1;
 $16 = $2;
 $17 = (_mb_pop_value($15,$16,$coll)|0);
 $__hr1 = $17;
 $18 = $__hr1;
 $19 = ($18|0)!=(0);
 if ($19) {
  $20 = $__hr1;
  $0 = $20;
  $191 = $0;
  STACKTOP = sp;return ($191|0);
 }
 $21 = $1;
 $22 = $2;
 $23 = (__try_overridden($21,$22,$coll,15252,64)|0);
 $os = $23;
 $24 = $os;
 $25 = $24 & 1;
 $26 = ($25|0)==(0);
 do {
  if ($26) {
   $27 = HEAPU8[$coll>>0]|(HEAPU8[$coll+1>>0]<<8)|(HEAPU8[$coll+2>>0]<<16)|(HEAPU8[$coll+3>>0]<<24);
   $28 = ($27|0)!=(256);
   if ($28) {
    $29 = $1;
    __assign_public_value($29,$coll,0,1);
    $30 = $2;
    $31 = ($30|0)!=(0|0);
    if ($31) {
     $32 = $2;
     $33 = HEAP32[$32>>2]|0;
     $34 = ($33|0)!=(0|0);
     if ($34) {
      $35 = $2;
      $36 = HEAP32[$35>>2]|0;
      $37 = HEAPU8[$36>>0]|(HEAPU8[$36+1>>0]<<8)|(HEAPU8[$36+2>>0]<<16)|(HEAPU8[$36+3>>0]<<24);
      $38 = ($37|0)!=(0|0);
      if ($38) {
       $39 = $1;
       $40 = $1;
       $41 = ((($40)) + 67|0);
       $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
       $43 = (__set_current_error($39,62,$42)|0);
       $44 = ($43<<24>>24)!=(0);
       if (!($44)) {
        break;
       }
       $45 = $1;
       $46 = $2;
       $47 = HEAP32[$46>>2]|0;
       $48 = HEAPU8[$47>>0]|(HEAPU8[$47+1>>0]<<8)|(HEAPU8[$47+2>>0]<<16)|(HEAPU8[$47+3>>0]<<24);
       $49 = ((($48)) + 9|0);
       $50 = HEAPU8[$49>>0]|(HEAPU8[$49+1>>0]<<8)|(HEAPU8[$49+2>>0]<<16)|(HEAPU8[$49+3>>0]<<24);
       $51 = $2;
       $52 = HEAP32[$51>>2]|0;
       $53 = HEAPU8[$52>>0]|(HEAPU8[$52+1>>0]<<8)|(HEAPU8[$52+2>>0]<<16)|(HEAPU8[$52+3>>0]<<24);
       $54 = ((($53)) + 13|0);
       $55 = HEAPU8[$54>>0]|(HEAPU8[$54+1>>0]<<8);
       $56 = $2;
       $57 = HEAP32[$56>>2]|0;
       $58 = HEAPU8[$57>>0]|(HEAPU8[$57+1>>0]<<8)|(HEAPU8[$57+2>>0]<<16)|(HEAPU8[$57+3>>0]<<24);
       $59 = ((($58)) + 15|0);
       $60 = HEAPU8[$59>>0]|(HEAPU8[$59+1>>0]<<8);
       __set_error_pos($45,$50,$55,$60);
       $result = 3;
       break;
      }
     }
    }
    $61 = $1;
    $62 = $1;
    $63 = ((($62)) + 67|0);
    $64 = HEAPU8[$63>>0]|(HEAPU8[$63+1>>0]<<8)|(HEAPU8[$63+2>>0]<<16)|(HEAPU8[$63+3>>0]<<24);
    $65 = (__set_current_error($61,62,$64)|0);
    $66 = ($65<<24>>24)!=(0);
    if (!($66)) {
     break;
    }
    $67 = $1;
    __set_error_pos($67,0,0,0);
    $result = 3;
    break;
   }
   dest=$olst; stop=dest+17|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
   HEAP8[$olst>>0]=0&255;HEAP8[$olst+1>>0]=(0>>8)&255;HEAP8[$olst+2>>0]=(0>>16)&255;HEAP8[$olst+3>>0]=0>>24;
   (__public_value_to_internal_object($coll,$olst)|0);
   $68 = ((($olst)) + 4|0);
   $69 = HEAPU8[$68>>0]|(HEAPU8[$68+1>>0]<<8)|(HEAPU8[$68+2>>0]<<16)|(HEAPU8[$68+3>>0]<<24);
   $70 = $1;
   $71 = (__pop_list($69,$val,$70)|0);
   $72 = ($71<<24>>24)!=(0);
   $73 = $1;
   $74 = $2;
   ;HEAP32[$val$byval_copy>>2]=HEAP32[$val>>2]|0;HEAP32[$val$byval_copy+4>>2]=HEAP32[$val+4>>2]|0;
   $75 = (_mb_push_value($73,$74,$val$byval_copy)|0);
   if (!($72)) {
    $__hr3 = $75;
    $133 = $__hr3;
    $134 = ($133|0)!=(0);
    if ($134) {
     $135 = $__hr3;
     $0 = $135;
     $191 = $0;
     STACKTOP = sp;return ($191|0);
    }
    $136 = $1;
    __assign_public_value($136,$coll,0,1);
    $137 = $2;
    $138 = ($137|0)!=(0|0);
    if ($138) {
     $139 = $2;
     $140 = HEAP32[$139>>2]|0;
     $141 = ($140|0)!=(0|0);
     if ($141) {
      $142 = $2;
      $143 = HEAP32[$142>>2]|0;
      $144 = HEAPU8[$143>>0]|(HEAPU8[$143+1>>0]<<8)|(HEAPU8[$143+2>>0]<<16)|(HEAPU8[$143+3>>0]<<24);
      $145 = ($144|0)!=(0|0);
      if ($145) {
       $146 = $1;
       $147 = $1;
       $148 = ((($147)) + 67|0);
       $149 = HEAPU8[$148>>0]|(HEAPU8[$148+1>>0]<<8)|(HEAPU8[$148+2>>0]<<16)|(HEAPU8[$148+3>>0]<<24);
       $150 = (__set_current_error($146,61,$149)|0);
       $151 = ($150<<24>>24)!=(0);
       if (!($151)) {
        break;
       }
       $152 = $1;
       $153 = $2;
       $154 = HEAP32[$153>>2]|0;
       $155 = HEAPU8[$154>>0]|(HEAPU8[$154+1>>0]<<8)|(HEAPU8[$154+2>>0]<<16)|(HEAPU8[$154+3>>0]<<24);
       $156 = ((($155)) + 9|0);
       $157 = HEAPU8[$156>>0]|(HEAPU8[$156+1>>0]<<8)|(HEAPU8[$156+2>>0]<<16)|(HEAPU8[$156+3>>0]<<24);
       $158 = $2;
       $159 = HEAP32[$158>>2]|0;
       $160 = HEAPU8[$159>>0]|(HEAPU8[$159+1>>0]<<8)|(HEAPU8[$159+2>>0]<<16)|(HEAPU8[$159+3>>0]<<24);
       $161 = ((($160)) + 13|0);
       $162 = HEAPU8[$161>>0]|(HEAPU8[$161+1>>0]<<8);
       $163 = $2;
       $164 = HEAP32[$163>>2]|0;
       $165 = HEAPU8[$164>>0]|(HEAPU8[$164+1>>0]<<8)|(HEAPU8[$164+2>>0]<<16)|(HEAPU8[$164+3>>0]<<24);
       $166 = ((($165)) + 15|0);
       $167 = HEAPU8[$166>>0]|(HEAPU8[$166+1>>0]<<8);
       __set_error_pos($152,$157,$162,$167);
       break;
      }
     }
    }
    $168 = $1;
    $169 = $1;
    $170 = ((($169)) + 67|0);
    $171 = HEAPU8[$170>>0]|(HEAPU8[$170+1>>0]<<8)|(HEAPU8[$170+2>>0]<<16)|(HEAPU8[$170+3>>0]<<24);
    $172 = (__set_current_error($168,61,$171)|0);
    $173 = ($172<<24>>24)!=(0);
    if (!($173)) {
     break;
    }
    $174 = $1;
    __set_error_pos($174,0,0,0);
    break;
   }
   $__hr2 = $75;
   $76 = $__hr2;
   $77 = ($76|0)!=(0);
   if ($77) {
    $78 = $__hr2;
    $0 = $78;
    $191 = $0;
    STACKTOP = sp;return ($191|0);
   }
   dest=$ocoll; stop=dest+17|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
   HEAP8[$ocoll>>0]=0&255;HEAP8[$ocoll+1>>0]=(0>>8)&255;HEAP8[$ocoll+2>>0]=(0>>16)&255;HEAP8[$ocoll+3>>0]=0>>24;
   (__public_value_to_internal_object($val,$ocoll)|0);
   $79 = HEAPU8[$ocoll>>0]|(HEAPU8[$ocoll+1>>0]<<8)|(HEAPU8[$ocoll+2>>0]<<16)|(HEAPU8[$ocoll+3>>0]<<24);
   L42: do {
    switch ($79|0) {
    case 7:  {
     $80 = ((($ocoll)) + 4|0);
     $81 = HEAPU8[$80>>0]|(HEAPU8[$80+1>>0]<<8)|(HEAPU8[$80+2>>0]<<16)|(HEAPU8[$80+3>>0]<<24);
     $82 = ((($ocoll)) + 4|0);
     $83 = HEAPU8[$82>>0]|(HEAPU8[$82+1>>0]<<8)|(HEAPU8[$82+2>>0]<<16)|(HEAPU8[$82+3>>0]<<24);
     (__unref($81,$83)|0);
     break;
    }
    case 10:  {
     $84 = ((($ocoll)) + 8|0);
     $85 = HEAP8[$84>>0]|0;
     $86 = $85 & 1;
     $87 = ($86<<24>>24)!=(0);
     if (!($87)) {
      $88 = ((($ocoll)) + 4|0);
      $89 = HEAPU8[$88>>0]|(HEAPU8[$88+1>>0]<<8)|(HEAPU8[$88+2>>0]<<16)|(HEAPU8[$88+3>>0]<<24);
      $90 = ((($ocoll)) + 4|0);
      $91 = HEAPU8[$90>>0]|(HEAPU8[$90+1>>0]<<8)|(HEAPU8[$90+2>>0]<<16)|(HEAPU8[$90+3>>0]<<24);
      (__unref($89,$91)|0);
     }
     break;
    }
    case 11:  {
     $92 = ((($ocoll)) + 4|0);
     $93 = HEAPU8[$92>>0]|(HEAPU8[$92+1>>0]<<8)|(HEAPU8[$92+2>>0]<<16)|(HEAPU8[$92+3>>0]<<24);
     $94 = ((($ocoll)) + 4|0);
     $95 = HEAPU8[$94>>0]|(HEAPU8[$94+1>>0]<<8)|(HEAPU8[$94+2>>0]<<16)|(HEAPU8[$94+3>>0]<<24);
     (__unref($93,$95)|0);
     break;
    }
    case 13:  {
     $96 = ((($ocoll)) + 4|0);
     $97 = HEAPU8[$96>>0]|(HEAPU8[$96+1>>0]<<8)|(HEAPU8[$96+2>>0]<<16)|(HEAPU8[$96+3>>0]<<24);
     $98 = ((($ocoll)) + 4|0);
     $99 = HEAPU8[$98>>0]|(HEAPU8[$98+1>>0]<<8)|(HEAPU8[$98+2>>0]<<16)|(HEAPU8[$98+3>>0]<<24);
     (__unref($97,$99)|0);
     break;
    }
    case 16:  {
     $100 = ((($ocoll)) + 8|0);
     $101 = HEAP8[$100>>0]|0;
     $102 = $101 & 1;
     $103 = ($102<<24>>24)!=(0);
     if (!($103)) {
      $104 = ((($ocoll)) + 4|0);
      $105 = HEAPU8[$104>>0]|(HEAPU8[$104+1>>0]<<8)|(HEAPU8[$104+2>>0]<<16)|(HEAPU8[$104+3>>0]<<24);
      $106 = ((($ocoll)) + 4|0);
      $107 = HEAPU8[$106>>0]|(HEAPU8[$106+1>>0]<<8)|(HEAPU8[$106+2>>0]<<16)|(HEAPU8[$106+3>>0]<<24);
      (__unref($105,$107)|0);
     }
     break;
    }
    case 17:  {
     $108 = ((($ocoll)) + 8|0);
     $109 = HEAP8[$108>>0]|0;
     $110 = $109 & 1;
     $111 = ($110<<24>>24)!=(0);
     if (!($111)) {
      $112 = ((($ocoll)) + 4|0);
      $113 = HEAPU8[$112>>0]|(HEAPU8[$112+1>>0]<<8)|(HEAPU8[$112+2>>0]<<16)|(HEAPU8[$112+3>>0]<<24);
      $114 = ((($113)) + 58|0);
      $115 = HEAPU8[$114>>0]|(HEAPU8[$114+1>>0]<<8)|(HEAPU8[$114+2>>0]<<16)|(HEAPU8[$114+3>>0]<<24);
      $116 = ($115|0)==(2);
      if ($116) {
       $117 = ((($ocoll)) + 4|0);
       $118 = HEAPU8[$117>>0]|(HEAPU8[$117+1>>0]<<8)|(HEAPU8[$117+2>>0]<<16)|(HEAPU8[$117+3>>0]<<24);
       $119 = ((($ocoll)) + 4|0);
       $120 = HEAPU8[$119>>0]|(HEAPU8[$119+1>>0]<<8)|(HEAPU8[$119+2>>0]<<16)|(HEAPU8[$119+3>>0]<<24);
       (__unref($118,$120)|0);
       break L42;
      }
     }
     $121 = ((($ocoll)) + 8|0);
     $122 = HEAP8[$121>>0]|0;
     $123 = $122 & 1;
     $124 = ($123<<24>>24)!=(0);
     if (!($124)) {
      $125 = ((($ocoll)) + 4|0);
      $126 = HEAPU8[$125>>0]|(HEAPU8[$125+1>>0]<<8)|(HEAPU8[$125+2>>0]<<16)|(HEAPU8[$125+3>>0]<<24);
      $127 = ((($126)) + 58|0);
      $128 = HEAPU8[$127>>0]|(HEAPU8[$127+1>>0]<<8)|(HEAPU8[$127+2>>0]<<16)|(HEAPU8[$127+3>>0]<<24);
      $129 = ($128|0)!=(2);
      if ($129) {
       $130 = ((($ocoll)) + 4|0);
       $131 = HEAPU8[$130>>0]|(HEAPU8[$130+1>>0]<<8)|(HEAPU8[$130+2>>0]<<16)|(HEAPU8[$130+3>>0]<<24);
       __destroy_routine(0,$131);
      }
     }
     break;
    }
    default: {
    }
    }
   } while(0);
   $132 = $1;
   __assign_public_value($132,$coll,0,1);
   label = 46;
  } else {
   $175 = $os;
   $176 = $175 & 2;
   $177 = ($176|0)==(0);
   if ($177) {
    $178 = $1;
    $179 = $2;
    ;HEAP32[$val$byval_copy2>>2]=HEAP32[$val>>2]|0;HEAP32[$val$byval_copy2+4>>2]=HEAP32[$val+4>>2]|0;
    $180 = (_mb_push_value($178,$179,$val$byval_copy2)|0);
    $__hr4 = $180;
    $181 = $__hr4;
    $182 = ($181|0)!=(0);
    if ($182) {
     $183 = $__hr4;
     $0 = $183;
     $191 = $0;
     STACKTOP = sp;return ($191|0);
    } else {
     label = 46;
    }
   } else {
    label = 46;
   }
  }
 } while(0);
 if ((label|0) == 46) {
  $184 = $1;
  $185 = $2;
  $186 = (_mb_attempt_close_bracket($184,$185)|0);
  $__hr5 = $186;
  $187 = $__hr5;
  $188 = ($187|0)!=(0);
  if ($188) {
   $189 = $__hr5;
   $0 = $189;
   $191 = $0;
   STACKTOP = sp;return ($191|0);
  }
 }
 $190 = $result;
 $0 = $190;
 $191 = $0;
 STACKTOP = sp;return ($191|0);
}
function __coll_back($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__hr = 0, $__hr1 = 0, $__hr2 = 0, $__hr3 = 0, $__hr4 = 0, $__hr5 = 0, $coll = 0, $node = 0, $olst = 0, $or$cond = 0;
 var $os = 0, $oval = 0, $result = 0, $val = 0, $val$byval_copy = 0, $val$byval_copy2 = 0, $val$byval_copy3 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $val$byval_copy3 = sp + 72|0;
 $val$byval_copy2 = sp + 64|0;
 $val$byval_copy = sp + 56|0;
 $coll = sp + 112|0;
 $val = sp + 104|0;
 $olst = sp + 80|0;
 $1 = $s;
 $2 = $l;
 $result = 0;
 $oval = 0;
 $node = 0;
 $os = 0;
 $3 = $1;
 $4 = ($3|0)!=(0|0);
 $5 = $2;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),18843,(15578|0));
  // unreachable;
 }
 $7 = ((($coll)) + 4|0);
 ;HEAP8[$7>>0]=0|0;HEAP8[$7+1>>0]=0|0;HEAP8[$7+2>>0]=0|0;HEAP8[$7+3>>0]=0|0;
 HEAP8[$coll>>0]=0&255;HEAP8[$coll+1>>0]=(0>>8)&255;HEAP8[$coll+2>>0]=(0>>16)&255;HEAP8[$coll+3>>0]=0>>24;
 $8 = ((($val)) + 4|0);
 ;HEAP8[$8>>0]=0|0;HEAP8[$8+1>>0]=0|0;HEAP8[$8+2>>0]=0|0;HEAP8[$8+3>>0]=0|0;
 HEAP8[$val>>0]=0&255;HEAP8[$val+1>>0]=(0>>8)&255;HEAP8[$val+2>>0]=(0>>16)&255;HEAP8[$val+3>>0]=0>>24;
 $9 = $1;
 $10 = $2;
 $11 = (_mb_attempt_open_bracket($9,$10)|0);
 $__hr = $11;
 $12 = $__hr;
 $13 = ($12|0)!=(0);
 if ($13) {
  $14 = $__hr;
  $0 = $14;
  $149 = $0;
  STACKTOP = sp;return ($149|0);
 }
 $15 = $1;
 $16 = $2;
 $17 = (_mb_pop_value($15,$16,$coll)|0);
 $__hr1 = $17;
 $18 = $__hr1;
 $19 = ($18|0)!=(0);
 if ($19) {
  $20 = $__hr1;
  $0 = $20;
  $149 = $0;
  STACKTOP = sp;return ($149|0);
 }
 $21 = $1;
 $22 = $2;
 $23 = (__try_overridden($21,$22,$coll,15256,64)|0);
 $os = $23;
 $24 = $os;
 $25 = $24 & 1;
 $26 = ($25|0)==(0);
 do {
  if ($26) {
   $27 = HEAPU8[$coll>>0]|(HEAPU8[$coll+1>>0]<<8)|(HEAPU8[$coll+2>>0]<<16)|(HEAPU8[$coll+3>>0]<<24);
   $28 = ($27|0)!=(256);
   if ($28) {
    $29 = $1;
    __assign_public_value($29,$coll,0,1);
    $30 = $2;
    $31 = ($30|0)!=(0|0);
    if ($31) {
     $32 = $2;
     $33 = HEAP32[$32>>2]|0;
     $34 = ($33|0)!=(0|0);
     if ($34) {
      $35 = $2;
      $36 = HEAP32[$35>>2]|0;
      $37 = HEAPU8[$36>>0]|(HEAPU8[$36+1>>0]<<8)|(HEAPU8[$36+2>>0]<<16)|(HEAPU8[$36+3>>0]<<24);
      $38 = ($37|0)!=(0|0);
      if ($38) {
       $39 = $1;
       $40 = $1;
       $41 = ((($40)) + 67|0);
       $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
       $43 = (__set_current_error($39,62,$42)|0);
       $44 = ($43<<24>>24)!=(0);
       if (!($44)) {
        break;
       }
       $45 = $1;
       $46 = $2;
       $47 = HEAP32[$46>>2]|0;
       $48 = HEAPU8[$47>>0]|(HEAPU8[$47+1>>0]<<8)|(HEAPU8[$47+2>>0]<<16)|(HEAPU8[$47+3>>0]<<24);
       $49 = ((($48)) + 9|0);
       $50 = HEAPU8[$49>>0]|(HEAPU8[$49+1>>0]<<8)|(HEAPU8[$49+2>>0]<<16)|(HEAPU8[$49+3>>0]<<24);
       $51 = $2;
       $52 = HEAP32[$51>>2]|0;
       $53 = HEAPU8[$52>>0]|(HEAPU8[$52+1>>0]<<8)|(HEAPU8[$52+2>>0]<<16)|(HEAPU8[$52+3>>0]<<24);
       $54 = ((($53)) + 13|0);
       $55 = HEAPU8[$54>>0]|(HEAPU8[$54+1>>0]<<8);
       $56 = $2;
       $57 = HEAP32[$56>>2]|0;
       $58 = HEAPU8[$57>>0]|(HEAPU8[$57+1>>0]<<8)|(HEAPU8[$57+2>>0]<<16)|(HEAPU8[$57+3>>0]<<24);
       $59 = ((($58)) + 15|0);
       $60 = HEAPU8[$59>>0]|(HEAPU8[$59+1>>0]<<8);
       __set_error_pos($45,$50,$55,$60);
       $result = 3;
       break;
      }
     }
    }
    $61 = $1;
    $62 = $1;
    $63 = ((($62)) + 67|0);
    $64 = HEAPU8[$63>>0]|(HEAPU8[$63+1>>0]<<8)|(HEAPU8[$63+2>>0]<<16)|(HEAPU8[$63+3>>0]<<24);
    $65 = (__set_current_error($61,62,$64)|0);
    $66 = ($65<<24>>24)!=(0);
    if (!($66)) {
     break;
    }
    $67 = $1;
    __set_error_pos($67,0,0,0);
    $result = 3;
    break;
   }
   dest=$olst; stop=dest+17|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
   HEAP8[$olst>>0]=0&255;HEAP8[$olst+1>>0]=(0>>8)&255;HEAP8[$olst+2>>0]=(0>>16)&255;HEAP8[$olst+3>>0]=0>>24;
   (__public_value_to_internal_object($coll,$olst)|0);
   $68 = ((($olst)) + 4|0);
   $69 = HEAPU8[$68>>0]|(HEAPU8[$68+1>>0]<<8)|(HEAPU8[$68+2>>0]<<16)|(HEAPU8[$68+3>>0]<<24);
   $70 = ((($69)) + 19|0);
   $71 = HEAPU8[$70>>0]|(HEAPU8[$70+1>>0]<<8)|(HEAPU8[$70+2>>0]<<16)|(HEAPU8[$70+3>>0]<<24);
   $72 = (__ls_back($71)|0);
   $node = $72;
   $73 = $node;
   $74 = ($73|0)!=(0|0);
   if ($74) {
    $75 = $node;
    $76 = HEAPU8[$75>>0]|(HEAPU8[$75+1>>0]<<8)|(HEAPU8[$75+2>>0]<<16)|(HEAPU8[$75+3>>0]<<24);
    $77 = $76;
   } else {
    $77 = 0;
   }
   $oval = $77;
   $78 = $oval;
   $79 = ($78|0)!=(0|0);
   if ($79) {
    $80 = $oval;
    (__internal_object_to_public_value($80,$val)|0);
    $81 = $1;
    $82 = $2;
    ;HEAP32[$val$byval_copy>>2]=HEAP32[$val>>2]|0;HEAP32[$val$byval_copy+4>>2]=HEAP32[$val+4>>2]|0;
    $83 = (_mb_push_value($81,$82,$val$byval_copy)|0);
    $__hr2 = $83;
    $84 = $__hr2;
    $85 = ($84|0)!=(0);
    if (!($85)) {
     $87 = $1;
     __assign_public_value($87,$coll,0,1);
     label = 34;
     break;
    }
    $86 = $__hr2;
    $0 = $86;
    $149 = $0;
    STACKTOP = sp;return ($149|0);
   }
   $88 = $1;
   $89 = $2;
   ;HEAP32[$val$byval_copy2>>2]=HEAP32[$val>>2]|0;HEAP32[$val$byval_copy2+4>>2]=HEAP32[$val+4>>2]|0;
   $90 = (_mb_push_value($88,$89,$val$byval_copy2)|0);
   $__hr3 = $90;
   $91 = $__hr3;
   $92 = ($91|0)!=(0);
   if ($92) {
    $93 = $__hr3;
    $0 = $93;
    $149 = $0;
    STACKTOP = sp;return ($149|0);
   }
   $94 = $1;
   __assign_public_value($94,$coll,0,1);
   $95 = $2;
   $96 = ($95|0)!=(0|0);
   if ($96) {
    $97 = $2;
    $98 = HEAP32[$97>>2]|0;
    $99 = ($98|0)!=(0|0);
    if ($99) {
     $100 = $2;
     $101 = HEAP32[$100>>2]|0;
     $102 = HEAPU8[$101>>0]|(HEAPU8[$101+1>>0]<<8)|(HEAPU8[$101+2>>0]<<16)|(HEAPU8[$101+3>>0]<<24);
     $103 = ($102|0)!=(0|0);
     if ($103) {
      $104 = $1;
      $105 = $1;
      $106 = ((($105)) + 67|0);
      $107 = HEAPU8[$106>>0]|(HEAPU8[$106+1>>0]<<8)|(HEAPU8[$106+2>>0]<<16)|(HEAPU8[$106+3>>0]<<24);
      $108 = (__set_current_error($104,61,$107)|0);
      $109 = ($108<<24>>24)!=(0);
      if (!($109)) {
       break;
      }
      $110 = $1;
      $111 = $2;
      $112 = HEAP32[$111>>2]|0;
      $113 = HEAPU8[$112>>0]|(HEAPU8[$112+1>>0]<<8)|(HEAPU8[$112+2>>0]<<16)|(HEAPU8[$112+3>>0]<<24);
      $114 = ((($113)) + 9|0);
      $115 = HEAPU8[$114>>0]|(HEAPU8[$114+1>>0]<<8)|(HEAPU8[$114+2>>0]<<16)|(HEAPU8[$114+3>>0]<<24);
      $116 = $2;
      $117 = HEAP32[$116>>2]|0;
      $118 = HEAPU8[$117>>0]|(HEAPU8[$117+1>>0]<<8)|(HEAPU8[$117+2>>0]<<16)|(HEAPU8[$117+3>>0]<<24);
      $119 = ((($118)) + 13|0);
      $120 = HEAPU8[$119>>0]|(HEAPU8[$119+1>>0]<<8);
      $121 = $2;
      $122 = HEAP32[$121>>2]|0;
      $123 = HEAPU8[$122>>0]|(HEAPU8[$122+1>>0]<<8)|(HEAPU8[$122+2>>0]<<16)|(HEAPU8[$122+3>>0]<<24);
      $124 = ((($123)) + 15|0);
      $125 = HEAPU8[$124>>0]|(HEAPU8[$124+1>>0]<<8);
      __set_error_pos($110,$115,$120,$125);
      break;
     }
    }
   }
   $126 = $1;
   $127 = $1;
   $128 = ((($127)) + 67|0);
   $129 = HEAPU8[$128>>0]|(HEAPU8[$128+1>>0]<<8)|(HEAPU8[$128+2>>0]<<16)|(HEAPU8[$128+3>>0]<<24);
   $130 = (__set_current_error($126,61,$129)|0);
   $131 = ($130<<24>>24)!=(0);
   if ($131) {
    $132 = $1;
    __set_error_pos($132,0,0,0);
   }
  } else {
   $133 = $os;
   $134 = $133 & 2;
   $135 = ($134|0)==(0);
   if ($135) {
    $136 = $1;
    $137 = $2;
    ;HEAP32[$val$byval_copy3>>2]=HEAP32[$val>>2]|0;HEAP32[$val$byval_copy3+4>>2]=HEAP32[$val+4>>2]|0;
    $138 = (_mb_push_value($136,$137,$val$byval_copy3)|0);
    $__hr4 = $138;
    $139 = $__hr4;
    $140 = ($139|0)!=(0);
    if ($140) {
     $141 = $__hr4;
     $0 = $141;
     $149 = $0;
     STACKTOP = sp;return ($149|0);
    } else {
     label = 34;
    }
   } else {
    label = 34;
   }
  }
 } while(0);
 if ((label|0) == 34) {
  $142 = $1;
  $143 = $2;
  $144 = (_mb_attempt_close_bracket($142,$143)|0);
  $__hr5 = $144;
  $145 = $__hr5;
  $146 = ($145|0)!=(0);
  if ($146) {
   $147 = $__hr5;
   $0 = $147;
   $149 = $0;
   STACKTOP = sp;return ($149|0);
  }
 }
 $148 = $result;
 $0 = $148;
 $149 = $0;
 STACKTOP = sp;return ($149|0);
}
function __coll_insert($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $arg = 0, $coll = 0;
 var $coll$byval_copy = 0, $coll$byval_copy2 = 0, $idx = 0, $olst = 0, $or$cond = 0, $os = 0, $oval = 0, $result = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $coll$byval_copy2 = sp + 32|0;
 $coll$byval_copy = sp + 24|0;
 $coll = sp + 72|0;
 $idx = sp + 8|0;
 $arg = sp + 64|0;
 $olst = sp + 40|0;
 $oval = sp + 4|0;
 $0 = $s;
 $1 = $l;
 $result = 0;
 HEAP32[$idx>>2] = 0;
 HEAP32[$oval>>2] = 0;
 $os = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),18897,(15538|0));
  // unreachable;
 }
 $6 = ((($coll)) + 4|0);
 ;HEAP8[$6>>0]=0|0;HEAP8[$6+1>>0]=0|0;HEAP8[$6+2>>0]=0|0;HEAP8[$6+3>>0]=0|0;
 HEAP8[$coll>>0]=0&255;HEAP8[$coll+1>>0]=(0>>8)&255;HEAP8[$coll+2>>0]=(0>>16)&255;HEAP8[$coll+3>>0]=0>>24;
 $7 = ((($arg)) + 4|0);
 ;HEAP8[$7>>0]=0|0;HEAP8[$7+1>>0]=0|0;HEAP8[$7+2>>0]=0|0;HEAP8[$7+3>>0]=0|0;
 HEAP8[$arg>>0]=0&255;HEAP8[$arg+1>>0]=(0>>8)&255;HEAP8[$arg+2>>0]=(0>>16)&255;HEAP8[$arg+3>>0]=0>>24;
 $8 = $0;
 $9 = $1;
 $10 = (_mb_attempt_open_bracket($8,$9)|0);
 $result = $10;
 $11 = $result;
 $12 = ($11|0)!=(0);
 L4: do {
  if (!($12)) {
   $13 = $0;
   $14 = $1;
   $15 = (_mb_pop_value($13,$14,$coll)|0);
   $result = $15;
   $16 = $result;
   $17 = ($16|0)!=(0);
   if (!($17)) {
    $18 = $0;
    $19 = $1;
    $20 = (__try_overridden($18,$19,$coll,15261,64)|0);
    $os = $20;
    $21 = $os;
    $22 = $21 & 1;
    $23 = ($22|0)==(0);
    do {
     if ($23) {
      $24 = $0;
      $25 = $1;
      $26 = (_mb_pop_int($24,$25,$idx)|0);
      $result = $26;
      $27 = $result;
      $28 = ($27|0)!=(0);
      if ($28) {
       break L4;
      }
      $29 = $0;
      $30 = $1;
      $31 = (_mb_pop_value($29,$30,$arg)|0);
      $result = $31;
      $32 = $result;
      $33 = ($32|0)!=(0);
      if ($33) {
       break L4;
      }
      $34 = HEAPU8[$coll>>0]|(HEAPU8[$coll+1>>0]<<8)|(HEAPU8[$coll+2>>0]<<16)|(HEAPU8[$coll+3>>0]<<24);
      $35 = ($34|0)!=(256);
      if ($35) {
       $36 = $1;
       $37 = ($36|0)!=(0|0);
       if ($37) {
        $38 = $1;
        $39 = HEAP32[$38>>2]|0;
        $40 = ($39|0)!=(0|0);
        if ($40) {
         $41 = $1;
         $42 = HEAP32[$41>>2]|0;
         $43 = HEAPU8[$42>>0]|(HEAPU8[$42+1>>0]<<8)|(HEAPU8[$42+2>>0]<<16)|(HEAPU8[$42+3>>0]<<24);
         $44 = ($43|0)!=(0|0);
         if ($44) {
          $45 = $0;
          $46 = $0;
          $47 = ((($46)) + 67|0);
          $48 = HEAPU8[$47>>0]|(HEAPU8[$47+1>>0]<<8)|(HEAPU8[$47+2>>0]<<16)|(HEAPU8[$47+3>>0]<<24);
          $49 = (__set_current_error($45,62,$48)|0);
          $50 = ($49<<24>>24)!=(0);
          if (!($50)) {
           break L4;
          }
          $51 = $0;
          $52 = $1;
          $53 = HEAP32[$52>>2]|0;
          $54 = HEAPU8[$53>>0]|(HEAPU8[$53+1>>0]<<8)|(HEAPU8[$53+2>>0]<<16)|(HEAPU8[$53+3>>0]<<24);
          $55 = ((($54)) + 9|0);
          $56 = HEAPU8[$55>>0]|(HEAPU8[$55+1>>0]<<8)|(HEAPU8[$55+2>>0]<<16)|(HEAPU8[$55+3>>0]<<24);
          $57 = $1;
          $58 = HEAP32[$57>>2]|0;
          $59 = HEAPU8[$58>>0]|(HEAPU8[$58+1>>0]<<8)|(HEAPU8[$58+2>>0]<<16)|(HEAPU8[$58+3>>0]<<24);
          $60 = ((($59)) + 13|0);
          $61 = HEAPU8[$60>>0]|(HEAPU8[$60+1>>0]<<8);
          $62 = $1;
          $63 = HEAP32[$62>>2]|0;
          $64 = HEAPU8[$63>>0]|(HEAPU8[$63+1>>0]<<8)|(HEAPU8[$63+2>>0]<<16)|(HEAPU8[$63+3>>0]<<24);
          $65 = ((($64)) + 15|0);
          $66 = HEAPU8[$65>>0]|(HEAPU8[$65+1>>0]<<8);
          __set_error_pos($51,$56,$61,$66);
          $result = 3;
          break L4;
         }
        }
       }
       $67 = $0;
       $68 = $0;
       $69 = ((($68)) + 67|0);
       $70 = HEAPU8[$69>>0]|(HEAPU8[$69+1>>0]<<8)|(HEAPU8[$69+2>>0]<<16)|(HEAPU8[$69+3>>0]<<24);
       $71 = (__set_current_error($67,62,$70)|0);
       $72 = ($71<<24>>24)!=(0);
       if (!($72)) {
        break L4;
       }
       $73 = $0;
       __set_error_pos($73,0,0,0);
       $result = 3;
       break L4;
      }
      dest=$olst; stop=dest+17|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
      HEAP8[$olst>>0]=0&255;HEAP8[$olst+1>>0]=(0>>8)&255;HEAP8[$olst+2>>0]=(0>>16)&255;HEAP8[$olst+3>>0]=0>>24;
      (__public_value_to_internal_object($coll,$olst)|0);
      $74 = ((($olst)) + 4|0);
      $75 = HEAPU8[$74>>0]|(HEAPU8[$74+1>>0]<<8)|(HEAPU8[$74+2>>0]<<16)|(HEAPU8[$74+3>>0]<<24);
      $76 = HEAP32[$idx>>2]|0;
      $77 = (__insert_list($75,$76,$arg,$oval)|0);
      $78 = ($77<<24>>24)!=(0);
      if ($78) {
       $120 = $0;
       $121 = $1;
       ;HEAP32[$coll$byval_copy>>2]=HEAP32[$coll>>2]|0;HEAP32[$coll$byval_copy+4>>2]=HEAP32[$coll+4>>2]|0;
       $122 = (_mb_push_value($120,$121,$coll$byval_copy)|0);
       $result = $122;
       $123 = $result;
       $124 = ($123|0)!=(0);
       if ($124) {
        break L4;
       } else {
        break;
       }
      }
      $79 = HEAP32[$oval>>2]|0;
      $80 = ($79|0)!=(0|0);
      if ($80) {
       $81 = HEAP32[$oval>>2]|0;
       (__destroy_object($81,0)|0);
      }
      $82 = $1;
      $83 = ($82|0)!=(0|0);
      if ($83) {
       $84 = $1;
       $85 = HEAP32[$84>>2]|0;
       $86 = ($85|0)!=(0|0);
       if ($86) {
        $87 = $1;
        $88 = HEAP32[$87>>2]|0;
        $89 = HEAPU8[$88>>0]|(HEAPU8[$88+1>>0]<<8)|(HEAPU8[$88+2>>0]<<16)|(HEAPU8[$88+3>>0]<<24);
        $90 = ($89|0)!=(0|0);
        if ($90) {
         $91 = $0;
         $92 = $0;
         $93 = ((($92)) + 67|0);
         $94 = HEAPU8[$93>>0]|(HEAPU8[$93+1>>0]<<8)|(HEAPU8[$93+2>>0]<<16)|(HEAPU8[$93+3>>0]<<24);
         $95 = (__set_current_error($91,48,$94)|0);
         $96 = ($95<<24>>24)!=(0);
         if (!($96)) {
          break L4;
         }
         $97 = $0;
         $98 = $1;
         $99 = HEAP32[$98>>2]|0;
         $100 = HEAPU8[$99>>0]|(HEAPU8[$99+1>>0]<<8)|(HEAPU8[$99+2>>0]<<16)|(HEAPU8[$99+3>>0]<<24);
         $101 = ((($100)) + 9|0);
         $102 = HEAPU8[$101>>0]|(HEAPU8[$101+1>>0]<<8)|(HEAPU8[$101+2>>0]<<16)|(HEAPU8[$101+3>>0]<<24);
         $103 = $1;
         $104 = HEAP32[$103>>2]|0;
         $105 = HEAPU8[$104>>0]|(HEAPU8[$104+1>>0]<<8)|(HEAPU8[$104+2>>0]<<16)|(HEAPU8[$104+3>>0]<<24);
         $106 = ((($105)) + 13|0);
         $107 = HEAPU8[$106>>0]|(HEAPU8[$106+1>>0]<<8);
         $108 = $1;
         $109 = HEAP32[$108>>2]|0;
         $110 = HEAPU8[$109>>0]|(HEAPU8[$109+1>>0]<<8)|(HEAPU8[$109+2>>0]<<16)|(HEAPU8[$109+3>>0]<<24);
         $111 = ((($110)) + 15|0);
         $112 = HEAPU8[$111>>0]|(HEAPU8[$111+1>>0]<<8);
         __set_error_pos($97,$102,$107,$112);
         $result = 3;
         break L4;
        }
       }
      }
      $113 = $0;
      $114 = $0;
      $115 = ((($114)) + 67|0);
      $116 = HEAPU8[$115>>0]|(HEAPU8[$115+1>>0]<<8)|(HEAPU8[$115+2>>0]<<16)|(HEAPU8[$115+3>>0]<<24);
      $117 = (__set_current_error($113,48,$116)|0);
      $118 = ($117<<24>>24)!=(0);
      if (!($118)) {
       break L4;
      }
      $119 = $0;
      __set_error_pos($119,0,0,0);
      $result = 3;
      break L4;
     } else {
      $125 = $os;
      $126 = $125 & 2;
      $127 = ($126|0)==(0);
      if ($127) {
       $128 = $0;
       $129 = $1;
       ;HEAP32[$coll$byval_copy2>>2]=HEAP32[$coll>>2]|0;HEAP32[$coll$byval_copy2+4>>2]=HEAP32[$coll+4>>2]|0;
       $130 = (_mb_push_value($128,$129,$coll$byval_copy2)|0);
       $result = $130;
       $131 = $result;
       $132 = ($131|0)!=(0);
       if ($132) {
        break L4;
       }
      }
     }
    } while(0);
    $133 = $0;
    $134 = $1;
    $135 = (_mb_attempt_close_bracket($133,$134)|0);
    $result = $135;
   }
  }
 } while(0);
 $136 = $0;
 __assign_public_value($136,$coll,0,1);
 $137 = $result;
 STACKTOP = sp;return ($137|0);
}
function __coll_sort($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $8 = 0, $9 = 0, $coll = 0, $coll$byval_copy = 0;
 var $olst = 0, $or$cond = 0, $os = 0, $result = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $coll$byval_copy = sp + 16|0;
 $coll = sp + 48|0;
 $olst = sp + 24|0;
 $0 = $s;
 $1 = $l;
 $result = 0;
 $os = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),18945,(15486|0));
  // unreachable;
 }
 $6 = ((($coll)) + 4|0);
 ;HEAP8[$6>>0]=0|0;HEAP8[$6+1>>0]=0|0;HEAP8[$6+2>>0]=0|0;HEAP8[$6+3>>0]=0|0;
 HEAP8[$coll>>0]=0&255;HEAP8[$coll+1>>0]=(0>>8)&255;HEAP8[$coll+2>>0]=(0>>16)&255;HEAP8[$coll+3>>0]=0>>24;
 $7 = $0;
 $8 = $1;
 $9 = (_mb_attempt_open_bracket($7,$8)|0);
 $result = $9;
 $10 = $result;
 $11 = ($10|0)!=(0);
 L4: do {
  if (!($11)) {
   $12 = $0;
   $13 = $1;
   $14 = (_mb_pop_value($12,$13,$coll)|0);
   $result = $14;
   $15 = $result;
   $16 = ($15|0)!=(0);
   if (!($16)) {
    $17 = $0;
    $18 = $1;
    $19 = (__try_overridden($17,$18,$coll,15268,64)|0);
    $os = $19;
    $20 = $os;
    $21 = $20 & 1;
    $22 = ($21|0)==(0);
    do {
     if ($22) {
      $23 = HEAPU8[$coll>>0]|(HEAPU8[$coll+1>>0]<<8)|(HEAPU8[$coll+2>>0]<<16)|(HEAPU8[$coll+3>>0]<<24);
      $24 = ($23|0)!=(256);
      if (!($24)) {
       dest=$olst; stop=dest+17|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
       HEAP8[$olst>>0]=0&255;HEAP8[$olst+1>>0]=(0>>8)&255;HEAP8[$olst+2>>0]=(0>>16)&255;HEAP8[$olst+3>>0]=0>>24;
       (__public_value_to_internal_object($coll,$olst)|0);
       $63 = ((($olst)) + 4|0);
       $64 = HEAPU8[$63>>0]|(HEAPU8[$63+1>>0]<<8)|(HEAPU8[$63+2>>0]<<16)|(HEAPU8[$63+3>>0]<<24);
       __sort_list($64);
       break;
      }
      $25 = $1;
      $26 = ($25|0)!=(0|0);
      if ($26) {
       $27 = $1;
       $28 = HEAP32[$27>>2]|0;
       $29 = ($28|0)!=(0|0);
       if ($29) {
        $30 = $1;
        $31 = HEAP32[$30>>2]|0;
        $32 = HEAPU8[$31>>0]|(HEAPU8[$31+1>>0]<<8)|(HEAPU8[$31+2>>0]<<16)|(HEAPU8[$31+3>>0]<<24);
        $33 = ($32|0)!=(0|0);
        if ($33) {
         $34 = $0;
         $35 = $0;
         $36 = ((($35)) + 67|0);
         $37 = HEAPU8[$36>>0]|(HEAPU8[$36+1>>0]<<8)|(HEAPU8[$36+2>>0]<<16)|(HEAPU8[$36+3>>0]<<24);
         $38 = (__set_current_error($34,62,$37)|0);
         $39 = ($38<<24>>24)!=(0);
         if (!($39)) {
          break L4;
         }
         $40 = $0;
         $41 = $1;
         $42 = HEAP32[$41>>2]|0;
         $43 = HEAPU8[$42>>0]|(HEAPU8[$42+1>>0]<<8)|(HEAPU8[$42+2>>0]<<16)|(HEAPU8[$42+3>>0]<<24);
         $44 = ((($43)) + 9|0);
         $45 = HEAPU8[$44>>0]|(HEAPU8[$44+1>>0]<<8)|(HEAPU8[$44+2>>0]<<16)|(HEAPU8[$44+3>>0]<<24);
         $46 = $1;
         $47 = HEAP32[$46>>2]|0;
         $48 = HEAPU8[$47>>0]|(HEAPU8[$47+1>>0]<<8)|(HEAPU8[$47+2>>0]<<16)|(HEAPU8[$47+3>>0]<<24);
         $49 = ((($48)) + 13|0);
         $50 = HEAPU8[$49>>0]|(HEAPU8[$49+1>>0]<<8);
         $51 = $1;
         $52 = HEAP32[$51>>2]|0;
         $53 = HEAPU8[$52>>0]|(HEAPU8[$52+1>>0]<<8)|(HEAPU8[$52+2>>0]<<16)|(HEAPU8[$52+3>>0]<<24);
         $54 = ((($53)) + 15|0);
         $55 = HEAPU8[$54>>0]|(HEAPU8[$54+1>>0]<<8);
         __set_error_pos($40,$45,$50,$55);
         $result = 3;
         break L4;
        }
       }
      }
      $56 = $0;
      $57 = $0;
      $58 = ((($57)) + 67|0);
      $59 = HEAPU8[$58>>0]|(HEAPU8[$58+1>>0]<<8)|(HEAPU8[$58+2>>0]<<16)|(HEAPU8[$58+3>>0]<<24);
      $60 = (__set_current_error($56,62,$59)|0);
      $61 = ($60<<24>>24)!=(0);
      if (!($61)) {
       break L4;
      }
      $62 = $0;
      __set_error_pos($62,0,0,0);
      $result = 3;
      break L4;
     }
    } while(0);
    $65 = $0;
    $66 = $1;
    $67 = (_mb_attempt_close_bracket($65,$66)|0);
    $result = $67;
    $68 = $result;
    $69 = ($68|0)!=(0);
    if (!($69)) {
     $70 = $os;
     $71 = $70 & 2;
     $72 = ($71|0)==(0);
     if ($72) {
      $73 = $0;
      $74 = $1;
      ;HEAP32[$coll$byval_copy>>2]=HEAP32[$coll>>2]|0;HEAP32[$coll$byval_copy+4>>2]=HEAP32[$coll+4>>2]|0;
      $75 = (_mb_push_value($73,$74,$coll$byval_copy)|0);
      $result = $75;
     }
    }
   }
  }
 } while(0);
 $76 = $0;
 __assign_public_value($76,$coll,0,1);
 $77 = $result;
 STACKTOP = sp;return ($77|0);
}
function __coll_exists($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $arg = 0, $coll = 0, $coll$byval_copy = 0, $ocoll = 0, $or$cond = 0, $os = 0, $result = 0, $ret = 0, $ret$byval_copy = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $coll$byval_copy = sp + 24|0;
 $ret$byval_copy = sp + 16|0;
 $coll = sp + 72|0;
 $arg = sp + 64|0;
 $ocoll = sp + 40|0;
 $ret = sp + 32|0;
 $0 = $s;
 $1 = $l;
 $result = 0;
 $os = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),18984,(15473|0));
  // unreachable;
 }
 $6 = ((($coll)) + 4|0);
 ;HEAP8[$6>>0]=0|0;HEAP8[$6+1>>0]=0|0;HEAP8[$6+2>>0]=0|0;HEAP8[$6+3>>0]=0|0;
 HEAP8[$coll>>0]=0&255;HEAP8[$coll+1>>0]=(0>>8)&255;HEAP8[$coll+2>>0]=(0>>16)&255;HEAP8[$coll+3>>0]=0>>24;
 $7 = ((($arg)) + 4|0);
 ;HEAP8[$7>>0]=0|0;HEAP8[$7+1>>0]=0|0;HEAP8[$7+2>>0]=0|0;HEAP8[$7+3>>0]=0|0;
 HEAP8[$arg>>0]=0&255;HEAP8[$arg+1>>0]=(0>>8)&255;HEAP8[$arg+2>>0]=(0>>16)&255;HEAP8[$arg+3>>0]=0>>24;
 $8 = ((($ret)) + 4|0);
 ;HEAP8[$8>>0]=0|0;HEAP8[$8+1>>0]=0|0;HEAP8[$8+2>>0]=0|0;HEAP8[$8+3>>0]=0|0;
 HEAP8[$ret>>0]=0&255;HEAP8[$ret+1>>0]=(0>>8)&255;HEAP8[$ret+2>>0]=(0>>16)&255;HEAP8[$ret+3>>0]=0>>24;
 $9 = $0;
 $10 = $1;
 $11 = (_mb_attempt_open_bracket($9,$10)|0);
 $result = $11;
 $12 = $result;
 $13 = ($12|0)!=(0);
 if ($13) {
  $101 = $0;
  __assign_public_value($101,$coll,0,1);
  $102 = $result;
  STACKTOP = sp;return ($102|0);
 }
 $14 = $0;
 $15 = $1;
 $16 = (_mb_pop_value($14,$15,$coll)|0);
 $result = $16;
 $17 = $result;
 $18 = ($17|0)!=(0);
 if ($18) {
  $101 = $0;
  __assign_public_value($101,$coll,0,1);
  $102 = $result;
  STACKTOP = sp;return ($102|0);
 }
 $19 = $0;
 $20 = $1;
 $21 = (__try_overridden($19,$20,$coll,15273,64)|0);
 $os = $21;
 $22 = $os;
 $23 = $22 & 1;
 $24 = ($23|0)==(0);
 if ($24) {
  $25 = $0;
  $26 = $1;
  $27 = (_mb_pop_value($25,$26,$arg)|0);
  $result = $27;
  $28 = $result;
  $29 = ($28|0)!=(0);
  if ($29) {
   $101 = $0;
   __assign_public_value($101,$coll,0,1);
   $102 = $result;
   STACKTOP = sp;return ($102|0);
  }
  dest=$ocoll; stop=dest+17|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
  HEAP8[$ocoll>>0]=0&255;HEAP8[$ocoll+1>>0]=(0>>8)&255;HEAP8[$ocoll+2>>0]=(0>>16)&255;HEAP8[$ocoll+3>>0]=0>>24;
  $30 = HEAPU8[$coll>>0]|(HEAPU8[$coll+1>>0]<<8)|(HEAPU8[$coll+2>>0]<<16)|(HEAPU8[$coll+3>>0]<<24);
  switch ($30|0) {
  case 256:  {
   (__public_value_to_internal_object($coll,$ocoll)|0);
   $31 = ((($ocoll)) + 4|0);
   $32 = HEAPU8[$31>>0]|(HEAPU8[$31+1>>0]<<8)|(HEAPU8[$31+2>>0]<<16)|(HEAPU8[$31+3>>0]<<24);
   $33 = (__find_list($32,$arg,0)|0);
   $34 = ($33<<24>>24)!=(0);
   $35 = $34 ^ 1;
   $36 = $35 ^ 1;
   $37 = $36 ? 1 : 0;
   $38 = ((($ret)) + 4|0);
   HEAP8[$38>>0]=$37&255;HEAP8[$38+1>>0]=($37>>8)&255;HEAP8[$38+2>>0]=($37>>16)&255;HEAP8[$38+3>>0]=$37>>24;
   HEAP8[$ret>>0]=2&255;HEAP8[$ret+1>>0]=(2>>8)&255;HEAP8[$ret+2>>0]=(2>>16)&255;HEAP8[$ret+3>>0]=2>>24;
   break;
  }
  case 1024:  {
   (__public_value_to_internal_object($coll,$ocoll)|0);
   $39 = ((($ocoll)) + 4|0);
   $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8)|(HEAPU8[$39+2>>0]<<16)|(HEAPU8[$39+3>>0]<<24);
   $41 = (__find_dict($40,$arg,0)|0);
   $42 = ($41<<24>>24)!=(0);
   $43 = $42 ^ 1;
   $44 = $43 ^ 1;
   $45 = $44 ? 1 : 0;
   $46 = ((($ret)) + 4|0);
   HEAP8[$46>>0]=$45&255;HEAP8[$46+1>>0]=($45>>8)&255;HEAP8[$46+2>>0]=($45>>16)&255;HEAP8[$46+3>>0]=$45>>24;
   HEAP8[$ret>>0]=2&255;HEAP8[$ret+1>>0]=(2>>8)&255;HEAP8[$ret+2>>0]=(2>>16)&255;HEAP8[$ret+3>>0]=2>>24;
   break;
  }
  default: {
   $47 = $1;
   $48 = ($47|0)!=(0|0);
   if ($48) {
    $49 = $1;
    $50 = HEAP32[$49>>2]|0;
    $51 = ($50|0)!=(0|0);
    if ($51) {
     $52 = $1;
     $53 = HEAP32[$52>>2]|0;
     $54 = HEAPU8[$53>>0]|(HEAPU8[$53+1>>0]<<8)|(HEAPU8[$53+2>>0]<<16)|(HEAPU8[$53+3>>0]<<24);
     $55 = ($54|0)!=(0|0);
     if ($55) {
      $56 = $0;
      $57 = $0;
      $58 = ((($57)) + 67|0);
      $59 = HEAPU8[$58>>0]|(HEAPU8[$58+1>>0]<<8)|(HEAPU8[$58+2>>0]<<16)|(HEAPU8[$58+3>>0]<<24);
      $60 = (__set_current_error($56,65,$59)|0);
      $61 = ($60<<24>>24)!=(0);
      if (!($61)) {
       $101 = $0;
       __assign_public_value($101,$coll,0,1);
       $102 = $result;
       STACKTOP = sp;return ($102|0);
      }
      $62 = $0;
      $63 = $1;
      $64 = HEAP32[$63>>2]|0;
      $65 = HEAPU8[$64>>0]|(HEAPU8[$64+1>>0]<<8)|(HEAPU8[$64+2>>0]<<16)|(HEAPU8[$64+3>>0]<<24);
      $66 = ((($65)) + 9|0);
      $67 = HEAPU8[$66>>0]|(HEAPU8[$66+1>>0]<<8)|(HEAPU8[$66+2>>0]<<16)|(HEAPU8[$66+3>>0]<<24);
      $68 = $1;
      $69 = HEAP32[$68>>2]|0;
      $70 = HEAPU8[$69>>0]|(HEAPU8[$69+1>>0]<<8)|(HEAPU8[$69+2>>0]<<16)|(HEAPU8[$69+3>>0]<<24);
      $71 = ((($70)) + 13|0);
      $72 = HEAPU8[$71>>0]|(HEAPU8[$71+1>>0]<<8);
      $73 = $1;
      $74 = HEAP32[$73>>2]|0;
      $75 = HEAPU8[$74>>0]|(HEAPU8[$74+1>>0]<<8)|(HEAPU8[$74+2>>0]<<16)|(HEAPU8[$74+3>>0]<<24);
      $76 = ((($75)) + 15|0);
      $77 = HEAPU8[$76>>0]|(HEAPU8[$76+1>>0]<<8);
      __set_error_pos($62,$67,$72,$77);
      $result = 3;
      $101 = $0;
      __assign_public_value($101,$coll,0,1);
      $102 = $result;
      STACKTOP = sp;return ($102|0);
     }
    }
   }
   $78 = $0;
   $79 = $0;
   $80 = ((($79)) + 67|0);
   $81 = HEAPU8[$80>>0]|(HEAPU8[$80+1>>0]<<8)|(HEAPU8[$80+2>>0]<<16)|(HEAPU8[$80+3>>0]<<24);
   $82 = (__set_current_error($78,65,$81)|0);
   $83 = ($82<<24>>24)!=(0);
   if (!($83)) {
    $101 = $0;
    __assign_public_value($101,$coll,0,1);
    $102 = $result;
    STACKTOP = sp;return ($102|0);
   }
   $84 = $0;
   __set_error_pos($84,0,0,0);
   $result = 3;
   $101 = $0;
   __assign_public_value($101,$coll,0,1);
   $102 = $result;
   STACKTOP = sp;return ($102|0);
  }
  }
  $85 = $0;
  $86 = $1;
  ;HEAP32[$ret$byval_copy>>2]=HEAP32[$ret>>2]|0;HEAP32[$ret$byval_copy+4>>2]=HEAP32[$ret+4>>2]|0;
  $87 = (_mb_push_value($85,$86,$ret$byval_copy)|0);
  $result = $87;
  $88 = $result;
  $89 = ($88|0)!=(0);
  if ($89) {
   $101 = $0;
   __assign_public_value($101,$coll,0,1);
   $102 = $result;
   STACKTOP = sp;return ($102|0);
  }
 } else {
  $90 = $os;
  $91 = $90 & 2;
  $92 = ($91|0)==(0);
  if ($92) {
   $93 = $0;
   $94 = $1;
   ;HEAP32[$coll$byval_copy>>2]=HEAP32[$coll>>2]|0;HEAP32[$coll$byval_copy+4>>2]=HEAP32[$coll+4>>2]|0;
   $95 = (_mb_push_value($93,$94,$coll$byval_copy)|0);
   $result = $95;
   $96 = $result;
   $97 = ($96|0)!=(0);
   if ($97) {
    $101 = $0;
    __assign_public_value($101,$coll,0,1);
    $102 = $result;
    STACKTOP = sp;return ($102|0);
   }
  }
 }
 $98 = $0;
 $99 = $1;
 $100 = (_mb_attempt_close_bracket($98,$99)|0);
 $result = $100;
 $101 = $0;
 __assign_public_value($101,$coll,0,1);
 $102 = $result;
 STACKTOP = sp;return ($102|0);
}
function __coll_index_of($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $9 = 0, $coll = 0, $cond = 0, $idx = 0, $ocoll = 0, $or$cond = 0, $os = 0, $result = 0, $ret = 0, $ret$byval_copy = 0, $val = 0, dest = 0, label = 0;
 var sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ret$byval_copy = sp + 24|0;
 $idx = sp + 4|0;
 $coll = sp + 72|0;
 $ocoll = sp + 48|0;
 $val = sp + 40|0;
 $ret = sp + 32|0;
 $0 = $s;
 $1 = $l;
 $result = 0;
 HEAP32[$idx>>2] = 0;
 $os = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),19039,(15447|0));
  // unreachable;
 }
 $6 = ((($coll)) + 4|0);
 ;HEAP8[$6>>0]=0|0;HEAP8[$6+1>>0]=0|0;HEAP8[$6+2>>0]=0|0;HEAP8[$6+3>>0]=0|0;
 HEAP8[$coll>>0]=0&255;HEAP8[$coll+1>>0]=(0>>8)&255;HEAP8[$coll+2>>0]=(0>>16)&255;HEAP8[$coll+3>>0]=0>>24;
 $7 = ((($val)) + 4|0);
 ;HEAP8[$7>>0]=0|0;HEAP8[$7+1>>0]=0|0;HEAP8[$7+2>>0]=0|0;HEAP8[$7+3>>0]=0|0;
 HEAP8[$val>>0]=0&255;HEAP8[$val+1>>0]=(0>>8)&255;HEAP8[$val+2>>0]=(0>>16)&255;HEAP8[$val+3>>0]=0>>24;
 $8 = ((($ret)) + 4|0);
 ;HEAP8[$8>>0]=0|0;HEAP8[$8+1>>0]=0|0;HEAP8[$8+2>>0]=0|0;HEAP8[$8+3>>0]=0|0;
 HEAP8[$ret>>0]=0&255;HEAP8[$ret+1>>0]=(0>>8)&255;HEAP8[$ret+2>>0]=(0>>16)&255;HEAP8[$ret+3>>0]=0>>24;
 $9 = $0;
 $10 = $1;
 $11 = (_mb_attempt_open_bracket($9,$10)|0);
 $result = $11;
 $12 = $result;
 $13 = ($12|0)!=(0);
 L4: do {
  if (!($13)) {
   $14 = $0;
   $15 = $1;
   $16 = (_mb_pop_value($14,$15,$coll)|0);
   $result = $16;
   $17 = $result;
   $18 = ($17|0)!=(0);
   if (!($18)) {
    $19 = $0;
    $20 = $1;
    $21 = (__try_overridden($19,$20,$coll,15280,64)|0);
    $os = $21;
    $22 = $os;
    $23 = $22 & 1;
    $24 = ($23|0)==(0);
    do {
     if ($24) {
      HEAP8[$ret>>0]=1&255;HEAP8[$ret+1>>0]=(1>>8)&255;HEAP8[$ret+2>>0]=(1>>16)&255;HEAP8[$ret+3>>0]=1>>24;
      $25 = $0;
      $26 = $1;
      $27 = (_mb_pop_value($25,$26,$val)|0);
      $result = $27;
      $28 = $result;
      $29 = ($28|0)!=(0);
      if ($29) {
       break L4;
      }
      dest=$ocoll; stop=dest+17|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
      HEAP8[$ocoll>>0]=0&255;HEAP8[$ocoll+1>>0]=(0>>8)&255;HEAP8[$ocoll+2>>0]=(0>>16)&255;HEAP8[$ocoll+3>>0]=0>>24;
      $30 = HEAPU8[$coll>>0]|(HEAPU8[$coll+1>>0]<<8)|(HEAPU8[$coll+2>>0]<<16)|(HEAPU8[$coll+3>>0]<<24);
      $cond = ($30|0)==(256);
      if ($cond) {
       (__public_value_to_internal_object($coll,$ocoll)|0);
       $31 = ((($ocoll)) + 4|0);
       $32 = HEAPU8[$31>>0]|(HEAPU8[$31+1>>0]<<8)|(HEAPU8[$31+2>>0]<<16)|(HEAPU8[$31+3>>0]<<24);
       $33 = (__find_list($32,$val,$idx)|0);
       $34 = ($33<<24>>24)!=(0);
       if (!($34)) {
        break;
       }
       $35 = HEAP32[$idx>>2]|0;
       $36 = ((($ret)) + 4|0);
       HEAP8[$36>>0]=$35&255;HEAP8[$36+1>>0]=($35>>8)&255;HEAP8[$36+2>>0]=($35>>16)&255;HEAP8[$36+3>>0]=$35>>24;
       HEAP8[$ret>>0]=2&255;HEAP8[$ret+1>>0]=(2>>8)&255;HEAP8[$ret+2>>0]=(2>>16)&255;HEAP8[$ret+3>>0]=2>>24;
       break;
      }
      $37 = $1;
      $38 = ($37|0)!=(0|0);
      if ($38) {
       $39 = $1;
       $40 = HEAP32[$39>>2]|0;
       $41 = ($40|0)!=(0|0);
       if ($41) {
        $42 = $1;
        $43 = HEAP32[$42>>2]|0;
        $44 = HEAPU8[$43>>0]|(HEAPU8[$43+1>>0]<<8)|(HEAPU8[$43+2>>0]<<16)|(HEAPU8[$43+3>>0]<<24);
        $45 = ($44|0)!=(0|0);
        if ($45) {
         $46 = $0;
         $47 = $0;
         $48 = ((($47)) + 67|0);
         $49 = HEAPU8[$48>>0]|(HEAPU8[$48+1>>0]<<8)|(HEAPU8[$48+2>>0]<<16)|(HEAPU8[$48+3>>0]<<24);
         $50 = (__set_current_error($46,62,$49)|0);
         $51 = ($50<<24>>24)!=(0);
         if (!($51)) {
          break L4;
         }
         $52 = $0;
         $53 = $1;
         $54 = HEAP32[$53>>2]|0;
         $55 = HEAPU8[$54>>0]|(HEAPU8[$54+1>>0]<<8)|(HEAPU8[$54+2>>0]<<16)|(HEAPU8[$54+3>>0]<<24);
         $56 = ((($55)) + 9|0);
         $57 = HEAPU8[$56>>0]|(HEAPU8[$56+1>>0]<<8)|(HEAPU8[$56+2>>0]<<16)|(HEAPU8[$56+3>>0]<<24);
         $58 = $1;
         $59 = HEAP32[$58>>2]|0;
         $60 = HEAPU8[$59>>0]|(HEAPU8[$59+1>>0]<<8)|(HEAPU8[$59+2>>0]<<16)|(HEAPU8[$59+3>>0]<<24);
         $61 = ((($60)) + 13|0);
         $62 = HEAPU8[$61>>0]|(HEAPU8[$61+1>>0]<<8);
         $63 = $1;
         $64 = HEAP32[$63>>2]|0;
         $65 = HEAPU8[$64>>0]|(HEAPU8[$64+1>>0]<<8)|(HEAPU8[$64+2>>0]<<16)|(HEAPU8[$64+3>>0]<<24);
         $66 = ((($65)) + 15|0);
         $67 = HEAPU8[$66>>0]|(HEAPU8[$66+1>>0]<<8);
         __set_error_pos($52,$57,$62,$67);
         $result = 3;
         break L4;
        }
       }
      }
      $68 = $0;
      $69 = $0;
      $70 = ((($69)) + 67|0);
      $71 = HEAPU8[$70>>0]|(HEAPU8[$70+1>>0]<<8)|(HEAPU8[$70+2>>0]<<16)|(HEAPU8[$70+3>>0]<<24);
      $72 = (__set_current_error($68,62,$71)|0);
      $73 = ($72<<24>>24)!=(0);
      if (!($73)) {
       break L4;
      }
      $74 = $0;
      __set_error_pos($74,0,0,0);
      $result = 3;
      break L4;
     }
    } while(0);
    $75 = $0;
    $76 = $1;
    $77 = (_mb_attempt_close_bracket($75,$76)|0);
    $result = $77;
    $78 = $result;
    $79 = ($78|0)!=(0);
    if (!($79)) {
     $80 = $os;
     $81 = $80 & 2;
     $82 = ($81|0)==(0);
     if ($82) {
      $83 = $0;
      $84 = $1;
      ;HEAP32[$ret$byval_copy>>2]=HEAP32[$ret>>2]|0;HEAP32[$ret$byval_copy+4>>2]=HEAP32[$ret+4>>2]|0;
      $85 = (_mb_push_value($83,$84,$ret$byval_copy)|0);
      $result = $85;
     }
    }
   }
  }
 } while(0);
 $86 = $0;
 __assign_public_value($86,$coll,0,1);
 $87 = $result;
 STACKTOP = sp;return ($87|0);
}
function __coll_remove($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $coll = 0;
 var $coll$byval_copy = 0, $idx = 0, $key = 0, $ocoll = 0, $or$cond = 0, $os = 0, $result = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $coll$byval_copy = sp + 24|0;
 $coll = sp + 64|0;
 $idx = sp + 4|0;
 $key = sp + 56|0;
 $ocoll = sp + 32|0;
 $0 = $s;
 $1 = $l;
 $result = 0;
 HEAP32[$idx>>2] = 0;
 $os = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),19089,(15434|0));
  // unreachable;
 }
 $6 = ((($coll)) + 4|0);
 ;HEAP8[$6>>0]=0|0;HEAP8[$6+1>>0]=0|0;HEAP8[$6+2>>0]=0|0;HEAP8[$6+3>>0]=0|0;
 HEAP8[$coll>>0]=0&255;HEAP8[$coll+1>>0]=(0>>8)&255;HEAP8[$coll+2>>0]=(0>>16)&255;HEAP8[$coll+3>>0]=0>>24;
 $7 = ((($key)) + 4|0);
 ;HEAP8[$7>>0]=0|0;HEAP8[$7+1>>0]=0|0;HEAP8[$7+2>>0]=0|0;HEAP8[$7+3>>0]=0|0;
 HEAP8[$key>>0]=0&255;HEAP8[$key+1>>0]=(0>>8)&255;HEAP8[$key+2>>0]=(0>>16)&255;HEAP8[$key+3>>0]=0>>24;
 $8 = $0;
 $9 = $1;
 $10 = (_mb_attempt_open_bracket($8,$9)|0);
 $result = $10;
 $11 = $result;
 $12 = ($11|0)!=(0);
 L4: do {
  if (!($12)) {
   $13 = $0;
   $14 = $1;
   $15 = (_mb_pop_value($13,$14,$coll)|0);
   $result = $15;
   $16 = $result;
   $17 = ($16|0)!=(0);
   if (!($17)) {
    $18 = $0;
    $19 = $1;
    $20 = (__try_overridden($18,$19,$coll,15286,64)|0);
    $os = $20;
    $21 = $os;
    $22 = $21 & 1;
    $23 = ($22|0)==(0);
    L7: do {
     if ($23) {
      dest=$ocoll; stop=dest+17|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
      HEAP8[$ocoll>>0]=0&255;HEAP8[$ocoll+1>>0]=(0>>8)&255;HEAP8[$ocoll+2>>0]=(0>>16)&255;HEAP8[$ocoll+3>>0]=0>>24;
      $24 = HEAPU8[$coll>>0]|(HEAPU8[$coll+1>>0]<<8)|(HEAPU8[$coll+2>>0]<<16)|(HEAPU8[$coll+3>>0]<<24);
      switch ($24|0) {
      case 256:  {
       (__public_value_to_internal_object($coll,$ocoll)|0);
       while(1) {
        $25 = $0;
        $26 = $1;
        $27 = (_mb_has_arg($25,$26)|0);
        $28 = ($27|0)!=(0);
        if (!($28)) {
         break L7;
        }
        $29 = $0;
        $30 = $1;
        $31 = (_mb_pop_int($29,$30,$idx)|0);
        $result = $31;
        $32 = $result;
        $33 = ($32|0)!=(0);
        if ($33) {
         break L4;
        }
        $34 = ((($ocoll)) + 4|0);
        $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
        $36 = HEAP32[$idx>>2]|0;
        $37 = (__remove_at_list($35,$36)|0);
        $38 = ($37<<24>>24)!=(0);
        if (!($38)) {
         break;
        }
       }
       $39 = $1;
       $40 = ($39|0)!=(0|0);
       if ($40) {
        $41 = $1;
        $42 = HEAP32[$41>>2]|0;
        $43 = ($42|0)!=(0|0);
        if ($43) {
         $44 = $1;
         $45 = HEAP32[$44>>2]|0;
         $46 = HEAPU8[$45>>0]|(HEAPU8[$45+1>>0]<<8)|(HEAPU8[$45+2>>0]<<16)|(HEAPU8[$45+3>>0]<<24);
         $47 = ($46|0)!=(0|0);
         if ($47) {
          $48 = $0;
          $49 = $0;
          $50 = ((($49)) + 67|0);
          $51 = HEAPU8[$50>>0]|(HEAPU8[$50+1>>0]<<8)|(HEAPU8[$50+2>>0]<<16)|(HEAPU8[$50+3>>0]<<24);
          $52 = (__set_current_error($48,21,$51)|0);
          $53 = ($52<<24>>24)!=(0);
          if (!($53)) {
           break L4;
          }
          $54 = $0;
          $55 = $1;
          $56 = HEAP32[$55>>2]|0;
          $57 = HEAPU8[$56>>0]|(HEAPU8[$56+1>>0]<<8)|(HEAPU8[$56+2>>0]<<16)|(HEAPU8[$56+3>>0]<<24);
          $58 = ((($57)) + 9|0);
          $59 = HEAPU8[$58>>0]|(HEAPU8[$58+1>>0]<<8)|(HEAPU8[$58+2>>0]<<16)|(HEAPU8[$58+3>>0]<<24);
          $60 = $1;
          $61 = HEAP32[$60>>2]|0;
          $62 = HEAPU8[$61>>0]|(HEAPU8[$61+1>>0]<<8)|(HEAPU8[$61+2>>0]<<16)|(HEAPU8[$61+3>>0]<<24);
          $63 = ((($62)) + 13|0);
          $64 = HEAPU8[$63>>0]|(HEAPU8[$63+1>>0]<<8);
          $65 = $1;
          $66 = HEAP32[$65>>2]|0;
          $67 = HEAPU8[$66>>0]|(HEAPU8[$66+1>>0]<<8)|(HEAPU8[$66+2>>0]<<16)|(HEAPU8[$66+3>>0]<<24);
          $68 = ((($67)) + 15|0);
          $69 = HEAPU8[$68>>0]|(HEAPU8[$68+1>>0]<<8);
          __set_error_pos($54,$59,$64,$69);
          $result = 3;
          break L4;
         }
        }
       }
       $70 = $0;
       $71 = $0;
       $72 = ((($71)) + 67|0);
       $73 = HEAPU8[$72>>0]|(HEAPU8[$72+1>>0]<<8)|(HEAPU8[$72+2>>0]<<16)|(HEAPU8[$72+3>>0]<<24);
       $74 = (__set_current_error($70,21,$73)|0);
       $75 = ($74<<24>>24)!=(0);
       if (!($75)) {
        break L4;
       }
       $76 = $0;
       __set_error_pos($76,0,0,0);
       $result = 3;
       break L4;
       break;
      }
      case 1024:  {
       (__public_value_to_internal_object($coll,$ocoll)|0);
       while(1) {
        $77 = $0;
        $78 = $1;
        $79 = (_mb_has_arg($77,$78)|0);
        $80 = ($79|0)!=(0);
        if (!($80)) {
         break L7;
        }
        $81 = $0;
        $82 = $1;
        $83 = (_mb_pop_value($81,$82,$key)|0);
        $result = $83;
        $84 = $result;
        $85 = ($84|0)!=(0);
        if ($85) {
         break L4;
        }
        $86 = ((($ocoll)) + 4|0);
        $87 = HEAPU8[$86>>0]|(HEAPU8[$86+1>>0]<<8)|(HEAPU8[$86+2>>0]<<16)|(HEAPU8[$86+3>>0]<<24);
        $88 = (__remove_dict($87,$key)|0);
        $89 = ($88<<24>>24)!=(0);
        if (!($89)) {
         break;
        }
       }
       $90 = $1;
       $91 = ($90|0)!=(0|0);
       if ($91) {
        $92 = $1;
        $93 = HEAP32[$92>>2]|0;
        $94 = ($93|0)!=(0|0);
        if ($94) {
         $95 = $1;
         $96 = HEAP32[$95>>2]|0;
         $97 = HEAPU8[$96>>0]|(HEAPU8[$96+1>>0]<<8)|(HEAPU8[$96+2>>0]<<16)|(HEAPU8[$96+3>>0]<<24);
         $98 = ($97|0)!=(0|0);
         if ($98) {
          $99 = $0;
          $100 = $0;
          $101 = ((($100)) + 67|0);
          $102 = HEAPU8[$101>>0]|(HEAPU8[$101+1>>0]<<8)|(HEAPU8[$101+2>>0]<<16)|(HEAPU8[$101+3>>0]<<24);
          $103 = (__set_current_error($99,21,$102)|0);
          $104 = ($103<<24>>24)!=(0);
          if (!($104)) {
           break L4;
          }
          $105 = $0;
          $106 = $1;
          $107 = HEAP32[$106>>2]|0;
          $108 = HEAPU8[$107>>0]|(HEAPU8[$107+1>>0]<<8)|(HEAPU8[$107+2>>0]<<16)|(HEAPU8[$107+3>>0]<<24);
          $109 = ((($108)) + 9|0);
          $110 = HEAPU8[$109>>0]|(HEAPU8[$109+1>>0]<<8)|(HEAPU8[$109+2>>0]<<16)|(HEAPU8[$109+3>>0]<<24);
          $111 = $1;
          $112 = HEAP32[$111>>2]|0;
          $113 = HEAPU8[$112>>0]|(HEAPU8[$112+1>>0]<<8)|(HEAPU8[$112+2>>0]<<16)|(HEAPU8[$112+3>>0]<<24);
          $114 = ((($113)) + 13|0);
          $115 = HEAPU8[$114>>0]|(HEAPU8[$114+1>>0]<<8);
          $116 = $1;
          $117 = HEAP32[$116>>2]|0;
          $118 = HEAPU8[$117>>0]|(HEAPU8[$117+1>>0]<<8)|(HEAPU8[$117+2>>0]<<16)|(HEAPU8[$117+3>>0]<<24);
          $119 = ((($118)) + 15|0);
          $120 = HEAPU8[$119>>0]|(HEAPU8[$119+1>>0]<<8);
          __set_error_pos($105,$110,$115,$120);
          $result = 3;
          break L4;
         }
        }
       }
       $121 = $0;
       $122 = $0;
       $123 = ((($122)) + 67|0);
       $124 = HEAPU8[$123>>0]|(HEAPU8[$123+1>>0]<<8)|(HEAPU8[$123+2>>0]<<16)|(HEAPU8[$123+3>>0]<<24);
       $125 = (__set_current_error($121,21,$124)|0);
       $126 = ($125<<24>>24)!=(0);
       if (!($126)) {
        break L4;
       }
       $127 = $0;
       __set_error_pos($127,0,0,0);
       $result = 3;
       break L4;
       break;
      }
      default: {
       $128 = $1;
       $129 = ($128|0)!=(0|0);
       if ($129) {
        $130 = $1;
        $131 = HEAP32[$130>>2]|0;
        $132 = ($131|0)!=(0|0);
        if ($132) {
         $133 = $1;
         $134 = HEAP32[$133>>2]|0;
         $135 = HEAPU8[$134>>0]|(HEAPU8[$134+1>>0]<<8)|(HEAPU8[$134+2>>0]<<16)|(HEAPU8[$134+3>>0]<<24);
         $136 = ($135|0)!=(0|0);
         if ($136) {
          $137 = $0;
          $138 = $0;
          $139 = ((($138)) + 67|0);
          $140 = HEAPU8[$139>>0]|(HEAPU8[$139+1>>0]<<8)|(HEAPU8[$139+2>>0]<<16)|(HEAPU8[$139+3>>0]<<24);
          $141 = (__set_current_error($137,65,$140)|0);
          $142 = ($141<<24>>24)!=(0);
          if (!($142)) {
           break L4;
          }
          $143 = $0;
          $144 = $1;
          $145 = HEAP32[$144>>2]|0;
          $146 = HEAPU8[$145>>0]|(HEAPU8[$145+1>>0]<<8)|(HEAPU8[$145+2>>0]<<16)|(HEAPU8[$145+3>>0]<<24);
          $147 = ((($146)) + 9|0);
          $148 = HEAPU8[$147>>0]|(HEAPU8[$147+1>>0]<<8)|(HEAPU8[$147+2>>0]<<16)|(HEAPU8[$147+3>>0]<<24);
          $149 = $1;
          $150 = HEAP32[$149>>2]|0;
          $151 = HEAPU8[$150>>0]|(HEAPU8[$150+1>>0]<<8)|(HEAPU8[$150+2>>0]<<16)|(HEAPU8[$150+3>>0]<<24);
          $152 = ((($151)) + 13|0);
          $153 = HEAPU8[$152>>0]|(HEAPU8[$152+1>>0]<<8);
          $154 = $1;
          $155 = HEAP32[$154>>2]|0;
          $156 = HEAPU8[$155>>0]|(HEAPU8[$155+1>>0]<<8)|(HEAPU8[$155+2>>0]<<16)|(HEAPU8[$155+3>>0]<<24);
          $157 = ((($156)) + 15|0);
          $158 = HEAPU8[$157>>0]|(HEAPU8[$157+1>>0]<<8);
          __set_error_pos($143,$148,$153,$158);
          $result = 3;
          break L4;
         }
        }
       }
       $159 = $0;
       $160 = $0;
       $161 = ((($160)) + 67|0);
       $162 = HEAPU8[$161>>0]|(HEAPU8[$161+1>>0]<<8)|(HEAPU8[$161+2>>0]<<16)|(HEAPU8[$161+3>>0]<<24);
       $163 = (__set_current_error($159,65,$162)|0);
       $164 = ($163<<24>>24)!=(0);
       if (!($164)) {
        break L4;
       }
       $165 = $0;
       __set_error_pos($165,0,0,0);
       $result = 3;
       break L4;
      }
      }
     }
    } while(0);
    $166 = $0;
    $167 = $1;
    $168 = (_mb_attempt_close_bracket($166,$167)|0);
    $result = $168;
    $169 = $result;
    $170 = ($169|0)!=(0);
    if (!($170)) {
     $171 = $os;
     $172 = $171 & 2;
     $173 = ($172|0)==(0);
     if ($173) {
      $174 = $0;
      $175 = $1;
      ;HEAP32[$coll$byval_copy>>2]=HEAP32[$coll>>2]|0;HEAP32[$coll$byval_copy+4>>2]=HEAP32[$coll+4>>2]|0;
      $176 = (_mb_push_value($174,$175,$coll$byval_copy)|0);
      $result = $176;
     }
    }
   }
  }
 } while(0);
 $177 = $0;
 __assign_public_value($177,$coll,0,1);
 $178 = $result;
 STACKTOP = sp;return ($178|0);
}
function __coll_clear($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $8 = 0, $9 = 0, $coll = 0;
 var $coll$byval_copy = 0, $ocoll = 0, $or$cond = 0, $os = 0, $result = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $coll$byval_copy = sp + 16|0;
 $coll = sp + 48|0;
 $ocoll = sp + 24|0;
 $0 = $s;
 $1 = $l;
 $result = 0;
 $os = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),19149,(15398|0));
  // unreachable;
 }
 $6 = ((($coll)) + 4|0);
 ;HEAP8[$6>>0]=0|0;HEAP8[$6+1>>0]=0|0;HEAP8[$6+2>>0]=0|0;HEAP8[$6+3>>0]=0|0;
 HEAP8[$coll>>0]=0&255;HEAP8[$coll+1>>0]=(0>>8)&255;HEAP8[$coll+2>>0]=(0>>16)&255;HEAP8[$coll+3>>0]=0>>24;
 $7 = $0;
 $8 = $1;
 $9 = (_mb_attempt_open_bracket($7,$8)|0);
 $result = $9;
 $10 = $result;
 $11 = ($10|0)!=(0);
 L4: do {
  if (!($11)) {
   $12 = $0;
   $13 = $1;
   $14 = (_mb_pop_value($12,$13,$coll)|0);
   $result = $14;
   $15 = $result;
   $16 = ($15|0)!=(0);
   if (!($16)) {
    $17 = $0;
    $18 = $1;
    $19 = (__try_overridden($17,$18,$coll,15293,64)|0);
    $os = $19;
    $20 = $os;
    $21 = $20 & 1;
    $22 = ($21|0)==(0);
    L7: do {
     if ($22) {
      dest=$ocoll; stop=dest+17|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
      HEAP8[$ocoll>>0]=0&255;HEAP8[$ocoll+1>>0]=(0>>8)&255;HEAP8[$ocoll+2>>0]=(0>>16)&255;HEAP8[$ocoll+3>>0]=0>>24;
      $23 = HEAPU8[$coll>>0]|(HEAPU8[$coll+1>>0]<<8)|(HEAPU8[$coll+2>>0]<<16)|(HEAPU8[$coll+3>>0]<<24);
      switch ($23|0) {
      case 256:  {
       (__public_value_to_internal_object($coll,$ocoll)|0);
       $24 = ((($ocoll)) + 4|0);
       $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
       __clear_list($25);
       break L7;
       break;
      }
      case 1024:  {
       (__public_value_to_internal_object($coll,$ocoll)|0);
       $26 = ((($ocoll)) + 4|0);
       $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
       __clear_dict($27);
       break L7;
       break;
      }
      default: {
       $28 = $1;
       $29 = ($28|0)!=(0|0);
       if ($29) {
        $30 = $1;
        $31 = HEAP32[$30>>2]|0;
        $32 = ($31|0)!=(0|0);
        if ($32) {
         $33 = $1;
         $34 = HEAP32[$33>>2]|0;
         $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
         $36 = ($35|0)!=(0|0);
         if ($36) {
          $37 = $0;
          $38 = $0;
          $39 = ((($38)) + 67|0);
          $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8)|(HEAPU8[$39+2>>0]<<16)|(HEAPU8[$39+3>>0]<<24);
          $41 = (__set_current_error($37,65,$40)|0);
          $42 = ($41<<24>>24)!=(0);
          if (!($42)) {
           break L4;
          }
          $43 = $0;
          $44 = $1;
          $45 = HEAP32[$44>>2]|0;
          $46 = HEAPU8[$45>>0]|(HEAPU8[$45+1>>0]<<8)|(HEAPU8[$45+2>>0]<<16)|(HEAPU8[$45+3>>0]<<24);
          $47 = ((($46)) + 9|0);
          $48 = HEAPU8[$47>>0]|(HEAPU8[$47+1>>0]<<8)|(HEAPU8[$47+2>>0]<<16)|(HEAPU8[$47+3>>0]<<24);
          $49 = $1;
          $50 = HEAP32[$49>>2]|0;
          $51 = HEAPU8[$50>>0]|(HEAPU8[$50+1>>0]<<8)|(HEAPU8[$50+2>>0]<<16)|(HEAPU8[$50+3>>0]<<24);
          $52 = ((($51)) + 13|0);
          $53 = HEAPU8[$52>>0]|(HEAPU8[$52+1>>0]<<8);
          $54 = $1;
          $55 = HEAP32[$54>>2]|0;
          $56 = HEAPU8[$55>>0]|(HEAPU8[$55+1>>0]<<8)|(HEAPU8[$55+2>>0]<<16)|(HEAPU8[$55+3>>0]<<24);
          $57 = ((($56)) + 15|0);
          $58 = HEAPU8[$57>>0]|(HEAPU8[$57+1>>0]<<8);
          __set_error_pos($43,$48,$53,$58);
          $result = 3;
          break L4;
         }
        }
       }
       $59 = $0;
       $60 = $0;
       $61 = ((($60)) + 67|0);
       $62 = HEAPU8[$61>>0]|(HEAPU8[$61+1>>0]<<8)|(HEAPU8[$61+2>>0]<<16)|(HEAPU8[$61+3>>0]<<24);
       $63 = (__set_current_error($59,65,$62)|0);
       $64 = ($63<<24>>24)!=(0);
       if (!($64)) {
        break L4;
       }
       $65 = $0;
       __set_error_pos($65,0,0,0);
       $result = 3;
       break L4;
      }
      }
     }
    } while(0);
    $66 = $0;
    $67 = $1;
    $68 = (_mb_attempt_close_bracket($66,$67)|0);
    $result = $68;
    $69 = $result;
    $70 = ($69|0)!=(0);
    if (!($70)) {
     $71 = $os;
     $72 = $71 & 2;
     $73 = ($72|0)==(0);
     if ($73) {
      $74 = $0;
      $75 = $1;
      ;HEAP32[$coll$byval_copy>>2]=HEAP32[$coll>>2]|0;HEAP32[$coll$byval_copy+4>>2]=HEAP32[$coll+4>>2]|0;
      $76 = (_mb_push_value($74,$75,$coll$byval_copy)|0);
      $result = $76;
     }
    }
   }
  }
 } while(0);
 $77 = $0;
 __assign_public_value($77,$coll,0,1);
 $78 = $result;
 STACKTOP = sp;return ($78|0);
}
function __coll_clone($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $8 = 0, $9 = 0, $coll = 0, $ocoll = 0, $or$cond = 0;
 var $otgt = 0, $result = 0, $ret = 0, $ret$byval_copy = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ret$byval_copy = sp + 16|0;
 $coll = sp + 72|0;
 $ocoll = sp + 49|0;
 $otgt = sp + 32|0;
 $ret = sp + 24|0;
 $0 = $s;
 $1 = $l;
 $result = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),19197,(15386|0));
  // unreachable;
 }
 $6 = ((($coll)) + 4|0);
 ;HEAP8[$6>>0]=0|0;HEAP8[$6+1>>0]=0|0;HEAP8[$6+2>>0]=0|0;HEAP8[$6+3>>0]=0|0;
 HEAP8[$coll>>0]=0&255;HEAP8[$coll+1>>0]=(0>>8)&255;HEAP8[$coll+2>>0]=(0>>16)&255;HEAP8[$coll+3>>0]=0>>24;
 $7 = ((($ret)) + 4|0);
 ;HEAP8[$7>>0]=0|0;HEAP8[$7+1>>0]=0|0;HEAP8[$7+2>>0]=0|0;HEAP8[$7+3>>0]=0|0;
 HEAP8[$ret>>0]=0&255;HEAP8[$ret+1>>0]=(0>>8)&255;HEAP8[$ret+2>>0]=(0>>16)&255;HEAP8[$ret+3>>0]=0>>24;
 $8 = $0;
 $9 = $1;
 $10 = (_mb_attempt_open_bracket($8,$9)|0);
 $result = $10;
 $11 = $result;
 $12 = ($11|0)!=(0);
 if ($12) {
  $75 = $0;
  __assign_public_value($75,$coll,0,1);
  $76 = $result;
  STACKTOP = sp;return ($76|0);
 }
 $13 = $0;
 $14 = $1;
 $15 = (_mb_pop_value($13,$14,$coll)|0);
 $result = $15;
 $16 = $result;
 $17 = ($16|0)!=(0);
 if ($17) {
  $75 = $0;
  __assign_public_value($75,$coll,0,1);
  $76 = $result;
  STACKTOP = sp;return ($76|0);
 }
 $18 = $0;
 $19 = $1;
 $20 = (_mb_attempt_close_bracket($18,$19)|0);
 $result = $20;
 $21 = $result;
 $22 = ($21|0)!=(0);
 if ($22) {
  $75 = $0;
  __assign_public_value($75,$coll,0,1);
  $76 = $result;
  STACKTOP = sp;return ($76|0);
 }
 dest=$ocoll; stop=dest+17|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
 HEAP8[$ocoll>>0]=0&255;HEAP8[$ocoll+1>>0]=(0>>8)&255;HEAP8[$ocoll+2>>0]=(0>>16)&255;HEAP8[$ocoll+3>>0]=0>>24;
 dest=$otgt; stop=dest+17|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
 HEAP8[$otgt>>0]=0&255;HEAP8[$otgt+1>>0]=(0>>8)&255;HEAP8[$otgt+2>>0]=(0>>16)&255;HEAP8[$otgt+3>>0]=0>>24;
 $23 = HEAPU8[$coll>>0]|(HEAPU8[$coll+1>>0]<<8)|(HEAPU8[$coll+2>>0]<<16)|(HEAPU8[$coll+3>>0]<<24);
 switch ($23|0) {
 case 64:  {
  (__public_value_to_internal_object($coll,$ocoll)|0);
  $24 = ((($ocoll)) + 4|0);
  $25 = HEAPU8[$24>>0]|(HEAPU8[$24+1>>0]<<8)|(HEAPU8[$24+2>>0]<<16)|(HEAPU8[$24+3>>0]<<24);
  __clone_usertype_ref($25,$otgt);
  (__internal_object_to_public_value($otgt,$ret)|0);
  break;
 }
 case 256:  {
  (__public_value_to_internal_object($coll,$ocoll)|0);
  $26 = $0;
  (__clone_object($26,$ocoll,$otgt,0,1)|0);
  HEAP8[$ret>>0]=256&255;HEAP8[$ret+1>>0]=(256>>8)&255;HEAP8[$ret+2>>0]=(256>>16)&255;HEAP8[$ret+3>>0]=256>>24;
  $27 = ((($otgt)) + 4|0);
  $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
  $29 = ((($ret)) + 4|0);
  HEAP8[$29>>0]=$28&255;HEAP8[$29+1>>0]=($28>>8)&255;HEAP8[$29+2>>0]=($28>>16)&255;HEAP8[$29+3>>0]=$28>>24;
  break;
 }
 case 1024:  {
  (__public_value_to_internal_object($coll,$ocoll)|0);
  $30 = $0;
  (__clone_object($30,$ocoll,$otgt,0,1)|0);
  HEAP8[$ret>>0]=1024&255;HEAP8[$ret+1>>0]=(1024>>8)&255;HEAP8[$ret+2>>0]=(1024>>16)&255;HEAP8[$ret+3>>0]=1024>>24;
  $31 = ((($otgt)) + 4|0);
  $32 = HEAPU8[$31>>0]|(HEAPU8[$31+1>>0]<<8)|(HEAPU8[$31+2>>0]<<16)|(HEAPU8[$31+3>>0]<<24);
  $33 = ((($ret)) + 4|0);
  HEAP8[$33>>0]=$32&255;HEAP8[$33+1>>0]=($32>>8)&255;HEAP8[$33+2>>0]=($32>>16)&255;HEAP8[$33+3>>0]=$32>>24;
  break;
 }
 default: {
  $34 = $1;
  $35 = ($34|0)!=(0|0);
  if ($35) {
   $36 = $1;
   $37 = HEAP32[$36>>2]|0;
   $38 = ($37|0)!=(0|0);
   if ($38) {
    $39 = $1;
    $40 = HEAP32[$39>>2]|0;
    $41 = HEAPU8[$40>>0]|(HEAPU8[$40+1>>0]<<8)|(HEAPU8[$40+2>>0]<<16)|(HEAPU8[$40+3>>0]<<24);
    $42 = ($41|0)!=(0|0);
    if ($42) {
     $43 = $0;
     $44 = $0;
     $45 = ((($44)) + 67|0);
     $46 = HEAPU8[$45>>0]|(HEAPU8[$45+1>>0]<<8)|(HEAPU8[$45+2>>0]<<16)|(HEAPU8[$45+3>>0]<<24);
     $47 = (__set_current_error($43,65,$46)|0);
     $48 = ($47<<24>>24)!=(0);
     if (!($48)) {
      $75 = $0;
      __assign_public_value($75,$coll,0,1);
      $76 = $result;
      STACKTOP = sp;return ($76|0);
     }
     $49 = $0;
     $50 = $1;
     $51 = HEAP32[$50>>2]|0;
     $52 = HEAPU8[$51>>0]|(HEAPU8[$51+1>>0]<<8)|(HEAPU8[$51+2>>0]<<16)|(HEAPU8[$51+3>>0]<<24);
     $53 = ((($52)) + 9|0);
     $54 = HEAPU8[$53>>0]|(HEAPU8[$53+1>>0]<<8)|(HEAPU8[$53+2>>0]<<16)|(HEAPU8[$53+3>>0]<<24);
     $55 = $1;
     $56 = HEAP32[$55>>2]|0;
     $57 = HEAPU8[$56>>0]|(HEAPU8[$56+1>>0]<<8)|(HEAPU8[$56+2>>0]<<16)|(HEAPU8[$56+3>>0]<<24);
     $58 = ((($57)) + 13|0);
     $59 = HEAPU8[$58>>0]|(HEAPU8[$58+1>>0]<<8);
     $60 = $1;
     $61 = HEAP32[$60>>2]|0;
     $62 = HEAPU8[$61>>0]|(HEAPU8[$61+1>>0]<<8)|(HEAPU8[$61+2>>0]<<16)|(HEAPU8[$61+3>>0]<<24);
     $63 = ((($62)) + 15|0);
     $64 = HEAPU8[$63>>0]|(HEAPU8[$63+1>>0]<<8);
     __set_error_pos($49,$54,$59,$64);
     $result = 3;
     $75 = $0;
     __assign_public_value($75,$coll,0,1);
     $76 = $result;
     STACKTOP = sp;return ($76|0);
    }
   }
  }
  $65 = $0;
  $66 = $0;
  $67 = ((($66)) + 67|0);
  $68 = HEAPU8[$67>>0]|(HEAPU8[$67+1>>0]<<8)|(HEAPU8[$67+2>>0]<<16)|(HEAPU8[$67+3>>0]<<24);
  $69 = (__set_current_error($65,65,$68)|0);
  $70 = ($69<<24>>24)!=(0);
  if (!($70)) {
   $75 = $0;
   __assign_public_value($75,$coll,0,1);
   $76 = $result;
   STACKTOP = sp;return ($76|0);
  }
  $71 = $0;
  __set_error_pos($71,0,0,0);
  $result = 3;
  $75 = $0;
  __assign_public_value($75,$coll,0,1);
  $76 = $result;
  STACKTOP = sp;return ($76|0);
 }
 }
 $72 = $0;
 $73 = $1;
 ;HEAP32[$ret$byval_copy>>2]=HEAP32[$ret>>2]|0;HEAP32[$ret$byval_copy+4>>2]=HEAP32[$ret+4>>2]|0;
 $74 = (_mb_push_value($72,$73,$ret$byval_copy)|0);
 $result = $74;
 $75 = $0;
 __assign_public_value($75,$coll,0,1);
 $76 = $result;
 STACKTOP = sp;return ($76|0);
}
function __coll_to_array($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $__lst = 0, $__opresult = 0, $__tmp = 0, $array = 0, $coll = 0, $cond = 0, $helper = 0, $ocoll = 0, $or$cond = 0, $result = 0, $ret = 0, $ret$byval_copy = 0, dest = 0;
 var label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ret$byval_copy = sp + 32|0;
 $coll = sp + 80|0;
 $ocoll = sp + 60|0;
 $helper = sp + 48|0;
 $ret = sp + 40|0;
 $0 = $s;
 $1 = $l;
 $result = 0;
 $array = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),19256,(15329|0));
  // unreachable;
 }
 $6 = ((($coll)) + 4|0);
 ;HEAP8[$6>>0]=0|0;HEAP8[$6+1>>0]=0|0;HEAP8[$6+2>>0]=0|0;HEAP8[$6+3>>0]=0|0;
 HEAP8[$coll>>0]=0&255;HEAP8[$coll+1>>0]=(0>>8)&255;HEAP8[$coll+2>>0]=(0>>16)&255;HEAP8[$coll+3>>0]=0>>24;
 $7 = ((($ret)) + 4|0);
 ;HEAP8[$7>>0]=0|0;HEAP8[$7+1>>0]=0|0;HEAP8[$7+2>>0]=0|0;HEAP8[$7+3>>0]=0|0;
 HEAP8[$ret>>0]=0&255;HEAP8[$ret+1>>0]=(0>>8)&255;HEAP8[$ret+2>>0]=(0>>16)&255;HEAP8[$ret+3>>0]=0>>24;
 $8 = $0;
 $9 = $1;
 $10 = (_mb_attempt_open_bracket($8,$9)|0);
 $result = $10;
 $11 = $result;
 $12 = ($11|0)!=(0);
 if ($12) {
  $145 = $0;
  __assign_public_value($145,$coll,0,1);
  $146 = $result;
  STACKTOP = sp;return ($146|0);
 }
 $13 = $0;
 $14 = $1;
 $15 = (_mb_pop_value($13,$14,$coll)|0);
 $result = $15;
 $16 = $result;
 $17 = ($16|0)!=(0);
 if ($17) {
  $145 = $0;
  __assign_public_value($145,$coll,0,1);
  $146 = $result;
  STACKTOP = sp;return ($146|0);
 }
 $18 = $0;
 $19 = $1;
 $20 = (_mb_attempt_close_bracket($18,$19)|0);
 $result = $20;
 $21 = $result;
 $22 = ($21|0)!=(0);
 if ($22) {
  $145 = $0;
  __assign_public_value($145,$coll,0,1);
  $146 = $result;
  STACKTOP = sp;return ($146|0);
 }
 dest=$ocoll; stop=dest+17|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
 HEAP8[$ocoll>>0]=0&255;HEAP8[$ocoll+1>>0]=(0>>8)&255;HEAP8[$ocoll+2>>0]=(0>>16)&255;HEAP8[$ocoll+3>>0]=0>>24;
 $23 = HEAPU8[$coll>>0]|(HEAPU8[$coll+1>>0]<<8)|(HEAPU8[$coll+2>>0]<<16)|(HEAPU8[$coll+3>>0]<<24);
 $cond = ($23|0)==(256);
 if (!($cond)) {
  $107 = $1;
  $108 = ($107|0)!=(0|0);
  if ($108) {
   $109 = $1;
   $110 = HEAP32[$109>>2]|0;
   $111 = ($110|0)!=(0|0);
   if ($111) {
    $112 = $1;
    $113 = HEAP32[$112>>2]|0;
    $114 = HEAPU8[$113>>0]|(HEAPU8[$113+1>>0]<<8)|(HEAPU8[$113+2>>0]<<16)|(HEAPU8[$113+3>>0]<<24);
    $115 = ($114|0)!=(0|0);
    if ($115) {
     $116 = $0;
     $117 = $0;
     $118 = ((($117)) + 67|0);
     $119 = HEAPU8[$118>>0]|(HEAPU8[$118+1>>0]<<8)|(HEAPU8[$118+2>>0]<<16)|(HEAPU8[$118+3>>0]<<24);
     $120 = (__set_current_error($116,62,$119)|0);
     $121 = ($120<<24>>24)!=(0);
     if (!($121)) {
      $145 = $0;
      __assign_public_value($145,$coll,0,1);
      $146 = $result;
      STACKTOP = sp;return ($146|0);
     }
     $122 = $0;
     $123 = $1;
     $124 = HEAP32[$123>>2]|0;
     $125 = HEAPU8[$124>>0]|(HEAPU8[$124+1>>0]<<8)|(HEAPU8[$124+2>>0]<<16)|(HEAPU8[$124+3>>0]<<24);
     $126 = ((($125)) + 9|0);
     $127 = HEAPU8[$126>>0]|(HEAPU8[$126+1>>0]<<8)|(HEAPU8[$126+2>>0]<<16)|(HEAPU8[$126+3>>0]<<24);
     $128 = $1;
     $129 = HEAP32[$128>>2]|0;
     $130 = HEAPU8[$129>>0]|(HEAPU8[$129+1>>0]<<8)|(HEAPU8[$129+2>>0]<<16)|(HEAPU8[$129+3>>0]<<24);
     $131 = ((($130)) + 13|0);
     $132 = HEAPU8[$131>>0]|(HEAPU8[$131+1>>0]<<8);
     $133 = $1;
     $134 = HEAP32[$133>>2]|0;
     $135 = HEAPU8[$134>>0]|(HEAPU8[$134+1>>0]<<8)|(HEAPU8[$134+2>>0]<<16)|(HEAPU8[$134+3>>0]<<24);
     $136 = ((($135)) + 15|0);
     $137 = HEAPU8[$136>>0]|(HEAPU8[$136+1>>0]<<8);
     __set_error_pos($122,$127,$132,$137);
     $result = 3;
     $145 = $0;
     __assign_public_value($145,$coll,0,1);
     $146 = $result;
     STACKTOP = sp;return ($146|0);
    }
   }
  }
  $138 = $0;
  $139 = $0;
  $140 = ((($139)) + 67|0);
  $141 = HEAPU8[$140>>0]|(HEAPU8[$140+1>>0]<<8)|(HEAPU8[$140+2>>0]<<16)|(HEAPU8[$140+3>>0]<<24);
  $142 = (__set_current_error($138,62,$141)|0);
  $143 = ($142<<24>>24)!=(0);
  if (!($143)) {
   $145 = $0;
   __assign_public_value($145,$coll,0,1);
   $146 = $result;
   STACKTOP = sp;return ($146|0);
  }
  $144 = $0;
  __set_error_pos($144,0,0,0);
  $result = 3;
  $145 = $0;
  __assign_public_value($145,$coll,0,1);
  $146 = $result;
  STACKTOP = sp;return ($146|0);
 }
 (__public_value_to_internal_object($coll,$ocoll)|0);
 $24 = $0;
 $25 = (_mb_strdup(4760,1)|0);
 $26 = (__create_array($24,$25,3)|0);
 $array = $26;
 $27 = ((($ocoll)) + 4|0);
 $28 = HEAPU8[$27>>0]|(HEAPU8[$27+1>>0]<<8)|(HEAPU8[$27+2>>0]<<16)|(HEAPU8[$27+3>>0]<<24);
 $29 = ((($28)) + 31|0);
 $30 = HEAPU8[$29>>0]|(HEAPU8[$29+1>>0]<<8)|(HEAPU8[$29+2>>0]<<16)|(HEAPU8[$29+3>>0]<<24);
 $31 = $array;
 $32 = ((($31)) + 29|0);
 HEAP8[$32>>0]=$30&255;HEAP8[$32+1>>0]=($30>>8)&255;HEAP8[$32+2>>0]=($30>>16)&255;HEAP8[$32+3>>0]=$30>>24;
 $33 = $array;
 $34 = ((($33)) + 33|0);
 HEAP8[$34>>0] = 1;
 $35 = ((($ocoll)) + 4|0);
 $36 = HEAPU8[$35>>0]|(HEAPU8[$35+1>>0]<<8)|(HEAPU8[$35+2>>0]<<16)|(HEAPU8[$35+3>>0]<<24);
 $37 = ((($36)) + 31|0);
 $38 = HEAPU8[$37>>0]|(HEAPU8[$37+1>>0]<<8)|(HEAPU8[$37+2>>0]<<16)|(HEAPU8[$37+3>>0]<<24);
 $39 = $array;
 $40 = ((($39)) + 34|0);
 HEAP8[$40>>0]=$38&255;HEAP8[$40+1>>0]=($38>>8)&255;HEAP8[$40+2>>0]=($38>>16)&255;HEAP8[$40+3>>0]=$38>>24;
 $41 = $array;
 __init_array($41);
 $42 = $0;
 HEAP8[$helper>>0]=$42&255;HEAP8[$helper+1>>0]=($42>>8)&255;HEAP8[$helper+2>>0]=($42>>16)&255;HEAP8[$helper+3>>0]=$42>>24;
 $43 = $array;
 $44 = ((($helper)) + 4|0);
 HEAP8[$44>>0]=$43&255;HEAP8[$44+1>>0]=($43>>8)&255;HEAP8[$44+2>>0]=($43>>16)&255;HEAP8[$44+3>>0]=$43>>24;
 $45 = ((($helper)) + 8|0);
 HEAP8[$45>>0]=0&255;HEAP8[$45+1>>0]=(0>>8)&255;HEAP8[$45+2>>0]=(0>>16)&255;HEAP8[$45+3>>0]=0>>24;
 $46 = ((($ocoll)) + 4|0);
 $47 = HEAPU8[$46>>0]|(HEAPU8[$46+1>>0]<<8)|(HEAPU8[$46+2>>0]<<16)|(HEAPU8[$46+3>>0]<<24);
 $48 = ((($47)) + 19|0);
 $49 = HEAPU8[$48>>0]|(HEAPU8[$48+1>>0]<<8)|(HEAPU8[$48+2>>0]<<16)|(HEAPU8[$48+3>>0]<<24);
 $__lst = $49;
 $__opresult = 0;
 $__tmp = 0;
 $50 = ((($ocoll)) + 4|0);
 $51 = HEAPU8[$50>>0]|(HEAPU8[$50+1>>0]<<8)|(HEAPU8[$50+2>>0]<<16)|(HEAPU8[$50+3>>0]<<24);
 $52 = ((($51)) + 19|0);
 $53 = HEAPU8[$52>>0]|(HEAPU8[$52+1>>0]<<8)|(HEAPU8[$52+2>>0]<<16)|(HEAPU8[$52+3>>0]<<24);
 $54 = ($53|0)!=(0|0);
 if (!($54)) {
  ___assert_fail((15344|0),(4322|0),19279,(15329|0));
  // unreachable;
 }
 $55 = $__lst;
 $56 = ((($55)) + 8|0);
 $57 = HEAPU8[$56>>0]|(HEAPU8[$56+1>>0]<<8)|(HEAPU8[$56+2>>0]<<16)|(HEAPU8[$56+3>>0]<<24);
 $__lst = $57;
 while(1) {
  $58 = $__lst;
  $59 = ($58|0)!=(0|0);
  if (!($59)) {
   break;
  }
  $60 = $__lst;
  $61 = HEAPU8[$60>>0]|(HEAPU8[$60+1>>0]<<8)|(HEAPU8[$60+2>>0]<<16)|(HEAPU8[$60+3>>0]<<24);
  $62 = $__lst;
  $63 = ((($62)) + 12|0);
  $64 = HEAPU8[$63>>0]|(HEAPU8[$63+1>>0]<<8)|(HEAPU8[$63+2>>0]<<16)|(HEAPU8[$63+3>>0]<<24);
  (__copy_list_to_array($61,$64,$helper)|0);
  $65 = $__lst;
  $66 = HEAPU8[$65>>0]|(HEAPU8[$65+1>>0]<<8)|(HEAPU8[$65+2>>0]<<16)|(HEAPU8[$65+3>>0]<<24);
  $67 = $__lst;
  $68 = ((($67)) + 12|0);
  $69 = HEAPU8[$68>>0]|(HEAPU8[$68+1>>0]<<8)|(HEAPU8[$68+2>>0]<<16)|(HEAPU8[$68+3>>0]<<24);
  $70 = (__do_nothing_on_object($66,$69)|0);
  $__opresult = $70;
  $71 = $__lst;
  $__tmp = $71;
  $72 = $__lst;
  $73 = ((($72)) + 8|0);
  $74 = HEAPU8[$73>>0]|(HEAPU8[$73+1>>0]<<8)|(HEAPU8[$73+2>>0]<<16)|(HEAPU8[$73+3>>0]<<24);
  $__lst = $74;
  $75 = $__opresult;
  $76 = (-1)==($75|0);
  if (!($76)) {
   continue;
  }
  $77 = $__lst;
  $78 = $__tmp;
  $79 = ((($78)) + 4|0);
  $80 = HEAPU8[$79>>0]|(HEAPU8[$79+1>>0]<<8)|(HEAPU8[$79+2>>0]<<16)|(HEAPU8[$79+3>>0]<<24);
  $81 = ((($80)) + 8|0);
  HEAP8[$81>>0]=$77&255;HEAP8[$81+1>>0]=($77>>8)&255;HEAP8[$81+2>>0]=($77>>16)&255;HEAP8[$81+3>>0]=$77>>24;
  $82 = $__lst;
  $83 = ($82|0)!=(0|0);
  if ($83) {
   $84 = $__tmp;
   $85 = ((($84)) + 4|0);
   $86 = HEAPU8[$85>>0]|(HEAPU8[$85+1>>0]<<8)|(HEAPU8[$85+2>>0]<<16)|(HEAPU8[$85+3>>0]<<24);
   $87 = $__lst;
   $88 = ((($87)) + 4|0);
   HEAP8[$88>>0]=$86&255;HEAP8[$88+1>>0]=($86>>8)&255;HEAP8[$88+2>>0]=($86>>16)&255;HEAP8[$88+3>>0]=$86>>24;
  }
  $89 = $__tmp;
  $90 = ($89|0)!=(0|0);
  if (!($90)) {
   label = 16;
   break;
  }
  $91 = $__tmp;
  _mb_free($91);
  $__tmp = 0;
  $92 = ((($ocoll)) + 4|0);
  $93 = HEAPU8[$92>>0]|(HEAPU8[$92+1>>0]<<8)|(HEAPU8[$92+2>>0]<<16)|(HEAPU8[$92+3>>0]<<24);
  $94 = ((($93)) + 19|0);
  $95 = HEAPU8[$94>>0]|(HEAPU8[$94+1>>0]<<8)|(HEAPU8[$94+2>>0]<<16)|(HEAPU8[$94+3>>0]<<24);
  $96 = HEAPU8[$95>>0]|(HEAPU8[$95+1>>0]<<8)|(HEAPU8[$95+2>>0]<<16)|(HEAPU8[$95+3>>0]<<24);
  $97 = ((($96)) + -1|0);
  $98 = ((($ocoll)) + 4|0);
  $99 = HEAPU8[$98>>0]|(HEAPU8[$98+1>>0]<<8)|(HEAPU8[$98+2>>0]<<16)|(HEAPU8[$98+3>>0]<<24);
  $100 = ((($99)) + 19|0);
  $101 = HEAPU8[$100>>0]|(HEAPU8[$100+1>>0]<<8)|(HEAPU8[$100+2>>0]<<16)|(HEAPU8[$100+3>>0]<<24);
  HEAP8[$101>>0]=$97&255;HEAP8[$101+1>>0]=($97>>8)&255;HEAP8[$101+2>>0]=($97>>16)&255;HEAP8[$101+3>>0]=$97>>24;
 }
 if ((label|0) == 16) {
  ___assert_fail((4369|0),(4322|0),19279,(15329|0));
  // unreachable;
 }
 HEAP8[$ret>>0]=128&255;HEAP8[$ret+1>>0]=(128>>8)&255;HEAP8[$ret+2>>0]=(128>>16)&255;HEAP8[$ret+3>>0]=128>>24;
 $102 = $array;
 $103 = ((($ret)) + 4|0);
 HEAP8[$103>>0]=$102&255;HEAP8[$103+1>>0]=($102>>8)&255;HEAP8[$103+2>>0]=($102>>16)&255;HEAP8[$103+3>>0]=$102>>24;
 $104 = $0;
 $105 = $1;
 ;HEAP32[$ret$byval_copy>>2]=HEAP32[$ret>>2]|0;HEAP32[$ret$byval_copy+4>>2]=HEAP32[$ret+4>>2]|0;
 $106 = (_mb_push_value($104,$105,$ret$byval_copy)|0);
 $result = $106;
 $145 = $0;
 __assign_public_value($145,$coll,0,1);
 $146 = $result;
 STACKTOP = sp;return ($146|0);
}
function __coll_move_next($s,$l) {
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0;
 var $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0;
 var $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0;
 var $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0;
 var $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0;
 var $279 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0;
 var $ast = 0, $it = 0, $oit = 0, $or$cond = 0, $os = 0, $result = 0, $ret = 0, $ret$byval_copy = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ret$byval_copy = sp + 24|0;
 $it = sp + 64|0;
 $oit = sp + 40|0;
 $ret = sp + 32|0;
 $0 = $s;
 $1 = $l;
 $result = 0;
 $os = 0;
 $ast = 0;
 $2 = $0;
 $3 = ($2|0)!=(0|0);
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $or$cond = $3 & $5;
 if (!($or$cond)) {
  ___assert_fail((4777|0),(4322|0),19362,(15313|0));
  // unreachable;
 }
 $6 = ((($it)) + 4|0);
 ;HEAP8[$6>>0]=0|0;HEAP8[$6+1>>0]=0|0;HEAP8[$6+2>>0]=0|0;HEAP8[$6+3>>0]=0|0;
 HEAP8[$it>>0]=0&255;HEAP8[$it+1>>0]=(0>>8)&255;HEAP8[$it+2>>0]=(0>>16)&255;HEAP8[$it+3>>0]=0>>24;
 $7 = ((($ret)) + 4|0);
 ;HEAP8[$7>>0]=0|0;HEAP8[$7+1>>0]=0|0;HEAP8[$7+2>>0]=0|0;HEAP8[$7+3>>0]=0|0;
 HEAP8[$ret>>0]=0&255;HEAP8[$ret+1>>0]=(0>>8)&255;HEAP8[$ret+2>>0]=(0>>16)&255;HEAP8[$ret+3>>0]=0>>24;
 $8 = $0;
 $9 = $1;
 $10 = (_mb_attempt_open_bracket($8,$9)|0);
 $result = $10;
 $11 = $result;
 $12 = ($11|0)!=(0);
 if ($12) {
  $279 = $result;
  STACKTOP = sp;return ($279|0);
 }
 $13 = $1;
 $14 = HEAP32[$13>>2]|0;
 $ast = $14;
 $15 = $ast;
 $16 = ($15|0)!=(0|0);
 if ($16) {
  $17 = $ast;
  $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
  $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
  $20 = ($19|0)==(8);
  if ($20) {
   $21 = $ast;
   $22 = HEAPU8[$21>>0]|(HEAPU8[$21+1>>0]<<8)|(HEAPU8[$21+2>>0]<<16)|(HEAPU8[$21+3>>0]<<24);
   $23 = ((($22)) + 4|0);
   $24 = HEAPU8[$23>>0]|(HEAPU8[$23+1>>0]<<8)|(HEAPU8[$23+2>>0]<<16)|(HEAPU8[$23+3>>0]<<24);
   $25 = ((($24)) + 4|0);
   $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
   $27 = ($26|0)==(97|0);
   if ($27) {
    $28 = $1;
    $29 = ($28|0)!=(0|0);
    if ($29) {
     $30 = $1;
     $31 = HEAP32[$30>>2]|0;
     $32 = ($31|0)!=(0|0);
     if ($32) {
      $33 = $1;
      $34 = HEAP32[$33>>2]|0;
      $35 = HEAPU8[$34>>0]|(HEAPU8[$34+1>>0]<<8)|(HEAPU8[$34+2>>0]<<16)|(HEAPU8[$34+3>>0]<<24);
      $36 = ($35|0)!=(0|0);
      if ($36) {
       $37 = $0;
       $38 = $0;
       $39 = ((($38)) + 67|0);
       $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8)|(HEAPU8[$39+2>>0]<<16)|(HEAPU8[$39+3>>0]<<24);
       $41 = (__set_current_error($37,63,$40)|0);
       $42 = ($41<<24>>24)!=(0);
       if (!($42)) {
        $279 = $result;
        STACKTOP = sp;return ($279|0);
       }
       $43 = $0;
       $44 = $1;
       $45 = HEAP32[$44>>2]|0;
       $46 = HEAPU8[$45>>0]|(HEAPU8[$45+1>>0]<<8)|(HEAPU8[$45+2>>0]<<16)|(HEAPU8[$45+3>>0]<<24);
       $47 = ((($46)) + 9|0);
       $48 = HEAPU8[$47>>0]|(HEAPU8[$47+1>>0]<<8)|(HEAPU8[$47+2>>0]<<16)|(HEAPU8[$47+3>>0]<<24);
       $49 = $1;
       $50 = HEAP32[$49>>2]|0;
       $51 = HEAPU8[$50>>0]|(HEAPU8[$50+1>>0]<<8)|(HEAPU8[$50+2>>0]<<16)|(HEAPU8[$50+3>>0]<<24);
       $52 = ((($51)) + 13|0);
       $53 = HEAPU8[$52>>0]|(HEAPU8[$52+1>>0]<<8);
       $54 = $1;
       $55 = HEAP32[$54>>2]|0;
       $56 = HEAPU8[$55>>0]|(HEAPU8[$55+1>>0]<<8)|(HEAPU8[$55+2>>0]<<16)|(HEAPU8[$55+3>>0]<<24);
       $57 = ((($56)) + 15|0);
       $58 = HEAPU8[$57>>0]|(HEAPU8[$57+1>>0]<<8);
       __set_error_pos($43,$48,$53,$58);
       $result = 3;
       $279 = $result;
       STACKTOP = sp;return ($279|0);
      }
     }
    }
    $59 = $0;
    $60 = $0;
    $61 = ((($60)) + 67|0);
    $62 = HEAPU8[$61>>0]|(HEAPU8[$61+1>>0]<<8)|(HEAPU8[$61+2>>0]<<16)|(HEAPU8[$61+3>>0]<<24);
    $63 = (__set_current_error($59,63,$62)|0);
    $64 = ($63<<24>>24)!=(0);
    if (!($64)) {
     $279 = $result;
     STACKTOP = sp;return ($279|0);
    }
    $65 = $0;
    __set_error_pos($65,0,0,0);
    $result = 3;
    $279 = $result;
    STACKTOP = sp;return ($279|0);
   }
  }
 }
 $66 = $0;
 $67 = $1;
 $68 = (_mb_pop_value($66,$67,$it)|0);
 $result = $68;
 $69 = $result;
 $70 = ($69|0)!=(0);
 if ($70) {
  $279 = $result;
  STACKTOP = sp;return ($279|0);
 }
 $71 = $0;
 $72 = $1;
 $73 = (__try_overridden($71,$72,$it,6199,64)|0);
 $os = $73;
 $74 = $os;
 $75 = $74 & 1;
 $76 = ($75|0)==(0);
 L28: do {
  if ($76) {
   dest=$oit; stop=dest+17|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
   HEAP8[$oit>>0]=0&255;HEAP8[$oit+1>>0]=(0>>8)&255;HEAP8[$oit+2>>0]=(0>>16)&255;HEAP8[$oit+3>>0]=0>>24;
   $77 = HEAPU8[$it>>0]|(HEAPU8[$it+1>>0]<<8)|(HEAPU8[$it+2>>0]<<16)|(HEAPU8[$it+3>>0]<<24);
   switch ($77|0) {
   case 512:  {
    (__public_value_to_internal_object($it,$oit)|0);
    $78 = ((($oit)) + 4|0);
    $79 = HEAPU8[$78>>0]|(HEAPU8[$78+1>>0]<<8)|(HEAPU8[$78+2>>0]<<16)|(HEAPU8[$78+3>>0]<<24);
    $80 = (__move_list_it_next($79)|0);
    $81 = ((($oit)) + 4|0);
    HEAP8[$81>>0]=$80&255;HEAP8[$81+1>>0]=($80>>8)&255;HEAP8[$81+2>>0]=($80>>16)&255;HEAP8[$81+3>>0]=$80>>24;
    $82 = ((($oit)) + 4|0);
    $83 = HEAPU8[$82>>0]|(HEAPU8[$82+1>>0]<<8)|(HEAPU8[$82+2>>0]<<16)|(HEAPU8[$82+3>>0]<<24);
    $84 = (__invalid_list_it($83)|0);
    $85 = ($84<<24>>24)!=(0);
    if (!($85)) {
     $124 = ((($oit)) + 4|0);
     $125 = HEAPU8[$124>>0]|(HEAPU8[$124+1>>0]<<8)|(HEAPU8[$124+2>>0]<<16)|(HEAPU8[$124+3>>0]<<24);
     $126 = ($125|0)!=(0|0);
     $127 = ((($ret)) + 4|0);
     if ($126) {
      HEAP8[$127>>0]=1&255;HEAP8[$127+1>>0]=(1>>8)&255;HEAP8[$127+2>>0]=(1>>16)&255;HEAP8[$127+3>>0]=1>>24;
      HEAP8[$ret>>0]=2&255;HEAP8[$ret+1>>0]=(2>>8)&255;HEAP8[$ret+2>>0]=(2>>16)&255;HEAP8[$ret+3>>0]=2>>24;
      break L28;
     } else {
      ;HEAP8[$127>>0]=0|0;HEAP8[$127+1>>0]=0|0;HEAP8[$127+2>>0]=0|0;HEAP8[$127+3>>0]=0|0;
      HEAP8[$ret>>0]=0&255;HEAP8[$ret+1>>0]=(0>>8)&255;HEAP8[$ret+2>>0]=(0>>16)&255;HEAP8[$ret+3>>0]=0>>24;
      break L28;
     }
    }
    $86 = $1;
    $87 = ($86|0)!=(0|0);
    if ($87) {
     $88 = $1;
     $89 = HEAP32[$88>>2]|0;
     $90 = ($89|0)!=(0|0);
     if ($90) {
      $91 = $1;
      $92 = HEAP32[$91>>2]|0;
      $93 = HEAPU8[$92>>0]|(HEAPU8[$92+1>>0]<<8)|(HEAPU8[$92+2>>0]<<16)|(HEAPU8[$92+3>>0]<<24);
      $94 = ($93|0)!=(0|0);
      if ($94) {
       $95 = $0;
       $96 = $0;
       $97 = ((($96)) + 67|0);
       $98 = HEAPU8[$97>>0]|(HEAPU8[$97+1>>0]<<8)|(HEAPU8[$97+2>>0]<<16)|(HEAPU8[$97+3>>0]<<24);
       $99 = (__set_current_error($95,63,$98)|0);
       $100 = ($99<<24>>24)!=(0);
       if (!($100)) {
        $279 = $result;
        STACKTOP = sp;return ($279|0);
       }
       $101 = $0;
       $102 = $1;
       $103 = HEAP32[$102>>2]|0;
       $104 = HEAPU8[$103>>0]|(HEAPU8[$103+1>>0]<<8)|(HEAPU8[$103+2>>0]<<16)|(HEAPU8[$103+3>>0]<<24);
       $105 = ((($104)) + 9|0);
       $106 = HEAPU8[$105>>0]|(HEAPU8[$105+1>>0]<<8)|(HEAPU8[$105+2>>0]<<16)|(HEAPU8[$105+3>>0]<<24);
       $107 = $1;
       $108 = HEAP32[$107>>2]|0;
       $109 = HEAPU8[$108>>0]|(HEAPU8[$108+1>>0]<<8)|(HEAPU8[$108+2>>0]<<16)|(HEAPU8[$108+3>>0]<<24);
       $110 = ((($109)) + 13|0);
       $111 = HEAPU8[$110>>0]|(HEAPU8[$110+1>>0]<<8);
       $112 = $1;
       $113 = HEAP32[$112>>2]|0;
       $114 = HEAPU8[$113>>0]|(HEAPU8[$113+1>>0]<<8)|(HEAPU8[$113+2>>0]<<16)|(HEAPU8[$113+3>>0]<<24);
       $115 = ((($114)) + 15|0);
       $116 = HEAPU8[$115>>0]|(HEAPU8[$115+1>>0]<<8);
       __set_error_pos($101,$106,$111,$116);
       $result = 3;
       $279 = $result;
       STACKTOP = sp;return ($279|0);
      }
     }
    }
    $117 = $0;
    $118 = $0;
    $119 = ((($118)) + 67|0);
    $120 = HEAPU8[$119>>0]|(HEAPU8[$119+1>>0]<<8)|(HEAPU8[$119+2>>0]<<16)|(HEAPU8[$119+3>>0]<<24);
    $121 = (__set_current_error($117,63,$120)|0);
    $122 = ($121<<24>>24)!=(0);
    if (!($122)) {
     $279 = $result;
     STACKTOP = sp;return ($279|0);
    }
    $123 = $0;
    __set_error_pos($123,0,0,0);
    $result = 3;
    $279 = $result;
    STACKTOP = sp;return ($279|0);
    break;
   }
   case 2048:  {
    (__public_value_to_internal_object($it,$oit)|0);
    $128 = ((($oit)) + 4|0);
    $129 = HEAPU8[$128>>0]|(HEAPU8[$128+1>>0]<<8)|(HEAPU8[$128+2>>0]<<16)|(HEAPU8[$128+3>>0]<<24);
    $130 = ($129|0)!=(0|0);
    if ($130) {
     $131 = ((($oit)) + 4|0);
     $132 = HEAPU8[$131>>0]|(HEAPU8[$131+1>>0]<<8)|(HEAPU8[$131+2>>0]<<16)|(HEAPU8[$131+3>>0]<<24);
     $133 = ((($132)) + 26|0);
     $134 = HEAPU8[$133>>0]|(HEAPU8[$133+1>>0]<<8)|(HEAPU8[$133+2>>0]<<16)|(HEAPU8[$133+3>>0]<<24);
     $135 = ($134|0)==((-1)|0);
     if ($135) {
      $136 = ((($oit)) + 4|0);
      $137 = HEAPU8[$136>>0]|(HEAPU8[$136+1>>0]<<8)|(HEAPU8[$136+2>>0]<<16)|(HEAPU8[$136+3>>0]<<24);
      $138 = (__invalid_dict_it($137)|0);
      $139 = $138&255;
      $140 = ($139|0)!=(0);
      if ($140) {
       $141 = $1;
       $142 = ($141|0)!=(0|0);
       if ($142) {
        $143 = $1;
        $144 = HEAP32[$143>>2]|0;
        $145 = ($144|0)!=(0|0);
        if ($145) {
         $146 = $1;
         $147 = HEAP32[$146>>2]|0;
         $148 = HEAPU8[$147>>0]|(HEAPU8[$147+1>>0]<<8)|(HEAPU8[$147+2>>0]<<16)|(HEAPU8[$147+3>>0]<<24);
         $149 = ($148|0)!=(0|0);
         if ($149) {
          $150 = $0;
          $151 = $0;
          $152 = ((($151)) + 67|0);
          $153 = HEAPU8[$152>>0]|(HEAPU8[$152+1>>0]<<8)|(HEAPU8[$152+2>>0]<<16)|(HEAPU8[$152+3>>0]<<24);
          $154 = (__set_current_error($150,63,$153)|0);
          $155 = ($154<<24>>24)!=(0);
          if (!($155)) {
           $279 = $result;
           STACKTOP = sp;return ($279|0);
          }
          $156 = $0;
          $157 = $1;
          $158 = HEAP32[$157>>2]|0;
          $159 = HEAPU8[$158>>0]|(HEAPU8[$158+1>>0]<<8)|(HEAPU8[$158+2>>0]<<16)|(HEAPU8[$158+3>>0]<<24);
          $160 = ((($159)) + 9|0);
          $161 = HEAPU8[$160>>0]|(HEAPU8[$160+1>>0]<<8)|(HEAPU8[$160+2>>0]<<16)|(HEAPU8[$160+3>>0]<<24);
          $162 = $1;
          $163 = HEAP32[$162>>2]|0;
          $164 = HEAPU8[$163>>0]|(HEAPU8[$163+1>>0]<<8)|(HEAPU8[$163+2>>0]<<16)|(HEAPU8[$163+3>>0]<<24);
          $165 = ((($164)) + 13|0);
          $166 = HEAPU8[$165>>0]|(HEAPU8[$165+1>>0]<<8);
          $167 = $1;
          $168 = HEAP32[$167>>2]|0;
          $169 = HEAPU8[$168>>0]|(HEAPU8[$168+1>>0]<<8)|(HEAPU8[$168+2>>0]<<16)|(HEAPU8[$168+3>>0]<<24);
          $170 = ((($169)) + 15|0);
          $171 = HEAPU8[$170>>0]|(HEAPU8[$170+1>>0]<<8);
          __set_error_pos($156,$161,$166,$171);
          $result = 3;
          $279 = $result;
          STACKTOP = sp;return ($279|0);
         }
        }
       }
       $172 = $0;
       $173 = $0;
       $174 = ((($173)) + 67|0);
       $175 = HEAPU8[$174>>0]|(HEAPU8[$174+1>>0]<<8)|(HEAPU8[$174+2>>0]<<16)|(HEAPU8[$174+3>>0]<<24);
       $176 = (__set_current_error($172,63,$175)|0);
       $177 = ($176<<24>>24)!=(0);
       if (!($177)) {
        $279 = $result;
        STACKTOP = sp;return ($279|0);
       }
       $178 = $0;
       __set_error_pos($178,0,0,0);
       $result = 3;
       $279 = $result;
       STACKTOP = sp;return ($279|0);
      }
     }
    }
    $179 = ((($oit)) + 4|0);
    $180 = HEAPU8[$179>>0]|(HEAPU8[$179+1>>0]<<8)|(HEAPU8[$179+2>>0]<<16)|(HEAPU8[$179+3>>0]<<24);
    $181 = (__move_dict_it_next($180)|0);
    $182 = ((($oit)) + 4|0);
    HEAP8[$182>>0]=$181&255;HEAP8[$182+1>>0]=($181>>8)&255;HEAP8[$182+2>>0]=($181>>16)&255;HEAP8[$182+3>>0]=$181>>24;
    $183 = ((($oit)) + 4|0);
    $184 = HEAPU8[$183>>0]|(HEAPU8[$183+1>>0]<<8)|(HEAPU8[$183+2>>0]<<16)|(HEAPU8[$183+3>>0]<<24);
    $185 = (__invalid_dict_it($184)|0);
    $186 = ($185<<24>>24)!=(0);
    if (!($186)) {
     $225 = ((($oit)) + 4|0);
     $226 = HEAPU8[$225>>0]|(HEAPU8[$225+1>>0]<<8)|(HEAPU8[$225+2>>0]<<16)|(HEAPU8[$225+3>>0]<<24);
     $227 = ($226|0)!=(0|0);
     $228 = ((($ret)) + 4|0);
     if ($227) {
      HEAP8[$228>>0]=1&255;HEAP8[$228+1>>0]=(1>>8)&255;HEAP8[$228+2>>0]=(1>>16)&255;HEAP8[$228+3>>0]=1>>24;
      HEAP8[$ret>>0]=2&255;HEAP8[$ret+1>>0]=(2>>8)&255;HEAP8[$ret+2>>0]=(2>>16)&255;HEAP8[$ret+3>>0]=2>>24;
      break L28;
     } else {
      ;HEAP8[$228>>0]=0|0;HEAP8[$228+1>>0]=0|0;HEAP8[$228+2>>0]=0|0;HEAP8[$228+3>>0]=0|0;
      HEAP8[$ret>>0]=0&255;HEAP8[$ret+1>>0]=(0>>8)&255;HEAP8[$ret+2>>0]=(0>>16)&255;HEAP8[$ret+3>>0]=0>>24;
      break L28;
     }
    }
    $187 = $1;
    $188 = ($187|0)!=(0|0);
    if ($188) {
     $189 = $1;
     $190 = HEAP32[$189>>2]|0;
     $191 = ($190|0)!=(0|0);
     if ($191) {
      $192 = $1;
      $193 = HEAP32[$192>>2]|0;
      $194 = HEAPU8[$193>>0]|(HEAPU8[$193+1>>0]<<8)|(HEAPU8[$193+2>>0]<<16)|(HEAPU8[$193+3>>0]<<24);
      $195 = ($194|0)!=(0|0);
      if ($195) {
       $196 = $0;
       $197 = $0;
       $198 = ((($197)) + 67|0);
       $199 = HEAPU8[$198>>0]|(HEAPU8[$198+1>>0]<<8)|(HEAPU8[$198+2>>0]<<16)|(HEAPU8[$198+3>>0]<<24);
       $200 = (__set_current_error($196,63,$199)|0);
       $201 = ($200<<24>>24)!=(0);
       if (!($201)) {
        $279 = $result;
        STACKTOP = sp;return ($279|0);
       }
       $202 = $0;
       $203 = $1;
       $204 = HEAP32[$203>>2]|0;
       $205 = HEAPU8[$204>>0]|(HEAPU8[$204+1>>0]<<8)|(HEAPU8[$204+2>>0]<<16)|(HEAPU8[$204+3>>0]<<24);
       $206 = ((($205)) + 9|0);
       $207 = HEAPU8[$206>>0]|(HEAPU8[$206+1>>0]<<8)|(HEAPU8[$206+2>>0]<<16)|(HEAPU8[$206+3>>0]<<24);
       $208 = $1;
       $209 = HEAP32[$208>>2]|0;
       $210 = HEAPU8[$209>>0]|(HEAPU8[$209+1>>0]<<8)|(HEAPU8[$209+2>>0]<<16)|(HEAPU8[$209+3>>0]<<24);
       $211 = ((($210)) + 13|0);
       $212 = HEAPU8[$211>>0]|(HEAPU8[$211+1>>0]<<8);
       $213 = $1;
       $214 = HEAP32[$213>>2]|0;
       $215 = HEAPU8[$214>>0]|(HEAPU8[$214+1>>0]<<8)|(HEAPU8[$214+2>>0]<<16)|(HEAPU8[$214+3>>0]<<24);
       $216 = ((($215)) + 15|0);
       $217 = HEAPU8[$216>>0]|(HEAPU8[$216+1>>0]<<8);
       __set_error_pos($202,$207,$212,$217);
       $result = 3;
       $279 = $result;
       STACKTOP = sp;return ($279|0);
      }
     }
    }
    $218 = $0;
    $219 = $0;
    $220 = ((($219)) + 67|0);
    $221 = HEAPU8[$220>>0]|(HEAPU8[$220+1>>0]<<8)|(HEAPU8[$220+2>>0]<<16)|(HEAPU8[$220+3>>0]<<24);
    $222 = (__set_current_error($218,63,$221)|0);
    $223 = ($222<<24>>24)!=(0);
    if (!($223)) {
     $279 = $result;
     STACKTOP = sp;return ($279|0);
    }
    $224 = $0;
    __set_error_pos($224,0,0,0);
    $result = 3;
    $279 = $result;
    STACKTOP = sp;return ($279|0);
    break;
   }
   default: {
    $229 = $0;
    __assign_public_value($229,$it,0,1);
    $230 = $1;
    $231 = ($230|0)!=(0|0);
    if ($231) {
     $232 = $1;
     $233 = HEAP32[$232>>2]|0;
     $234 = ($233|0)!=(0|0);
     if ($234) {
      $235 = $1;
      $236 = HEAP32[$235>>2]|0;
      $237 = HEAPU8[$236>>0]|(HEAPU8[$236+1>>0]<<8)|(HEAPU8[$236+2>>0]<<16)|(HEAPU8[$236+3>>0]<<24);
      $238 = ($237|0)!=(0|0);
      if ($238) {
       $239 = $0;
       $240 = $0;
       $241 = ((($240)) + 67|0);
       $242 = HEAPU8[$241>>0]|(HEAPU8[$241+1>>0]<<8)|(HEAPU8[$241+2>>0]<<16)|(HEAPU8[$241+3>>0]<<24);
       $243 = (__set_current_error($239,64,$242)|0);
       $244 = ($243<<24>>24)!=(0);
       if (!($244)) {
        $279 = $result;
        STACKTOP = sp;return ($279|0);
       }
       $245 = $0;
       $246 = $1;
       $247 = HEAP32[$246>>2]|0;
       $248 = HEAPU8[$247>>0]|(HEAPU8[$247+1>>0]<<8)|(HEAPU8[$247+2>>0]<<16)|(HEAPU8[$247+3>>0]<<24);
       $249 = ((($248)) + 9|0);
       $250 = HEAPU8[$249>>0]|(HEAPU8[$249+1>>0]<<8)|(HEAPU8[$249+2>>0]<<16)|(HEAPU8[$249+3>>0]<<24);
       $251 = $1;
       $252 = HEAP32[$251>>2]|0;
       $253 = HEAPU8[$252>>0]|(HEAPU8[$252+1>>0]<<8)|(HEAPU8[$252+2>>0]<<16)|(HEAPU8[$252+3>>0]<<24);
       $254 = ((($253)) + 13|0);
       $255 = HEAPU8[$254>>0]|(HEAPU8[$254+1>>0]<<8);
       $256 = $1;
       $257 = HEAP32[$256>>2]|0;
       $258 = HEAPU8[$257>>0]|(HEAPU8[$257+1>>0]<<8)|(HEAPU8[$257+2>>0]<<16)|(HEAPU8[$257+3>>0]<<24);
       $259 = ((($258)) + 15|0);
       $260 = HEAPU8[$259>>0]|(HEAPU8[$259+1>>0]<<8);
       __set_error_pos($245,$250,$255,$260);
       $result = 3;
       $279 = $result;
       STACKTOP = sp;return ($279|0);
      }
     }
    }
    $261 = $0;
    $262 = $0;
    $263 = ((($262)) + 67|0);
    $264 = HEAPU8[$263>>0]|(HEAPU8[$263+1>>0]<<8)|(HEAPU8[$263+2>>0]<<16)|(HEAPU8[$263+3>>0]<<24);
    $265 = (__set_current_error($261,64,$264)|0);
    $266 = ($265<<24>>24)!=(0);
    if (!($266)) {
     $279 = $result;
     STACKTOP = sp;return ($279|0);
    }
    $267 = $0;
    __set_error_pos($267,0,0,0);
    $result = 3;
    $279 = $result;
    STACKTOP = sp;return ($279|0);
   }
   }
  }
 } while(0);
 $268 = $0;
 $269 = $1;
 $270 = (_mb_attempt_close_bracket($268,$269)|0);
 $result = $270;
 $271 = $result;
 $272 = ($271|0)!=(0);
 if ($272) {
  $279 = $result;
  STACKTOP = sp;return ($279|0);
 }
 $273 = $os;
 $274 = $273 & 2;
 $275 = ($274|0)==(0);
 if (!($275)) {
  $279 = $result;
  STACKTOP = sp;return ($279|0);
 }
 $276 = $0;
 $277 = $1;
 ;HEAP32[$ret$byval_copy>>2]=HEAP32[$ret>>2]|0;HEAP32[$ret$byval_copy+4>>2]=HEAP32[$ret+4>>2]|0;
 $278 = (_mb_push_value($276,$277,$ret$byval_copy)|0);
 $result = $278;
 $279 = $result;
 STACKTOP = sp;return ($279|0);
}
function __copy_list_to_array($data,$extra,$h) {
 $data = $data|0;
 $extra = $extra|0;
 $h = $h|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $obj = 0, $or$cond = 0, $type = 0, $val = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $val = sp + 24|0;
 $type = sp;
 $0 = $data;
 $1 = $extra;
 $2 = $h;
 $obj = 0;
 HEAP32[$type>>2] = 0;
 $3 = $0;
 $4 = ($3|0)!=(0|0);
 $5 = $2;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if ($or$cond) {
  $7 = $0;
  $obj = $7;
  $8 = ((($val)) + 4|0);
  ;HEAP8[$8>>0]=0|0;HEAP8[$8+1>>0]=0|0;HEAP8[$8+2>>0]=0|0;HEAP8[$8+3>>0]=0|0;
  HEAP8[$val>>0]=0&255;HEAP8[$val+1>>0]=(0>>8)&255;HEAP8[$val+2>>0]=(0>>16)&255;HEAP8[$val+3>>0]=0>>24;
  $9 = $obj;
  (__internal_object_to_public_value($9,$val)|0);
  $10 = $obj;
  $11 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
  HEAP32[$type>>2] = $11;
  $12 = $2;
  $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
  $14 = $2;
  $15 = ((($14)) + 4|0);
  $16 = HEAPU8[$15>>0]|(HEAPU8[$15+1>>0]<<8)|(HEAPU8[$15+2>>0]<<16)|(HEAPU8[$15+3>>0]<<24);
  $17 = $2;
  $18 = ((($17)) + 8|0);
  $19 = HEAPU8[$18>>0]|(HEAPU8[$18+1>>0]<<8)|(HEAPU8[$18+2>>0]<<16)|(HEAPU8[$18+3>>0]<<24);
  $20 = (($19) + 1)|0;
  HEAP8[$18>>0]=$20&255;HEAP8[$18+1>>0]=($20>>8)&255;HEAP8[$18+2>>0]=($20>>16)&255;HEAP8[$18+3>>0]=$20>>24;
  $21 = ((($val)) + 4|0);
  (__set_array_elem($13,0,$16,$19,$21,$type)|0);
  STACKTOP = sp;return 1;
 } else {
  ___assert_fail((13024|0),(4322|0),8252,(15366|0));
  // unreachable;
 }
 return (0)|0;
}
function __clear_list($coll) {
 $coll = $coll|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $coll;
 $1 = $0;
 $2 = ($1|0)!=(0|0);
 if (!($2)) {
  ___assert_fail((5397|0),(4322|0),7959,(15422|0));
  // unreachable;
 }
 $3 = $0;
 $4 = ((($3)) + 35|0);
 $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
 $6 = ($5|0)!=(0|0);
 do {
  if ($6) {
   $7 = $0;
   $8 = ((($7)) + 35|0);
   $9 = HEAPU8[$8>>0]|(HEAPU8[$8+1>>0]<<8)|(HEAPU8[$8+2>>0]<<16)|(HEAPU8[$8+3>>0]<<24);
   $10 = ($9|0)!=(0|0);
   if ($10) {
    $11 = $0;
    $12 = ((($11)) + 35|0);
    $13 = HEAPU8[$12>>0]|(HEAPU8[$12+1>>0]<<8)|(HEAPU8[$12+2>>0]<<16)|(HEAPU8[$12+3>>0]<<24);
    _mb_free($13);
    $14 = $0;
    $15 = ((($14)) + 35|0);
    HEAP8[$15>>0]=0&255;HEAP8[$15+1>>0]=(0>>8)&255;HEAP8[$15+2>>0]=(0>>16)&255;HEAP8[$15+3>>0]=0>>24;
    break;
   } else {
    ___assert_fail((4369|0),(4322|0),7961,(15422|0));
    // unreachable;
   }
  }
 } while(0);
 $16 = $0;
 $17 = ((($16)) + 19|0);
 $18 = HEAPU8[$17>>0]|(HEAPU8[$17+1>>0]<<8)|(HEAPU8[$17+2>>0]<<16)|(HEAPU8[$17+3>>0]<<24);
 (__ls_foreach($18,134)|0);
 $19 = $0;
 $20 = ((($19)) + 19|0);
 $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
 __ls_clear($21);
 $22 = $0;
 $23 = ((($22)) + 31|0);
 HEAP8[$23>>0]=0&255;HEAP8[$23+1>>0]=(0>>8)&255;HEAP8[$23+2>>0]=(0>>16)&255;HEAP8[$23+3>>0]=0>>24;
 $24 = $0;
 $25 = ((($24)) + 17|0);
 $26 = $0;
 $27 = $0;
 (__write_on_ref_object($25,$26,$27)|0);
 $28 = $0;
 __invalidate_list_cache($28);
 STACKTOP = sp;return;
}
function __clear_dict($coll) {
 $coll = $coll|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $coll;
 $1 = $0;
 $2 = ($1|0)!=(0|0);
 if ($2) {
  $3 = $0;
  $4 = ((($3)) + 19|0);
  $5 = HEAPU8[$4>>0]|(HEAPU8[$4+1>>0]<<8)|(HEAPU8[$4+2>>0]<<16)|(HEAPU8[$4+3>>0]<<24);
  (__ht_foreach($5,152)|0);
  $6 = $0;
  $7 = ((($6)) + 19|0);
  $8 = HEAPU8[$7>>0]|(HEAPU8[$7+1>>0]<<8)|(HEAPU8[$7+2>>0]<<16)|(HEAPU8[$7+3>>0]<<24);
  __ht_clear($8);
  $9 = $0;
  $10 = ((($9)) + 17|0);
  $11 = $0;
  $12 = $0;
  (__write_on_ref_object($10,$11,$12)|0);
  STACKTOP = sp;return;
 } else {
  ___assert_fail((5397|0),(4322|0),8098,(15410|0));
  // unreachable;
 }
}
function __find_list($coll,$val,$idx) {
 $coll = $coll|0;
 $val = $val|0;
 $idx = $idx|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $oarg = 0, $or$cond = 0, $result = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $oarg = sp;
 $0 = $coll;
 $1 = $val;
 $2 = $idx;
 $result = 0;
 HEAP32[$oarg>>2] = 0;
 $3 = $0;
 $4 = ($3|0)!=(0|0);
 $5 = $1;
 $6 = ($5|0)!=(0|0);
 $or$cond = $4 & $6;
 if ($or$cond) {
  $7 = $0;
  __fill_ranged($7);
  $8 = $1;
  (__create_internal_object_from_public_value($8,$oarg)|0);
  $9 = $0;
  $10 = ((($9)) + 19|0);
  $11 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
  $12 = HEAP32[$oarg>>2]|0;
  $13 = $2;
  $14 = (__ls_find($11,$12,150,$13)|0);
  $15 = ($14|0)!=(0|0);
  $16 = $15 ^ 1;
  $17 = $16 ^ 1;
  $18 = $17&1;
  $19 = $18&255;
  $result = $19;
  $20 = HEAP32[$oarg>>2]|0;
  (__destroy_object($20,0)|0);
  $21 = $result;
  STACKTOP = sp;return ($21|0);
 } else {
  ___assert_fail((10405|0),(4322|0),7946,(15462|0));
  // unreachable;
 }
 return (0)|0;
}
function __sort_list($coll) {
 $coll = $coll|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $coll;
 $1 = $0;
 $2 = ($1|0)!=(0|0);
 if ($2) {
  $3 = $0;
  $4 = ((($3)) + 19|0);
  (__ls_sort($4,150)|0);
  $5 = $0;
  $6 = ((($5)) + 17|0);
  $7 = $0;
  $8 = $0;
  (__write_on_ref_object($6,$7,$8)|0);
  $9 = $0;
  __invalidate_list_cache($9);
  STACKTOP = sp;return;
 } else {
  ___assert_fail((5397|0),(4322|0),7973,(15497|0));
  // unreachable;
 }
}
function __ls_sort($list,$cmp) {
 $list = $list|0;
 $cmp = $cmp|0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $e = 0, $i = 0, $insize = 0, $is_circular = 0, $is_double = 0, $lst = 0, $nmerges = 0, $oldhead = 0, $or$cond = 0, $or$cond3 = 0, $p = 0, $psize = 0, $q = 0, $qsize = 0, $tail = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $list;
 $2 = $cmp;
 $is_circular = 0;
 $is_double = 1;
 $lst = 0;
 $3 = $1;
 $4 = ($3|0)!=(0|0);
 if ($4) {
  $5 = $1;
  $6 = HEAP32[$5>>2]|0;
  $7 = ($6|0)!=(0|0);
  if ($7) {
  }
 }
 $8 = $1;
 $9 = ($8|0)!=(0|0);
 if (!($9)) {
  ___assert_fail((15508|0),(4322|0),2606,(15529|0));
  // unreachable;
 }
 $10 = $1;
 $11 = HEAP32[$10>>2]|0;
 $12 = ($11|0)!=(0|0);
 $13 = $2;
 $14 = ($13|0)!=(0|0);
 $or$cond = $12 & $14;
 if (!($or$cond)) {
  ___assert_fail((15508|0),(4322|0),2606,(15529|0));
  // unreachable;
 }
 $15 = $1;
 $16 = HEAP32[$15>>2]|0;
 $lst = $16;
 $17 = $lst;
 $18 = ($17|0)!=(0|0);
 if ($18) {
  $19 = $lst;
  $20 = ((($19)) + 8|0);
  $21 = HEAPU8[$20>>0]|(HEAPU8[$20+1>>0]<<8)|(HEAPU8[$20+2>>0]<<16)|(HEAPU8[$20+3>>0]<<24);
  $lst = $21;
 }
 $22 = $lst;
 $23 = ($22|0)!=(0|0);
 if (!($23)) {
  $0 = 0;
  $162 = $0;
  STACKTOP = sp;return ($162|0);
 }
 $insize = 1;
 while(1) {
  $24 = $lst;
  $p = $24;
  $25 = $lst;
  $oldhead = $25;
  $lst = 0;
  $tail = 0;
  $nmerges = 0;
  while(1) {
   $26 = $p;
   $27 = ($26|0)!=(0|0);
   if (!($27)) {
    break;
   }
   $28 = $nmerges;
   $29 = (($28) + 1)|0;
   $nmerges = $29;
   $30 = $p;
   $q = $30;
   $psize = 0;
   $i = 0;
   while(1) {
    $31 = $i;
    $32 = $insize;
    $33 = ($31|0)<($32|0);
    if (!($33)) {
     break;
    }
    $34 = $psize;
    $35 = (($34) + 1)|0;
    $psize = $35;
    $36 = $is_circular;
    $37 = ($36<<24>>24)!=(0);
    $38 = $q;
    $39 = ((($38)) + 8|0);
    $40 = HEAPU8[$39>>0]|(HEAPU8[$39+1>>0]<<8)|(HEAPU8[$39+2>>0]<<16)|(HEAPU8[$39+3>>0]<<24);
    if ($37) {
     $41 = $oldhead;
     $42 = ($40|0)==($41|0);
     if ($42) {
      $46 = 0;
     } else {
      $43 = $q;
      $44 = ((($43)) + 8|0);
      $45 = HEAPU8[$44>>0]|(HEAPU8[$44+1>>0]<<8)|(HEAPU8[$44+2>>0]<<16)|(HEAPU8[$44+3>>0]<<24);
      $46 = $45;
     }
     $q = $46;
    } else {
     $q = $40;
    }
    $47 = $q;
    $48 = ($47|0)!=(0|0);
    if (!($48)) {
     break;
    }
    $49 = $i;
    $50 = (($49) + 1)|0;
    $i = $50;
   }
   $51 = $insize;
   $qsize = $51;
   while(1) {
    $52 = $psize;
    $53 = ($52|0)>(0);
    if (!($53)) {
     $54 = $qsize;
     $55 = ($54|0)>(0);
     $56 = $q;
     $57 = ($56|0)!=(0|0);
     $58 = $55 ? $57 : 0;
     if (!($58)) {
      break;
     }
    }
    $59 = $psize;
    $60 = ($59|0)==(0);
    do {
     if ($60) {
      $61 = $q;
      $e = $61;
      $62 = $q;
      $63 = ((($62)) + 8|0);
      $64 = HEAPU8[$63>>0]|(HEAPU8[$63+1>>0]<<8)|(HEAPU8[$63+2>>0]<<16)|(HEAPU8[$63+3>>0]<<24);
      $q = $64;
      $65 = $qsize;
      $66 = (($65) + -1)|0;
      $qsize = $66;
      $67 = $is_circular;
      $68 = $67&255;
      $69 = ($68|0)!=(0);
      if ($69) {
       $70 = $q;
       $71 = $oldhead;
       $72 = ($70|0)==($71|0);
       if ($72) {
        $q = 0;
       }
      }
     } else {
      $73 = $qsize;
      $74 = ($73|0)!=(0);
      $75 = $q;
      $76 = ($75|0)!=(0|0);
      $or$cond3 = $74 & $76;
      if (!($or$cond3)) {
       $77 = $p;
       $e = $77;
       $78 = $p;
       $79 = ((($78)) + 8|0);
       $80 = HEAPU8[$79>>0]|(HEAPU8[$79+1>>0]<<8)|(HEAPU8[$79+2>>0]<<16)|(HEAPU8[$79+3>>0]<<24);
       $p = $80;
       $81 = $psize;
       $82 = (($81) + -1)|0;
       $psize = $82;
       $83 = $is_circular;
       $84 = $83&255;
       $85 = ($84|0)!=(0);
       if (!($85)) {
        break;
       }
       $86 = $p;
       $87 = $oldhead;
       $88 = ($86|0)==($87|0);
       if (!($88)) {
        break;
       }
       $p = 0;
       break;
      }
      $89 = $2;
      $90 = $p;
      $91 = HEAPU8[$90>>0]|(HEAPU8[$90+1>>0]<<8)|(HEAPU8[$90+2>>0]<<16)|(HEAPU8[$90+3>>0]<<24);
      $92 = $q;
      $93 = HEAPU8[$92>>0]|(HEAPU8[$92+1>>0]<<8)|(HEAPU8[$92+2>>0]<<16)|(HEAPU8[$92+3>>0]<<24);
      $94 = (FUNCTION_TABLE_iii[$89 & 255]($91,$93)|0);
      $95 = ($94|0)<=(0);
      if ($95) {
       $96 = $p;
       $e = $96;
       $97 = $p;
       $98 = ((($97)) + 8|0);
       $99 = HEAPU8[$98>>0]|(HEAPU8[$98+1>>0]<<8)|(HEAPU8[$98+2>>0]<<16)|(HEAPU8[$98+3>>0]<<24);
       $p = $99;
       $100 = $psize;
       $101 = (($100) + -1)|0;
       $psize = $101;
       $102 = $is_circular;
       $103 = $102&255;
       $104 = ($103|0)!=(0);
       if (!($104)) {
        break;
       }
       $105 = $p;
       $106 = $oldhead;
       $107 = ($105|0)==($106|0);
       if (!($107)) {
        break;
       }
       $p = 0;
       break;
      } else {
       $108 = $q;
       $e = $108;
       $109 = $q;
       $110 = ((($109)) + 8|0);
       $111 = HEAPU8[$110>>0]|(HEAPU8[$110+1>>0]<<8)|(HEAPU8[$110+2>>0]<<16)|(HEAPU8[$110+3>>0]<<24);
       $q = $111;
       $112 = $qsize;
       $113 = (($112) + -1)|0;
       $qsize = $113;
       $114 = $is_circular;
       $115 = $114&255;
       $116 = ($115|0)!=(0);
       if (!($116)) {
        break;
       }
       $117 = $q;
       $118 = $oldhead;
       $119 = ($117|0)==($118|0);
       if (!($119)) {
        break;
       }
       $q = 0;
       break;
      }
     }
    } while(0);
    $120 = $tail;
    $121 = ($120|0)!=(0|0);
    $122 = $e;
    if ($121) {
     $123 = $tail;
     $124 = ((($123)) + 8|0);
     HEAP8[$124>>0]=$122&255;HEAP8[$124+1>>0]=($122>>8)&255;HEAP8[$124+2>>0]=($122>>16)&255;HEAP8[$124+3>>0]=$122>>24;
    } else {
     $lst = $122;
    }
    $125 = $is_double;
    $126 = ($125<<24>>24)!=(0);
    if ($126) {
     $127 = $tail;
     $128 = $e;
     $129 = ((($128)) + 4|0);
     HEAP8[$129>>0]=$127&255;HEAP8[$129+1>>0]=($127>>8)&255;HEAP8[$129+2>>0]=($127>>16)&255;HEAP8[$129+3>>0]=$127>>24;
    }
    $130 = $e;
    $tail = $130;
   }
   $131 = $q;
   $p = $131;
  }
  $132 = $is_circular;
  $133 = ($132<<24>>24)!=(0);
  if ($133) {
   $134 = $lst;
   $135 = $tail;
   $136 = ((($135)) + 8|0);
   HEAP8[$136>>0]=$134&255;HEAP8[$136+1>>0]=($134>>8)&255;HEAP8[$136+2>>0]=($134>>16)&255;HEAP8[$136+3>>0]=$134>>24;
   $137 = $is_double;
   $138 = ($137<<24>>24)!=(0);
   if ($138) {
    $139 = $tail;
    $140 = $lst;
    $141 = ((($140)) + 4|0);
    HEAP8[$141>>0]=$139&255;HEAP8[$141+1>>0]=($139>>8)&255;HEAP8[$141+2>>0]=($139>>16)&255;HEAP8[$141+3>>0]=$139>>24;
   }
  } else {
   $142 = $tail;
   $143 = ((($142)) + 8|0);
   HEAP8[$143>>0]=0&255;HEAP8[$143+1>>0]=(0>>8)&255;HEAP8[$143+2>>0]=(0>>16)&255;HEAP8[$143+3>>0]=0>>24;
  }
  $144 = $nmerges;
  $145 = ($144|0)<=(1);
  if ($145) {
   break;
  }
  $160 = $insize;
  $161 = $160<<1;
  $insize = $161;
 }
 $146 = $lst;
 $147 = $1;
 $148 = HEAP32[$147>>2]|0;
 $149 = ((($148)) + 8|0);
 HEAP8[$149>>0]=$146&255;HEAP8[$149+1>>0]=($146>>8)&255;HEAP8[$149+2>>0]=($146>>16)&255;HEAP8[$149+3>>0]=$146>>24;
 $150 = $tail;
 $151 = $1;
 $152 = HEAP32[$151>>2]|0;
 $153 = ((($152)) + 4|0);
 HEAP8[$153>>0]=$150&255;HEAP8[$153+1>>0]=($150>>8)&255;HEAP8[$153+2>>0]=($150>>16)&255;HEAP8[$153+3>>0]=$150>>24;
 $154 = $1;
 $155 = HEAP32[$154>>2]|0;
 $156 = $lst;
 $157 = ((($156)) + 4|0);
 HEAP8[$157>>0]=$155&255;HEAP8[$157+1>>0]=($155>>8)&255;HEAP8[$157+2>>0]=($155>>16)&255;HEAP8[$157+3>>0]=$155>>24;
 $158 = $1;
 $159 = HEAP32[$158>>2]|0;
 $0 = $159;
 $162 = $0;
 STACKTOP = sp;return ($162|0);
}
function __insert_list($coll,$idx,$val,$oval) {
 $coll = $coll|0;
 $idx = $idx|0;
 $val = $val|0;
 $oval = $oval|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $oarg = 0, $or$cond = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $oarg = sp;
 $1 = $coll;
 $2 = $idx;
 $3 = $val;
 $4 = $oval;
 HEAP32[$oarg>>2] = 0;
 $5 = $1;
 $6 = ($5|0)!=(0|0);
 $7 = $3;
 $8 = ($7|0)!=(0|0);
 $or$cond = $6 & $8;
 if (!($or$cond)) {
  ___assert_fail((10405|0),(4322|0),7769,(15551|0));
  // unreachable;
 }
 $9 = $1;
 $10 = ((($9)) + 13|0);
 $11 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
 $12 = $3;
 $13 = $4;
 $14 = ($13|0)!=(0|0);
 if ($14) {
  $15 = $4;
  $16 = HEAP32[$15>>2]|0;
  $17 = $16;
 } else {
  $17 = 0;
 }
 $18 = (__try_purge_it($11,$12,$17)|0);
 $19 = ($18<<24>>24)!=(0);
 if ($19) {
  $0 = 0;
  $56 = $0;
  STACKTOP = sp;return ($56|0);
 }
 $20 = $1;
 __fill_ranged($20);
 $21 = $3;
 (__create_internal_object_from_public_value($21,$oarg)|0);
 $22 = HEAP32[$oarg>>2]|0;
 $23 = HEAPU8[$22>>0]|(HEAPU8[$22+1>>0]<<8)|(HEAPU8[$22+2>>0]<<16)|(HEAPU8[$22+3>>0]<<24);
 $24 = ($23|0)==(17);
 if ($24) {
  $25 = HEAP32[$oarg>>2]|0;
  $26 = ((($25)) + 4|0);
  $27 = HEAPU8[$26>>0]|(HEAPU8[$26+1>>0]<<8)|(HEAPU8[$26+2>>0]<<16)|(HEAPU8[$26+3>>0]<<24);
  $28 = ((($27)) + 58|0);
  $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
  $30 = ($29|0)!=(2);
  if ($30) {
   $31 = HEAP32[$oarg>>2]|0;
   $32 = ((($31)) + 8|0);
   $33 = HEAP8[$32>>0]|0;
   $34 = $33 & -2;
   $35 = $34 | 1;
   HEAP8[$32>>0] = $35;
  }
 }
 $36 = $4;
 $37 = ($36|0)!=(0|0);
 if ($37) {
  $38 = HEAP32[$oarg>>2]|0;
  $39 = $4;
  HEAP32[$39>>2] = $38;
 }
 $40 = $1;
 $41 = ((($40)) + 19|0);
 $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
 $43 = $2;
 $44 = HEAP32[$oarg>>2]|0;
 $45 = (__ls_insert_at($42,$43,$44)|0);
 $46 = ($45|0)!=(0|0);
 if ($46) {
  $47 = $1;
  $48 = ((($47)) + 31|0);
  $49 = HEAPU8[$48>>0]|(HEAPU8[$48+1>>0]<<8)|(HEAPU8[$48+2>>0]<<16)|(HEAPU8[$48+3>>0]<<24);
  $50 = (($49) + 1)|0;
  HEAP8[$48>>0]=$50&255;HEAP8[$48+1>>0]=($50>>8)&255;HEAP8[$48+2>>0]=($50>>16)&255;HEAP8[$48+3>>0]=$50>>24;
  $51 = $1;
  $52 = ((($51)) + 17|0);
  $53 = $1;
  $54 = $1;
  (__write_on_ref_object($52,$53,$54)|0);
  $55 = $1;
  __invalidate_list_cache($55);
  $0 = 1;
  $56 = $0;
  STACKTOP = sp;return ($56|0);
 } else {
  $0 = 0;
  $56 = $0;
  STACKTOP = sp;return ($56|0);
 }
 return (0)|0;
}
function __ls_insert_at($list,$index,$data) {
 $list = $list|0;
 $index = $index|0;
 $data = $data|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $result = 0, $tmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $0 = $list;
 $1 = $index;
 $2 = $data;
 $result = 0;
 $tmp = 0;
 $3 = $0;
 $4 = ($3|0)!=(0|0);
 if (!($4)) {
  ___assert_fail((8246|0),(4322|0),2497,(15564|0));
  // unreachable;
 }
 $5 = $0;
 $6 = ((($5)) + 8|0);
 $7 = HEAPU8[$6>>0]|(HEAPU8[$6+1>>0]<<8)|(HEAPU8[$6+2>>0]<<16)|(HEAPU8[$6+3>>0]<<24);
 $tmp = $7;
 while(1) {
  $8 = $tmp;
  $9 = ($8|0)!=(0|0);
  $10 = $1;
  $11 = ($10|0)!=(0);
  $12 = $9 ? $11 : 0;
  $13 = $tmp;
  if (!($12)) {
   break;
  }
  $14 = ((($13)) + 8|0);
  $15 = HEAPU8[$14>>0]|(HEAPU8[$14+1>>0]<<8)|(HEAPU8[$14+2>>0]<<16)|(HEAPU8[$14+3>>0]<<24);
  $tmp = $15;
  $16 = $1;
  $17 = (($16) + -1)|0;
  $1 = $17;
 }
 $18 = ($13|0)!=(0|0);
 if ($18) {
  $24 = $2;
  $25 = (__ls_create_node($24)|0);
  $result = $25;
  $26 = $result;
  $27 = $tmp;
  $28 = ((($27)) + 4|0);
  $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
  $30 = ((($29)) + 8|0);
  HEAP8[$30>>0]=$26&255;HEAP8[$30+1>>0]=($26>>8)&255;HEAP8[$30+2>>0]=($26>>16)&255;HEAP8[$30+3>>0]=$26>>24;
  $31 = $tmp;
  $32 = ((($31)) + 4|0);
  $33 = HEAPU8[$32>>0]|(HEAPU8[$32+1>>0]<<8)|(HEAPU8[$32+2>>0]<<16)|(HEAPU8[$32+3>>0]<<24);
  $34 = $result;
  $35 = ((($34)) + 4|0);
  HEAP8[$35>>0]=$33&255;HEAP8[$35+1>>0]=($33>>8)&255;HEAP8[$35+2>>0]=($33>>16)&255;HEAP8[$35+3>>0]=$33>>24;
  $36 = $tmp;
  $37 = $result;
  $38 = ((($37)) + 8|0);
  HEAP8[$38>>0]=$36&255;HEAP8[$38+1>>0]=($36>>8)&255;HEAP8[$38+2>>0]=($36>>16)&255;HEAP8[$38+3>>0]=$36>>24;
  $39 = $result;
  $40 = $tmp;
  $41 = ((($40)) + 4|0);
  HEAP8[$41>>0]=$39&255;HEAP8[$41+1>>0]=($39>>8)&255;HEAP8[$41+2>>0]=($39>>16)&255;HEAP8[$41+3>>0]=$39>>24;
 } else {
  $19 = $1;
  $20 = ($19|0)==(0);
  if ($20) {
   $21 = $0;
   $22 = $2;
   $23 = (__ls_pushback($21,$22)|0);
   $result = $23;
  }
 }
 $42 = $0;
 $43 = HEAPU8[$42>>0]|(HEAPU8[$42+1>>0]<<8)|(HEAPU8[$42+2>>0]<<16)|(HEAPU8[$42+3>>0]<<24);
 $44 = ((($43)) + 1|0);
 $45 = $0;
 HEAP8[$45>>0]=$44&255;HEAP8[$45+1>>0]=($44>>8)&255;HEAP8[$45+2>>0]=($44>>16)&255;HEAP8[$45+3>>0]=$44>>24;
 $46 = $result;
 STACKTOP = sp;return ($46|0);
}
function __pop_list($coll,$val,$s) {
 $coll = $coll|0;
 $val = $val|0;
 $s = $s|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond3 = 0, $or$cond5 = 0, $oval = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $1 = $coll;
 $2 = $val;
 $3 = $s;
 $oval = 0;
 $4 = $1;
 $5 = ($4|0)!=(0|0);
 $6 = $2;
 $7 = ($6|0)!=(0|0);
 $or$cond = $5 & $7;
 if ($or$cond) {
 }
 $8 = $1;
 $9 = ($8|0)!=(0|0);
 $10 = $2;
 $11 = ($10|0)!=(0|0);
 $or$cond3 = $9 & $11;
 $12 = $3;
 $13 = ($12|0)!=(0|0);
 $or$cond5 = $or$cond3 & $13;
 if (!($or$cond5)) {
  ___assert_fail((15599|0),(4322|0),7741,(15616|0));
  // unreachable;
 }
 $14 = $1;
 __fill_ranged($14);
 $15 = $1;
 $16 = ((($15)) + 19|0);
 $17 = HEAPU8[$16>>0]|(HEAPU8[$16+1>>0]<<8)|(HEAPU8[$16+2>>0]<<16)|(HEAPU8[$16+3>>0]<<24);
 $18 = (__ls_popback($17)|0);
 $oval = $18;
 $19 = $oval;
 $20 = ($19|0)!=(0|0);
 if (!($20)) {
  $40 = $2;
  $41 = ((($40)) + 4|0);
  ;HEAP8[$41>>0]=0|0;HEAP8[$41+1>>0]=0|0;HEAP8[$41+2>>0]=0|0;HEAP8[$41+3>>0]=0|0;
  $42 = $2;
  HEAP8[$42>>0]=0&255;HEAP8[$42+1>>0]=(0>>8)&255;HEAP8[$42+2>>0]=(0>>16)&255;HEAP8[$42+3>>0]=0>>24;
  $0 = 0;
  $43 = $0;
  STACKTOP = sp;return ($43|0);
 }
 $21 = $oval;
 $22 = $2;
 (__internal_object_to_public_value($21,$22)|0);
 $23 = $oval;
 (__destroy_object_capsule_only($23,0)|0);
 $24 = $1;
 $25 = ((($24)) + 31|0);
 $26 = HEAPU8[$25>>0]|(HEAPU8[$25+1>>0]<<8)|(HEAPU8[$25+2>>0]<<16)|(HEAPU8[$25+3>>0]<<24);
 $27 = (($26) + -1)|0;
 HEAP8[$25>>0]=$27&255;HEAP8[$25+1>>0]=($27>>8)&255;HEAP8[$25+2>>0]=($27>>16)&255;HEAP8[$25+3>>0]=$27>>24;
 $28 = $2;
 $29 = HEAPU8[$28>>0]|(HEAPU8[$28+1>>0]<<8)|(HEAPU8[$28+2>>0]<<16)|(HEAPU8[$28+3>>0]<<24);
 $30 = ($29|0)==(8);
 if ($30) {
  $31 = $3;
  $32 = $2;
  $33 = ((($32)) + 4|0);
  $34 = HEAPU8[$33>>0]|(HEAPU8[$33+1>>0]<<8)|(HEAPU8[$33+2>>0]<<16)|(HEAPU8[$33+3>>0]<<24);
  __mark_lazy_destroy_string($31,$34);
 }
 $35 = $1;
 $36 = ((($35)) + 17|0);
 $37 = $1;
 $38 = $1;
 (__write_on_ref_object($36,$37,$38)|0);
 $39 = $1;
 __invalidate_list_cache($39);
 $0 = 1;
 $43 = $0;
 STACKTOP = sp;return ($43|0);
}
function _isspace($c) {
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($c|0)==(32);
 $1 = (($c) + -9)|0;
 $2 = ($1>>>0)<(5);
 $3 = $0 | $2;
 $4 = $3&1;
 return ($4|0);
}
function _isupper($c) {
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($c) + -65)|0;
 $1 = ($0>>>0)<(26);
 $2 = $1&1;
 return ($2|0);
}
function _tolower($c) {
 $c = $c|0;
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_isupper($c)|0);
 $1 = ($0|0)==(0);
 $2 = $c | 32;
 $$0 = $1 ? $c : $2;
 return ($$0|0);
}
function _strerror($e) {
 $e = $e|0;
 var $$lcssa = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i$03 = 0, $i$03$lcssa = 0, $i$12 = 0, $s$0$lcssa = 0, $s$01 = 0, $s$1 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $i$03 = 0;
 while(1) {
  $1 = (15838 + ($i$03)|0);
  $2 = HEAP8[$1>>0]|0;
  $3 = $2&255;
  $4 = ($3|0)==($e|0);
  if ($4) {
   $i$03$lcssa = $i$03;
   label = 2;
   break;
  }
  $5 = (($i$03) + 1)|0;
  $6 = ($5|0)==(87);
  if ($6) {
   $i$12 = 87;$s$01 = 15926;
   label = 5;
   break;
  } else {
   $i$03 = $5;
  }
 }
 if ((label|0) == 2) {
  $0 = ($i$03$lcssa|0)==(0);
  if ($0) {
   $s$0$lcssa = 15926;
  } else {
   $i$12 = $i$03$lcssa;$s$01 = 15926;
   label = 5;
  }
 }
 if ((label|0) == 5) {
  while(1) {
   label = 0;
   $s$1 = $s$01;
   while(1) {
    $7 = HEAP8[$s$1>>0]|0;
    $8 = ($7<<24>>24)==(0);
    $9 = ((($s$1)) + 1|0);
    if ($8) {
     $$lcssa = $9;
     break;
    } else {
     $s$1 = $9;
    }
   }
   $10 = (($i$12) + -1)|0;
   $11 = ($10|0)==(0);
   if ($11) {
    $s$0$lcssa = $$lcssa;
    break;
   } else {
    $i$12 = $10;$s$01 = $$lcssa;
    label = 5;
   }
  }
 }
 return ($s$0$lcssa|0);
}
function ___errno_location() {
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[756>>2]|0;
 $1 = ($0|0)==(0|0);
 if ($1) {
  $$0 = 816;
 } else {
  $2 = (_pthread_self()|0);
  $3 = ((($2)) + 60|0);
  $4 = HEAP32[$3>>2]|0;
  $$0 = $4;
 }
 return ($$0|0);
}
function ___floatscan($f,$prec,$pok) {
 $f = $f|0;
 $prec = $prec|0;
 $pok = $pok|0;
 var $$$i = 0, $$0 = 0.0, $$0$i27 = 0.0, $$010$i = 0, $$07$i = 0, $$0710$i = 0, $$0711$i = 0, $$09$i = 0, $$1$be$i = 0, $$1$ph$i = 0, $$11$i = 0, $$18$i = 0, $$2$i = 0, $$3$be$i = 0, $$3$lcssa$i = 0, $$3105$i = 0, $$in = 0, $$k$0$i = 0, $$lcssa = 0, $$lcssa256 = 0;
 var $$lcssa256$lcssa = 0, $$lcssa257 = 0, $$lcssa257$lcssa = 0, $$lcssa263 = 0, $$lcssa264 = 0, $$lcssa265 = 0, $$lcssa275 = 0, $$lnz$0$i = 0, $$neg32$i = 0, $$not$i = 0, $$old8 = 0, $$pn$i = 0.0, $$pre$i = 0, $$pre$i17 = 0, $$pre$phi42$iZ2D = 0.0, $$pre41$i = 0.0, $$promoted$i = 0, $$sink$off0$i = 0, $0 = 0, $1 = 0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0.0, $183 = 0.0, $184 = 0.0, $185 = 0.0, $186 = 0, $187 = 0, $188 = 0.0, $189 = 0.0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0;
 var $208 = 0, $209 = 0.0, $21 = 0, $210 = 0.0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0;
 var $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0;
 var $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0.0, $259 = 0.0, $26 = 0, $260 = 0, $261 = 0;
 var $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0.0, $268 = 0.0, $269 = 0.0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0;
 var $280 = 0.0, $281 = 0.0, $282 = 0.0, $283 = 0, $284 = 0, $285 = 0.0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0;
 var $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0.0, $31 = 0, $310 = 0.0, $311 = 0.0, $312 = 0, $313 = 0, $314 = 0, $315 = 0;
 var $316 = 0, $317 = 0.0, $318 = 0.0, $319 = 0.0, $32 = 0, $320 = 0.0, $321 = 0.0, $322 = 0.0, $323 = 0, $324 = 0, $325 = 0.0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0;
 var $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0;
 var $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0;
 var $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0;
 var $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0;
 var $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0;
 var $424 = 0.0, $425 = 0.0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0.0;
 var $442 = 0.0, $443 = 0.0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0.0, $454 = 0.0, $455 = 0.0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0;
 var $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0.0, $466 = 0.0, $467 = 0.0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0;
 var $479 = 0.0, $48 = 0, $480 = 0, $481 = 0.0, $482 = 0.0, $483 = 0, $484 = 0.0, $485 = 0, $486 = 0.0, $487 = 0.0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0.0, $492 = 0.0, $493 = 0, $494 = 0, $495 = 0, $496 = 0;
 var $497 = 0, $498 = 0.0, $499 = 0.0, $5 = 0, $50 = 0.0, $500 = 0.0, $501 = 0, $502 = 0, $503 = 0, $504 = 0.0, $505 = 0.0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0.0, $510 = 0, $511 = 0, $512 = 0, $513 = 0;
 var $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0.0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0;
 var $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0;
 var $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0;
 var $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0;
 var $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0;
 var $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0.0, $62 = 0, $620 = 0, $621 = 0;
 var $622 = 0, $623 = 0, $624 = 0.0, $625 = 0.0, $626 = 0.0, $627 = 0, $628 = 0.0, $629 = 0.0, $63 = 0, $630 = 0.0, $631 = 0.0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0;
 var $640 = 0, $641 = 0, $642 = 0.0, $643 = 0.0, $644 = 0.0, $645 = 0, $646 = 0.0, $647 = 0.0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0.0, $652 = 0.0, $653 = 0.0, $654 = 0.0, $655 = 0, $656 = 0, $657 = 0.0, $658 = 0;
 var $659 = 0.0, $66 = 0, $660 = 0.0, $661 = 0.0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0.0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0.0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0;
 var $677 = 0, $678 = 0.0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0.0, $684 = 0, $685 = 0, $686 = 0.0, $687 = 0.0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0;
 var $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0;
 var $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, $a$0$lcssa151$i = 0, $a$085$i = 0, $a$1$i = 0, $a$1$i$lcssa = 0, $a$2$ph38$i = 0, $a$3$i = 0, $a$3$i$lcssa248 = 0, $a$3$i249 = 0, $a$3$ph$i = 0, $a$3$ph157$i = 0, $a$478$i = 0, $a$5$i = 0, $a$5$i$lcssa = 0, $a$5$i$lcssa$lcssa = 0, $bias$0$i = 0.0, $bias$0$i25 = 0.0, $bits$0$ph = 0, $brmerge$i28 = 0;
 var $c$0 = 0, $c$0$i = 0, $c$1$lcssa = 0, $c$1$ph$i = 0, $c$179 = 0, $c$2 = 0, $c$2$i = 0, $c$2$lcssa$i = 0, $c$377 = 0, $c$4 = 0, $c$5 = 0, $c$6 = 0, $carry$087$i = 0, $carry1$0$i = 0, $carry1$1$i = 0, $carry1$1$i$lcssa = 0, $carry1$1$i$lcssa$lcssa = 0, $carry3$081$i = 0, $cond$i = 0, $d$0$i = 0;
 var $denormal$0$i = 0, $denormal$1$i = 0, $denormal$2$i = 0, $e2$0$i19 = 0, $e2$0$ph$i = 0, $e2$1$i = 0, $e2$1$i246 = 0, $e2$1$ph$i = 0, $e2$1$ph156$i = 0, $e2$2$i = 0, $e2$3$i = 0, $emin$0$ph = 0, $exitcond$i = 0, $frac$0$i = 0.0, $frac$1$i = 0.0, $frac$2$i = 0.0, $gotdig$0$i = 0, $gotdig$0$i$lcssa242 = 0, $gotdig$0$i12 = 0, $gotdig$0$i12$lcssa273 = 0;
 var $gotdig$2$i = 0, $gotdig$2$i$lcssa = 0, $gotdig$2$i13 = 0, $gotdig$3$i = 0, $gotdig$3$lcssa$i = 0, $gotdig$3101$i = 0, $gotdig$3101$i$lcssa = 0, $gotdig$4$i = 0, $gotrad$0$i = 0, $gotrad$0$i$lcssa = 0, $gotrad$0$i14 = 0, $gotrad$1$i = 0, $gotrad$1$lcssa$i = 0, $gotrad$1102$i = 0, $gotrad$2$i = 0, $gottail$0$i = 0, $gottail$1$i = 0, $gottail$2$i = 0, $i$0$lcssa = 0, $i$078 = 0;
 var $i$1 = 0, $i$276 = 0, $i$3 = 0, $i$4 = 0, $i$4$lcssa = 0, $j$0$lcssa$i = 0, $j$0104$i = 0, $j$0104$i$lcssa = 0, $j$067$i = 0, $j$068$i = 0, $j$069$i = 0, $j$2$i = 0, $j$394$i = 0, $k$0$lcssa$i = 0, $k$0103$i = 0, $k$0103$i$lcssa = 0, $k$063$i = 0, $k$064$i = 0, $k$065$i = 0, $k$2$i = 0;
 var $k$3$i = 0, $k$486$i = 0, $k$5$i = 0, $k$5$in$i = 0, $k$5$z$2$i = 0, $k$679$i = 0, $lnz$0$lcssa$i = 0, $lnz$0100$i = 0, $lnz$0100$i$lcssa = 0, $lnz$057$i = 0, $lnz$058$i = 0, $lnz$059$i = 0, $lnz$2$i = 0, $or$cond = 0, $or$cond$i = 0, $or$cond$i16 = 0, $or$cond13$i = 0, $or$cond15$i = 0, $or$cond16$i = 0, $or$cond17$i = 0;
 var $or$cond182$i = 0, $or$cond19$i = 0, $or$cond20$i = 0, $or$cond3$i = 0, $or$cond4$i = 0, $or$cond5 = 0, $or$cond6$i = 0, $or$cond7 = 0, $or$cond8$i = 0, $or$cond9 = 0, $or$cond9$i = 0, $rp$0$lcssa152$i = 0, $rp$084$i = 0, $rp$1$i18 = 0, $rp$1$i18$lcssa = 0, $rp$2$ph36$i = 0, $rp$3$ph$i = 0, $rp$3$ph34$i = 0, $rp$477$i = 0, $rp$5$i = 0;
 var $rp$5$i$lcssa = 0, $rp$5$i$lcssa$lcssa = 0, $scale$0$i = 0.0, $scale$1$i = 0.0, $scale$2$i = 0.0, $sign$0 = 0, $storemerge$i = 0, $sum$i = 0, $x$0$i = 0, $x$0$i$lcssa = 0, $x$1$i = 0, $x$2$i = 0, $x$3$lcssa$i = 0, $x$324$i = 0, $x$4$lcssa$i = 0, $x$419$i = 0, $x$5$i = 0, $x$6$i = 0, $x$i = 0, $y$0$i = 0.0;
 var $y$0$i$lcssa = 0.0, $y$1$i = 0.0, $y$1$i24 = 0.0, $y$2$i = 0.0, $y$2$i26 = 0.0, $y$3$i = 0.0, $y$3$lcssa$i = 0.0, $y$320$i = 0.0, $y$4$i = 0.0, $y$5$i = 0.0, $z$0$i = 0, $z$1$i = 0, $z$1$ph37$i = 0, $z$2$i = 0, $z$3$i = 0, $z$3$i$lcssa = 0, $z$3$i$lcssa$lcssa = 0, $z$4$i = 0, $z$5$ph$i = 0, $z$7$1$i = 0;
 var $z$7$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $x$i = sp;
 switch ($prec|0) {
 case 0:  {
  $bits$0$ph = 24;$emin$0$ph = -149;
  label = 4;
  break;
 }
 case 1:  {
  $bits$0$ph = 53;$emin$0$ph = -1074;
  label = 4;
  break;
 }
 case 2:  {
  $bits$0$ph = 53;$emin$0$ph = -1074;
  label = 4;
  break;
 }
 default: {
  $$0 = 0.0;
 }
 }
 L4: do {
  if ((label|0) == 4) {
   $0 = ((($f)) + 4|0);
   $1 = ((($f)) + 100|0);
   while(1) {
    $2 = HEAP32[$0>>2]|0;
    $3 = HEAP32[$1>>2]|0;
    $4 = ($2>>>0)<($3>>>0);
    if ($4) {
     $5 = ((($2)) + 1|0);
     HEAP32[$0>>2] = $5;
     $6 = HEAP8[$2>>0]|0;
     $7 = $6&255;
     $9 = $7;
    } else {
     $8 = (___shgetc($f)|0);
     $9 = $8;
    }
    $10 = (_isspace($9)|0);
    $11 = ($10|0)==(0);
    if ($11) {
     $$lcssa275 = $9;
     break;
    }
   }
   $12 = ($$lcssa275|0)==(45);
   L13: do {
    switch ($$lcssa275|0) {
    case 43: case 45:  {
     $13 = $12&1;
     $14 = $13 << 1;
     $15 = (1 - ($14))|0;
     $16 = HEAP32[$0>>2]|0;
     $17 = HEAP32[$1>>2]|0;
     $18 = ($16>>>0)<($17>>>0);
     if ($18) {
      $19 = ((($16)) + 1|0);
      HEAP32[$0>>2] = $19;
      $20 = HEAP8[$16>>0]|0;
      $21 = $20&255;
      $c$0 = $21;$sign$0 = $15;
      break L13;
     } else {
      $22 = (___shgetc($f)|0);
      $c$0 = $22;$sign$0 = $15;
      break L13;
     }
     break;
    }
    default: {
     $c$0 = $$lcssa275;$sign$0 = 1;
    }
    }
   } while(0);
   $c$179 = $c$0;$i$078 = 0;
   while(1) {
    $23 = $c$179 | 32;
    $24 = (17730 + ($i$078)|0);
    $25 = HEAP8[$24>>0]|0;
    $26 = $25 << 24 >> 24;
    $27 = ($23|0)==($26|0);
    if (!($27)) {
     $c$1$lcssa = $c$179;$i$0$lcssa = $i$078;
     break;
    }
    $28 = ($i$078>>>0)<(7);
    do {
     if ($28) {
      $29 = HEAP32[$0>>2]|0;
      $30 = HEAP32[$1>>2]|0;
      $31 = ($29>>>0)<($30>>>0);
      if ($31) {
       $32 = ((($29)) + 1|0);
       HEAP32[$0>>2] = $32;
       $33 = HEAP8[$29>>0]|0;
       $34 = $33&255;
       $c$2 = $34;
       break;
      } else {
       $35 = (___shgetc($f)|0);
       $c$2 = $35;
       break;
      }
     } else {
      $c$2 = $c$179;
     }
    } while(0);
    $36 = (($i$078) + 1)|0;
    $37 = ($36>>>0)<(8);
    if ($37) {
     $c$179 = $c$2;$i$078 = $36;
    } else {
     $c$1$lcssa = $c$2;$i$0$lcssa = $36;
     break;
    }
   }
   L29: do {
    switch ($i$0$lcssa|0) {
    case 8:  {
     break;
    }
    case 3:  {
     label = 23;
     break;
    }
    default: {
     $38 = ($i$0$lcssa>>>0)>(3);
     $39 = ($pok|0)!=(0);
     $or$cond5 = $39 & $38;
     if ($or$cond5) {
      $40 = ($i$0$lcssa|0)==(8);
      if ($40) {
       break L29;
      } else {
       label = 23;
       break L29;
      }
     }
     $53 = ($i$0$lcssa|0)==(0);
     L34: do {
      if ($53) {
       $c$377 = $c$1$lcssa;$i$276 = 0;
       while(1) {
        $54 = $c$377 | 32;
        $55 = (20613 + ($i$276)|0);
        $56 = HEAP8[$55>>0]|0;
        $57 = $56 << 24 >> 24;
        $58 = ($54|0)==($57|0);
        if (!($58)) {
         $c$5 = $c$377;$i$3 = $i$276;
         break L34;
        }
        $59 = ($i$276>>>0)<(2);
        do {
         if ($59) {
          $60 = HEAP32[$0>>2]|0;
          $61 = HEAP32[$1>>2]|0;
          $62 = ($60>>>0)<($61>>>0);
          if ($62) {
           $63 = ((($60)) + 1|0);
           HEAP32[$0>>2] = $63;
           $64 = HEAP8[$60>>0]|0;
           $65 = $64&255;
           $c$4 = $65;
           break;
          } else {
           $66 = (___shgetc($f)|0);
           $c$4 = $66;
           break;
          }
         } else {
          $c$4 = $c$377;
         }
        } while(0);
        $67 = (($i$276) + 1)|0;
        $68 = ($67>>>0)<(3);
        if ($68) {
         $c$377 = $c$4;$i$276 = $67;
        } else {
         $c$5 = $c$4;$i$3 = $67;
         break;
        }
       }
      } else {
       $c$5 = $c$1$lcssa;$i$3 = $i$0$lcssa;
      }
     } while(0);
     switch ($i$3|0) {
     case 3:  {
      $69 = HEAP32[$0>>2]|0;
      $70 = HEAP32[$1>>2]|0;
      $71 = ($69>>>0)<($70>>>0);
      if ($71) {
       $72 = ((($69)) + 1|0);
       HEAP32[$0>>2] = $72;
       $73 = HEAP8[$69>>0]|0;
       $74 = $73&255;
       $76 = $74;
      } else {
       $75 = (___shgetc($f)|0);
       $76 = $75;
      }
      $77 = ($76|0)==(40);
      if ($77) {
       $i$4 = 1;
      } else {
       $78 = HEAP32[$1>>2]|0;
       $79 = ($78|0)==(0|0);
       if ($79) {
        $$0 = nan;
        break L4;
       }
       $80 = HEAP32[$0>>2]|0;
       $81 = ((($80)) + -1|0);
       HEAP32[$0>>2] = $81;
       $$0 = nan;
       break L4;
      }
      while(1) {
       $82 = HEAP32[$0>>2]|0;
       $83 = HEAP32[$1>>2]|0;
       $84 = ($82>>>0)<($83>>>0);
       if ($84) {
        $85 = ((($82)) + 1|0);
        HEAP32[$0>>2] = $85;
        $86 = HEAP8[$82>>0]|0;
        $87 = $86&255;
        $90 = $87;
       } else {
        $88 = (___shgetc($f)|0);
        $90 = $88;
       }
       $89 = (($90) + -48)|0;
       $91 = ($89>>>0)<(10);
       $92 = (($90) + -65)|0;
       $93 = ($92>>>0)<(26);
       $or$cond = $91 | $93;
       if (!($or$cond)) {
        $94 = (($90) + -97)|0;
        $95 = ($94>>>0)<(26);
        $96 = ($90|0)==(95);
        $or$cond7 = $96 | $95;
        if (!($or$cond7)) {
         $$lcssa = $90;$i$4$lcssa = $i$4;
         break;
        }
       }
       $108 = (($i$4) + 1)|0;
       $i$4 = $108;
      }
      $97 = ($$lcssa|0)==(41);
      if ($97) {
       $$0 = nan;
       break L4;
      }
      $98 = HEAP32[$1>>2]|0;
      $99 = ($98|0)==(0|0);
      if (!($99)) {
       $100 = HEAP32[$0>>2]|0;
       $101 = ((($100)) + -1|0);
       HEAP32[$0>>2] = $101;
      }
      if (!($39)) {
       $103 = (___errno_location()|0);
       HEAP32[$103>>2] = 22;
       ___shlim($f,0);
       $$0 = 0.0;
       break L4;
      }
      $102 = ($i$4$lcssa|0)==(0);
      if ($102) {
       $$0 = nan;
       break L4;
      } else {
       $$in = $i$4$lcssa;
      }
      while(1) {
       $104 = (($$in) + -1)|0;
       if (!($99)) {
        $105 = HEAP32[$0>>2]|0;
        $106 = ((($105)) + -1|0);
        HEAP32[$0>>2] = $106;
       }
       $107 = ($104|0)==(0);
       if ($107) {
        $$0 = nan;
        break L4;
       } else {
        $$in = $104;
       }
      }
      break;
     }
     case 0:  {
      $114 = ($c$5|0)==(48);
      do {
       if ($114) {
        $115 = HEAP32[$0>>2]|0;
        $116 = HEAP32[$1>>2]|0;
        $117 = ($115>>>0)<($116>>>0);
        if ($117) {
         $118 = ((($115)) + 1|0);
         HEAP32[$0>>2] = $118;
         $119 = HEAP8[$115>>0]|0;
         $120 = $119&255;
         $123 = $120;
        } else {
         $121 = (___shgetc($f)|0);
         $123 = $121;
        }
        $122 = $123 | 32;
        $124 = ($122|0)==(120);
        if (!($124)) {
         $326 = HEAP32[$1>>2]|0;
         $327 = ($326|0)==(0|0);
         if ($327) {
          $c$6 = 48;
          break;
         }
         $328 = HEAP32[$0>>2]|0;
         $329 = ((($328)) + -1|0);
         HEAP32[$0>>2] = $329;
         $c$6 = 48;
         break;
        }
        $125 = HEAP32[$0>>2]|0;
        $126 = HEAP32[$1>>2]|0;
        $127 = ($125>>>0)<($126>>>0);
        if ($127) {
         $128 = ((($125)) + 1|0);
         HEAP32[$0>>2] = $128;
         $129 = HEAP8[$125>>0]|0;
         $130 = $129&255;
         $c$0$i = $130;$gotdig$0$i = 0;
        } else {
         $131 = (___shgetc($f)|0);
         $c$0$i = $131;$gotdig$0$i = 0;
        }
        L94: while(1) {
         switch ($c$0$i|0) {
         case 46:  {
          $gotdig$0$i$lcssa242 = $gotdig$0$i;
          label = 74;
          break L94;
          break;
         }
         case 48:  {
          break;
         }
         default: {
          $168 = 0;$170 = 0;$694 = 0;$695 = 0;$c$2$i = $c$0$i;$gotdig$2$i = $gotdig$0$i;$gotrad$0$i = 0;$gottail$0$i = 0;$scale$0$i = 1.0;$x$0$i = 0;$y$0$i = 0.0;
          break L94;
         }
         }
         $132 = HEAP32[$0>>2]|0;
         $133 = HEAP32[$1>>2]|0;
         $134 = ($132>>>0)<($133>>>0);
         if ($134) {
          $135 = ((($132)) + 1|0);
          HEAP32[$0>>2] = $135;
          $136 = HEAP8[$132>>0]|0;
          $137 = $136&255;
          $c$0$i = $137;$gotdig$0$i = 1;
          continue;
         } else {
          $138 = (___shgetc($f)|0);
          $c$0$i = $138;$gotdig$0$i = 1;
          continue;
         }
        }
        if ((label|0) == 74) {
         $139 = HEAP32[$0>>2]|0;
         $140 = HEAP32[$1>>2]|0;
         $141 = ($139>>>0)<($140>>>0);
         if ($141) {
          $142 = ((($139)) + 1|0);
          HEAP32[$0>>2] = $142;
          $143 = HEAP8[$139>>0]|0;
          $144 = $143&255;
          $c$1$ph$i = $144;
         } else {
          $145 = (___shgetc($f)|0);
          $c$1$ph$i = $145;
         }
         $146 = ($c$1$ph$i|0)==(48);
         if ($146) {
          $154 = 0;$155 = 0;
          while(1) {
           $147 = HEAP32[$0>>2]|0;
           $148 = HEAP32[$1>>2]|0;
           $149 = ($147>>>0)<($148>>>0);
           if ($149) {
            $150 = ((($147)) + 1|0);
            HEAP32[$0>>2] = $150;
            $151 = HEAP8[$147>>0]|0;
            $152 = $151&255;
            $158 = $152;
           } else {
            $153 = (___shgetc($f)|0);
            $158 = $153;
           }
           $156 = (_i64Add(($154|0),($155|0),-1,-1)|0);
           $157 = tempRet0;
           $159 = ($158|0)==(48);
           if ($159) {
            $154 = $156;$155 = $157;
           } else {
            $168 = 0;$170 = 0;$694 = $156;$695 = $157;$c$2$i = $158;$gotdig$2$i = 1;$gotrad$0$i = 1;$gottail$0$i = 0;$scale$0$i = 1.0;$x$0$i = 0;$y$0$i = 0.0;
            break;
           }
          }
         } else {
          $168 = 0;$170 = 0;$694 = 0;$695 = 0;$c$2$i = $c$1$ph$i;$gotdig$2$i = $gotdig$0$i$lcssa242;$gotrad$0$i = 1;$gottail$0$i = 0;$scale$0$i = 1.0;$x$0$i = 0;$y$0$i = 0.0;
         }
        }
        while(1) {
         $160 = (($c$2$i) + -48)|0;
         $161 = ($160>>>0)<(10);
         $$pre$i = $c$2$i | 32;
         if ($161) {
          label = 86;
         } else {
          $162 = (($$pre$i) + -97)|0;
          $163 = ($162>>>0)<(6);
          $164 = ($c$2$i|0)==(46);
          $or$cond6$i = $164 | $163;
          if (!($or$cond6$i)) {
           $212 = $694;$213 = $170;$215 = $695;$216 = $168;$c$2$lcssa$i = $c$2$i;$gotdig$2$i$lcssa = $gotdig$2$i;$gotrad$0$i$lcssa = $gotrad$0$i;$x$0$i$lcssa = $x$0$i;$y$0$i$lcssa = $y$0$i;
           break;
          }
          if ($164) {
           $165 = ($gotrad$0$i|0)==(0);
           if ($165) {
            $696 = $170;$697 = $168;$698 = $170;$699 = $168;$gotdig$3$i = $gotdig$2$i;$gotrad$1$i = 1;$gottail$2$i = $gottail$0$i;$scale$2$i = $scale$0$i;$x$2$i = $x$0$i;$y$2$i = $y$0$i;
           } else {
            $212 = $694;$213 = $170;$215 = $695;$216 = $168;$c$2$lcssa$i = 46;$gotdig$2$i$lcssa = $gotdig$2$i;$gotrad$0$i$lcssa = $gotrad$0$i;$x$0$i$lcssa = $x$0$i;$y$0$i$lcssa = $y$0$i;
            break;
           }
          } else {
           label = 86;
          }
         }
         if ((label|0) == 86) {
          label = 0;
          $166 = ($c$2$i|0)>(57);
          $167 = (($$pre$i) + -87)|0;
          $d$0$i = $166 ? $167 : $160;
          $169 = ($168|0)<(0);
          $171 = ($170>>>0)<(8);
          $172 = ($168|0)==(0);
          $173 = $172 & $171;
          $174 = $169 | $173;
          do {
           if ($174) {
            $175 = $x$0$i << 4;
            $176 = (($d$0$i) + ($175))|0;
            $gottail$1$i = $gottail$0$i;$scale$1$i = $scale$0$i;$x$1$i = $176;$y$1$i = $y$0$i;
           } else {
            $177 = ($168|0)<(0);
            $178 = ($170>>>0)<(14);
            $179 = ($168|0)==(0);
            $180 = $179 & $178;
            $181 = $177 | $180;
            if ($181) {
             $182 = (+($d$0$i|0));
             $183 = $scale$0$i * 0.0625;
             $184 = $183 * $182;
             $185 = $y$0$i + $184;
             $gottail$1$i = $gottail$0$i;$scale$1$i = $183;$x$1$i = $x$0$i;$y$1$i = $185;
             break;
            }
            $186 = ($d$0$i|0)==(0);
            $187 = ($gottail$0$i|0)!=(0);
            $or$cond$i = $187 | $186;
            if ($or$cond$i) {
             $gottail$1$i = $gottail$0$i;$scale$1$i = $scale$0$i;$x$1$i = $x$0$i;$y$1$i = $y$0$i;
            } else {
             $188 = $scale$0$i * 0.5;
             $189 = $y$0$i + $188;
             $gottail$1$i = 1;$scale$1$i = $scale$0$i;$x$1$i = $x$0$i;$y$1$i = $189;
            }
           }
          } while(0);
          $190 = (_i64Add(($170|0),($168|0),1,0)|0);
          $191 = tempRet0;
          $696 = $694;$697 = $695;$698 = $190;$699 = $191;$gotdig$3$i = 1;$gotrad$1$i = $gotrad$0$i;$gottail$2$i = $gottail$1$i;$scale$2$i = $scale$1$i;$x$2$i = $x$1$i;$y$2$i = $y$1$i;
         }
         $192 = HEAP32[$0>>2]|0;
         $193 = HEAP32[$1>>2]|0;
         $194 = ($192>>>0)<($193>>>0);
         if ($194) {
          $195 = ((($192)) + 1|0);
          HEAP32[$0>>2] = $195;
          $196 = HEAP8[$192>>0]|0;
          $197 = $196&255;
          $168 = $699;$170 = $698;$694 = $696;$695 = $697;$c$2$i = $197;$gotdig$2$i = $gotdig$3$i;$gotrad$0$i = $gotrad$1$i;$gottail$0$i = $gottail$2$i;$scale$0$i = $scale$2$i;$x$0$i = $x$2$i;$y$0$i = $y$2$i;
          continue;
         } else {
          $198 = (___shgetc($f)|0);
          $168 = $699;$170 = $698;$694 = $696;$695 = $697;$c$2$i = $198;$gotdig$2$i = $gotdig$3$i;$gotrad$0$i = $gotrad$1$i;$gottail$0$i = $gottail$2$i;$scale$0$i = $scale$2$i;$x$0$i = $x$2$i;$y$0$i = $y$2$i;
          continue;
         }
        }
        $199 = ($gotdig$2$i$lcssa|0)==(0);
        if ($199) {
         $200 = HEAP32[$1>>2]|0;
         $201 = ($200|0)==(0|0);
         if (!($201)) {
          $202 = HEAP32[$0>>2]|0;
          $203 = ((($202)) + -1|0);
          HEAP32[$0>>2] = $203;
         }
         $204 = ($pok|0)==(0);
         if ($204) {
          ___shlim($f,0);
         } else {
          if (!($201)) {
           $205 = HEAP32[$0>>2]|0;
           $206 = ((($205)) + -1|0);
           HEAP32[$0>>2] = $206;
           $207 = ($gotrad$0$i$lcssa|0)==(0);
           if (!($207)) {
            $208 = ((($205)) + -2|0);
            HEAP32[$0>>2] = $208;
           }
          }
         }
         $209 = (+($sign$0|0));
         $210 = $209 * 0.0;
         $$0 = $210;
         break L4;
        }
        $211 = ($gotrad$0$i$lcssa|0)==(0);
        $214 = $211 ? $213 : $212;
        $217 = $211 ? $216 : $215;
        $218 = ($216|0)<(0);
        $219 = ($213>>>0)<(8);
        $220 = ($216|0)==(0);
        $221 = $220 & $219;
        $222 = $218 | $221;
        if ($222) {
         $224 = $213;$225 = $216;$x$324$i = $x$0$i$lcssa;
         while(1) {
          $223 = $x$324$i << 4;
          $226 = (_i64Add(($224|0),($225|0),1,0)|0);
          $227 = tempRet0;
          $228 = ($227|0)<(0);
          $229 = ($226>>>0)<(8);
          $230 = ($227|0)==(0);
          $231 = $230 & $229;
          $232 = $228 | $231;
          if ($232) {
           $224 = $226;$225 = $227;$x$324$i = $223;
          } else {
           $x$3$lcssa$i = $223;
           break;
          }
         }
        } else {
         $x$3$lcssa$i = $x$0$i$lcssa;
        }
        $233 = $c$2$lcssa$i | 32;
        $234 = ($233|0)==(112);
        if ($234) {
         $235 = (_scanexp($f,$pok)|0);
         $236 = tempRet0;
         $237 = ($235|0)==(0);
         $238 = ($236|0)==(-2147483648);
         $239 = $237 & $238;
         if ($239) {
          $240 = ($pok|0)==(0);
          if ($240) {
           ___shlim($f,0);
           $$0 = 0.0;
           break L4;
          }
          $241 = HEAP32[$1>>2]|0;
          $242 = ($241|0)==(0|0);
          if ($242) {
           $253 = 0;$254 = 0;
          } else {
           $243 = HEAP32[$0>>2]|0;
           $244 = ((($243)) + -1|0);
           HEAP32[$0>>2] = $244;
           $253 = 0;$254 = 0;
          }
         } else {
          $253 = $235;$254 = $236;
         }
        } else {
         $245 = HEAP32[$1>>2]|0;
         $246 = ($245|0)==(0|0);
         if ($246) {
          $253 = 0;$254 = 0;
         } else {
          $247 = HEAP32[$0>>2]|0;
          $248 = ((($247)) + -1|0);
          HEAP32[$0>>2] = $248;
          $253 = 0;$254 = 0;
         }
        }
        $249 = (_bitshift64Shl(($214|0),($217|0),2)|0);
        $250 = tempRet0;
        $251 = (_i64Add(($249|0),($250|0),-32,-1)|0);
        $252 = tempRet0;
        $255 = (_i64Add(($251|0),($252|0),($253|0),($254|0))|0);
        $256 = tempRet0;
        $257 = ($x$3$lcssa$i|0)==(0);
        if ($257) {
         $258 = (+($sign$0|0));
         $259 = $258 * 0.0;
         $$0 = $259;
         break L4;
        }
        $260 = (0 - ($emin$0$ph))|0;
        $261 = ($256|0)>(0);
        $262 = ($255>>>0)>($260>>>0);
        $263 = ($256|0)==(0);
        $264 = $263 & $262;
        $265 = $261 | $264;
        if ($265) {
         $266 = (___errno_location()|0);
         HEAP32[$266>>2] = 34;
         $267 = (+($sign$0|0));
         $268 = $267 * 1.7976931348623157E+308;
         $269 = $268 * 1.7976931348623157E+308;
         $$0 = $269;
         break L4;
        }
        $270 = (($emin$0$ph) + -106)|0;
        $271 = ($270|0)<(0);
        $272 = $271 << 31 >> 31;
        $273 = ($256|0)<($272|0);
        $274 = ($255>>>0)<($270>>>0);
        $275 = ($256|0)==($272|0);
        $276 = $275 & $274;
        $277 = $273 | $276;
        if ($277) {
         $279 = (___errno_location()|0);
         HEAP32[$279>>2] = 34;
         $280 = (+($sign$0|0));
         $281 = $280 * 2.2250738585072014E-308;
         $282 = $281 * 2.2250738585072014E-308;
         $$0 = $282;
         break L4;
        }
        $278 = ($x$3$lcssa$i|0)>(-1);
        if ($278) {
         $288 = $255;$289 = $256;$x$419$i = $x$3$lcssa$i;$y$320$i = $y$0$i$lcssa;
         while(1) {
          $283 = !($y$320$i >= 0.5);
          $284 = $x$419$i << 1;
          $285 = $y$320$i + -1.0;
          $286 = $283&1;
          $287 = $286 | $284;
          $x$5$i = $287 ^ 1;
          $$pn$i = $283 ? $y$320$i : $285;
          $y$4$i = $y$320$i + $$pn$i;
          $290 = (_i64Add(($288|0),($289|0),-1,-1)|0);
          $291 = tempRet0;
          $292 = ($287|0)>(-1);
          if ($292) {
           $288 = $290;$289 = $291;$x$419$i = $x$5$i;$y$320$i = $y$4$i;
          } else {
           $297 = $290;$298 = $291;$x$4$lcssa$i = $x$5$i;$y$3$lcssa$i = $y$4$i;
           break;
          }
         }
        } else {
         $297 = $255;$298 = $256;$x$4$lcssa$i = $x$3$lcssa$i;$y$3$lcssa$i = $y$0$i$lcssa;
        }
        $293 = ($emin$0$ph|0)<(0);
        $294 = $293 << 31 >> 31;
        $295 = (_i64Subtract(32,0,($emin$0$ph|0),($294|0))|0);
        $296 = tempRet0;
        $299 = (_i64Add(($297|0),($298|0),($295|0),($296|0))|0);
        $300 = tempRet0;
        $301 = (0)>($300|0);
        $302 = ($bits$0$ph>>>0)>($299>>>0);
        $303 = (0)==($300|0);
        $304 = $303 & $302;
        $305 = $301 | $304;
        if ($305) {
         $306 = ($299|0)<(0);
         if ($306) {
          $$0710$i = 0;
          label = 127;
         } else {
          $$07$i = $299;
          label = 125;
         }
        } else {
         $$07$i = $bits$0$ph;
         label = 125;
        }
        if ((label|0) == 125) {
         $307 = ($$07$i|0)<(53);
         if ($307) {
          $$0710$i = $$07$i;
          label = 127;
         } else {
          $$pre41$i = (+($sign$0|0));
          $$0711$i = $$07$i;$$pre$phi42$iZ2D = $$pre41$i;$bias$0$i = 0.0;
         }
        }
        if ((label|0) == 127) {
         $308 = (84 - ($$0710$i))|0;
         $309 = (+_scalbn(1.0,$308));
         $310 = (+($sign$0|0));
         $311 = (+_copysignl($309,$310));
         $$0711$i = $$0710$i;$$pre$phi42$iZ2D = $310;$bias$0$i = $311;
        }
        $312 = ($$0711$i|0)<(32);
        $313 = $y$3$lcssa$i != 0.0;
        $or$cond4$i = $313 & $312;
        $314 = $x$4$lcssa$i & 1;
        $315 = ($314|0)==(0);
        $or$cond9$i = $315 & $or$cond4$i;
        $316 = $or$cond9$i&1;
        $x$6$i = (($316) + ($x$4$lcssa$i))|0;
        $y$5$i = $or$cond9$i ? 0.0 : $y$3$lcssa$i;
        $317 = (+($x$6$i>>>0));
        $318 = $$pre$phi42$iZ2D * $317;
        $319 = $bias$0$i + $318;
        $320 = $$pre$phi42$iZ2D * $y$5$i;
        $321 = $320 + $319;
        $322 = $321 - $bias$0$i;
        $323 = $322 != 0.0;
        if (!($323)) {
         $324 = (___errno_location()|0);
         HEAP32[$324>>2] = 34;
        }
        $325 = (+_scalbnl($322,$297));
        $$0 = $325;
        break L4;
       } else {
        $c$6 = $c$5;
       }
      } while(0);
      $sum$i = (($emin$0$ph) + ($bits$0$ph))|0;
      $330 = (0 - ($sum$i))|0;
      $$09$i = $c$6;$gotdig$0$i12 = 0;
      L184: while(1) {
       switch ($$09$i|0) {
       case 46:  {
        $gotdig$0$i12$lcssa273 = $gotdig$0$i12;
        label = 138;
        break L184;
        break;
       }
       case 48:  {
        break;
       }
       default: {
        $$2$i = $$09$i;$700 = 0;$701 = 0;$gotdig$2$i13 = $gotdig$0$i12;$gotrad$0$i14 = 0;
        break L184;
       }
       }
       $331 = HEAP32[$0>>2]|0;
       $332 = HEAP32[$1>>2]|0;
       $333 = ($331>>>0)<($332>>>0);
       if ($333) {
        $334 = ((($331)) + 1|0);
        HEAP32[$0>>2] = $334;
        $335 = HEAP8[$331>>0]|0;
        $336 = $335&255;
        $$09$i = $336;$gotdig$0$i12 = 1;
        continue;
       } else {
        $337 = (___shgetc($f)|0);
        $$09$i = $337;$gotdig$0$i12 = 1;
        continue;
       }
      }
      if ((label|0) == 138) {
       $338 = HEAP32[$0>>2]|0;
       $339 = HEAP32[$1>>2]|0;
       $340 = ($338>>>0)<($339>>>0);
       if ($340) {
        $341 = ((($338)) + 1|0);
        HEAP32[$0>>2] = $341;
        $342 = HEAP8[$338>>0]|0;
        $343 = $342&255;
        $$1$ph$i = $343;
       } else {
        $344 = (___shgetc($f)|0);
        $$1$ph$i = $344;
       }
       $345 = ($$1$ph$i|0)==(48);
       if ($345) {
        $346 = 0;$347 = 0;
        while(1) {
         $348 = (_i64Add(($346|0),($347|0),-1,-1)|0);
         $349 = tempRet0;
         $350 = HEAP32[$0>>2]|0;
         $351 = HEAP32[$1>>2]|0;
         $352 = ($350>>>0)<($351>>>0);
         if ($352) {
          $353 = ((($350)) + 1|0);
          HEAP32[$0>>2] = $353;
          $354 = HEAP8[$350>>0]|0;
          $355 = $354&255;
          $$1$be$i = $355;
         } else {
          $356 = (___shgetc($f)|0);
          $$1$be$i = $356;
         }
         $357 = ($$1$be$i|0)==(48);
         if ($357) {
          $346 = $348;$347 = $349;
         } else {
          $$2$i = $$1$be$i;$700 = $348;$701 = $349;$gotdig$2$i13 = 1;$gotrad$0$i14 = 1;
          break;
         }
        }
       } else {
        $$2$i = $$1$ph$i;$700 = 0;$701 = 0;$gotdig$2$i13 = $gotdig$0$i12$lcssa273;$gotrad$0$i14 = 1;
       }
      }
      HEAP32[$x$i>>2] = 0;
      $358 = (($$2$i) + -48)|0;
      $359 = ($358>>>0)<(10);
      $360 = ($$2$i|0)==(46);
      $361 = $360 | $359;
      L203: do {
       if ($361) {
        $362 = ((($x$i)) + 496|0);
        $$3105$i = $$2$i;$365 = 0;$366 = 0;$702 = $360;$703 = $358;$704 = $700;$705 = $701;$gotdig$3101$i = $gotdig$2$i13;$gotrad$1102$i = $gotrad$0$i14;$j$0104$i = 0;$k$0103$i = 0;$lnz$0100$i = 0;
        L205: while(1) {
         do {
          if ($702) {
           $cond$i = ($gotrad$1102$i|0)==(0);
           if ($cond$i) {
            $706 = $365;$707 = $366;$708 = $365;$709 = $366;$gotdig$4$i = $gotdig$3101$i;$gotrad$2$i = 1;$j$2$i = $j$0104$i;$k$2$i = $k$0103$i;$lnz$2$i = $lnz$0100$i;
           } else {
            $710 = $704;$711 = $705;$712 = $365;$713 = $366;$gotdig$3101$i$lcssa = $gotdig$3101$i;$j$0104$i$lcssa = $j$0104$i;$k$0103$i$lcssa = $k$0103$i;$lnz$0100$i$lcssa = $lnz$0100$i;
            break L205;
           }
          } else {
           $364 = ($k$0103$i|0)<(125);
           $367 = (_i64Add(($365|0),($366|0),1,0)|0);
           $368 = tempRet0;
           $369 = ($$3105$i|0)!=(48);
           if (!($364)) {
            if (!($369)) {
             $706 = $704;$707 = $705;$708 = $367;$709 = $368;$gotdig$4$i = $gotdig$3101$i;$gotrad$2$i = $gotrad$1102$i;$j$2$i = $j$0104$i;$k$2$i = $k$0103$i;$lnz$2$i = $lnz$0100$i;
             break;
            }
            $379 = HEAP32[$362>>2]|0;
            $380 = $379 | 1;
            HEAP32[$362>>2] = $380;
            $706 = $704;$707 = $705;$708 = $367;$709 = $368;$gotdig$4$i = $gotdig$3101$i;$gotrad$2$i = $gotrad$1102$i;$j$2$i = $j$0104$i;$k$2$i = $k$0103$i;$lnz$2$i = $lnz$0100$i;
            break;
           }
           $$lnz$0$i = $369 ? $367 : $lnz$0100$i;
           $370 = ($j$0104$i|0)==(0);
           $371 = (($x$i) + ($k$0103$i<<2)|0);
           if ($370) {
            $storemerge$i = $703;
           } else {
            $372 = HEAP32[$371>>2]|0;
            $373 = ($372*10)|0;
            $374 = (($$3105$i) + -48)|0;
            $375 = (($374) + ($373))|0;
            $storemerge$i = $375;
           }
           HEAP32[$371>>2] = $storemerge$i;
           $376 = (($j$0104$i) + 1)|0;
           $377 = ($376|0)==(9);
           $378 = $377&1;
           $$k$0$i = (($378) + ($k$0103$i))|0;
           $$11$i = $377 ? 0 : $376;
           $706 = $704;$707 = $705;$708 = $367;$709 = $368;$gotdig$4$i = 1;$gotrad$2$i = $gotrad$1102$i;$j$2$i = $$11$i;$k$2$i = $$k$0$i;$lnz$2$i = $$lnz$0$i;
          }
         } while(0);
         $381 = HEAP32[$0>>2]|0;
         $382 = HEAP32[$1>>2]|0;
         $383 = ($381>>>0)<($382>>>0);
         if ($383) {
          $384 = ((($381)) + 1|0);
          HEAP32[$0>>2] = $384;
          $385 = HEAP8[$381>>0]|0;
          $386 = $385&255;
          $$3$be$i = $386;
         } else {
          $387 = (___shgetc($f)|0);
          $$3$be$i = $387;
         }
         $388 = (($$3$be$i) + -48)|0;
         $389 = ($388>>>0)<(10);
         $390 = ($$3$be$i|0)==(46);
         $391 = $390 | $389;
         if ($391) {
          $$3105$i = $$3$be$i;$365 = $708;$366 = $709;$702 = $390;$703 = $388;$704 = $706;$705 = $707;$gotdig$3101$i = $gotdig$4$i;$gotrad$1102$i = $gotrad$2$i;$j$0104$i = $j$2$i;$k$0103$i = $k$2$i;$lnz$0100$i = $lnz$2$i;
         } else {
          $$3$lcssa$i = $$3$be$i;$393 = $706;$394 = $708;$396 = $707;$397 = $709;$gotdig$3$lcssa$i = $gotdig$4$i;$gotrad$1$lcssa$i = $gotrad$2$i;$j$0$lcssa$i = $j$2$i;$k$0$lcssa$i = $k$2$i;$lnz$0$lcssa$i = $lnz$2$i;
          label = 161;
          break L203;
         }
        }
        $363 = ($gotdig$3101$i$lcssa|0)!=(0);
        $714 = $712;$715 = $713;$716 = $710;$717 = $711;$718 = $363;$j$069$i = $j$0104$i$lcssa;$k$065$i = $k$0103$i$lcssa;$lnz$059$i = $lnz$0100$i$lcssa;
        label = 169;
       } else {
        $$3$lcssa$i = $$2$i;$393 = $700;$394 = 0;$396 = $701;$397 = 0;$gotdig$3$lcssa$i = $gotdig$2$i13;$gotrad$1$lcssa$i = $gotrad$0$i14;$j$0$lcssa$i = 0;$k$0$lcssa$i = 0;$lnz$0$lcssa$i = 0;
        label = 161;
       }
      } while(0);
      do {
       if ((label|0) == 161) {
        $392 = ($gotrad$1$lcssa$i|0)==(0);
        $395 = $392 ? $394 : $393;
        $398 = $392 ? $397 : $396;
        $399 = ($gotdig$3$lcssa$i|0)!=(0);
        $400 = $$3$lcssa$i | 32;
        $401 = ($400|0)==(101);
        $or$cond13$i = $401 & $399;
        if (!($or$cond13$i)) {
         $416 = ($$3$lcssa$i|0)>(-1);
         if ($416) {
          $714 = $394;$715 = $397;$716 = $395;$717 = $398;$718 = $399;$j$069$i = $j$0$lcssa$i;$k$065$i = $k$0$lcssa$i;$lnz$059$i = $lnz$0$lcssa$i;
          label = 169;
          break;
         } else {
          $719 = $394;$720 = $397;$721 = $399;$722 = $395;$723 = $398;$j$068$i = $j$0$lcssa$i;$k$064$i = $k$0$lcssa$i;$lnz$058$i = $lnz$0$lcssa$i;
          label = 171;
          break;
         }
        }
        $402 = (_scanexp($f,$pok)|0);
        $403 = tempRet0;
        $404 = ($402|0)==(0);
        $405 = ($403|0)==(-2147483648);
        $406 = $404 & $405;
        if ($406) {
         $407 = ($pok|0)==(0);
         if ($407) {
          ___shlim($f,0);
          $$0$i27 = 0.0;
          break;
         }
         $408 = HEAP32[$1>>2]|0;
         $409 = ($408|0)==(0|0);
         if ($409) {
          $412 = 0;$413 = 0;
         } else {
          $410 = HEAP32[$0>>2]|0;
          $411 = ((($410)) + -1|0);
          HEAP32[$0>>2] = $411;
          $412 = 0;$413 = 0;
         }
        } else {
         $412 = $402;$413 = $403;
        }
        $414 = (_i64Add(($412|0),($413|0),($395|0),($398|0))|0);
        $415 = tempRet0;
        $426 = $414;$428 = $394;$429 = $415;$431 = $397;$j$067$i = $j$0$lcssa$i;$k$063$i = $k$0$lcssa$i;$lnz$057$i = $lnz$0$lcssa$i;
        label = 173;
       }
      } while(0);
      if ((label|0) == 169) {
       $417 = HEAP32[$1>>2]|0;
       $418 = ($417|0)==(0|0);
       if ($418) {
        $719 = $714;$720 = $715;$721 = $718;$722 = $716;$723 = $717;$j$068$i = $j$069$i;$k$064$i = $k$065$i;$lnz$058$i = $lnz$059$i;
        label = 171;
       } else {
        $419 = HEAP32[$0>>2]|0;
        $420 = ((($419)) + -1|0);
        HEAP32[$0>>2] = $420;
        if ($718) {
         $426 = $716;$428 = $714;$429 = $717;$431 = $715;$j$067$i = $j$069$i;$k$063$i = $k$065$i;$lnz$057$i = $lnz$059$i;
         label = 173;
        } else {
         label = 172;
        }
       }
      }
      if ((label|0) == 171) {
       if ($721) {
        $426 = $722;$428 = $719;$429 = $723;$431 = $720;$j$067$i = $j$068$i;$k$063$i = $k$064$i;$lnz$057$i = $lnz$058$i;
        label = 173;
       } else {
        label = 172;
       }
      }
      do {
       if ((label|0) == 172) {
        $421 = (___errno_location()|0);
        HEAP32[$421>>2] = 22;
        ___shlim($f,0);
        $$0$i27 = 0.0;
       }
       else if ((label|0) == 173) {
        $422 = HEAP32[$x$i>>2]|0;
        $423 = ($422|0)==(0);
        if ($423) {
         $424 = (+($sign$0|0));
         $425 = $424 * 0.0;
         $$0$i27 = $425;
         break;
        }
        $427 = ($426|0)==($428|0);
        $430 = ($429|0)==($431|0);
        $432 = $427 & $430;
        $433 = ($431|0)<(0);
        $434 = ($428>>>0)<(10);
        $435 = ($431|0)==(0);
        $436 = $435 & $434;
        $437 = $433 | $436;
        $or$cond$i16 = $437 & $432;
        if ($or$cond$i16) {
         $438 = ($bits$0$ph>>>0)>(30);
         $439 = $422 >>> $bits$0$ph;
         $440 = ($439|0)==(0);
         $or$cond15$i = $438 | $440;
         if ($or$cond15$i) {
          $441 = (+($sign$0|0));
          $442 = (+($422>>>0));
          $443 = $441 * $442;
          $$0$i27 = $443;
          break;
         }
        }
        $444 = (($emin$0$ph|0) / -2)&-1;
        $445 = ($444|0)<(0);
        $446 = $445 << 31 >> 31;
        $447 = ($429|0)>($446|0);
        $448 = ($426>>>0)>($444>>>0);
        $449 = ($429|0)==($446|0);
        $450 = $449 & $448;
        $451 = $447 | $450;
        if ($451) {
         $452 = (___errno_location()|0);
         HEAP32[$452>>2] = 34;
         $453 = (+($sign$0|0));
         $454 = $453 * 1.7976931348623157E+308;
         $455 = $454 * 1.7976931348623157E+308;
         $$0$i27 = $455;
         break;
        }
        $456 = (($emin$0$ph) + -106)|0;
        $457 = ($456|0)<(0);
        $458 = $457 << 31 >> 31;
        $459 = ($429|0)<($458|0);
        $460 = ($426>>>0)<($456>>>0);
        $461 = ($429|0)==($458|0);
        $462 = $461 & $460;
        $463 = $459 | $462;
        if ($463) {
         $464 = (___errno_location()|0);
         HEAP32[$464>>2] = 34;
         $465 = (+($sign$0|0));
         $466 = $465 * 2.2250738585072014E-308;
         $467 = $466 * 2.2250738585072014E-308;
         $$0$i27 = $467;
         break;
        }
        $468 = ($j$067$i|0)==(0);
        if ($468) {
         $k$3$i = $k$063$i;
        } else {
         $469 = ($j$067$i|0)<(9);
         if ($469) {
          $470 = (($x$i) + ($k$063$i<<2)|0);
          $$promoted$i = HEAP32[$470>>2]|0;
          $472 = $$promoted$i;$j$394$i = $j$067$i;
          while(1) {
           $471 = ($472*10)|0;
           $473 = (($j$394$i) + 1)|0;
           $exitcond$i = ($473|0)==(9);
           if ($exitcond$i) {
            $$lcssa265 = $471;
            break;
           } else {
            $472 = $471;$j$394$i = $473;
           }
          }
          HEAP32[$470>>2] = $$lcssa265;
         }
         $474 = (($k$063$i) + 1)|0;
         $k$3$i = $474;
        }
        $475 = ($lnz$057$i|0)<(9);
        if ($475) {
         $476 = ($lnz$057$i|0)<=($426|0);
         $477 = ($426|0)<(18);
         $or$cond3$i = $476 & $477;
         if ($or$cond3$i) {
          $478 = ($426|0)==(9);
          if ($478) {
           $479 = (+($sign$0|0));
           $480 = HEAP32[$x$i>>2]|0;
           $481 = (+($480>>>0));
           $482 = $479 * $481;
           $$0$i27 = $482;
           break;
          }
          $483 = ($426|0)<(9);
          if ($483) {
           $484 = (+($sign$0|0));
           $485 = HEAP32[$x$i>>2]|0;
           $486 = (+($485>>>0));
           $487 = $484 * $486;
           $488 = (8 - ($426))|0;
           $489 = (820 + ($488<<2)|0);
           $490 = HEAP32[$489>>2]|0;
           $491 = (+($490|0));
           $492 = $487 / $491;
           $$0$i27 = $492;
           break;
          }
          $$neg32$i = (($bits$0$ph) + 27)|0;
          $493 = Math_imul($426, -3)|0;
          $494 = (($$neg32$i) + ($493))|0;
          $495 = ($494|0)>(30);
          $$pre$i17 = HEAP32[$x$i>>2]|0;
          $496 = $$pre$i17 >>> $494;
          $497 = ($496|0)==(0);
          $or$cond182$i = $495 | $497;
          if ($or$cond182$i) {
           $498 = (+($sign$0|0));
           $499 = (+($$pre$i17>>>0));
           $500 = $498 * $499;
           $501 = (($426) + -10)|0;
           $502 = (820 + ($501<<2)|0);
           $503 = HEAP32[$502>>2]|0;
           $504 = (+($503|0));
           $505 = $500 * $504;
           $$0$i27 = $505;
           break;
          }
         }
        }
        $506 = (($426|0) % 9)&-1;
        $507 = ($506|0)==(0);
        if ($507) {
         $a$2$ph38$i = 0;$e2$0$ph$i = 0;$rp$2$ph36$i = $426;$z$1$ph37$i = $k$3$i;
        } else {
         $508 = ($426|0)>(-1);
         $509 = (($506) + 9)|0;
         $510 = $508 ? $506 : $509;
         $511 = (8 - ($510))|0;
         $512 = (820 + ($511<<2)|0);
         $513 = HEAP32[$512>>2]|0;
         $514 = ($k$3$i|0)==(0);
         if ($514) {
          $a$0$lcssa151$i = 0;$rp$0$lcssa152$i = $426;$z$0$i = 0;
         } else {
          $515 = (1000000000 / ($513|0))&-1;
          $a$085$i = 0;$carry$087$i = 0;$k$486$i = 0;$rp$084$i = $426;
          while(1) {
           $516 = (($x$i) + ($k$486$i<<2)|0);
           $517 = HEAP32[$516>>2]|0;
           $518 = (($517>>>0) % ($513>>>0))&-1;
           $519 = (($517>>>0) / ($513>>>0))&-1;
           $520 = (($519) + ($carry$087$i))|0;
           HEAP32[$516>>2] = $520;
           $521 = Math_imul($518, $515)|0;
           $522 = ($k$486$i|0)==($a$085$i|0);
           $523 = ($520|0)==(0);
           $or$cond16$i = $522 & $523;
           $524 = (($k$486$i) + 1)|0;
           $525 = $524 & 127;
           $526 = (($rp$084$i) + -9)|0;
           $rp$1$i18 = $or$cond16$i ? $526 : $rp$084$i;
           $a$1$i = $or$cond16$i ? $525 : $a$085$i;
           $527 = ($524|0)==($k$3$i|0);
           if ($527) {
            $$lcssa264 = $521;$a$1$i$lcssa = $a$1$i;$rp$1$i18$lcssa = $rp$1$i18;
            break;
           } else {
            $a$085$i = $a$1$i;$carry$087$i = $521;$k$486$i = $524;$rp$084$i = $rp$1$i18;
           }
          }
          $528 = ($$lcssa264|0)==(0);
          if ($528) {
           $a$0$lcssa151$i = $a$1$i$lcssa;$rp$0$lcssa152$i = $rp$1$i18$lcssa;$z$0$i = $k$3$i;
          } else {
           $529 = (($k$3$i) + 1)|0;
           $530 = (($x$i) + ($k$3$i<<2)|0);
           HEAP32[$530>>2] = $$lcssa264;
           $a$0$lcssa151$i = $a$1$i$lcssa;$rp$0$lcssa152$i = $rp$1$i18$lcssa;$z$0$i = $529;
          }
         }
         $531 = (9 - ($510))|0;
         $532 = (($531) + ($rp$0$lcssa152$i))|0;
         $a$2$ph38$i = $a$0$lcssa151$i;$e2$0$ph$i = 0;$rp$2$ph36$i = $532;$z$1$ph37$i = $z$0$i;
        }
        L284: while(1) {
         $533 = ($rp$2$ph36$i|0)<(18);
         $534 = ($rp$2$ph36$i|0)==(18);
         $535 = (($x$i) + ($a$2$ph38$i<<2)|0);
         $e2$0$i19 = $e2$0$ph$i;$z$1$i = $z$1$ph37$i;
         while(1) {
          if (!($533)) {
           if (!($534)) {
            $a$3$ph$i = $a$2$ph38$i;$e2$1$ph$i = $e2$0$i19;$rp$3$ph34$i = $rp$2$ph36$i;$z$5$ph$i = $z$1$i;
            break L284;
           }
           $536 = HEAP32[$535>>2]|0;
           $537 = ($536>>>0)<(9007199);
           if (!($537)) {
            $a$3$ph$i = $a$2$ph38$i;$e2$1$ph$i = $e2$0$i19;$rp$3$ph34$i = 18;$z$5$ph$i = $z$1$i;
            break L284;
           }
          }
          $538 = (($z$1$i) + 127)|0;
          $carry1$0$i = 0;$k$5$in$i = $538;$z$2$i = $z$1$i;
          while(1) {
           $k$5$i = $k$5$in$i & 127;
           $539 = (($x$i) + ($k$5$i<<2)|0);
           $540 = HEAP32[$539>>2]|0;
           $541 = (_bitshift64Shl(($540|0),0,29)|0);
           $542 = tempRet0;
           $543 = (_i64Add(($541|0),($542|0),($carry1$0$i|0),0)|0);
           $544 = tempRet0;
           $545 = ($544>>>0)>(0);
           $546 = ($543>>>0)>(1000000000);
           $547 = ($544|0)==(0);
           $548 = $547 & $546;
           $549 = $545 | $548;
           if ($549) {
            $550 = (___udivdi3(($543|0),($544|0),1000000000,0)|0);
            $551 = tempRet0;
            $552 = (___uremdi3(($543|0),($544|0),1000000000,0)|0);
            $553 = tempRet0;
            $$sink$off0$i = $552;$carry1$1$i = $550;
           } else {
            $$sink$off0$i = $543;$carry1$1$i = 0;
           }
           HEAP32[$539>>2] = $$sink$off0$i;
           $554 = (($z$2$i) + 127)|0;
           $555 = $554 & 127;
           $556 = ($k$5$i|0)!=($555|0);
           $557 = ($k$5$i|0)==($a$2$ph38$i|0);
           $or$cond17$i = $556 | $557;
           $558 = ($$sink$off0$i|0)==(0);
           $k$5$z$2$i = $558 ? $k$5$i : $z$2$i;
           $z$3$i = $or$cond17$i ? $z$2$i : $k$5$z$2$i;
           $559 = (($k$5$i) + -1)|0;
           if ($557) {
            $carry1$1$i$lcssa = $carry1$1$i;$z$3$i$lcssa = $z$3$i;
            break;
           } else {
            $carry1$0$i = $carry1$1$i;$k$5$in$i = $559;$z$2$i = $z$3$i;
           }
          }
          $560 = (($e2$0$i19) + -29)|0;
          $561 = ($carry1$1$i$lcssa|0)==(0);
          if ($561) {
           $e2$0$i19 = $560;$z$1$i = $z$3$i$lcssa;
          } else {
           $$lcssa263 = $560;$carry1$1$i$lcssa$lcssa = $carry1$1$i$lcssa;$z$3$i$lcssa$lcssa = $z$3$i$lcssa;
           break;
          }
         }
         $562 = (($rp$2$ph36$i) + 9)|0;
         $563 = (($a$2$ph38$i) + 127)|0;
         $564 = $563 & 127;
         $565 = ($564|0)==($z$3$i$lcssa$lcssa|0);
         if ($565) {
          $566 = (($z$3$i$lcssa$lcssa) + 127)|0;
          $567 = $566 & 127;
          $568 = (($x$i) + ($567<<2)|0);
          $569 = HEAP32[$568>>2]|0;
          $570 = (($z$3$i$lcssa$lcssa) + 126)|0;
          $571 = $570 & 127;
          $572 = (($x$i) + ($571<<2)|0);
          $573 = HEAP32[$572>>2]|0;
          $574 = $573 | $569;
          HEAP32[$572>>2] = $574;
          $z$4$i = $567;
         } else {
          $z$4$i = $z$3$i$lcssa$lcssa;
         }
         $575 = (($x$i) + ($564<<2)|0);
         HEAP32[$575>>2] = $carry1$1$i$lcssa$lcssa;
         $a$2$ph38$i = $564;$e2$0$ph$i = $$lcssa263;$rp$2$ph36$i = $562;$z$1$ph37$i = $z$4$i;
        }
        L302: while(1) {
         $606 = (($z$5$ph$i) + 1)|0;
         $603 = $606 & 127;
         $607 = (($z$5$ph$i) + 127)|0;
         $608 = $607 & 127;
         $609 = (($x$i) + ($608<<2)|0);
         $a$3$ph157$i = $a$3$ph$i;$e2$1$ph156$i = $e2$1$ph$i;$rp$3$ph$i = $rp$3$ph34$i;
         while(1) {
          $610 = ($rp$3$ph$i|0)==(18);
          $611 = ($rp$3$ph$i|0)>(27);
          $$18$i = $611 ? 9 : 1;
          $$not$i = $610 ^ 1;
          $a$3$i = $a$3$ph157$i;$e2$1$i = $e2$1$ph156$i;
          while(1) {
           $576 = $a$3$i & 127;
           $577 = ($576|0)==($z$5$ph$i|0);
           do {
            if ($577) {
             label = 219;
            } else {
             $578 = (($x$i) + ($576<<2)|0);
             $579 = HEAP32[$578>>2]|0;
             $580 = ($579>>>0)<(9007199);
             if ($580) {
              label = 219;
              break;
             }
             $581 = ($579>>>0)>(9007199);
             if ($581) {
              break;
             }
             $582 = (($a$3$i) + 1)|0;
             $583 = $582 & 127;
             $584 = ($583|0)==($z$5$ph$i|0);
             if ($584) {
              label = 219;
              break;
             }
             $690 = (($x$i) + ($583<<2)|0);
             $691 = HEAP32[$690>>2]|0;
             $692 = ($691>>>0)<(254740991);
             if ($692) {
              label = 219;
              break;
             }
             $693 = ($691>>>0)>(254740991);
             $brmerge$i28 = $693 | $$not$i;
             if (!($brmerge$i28)) {
              $617 = $576;$a$3$i249 = $a$3$i;$e2$1$i246 = $e2$1$i;$z$7$i = $z$5$ph$i;
              break L302;
             }
            }
           } while(0);
           if ((label|0) == 219) {
            label = 0;
            if ($610) {
             label = 220;
             break L302;
            }
           }
           $585 = (($e2$1$i) + ($$18$i))|0;
           $586 = ($a$3$i|0)==($z$5$ph$i|0);
           if ($586) {
            $a$3$i = $z$5$ph$i;$e2$1$i = $585;
           } else {
            $$lcssa256 = $585;$a$3$i$lcssa248 = $a$3$i;
            break;
           }
          }
          $587 = 1 << $$18$i;
          $588 = (($587) + -1)|0;
          $589 = 1000000000 >>> $$18$i;
          $a$478$i = $a$3$i$lcssa248;$carry3$081$i = 0;$k$679$i = $a$3$i$lcssa248;$rp$477$i = $rp$3$ph$i;
          while(1) {
           $590 = (($x$i) + ($k$679$i<<2)|0);
           $591 = HEAP32[$590>>2]|0;
           $592 = $591 & $588;
           $593 = $591 >>> $$18$i;
           $594 = (($593) + ($carry3$081$i))|0;
           HEAP32[$590>>2] = $594;
           $595 = Math_imul($592, $589)|0;
           $596 = ($k$679$i|0)==($a$478$i|0);
           $597 = ($594|0)==(0);
           $or$cond19$i = $596 & $597;
           $598 = (($k$679$i) + 1)|0;
           $599 = $598 & 127;
           $600 = (($rp$477$i) + -9)|0;
           $rp$5$i = $or$cond19$i ? $600 : $rp$477$i;
           $a$5$i = $or$cond19$i ? $599 : $a$478$i;
           $601 = ($599|0)==($z$5$ph$i|0);
           if ($601) {
            $$lcssa257 = $595;$a$5$i$lcssa = $a$5$i;$rp$5$i$lcssa = $rp$5$i;
            break;
           } else {
            $a$478$i = $a$5$i;$carry3$081$i = $595;$k$679$i = $599;$rp$477$i = $rp$5$i;
           }
          }
          $602 = ($$lcssa257|0)==(0);
          if ($602) {
           $a$3$ph157$i = $a$5$i$lcssa;$e2$1$ph156$i = $$lcssa256;$rp$3$ph$i = $rp$5$i$lcssa;
           continue;
          }
          $604 = ($603|0)==($a$5$i$lcssa|0);
          if (!($604)) {
           $$lcssa256$lcssa = $$lcssa256;$$lcssa257$lcssa = $$lcssa257;$a$5$i$lcssa$lcssa = $a$5$i$lcssa;$rp$5$i$lcssa$lcssa = $rp$5$i$lcssa;
           break;
          }
          $612 = HEAP32[$609>>2]|0;
          $613 = $612 | 1;
          HEAP32[$609>>2] = $613;
          $a$3$ph157$i = $a$5$i$lcssa;$e2$1$ph156$i = $$lcssa256;$rp$3$ph$i = $rp$5$i$lcssa;
         }
         $605 = (($x$i) + ($z$5$ph$i<<2)|0);
         HEAP32[$605>>2] = $$lcssa257$lcssa;
         $a$3$ph$i = $a$5$i$lcssa$lcssa;$e2$1$ph$i = $$lcssa256$lcssa;$rp$3$ph34$i = $rp$5$i$lcssa$lcssa;$z$5$ph$i = $603;
        }
        if ((label|0) == 220) {
         if ($577) {
          $614 = (($603) + -1)|0;
          $615 = (($x$i) + ($614<<2)|0);
          HEAP32[$615>>2] = 0;
          $617 = $z$5$ph$i;$a$3$i249 = $a$3$i;$e2$1$i246 = $e2$1$i;$z$7$i = $603;
         } else {
          $617 = $576;$a$3$i249 = $a$3$i;$e2$1$i246 = $e2$1$i;$z$7$i = $z$5$ph$i;
         }
        }
        $616 = (($x$i) + ($617<<2)|0);
        $618 = HEAP32[$616>>2]|0;
        $619 = (+($618>>>0));
        $620 = (($a$3$i249) + 1)|0;
        $621 = $620 & 127;
        $622 = ($621|0)==($z$7$i|0);
        if ($622) {
         $679 = (($a$3$i249) + 2)|0;
         $680 = $679 & 127;
         $681 = (($680) + -1)|0;
         $682 = (($x$i) + ($681<<2)|0);
         HEAP32[$682>>2] = 0;
         $z$7$1$i = $680;
        } else {
         $z$7$1$i = $z$7$i;
        }
        $683 = $619 * 1.0E+9;
        $684 = (($x$i) + ($621<<2)|0);
        $685 = HEAP32[$684>>2]|0;
        $686 = (+($685>>>0));
        $687 = $683 + $686;
        $643 = (+($sign$0|0));
        $625 = $643 * $687;
        $663 = (($e2$1$i246) + 53)|0;
        $669 = (($663) - ($emin$0$ph))|0;
        $670 = ($669|0)<($bits$0$ph|0);
        $688 = ($669|0)<(0);
        $$$i = $688 ? 0 : $669;
        $denormal$0$i = $670&1;
        $$010$i = $670 ? $$$i : $bits$0$ph;
        $689 = ($$010$i|0)<(53);
        if ($689) {
         $623 = (105 - ($$010$i))|0;
         $624 = (+_scalbn(1.0,$623));
         $626 = (+_copysignl($624,$625));
         $627 = (53 - ($$010$i))|0;
         $628 = (+_scalbn(1.0,$627));
         $629 = (+_fmodl($625,$628));
         $630 = $625 - $629;
         $631 = $626 + $630;
         $bias$0$i25 = $626;$frac$0$i = $629;$y$1$i24 = $631;
        } else {
         $bias$0$i25 = 0.0;$frac$0$i = 0.0;$y$1$i24 = $625;
        }
        $632 = (($a$3$i249) + 2)|0;
        $633 = $632 & 127;
        $634 = ($633|0)==($z$7$1$i|0);
        do {
         if ($634) {
          $frac$2$i = $frac$0$i;
         } else {
          $635 = (($x$i) + ($633<<2)|0);
          $636 = HEAP32[$635>>2]|0;
          $637 = ($636>>>0)<(500000000);
          do {
           if ($637) {
            $638 = ($636|0)==(0);
            if ($638) {
             $639 = (($a$3$i249) + 3)|0;
             $640 = $639 & 127;
             $641 = ($640|0)==($z$7$1$i|0);
             if ($641) {
              $frac$1$i = $frac$0$i;
              break;
             }
            }
            $642 = $643 * 0.25;
            $644 = $642 + $frac$0$i;
            $frac$1$i = $644;
           } else {
            $645 = ($636>>>0)>(500000000);
            if ($645) {
             $646 = $643 * 0.75;
             $647 = $646 + $frac$0$i;
             $frac$1$i = $647;
             break;
            }
            $648 = (($a$3$i249) + 3)|0;
            $649 = $648 & 127;
            $650 = ($649|0)==($z$7$1$i|0);
            if ($650) {
             $651 = $643 * 0.5;
             $652 = $651 + $frac$0$i;
             $frac$1$i = $652;
             break;
            } else {
             $653 = $643 * 0.75;
             $654 = $653 + $frac$0$i;
             $frac$1$i = $654;
             break;
            }
           }
          } while(0);
          $655 = (53 - ($$010$i))|0;
          $656 = ($655|0)>(1);
          if (!($656)) {
           $frac$2$i = $frac$1$i;
           break;
          }
          $657 = (+_fmodl($frac$1$i,1.0));
          $658 = $657 != 0.0;
          if ($658) {
           $frac$2$i = $frac$1$i;
           break;
          }
          $659 = $frac$1$i + 1.0;
          $frac$2$i = $659;
         }
        } while(0);
        $660 = $y$1$i24 + $frac$2$i;
        $661 = $660 - $bias$0$i25;
        $662 = $663 & 2147483647;
        $664 = (-2 - ($sum$i))|0;
        $665 = ($662|0)>($664|0);
        do {
         if ($665) {
          $666 = (+Math_abs((+$661)));
          $667 = !($666 >= 9007199254740992.0);
          if ($667) {
           $denormal$2$i = $denormal$0$i;$e2$2$i = $e2$1$i246;$y$2$i26 = $661;
          } else {
           $668 = ($$010$i|0)==($669|0);
           $or$cond20$i = $670 & $668;
           $denormal$1$i = $or$cond20$i ? 0 : $denormal$0$i;
           $671 = $661 * 0.5;
           $672 = (($e2$1$i246) + 1)|0;
           $denormal$2$i = $denormal$1$i;$e2$2$i = $672;$y$2$i26 = $671;
          }
          $673 = (($e2$2$i) + 50)|0;
          $674 = ($673|0)>($330|0);
          if (!($674)) {
           $675 = ($denormal$2$i|0)!=(0);
           $676 = $frac$2$i != 0.0;
           $or$cond8$i = $676 & $675;
           if (!($or$cond8$i)) {
            $e2$3$i = $e2$2$i;$y$3$i = $y$2$i26;
            break;
           }
          }
          $677 = (___errno_location()|0);
          HEAP32[$677>>2] = 34;
          $e2$3$i = $e2$2$i;$y$3$i = $y$2$i26;
         } else {
          $e2$3$i = $e2$1$i246;$y$3$i = $661;
         }
        } while(0);
        $678 = (+_scalbnl($y$3$i,$e2$3$i));
        $$0$i27 = $678;
       }
      } while(0);
      $$0 = $$0$i27;
      break L4;
      break;
     }
     default: {
      $109 = HEAP32[$1>>2]|0;
      $110 = ($109|0)==(0|0);
      if (!($110)) {
       $111 = HEAP32[$0>>2]|0;
       $112 = ((($111)) + -1|0);
       HEAP32[$0>>2] = $112;
      }
      $113 = (___errno_location()|0);
      HEAP32[$113>>2] = 22;
      ___shlim($f,0);
      $$0 = 0.0;
      break L4;
     }
     }
    }
    }
   } while(0);
   if ((label|0) == 23) {
    $41 = HEAP32[$1>>2]|0;
    $42 = ($41|0)==(0|0);
    if (!($42)) {
     $43 = HEAP32[$0>>2]|0;
     $44 = ((($43)) + -1|0);
     HEAP32[$0>>2] = $44;
    }
    $45 = ($pok|0)!=(0);
    $46 = ($i$0$lcssa>>>0)>(3);
    $or$cond9 = $45 & $46;
    if ($or$cond9) {
     $i$1 = $i$0$lcssa;
     while(1) {
      if (!($42)) {
       $47 = HEAP32[$0>>2]|0;
       $48 = ((($47)) + -1|0);
       HEAP32[$0>>2] = $48;
      }
      $49 = (($i$1) + -1)|0;
      $$old8 = ($49>>>0)>(3);
      if ($$old8) {
       $i$1 = $49;
      } else {
       break;
      }
     }
    }
   }
   $50 = (+($sign$0|0));
   $51 = $50 * inf;
   $52 = $51;
   $$0 = $52;
  }
 } while(0);
 STACKTOP = sp;return (+$$0);
}
function ___intscan($f,$base,$pok,$0,$1) {
 $f = $f|0;
 $base = $base|0;
 $pok = $pok|0;
 $0 = $0|0;
 $1 = $1|0;
 var $$1 = 0, $$122 = 0, $$123 = 0, $$base21 = 0, $$lcssa = 0, $$lcssa130 = 0, $$lcssa131 = 0, $$lcssa132 = 0, $$lcssa133 = 0, $$lcssa134 = 0, $$lcssa135 = 0, $$sum = 0, $$sum14 = 0, $$sum1445 = 0, $$sum15 = 0, $$sum16 = 0, $$sum17 = 0, $$sum18 = 0, $$sum1865 = 0, $$sum19 = 0;
 var $$sum20 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0;
 var $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0;
 var $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0;
 var $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0;
 var $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0;
 var $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0;
 var $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0;
 var $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0;
 var $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0;
 var $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $c$0 = 0, $c$1 = 0, $c$124 = 0, $c$2$be = 0, $c$2$be$lcssa = 0;
 var $c$2$lcssa = 0, $c$3$be = 0, $c$3$lcssa = 0, $c$371 = 0, $c$4$be = 0, $c$4$be$lcssa = 0, $c$4$lcssa = 0, $c$5$be = 0, $c$6$be = 0, $c$6$be$lcssa = 0, $c$6$lcssa = 0, $c$7$be = 0, $c$753 = 0, $c$8 = 0, $c$9$be = 0, $neg$0 = 0, $neg$0$ = 0, $neg$1 = 0, $or$cond = 0, $or$cond12 = 0;
 var $or$cond40 = 0, $or$cond5 = 0, $or$cond7 = 0, $x$082 = 0, $x$146 = 0, $x$266 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($base>>>0)>(36);
 L1: do {
  if ($2) {
   $5 = (___errno_location()|0);
   HEAP32[$5>>2] = 22;
   $286 = 0;$287 = 0;
  } else {
   $3 = ((($f)) + 4|0);
   $4 = ((($f)) + 100|0);
   while(1) {
    $6 = HEAP32[$3>>2]|0;
    $7 = HEAP32[$4>>2]|0;
    $8 = ($6>>>0)<($7>>>0);
    if ($8) {
     $9 = ((($6)) + 1|0);
     HEAP32[$3>>2] = $9;
     $10 = HEAP8[$6>>0]|0;
     $11 = $10&255;
     $13 = $11;
    } else {
     $12 = (___shgetc($f)|0);
     $13 = $12;
    }
    $14 = (_isspace($13)|0);
    $15 = ($14|0)==(0);
    if ($15) {
     $$lcssa135 = $13;
     break;
    }
   }
   $16 = ($$lcssa135|0)==(45);
   L11: do {
    switch ($$lcssa135|0) {
    case 43: case 45:  {
     $17 = $16 << 31 >> 31;
     $18 = HEAP32[$3>>2]|0;
     $19 = HEAP32[$4>>2]|0;
     $20 = ($18>>>0)<($19>>>0);
     if ($20) {
      $21 = ((($18)) + 1|0);
      HEAP32[$3>>2] = $21;
      $22 = HEAP8[$18>>0]|0;
      $23 = $22&255;
      $c$0 = $23;$neg$0 = $17;
      break L11;
     } else {
      $24 = (___shgetc($f)|0);
      $c$0 = $24;$neg$0 = $17;
      break L11;
     }
     break;
    }
    default: {
     $c$0 = $$lcssa135;$neg$0 = 0;
    }
    }
   } while(0);
   $25 = ($base|0)==(0);
   $26 = $base & -17;
   $27 = ($26|0)==(0);
   $28 = ($c$0|0)==(48);
   $or$cond5 = $27 & $28;
   do {
    if ($or$cond5) {
     $29 = HEAP32[$3>>2]|0;
     $30 = HEAP32[$4>>2]|0;
     $31 = ($29>>>0)<($30>>>0);
     if ($31) {
      $32 = ((($29)) + 1|0);
      HEAP32[$3>>2] = $32;
      $33 = HEAP8[$29>>0]|0;
      $34 = $33&255;
      $37 = $34;
     } else {
      $35 = (___shgetc($f)|0);
      $37 = $35;
     }
     $36 = $37 | 32;
     $38 = ($36|0)==(120);
     if (!($38)) {
      if ($25) {
       $$123 = 8;$c$124 = $37;
       label = 46;
       break;
      } else {
       $$1 = $base;$c$1 = $37;
       label = 32;
       break;
      }
     }
     $39 = HEAP32[$3>>2]|0;
     $40 = HEAP32[$4>>2]|0;
     $41 = ($39>>>0)<($40>>>0);
     if ($41) {
      $42 = ((($39)) + 1|0);
      HEAP32[$3>>2] = $42;
      $43 = HEAP8[$39>>0]|0;
      $44 = $43&255;
      $46 = $44;
     } else {
      $45 = (___shgetc($f)|0);
      $46 = $45;
     }
     $$sum20 = (($46) + 1)|0;
     $47 = (17739 + ($$sum20)|0);
     $48 = HEAP8[$47>>0]|0;
     $49 = ($48&255)>(15);
     if ($49) {
      $50 = HEAP32[$4>>2]|0;
      $51 = ($50|0)==(0|0);
      if (!($51)) {
       $52 = HEAP32[$3>>2]|0;
       $53 = ((($52)) + -1|0);
       HEAP32[$3>>2] = $53;
      }
      $54 = ($pok|0)==(0);
      if ($54) {
       ___shlim($f,0);
       $286 = 0;$287 = 0;
       break L1;
      }
      if ($51) {
       $286 = 0;$287 = 0;
       break L1;
      }
      $55 = HEAP32[$3>>2]|0;
      $56 = ((($55)) + -1|0);
      HEAP32[$3>>2] = $56;
      $286 = 0;$287 = 0;
      break L1;
     } else {
      $$123 = 16;$c$124 = $46;
      label = 46;
     }
    } else {
     $$base21 = $25 ? 10 : $base;
     $$sum = (($c$0) + 1)|0;
     $57 = (17739 + ($$sum)|0);
     $58 = HEAP8[$57>>0]|0;
     $59 = $58&255;
     $60 = ($59>>>0)<($$base21>>>0);
     if ($60) {
      $$1 = $$base21;$c$1 = $c$0;
      label = 32;
     } else {
      $61 = HEAP32[$4>>2]|0;
      $62 = ($61|0)==(0|0);
      if (!($62)) {
       $63 = HEAP32[$3>>2]|0;
       $64 = ((($63)) + -1|0);
       HEAP32[$3>>2] = $64;
      }
      ___shlim($f,0);
      $65 = (___errno_location()|0);
      HEAP32[$65>>2] = 22;
      $286 = 0;$287 = 0;
      break L1;
     }
    }
   } while(0);
   if ((label|0) == 32) {
    $66 = ($$1|0)==(10);
    if ($66) {
     $67 = (($c$1) + -48)|0;
     $68 = ($67>>>0)<(10);
     if ($68) {
      $71 = $67;$x$082 = 0;
      while(1) {
       $69 = ($x$082*10)|0;
       $70 = (($69) + ($71))|0;
       $72 = HEAP32[$3>>2]|0;
       $73 = HEAP32[$4>>2]|0;
       $74 = ($72>>>0)<($73>>>0);
       if ($74) {
        $75 = ((($72)) + 1|0);
        HEAP32[$3>>2] = $75;
        $76 = HEAP8[$72>>0]|0;
        $77 = $76&255;
        $c$2$be = $77;
       } else {
        $78 = (___shgetc($f)|0);
        $c$2$be = $78;
       }
       $79 = (($c$2$be) + -48)|0;
       $80 = ($79>>>0)<(10);
       $81 = ($70>>>0)<(429496729);
       $82 = $80 & $81;
       if ($82) {
        $71 = $79;$x$082 = $70;
       } else {
        $$lcssa134 = $70;$c$2$be$lcssa = $c$2$be;
        break;
       }
      }
      $288 = $$lcssa134;$289 = 0;$c$2$lcssa = $c$2$be$lcssa;
     } else {
      $288 = 0;$289 = 0;$c$2$lcssa = $c$1;
     }
     $83 = (($c$2$lcssa) + -48)|0;
     $84 = ($83>>>0)<(10);
     if ($84) {
      $85 = $288;$86 = $289;$89 = $83;$c$371 = $c$2$lcssa;
      while(1) {
       $87 = (___muldi3(($85|0),($86|0),10,0)|0);
       $88 = tempRet0;
       $90 = ($89|0)<(0);
       $91 = $90 << 31 >> 31;
       $92 = $89 ^ -1;
       $93 = $91 ^ -1;
       $94 = ($88>>>0)>($93>>>0);
       $95 = ($87>>>0)>($92>>>0);
       $96 = ($88|0)==($93|0);
       $97 = $96 & $95;
       $98 = $94 | $97;
       if ($98) {
        $$lcssa = $89;$290 = $85;$291 = $86;$c$3$lcssa = $c$371;
        break;
       }
       $99 = (_i64Add(($87|0),($88|0),($89|0),($91|0))|0);
       $100 = tempRet0;
       $101 = HEAP32[$3>>2]|0;
       $102 = HEAP32[$4>>2]|0;
       $103 = ($101>>>0)<($102>>>0);
       if ($103) {
        $104 = ((($101)) + 1|0);
        HEAP32[$3>>2] = $104;
        $105 = HEAP8[$101>>0]|0;
        $106 = $105&255;
        $c$3$be = $106;
       } else {
        $107 = (___shgetc($f)|0);
        $c$3$be = $107;
       }
       $108 = (($c$3$be) + -48)|0;
       $109 = ($108>>>0)<(10);
       $110 = ($100>>>0)<(429496729);
       $111 = ($99>>>0)<(2576980378);
       $112 = ($100|0)==(429496729);
       $113 = $112 & $111;
       $114 = $110 | $113;
       $or$cond7 = $109 & $114;
       if ($or$cond7) {
        $85 = $99;$86 = $100;$89 = $108;$c$371 = $c$3$be;
       } else {
        $$lcssa = $108;$290 = $99;$291 = $100;$c$3$lcssa = $c$3$be;
        break;
       }
      }
      $115 = ($$lcssa>>>0)>(9);
      if ($115) {
       $259 = $291;$261 = $290;$neg$1 = $neg$0;
      } else {
       $$122 = 10;$292 = $290;$293 = $291;$c$8 = $c$3$lcssa;
       label = 72;
      }
     } else {
      $259 = $289;$261 = $288;$neg$1 = $neg$0;
     }
    } else {
     $$123 = $$1;$c$124 = $c$1;
     label = 46;
    }
   }
   L63: do {
    if ((label|0) == 46) {
     $116 = (($$123) + -1)|0;
     $117 = $116 & $$123;
     $118 = ($117|0)==(0);
     if ($118) {
      $123 = ($$123*23)|0;
      $124 = $123 >>> 5;
      $125 = $124 & 7;
      $126 = (17996 + ($125)|0);
      $127 = HEAP8[$126>>0]|0;
      $128 = $127 << 24 >> 24;
      $$sum1445 = (($c$124) + 1)|0;
      $129 = (17739 + ($$sum1445)|0);
      $130 = HEAP8[$129>>0]|0;
      $131 = $130&255;
      $132 = ($131>>>0)<($$123>>>0);
      if ($132) {
       $135 = $131;$x$146 = 0;
       while(1) {
        $133 = $x$146 << $128;
        $134 = $135 | $133;
        $136 = HEAP32[$3>>2]|0;
        $137 = HEAP32[$4>>2]|0;
        $138 = ($136>>>0)<($137>>>0);
        if ($138) {
         $139 = ((($136)) + 1|0);
         HEAP32[$3>>2] = $139;
         $140 = HEAP8[$136>>0]|0;
         $141 = $140&255;
         $c$4$be = $141;
        } else {
         $142 = (___shgetc($f)|0);
         $c$4$be = $142;
        }
        $$sum14 = (($c$4$be) + 1)|0;
        $143 = (17739 + ($$sum14)|0);
        $144 = HEAP8[$143>>0]|0;
        $145 = $144&255;
        $146 = ($145>>>0)<($$123>>>0);
        $147 = ($134>>>0)<(134217728);
        $148 = $147 & $146;
        if ($148) {
         $135 = $145;$x$146 = $134;
        } else {
         $$lcssa130 = $134;$$lcssa131 = $144;$c$4$be$lcssa = $c$4$be;
         break;
        }
       }
       $152 = $$lcssa131;$154 = 0;$156 = $$lcssa130;$c$4$lcssa = $c$4$be$lcssa;
      } else {
       $152 = $130;$154 = 0;$156 = 0;$c$4$lcssa = $c$124;
      }
      $149 = (_bitshift64Lshr(-1,-1,($128|0))|0);
      $150 = tempRet0;
      $151 = $152&255;
      $153 = ($151>>>0)>=($$123>>>0);
      $155 = ($154>>>0)>($150>>>0);
      $157 = ($156>>>0)>($149>>>0);
      $158 = ($154|0)==($150|0);
      $159 = $158 & $157;
      $160 = $155 | $159;
      $or$cond40 = $153 | $160;
      if ($or$cond40) {
       $$122 = $$123;$292 = $156;$293 = $154;$c$8 = $c$4$lcssa;
       label = 72;
       break;
      } else {
       $161 = $156;$162 = $154;$166 = $152;
      }
      while(1) {
       $163 = (_bitshift64Shl(($161|0),($162|0),($128|0))|0);
       $164 = tempRet0;
       $165 = $166&255;
       $167 = $165 | $163;
       $168 = HEAP32[$3>>2]|0;
       $169 = HEAP32[$4>>2]|0;
       $170 = ($168>>>0)<($169>>>0);
       if ($170) {
        $171 = ((($168)) + 1|0);
        HEAP32[$3>>2] = $171;
        $172 = HEAP8[$168>>0]|0;
        $173 = $172&255;
        $c$5$be = $173;
       } else {
        $174 = (___shgetc($f)|0);
        $c$5$be = $174;
       }
       $$sum15 = (($c$5$be) + 1)|0;
       $175 = (17739 + ($$sum15)|0);
       $176 = HEAP8[$175>>0]|0;
       $177 = $176&255;
       $178 = ($177>>>0)>=($$123>>>0);
       $179 = ($164>>>0)>($150>>>0);
       $180 = ($167>>>0)>($149>>>0);
       $181 = ($164|0)==($150|0);
       $182 = $181 & $180;
       $183 = $179 | $182;
       $or$cond = $178 | $183;
       if ($or$cond) {
        $$122 = $$123;$292 = $167;$293 = $164;$c$8 = $c$5$be;
        label = 72;
        break L63;
       } else {
        $161 = $167;$162 = $164;$166 = $176;
       }
      }
     }
     $$sum1865 = (($c$124) + 1)|0;
     $119 = (17739 + ($$sum1865)|0);
     $120 = HEAP8[$119>>0]|0;
     $121 = $120&255;
     $122 = ($121>>>0)<($$123>>>0);
     if ($122) {
      $186 = $121;$x$266 = 0;
      while(1) {
       $184 = Math_imul($x$266, $$123)|0;
       $185 = (($186) + ($184))|0;
       $187 = HEAP32[$3>>2]|0;
       $188 = HEAP32[$4>>2]|0;
       $189 = ($187>>>0)<($188>>>0);
       if ($189) {
        $190 = ((($187)) + 1|0);
        HEAP32[$3>>2] = $190;
        $191 = HEAP8[$187>>0]|0;
        $192 = $191&255;
        $c$6$be = $192;
       } else {
        $193 = (___shgetc($f)|0);
        $c$6$be = $193;
       }
       $$sum18 = (($c$6$be) + 1)|0;
       $194 = (17739 + ($$sum18)|0);
       $195 = HEAP8[$194>>0]|0;
       $196 = $195&255;
       $197 = ($196>>>0)<($$123>>>0);
       $198 = ($185>>>0)<(119304647);
       $199 = $198 & $197;
       if ($199) {
        $186 = $196;$x$266 = $185;
       } else {
        $$lcssa132 = $185;$$lcssa133 = $195;$c$6$be$lcssa = $c$6$be;
        break;
       }
      }
      $201 = $$lcssa133;$294 = $$lcssa132;$295 = 0;$c$6$lcssa = $c$6$be$lcssa;
     } else {
      $201 = $120;$294 = 0;$295 = 0;$c$6$lcssa = $c$124;
     }
     $200 = $201&255;
     $202 = ($200>>>0)<($$123>>>0);
     if ($202) {
      $203 = (___udivdi3(-1,-1,($$123|0),0)|0);
      $204 = tempRet0;
      $205 = $295;$207 = $294;$215 = $201;$c$753 = $c$6$lcssa;
      while(1) {
       $206 = ($205>>>0)>($204>>>0);
       $208 = ($207>>>0)>($203>>>0);
       $209 = ($205|0)==($204|0);
       $210 = $209 & $208;
       $211 = $206 | $210;
       if ($211) {
        $$122 = $$123;$292 = $207;$293 = $205;$c$8 = $c$753;
        label = 72;
        break L63;
       }
       $212 = (___muldi3(($207|0),($205|0),($$123|0),0)|0);
       $213 = tempRet0;
       $214 = $215&255;
       $216 = $214 ^ -1;
       $217 = ($213>>>0)>(4294967295);
       $218 = ($212>>>0)>($216>>>0);
       $219 = ($213|0)==(-1);
       $220 = $219 & $218;
       $221 = $217 | $220;
       if ($221) {
        $$122 = $$123;$292 = $207;$293 = $205;$c$8 = $c$753;
        label = 72;
        break L63;
       }
       $222 = (_i64Add(($214|0),0,($212|0),($213|0))|0);
       $223 = tempRet0;
       $224 = HEAP32[$3>>2]|0;
       $225 = HEAP32[$4>>2]|0;
       $226 = ($224>>>0)<($225>>>0);
       if ($226) {
        $227 = ((($224)) + 1|0);
        HEAP32[$3>>2] = $227;
        $228 = HEAP8[$224>>0]|0;
        $229 = $228&255;
        $c$7$be = $229;
       } else {
        $230 = (___shgetc($f)|0);
        $c$7$be = $230;
       }
       $$sum19 = (($c$7$be) + 1)|0;
       $231 = (17739 + ($$sum19)|0);
       $232 = HEAP8[$231>>0]|0;
       $233 = $232&255;
       $234 = ($233>>>0)<($$123>>>0);
       if ($234) {
        $205 = $223;$207 = $222;$215 = $232;$c$753 = $c$7$be;
       } else {
        $$122 = $$123;$292 = $222;$293 = $223;$c$8 = $c$7$be;
        label = 72;
        break;
       }
      }
     } else {
      $$122 = $$123;$292 = $294;$293 = $295;$c$8 = $c$6$lcssa;
      label = 72;
     }
    }
   } while(0);
   if ((label|0) == 72) {
    $$sum16 = (($c$8) + 1)|0;
    $235 = (17739 + ($$sum16)|0);
    $236 = HEAP8[$235>>0]|0;
    $237 = $236&255;
    $238 = ($237>>>0)<($$122>>>0);
    if ($238) {
     while(1) {
      $239 = HEAP32[$3>>2]|0;
      $240 = HEAP32[$4>>2]|0;
      $241 = ($239>>>0)<($240>>>0);
      if ($241) {
       $242 = ((($239)) + 1|0);
       HEAP32[$3>>2] = $242;
       $243 = HEAP8[$239>>0]|0;
       $244 = $243&255;
       $c$9$be = $244;
      } else {
       $245 = (___shgetc($f)|0);
       $c$9$be = $245;
      }
      $$sum17 = (($c$9$be) + 1)|0;
      $246 = (17739 + ($$sum17)|0);
      $247 = HEAP8[$246>>0]|0;
      $248 = $247&255;
      $249 = ($248>>>0)<($$122>>>0);
      if (!($249)) {
       break;
      }
     }
     $250 = (___errno_location()|0);
     HEAP32[$250>>2] = 34;
     $251 = $0 & 1;
     $252 = ($251|0)==(0);
     $253 = (0)==(0);
     $254 = $252 & $253;
     $neg$0$ = $254 ? $neg$0 : 0;
     $259 = $1;$261 = $0;$neg$1 = $neg$0$;
    } else {
     $259 = $293;$261 = $292;$neg$1 = $neg$0;
    }
   }
   $255 = HEAP32[$4>>2]|0;
   $256 = ($255|0)==(0|0);
   if (!($256)) {
    $257 = HEAP32[$3>>2]|0;
    $258 = ((($257)) + -1|0);
    HEAP32[$3>>2] = $258;
   }
   $260 = ($259>>>0)<($1>>>0);
   $262 = ($261>>>0)<($0>>>0);
   $263 = ($259|0)==($1|0);
   $264 = $263 & $262;
   $265 = $260 | $264;
   if (!($265)) {
    $266 = $0 & 1;
    $267 = ($266|0)!=(0);
    $268 = (0)!=(0);
    $269 = $267 | $268;
    $270 = ($neg$1|0)!=(0);
    $or$cond12 = $269 | $270;
    if (!($or$cond12)) {
     $271 = (___errno_location()|0);
     HEAP32[$271>>2] = 34;
     $272 = (_i64Add(($0|0),($1|0),-1,-1)|0);
     $273 = tempRet0;
     $286 = $273;$287 = $272;
     break;
    }
    $274 = ($259>>>0)>($1>>>0);
    $275 = ($261>>>0)>($0>>>0);
    $276 = ($259|0)==($1|0);
    $277 = $276 & $275;
    $278 = $274 | $277;
    if ($278) {
     $279 = (___errno_location()|0);
     HEAP32[$279>>2] = 34;
     $286 = $1;$287 = $0;
     break;
    }
   }
   $280 = ($neg$1|0)<(0);
   $281 = $280 << 31 >> 31;
   $282 = $261 ^ $neg$1;
   $283 = $259 ^ $281;
   $284 = (_i64Subtract(($282|0),($283|0),($neg$1|0),($281|0))|0);
   $285 = tempRet0;
   $286 = $285;$287 = $284;
  }
 } while(0);
 tempRet0 = ($286);
 return ($287|0);
}
function ___shlim($f,$lim) {
 $f = $f|0;
 $lim = $lim|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 104|0);
 HEAP32[$0>>2] = $lim;
 $1 = ((($f)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($f)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = $2;
 $6 = $4;
 $7 = (($5) - ($6))|0;
 $8 = ((($f)) + 108|0);
 HEAP32[$8>>2] = $7;
 $9 = ($lim|0)!=(0);
 $10 = ($7|0)>($lim|0);
 $or$cond = $9 & $10;
 if ($or$cond) {
  $11 = (($4) + ($lim)|0);
  $12 = ((($f)) + 100|0);
  HEAP32[$12>>2] = $11;
 } else {
  $13 = ((($f)) + 100|0);
  HEAP32[$13>>2] = $5;
 }
 return;
}
function ___shgetc($f) {
 $f = $f|0;
 var $$0 = 0, $$phi$trans$insert = 0, $$phi$trans$insert3 = 0, $$pre = 0, $$pre4 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 104|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0);
 if ($2) {
  label = 3;
 } else {
  $3 = ((($f)) + 108|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = ($4|0)<($1|0);
  if ($5) {
   label = 3;
  } else {
   label = 4;
  }
 }
 if ((label|0) == 3) {
  $6 = (___uflow($f)|0);
  $7 = ($6|0)<(0);
  if ($7) {
   label = 4;
  } else {
   $9 = HEAP32[$0>>2]|0;
   $10 = ($9|0)==(0);
   $$phi$trans$insert = ((($f)) + 8|0);
   if ($10) {
    $$pre = HEAP32[$$phi$trans$insert>>2]|0;
    $11 = $$pre;
    $26 = $$pre;$41 = $11;
    label = 9;
   } else {
    $12 = HEAP32[$$phi$trans$insert>>2]|0;
    $13 = ((($f)) + 4|0);
    $14 = HEAP32[$13>>2]|0;
    $15 = $12;
    $16 = $14;
    $17 = (($15) - ($16))|0;
    $18 = ((($f)) + 108|0);
    $19 = HEAP32[$18>>2]|0;
    $20 = (($9) - ($19))|0;
    $21 = (($20) + -1)|0;
    $22 = ($17|0)>($21|0);
    if ($22) {
     $23 = (($14) + ($21)|0);
     $24 = ((($f)) + 100|0);
     HEAP32[$24>>2] = $23;
     $27 = $12;
    } else {
     $26 = $15;$41 = $12;
     label = 9;
    }
   }
   if ((label|0) == 9) {
    $25 = ((($f)) + 100|0);
    HEAP32[$25>>2] = $26;
    $27 = $41;
   }
   $28 = ($27|0)==(0|0);
   $$phi$trans$insert3 = ((($f)) + 4|0);
   $$pre4 = HEAP32[$$phi$trans$insert3>>2]|0;
   if (!($28)) {
    $29 = $27;
    $30 = $$pre4;
    $31 = ((($f)) + 108|0);
    $32 = HEAP32[$31>>2]|0;
    $33 = (($29) + 1)|0;
    $34 = (($33) - ($30))|0;
    $35 = (($34) + ($32))|0;
    HEAP32[$31>>2] = $35;
   }
   $36 = ((($$pre4)) + -1|0);
   $37 = HEAP8[$36>>0]|0;
   $38 = $37&255;
   $39 = ($38|0)==($6|0);
   if ($39) {
    $$0 = $6;
   } else {
    $40 = $6&255;
    HEAP8[$36>>0] = $40;
    $$0 = $6;
   }
  }
 }
 if ((label|0) == 4) {
  $8 = ((($f)) + 100|0);
  HEAP32[$8>>2] = 0;
  $$0 = -1;
 }
 return ($$0|0);
}
function ___syscall_ret($r) {
 $r = $r|0;
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($r>>>0)>(4294963200);
 if ($0) {
  $1 = (0 - ($r))|0;
  $2 = (___errno_location()|0);
  HEAP32[$2>>2] = $1;
  $$0 = -1;
 } else {
  $$0 = $r;
 }
 return ($$0|0);
}
function _setlocale($category,$locale) {
 $category = $category|0;
 $locale = $locale|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (18005|0);
}
function _copysign($x,$y) {
 $x = +$x;
 $y = +$y;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $x;$0 = HEAP32[tempDoublePtr>>2]|0;
 $1 = HEAP32[tempDoublePtr+4>>2]|0;
 HEAPF64[tempDoublePtr>>3] = $y;$2 = HEAP32[tempDoublePtr>>2]|0;
 $3 = HEAP32[tempDoublePtr+4>>2]|0;
 $4 = $1 & 2147483647;
 $5 = $3 & -2147483648;
 $6 = $5 | $4;
 HEAP32[tempDoublePtr>>2] = $0;HEAP32[tempDoublePtr+4>>2] = $6;$7 = +HEAPF64[tempDoublePtr>>3];
 return (+$7);
}
function _copysignl($x,$y) {
 $x = +$x;
 $y = +$y;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+_copysign($x,$y));
 return (+$0);
}
function _fmod($x,$y) {
 $x = +$x;
 $y = +$y;
 var $$0 = 0.0, $$lcssa7 = 0, $$x = 0.0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;
 var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0.0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0;
 var $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0;
 var $15 = 0, $150 = 0.0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0.0, $24 = 0.0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0.0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0.0;
 var $ex$0$lcssa = 0, $ex$026 = 0, $ex$1 = 0, $ex$2$lcssa = 0, $ex$212 = 0, $ex$3$lcssa = 0, $ex$39 = 0, $ey$0$lcssa = 0, $ey$020 = 0, $ey$1$ph = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $x;$0 = HEAP32[tempDoublePtr>>2]|0;
 $1 = HEAP32[tempDoublePtr+4>>2]|0;
 HEAPF64[tempDoublePtr>>3] = $y;$2 = HEAP32[tempDoublePtr>>2]|0;
 $3 = HEAP32[tempDoublePtr+4>>2]|0;
 $4 = (_bitshift64Lshr(($0|0),($1|0),52)|0);
 $5 = tempRet0;
 $6 = $4 & 2047;
 $7 = (_bitshift64Lshr(($2|0),($3|0),52)|0);
 $8 = tempRet0;
 $9 = $7 & 2047;
 $10 = $1 & -2147483648;
 $11 = (_bitshift64Shl(($2|0),($3|0),1)|0);
 $12 = tempRet0;
 $13 = ($11|0)==(0);
 $14 = ($12|0)==(0);
 $15 = $13 & $14;
 L1: do {
  if ($15) {
   label = 3;
  } else {
   $16 = $3 & 2147483647;
   $17 = ($16>>>0)>(2146435072);
   $18 = ($2>>>0)>(0);
   $19 = ($16|0)==(2146435072);
   $20 = $19 & $18;
   $21 = $17 | $20;
   $22 = ($6|0)==(2047);
   $or$cond = $21 | $22;
   if ($or$cond) {
    label = 3;
   } else {
    $25 = (_bitshift64Shl(($0|0),($1|0),1)|0);
    $26 = tempRet0;
    $27 = ($26>>>0)>($12>>>0);
    $28 = ($25>>>0)>($11>>>0);
    $29 = ($26|0)==($12|0);
    $30 = $29 & $28;
    $31 = $27 | $30;
    if (!($31)) {
     $32 = ($25|0)==($11|0);
     $33 = ($26|0)==($12|0);
     $34 = $32 & $33;
     $35 = $x * 0.0;
     $$x = $34 ? $35 : $x;
     return (+$$x);
    }
    $36 = ($6|0)==(0);
    if ($36) {
     $37 = (_bitshift64Shl(($0|0),($1|0),12)|0);
     $38 = tempRet0;
     $39 = ($38|0)>(-1);
     $40 = ($37>>>0)>(4294967295);
     $41 = ($38|0)==(-1);
     $42 = $41 & $40;
     $43 = $39 | $42;
     if ($43) {
      $45 = $37;$46 = $38;$ex$026 = 0;
      while(1) {
       $44 = (($ex$026) + -1)|0;
       $47 = (_bitshift64Shl(($45|0),($46|0),1)|0);
       $48 = tempRet0;
       $49 = ($48|0)>(-1);
       $50 = ($47>>>0)>(4294967295);
       $51 = ($48|0)==(-1);
       $52 = $51 & $50;
       $53 = $49 | $52;
       if ($53) {
        $45 = $47;$46 = $48;$ex$026 = $44;
       } else {
        $ex$0$lcssa = $44;
        break;
       }
      }
     } else {
      $ex$0$lcssa = 0;
     }
     $54 = (1 - ($ex$0$lcssa))|0;
     $55 = (_bitshift64Shl(($0|0),($1|0),($54|0))|0);
     $56 = tempRet0;
     $83 = $55;$84 = $56;$ex$1 = $ex$0$lcssa;
    } else {
     $57 = $1 & 1048575;
     $58 = $57 | 1048576;
     $83 = $0;$84 = $58;$ex$1 = $6;
    }
    $59 = ($9|0)==(0);
    if ($59) {
     $60 = (_bitshift64Shl(($2|0),($3|0),12)|0);
     $61 = tempRet0;
     $62 = ($61|0)>(-1);
     $63 = ($60>>>0)>(4294967295);
     $64 = ($61|0)==(-1);
     $65 = $64 & $63;
     $66 = $62 | $65;
     if ($66) {
      $68 = $60;$69 = $61;$ey$020 = 0;
      while(1) {
       $67 = (($ey$020) + -1)|0;
       $70 = (_bitshift64Shl(($68|0),($69|0),1)|0);
       $71 = tempRet0;
       $72 = ($71|0)>(-1);
       $73 = ($70>>>0)>(4294967295);
       $74 = ($71|0)==(-1);
       $75 = $74 & $73;
       $76 = $72 | $75;
       if ($76) {
        $68 = $70;$69 = $71;$ey$020 = $67;
       } else {
        $ey$0$lcssa = $67;
        break;
       }
      }
     } else {
      $ey$0$lcssa = 0;
     }
     $77 = (1 - ($ey$0$lcssa))|0;
     $78 = (_bitshift64Shl(($2|0),($3|0),($77|0))|0);
     $79 = tempRet0;
     $85 = $78;$86 = $79;$ey$1$ph = $ey$0$lcssa;
    } else {
     $80 = $3 & 1048575;
     $81 = $80 | 1048576;
     $85 = $2;$86 = $81;$ey$1$ph = $9;
    }
    $82 = ($ex$1|0)>($ey$1$ph|0);
    $87 = (_i64Subtract(($83|0),($84|0),($85|0),($86|0))|0);
    $88 = tempRet0;
    $89 = ($88|0)>(-1);
    $90 = ($87>>>0)>(4294967295);
    $91 = ($88|0)==(-1);
    $92 = $91 & $90;
    $93 = $89 | $92;
    L23: do {
     if ($82) {
      $152 = $93;$153 = $87;$154 = $88;$94 = $83;$96 = $84;$ex$212 = $ex$1;
      while(1) {
       if ($152) {
        $95 = ($94|0)==($85|0);
        $97 = ($96|0)==($86|0);
        $98 = $95 & $97;
        if ($98) {
         break;
        } else {
         $100 = $153;$101 = $154;
        }
       } else {
        $100 = $94;$101 = $96;
       }
       $102 = (_bitshift64Shl(($100|0),($101|0),1)|0);
       $103 = tempRet0;
       $104 = (($ex$212) + -1)|0;
       $105 = ($104|0)>($ey$1$ph|0);
       $106 = (_i64Subtract(($102|0),($103|0),($85|0),($86|0))|0);
       $107 = tempRet0;
       $108 = ($107|0)>(-1);
       $109 = ($106>>>0)>(4294967295);
       $110 = ($107|0)==(-1);
       $111 = $110 & $109;
       $112 = $108 | $111;
       if ($105) {
        $152 = $112;$153 = $106;$154 = $107;$94 = $102;$96 = $103;$ex$212 = $104;
       } else {
        $$lcssa7 = $112;$113 = $102;$115 = $103;$155 = $106;$156 = $107;$ex$2$lcssa = $104;
        break L23;
       }
      }
      $99 = $x * 0.0;
      $$0 = $99;
      break L1;
     } else {
      $$lcssa7 = $93;$113 = $83;$115 = $84;$155 = $87;$156 = $88;$ex$2$lcssa = $ex$1;
     }
    } while(0);
    if ($$lcssa7) {
     $114 = ($113|0)==($85|0);
     $116 = ($115|0)==($86|0);
     $117 = $114 & $116;
     if ($117) {
      $125 = $x * 0.0;
      $$0 = $125;
      break;
     } else {
      $118 = $156;$120 = $155;
     }
    } else {
     $118 = $115;$120 = $113;
    }
    $119 = ($118>>>0)<(1048576);
    $121 = ($120>>>0)<(0);
    $122 = ($118|0)==(1048576);
    $123 = $122 & $121;
    $124 = $119 | $123;
    if ($124) {
     $126 = $120;$127 = $118;$ex$39 = $ex$2$lcssa;
     while(1) {
      $128 = (_bitshift64Shl(($126|0),($127|0),1)|0);
      $129 = tempRet0;
      $130 = (($ex$39) + -1)|0;
      $131 = ($129>>>0)<(1048576);
      $132 = ($128>>>0)<(0);
      $133 = ($129|0)==(1048576);
      $134 = $133 & $132;
      $135 = $131 | $134;
      if ($135) {
       $126 = $128;$127 = $129;$ex$39 = $130;
      } else {
       $137 = $128;$138 = $129;$ex$3$lcssa = $130;
       break;
      }
     }
    } else {
     $137 = $120;$138 = $118;$ex$3$lcssa = $ex$2$lcssa;
    }
    $136 = ($ex$3$lcssa|0)>(0);
    if ($136) {
     $139 = (_i64Add(($137|0),($138|0),0,-1048576)|0);
     $140 = tempRet0;
     $141 = (_bitshift64Shl(($ex$3$lcssa|0),0,52)|0);
     $142 = tempRet0;
     $143 = $139 | $141;
     $144 = $140 | $142;
     $149 = $144;$151 = $143;
    } else {
     $145 = (1 - ($ex$3$lcssa))|0;
     $146 = (_bitshift64Lshr(($137|0),($138|0),($145|0))|0);
     $147 = tempRet0;
     $149 = $147;$151 = $146;
    }
    $148 = $149 | $10;
    HEAP32[tempDoublePtr>>2] = $151;HEAP32[tempDoublePtr+4>>2] = $148;$150 = +HEAPF64[tempDoublePtr>>3];
    $$0 = $150;
   }
  }
 } while(0);
 if ((label|0) == 3) {
  $23 = $x * $y;
  $24 = $23 / $23;
  $$0 = $24;
 }
 return (+$$0);
}
function _fmodl($x,$y) {
 $x = +$x;
 $y = +$y;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+_fmod($x,$y));
 return (+$0);
}
function _frexp($x,$e) {
 $x = +$x;
 $e = $e|0;
 var $$0 = 0.0, $$01 = 0.0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0.0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0.0, $7 = 0.0, $8 = 0, $9 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $x;$0 = HEAP32[tempDoublePtr>>2]|0;
 $1 = HEAP32[tempDoublePtr+4>>2]|0;
 $2 = (_bitshift64Lshr(($0|0),($1|0),52)|0);
 $3 = tempRet0;
 $4 = $2 & 2047;
 switch ($4|0) {
 case 0:  {
  $5 = $x != 0.0;
  if ($5) {
   $6 = $x * 1.8446744073709552E+19;
   $7 = (+_frexp($6,$e));
   $8 = HEAP32[$e>>2]|0;
   $9 = (($8) + -64)|0;
   $$01 = $7;$storemerge = $9;
  } else {
   $$01 = $x;$storemerge = 0;
  }
  HEAP32[$e>>2] = $storemerge;
  $$0 = $$01;
  break;
 }
 case 2047:  {
  $$0 = $x;
  break;
 }
 default: {
  $10 = (($4) + -1022)|0;
  HEAP32[$e>>2] = $10;
  $11 = $1 & -2146435073;
  $12 = $11 | 1071644672;
  HEAP32[tempDoublePtr>>2] = $0;HEAP32[tempDoublePtr+4>>2] = $12;$13 = +HEAPF64[tempDoublePtr>>3];
  $$0 = $13;
 }
 }
 return (+$$0);
}
function _frexpl($x,$e) {
 $x = +$x;
 $e = $e|0;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+_frexp($x,$e));
 return (+$0);
}
function _scalbn($x,$n) {
 $x = +$x;
 $n = $n|0;
 var $$ = 0, $$0 = 0, $$1 = 0, $0 = 0, $1 = 0.0, $10 = 0, $11 = 0.0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0.0, $18 = 0.0, $2 = 0, $3 = 0, $4 = 0.0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0.0, $9 = 0, $y$0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($n|0)>(1023);
 if ($0) {
  $1 = $x * 8.9884656743115795E+307;
  $2 = (($n) + -1023)|0;
  $3 = ($2|0)>(1023);
  if ($3) {
   $4 = $1 * 8.9884656743115795E+307;
   $5 = (($n) + -2046)|0;
   $6 = ($5|0)>(1023);
   $$ = $6 ? 1023 : $5;
   $$0 = $$;$y$0 = $4;
  } else {
   $$0 = $2;$y$0 = $1;
  }
 } else {
  $7 = ($n|0)<(-1022);
  if ($7) {
   $8 = $x * 2.2250738585072014E-308;
   $9 = (($n) + 1022)|0;
   $10 = ($9|0)<(-1022);
   if ($10) {
    $11 = $8 * 2.2250738585072014E-308;
    $12 = (($n) + 2044)|0;
    $13 = ($12|0)<(-1022);
    $$1 = $13 ? -1022 : $12;
    $$0 = $$1;$y$0 = $11;
   } else {
    $$0 = $9;$y$0 = $8;
   }
  } else {
   $$0 = $n;$y$0 = $x;
  }
 }
 $14 = (($$0) + 1023)|0;
 $15 = (_bitshift64Shl(($14|0),0,52)|0);
 $16 = tempRet0;
 HEAP32[tempDoublePtr>>2] = $15;HEAP32[tempDoublePtr+4>>2] = $16;$17 = +HEAPF64[tempDoublePtr>>3];
 $18 = $y$0 * $17;
 return (+$18);
}
function _scalbnl($x,$n) {
 $x = +$x;
 $n = $n|0;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+_scalbn($x,$n));
 return (+$0);
}
function _wcrtomb($s,$wc,$st) {
 $s = $s|0;
 $wc = $wc|0;
 $st = $st|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($s|0)==(0|0);
 do {
  if ($0) {
   $$0 = 1;
  } else {
   $1 = ($wc>>>0)<(128);
   if ($1) {
    $2 = $wc&255;
    HEAP8[$s>>0] = $2;
    $$0 = 1;
    break;
   }
   $3 = ($wc>>>0)<(2048);
   if ($3) {
    $4 = $wc >>> 6;
    $5 = $4 | 192;
    $6 = $5&255;
    $7 = ((($s)) + 1|0);
    HEAP8[$s>>0] = $6;
    $8 = $wc & 63;
    $9 = $8 | 128;
    $10 = $9&255;
    HEAP8[$7>>0] = $10;
    $$0 = 2;
    break;
   }
   $11 = ($wc>>>0)<(55296);
   $12 = $wc & -8192;
   $13 = ($12|0)==(57344);
   $or$cond = $11 | $13;
   if ($or$cond) {
    $14 = $wc >>> 12;
    $15 = $14 | 224;
    $16 = $15&255;
    $17 = ((($s)) + 1|0);
    HEAP8[$s>>0] = $16;
    $18 = $wc >>> 6;
    $19 = $18 & 63;
    $20 = $19 | 128;
    $21 = $20&255;
    $22 = ((($s)) + 2|0);
    HEAP8[$17>>0] = $21;
    $23 = $wc & 63;
    $24 = $23 | 128;
    $25 = $24&255;
    HEAP8[$22>>0] = $25;
    $$0 = 3;
    break;
   }
   $26 = (($wc) + -65536)|0;
   $27 = ($26>>>0)<(1048576);
   if ($27) {
    $28 = $wc >>> 18;
    $29 = $28 | 240;
    $30 = $29&255;
    $31 = ((($s)) + 1|0);
    HEAP8[$s>>0] = $30;
    $32 = $wc >>> 12;
    $33 = $32 & 63;
    $34 = $33 | 128;
    $35 = $34&255;
    $36 = ((($s)) + 2|0);
    HEAP8[$31>>0] = $35;
    $37 = $wc >>> 6;
    $38 = $37 & 63;
    $39 = $38 | 128;
    $40 = $39&255;
    $41 = ((($s)) + 3|0);
    HEAP8[$36>>0] = $40;
    $42 = $wc & 63;
    $43 = $42 | 128;
    $44 = $43&255;
    HEAP8[$41>>0] = $44;
    $$0 = 4;
    break;
   } else {
    $45 = (___errno_location()|0);
    HEAP32[$45>>2] = 84;
    $$0 = -1;
    break;
   }
  }
 } while(0);
 return ($$0|0);
}
function _wctomb($s,$wc) {
 $s = $s|0;
 $wc = $wc|0;
 var $$0 = 0, $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($s|0)==(0|0);
 if ($0) {
  $$0 = 0;
 } else {
  $1 = (_wcrtomb($s,$wc,0)|0);
  $$0 = $1;
 }
 return ($$0|0);
}
function _srand($s) {
 $s = $s|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($s) + -1)|0;
 $1 = 8;
 $2 = $1;
 HEAP32[$2>>2] = $0;
 $3 = (($1) + 4)|0;
 $4 = $3;
 HEAP32[$4>>2] = 0;
 return;
}
function _rand() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = 8;
 $1 = $0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (($0) + 4)|0;
 $4 = $3;
 $5 = HEAP32[$4>>2]|0;
 $6 = (___muldi3(($2|0),($5|0),1284865837,1481765933)|0);
 $7 = tempRet0;
 $8 = (_i64Add(($6|0),($7|0),1,0)|0);
 $9 = tempRet0;
 $10 = 8;
 $11 = $10;
 HEAP32[$11>>2] = $8;
 $12 = (($10) + 4)|0;
 $13 = $12;
 HEAP32[$13>>2] = $9;
 $14 = (_bitshift64Lshr(($8|0),($9|0),33)|0);
 $15 = tempRet0;
 return ($14|0);
}
function _fclose($f) {
 $f = $f|0;
 var $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 76|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)>(-1);
 if ($2) {
  (___lockfile($f)|0);
 }
 $3 = HEAP32[$f>>2]|0;
 $4 = $3 & 1;
 $5 = ($4|0)!=(0);
 if (!($5)) {
  ___lock(((784)|0));
  $6 = ((($f)) + 52|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = ($7|0)==(0|0);
  $9 = $7;
  $$pre = ((($f)) + 56|0);
  if (!($8)) {
   $10 = HEAP32[$$pre>>2]|0;
   $11 = ((($7)) + 56|0);
   HEAP32[$11>>2] = $10;
  }
  $12 = HEAP32[$$pre>>2]|0;
  $13 = ($12|0)==(0|0);
  $14 = $12;
  if (!($13)) {
   $15 = ((($12)) + 52|0);
   HEAP32[$15>>2] = $9;
  }
  $16 = HEAP32[(780)>>2]|0;
  $17 = ($16|0)==($f|0);
  if ($17) {
   HEAP32[(780)>>2] = $14;
  }
  ___unlock(((784)|0));
 }
 $18 = (_fflush($f)|0);
 $19 = ((($f)) + 12|0);
 $20 = HEAP32[$19>>2]|0;
 $21 = (FUNCTION_TABLE_ii[$20 & 127]($f)|0);
 $22 = $21 | $18;
 $23 = ((($f)) + 92|0);
 $24 = HEAP32[$23>>2]|0;
 $25 = ($24|0)==(0|0);
 if (!($25)) {
  _free($24);
 }
 if (!($5)) {
  _free($f);
 }
 return ($22|0);
}
function _fflush($f) {
 $f = $f|0;
 var $$0 = 0, $$01 = 0, $$012 = 0, $$014 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp = 0, $r$0$lcssa = 0, $r$03 = 0, $r$1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($f|0)==(0|0);
 do {
  if ($0) {
   $7 = HEAP32[812>>2]|0;
   $8 = ($7|0)==(0|0);
   if ($8) {
    $27 = 0;
   } else {
    $9 = HEAP32[812>>2]|0;
    $10 = (_fflush($9)|0);
    $27 = $10;
   }
   ___lock(((784)|0));
   $$012 = HEAP32[(780)>>2]|0;
   $11 = ($$012|0)==(0|0);
   if ($11) {
    $r$0$lcssa = $27;
   } else {
    $$014 = $$012;$r$03 = $27;
    while(1) {
     $12 = ((($$014)) + 76|0);
     $13 = HEAP32[$12>>2]|0;
     $14 = ($13|0)>(-1);
     if ($14) {
      $15 = (___lockfile($$014)|0);
      $23 = $15;
     } else {
      $23 = 0;
     }
     $16 = ((($$014)) + 20|0);
     $17 = HEAP32[$16>>2]|0;
     $18 = ((($$014)) + 28|0);
     $19 = HEAP32[$18>>2]|0;
     $20 = ($17>>>0)>($19>>>0);
     if ($20) {
      $21 = (___fflush_unlocked($$014)|0);
      $22 = $21 | $r$03;
      $r$1 = $22;
     } else {
      $r$1 = $r$03;
     }
     $24 = ($23|0)==(0);
     if (!($24)) {
      ___unlockfile($$014);
     }
     $25 = ((($$014)) + 56|0);
     $$01 = HEAP32[$25>>2]|0;
     $26 = ($$01|0)==(0|0);
     if ($26) {
      $r$0$lcssa = $r$1;
      break;
     } else {
      $$014 = $$01;$r$03 = $r$1;
     }
    }
   }
   ___unlock(((784)|0));
   $$0 = $r$0$lcssa;
  } else {
   $1 = ((($f)) + 76|0);
   $2 = HEAP32[$1>>2]|0;
   $3 = ($2|0)>(-1);
   if (!($3)) {
    $4 = (___fflush_unlocked($f)|0);
    $$0 = $4;
    break;
   }
   $5 = (___lockfile($f)|0);
   $phitmp = ($5|0)==(0);
   $6 = (___fflush_unlocked($f)|0);
   if ($phitmp) {
    $$0 = $6;
   } else {
    ___unlockfile($f);
    $$0 = $6;
   }
  }
 } while(0);
 return ($$0|0);
}
function _fgets($s,$n,$f) {
 $s = $s|0;
 $n = $n|0;
 $f = $f|0;
 var $$0 = 0, $$048 = 0, $$05 = 0, $$lcssa14 = 0, $$old2 = 0, $$pre = 0, $$sum$pre$phiZZ2D = 0, $$sum6 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $or$cond = 0, $or$cond3 = 0, $p$0 = 0, $p$1 = 0, $sext$mask = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 76|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)>(-1);
 if ($2) {
  $3 = (___lockfile($f)|0);
  $12 = $3;
 } else {
  $12 = 0;
 }
 $4 = (($n) + -1)|0;
 $5 = ($n|0)<(2);
 if ($5) {
  $6 = ((($f)) + 74|0);
  $7 = HEAP8[$6>>0]|0;
  $8 = $7 << 24 >> 24;
  $9 = (($8) + 255)|0;
  $10 = $9 | $8;
  $11 = $10&255;
  HEAP8[$6>>0] = $11;
  $13 = ($12|0)==(0);
  if (!($13)) {
   ___unlockfile($f);
  }
  $14 = ($4|0)==(0);
  if ($14) {
   HEAP8[$s>>0] = 0;
   $$0 = $s;
  } else {
   $$0 = 0;
  }
 } else {
  $$old2 = ($4|0)==(0);
  L11: do {
   if ($$old2) {
    $p$1 = $s;
    label = 18;
   } else {
    $15 = ((($f)) + 4|0);
    $16 = ((($f)) + 8|0);
    $$05 = $4;$p$0 = $s;
    while(1) {
     $17 = HEAP32[$15>>2]|0;
     $18 = HEAP32[$16>>2]|0;
     $19 = $18;
     $20 = $17;
     $21 = (($19) - ($20))|0;
     $22 = (_memchr($17,10,$21)|0);
     $23 = ($22|0)==(0|0);
     $24 = $22;
     $25 = (1 - ($20))|0;
     $26 = (($25) + ($24))|0;
     $27 = $23 ? $21 : $26;
     $28 = ($27>>>0)<($$05>>>0);
     $29 = $28 ? $27 : $$05;
     _memcpy(($p$0|0),($17|0),($29|0))|0;
     $30 = HEAP32[$15>>2]|0;
     $31 = (($30) + ($29)|0);
     HEAP32[$15>>2] = $31;
     $32 = (($p$0) + ($29)|0);
     $33 = (($$05) - ($29))|0;
     $or$cond = $23 & $28;
     if (!($or$cond)) {
      $p$1 = $32;
      label = 18;
      break L11;
     }
     $34 = HEAP32[$16>>2]|0;
     $35 = ($31>>>0)<($34>>>0);
     if ($35) {
      $$sum6 = (($29) + 1)|0;
      $36 = (($30) + ($$sum6)|0);
      HEAP32[$15>>2] = $36;
      $37 = HEAP8[$31>>0]|0;
      $38 = $37&255;
      $$sum$pre$phiZZ2D = $$sum6;$47 = $38;
     } else {
      $39 = (___uflow($f)|0);
      $40 = ($39|0)<(0);
      if ($40) {
       $$lcssa14 = $32;
       break;
      }
      $$pre = (($29) + 1)|0;
      $$sum$pre$phiZZ2D = $$pre;$47 = $39;
     }
     $45 = (($33) + -1)|0;
     $46 = $47&255;
     $48 = (($p$0) + ($$sum$pre$phiZZ2D)|0);
     HEAP8[$32>>0] = $46;
     $sext$mask = $47 & 255;
     $49 = ($sext$mask|0)!=(10);
     $50 = ($45|0)!=(0);
     $or$cond3 = $50 & $49;
     if ($or$cond3) {
      $$05 = $45;$p$0 = $48;
     } else {
      $p$1 = $48;
      label = 18;
      break L11;
     }
    }
    $41 = ($$lcssa14|0)==($s|0);
    if ($41) {
     $$048 = 0;
    } else {
     $42 = HEAP32[$f>>2]|0;
     $43 = $42 & 16;
     $44 = ($43|0)==(0);
     if ($44) {
      $$048 = 0;
     } else {
      $p$1 = $$lcssa14;
      label = 18;
     }
    }
   }
  } while(0);
  if ((label|0) == 18) {
   $51 = ($s|0)==(0|0);
   if ($51) {
    $$048 = 0;
   } else {
    HEAP8[$p$1>>0] = 0;
    $$048 = $s;
   }
  }
  $52 = ($12|0)==(0);
  if ($52) {
   $$0 = $$048;
  } else {
   ___unlockfile($f);
   $$0 = $$048;
  }
 }
 return ($$0|0);
}
function _fopen($filename,$mode) {
 $filename = $filename|0;
 $mode = $mode|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $memchr = 0, $vararg_buffer = 0, $vararg_buffer3 = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer = sp;
 $0 = HEAP8[$mode>>0]|0;
 $1 = $0 << 24 >> 24;
 $memchr = (_memchr(18013,$1,4)|0);
 $2 = ($memchr|0)==(0|0);
 if ($2) {
  $3 = (___errno_location()|0);
  HEAP32[$3>>2] = 22;
  $$0 = 0;
 } else {
  $4 = (___fmodeflags($mode)|0);
  $5 = $4 | 32768;
  HEAP32[$vararg_buffer>>2] = $filename;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = $5;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = 438;
  $6 = (___syscall5(5,($vararg_buffer|0))|0);
  $7 = (___syscall_ret($6)|0);
  $8 = ($7|0)<(0);
  if ($8) {
   $$0 = 0;
  } else {
   $9 = (___fdopen($7,$mode)|0);
   $10 = ($9|0)==(0|0);
   if ($10) {
    HEAP32[$vararg_buffer3>>2] = $7;
    (___syscall6(6,($vararg_buffer3|0))|0);
    $$0 = 0;
   } else {
    $$0 = $9;
   }
  }
 }
 STACKTOP = sp;return ($$0|0);
}
function _fprintf($f,$fmt,$varargs) {
 $f = $f|0;
 $fmt = $fmt|0;
 $varargs = $varargs|0;
 var $0 = 0, $ap = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ap = sp;
 HEAP32[$ap>>2] = $varargs;
 $0 = (_vfprintf($f,$fmt,$ap)|0);
 STACKTOP = sp;return ($0|0);
}
function _fputc($c,$f) {
 $c = $c|0;
 $f = $f|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 76|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)<(0);
 if ($2) {
  label = 3;
 } else {
  $3 = (___lockfile($f)|0);
  $4 = ($3|0)==(0);
  if ($4) {
   label = 3;
  } else {
   $18 = ((($f)) + 75|0);
   $19 = HEAP8[$18>>0]|0;
   $20 = $19 << 24 >> 24;
   $21 = ($20|0)==($c|0);
   if ($21) {
    label = 10;
   } else {
    $22 = ((($f)) + 20|0);
    $23 = HEAP32[$22>>2]|0;
    $24 = ((($f)) + 16|0);
    $25 = HEAP32[$24>>2]|0;
    $26 = ($23>>>0)<($25>>>0);
    if ($26) {
     $27 = $c&255;
     $28 = ((($23)) + 1|0);
     HEAP32[$22>>2] = $28;
     HEAP8[$23>>0] = $27;
     $29 = $c & 255;
     $31 = $29;
    } else {
     label = 10;
    }
   }
   if ((label|0) == 10) {
    $30 = (___overflow($f,$c)|0);
    $31 = $30;
   }
   ___unlockfile($f);
   $$0 = $31;
  }
 }
 do {
  if ((label|0) == 3) {
   $5 = ((($f)) + 75|0);
   $6 = HEAP8[$5>>0]|0;
   $7 = $6 << 24 >> 24;
   $8 = ($7|0)==($c|0);
   if (!($8)) {
    $9 = ((($f)) + 20|0);
    $10 = HEAP32[$9>>2]|0;
    $11 = ((($f)) + 16|0);
    $12 = HEAP32[$11>>2]|0;
    $13 = ($10>>>0)<($12>>>0);
    if ($13) {
     $14 = $c&255;
     $15 = ((($10)) + 1|0);
     HEAP32[$9>>2] = $15;
     HEAP8[$10>>0] = $14;
     $16 = $c & 255;
     $$0 = $16;
     break;
    }
   }
   $17 = (___overflow($f,$c)|0);
   $$0 = $17;
  }
 } while(0);
 return ($$0|0);
}
function _fread($destv,$size,$nmemb,$f) {
 $destv = $destv|0;
 $size = $size|0;
 $nmemb = $nmemb|0;
 $f = $f|0;
 var $$ = 0, $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $dest$0$ph = 0, $dest$02 = 0, $l$0$ph = 0, $l$03 = 0, $l$03$lcssa = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = Math_imul($nmemb, $size)|0;
 $1 = ((($f)) + 76|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)>(-1);
 if ($3) {
  $4 = (___lockfile($f)|0);
  $31 = $4;
 } else {
  $31 = 0;
 }
 $5 = ((($f)) + 74|0);
 $6 = HEAP8[$5>>0]|0;
 $7 = $6 << 24 >> 24;
 $8 = (($7) + 255)|0;
 $9 = $8 | $7;
 $10 = $9&255;
 HEAP8[$5>>0] = $10;
 $11 = ((($f)) + 8|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ((($f)) + 4|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = $12;
 $16 = $14;
 $17 = (($15) - ($16))|0;
 $18 = ($17|0)>(0);
 if ($18) {
  $19 = ($17>>>0)<($0>>>0);
  $$ = $19 ? $17 : $0;
  _memcpy(($destv|0),($14|0),($$|0))|0;
  $20 = (($14) + ($$)|0);
  HEAP32[$13>>2] = $20;
  $21 = (($destv) + ($$)|0);
  $22 = (($0) - ($$))|0;
  $dest$0$ph = $21;$l$0$ph = $22;
 } else {
  $dest$0$ph = $destv;$l$0$ph = $0;
 }
 $23 = ($l$0$ph|0)==(0);
 L7: do {
  if ($23) {
   label = 13;
  } else {
   $24 = ((($f)) + 32|0);
   $dest$02 = $dest$0$ph;$l$03 = $l$0$ph;
   while(1) {
    $25 = (___toread($f)|0);
    $26 = ($25|0)==(0);
    if (!($26)) {
     $l$03$lcssa = $l$03;
     break;
    }
    $27 = HEAP32[$24>>2]|0;
    $28 = (FUNCTION_TABLE_iiii[$27 & 255]($f,$dest$02,$l$03)|0);
    $29 = (($28) + 1)|0;
    $30 = ($29>>>0)<(2);
    if ($30) {
     $l$03$lcssa = $l$03;
     break;
    }
    $35 = (($l$03) - ($28))|0;
    $36 = (($dest$02) + ($28)|0);
    $37 = ($l$03|0)==($28|0);
    if ($37) {
     label = 13;
     break L7;
    } else {
     $dest$02 = $36;$l$03 = $35;
    }
   }
   $32 = ($31|0)==(0);
   if (!($32)) {
    ___unlockfile($f);
   }
   $33 = (($0) - ($l$03$lcssa))|0;
   $34 = (($33>>>0) / ($size>>>0))&-1;
   $$0 = $34;
  }
 } while(0);
 if ((label|0) == 13) {
  $38 = ($31|0)==(0);
  if ($38) {
   $$0 = $nmemb;
  } else {
   ___unlockfile($f);
   $$0 = $nmemb;
  }
 }
 return ($$0|0);
}
function ___fseeko_unlocked($f,$off,$whence) {
 $f = $f|0;
 $off = $off|0;
 $whence = $whence|0;
 var $$0 = 0, $$01 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($whence|0)==(1);
 if ($0) {
  $1 = ((($f)) + 8|0);
  $2 = HEAP32[$1>>2]|0;
  $3 = ((($f)) + 4|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = $2;
  $6 = $4;
  $7 = (($off) - ($5))|0;
  $8 = (($7) + ($6))|0;
  $$01 = $8;
 } else {
  $$01 = $off;
 }
 $9 = ((($f)) + 20|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ((($f)) + 28|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ($10>>>0)>($12>>>0);
 if ($13) {
  $14 = ((($f)) + 36|0);
  $15 = HEAP32[$14>>2]|0;
  (FUNCTION_TABLE_iiii[$15 & 255]($f,0,0)|0);
  $16 = HEAP32[$9>>2]|0;
  $17 = ($16|0)==(0|0);
  if ($17) {
   $$0 = -1;
  } else {
   label = 5;
  }
 } else {
  label = 5;
 }
 if ((label|0) == 5) {
  $18 = ((($f)) + 16|0);
  HEAP32[$18>>2] = 0;
  HEAP32[$11>>2] = 0;
  HEAP32[$9>>2] = 0;
  $19 = ((($f)) + 40|0);
  $20 = HEAP32[$19>>2]|0;
  $21 = (FUNCTION_TABLE_iiii[$20 & 255]($f,$$01,$whence)|0);
  $22 = ($21|0)<(0);
  if ($22) {
   $$0 = -1;
  } else {
   $23 = ((($f)) + 8|0);
   HEAP32[$23>>2] = 0;
   $24 = ((($f)) + 4|0);
   HEAP32[$24>>2] = 0;
   $25 = HEAP32[$f>>2]|0;
   $26 = $25 & -17;
   HEAP32[$f>>2] = $26;
   $$0 = 0;
  }
 }
 return ($$0|0);
}
function ___fseeko($f,$off,$whence) {
 $f = $f|0;
 $off = $off|0;
 $whence = $whence|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 76|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)>(-1);
 if ($2) {
  $4 = (___lockfile($f)|0);
  $phitmp = ($4|0)==(0);
  $5 = (___fseeko_unlocked($f,$off,$whence)|0);
  if ($phitmp) {
   $6 = $5;
  } else {
   ___unlockfile($f);
   $6 = $5;
  }
 } else {
  $3 = (___fseeko_unlocked($f,$off,$whence)|0);
  $6 = $3;
 }
 return ($6|0);
}
function _fseek($f,$off,$whence) {
 $f = $f|0;
 $off = $off|0;
 $whence = $whence|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (___fseeko($f,$off,$whence)|0);
 return ($0|0);
}
function ___ftello_unlocked($f) {
 $f = $f|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 40|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$f>>2]|0;
 $3 = $2 & 128;
 $4 = ($3|0)==(0);
 if ($4) {
  $10 = 1;
 } else {
  $5 = ((($f)) + 20|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = ((($f)) + 28|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = ($6>>>0)>($8>>>0);
  $phitmp = $9 ? 2 : 1;
  $10 = $phitmp;
 }
 $11 = (FUNCTION_TABLE_iiii[$1 & 255]($f,0,$10)|0);
 $12 = ($11|0)<(0);
 if ($12) {
  $$0 = $11;
 } else {
  $13 = ((($f)) + 8|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = ((($f)) + 4|0);
  $16 = HEAP32[$15>>2]|0;
  $17 = $14;
  $18 = $16;
  $19 = ((($f)) + 20|0);
  $20 = HEAP32[$19>>2]|0;
  $21 = ((($f)) + 28|0);
  $22 = HEAP32[$21>>2]|0;
  $23 = $20;
  $24 = $22;
  $25 = (($11) - ($17))|0;
  $26 = (($25) + ($18))|0;
  $27 = (($26) + ($23))|0;
  $28 = (($27) - ($24))|0;
  $$0 = $28;
 }
 return ($$0|0);
}
function ___ftello($f) {
 $f = $f|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 76|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)>(-1);
 if ($2) {
  $4 = (___lockfile($f)|0);
  $phitmp = ($4|0)==(0);
  $5 = (___ftello_unlocked($f)|0);
  if ($phitmp) {
   $6 = $5;
  } else {
   ___unlockfile($f);
   $6 = $5;
  }
 } else {
  $3 = (___ftello_unlocked($f)|0);
  $6 = $3;
 }
 return ($6|0);
}
function _ftell($f) {
 $f = $f|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (___ftello($f)|0);
 return ($0|0);
}
function ___fwritex($s,$l,$f) {
 $s = $s|0;
 $l = $l|0;
 $f = $f|0;
 var $$0 = 0, $$01 = 0, $$02 = 0, $$pre = 0, $$pre6 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i$0 = 0, $i$0$lcssa10 = 0;
 var $i$1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 16|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0|0);
 if ($2) {
  $3 = (___towrite($f)|0);
  $4 = ($3|0)==(0);
  if ($4) {
   $$pre = HEAP32[$0>>2]|0;
   $7 = $$pre;
   label = 4;
  } else {
   $$0 = 0;
  }
 } else {
  $7 = $1;
  label = 4;
 }
 L4: do {
  if ((label|0) == 4) {
   $5 = ((($f)) + 20|0);
   $6 = HEAP32[$5>>2]|0;
   $8 = $7;
   $9 = $6;
   $10 = (($8) - ($9))|0;
   $11 = ($10>>>0)<($l>>>0);
   if ($11) {
    $12 = ((($f)) + 36|0);
    $13 = HEAP32[$12>>2]|0;
    $14 = (FUNCTION_TABLE_iiii[$13 & 255]($f,$s,$l)|0);
    $$0 = $14;
    break;
   }
   $15 = ((($f)) + 75|0);
   $16 = HEAP8[$15>>0]|0;
   $17 = ($16<<24>>24)>(-1);
   L9: do {
    if ($17) {
     $i$0 = $l;
     while(1) {
      $18 = ($i$0|0)==(0);
      if ($18) {
       $$01 = $l;$$02 = $s;$29 = $6;$i$1 = 0;
       break L9;
      }
      $19 = (($i$0) + -1)|0;
      $20 = (($s) + ($19)|0);
      $21 = HEAP8[$20>>0]|0;
      $22 = ($21<<24>>24)==(10);
      if ($22) {
       $i$0$lcssa10 = $i$0;
       break;
      } else {
       $i$0 = $19;
      }
     }
     $23 = ((($f)) + 36|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = (FUNCTION_TABLE_iiii[$24 & 255]($f,$s,$i$0$lcssa10)|0);
     $26 = ($25>>>0)<($i$0$lcssa10>>>0);
     if ($26) {
      $$0 = $i$0$lcssa10;
      break L4;
     }
     $27 = (($s) + ($i$0$lcssa10)|0);
     $28 = (($l) - ($i$0$lcssa10))|0;
     $$pre6 = HEAP32[$5>>2]|0;
     $$01 = $28;$$02 = $27;$29 = $$pre6;$i$1 = $i$0$lcssa10;
    } else {
     $$01 = $l;$$02 = $s;$29 = $6;$i$1 = 0;
    }
   } while(0);
   _memcpy(($29|0),($$02|0),($$01|0))|0;
   $30 = HEAP32[$5>>2]|0;
   $31 = (($30) + ($$01)|0);
   HEAP32[$5>>2] = $31;
   $32 = (($i$1) + ($$01))|0;
   $$0 = $32;
  }
 } while(0);
 return ($$0|0);
}
function _fwrite($src,$size,$nmemb,$f) {
 $src = $src|0;
 $size = $size|0;
 $nmemb = $nmemb|0;
 $f = $f|0;
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = Math_imul($nmemb, $size)|0;
 $1 = ((($f)) + 76|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)>(-1);
 if ($3) {
  $5 = (___lockfile($f)|0);
  $phitmp = ($5|0)==(0);
  $6 = (___fwritex($src,$0,$f)|0);
  if ($phitmp) {
   $7 = $6;
  } else {
   ___unlockfile($f);
   $7 = $6;
  }
 } else {
  $4 = (___fwritex($src,$0,$f)|0);
  $7 = $4;
 }
 $8 = ($7|0)==($0|0);
 if ($8) {
  $10 = $nmemb;
 } else {
  $9 = (($7>>>0) / ($size>>>0))&-1;
  $10 = $9;
 }
 return ($10|0);
}
function _printf($fmt,$varargs) {
 $fmt = $fmt|0;
 $varargs = $varargs|0;
 var $0 = 0, $1 = 0, $ap = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ap = sp;
 HEAP32[$ap>>2] = $varargs;
 $0 = HEAP32[808>>2]|0;
 $1 = (_vfprintf($0,$fmt,$ap)|0);
 STACKTOP = sp;return ($1|0);
}
function _putchar($c) {
 $c = $c|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[808>>2]|0;
 $1 = (_fputc($c,$0)|0);
 return ($1|0);
}
function _sprintf($s,$fmt,$varargs) {
 $s = $s|0;
 $fmt = $fmt|0;
 $varargs = $varargs|0;
 var $0 = 0, $ap = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ap = sp;
 HEAP32[$ap>>2] = $varargs;
 $0 = (_vsprintf($s,$fmt,$ap)|0);
 STACKTOP = sp;return ($0|0);
}
function _vfprintf($f,$fmt,$ap) {
 $f = $f|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 var $$ = 0, $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $ap2 = 0, $internal_buf = 0, $nl_arg = 0, $nl_type = 0;
 var $ret$1 = 0, $ret$1$ = 0, $vacopy_currentptr = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ap2 = sp + 120|0;
 $nl_type = sp + 80|0;
 $nl_arg = sp;
 $internal_buf = sp + 136|0;
 dest=$nl_type; stop=dest+40|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $vacopy_currentptr = HEAP32[$ap>>2]|0;
 HEAP32[$ap2>>2] = $vacopy_currentptr;
 $0 = (_printf_core(0,$fmt,$ap2,$nl_arg,$nl_type)|0);
 $1 = ($0|0)<(0);
 if ($1) {
  $$0 = -1;
 } else {
  $2 = ((($f)) + 76|0);
  $3 = HEAP32[$2>>2]|0;
  $4 = ($3|0)>(-1);
  if ($4) {
   $5 = (___lockfile($f)|0);
   $32 = $5;
  } else {
   $32 = 0;
  }
  $6 = HEAP32[$f>>2]|0;
  $7 = $6 & 32;
  $8 = ((($f)) + 74|0);
  $9 = HEAP8[$8>>0]|0;
  $10 = ($9<<24>>24)<(1);
  if ($10) {
   $11 = $6 & -33;
   HEAP32[$f>>2] = $11;
  }
  $12 = ((($f)) + 48|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = ($13|0)==(0);
  if ($14) {
   $16 = ((($f)) + 44|0);
   $17 = HEAP32[$16>>2]|0;
   HEAP32[$16>>2] = $internal_buf;
   $18 = ((($f)) + 28|0);
   HEAP32[$18>>2] = $internal_buf;
   $19 = ((($f)) + 20|0);
   HEAP32[$19>>2] = $internal_buf;
   HEAP32[$12>>2] = 80;
   $20 = ((($internal_buf)) + 80|0);
   $21 = ((($f)) + 16|0);
   HEAP32[$21>>2] = $20;
   $22 = (_printf_core($f,$fmt,$ap2,$nl_arg,$nl_type)|0);
   $23 = ($17|0)==(0|0);
   if ($23) {
    $ret$1 = $22;
   } else {
    $24 = ((($f)) + 36|0);
    $25 = HEAP32[$24>>2]|0;
    (FUNCTION_TABLE_iiii[$25 & 255]($f,0,0)|0);
    $26 = HEAP32[$19>>2]|0;
    $27 = ($26|0)==(0|0);
    $$ = $27 ? -1 : $22;
    HEAP32[$16>>2] = $17;
    HEAP32[$12>>2] = 0;
    HEAP32[$21>>2] = 0;
    HEAP32[$18>>2] = 0;
    HEAP32[$19>>2] = 0;
    $ret$1 = $$;
   }
  } else {
   $15 = (_printf_core($f,$fmt,$ap2,$nl_arg,$nl_type)|0);
   $ret$1 = $15;
  }
  $28 = HEAP32[$f>>2]|0;
  $29 = $28 & 32;
  $30 = ($29|0)==(0);
  $ret$1$ = $30 ? $ret$1 : -1;
  $31 = $28 | $7;
  HEAP32[$f>>2] = $31;
  $33 = ($32|0)==(0);
  if (!($33)) {
   ___unlockfile($f);
  }
  $$0 = $ret$1$;
 }
 STACKTOP = sp;return ($$0|0);
}
function _vprintf($fmt,$ap) {
 $fmt = $fmt|0;
 $ap = $ap|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[808>>2]|0;
 $1 = (_vfprintf($0,$fmt,$ap)|0);
 return ($1|0);
}
function _vsnprintf($s,$n,$fmt,$ap) {
 $s = $s|0;
 $n = $n|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 var $$$02 = 0, $$0 = 0, $$01 = 0, $$02 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $b = 0, $f = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $b = sp + 112|0;
 $f = sp;
 dest=$f; src=852; stop=dest+112|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
 $0 = (($n) + -1)|0;
 $1 = ($0>>>0)>(2147483646);
 if ($1) {
  $2 = ($n|0)==(0);
  if ($2) {
   $$01 = $b;$$02 = 1;
   label = 4;
  } else {
   $3 = (___errno_location()|0);
   HEAP32[$3>>2] = 75;
   $$0 = -1;
  }
 } else {
  $$01 = $s;$$02 = $n;
  label = 4;
 }
 if ((label|0) == 4) {
  $4 = $$01;
  $5 = (-2 - ($4))|0;
  $6 = ($$02>>>0)>($5>>>0);
  $$$02 = $6 ? $5 : $$02;
  $7 = ((($f)) + 48|0);
  HEAP32[$7>>2] = $$$02;
  $8 = ((($f)) + 20|0);
  HEAP32[$8>>2] = $$01;
  $9 = ((($f)) + 44|0);
  HEAP32[$9>>2] = $$01;
  $10 = (($$01) + ($$$02)|0);
  $11 = ((($f)) + 16|0);
  HEAP32[$11>>2] = $10;
  $12 = ((($f)) + 28|0);
  HEAP32[$12>>2] = $10;
  $13 = (_vfprintf($f,$fmt,$ap)|0);
  $14 = ($$$02|0)==(0);
  if ($14) {
   $$0 = $13;
  } else {
   $15 = HEAP32[$8>>2]|0;
   $16 = HEAP32[$11>>2]|0;
   $17 = ($15|0)==($16|0);
   $18 = $17 << 31 >> 31;
   $19 = (($15) + ($18)|0);
   HEAP8[$19>>0] = 0;
   $$0 = $13;
  }
 }
 STACKTOP = sp;return ($$0|0);
}
function _vsprintf($s,$fmt,$ap) {
 $s = $s|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_vsnprintf($s,2147483647,$fmt,$ap)|0);
 return ($0|0);
}
function ___fdopen($fd,$mode) {
 $fd = $fd|0;
 $mode = $mode|0;
 var $$0 = 0, $$pre = 0, $$pre1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $memchr = 0, $tio = 0, $vararg_buffer = 0, $vararg_buffer12 = 0, $vararg_buffer3 = 0, $vararg_buffer7 = 0, $vararg_ptr1 = 0, $vararg_ptr10 = 0, $vararg_ptr11 = 0, $vararg_ptr15 = 0, $vararg_ptr16 = 0, $vararg_ptr2 = 0, $vararg_ptr6 = 0, dest = 0, label = 0;
 var sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer12 = sp + 40|0;
 $vararg_buffer7 = sp + 24|0;
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer = sp;
 $tio = sp + 52|0;
 $0 = HEAP8[$mode>>0]|0;
 $1 = $0 << 24 >> 24;
 $memchr = (_memchr(18013,$1,4)|0);
 $2 = ($memchr|0)==(0|0);
 if ($2) {
  $3 = (___errno_location()|0);
  HEAP32[$3>>2] = 22;
  $$0 = 0;
 } else {
  $4 = (_malloc(1144)|0);
  $5 = ($4|0)==(0|0);
  if ($5) {
   $$0 = 0;
  } else {
   dest=$4; stop=dest+112|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
   $6 = (_strchr($mode,43)|0);
   $7 = ($6|0)==(0|0);
   if ($7) {
    $8 = ($0<<24>>24)==(114);
    $9 = $8 ? 8 : 4;
    HEAP32[$4>>2] = $9;
   }
   $10 = (_strchr($mode,101)|0);
   $11 = ($10|0)==(0|0);
   if ($11) {
    $12 = $0;
   } else {
    HEAP32[$vararg_buffer>>2] = $fd;
    $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
    HEAP32[$vararg_ptr1>>2] = 2;
    $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
    HEAP32[$vararg_ptr2>>2] = 1;
    (___syscall221(221,($vararg_buffer|0))|0);
    $$pre = HEAP8[$mode>>0]|0;
    $12 = $$pre;
   }
   $13 = ($12<<24>>24)==(97);
   if ($13) {
    HEAP32[$vararg_buffer3>>2] = $fd;
    $vararg_ptr6 = ((($vararg_buffer3)) + 4|0);
    HEAP32[$vararg_ptr6>>2] = 3;
    $14 = (___syscall221(221,($vararg_buffer3|0))|0);
    $15 = $14 & 1024;
    $16 = ($15|0)==(0);
    if ($16) {
     $17 = $14 | 1024;
     HEAP32[$vararg_buffer7>>2] = $fd;
     $vararg_ptr10 = ((($vararg_buffer7)) + 4|0);
     HEAP32[$vararg_ptr10>>2] = 4;
     $vararg_ptr11 = ((($vararg_buffer7)) + 8|0);
     HEAP32[$vararg_ptr11>>2] = $17;
     (___syscall221(221,($vararg_buffer7|0))|0);
    }
    $18 = HEAP32[$4>>2]|0;
    $19 = $18 | 128;
    HEAP32[$4>>2] = $19;
    $26 = $19;
   } else {
    $$pre1 = HEAP32[$4>>2]|0;
    $26 = $$pre1;
   }
   $20 = ((($4)) + 60|0);
   HEAP32[$20>>2] = $fd;
   $21 = ((($4)) + 120|0);
   $22 = ((($4)) + 44|0);
   HEAP32[$22>>2] = $21;
   $23 = ((($4)) + 48|0);
   HEAP32[$23>>2] = 1024;
   $24 = ((($4)) + 75|0);
   HEAP8[$24>>0] = -1;
   $25 = $26 & 8;
   $27 = ($25|0)==(0);
   if ($27) {
    HEAP32[$vararg_buffer12>>2] = $fd;
    $vararg_ptr15 = ((($vararg_buffer12)) + 4|0);
    HEAP32[$vararg_ptr15>>2] = 21505;
    $vararg_ptr16 = ((($vararg_buffer12)) + 8|0);
    HEAP32[$vararg_ptr16>>2] = $tio;
    $28 = (___syscall54(54,($vararg_buffer12|0))|0);
    $29 = ($28|0)==(0);
    if ($29) {
     HEAP8[$24>>0] = 10;
    }
   }
   $30 = ((($4)) + 32|0);
   HEAP32[$30>>2] = 103;
   $31 = ((($4)) + 36|0);
   HEAP32[$31>>2] = 101;
   $32 = ((($4)) + 40|0);
   HEAP32[$32>>2] = 102;
   $33 = ((($4)) + 12|0);
   HEAP32[$33>>2] = 100;
   $34 = HEAP32[(760)>>2]|0;
   $35 = ($34|0)==(0);
   if ($35) {
    $36 = ((($4)) + 76|0);
    HEAP32[$36>>2] = -1;
   }
   ___lock(((784)|0));
   $37 = HEAP32[(780)>>2]|0;
   $38 = ((($4)) + 56|0);
   HEAP32[$38>>2] = $37;
   $39 = ($37|0)==(0);
   if (!($39)) {
    $40 = $37;
    $41 = ((($40)) + 52|0);
    HEAP32[$41>>2] = $4;
   }
   HEAP32[(780)>>2] = $4;
   ___unlock(((784)|0));
   $$0 = $4;
  }
 }
 STACKTOP = sp;return ($$0|0);
}
function ___fmodeflags($mode) {
 $mode = $mode|0;
 var $$ = 0, $$flags$4 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $flags$0 = 0, $flags$0$ = 0, $flags$2 = 0;
 var $flags$2$ = 0, $flags$4 = 0, $not$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_strchr($mode,43)|0);
 $1 = ($0|0)==(0|0);
 $2 = HEAP8[$mode>>0]|0;
 $not$ = ($2<<24>>24)!=(114);
 $$ = $not$&1;
 $flags$0 = $1 ? $$ : 2;
 $3 = (_strchr($mode,120)|0);
 $4 = ($3|0)==(0|0);
 $5 = $flags$0 | 128;
 $flags$0$ = $4 ? $flags$0 : $5;
 $6 = (_strchr($mode,101)|0);
 $7 = ($6|0)==(0|0);
 $8 = $flags$0$ | 524288;
 $flags$2 = $7 ? $flags$0$ : $8;
 $9 = ($2<<24>>24)==(114);
 $10 = $flags$2 | 64;
 $flags$2$ = $9 ? $flags$2 : $10;
 $11 = ($2<<24>>24)==(119);
 $12 = $flags$2$ | 512;
 $flags$4 = $11 ? $12 : $flags$2$;
 $13 = ($2<<24>>24)==(97);
 $14 = $flags$4 | 1024;
 $$flags$4 = $13 ? $14 : $flags$4;
 return ($$flags$4|0);
}
function ___lockfile($f) {
 $f = $f|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function ___unlockfile($f) {
 $f = $f|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function ___overflow($f,$_c) {
 $f = $f|0;
 $_c = $_c|0;
 var $$0 = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $c = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $c = sp;
 $0 = $_c&255;
 HEAP8[$c>>0] = $0;
 $1 = ((($f)) + 16|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0|0);
 if ($3) {
  $4 = (___towrite($f)|0);
  $5 = ($4|0)==(0);
  if ($5) {
   $$pre = HEAP32[$1>>2]|0;
   $9 = $$pre;
   label = 4;
  } else {
   $$0 = -1;
  }
 } else {
  $9 = $2;
  label = 4;
 }
 do {
  if ((label|0) == 4) {
   $6 = ((($f)) + 20|0);
   $7 = HEAP32[$6>>2]|0;
   $8 = ($7>>>0)<($9>>>0);
   if ($8) {
    $10 = $_c & 255;
    $11 = ((($f)) + 75|0);
    $12 = HEAP8[$11>>0]|0;
    $13 = $12 << 24 >> 24;
    $14 = ($10|0)==($13|0);
    if (!($14)) {
     $15 = ((($7)) + 1|0);
     HEAP32[$6>>2] = $15;
     HEAP8[$7>>0] = $0;
     $$0 = $10;
     break;
    }
   }
   $16 = ((($f)) + 36|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = (FUNCTION_TABLE_iiii[$17 & 255]($f,$c,1)|0);
   $19 = ($18|0)==(1);
   if ($19) {
    $20 = HEAP8[$c>>0]|0;
    $21 = $20&255;
    $$0 = $21;
   } else {
    $$0 = -1;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function ___stdio_close($f) {
 $f = $f|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer = sp;
 $0 = ((($f)) + 60|0);
 $1 = HEAP32[$0>>2]|0;
 HEAP32[$vararg_buffer>>2] = $1;
 $2 = (___syscall6(6,($vararg_buffer|0))|0);
 $3 = (___syscall_ret($2)|0);
 STACKTOP = sp;return ($3|0);
}
function ___stdio_read($f,$buf,$len) {
 $f = $f|0;
 $buf = $buf|0;
 $len = $len|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $cnt$0 = 0, $iov = 0, $vararg_buffer = 0, $vararg_buffer3 = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr6 = 0, $vararg_ptr7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer = sp;
 $iov = sp + 32|0;
 HEAP32[$iov>>2] = $buf;
 $0 = ((($iov)) + 4|0);
 $1 = ((($f)) + 48|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)!=(0);
 $4 = $3&1;
 $5 = (($len) - ($4))|0;
 HEAP32[$0>>2] = $5;
 $6 = ((($iov)) + 8|0);
 $7 = ((($f)) + 44|0);
 $8 = HEAP32[$7>>2]|0;
 HEAP32[$6>>2] = $8;
 $9 = ((($iov)) + 12|0);
 HEAP32[$9>>2] = $2;
 $10 = HEAP32[756>>2]|0;
 $11 = ($10|0)==(0|0);
 if ($11) {
  $16 = ((($f)) + 60|0);
  $17 = HEAP32[$16>>2]|0;
  HEAP32[$vararg_buffer3>>2] = $17;
  $vararg_ptr6 = ((($vararg_buffer3)) + 4|0);
  HEAP32[$vararg_ptr6>>2] = $iov;
  $vararg_ptr7 = ((($vararg_buffer3)) + 8|0);
  HEAP32[$vararg_ptr7>>2] = 2;
  $18 = (___syscall145(145,($vararg_buffer3|0))|0);
  $19 = (___syscall_ret($18)|0);
  $cnt$0 = $19;
 } else {
  _pthread_cleanup_push((169|0),($f|0));
  $12 = ((($f)) + 60|0);
  $13 = HEAP32[$12>>2]|0;
  HEAP32[$vararg_buffer>>2] = $13;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = $iov;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = 2;
  $14 = (___syscall145(145,($vararg_buffer|0))|0);
  $15 = (___syscall_ret($14)|0);
  _pthread_cleanup_pop(0);
  $cnt$0 = $15;
 }
 $20 = ($cnt$0|0)<(1);
 if ($20) {
  $21 = $cnt$0 & 48;
  $22 = $21 ^ 16;
  $23 = HEAP32[$f>>2]|0;
  $24 = $23 | $22;
  HEAP32[$f>>2] = $24;
  $25 = ((($f)) + 8|0);
  HEAP32[$25>>2] = 0;
  $26 = ((($f)) + 4|0);
  HEAP32[$26>>2] = 0;
  $$0 = $cnt$0;
 } else {
  $27 = HEAP32[$0>>2]|0;
  $28 = ($cnt$0>>>0)>($27>>>0);
  if ($28) {
   $29 = (($cnt$0) - ($27))|0;
   $30 = HEAP32[$7>>2]|0;
   $31 = ((($f)) + 4|0);
   HEAP32[$31>>2] = $30;
   $32 = $30;
   $33 = (($32) + ($29)|0);
   $34 = ((($f)) + 8|0);
   HEAP32[$34>>2] = $33;
   $35 = HEAP32[$1>>2]|0;
   $36 = ($35|0)==(0);
   if ($36) {
    $$0 = $len;
   } else {
    $37 = ((($32)) + 1|0);
    HEAP32[$31>>2] = $37;
    $38 = HEAP8[$32>>0]|0;
    $39 = (($len) + -1)|0;
    $40 = (($buf) + ($39)|0);
    HEAP8[$40>>0] = $38;
    $$0 = $len;
   }
  } else {
   $$0 = $cnt$0;
  }
 }
 STACKTOP = sp;return ($$0|0);
}
function ___stdio_seek($f,$off,$whence) {
 $f = $f|0;
 $off = $off|0;
 $whence = $whence|0;
 var $$pre = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $ret = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer = sp;
 $ret = sp + 20|0;
 $0 = ((($f)) + 60|0);
 $1 = HEAP32[$0>>2]|0;
 HEAP32[$vararg_buffer>>2] = $1;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = 0;
 $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
 HEAP32[$vararg_ptr2>>2] = $off;
 $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
 HEAP32[$vararg_ptr3>>2] = $ret;
 $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
 HEAP32[$vararg_ptr4>>2] = $whence;
 $2 = (___syscall140(140,($vararg_buffer|0))|0);
 $3 = (___syscall_ret($2)|0);
 $4 = ($3|0)<(0);
 if ($4) {
  HEAP32[$ret>>2] = -1;
  $5 = -1;
 } else {
  $$pre = HEAP32[$ret>>2]|0;
  $5 = $$pre;
 }
 STACKTOP = sp;return ($5|0);
}
function ___stdio_write($f,$buf,$len) {
 $f = $f|0;
 $buf = $buf|0;
 $len = $len|0;
 var $$0 = 0, $$phi$trans$insert = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $cnt$0 = 0, $cnt$1 = 0, $iov$0 = 0, $iov$0$lcssa11 = 0, $iov$1 = 0, $iovcnt$0 = 0;
 var $iovcnt$0$lcssa12 = 0, $iovcnt$1 = 0, $iovs = 0, $rem$0 = 0, $vararg_buffer = 0, $vararg_buffer3 = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr6 = 0, $vararg_ptr7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer = sp;
 $iovs = sp + 32|0;
 $0 = ((($f)) + 28|0);
 $1 = HEAP32[$0>>2]|0;
 HEAP32[$iovs>>2] = $1;
 $2 = ((($iovs)) + 4|0);
 $3 = ((($f)) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = $4;
 $6 = (($5) - ($1))|0;
 HEAP32[$2>>2] = $6;
 $7 = ((($iovs)) + 8|0);
 HEAP32[$7>>2] = $buf;
 $8 = ((($iovs)) + 12|0);
 HEAP32[$8>>2] = $len;
 $9 = (($6) + ($len))|0;
 $10 = ((($f)) + 60|0);
 $11 = ((($f)) + 44|0);
 $iov$0 = $iovs;$iovcnt$0 = 2;$rem$0 = $9;
 while(1) {
  $12 = HEAP32[756>>2]|0;
  $13 = ($12|0)==(0|0);
  if ($13) {
   $17 = HEAP32[$10>>2]|0;
   HEAP32[$vararg_buffer3>>2] = $17;
   $vararg_ptr6 = ((($vararg_buffer3)) + 4|0);
   HEAP32[$vararg_ptr6>>2] = $iov$0;
   $vararg_ptr7 = ((($vararg_buffer3)) + 8|0);
   HEAP32[$vararg_ptr7>>2] = $iovcnt$0;
   $18 = (___syscall146(146,($vararg_buffer3|0))|0);
   $19 = (___syscall_ret($18)|0);
   $cnt$0 = $19;
  } else {
   _pthread_cleanup_push((170|0),($f|0));
   $14 = HEAP32[$10>>2]|0;
   HEAP32[$vararg_buffer>>2] = $14;
   $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
   HEAP32[$vararg_ptr1>>2] = $iov$0;
   $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
   HEAP32[$vararg_ptr2>>2] = $iovcnt$0;
   $15 = (___syscall146(146,($vararg_buffer|0))|0);
   $16 = (___syscall_ret($15)|0);
   _pthread_cleanup_pop(0);
   $cnt$0 = $16;
  }
  $20 = ($rem$0|0)==($cnt$0|0);
  if ($20) {
   label = 6;
   break;
  }
  $27 = ($cnt$0|0)<(0);
  if ($27) {
   $iov$0$lcssa11 = $iov$0;$iovcnt$0$lcssa12 = $iovcnt$0;
   label = 8;
   break;
  }
  $35 = (($rem$0) - ($cnt$0))|0;
  $36 = ((($iov$0)) + 4|0);
  $37 = HEAP32[$36>>2]|0;
  $38 = ($cnt$0>>>0)>($37>>>0);
  if ($38) {
   $39 = HEAP32[$11>>2]|0;
   HEAP32[$0>>2] = $39;
   HEAP32[$3>>2] = $39;
   $40 = (($cnt$0) - ($37))|0;
   $41 = ((($iov$0)) + 8|0);
   $42 = (($iovcnt$0) + -1)|0;
   $$phi$trans$insert = ((($iov$0)) + 12|0);
   $$pre = HEAP32[$$phi$trans$insert>>2]|0;
   $50 = $$pre;$cnt$1 = $40;$iov$1 = $41;$iovcnt$1 = $42;
  } else {
   $43 = ($iovcnt$0|0)==(2);
   if ($43) {
    $44 = HEAP32[$0>>2]|0;
    $45 = (($44) + ($cnt$0)|0);
    HEAP32[$0>>2] = $45;
    $50 = $37;$cnt$1 = $cnt$0;$iov$1 = $iov$0;$iovcnt$1 = 2;
   } else {
    $50 = $37;$cnt$1 = $cnt$0;$iov$1 = $iov$0;$iovcnt$1 = $iovcnt$0;
   }
  }
  $46 = HEAP32[$iov$1>>2]|0;
  $47 = (($46) + ($cnt$1)|0);
  HEAP32[$iov$1>>2] = $47;
  $48 = ((($iov$1)) + 4|0);
  $49 = (($50) - ($cnt$1))|0;
  HEAP32[$48>>2] = $49;
  $iov$0 = $iov$1;$iovcnt$0 = $iovcnt$1;$rem$0 = $35;
 }
 if ((label|0) == 6) {
  $21 = HEAP32[$11>>2]|0;
  $22 = ((($f)) + 48|0);
  $23 = HEAP32[$22>>2]|0;
  $24 = (($21) + ($23)|0);
  $25 = ((($f)) + 16|0);
  HEAP32[$25>>2] = $24;
  $26 = $21;
  HEAP32[$0>>2] = $26;
  HEAP32[$3>>2] = $26;
  $$0 = $len;
 }
 else if ((label|0) == 8) {
  $28 = ((($f)) + 16|0);
  HEAP32[$28>>2] = 0;
  HEAP32[$0>>2] = 0;
  HEAP32[$3>>2] = 0;
  $29 = HEAP32[$f>>2]|0;
  $30 = $29 | 32;
  HEAP32[$f>>2] = $30;
  $31 = ($iovcnt$0$lcssa12|0)==(2);
  if ($31) {
   $$0 = 0;
  } else {
   $32 = ((($iov$0$lcssa11)) + 4|0);
   $33 = HEAP32[$32>>2]|0;
   $34 = (($len) - ($33))|0;
   $$0 = $34;
  }
 }
 STACKTOP = sp;return ($$0|0);
}
function ___stdout_write($f,$buf,$len) {
 $f = $f|0;
 $buf = $buf|0;
 $len = $len|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $tio = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer = sp;
 $tio = sp + 12|0;
 $0 = ((($f)) + 36|0);
 HEAP32[$0>>2] = 101;
 $1 = HEAP32[$f>>2]|0;
 $2 = $1 & 64;
 $3 = ($2|0)==(0);
 if ($3) {
  $4 = ((($f)) + 60|0);
  $5 = HEAP32[$4>>2]|0;
  HEAP32[$vararg_buffer>>2] = $5;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 21505;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = $tio;
  $6 = (___syscall54(54,($vararg_buffer|0))|0);
  $7 = ($6|0)==(0);
  if (!($7)) {
   $8 = ((($f)) + 75|0);
   HEAP8[$8>>0] = -1;
  }
 }
 $9 = (___stdio_write($f,$buf,$len)|0);
 STACKTOP = sp;return ($9|0);
}
function ___toread($f) {
 $f = $f|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 74|0);
 $1 = HEAP8[$0>>0]|0;
 $2 = $1 << 24 >> 24;
 $3 = (($2) + 255)|0;
 $4 = $3 | $2;
 $5 = $4&255;
 HEAP8[$0>>0] = $5;
 $6 = ((($f)) + 20|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($f)) + 44|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ($7>>>0)>($9>>>0);
 if ($10) {
  $11 = ((($f)) + 36|0);
  $12 = HEAP32[$11>>2]|0;
  (FUNCTION_TABLE_iiii[$12 & 255]($f,0,0)|0);
 }
 $13 = ((($f)) + 16|0);
 HEAP32[$13>>2] = 0;
 $14 = ((($f)) + 28|0);
 HEAP32[$14>>2] = 0;
 HEAP32[$6>>2] = 0;
 $15 = HEAP32[$f>>2]|0;
 $16 = $15 & 20;
 $17 = ($16|0)==(0);
 if ($17) {
  $21 = HEAP32[$8>>2]|0;
  $22 = ((($f)) + 8|0);
  HEAP32[$22>>2] = $21;
  $23 = ((($f)) + 4|0);
  HEAP32[$23>>2] = $21;
  $$0 = 0;
 } else {
  $18 = $15 & 4;
  $19 = ($18|0)==(0);
  if ($19) {
   $$0 = -1;
  } else {
   $20 = $15 | 32;
   HEAP32[$f>>2] = $20;
   $$0 = -1;
  }
 }
 return ($$0|0);
}
function ___towrite($f) {
 $f = $f|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 74|0);
 $1 = HEAP8[$0>>0]|0;
 $2 = $1 << 24 >> 24;
 $3 = (($2) + 255)|0;
 $4 = $3 | $2;
 $5 = $4&255;
 HEAP8[$0>>0] = $5;
 $6 = HEAP32[$f>>2]|0;
 $7 = $6 & 8;
 $8 = ($7|0)==(0);
 if ($8) {
  $10 = ((($f)) + 8|0);
  HEAP32[$10>>2] = 0;
  $11 = ((($f)) + 4|0);
  HEAP32[$11>>2] = 0;
  $12 = ((($f)) + 44|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = ((($f)) + 28|0);
  HEAP32[$14>>2] = $13;
  $15 = ((($f)) + 20|0);
  HEAP32[$15>>2] = $13;
  $16 = $13;
  $17 = ((($f)) + 48|0);
  $18 = HEAP32[$17>>2]|0;
  $19 = (($16) + ($18)|0);
  $20 = ((($f)) + 16|0);
  HEAP32[$20>>2] = $19;
  $$0 = 0;
 } else {
  $9 = $6 | 32;
  HEAP32[$f>>2] = $9;
  $$0 = -1;
 }
 return ($$0|0);
}
function ___uflow($f) {
 $f = $f|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $c = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $c = sp;
 $0 = ((($f)) + 8|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0|0);
 if ($2) {
  $3 = (___toread($f)|0);
  $4 = ($3|0)==(0);
  if ($4) {
   label = 3;
  } else {
   $$0 = -1;
  }
 } else {
  label = 3;
 }
 if ((label|0) == 3) {
  $5 = ((($f)) + 32|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = (FUNCTION_TABLE_iiii[$6 & 255]($f,$c,1)|0);
  $8 = ($7|0)==(1);
  if ($8) {
   $9 = HEAP8[$c>>0]|0;
   $10 = $9&255;
   $$0 = $10;
  } else {
   $$0 = -1;
  }
 }
 STACKTOP = sp;return ($$0|0);
}
function _atoi($s) {
 $s = $s|0;
 var $$0 = 0, $$0$lcssa = 0, $$1$ph = 0, $$13 = 0, $$lcssa9 = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $isdigit = 0, $isdigit2 = 0, $isdigittmp = 0, $isdigittmp1 = 0, $isdigittmp5 = 0, $n$0$lcssa = 0, $n$04 = 0, $neg$0 = 0, $neg$1$ph = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$0 = $s;
 while(1) {
  $0 = HEAP8[$$0>>0]|0;
  $1 = $0 << 24 >> 24;
  $2 = (_isspace($1)|0);
  $3 = ($2|0)==(0);
  $4 = ((($$0)) + 1|0);
  if ($3) {
   $$0$lcssa = $$0;$$lcssa9 = $4;
   break;
  } else {
   $$0 = $4;
  }
 }
 $5 = HEAP8[$$0$lcssa>>0]|0;
 $6 = $5 << 24 >> 24;
 switch ($6|0) {
 case 45:  {
  $neg$0 = 1;
  label = 5;
  break;
 }
 case 43:  {
  $neg$0 = 0;
  label = 5;
  break;
 }
 default: {
  $$1$ph = $$0$lcssa;$8 = $5;$neg$1$ph = 0;
 }
 }
 if ((label|0) == 5) {
  $$pre = HEAP8[$$lcssa9>>0]|0;
  $$1$ph = $$lcssa9;$8 = $$pre;$neg$1$ph = $neg$0;
 }
 $7 = $8 << 24 >> 24;
 $isdigittmp1 = (($7) + -48)|0;
 $isdigit2 = ($isdigittmp1>>>0)<(10);
 if ($isdigit2) {
  $$13 = $$1$ph;$isdigittmp5 = $isdigittmp1;$n$04 = 0;
  while(1) {
   $9 = ($n$04*10)|0;
   $10 = ((($$13)) + 1|0);
   $11 = (($9) - ($isdigittmp5))|0;
   $12 = HEAP8[$10>>0]|0;
   $13 = $12 << 24 >> 24;
   $isdigittmp = (($13) + -48)|0;
   $isdigit = ($isdigittmp>>>0)<(10);
   if ($isdigit) {
    $$13 = $10;$isdigittmp5 = $isdigittmp;$n$04 = $11;
   } else {
    $n$0$lcssa = $11;
    break;
   }
  }
 } else {
  $n$0$lcssa = 0;
 }
 $14 = ($neg$1$ph|0)!=(0);
 $15 = (0 - ($n$0$lcssa))|0;
 $16 = $14 ? $n$0$lcssa : $15;
 return ($16|0);
}
function _qsort($base,$nel,$width,$cmp) {
 $base = $base|0;
 $nel = $nel|0;
 $width = $width|0;
 $cmp = $cmp|0;
 var $$0$i = 0, $$0$i30 = 0, $$02$i$i = 0, $$02$i3$i = 0, $$lcssa = 0, $$lcssa57 = 0, $$phi$trans$insert$i = 0, $$pre = 0, $$pre$i = 0, $$pre$i11 = 0, $$pre$i20 = 0, $$pre$i5 = 0, $$pre$i8 = 0, $$pre1$i = 0, $$pre1$i12 = 0, $$pre1$i27$pre = 0, $$pre1$i6 = 0, $$pre1$i9 = 0, $$sum = 0, $$sum2 = 0;
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $8$phi = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $head$0$lcssa = 0, $head$036 = 0;
 var $head$1$be = 0, $head$153 = 0, $i$0 = 0, $lp = 0, $nTrailingZeros$03$i$i = 0, $nTrailingZeros$03$i2$i = 0, $nTrailingZeros$03$i2$i$lcssa = 0, $or$cond = 0, $or$cond48 = 0, $or$cond4852 = 0, $or$cond51 = 0, $p = 0, $pshift$0$lcssa = 0, $pshift$037 = 0, $pshift$1 = 0, $pshift$2$be = 0, $pshift$254 = 0, $sum = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 208|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $lp = sp + 8|0;
 $p = sp;
 $0 = Math_imul($width, $nel)|0;
 $1 = $p;
 $2 = $1;
 HEAP32[$2>>2] = 1;
 $3 = (($1) + 4)|0;
 $4 = $3;
 HEAP32[$4>>2] = 0;
 $5 = ($0|0)==(0);
 if (!($5)) {
  $$sum = (($0) - ($width))|0;
  $6 = ((($lp)) + 4|0);
  HEAP32[$6>>2] = $width;
  HEAP32[$lp>>2] = $width;
  $10 = $width;$8 = $width;$i$0 = 2;
  while(1) {
   $7 = (($8) + ($width))|0;
   $9 = (($7) + ($10))|0;
   $11 = (($lp) + ($i$0<<2)|0);
   HEAP32[$11>>2] = $9;
   $12 = ($9>>>0)<($0>>>0);
   $13 = (($i$0) + 1)|0;
   if ($12) {
    $8$phi = $10;$10 = $9;$i$0 = $13;$8 = $8$phi;
   } else {
    break;
   }
  }
  $14 = (0 - ($width))|0;
  $15 = (($base) + ($$sum)|0);
  $16 = ($$sum|0)>(0);
  $$phi$trans$insert$i = ((($p)) + 4|0);
  if ($16) {
   $17 = $15;
   $19 = 1;$head$036 = $base;$pshift$037 = 1;
   while(1) {
    $18 = $19 & 3;
    $20 = ($18|0)==(3);
    do {
     if ($20) {
      _sift($head$036,$width,$cmp,$pshift$037,$lp);
      $$pre$i = HEAP32[$p>>2]|0;
      $$pre1$i = HEAP32[$$phi$trans$insert$i>>2]|0;
      $21 = $$pre$i >>> 2;
      $22 = $$pre1$i << 30;
      $23 = $22 | $21;
      HEAP32[$p>>2] = $23;
      $24 = $$pre1$i >>> 2;
      HEAP32[$$phi$trans$insert$i>>2] = $24;
      $25 = (($pshift$037) + 2)|0;
      $48 = $23;$pshift$1 = $25;
     } else {
      $26 = (($pshift$037) + -1)|0;
      $27 = (($lp) + ($26<<2)|0);
      $28 = HEAP32[$27>>2]|0;
      $29 = $head$036;
      $30 = (($17) - ($29))|0;
      $31 = ($28>>>0)<($30>>>0);
      if ($31) {
       _sift($head$036,$width,$cmp,$pshift$037,$lp);
      } else {
       _trinkle($head$036,$width,$cmp,$p,$pshift$037,0,$lp);
      }
      $32 = ($pshift$037|0)==(1);
      if ($32) {
       $$pre$i5 = HEAP32[$$phi$trans$insert$i>>2]|0;
       $$pre1$i6 = HEAP32[$p>>2]|0;
       $33 = $$pre$i5 << 1;
       $34 = $$pre1$i6 >>> 31;
       $35 = $34 | $33;
       HEAP32[$$phi$trans$insert$i>>2] = $35;
       $36 = $$pre1$i6 << 1;
       HEAP32[$p>>2] = $36;
       $48 = $36;$pshift$1 = 0;
       break;
      }
      $37 = ($26>>>0)>(31);
      if ($37) {
       $38 = (($pshift$037) + -33)|0;
       $39 = HEAP32[$p>>2]|0;
       HEAP32[$$phi$trans$insert$i>>2] = $39;
       HEAP32[$p>>2] = 0;
       $$0$i = $38;$41 = $39;$44 = 0;
      } else {
       $$pre$i11 = HEAP32[$$phi$trans$insert$i>>2]|0;
       $$pre1$i12 = HEAP32[$p>>2]|0;
       $$0$i = $26;$41 = $$pre$i11;$44 = $$pre1$i12;
      }
      $40 = $41 << $$0$i;
      $42 = (32 - ($$0$i))|0;
      $43 = $44 >>> $42;
      $45 = $43 | $40;
      HEAP32[$$phi$trans$insert$i>>2] = $45;
      $46 = $44 << $$0$i;
      HEAP32[$p>>2] = $46;
      $48 = $46;$pshift$1 = 1;
     }
    } while(0);
    $47 = $48 | 1;
    HEAP32[$p>>2] = $47;
    $49 = (($head$036) + ($width)|0);
    $50 = ($49>>>0)<($15>>>0);
    if ($50) {
     $19 = $47;$head$036 = $49;$pshift$037 = $pshift$1;
    } else {
     $head$0$lcssa = $49;$pshift$0$lcssa = $pshift$1;
     break;
    }
   }
  } else {
   $head$0$lcssa = $base;$pshift$0$lcssa = 1;
  }
  _trinkle($head$0$lcssa,$width,$cmp,$p,$pshift$0$lcssa,0,$lp);
  $51 = ((($p)) + 4|0);
  $52 = ($pshift$0$lcssa|0)==(1);
  $53 = HEAP32[$p>>2]|0;
  $54 = ($53|0)==(1);
  $or$cond51 = $52 & $54;
  $55 = HEAP32[$51>>2]|0;
  $56 = ($55|0)==(0);
  $or$cond4852 = $or$cond51 & $56;
  if (!($or$cond4852)) {
   $59 = $53;$head$153 = $head$0$lcssa;$pshift$254 = $pshift$0$lcssa;
   while(1) {
    $57 = ($pshift$254|0)<(2);
    if ($57) {
     $58 = (($59) + -1)|0;
     $60 = ($58|0)==(0);
     do {
      if ($60) {
       $81 = 32;
       label = 30;
      } else {
       $61 = $58 & 1;
       $62 = ($61|0)==(0);
       if ($62) {
        $$02$i$i = $58;$nTrailingZeros$03$i$i = 0;
        while(1) {
         $63 = (($nTrailingZeros$03$i$i) + 1)|0;
         $64 = $$02$i$i >>> 1;
         $65 = $64 & 1;
         $66 = ($65|0)==(0);
         if ($66) {
          $$02$i$i = $64;$nTrailingZeros$03$i$i = $63;
         } else {
          $$lcssa = $63;
          break;
         }
        }
        $67 = ($$lcssa|0)==(0);
        if ($67) {
         label = 24;
        } else {
         $78 = $$lcssa;
        }
       } else {
        label = 24;
       }
       if ((label|0) == 24) {
        label = 0;
        $68 = HEAP32[$$phi$trans$insert$i>>2]|0;
        $69 = ($68|0)==(0);
        if ($69) {
         $81 = 64;
         label = 30;
         break;
        }
        $70 = $68 & 1;
        $71 = ($70|0)==(0);
        if ($71) {
         $$02$i3$i = $68;$nTrailingZeros$03$i2$i = 0;
        } else {
         $$0$i30 = 0;$84 = $59;$87 = $68;$91 = 0;
         break;
        }
        while(1) {
         $72 = (($nTrailingZeros$03$i2$i) + 1)|0;
         $73 = $$02$i3$i >>> 1;
         $74 = $73 & 1;
         $75 = ($74|0)==(0);
         if ($75) {
          $$02$i3$i = $73;$nTrailingZeros$03$i2$i = $72;
         } else {
          $$lcssa57 = $72;$nTrailingZeros$03$i2$i$lcssa = $nTrailingZeros$03$i2$i;
          break;
         }
        }
        $76 = (($nTrailingZeros$03$i2$i$lcssa) + 33)|0;
        $77 = ($$lcssa57|0)==(0);
        if ($77) {
         $$0$i30 = 0;$84 = $59;$87 = $68;$91 = 0;
         break;
        } else {
         $78 = $76;
        }
       }
       $79 = ($78>>>0)>(31);
       if ($79) {
        $81 = $78;
        label = 30;
       } else {
        $$pre1$i27$pre = HEAP32[$$phi$trans$insert$i>>2]|0;
        $$0$i30 = $78;$84 = $59;$87 = $$pre1$i27$pre;$91 = $78;
       }
      }
     } while(0);
     if ((label|0) == 30) {
      label = 0;
      $80 = (($81) + -32)|0;
      $82 = HEAP32[$$phi$trans$insert$i>>2]|0;
      HEAP32[$p>>2] = $82;
      HEAP32[$$phi$trans$insert$i>>2] = 0;
      $$0$i30 = $80;$84 = $82;$87 = 0;$91 = $81;
     }
     $83 = $84 >>> $$0$i30;
     $85 = (32 - ($$0$i30))|0;
     $86 = $87 << $85;
     $88 = $86 | $83;
     HEAP32[$p>>2] = $88;
     $89 = $87 >>> $$0$i30;
     HEAP32[$$phi$trans$insert$i>>2] = $89;
     $90 = (($91) + ($pshift$254))|0;
     $$pre = (($head$153) + ($14)|0);
     $head$1$be = $$pre;$pshift$2$be = $90;
    } else {
     $$pre$i20 = HEAP32[$$phi$trans$insert$i>>2]|0;
     $92 = $$pre$i20 << 2;
     $93 = $59 >>> 30;
     $94 = $93 | $92;
     $95 = (($pshift$254) + -2)|0;
     $96 = $59 << 1;
     $97 = $96 & 2147483646;
     $98 = $93 << 31;
     $99 = $97 | $98;
     $100 = $99 ^ 3;
     HEAP32[$p>>2] = $100;
     $101 = $94 >>> 1;
     HEAP32[$$phi$trans$insert$i>>2] = $101;
     $102 = (($lp) + ($95<<2)|0);
     $103 = HEAP32[$102>>2]|0;
     $sum = (($103) + ($width))|0;
     $$sum2 = (0 - ($sum))|0;
     $104 = (($head$153) + ($$sum2)|0);
     $105 = (($pshift$254) + -1)|0;
     _trinkle($104,$width,$cmp,$p,$105,1,$lp);
     $$pre$i8 = HEAP32[$$phi$trans$insert$i>>2]|0;
     $$pre1$i9 = HEAP32[$p>>2]|0;
     $106 = $$pre$i8 << 1;
     $107 = $$pre1$i9 >>> 31;
     $108 = $107 | $106;
     HEAP32[$$phi$trans$insert$i>>2] = $108;
     $109 = $$pre1$i9 << 1;
     $110 = $109 | 1;
     HEAP32[$p>>2] = $110;
     $111 = (($head$153) + ($14)|0);
     _trinkle($111,$width,$cmp,$p,$95,1,$lp);
     $head$1$be = $111;$pshift$2$be = $95;
    }
    $112 = ($pshift$2$be|0)==(1);
    $113 = HEAP32[$p>>2]|0;
    $114 = ($113|0)==(1);
    $or$cond = $112 & $114;
    $115 = HEAP32[$51>>2]|0;
    $116 = ($115|0)==(0);
    $or$cond48 = $or$cond & $116;
    if ($or$cond48) {
     break;
    } else {
     $59 = $113;$head$153 = $head$1$be;$pshift$254 = $pshift$2$be;
    }
   }
  }
 }
 STACKTOP = sp;return;
}
function _strtod($s,$p) {
 $s = $s|0;
 $p = $p|0;
 var $0 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (+_strtox($s,$p,1));
 return (+$0);
}
function _strtol($s,$p,$base) {
 $s = $s|0;
 $p = $p|0;
 $base = $base|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_strtox555($s,$p,$base,-2147483648,0)|0);
 $1 = tempRet0;
 return ($0|0);
}
function _memchr($src,$c,$n) {
 $src = $src|0;
 $c = $c|0;
 $n = $n|0;
 var $$0$lcssa = 0, $$0$lcssa44 = 0, $$019 = 0, $$1$lcssa = 0, $$110 = 0, $$110$lcssa = 0, $$24 = 0, $$3 = 0, $$lcssa = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond18 = 0, $s$0$lcssa = 0, $s$0$lcssa43 = 0, $s$020 = 0, $s$15 = 0, $s$2 = 0, $w$0$lcssa = 0, $w$011 = 0, $w$011$lcssa = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $c & 255;
 $1 = $src;
 $2 = $1 & 3;
 $3 = ($2|0)!=(0);
 $4 = ($n|0)!=(0);
 $or$cond18 = $4 & $3;
 L1: do {
  if ($or$cond18) {
   $5 = $c&255;
   $$019 = $n;$s$020 = $src;
   while(1) {
    $6 = HEAP8[$s$020>>0]|0;
    $7 = ($6<<24>>24)==($5<<24>>24);
    if ($7) {
     $$0$lcssa44 = $$019;$s$0$lcssa43 = $s$020;
     label = 6;
     break L1;
    }
    $8 = ((($s$020)) + 1|0);
    $9 = (($$019) + -1)|0;
    $10 = $8;
    $11 = $10 & 3;
    $12 = ($11|0)!=(0);
    $13 = ($9|0)!=(0);
    $or$cond = $13 & $12;
    if ($or$cond) {
     $$019 = $9;$s$020 = $8;
    } else {
     $$0$lcssa = $9;$$lcssa = $13;$s$0$lcssa = $8;
     label = 5;
     break;
    }
   }
  } else {
   $$0$lcssa = $n;$$lcssa = $4;$s$0$lcssa = $src;
   label = 5;
  }
 } while(0);
 if ((label|0) == 5) {
  if ($$lcssa) {
   $$0$lcssa44 = $$0$lcssa;$s$0$lcssa43 = $s$0$lcssa;
   label = 6;
  } else {
   $$3 = 0;$s$2 = $s$0$lcssa;
  }
 }
 L8: do {
  if ((label|0) == 6) {
   $14 = HEAP8[$s$0$lcssa43>>0]|0;
   $15 = $c&255;
   $16 = ($14<<24>>24)==($15<<24>>24);
   if ($16) {
    $$3 = $$0$lcssa44;$s$2 = $s$0$lcssa43;
   } else {
    $17 = Math_imul($0, 16843009)|0;
    $18 = ($$0$lcssa44>>>0)>(3);
    L11: do {
     if ($18) {
      $$110 = $$0$lcssa44;$w$011 = $s$0$lcssa43;
      while(1) {
       $19 = HEAP32[$w$011>>2]|0;
       $20 = $19 ^ $17;
       $21 = (($20) + -16843009)|0;
       $22 = $20 & -2139062144;
       $23 = $22 ^ -2139062144;
       $24 = $23 & $21;
       $25 = ($24|0)==(0);
       if (!($25)) {
        $$110$lcssa = $$110;$w$011$lcssa = $w$011;
        break;
       }
       $26 = ((($w$011)) + 4|0);
       $27 = (($$110) + -4)|0;
       $28 = ($27>>>0)>(3);
       if ($28) {
        $$110 = $27;$w$011 = $26;
       } else {
        $$1$lcssa = $27;$w$0$lcssa = $26;
        label = 11;
        break L11;
       }
      }
      $$24 = $$110$lcssa;$s$15 = $w$011$lcssa;
     } else {
      $$1$lcssa = $$0$lcssa44;$w$0$lcssa = $s$0$lcssa43;
      label = 11;
     }
    } while(0);
    if ((label|0) == 11) {
     $29 = ($$1$lcssa|0)==(0);
     if ($29) {
      $$3 = 0;$s$2 = $w$0$lcssa;
      break;
     } else {
      $$24 = $$1$lcssa;$s$15 = $w$0$lcssa;
     }
    }
    while(1) {
     $30 = HEAP8[$s$15>>0]|0;
     $31 = ($30<<24>>24)==($15<<24>>24);
     if ($31) {
      $$3 = $$24;$s$2 = $s$15;
      break L8;
     }
     $32 = ((($s$15)) + 1|0);
     $33 = (($$24) + -1)|0;
     $34 = ($33|0)==(0);
     if ($34) {
      $$3 = 0;$s$2 = $32;
      break;
     } else {
      $$24 = $33;$s$15 = $32;
     }
    }
   }
  }
 } while(0);
 $35 = ($$3|0)!=(0);
 $36 = $35 ? $s$2 : 0;
 return ($36|0);
}
function _memcmp($vl,$vr,$n) {
 $vl = $vl|0;
 $vr = $vr|0;
 $n = $n|0;
 var $$03 = 0, $$lcssa = 0, $$lcssa19 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $l$04 = 0, $r$05 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($n|0)==(0);
 L1: do {
  if ($0) {
   $11 = 0;
  } else {
   $$03 = $n;$l$04 = $vl;$r$05 = $vr;
   while(1) {
    $1 = HEAP8[$l$04>>0]|0;
    $2 = HEAP8[$r$05>>0]|0;
    $3 = ($1<<24>>24)==($2<<24>>24);
    if (!($3)) {
     $$lcssa = $1;$$lcssa19 = $2;
     break;
    }
    $4 = (($$03) + -1)|0;
    $5 = ((($l$04)) + 1|0);
    $6 = ((($r$05)) + 1|0);
    $7 = ($4|0)==(0);
    if ($7) {
     $11 = 0;
     break L1;
    } else {
     $$03 = $4;$l$04 = $5;$r$05 = $6;
    }
   }
   $8 = $$lcssa&255;
   $9 = $$lcssa19&255;
   $10 = (($8) - ($9))|0;
   $11 = $10;
  }
 } while(0);
 return ($11|0);
}
function ___memrchr($m,$c,$n) {
 $m = $m|0;
 $c = $c|0;
 $n = $n|0;
 var $$0 = 0, $$01 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $c&255;
 $$01 = $n;
 while(1) {
  $1 = (($$01) + -1)|0;
  $2 = ($$01|0)==(0);
  if ($2) {
   $$0 = 0;
   break;
  }
  $3 = (($m) + ($1)|0);
  $4 = HEAP8[$3>>0]|0;
  $5 = ($4<<24>>24)==($0<<24>>24);
  if ($5) {
   $$0 = $3;
   break;
  } else {
   $$01 = $1;
  }
 }
 return ($$0|0);
}
function ___stpcpy($d,$s) {
 $d = $d|0;
 $s = $s|0;
 var $$0$lcssa = 0, $$01$lcssa = 0, $$0115 = 0, $$016 = 0, $$03 = 0, $$1$ph = 0, $$12$ph = 0, $$128 = 0, $$19 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $wd$0$lcssa = 0, $wd$010 = 0, $ws$0$lcssa = 0, $ws$011 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $s;
 $1 = $d;
 $2 = $0 ^ $1;
 $3 = $2 & 3;
 $4 = ($3|0)==(0);
 L1: do {
  if ($4) {
   $5 = $0 & 3;
   $6 = ($5|0)==(0);
   if ($6) {
    $$0$lcssa = $s;$$01$lcssa = $d;
   } else {
    $$0115 = $d;$$016 = $s;
    while(1) {
     $7 = HEAP8[$$016>>0]|0;
     HEAP8[$$0115>>0] = $7;
     $8 = ($7<<24>>24)==(0);
     if ($8) {
      $$03 = $$0115;
      break L1;
     }
     $9 = ((($$016)) + 1|0);
     $10 = ((($$0115)) + 1|0);
     $11 = $9;
     $12 = $11 & 3;
     $13 = ($12|0)==(0);
     if ($13) {
      $$0$lcssa = $9;$$01$lcssa = $10;
      break;
     } else {
      $$0115 = $10;$$016 = $9;
     }
    }
   }
   $14 = HEAP32[$$0$lcssa>>2]|0;
   $15 = (($14) + -16843009)|0;
   $16 = $14 & -2139062144;
   $17 = $16 ^ -2139062144;
   $18 = $17 & $15;
   $19 = ($18|0)==(0);
   if ($19) {
    $22 = $14;$wd$010 = $$01$lcssa;$ws$011 = $$0$lcssa;
    while(1) {
     $20 = ((($ws$011)) + 4|0);
     $21 = ((($wd$010)) + 4|0);
     HEAP32[$wd$010>>2] = $22;
     $23 = HEAP32[$20>>2]|0;
     $24 = (($23) + -16843009)|0;
     $25 = $23 & -2139062144;
     $26 = $25 ^ -2139062144;
     $27 = $26 & $24;
     $28 = ($27|0)==(0);
     if ($28) {
      $22 = $23;$wd$010 = $21;$ws$011 = $20;
     } else {
      $wd$0$lcssa = $21;$ws$0$lcssa = $20;
      break;
     }
    }
   } else {
    $wd$0$lcssa = $$01$lcssa;$ws$0$lcssa = $$0$lcssa;
   }
   $$1$ph = $ws$0$lcssa;$$12$ph = $wd$0$lcssa;
   label = 8;
  } else {
   $$1$ph = $s;$$12$ph = $d;
   label = 8;
  }
 } while(0);
 if ((label|0) == 8) {
  $29 = HEAP8[$$1$ph>>0]|0;
  HEAP8[$$12$ph>>0] = $29;
  $30 = ($29<<24>>24)==(0);
  if ($30) {
   $$03 = $$12$ph;
  } else {
   $$128 = $$12$ph;$$19 = $$1$ph;
   while(1) {
    $31 = ((($$19)) + 1|0);
    $32 = ((($$128)) + 1|0);
    $33 = HEAP8[$31>>0]|0;
    HEAP8[$32>>0] = $33;
    $34 = ($33<<24>>24)==(0);
    if ($34) {
     $$03 = $32;
     break;
    } else {
     $$128 = $32;$$19 = $31;
    }
   }
  }
 }
 return ($$03|0);
}
function _strcasecmp($_l,$_r) {
 $_l = $_l|0;
 $_r = $_r|0;
 var $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $l$03 = 0, $l$03$lcssa24 = 0, $r$0$lcssa = 0, $r$04 = 0, $r$04$lcssa23 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$_l>>0]|0;
 $1 = ($0<<24>>24)==(0);
 L1: do {
  if ($1) {
   $19 = 0;$r$0$lcssa = $_r;
  } else {
   $2 = $0&255;
   $5 = $0;$7 = $2;$l$03 = $_l;$r$04 = $_r;
   while(1) {
    $3 = HEAP8[$r$04>>0]|0;
    $4 = ($3<<24>>24)==(0);
    if ($4) {
     $19 = $5;$r$0$lcssa = $r$04;
     break L1;
    }
    $6 = ($5<<24>>24)==($3<<24>>24);
    if (!($6)) {
     $8 = (_tolower($7)|0);
     $9 = HEAP8[$r$04>>0]|0;
     $10 = $9&255;
     $11 = (_tolower($10)|0);
     $12 = ($8|0)==($11|0);
     if (!($12)) {
      $l$03$lcssa24 = $l$03;$r$04$lcssa23 = $r$04;
      break;
     }
    }
    $13 = ((($l$03)) + 1|0);
    $14 = ((($r$04)) + 1|0);
    $15 = HEAP8[$13>>0]|0;
    $16 = $15&255;
    $17 = ($15<<24>>24)==(0);
    if ($17) {
     $19 = 0;$r$0$lcssa = $14;
     break L1;
    } else {
     $5 = $15;$7 = $16;$l$03 = $13;$r$04 = $14;
    }
   }
   $$pre = HEAP8[$l$03$lcssa24>>0]|0;
   $19 = $$pre;$r$0$lcssa = $r$04$lcssa23;
  }
 } while(0);
 $18 = $19&255;
 $20 = (_tolower($18)|0);
 $21 = HEAP8[$r$0$lcssa>>0]|0;
 $22 = $21&255;
 $23 = (_tolower($22)|0);
 $24 = (($20) - ($23))|0;
 return ($24|0);
}
function _strcat($dest,$src) {
 $dest = $dest|0;
 $src = $src|0;
 var $0 = 0, $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_strlen($dest)|0);
 $1 = (($dest) + ($0)|0);
 (_strcpy($1,$src)|0);
 return ($dest|0);
}
function _strchr($s,$c) {
 $s = $s|0;
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (___strchrnul($s,$c)|0);
 $1 = HEAP8[$0>>0]|0;
 $2 = $c&255;
 $3 = ($1<<24>>24)==($2<<24>>24);
 $4 = $3 ? $0 : 0;
 return ($4|0);
}
function ___strchrnul($s,$c) {
 $s = $s|0;
 $c = $c|0;
 var $$0 = 0, $$02$lcssa = 0, $$0211 = 0, $$1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond5 = 0, $w$0$lcssa = 0, $w$08 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $c & 255;
 $1 = ($0|0)==(0);
 L1: do {
  if ($1) {
   $6 = (_strlen($s)|0);
   $7 = (($s) + ($6)|0);
   $$0 = $7;
  } else {
   $2 = $s;
   $3 = $2 & 3;
   $4 = ($3|0)==(0);
   if ($4) {
    $$02$lcssa = $s;
   } else {
    $5 = $c&255;
    $$0211 = $s;
    while(1) {
     $8 = HEAP8[$$0211>>0]|0;
     $9 = ($8<<24>>24)==(0);
     $10 = ($8<<24>>24)==($5<<24>>24);
     $or$cond = $9 | $10;
     if ($or$cond) {
      $$0 = $$0211;
      break L1;
     }
     $11 = ((($$0211)) + 1|0);
     $12 = $11;
     $13 = $12 & 3;
     $14 = ($13|0)==(0);
     if ($14) {
      $$02$lcssa = $11;
      break;
     } else {
      $$0211 = $11;
     }
    }
   }
   $15 = Math_imul($0, 16843009)|0;
   $16 = HEAP32[$$02$lcssa>>2]|0;
   $17 = (($16) + -16843009)|0;
   $18 = $16 & -2139062144;
   $19 = $18 ^ -2139062144;
   $20 = $19 & $17;
   $21 = ($20|0)==(0);
   L10: do {
    if ($21) {
     $23 = $16;$w$08 = $$02$lcssa;
     while(1) {
      $22 = $23 ^ $15;
      $24 = (($22) + -16843009)|0;
      $25 = $22 & -2139062144;
      $26 = $25 ^ -2139062144;
      $27 = $26 & $24;
      $28 = ($27|0)==(0);
      if (!($28)) {
       $w$0$lcssa = $w$08;
       break L10;
      }
      $29 = ((($w$08)) + 4|0);
      $30 = HEAP32[$29>>2]|0;
      $31 = (($30) + -16843009)|0;
      $32 = $30 & -2139062144;
      $33 = $32 ^ -2139062144;
      $34 = $33 & $31;
      $35 = ($34|0)==(0);
      if ($35) {
       $23 = $30;$w$08 = $29;
      } else {
       $w$0$lcssa = $29;
       break;
      }
     }
    } else {
     $w$0$lcssa = $$02$lcssa;
    }
   } while(0);
   $36 = $c&255;
   $$1 = $w$0$lcssa;
   while(1) {
    $37 = HEAP8[$$1>>0]|0;
    $38 = ($37<<24>>24)==(0);
    $39 = ($37<<24>>24)==($36<<24>>24);
    $or$cond5 = $38 | $39;
    $40 = ((($$1)) + 1|0);
    if ($or$cond5) {
     $$0 = $$1;
     break;
    } else {
     $$1 = $40;
    }
   }
  }
 } while(0);
 return ($$0|0);
}
function _strcmp($l,$r) {
 $l = $l|0;
 $r = $r|0;
 var $$014 = 0, $$05 = 0, $$lcssa = 0, $$lcssa2 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond3 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $0 = HEAP8[$l>>0]|0;
 $1 = HEAP8[$r>>0]|0;
 $2 = ($0<<24>>24)!=($1<<24>>24);
 $3 = ($0<<24>>24)==(0);
 $or$cond3 = $3 | $2;
 if ($or$cond3) {
  $$lcssa = $0;$$lcssa2 = $1;
 } else {
  $$014 = $l;$$05 = $r;
  while(1) {
   $4 = ((($$014)) + 1|0);
   $5 = ((($$05)) + 1|0);
   $6 = HEAP8[$4>>0]|0;
   $7 = HEAP8[$5>>0]|0;
   $8 = ($6<<24>>24)!=($7<<24>>24);
   $9 = ($6<<24>>24)==(0);
   $or$cond = $9 | $8;
   if ($or$cond) {
    $$lcssa = $6;$$lcssa2 = $7;
    break;
   } else {
    $$014 = $4;$$05 = $5;
   }
  }
 }
 $10 = $$lcssa&255;
 $11 = $$lcssa2&255;
 $12 = (($10) - ($11))|0;
 return ($12|0);
}
function _strcpy($dest,$src) {
 $dest = $dest|0;
 $src = $src|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 (___stpcpy($dest,$src)|0);
 return ($dest|0);
}
function _strcspn($s,$c) {
 $s = $s|0;
 $c = $c|0;
 var $$0 = 0, $$027 = 0, $$03$lcssa = 0, $$035 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $byteset = 0, $div = 0, $div4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $byteset = sp;
 $0 = HEAP8[$c>>0]|0;
 $1 = ($0<<24>>24)==(0);
 if ($1) {
  label = 3;
 } else {
  $2 = ((($c)) + 1|0);
  $3 = HEAP8[$2>>0]|0;
  $4 = ($3<<24>>24)==(0);
  if ($4) {
   label = 3;
  } else {
   ;HEAP32[$byteset>>2]=0|0;HEAP32[$byteset+4>>2]=0|0;HEAP32[$byteset+8>>2]=0|0;HEAP32[$byteset+12>>2]=0|0;HEAP32[$byteset+16>>2]=0|0;HEAP32[$byteset+20>>2]=0|0;HEAP32[$byteset+24>>2]=0|0;HEAP32[$byteset+28>>2]=0|0;
   $$027 = $c;$13 = $0;
   while(1) {
    $12 = $13 & 31;
    $14 = $12&255;
    $15 = 1 << $14;
    $div4 = ($13&255) >>> 5;
    $16 = $div4&255;
    $17 = (($byteset) + ($16<<2)|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = $18 | $15;
    HEAP32[$17>>2] = $19;
    $20 = ((($$027)) + 1|0);
    $21 = HEAP8[$20>>0]|0;
    $22 = ($21<<24>>24)==(0);
    if ($22) {
     break;
    } else {
     $$027 = $20;$13 = $21;
    }
   }
   $10 = HEAP8[$s>>0]|0;
   $11 = ($10<<24>>24)==(0);
   L7: do {
    if ($11) {
     $$03$lcssa = $s;
    } else {
     $$035 = $s;$23 = $10;
     while(1) {
      $div = ($23&255) >>> 5;
      $24 = $div&255;
      $25 = (($byteset) + ($24<<2)|0);
      $26 = HEAP32[$25>>2]|0;
      $27 = $23 & 31;
      $28 = $27&255;
      $29 = 1 << $28;
      $30 = $26 & $29;
      $31 = ($30|0)==(0);
      if (!($31)) {
       $$03$lcssa = $$035;
       break L7;
      }
      $32 = ((($$035)) + 1|0);
      $33 = HEAP8[$32>>0]|0;
      $34 = ($33<<24>>24)==(0);
      if ($34) {
       $$03$lcssa = $32;
       break;
      } else {
       $$035 = $32;$23 = $33;
      }
     }
    }
   } while(0);
   $35 = $$03$lcssa;
   $36 = $s;
   $37 = (($35) - ($36))|0;
   $$0 = $37;
  }
 }
 if ((label|0) == 3) {
  $5 = $0 << 24 >> 24;
  $6 = (___strchrnul($s,$5)|0);
  $7 = $6;
  $8 = $s;
  $9 = (($7) - ($8))|0;
  $$0 = $9;
 }
 STACKTOP = sp;return ($$0|0);
}
function _strlen($s) {
 $s = $s|0;
 var $$0 = 0, $$01$lcssa = 0, $$014 = 0, $$1$lcssa = 0, $$lcssa20 = 0, $$pn = 0, $$pn15 = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $w$0 = 0, $w$0$lcssa = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = $s;
 $1 = $0 & 3;
 $2 = ($1|0)==(0);
 L1: do {
  if ($2) {
   $$01$lcssa = $s;
   label = 4;
  } else {
   $$014 = $s;$21 = $0;
   while(1) {
    $3 = HEAP8[$$014>>0]|0;
    $4 = ($3<<24>>24)==(0);
    if ($4) {
     $$pn = $21;
     break L1;
    }
    $5 = ((($$014)) + 1|0);
    $6 = $5;
    $7 = $6 & 3;
    $8 = ($7|0)==(0);
    if ($8) {
     $$01$lcssa = $5;
     label = 4;
     break;
    } else {
     $$014 = $5;$21 = $6;
    }
   }
  }
 } while(0);
 if ((label|0) == 4) {
  $w$0 = $$01$lcssa;
  while(1) {
   $9 = HEAP32[$w$0>>2]|0;
   $10 = (($9) + -16843009)|0;
   $11 = $9 & -2139062144;
   $12 = $11 ^ -2139062144;
   $13 = $12 & $10;
   $14 = ($13|0)==(0);
   $15 = ((($w$0)) + 4|0);
   if ($14) {
    $w$0 = $15;
   } else {
    $$lcssa20 = $9;$w$0$lcssa = $w$0;
    break;
   }
  }
  $16 = $$lcssa20&255;
  $17 = ($16<<24>>24)==(0);
  if ($17) {
   $$1$lcssa = $w$0$lcssa;
  } else {
   $$pn15 = $w$0$lcssa;
   while(1) {
    $18 = ((($$pn15)) + 1|0);
    $$pre = HEAP8[$18>>0]|0;
    $19 = ($$pre<<24>>24)==(0);
    if ($19) {
     $$1$lcssa = $18;
     break;
    } else {
     $$pn15 = $18;
    }
   }
  }
  $20 = $$1$lcssa;
  $$pn = $20;
 }
 $$0 = (($$pn) - ($0))|0;
 return ($$0|0);
}
function _strrchr($s,$c) {
 $s = $s|0;
 $c = $c|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_strlen($s)|0);
 $1 = (($0) + 1)|0;
 $2 = (___memrchr($s,$c,$1)|0);
 return ($2|0);
}
function _strspn($s,$c) {
 $s = $s|0;
 $c = $c|0;
 var $$0 = 0, $$028 = 0, $$03 = 0, $$03$lcssa = 0, $$1$lcssa = 0, $$16 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $byteset = 0, $div = 0, $div4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $byteset = sp;
 ;HEAP32[$byteset>>2]=0|0;HEAP32[$byteset+4>>2]=0|0;HEAP32[$byteset+8>>2]=0|0;HEAP32[$byteset+12>>2]=0|0;HEAP32[$byteset+16>>2]=0|0;HEAP32[$byteset+20>>2]=0|0;HEAP32[$byteset+24>>2]=0|0;HEAP32[$byteset+28>>2]=0|0;
 $0 = HEAP8[$c>>0]|0;
 $1 = ($0<<24>>24)==(0);
 do {
  if ($1) {
   $$0 = 0;
  } else {
   $2 = ((($c)) + 1|0);
   $3 = HEAP8[$2>>0]|0;
   $4 = ($3<<24>>24)==(0);
   if ($4) {
    $$03 = $s;
    while(1) {
     $5 = HEAP8[$$03>>0]|0;
     $6 = ($5<<24>>24)==($0<<24>>24);
     $7 = ((($$03)) + 1|0);
     if ($6) {
      $$03 = $7;
     } else {
      $$03$lcssa = $$03;
      break;
     }
    }
    $8 = $$03$lcssa;
    $9 = $s;
    $10 = (($8) - ($9))|0;
    $$0 = $10;
    break;
   } else {
    $$028 = $c;$14 = $0;
   }
   while(1) {
    $13 = $14 & 31;
    $15 = $13&255;
    $16 = 1 << $15;
    $div4 = ($14&255) >>> 5;
    $17 = $div4&255;
    $18 = (($byteset) + ($17<<2)|0);
    $19 = HEAP32[$18>>2]|0;
    $20 = $19 | $16;
    HEAP32[$18>>2] = $20;
    $21 = ((($$028)) + 1|0);
    $22 = HEAP8[$21>>0]|0;
    $23 = ($22<<24>>24)==(0);
    if ($23) {
     break;
    } else {
     $$028 = $21;$14 = $22;
    }
   }
   $11 = HEAP8[$s>>0]|0;
   $12 = ($11<<24>>24)==(0);
   L10: do {
    if ($12) {
     $$1$lcssa = $s;
    } else {
     $$16 = $s;$24 = $11;
     while(1) {
      $div = ($24&255) >>> 5;
      $25 = $div&255;
      $26 = (($byteset) + ($25<<2)|0);
      $27 = HEAP32[$26>>2]|0;
      $28 = $24 & 31;
      $29 = $28&255;
      $30 = 1 << $29;
      $31 = $27 & $30;
      $32 = ($31|0)==(0);
      if ($32) {
       $$1$lcssa = $$16;
       break L10;
      }
      $33 = ((($$16)) + 1|0);
      $34 = HEAP8[$33>>0]|0;
      $35 = ($34<<24>>24)==(0);
      if ($35) {
       $$1$lcssa = $33;
       break;
      } else {
       $$16 = $33;$24 = $34;
      }
     }
    }
   } while(0);
   $36 = $$1$lcssa;
   $37 = $s;
   $38 = (($36) - ($37))|0;
   $$0 = $38;
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function _strtok($s,$sep) {
 $s = $s|0;
 $sep = $sep|0;
 var $$0 = 0, $$01 = 0, $$sum = 0, $$sum2 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($s|0)==(0|0);
 if ($0) {
  $1 = HEAP32[964>>2]|0;
  $2 = ($1|0)==(0|0);
  if ($2) {
   $$0 = 0;
  } else {
   $$01 = $1;
   label = 3;
  }
 } else {
  $$01 = $s;
  label = 3;
 }
 do {
  if ((label|0) == 3) {
   $3 = (_strspn($$01,$sep)|0);
   $4 = (($$01) + ($3)|0);
   $5 = HEAP8[$4>>0]|0;
   $6 = ($5<<24>>24)==(0);
   if ($6) {
    HEAP32[964>>2] = 0;
    $$0 = 0;
    break;
   }
   $7 = (_strcspn($4,$sep)|0);
   $$sum = (($7) + ($3))|0;
   $8 = (($$01) + ($$sum)|0);
   HEAP32[964>>2] = $8;
   $9 = HEAP8[$8>>0]|0;
   $10 = ($9<<24>>24)==(0);
   if ($10) {
    HEAP32[964>>2] = 0;
    $$0 = $4;
    break;
   } else {
    $$sum2 = (($$sum) + 1)|0;
    $11 = (($$01) + ($$sum2)|0);
    HEAP32[964>>2] = $11;
    HEAP8[$8>>0] = 0;
    $$0 = $4;
    break;
   }
  }
 } while(0);
 return ($$0|0);
}
function _unlink($path) {
 $path = $path|0;
 var $0 = 0, $1 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $vararg_buffer = sp;
 HEAP32[$vararg_buffer>>2] = $path;
 $0 = (___syscall10(10,($vararg_buffer|0))|0);
 $1 = (___syscall_ret($0)|0);
 STACKTOP = sp;return ($1|0);
}
function _scanexp($f,$pok) {
 $f = $f|0;
 $pok = $pok|0;
 var $$lcssa22 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $c$0 = 0, $c$1$be = 0, $c$1$be$lcssa = 0, $c$112 = 0, $c$2$be = 0, $c$2$lcssa = 0, $c$27 = 0, $c$3$be = 0, $neg$0 = 0, $or$cond3 = 0, $x$013 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($f)) + 100|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($1>>>0)<($3>>>0);
 if ($4) {
  $5 = ((($1)) + 1|0);
  HEAP32[$0>>2] = $5;
  $6 = HEAP8[$1>>0]|0;
  $7 = $6&255;
  $9 = $7;
 } else {
  $8 = (___shgetc($f)|0);
  $9 = $8;
 }
 $10 = ($9|0)==(45);
 switch ($9|0) {
 case 43: case 45:  {
  $11 = $10&1;
  $12 = HEAP32[$0>>2]|0;
  $13 = HEAP32[$2>>2]|0;
  $14 = ($12>>>0)<($13>>>0);
  if ($14) {
   $15 = ((($12)) + 1|0);
   HEAP32[$0>>2] = $15;
   $16 = HEAP8[$12>>0]|0;
   $17 = $16&255;
   $20 = $17;
  } else {
   $18 = (___shgetc($f)|0);
   $20 = $18;
  }
  $19 = (($20) + -48)|0;
  $21 = ($19>>>0)>(9);
  $22 = ($pok|0)!=(0);
  $or$cond3 = $22 & $21;
  if ($or$cond3) {
   $23 = HEAP32[$2>>2]|0;
   $24 = ($23|0)==(0|0);
   if ($24) {
    $c$0 = $20;$neg$0 = $11;
   } else {
    $25 = HEAP32[$0>>2]|0;
    $26 = ((($25)) + -1|0);
    HEAP32[$0>>2] = $26;
    $c$0 = $20;$neg$0 = $11;
   }
  } else {
   $c$0 = $20;$neg$0 = $11;
  }
  break;
 }
 default: {
  $c$0 = $9;$neg$0 = 0;
 }
 }
 $27 = (($c$0) + -48)|0;
 $28 = ($27>>>0)>(9);
 if ($28) {
  $29 = HEAP32[$2>>2]|0;
  $30 = ($29|0)==(0|0);
  if ($30) {
   $98 = -2147483648;$99 = 0;
  } else {
   $31 = HEAP32[$0>>2]|0;
   $32 = ((($31)) + -1|0);
   HEAP32[$0>>2] = $32;
   $98 = -2147483648;$99 = 0;
  }
 } else {
  $c$112 = $c$0;$x$013 = 0;
  while(1) {
   $33 = ($x$013*10)|0;
   $34 = (($c$112) + -48)|0;
   $35 = (($34) + ($33))|0;
   $36 = HEAP32[$0>>2]|0;
   $37 = HEAP32[$2>>2]|0;
   $38 = ($36>>>0)<($37>>>0);
   if ($38) {
    $39 = ((($36)) + 1|0);
    HEAP32[$0>>2] = $39;
    $40 = HEAP8[$36>>0]|0;
    $41 = $40&255;
    $c$1$be = $41;
   } else {
    $42 = (___shgetc($f)|0);
    $c$1$be = $42;
   }
   $43 = (($c$1$be) + -48)|0;
   $44 = ($43>>>0)<(10);
   $45 = ($35|0)<(214748364);
   $46 = $44 & $45;
   if ($46) {
    $c$112 = $c$1$be;$x$013 = $35;
   } else {
    $$lcssa22 = $35;$c$1$be$lcssa = $c$1$be;
    break;
   }
  }
  $47 = ($$lcssa22|0)<(0);
  $48 = $47 << 31 >> 31;
  $49 = (($c$1$be$lcssa) + -48)|0;
  $50 = ($49>>>0)<(10);
  if ($50) {
   $53 = $$lcssa22;$54 = $48;$c$27 = $c$1$be$lcssa;
   while(1) {
    $55 = (___muldi3(($53|0),($54|0),10,0)|0);
    $56 = tempRet0;
    $57 = ($c$27|0)<(0);
    $58 = $57 << 31 >> 31;
    $59 = (_i64Add(($c$27|0),($58|0),-48,-1)|0);
    $60 = tempRet0;
    $61 = (_i64Add(($59|0),($60|0),($55|0),($56|0))|0);
    $62 = tempRet0;
    $63 = HEAP32[$0>>2]|0;
    $64 = HEAP32[$2>>2]|0;
    $65 = ($63>>>0)<($64>>>0);
    if ($65) {
     $66 = ((($63)) + 1|0);
     HEAP32[$0>>2] = $66;
     $67 = HEAP8[$63>>0]|0;
     $68 = $67&255;
     $c$2$be = $68;
    } else {
     $69 = (___shgetc($f)|0);
     $c$2$be = $69;
    }
    $70 = (($c$2$be) + -48)|0;
    $71 = ($70>>>0)<(10);
    $72 = ($62|0)<(21474836);
    $73 = ($61>>>0)<(2061584302);
    $74 = ($62|0)==(21474836);
    $75 = $74 & $73;
    $76 = $72 | $75;
    $77 = $71 & $76;
    if ($77) {
     $53 = $61;$54 = $62;$c$27 = $c$2$be;
    } else {
     $92 = $61;$93 = $62;$c$2$lcssa = $c$2$be;
     break;
    }
   }
  } else {
   $92 = $$lcssa22;$93 = $48;$c$2$lcssa = $c$1$be$lcssa;
  }
  $51 = (($c$2$lcssa) + -48)|0;
  $52 = ($51>>>0)<(10);
  if ($52) {
   while(1) {
    $78 = HEAP32[$0>>2]|0;
    $79 = HEAP32[$2>>2]|0;
    $80 = ($78>>>0)<($79>>>0);
    if ($80) {
     $81 = ((($78)) + 1|0);
     HEAP32[$0>>2] = $81;
     $82 = HEAP8[$78>>0]|0;
     $83 = $82&255;
     $c$3$be = $83;
    } else {
     $84 = (___shgetc($f)|0);
     $c$3$be = $84;
    }
    $85 = (($c$3$be) + -48)|0;
    $86 = ($85>>>0)<(10);
    if (!($86)) {
     break;
    }
   }
  }
  $87 = HEAP32[$2>>2]|0;
  $88 = ($87|0)==(0|0);
  if (!($88)) {
   $89 = HEAP32[$0>>2]|0;
   $90 = ((($89)) + -1|0);
   HEAP32[$0>>2] = $90;
  }
  $91 = ($neg$0|0)!=(0);
  $94 = (_i64Subtract(0,0,($92|0),($93|0))|0);
  $95 = tempRet0;
  $96 = $91 ? $94 : $92;
  $97 = $91 ? $95 : $93;
  $98 = $97;$99 = $96;
 }
 tempRet0 = ($98);
 return ($99|0);
}
function ___fflush_unlocked($f) {
 $f = $f|0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 20|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($f)) + 28|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($1>>>0)>($3>>>0);
 if ($4) {
  $5 = ((($f)) + 36|0);
  $6 = HEAP32[$5>>2]|0;
  (FUNCTION_TABLE_iiii[$6 & 255]($f,0,0)|0);
  $7 = HEAP32[$0>>2]|0;
  $8 = ($7|0)==(0|0);
  if ($8) {
   $$0 = -1;
  } else {
   label = 3;
  }
 } else {
  label = 3;
 }
 if ((label|0) == 3) {
  $9 = ((($f)) + 4|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = ((($f)) + 8|0);
  $12 = HEAP32[$11>>2]|0;
  $13 = ($10>>>0)<($12>>>0);
  if ($13) {
   $14 = ((($f)) + 40|0);
   $15 = HEAP32[$14>>2]|0;
   $16 = $10;
   $17 = $12;
   $18 = (($16) - ($17))|0;
   (FUNCTION_TABLE_iiii[$15 & 255]($f,$18,1)|0);
  }
  $19 = ((($f)) + 16|0);
  HEAP32[$19>>2] = 0;
  HEAP32[$2>>2] = 0;
  HEAP32[$0>>2] = 0;
  HEAP32[$11>>2] = 0;
  HEAP32[$9>>2] = 0;
  $$0 = 0;
 }
 return ($$0|0);
}
function _printf_core($f,$fmt,$ap,$nl_arg,$nl_type) {
 $f = $f|0;
 $fmt = $fmt|0;
 $ap = $ap|0;
 $nl_arg = $nl_arg|0;
 $nl_type = $nl_type|0;
 var $$ = 0, $$$i = 0, $$0 = 0, $$0$i = 0, $$0$lcssa$i = 0, $$012$i = 0, $$013$i = 0, $$03$i33 = 0, $$07$i = 0.0, $$1$i = 0.0, $$114$i = 0, $$2$i = 0.0, $$20$i = 0.0, $$21$i = 0, $$210$$22$i = 0, $$210$$24$i = 0, $$210$i = 0, $$23$i = 0, $$3$i = 0.0, $$31$i = 0;
 var $$311$i = 0, $$4$i = 0.0, $$412$lcssa$i = 0, $$41276$i = 0, $$5$lcssa$i = 0, $$51 = 0, $$587$i = 0, $$a$3$i = 0, $$a$3185$i = 0, $$a$3186$i = 0, $$fl$4 = 0, $$l10n$0 = 0, $$lcssa = 0, $$lcssa159$i = 0, $$lcssa318 = 0, $$lcssa323 = 0, $$lcssa324 = 0, $$lcssa325 = 0, $$lcssa326 = 0, $$lcssa327 = 0;
 var $$lcssa329 = 0, $$lcssa339 = 0, $$lcssa342 = 0.0, $$lcssa344 = 0, $$neg52$i = 0, $$neg53$i = 0, $$p$$i = 0, $$p$0 = 0, $$p$5 = 0, $$p$i = 0, $$pn$i = 0, $$pr$i = 0, $$pr47$i = 0, $$pre = 0, $$pre$i = 0, $$pre$phi184$iZ2D = 0, $$pre179$i = 0, $$pre182$i = 0, $$pre183$i = 0, $$pre193 = 0;
 var $$sum$i = 0, $$sum15$i = 0, $$sum16$i = 0, $$z$3$i = 0, $$z$4$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0;
 var $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0;
 var $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0;
 var $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0;
 var $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0;
 var $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0;
 var $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0;
 var $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0;
 var $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0;
 var $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0;
 var $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0;
 var $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0;
 var $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0;
 var $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0;
 var $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0.0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0.0;
 var $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0;
 var $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0.0, $392 = 0.0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0;
 var $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0.0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0.0, $412 = 0.0, $413 = 0.0, $414 = 0.0, $415 = 0.0, $416 = 0.0, $417 = 0;
 var $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0;
 var $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0.0, $443 = 0.0, $444 = 0.0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0;
 var $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0;
 var $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0.0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0.0, $486 = 0.0, $487 = 0.0, $488 = 0, $489 = 0, $49 = 0;
 var $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0;
 var $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0;
 var $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0;
 var $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0;
 var $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0;
 var $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0.0, $597 = 0.0, $598 = 0;
 var $599 = 0.0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0;
 var $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0;
 var $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0;
 var $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0;
 var $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0;
 var $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0;
 var $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0;
 var $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0;
 var $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0;
 var $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0;
 var $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, $a$0 = 0, $a$1 = 0, $a$1$lcssa$i = 0, $a$1147$i = 0, $a$2 = 0, $a$2$ph$i = 0, $a$3$lcssa$i = 0, $a$3134$i = 0, $a$5$lcssa$i = 0, $a$5109$i = 0, $a$6$i = 0, $a$7$i = 0, $a$8$ph$i = 0, $arg = 0, $arglist_current = 0, $arglist_current2 = 0, $arglist_next = 0, $arglist_next3 = 0;
 var $argpos$0 = 0, $big$i = 0, $buf = 0, $buf$i = 0, $carry$0140$i = 0, $carry3$0128$i = 0, $cnt$0 = 0, $cnt$1 = 0, $cnt$1$lcssa = 0, $d$0$i = 0, $d$0139$i = 0, $d$0141$i = 0, $d$1127$i = 0, $d$2$lcssa$i = 0, $d$2108$i = 0, $d$3$i = 0, $d$482$i = 0, $d$575$i = 0, $d$686$i = 0, $e$0123$i = 0;
 var $e$1$i = 0, $e$2104$i = 0, $e$3$i = 0, $e$4$ph$i = 0, $e2$i = 0, $ebuf0$i = 0, $estr$0$i = 0, $estr$1$lcssa$i = 0, $estr$193$i = 0, $estr$2$i = 0, $exitcond$i = 0, $expanded = 0, $expanded10 = 0, $expanded11 = 0, $expanded13 = 0, $expanded14 = 0, $expanded15 = 0, $expanded4 = 0, $expanded6 = 0, $expanded7 = 0;
 var $expanded8 = 0, $fl$0109 = 0, $fl$062 = 0, $fl$1 = 0, $fl$1$ = 0, $fl$3 = 0, $fl$4 = 0, $fl$6 = 0, $fmt39$lcssa = 0, $fmt39101 = 0, $fmt40 = 0, $fmt41 = 0, $fmt42 = 0, $fmt44 = 0, $fmt44$lcssa321 = 0, $fmt45 = 0, $i$0$lcssa = 0, $i$0$lcssa200 = 0, $i$0114 = 0, $i$0122$i = 0;
 var $i$03$i = 0, $i$03$i25 = 0, $i$1$lcssa$i = 0, $i$1116$i = 0, $i$1125 = 0, $i$2100 = 0, $i$2100$lcssa = 0, $i$2103$i = 0, $i$398 = 0, $i$399$i = 0, $isdigit = 0, $isdigit$i = 0, $isdigit$i27 = 0, $isdigit10 = 0, $isdigit12 = 0, $isdigit2$i = 0, $isdigit2$i23 = 0, $isdigittmp = 0, $isdigittmp$ = 0, $isdigittmp$i = 0;
 var $isdigittmp$i26 = 0, $isdigittmp1$i = 0, $isdigittmp1$i22 = 0, $isdigittmp11 = 0, $isdigittmp4$i = 0, $isdigittmp4$i24 = 0, $isdigittmp9 = 0, $j$0$i = 0, $j$0115$i = 0, $j$0117$i = 0, $j$1100$i = 0, $j$2$i = 0, $l$0 = 0, $l$0$i = 0, $l$1$i = 0, $l$1113 = 0, $l$2 = 0, $l10n$0 = 0, $l10n$0$lcssa = 0, $l10n$0$phi = 0;
 var $l10n$1 = 0, $l10n$2 = 0, $l10n$3 = 0, $mb = 0, $notlhs$i = 0, $notrhs$i = 0, $or$cond = 0, $or$cond$i = 0, $or$cond15 = 0, $or$cond17 = 0, $or$cond20 = 0, $or$cond240 = 0, $or$cond29$i = 0, $or$cond3$not$i = 0, $or$cond6$i = 0, $p$0 = 0, $p$1 = 0, $p$2 = 0, $p$2$ = 0, $p$3 = 0;
 var $p$4198 = 0, $p$5 = 0, $pl$0 = 0, $pl$0$i = 0, $pl$1 = 0, $pl$1$i = 0, $pl$2 = 0, $prefix$0 = 0, $prefix$0$$i = 0, $prefix$0$i = 0, $prefix$1 = 0, $prefix$2 = 0, $r$0$a$8$i = 0, $re$169$i = 0, $round$068$i = 0.0, $round6$1$i = 0.0, $s$0$i = 0, $s$1$i = 0, $s$1$i$lcssa = 0, $s1$0$i = 0;
 var $s7$079$i = 0, $s7$1$i = 0, $s8$0$lcssa$i = 0, $s8$070$i = 0, $s9$0$i = 0, $s9$183$i = 0, $s9$2$i = 0, $small$0$i = 0.0, $small$1$i = 0.0, $st$0 = 0, $st$0$lcssa322 = 0, $storemerge = 0, $storemerge13 = 0, $storemerge8108 = 0, $storemerge860 = 0, $sum = 0, $t$0 = 0, $t$1 = 0, $w$$i = 0, $w$0 = 0;
 var $w$1 = 0, $w$2 = 0, $w$30$i = 0, $wc = 0, $ws$0115 = 0, $ws$1126 = 0, $z$0$i = 0, $z$0$lcssa = 0, $z$0102 = 0, $z$1 = 0, $z$1$lcssa$i = 0, $z$1146$i = 0, $z$2 = 0, $z$2$i = 0, $z$2$i$lcssa = 0, $z$3$lcssa$i = 0, $z$3133$i = 0, $z$4$i = 0, $z$6$$i = 0, $z$6$i = 0;
 var $z$6$i$lcssa = 0, $z$6$ph$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 624|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $big$i = sp + 24|0;
 $e2$i = sp + 16|0;
 $buf$i = sp + 588|0;
 $ebuf0$i = sp + 576|0;
 $arg = sp;
 $buf = sp + 536|0;
 $wc = sp + 8|0;
 $mb = sp + 528|0;
 $0 = ($f|0)!=(0|0);
 $1 = ((($buf)) + 40|0);
 $2 = $1;
 $3 = ((($buf)) + 39|0);
 $4 = ((($wc)) + 4|0);
 $5 = ((($ebuf0$i)) + 12|0);
 $6 = ((($ebuf0$i)) + 11|0);
 $7 = $buf$i;
 $8 = $5;
 $9 = (($8) - ($7))|0;
 $10 = (-2 - ($7))|0;
 $11 = (($8) + 2)|0;
 $12 = ((($big$i)) + 288|0);
 $13 = ((($buf$i)) + 9|0);
 $14 = $13;
 $15 = ((($buf$i)) + 8|0);
 $cnt$0 = 0;$fmt41 = $fmt;$l$0 = 0;$l10n$0 = 0;
 L1: while(1) {
  $16 = ($cnt$0|0)>(-1);
  do {
   if ($16) {
    $17 = (2147483647 - ($cnt$0))|0;
    $18 = ($l$0|0)>($17|0);
    if ($18) {
     $19 = (___errno_location()|0);
     HEAP32[$19>>2] = 75;
     $cnt$1 = -1;
     break;
    } else {
     $20 = (($l$0) + ($cnt$0))|0;
     $cnt$1 = $20;
     break;
    }
   } else {
    $cnt$1 = $cnt$0;
   }
  } while(0);
  $21 = HEAP8[$fmt41>>0]|0;
  $22 = ($21<<24>>24)==(0);
  if ($22) {
   $cnt$1$lcssa = $cnt$1;$l10n$0$lcssa = $l10n$0;
   label = 245;
   break;
  } else {
   $23 = $21;$fmt40 = $fmt41;
  }
  L9: while(1) {
   switch ($23<<24>>24) {
   case 37:  {
    $fmt39101 = $fmt40;$z$0102 = $fmt40;
    label = 9;
    break L9;
    break;
   }
   case 0:  {
    $fmt39$lcssa = $fmt40;$z$0$lcssa = $fmt40;
    break L9;
    break;
   }
   default: {
   }
   }
   $24 = ((($fmt40)) + 1|0);
   $$pre = HEAP8[$24>>0]|0;
   $23 = $$pre;$fmt40 = $24;
  }
  L12: do {
   if ((label|0) == 9) {
    while(1) {
     label = 0;
     $25 = ((($fmt39101)) + 1|0);
     $26 = HEAP8[$25>>0]|0;
     $27 = ($26<<24>>24)==(37);
     if (!($27)) {
      $fmt39$lcssa = $fmt39101;$z$0$lcssa = $z$0102;
      break L12;
     }
     $28 = ((($z$0102)) + 1|0);
     $29 = ((($fmt39101)) + 2|0);
     $30 = HEAP8[$29>>0]|0;
     $31 = ($30<<24>>24)==(37);
     if ($31) {
      $fmt39101 = $29;$z$0102 = $28;
      label = 9;
     } else {
      $fmt39$lcssa = $29;$z$0$lcssa = $28;
      break;
     }
    }
   }
  } while(0);
  $32 = $z$0$lcssa;
  $33 = $fmt41;
  $34 = (($32) - ($33))|0;
  if ($0) {
   $35 = HEAP32[$f>>2]|0;
   $36 = $35 & 32;
   $37 = ($36|0)==(0);
   if ($37) {
    (___fwritex($fmt41,$34,$f)|0);
   }
  }
  $38 = ($z$0$lcssa|0)==($fmt41|0);
  if (!($38)) {
   $l10n$0$phi = $l10n$0;$cnt$0 = $cnt$1;$fmt41 = $fmt39$lcssa;$l$0 = $34;$l10n$0 = $l10n$0$phi;
   continue;
  }
  $39 = ((($fmt39$lcssa)) + 1|0);
  $40 = HEAP8[$39>>0]|0;
  $41 = $40 << 24 >> 24;
  $isdigittmp = (($41) + -48)|0;
  $isdigit = ($isdigittmp>>>0)<(10);
  if ($isdigit) {
   $42 = ((($fmt39$lcssa)) + 2|0);
   $43 = HEAP8[$42>>0]|0;
   $44 = ($43<<24>>24)==(36);
   $45 = ((($fmt39$lcssa)) + 3|0);
   $$51 = $44 ? $45 : $39;
   $$l10n$0 = $44 ? 1 : $l10n$0;
   $isdigittmp$ = $44 ? $isdigittmp : -1;
   $$pre193 = HEAP8[$$51>>0]|0;
   $47 = $$pre193;$argpos$0 = $isdigittmp$;$l10n$1 = $$l10n$0;$storemerge = $$51;
  } else {
   $47 = $40;$argpos$0 = -1;$l10n$1 = $l10n$0;$storemerge = $39;
  }
  $46 = $47 << 24 >> 24;
  $48 = $46 & -32;
  $49 = ($48|0)==(32);
  L25: do {
   if ($49) {
    $51 = $46;$56 = $47;$fl$0109 = 0;$storemerge8108 = $storemerge;
    while(1) {
     $50 = (($51) + -32)|0;
     $52 = 1 << $50;
     $53 = $52 & 75913;
     $54 = ($53|0)==(0);
     if ($54) {
      $65 = $56;$fl$062 = $fl$0109;$storemerge860 = $storemerge8108;
      break L25;
     }
     $55 = $56 << 24 >> 24;
     $57 = (($55) + -32)|0;
     $58 = 1 << $57;
     $59 = $58 | $fl$0109;
     $60 = ((($storemerge8108)) + 1|0);
     $61 = HEAP8[$60>>0]|0;
     $62 = $61 << 24 >> 24;
     $63 = $62 & -32;
     $64 = ($63|0)==(32);
     if ($64) {
      $51 = $62;$56 = $61;$fl$0109 = $59;$storemerge8108 = $60;
     } else {
      $65 = $61;$fl$062 = $59;$storemerge860 = $60;
      break;
     }
    }
   } else {
    $65 = $47;$fl$062 = 0;$storemerge860 = $storemerge;
   }
  } while(0);
  $66 = ($65<<24>>24)==(42);
  do {
   if ($66) {
    $67 = ((($storemerge860)) + 1|0);
    $68 = HEAP8[$67>>0]|0;
    $69 = $68 << 24 >> 24;
    $isdigittmp11 = (($69) + -48)|0;
    $isdigit12 = ($isdigittmp11>>>0)<(10);
    if ($isdigit12) {
     $70 = ((($storemerge860)) + 2|0);
     $71 = HEAP8[$70>>0]|0;
     $72 = ($71<<24>>24)==(36);
     if ($72) {
      $73 = (($nl_type) + ($isdigittmp11<<2)|0);
      HEAP32[$73>>2] = 10;
      $74 = HEAP8[$67>>0]|0;
      $75 = $74 << 24 >> 24;
      $76 = (($75) + -48)|0;
      $77 = (($nl_arg) + ($76<<3)|0);
      $78 = $77;
      $79 = $78;
      $80 = HEAP32[$79>>2]|0;
      $81 = (($78) + 4)|0;
      $82 = $81;
      $83 = HEAP32[$82>>2]|0;
      $84 = ((($storemerge860)) + 3|0);
      $l10n$2 = 1;$storemerge13 = $84;$w$0 = $80;
     } else {
      label = 24;
     }
    } else {
     label = 24;
    }
    if ((label|0) == 24) {
     label = 0;
     $85 = ($l10n$1|0)==(0);
     if (!($85)) {
      $$0 = -1;
      break L1;
     }
     if (!($0)) {
      $fl$1 = $fl$062;$fmt42 = $67;$l10n$3 = 0;$w$1 = 0;
      break;
     }
     $arglist_current = HEAP32[$ap>>2]|0;
     $86 = $arglist_current;
     $87 = ((0) + 4|0);
     $expanded4 = $87;
     $expanded = (($expanded4) - 1)|0;
     $88 = (($86) + ($expanded))|0;
     $89 = ((0) + 4|0);
     $expanded8 = $89;
     $expanded7 = (($expanded8) - 1)|0;
     $expanded6 = $expanded7 ^ -1;
     $90 = $88 & $expanded6;
     $91 = $90;
     $92 = HEAP32[$91>>2]|0;
     $arglist_next = ((($91)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next;
     $l10n$2 = 0;$storemerge13 = $67;$w$0 = $92;
    }
    $93 = ($w$0|0)<(0);
    if ($93) {
     $94 = $fl$062 | 8192;
     $95 = (0 - ($w$0))|0;
     $fl$1 = $94;$fmt42 = $storemerge13;$l10n$3 = $l10n$2;$w$1 = $95;
    } else {
     $fl$1 = $fl$062;$fmt42 = $storemerge13;$l10n$3 = $l10n$2;$w$1 = $w$0;
    }
   } else {
    $96 = $65 << 24 >> 24;
    $isdigittmp1$i = (($96) + -48)|0;
    $isdigit2$i = ($isdigittmp1$i>>>0)<(10);
    if ($isdigit2$i) {
     $100 = $storemerge860;$i$03$i = 0;$isdigittmp4$i = $isdigittmp1$i;
     while(1) {
      $97 = ($i$03$i*10)|0;
      $98 = (($97) + ($isdigittmp4$i))|0;
      $99 = ((($100)) + 1|0);
      $101 = HEAP8[$99>>0]|0;
      $102 = $101 << 24 >> 24;
      $isdigittmp$i = (($102) + -48)|0;
      $isdigit$i = ($isdigittmp$i>>>0)<(10);
      if ($isdigit$i) {
       $100 = $99;$i$03$i = $98;$isdigittmp4$i = $isdigittmp$i;
      } else {
       $$lcssa = $98;$$lcssa318 = $99;
       break;
      }
     }
     $103 = ($$lcssa|0)<(0);
     if ($103) {
      $$0 = -1;
      break L1;
     } else {
      $fl$1 = $fl$062;$fmt42 = $$lcssa318;$l10n$3 = $l10n$1;$w$1 = $$lcssa;
     }
    } else {
     $fl$1 = $fl$062;$fmt42 = $storemerge860;$l10n$3 = $l10n$1;$w$1 = 0;
    }
   }
  } while(0);
  $104 = HEAP8[$fmt42>>0]|0;
  $105 = ($104<<24>>24)==(46);
  L46: do {
   if ($105) {
    $106 = ((($fmt42)) + 1|0);
    $107 = HEAP8[$106>>0]|0;
    $108 = ($107<<24>>24)==(42);
    if (!($108)) {
     $135 = $107 << 24 >> 24;
     $isdigittmp1$i22 = (($135) + -48)|0;
     $isdigit2$i23 = ($isdigittmp1$i22>>>0)<(10);
     if ($isdigit2$i23) {
      $139 = $106;$i$03$i25 = 0;$isdigittmp4$i24 = $isdigittmp1$i22;
     } else {
      $fmt45 = $106;$p$0 = 0;
      break;
     }
     while(1) {
      $136 = ($i$03$i25*10)|0;
      $137 = (($136) + ($isdigittmp4$i24))|0;
      $138 = ((($139)) + 1|0);
      $140 = HEAP8[$138>>0]|0;
      $141 = $140 << 24 >> 24;
      $isdigittmp$i26 = (($141) + -48)|0;
      $isdigit$i27 = ($isdigittmp$i26>>>0)<(10);
      if ($isdigit$i27) {
       $139 = $138;$i$03$i25 = $137;$isdigittmp4$i24 = $isdigittmp$i26;
      } else {
       $fmt45 = $138;$p$0 = $137;
       break L46;
      }
     }
    }
    $109 = ((($fmt42)) + 2|0);
    $110 = HEAP8[$109>>0]|0;
    $111 = $110 << 24 >> 24;
    $isdigittmp9 = (($111) + -48)|0;
    $isdigit10 = ($isdigittmp9>>>0)<(10);
    if ($isdigit10) {
     $112 = ((($fmt42)) + 3|0);
     $113 = HEAP8[$112>>0]|0;
     $114 = ($113<<24>>24)==(36);
     if ($114) {
      $115 = (($nl_type) + ($isdigittmp9<<2)|0);
      HEAP32[$115>>2] = 10;
      $116 = HEAP8[$109>>0]|0;
      $117 = $116 << 24 >> 24;
      $118 = (($117) + -48)|0;
      $119 = (($nl_arg) + ($118<<3)|0);
      $120 = $119;
      $121 = $120;
      $122 = HEAP32[$121>>2]|0;
      $123 = (($120) + 4)|0;
      $124 = $123;
      $125 = HEAP32[$124>>2]|0;
      $126 = ((($fmt42)) + 4|0);
      $fmt45 = $126;$p$0 = $122;
      break;
     }
    }
    $127 = ($l10n$3|0)==(0);
    if (!($127)) {
     $$0 = -1;
     break L1;
    }
    if ($0) {
     $arglist_current2 = HEAP32[$ap>>2]|0;
     $128 = $arglist_current2;
     $129 = ((0) + 4|0);
     $expanded11 = $129;
     $expanded10 = (($expanded11) - 1)|0;
     $130 = (($128) + ($expanded10))|0;
     $131 = ((0) + 4|0);
     $expanded15 = $131;
     $expanded14 = (($expanded15) - 1)|0;
     $expanded13 = $expanded14 ^ -1;
     $132 = $130 & $expanded13;
     $133 = $132;
     $134 = HEAP32[$133>>2]|0;
     $arglist_next3 = ((($133)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next3;
     $fmt45 = $109;$p$0 = $134;
    } else {
     $fmt45 = $109;$p$0 = 0;
    }
   } else {
    $fmt45 = $fmt42;$p$0 = -1;
   }
  } while(0);
  $fmt44 = $fmt45;$st$0 = 0;
  while(1) {
   $142 = HEAP8[$fmt44>>0]|0;
   $143 = $142 << 24 >> 24;
   $144 = (($143) + -65)|0;
   $145 = ($144>>>0)>(57);
   if ($145) {
    $$0 = -1;
    break L1;
   }
   $146 = ((($fmt44)) + 1|0);
   $147 = ((20089 + (($st$0*58)|0)|0) + ($144)|0);
   $148 = HEAP8[$147>>0]|0;
   $149 = $148&255;
   $150 = (($149) + -1)|0;
   $151 = ($150>>>0)<(8);
   if ($151) {
    $fmt44 = $146;$st$0 = $149;
   } else {
    $$lcssa323 = $146;$$lcssa324 = $148;$$lcssa325 = $149;$fmt44$lcssa321 = $fmt44;$st$0$lcssa322 = $st$0;
    break;
   }
  }
  $152 = ($$lcssa324<<24>>24)==(0);
  if ($152) {
   $$0 = -1;
   break;
  }
  $153 = ($$lcssa324<<24>>24)==(19);
  $154 = ($argpos$0|0)>(-1);
  do {
   if ($153) {
    if ($154) {
     $$0 = -1;
     break L1;
    } else {
     label = 52;
    }
   } else {
    if ($154) {
     $155 = (($nl_type) + ($argpos$0<<2)|0);
     HEAP32[$155>>2] = $$lcssa325;
     $156 = (($nl_arg) + ($argpos$0<<3)|0);
     $157 = $156;
     $158 = $157;
     $159 = HEAP32[$158>>2]|0;
     $160 = (($157) + 4)|0;
     $161 = $160;
     $162 = HEAP32[$161>>2]|0;
     $163 = $arg;
     $164 = $163;
     HEAP32[$164>>2] = $159;
     $165 = (($163) + 4)|0;
     $166 = $165;
     HEAP32[$166>>2] = $162;
     label = 52;
     break;
    }
    if (!($0)) {
     $$0 = 0;
     break L1;
    }
    _pop_arg($arg,$$lcssa325,$ap);
   }
  } while(0);
  if ((label|0) == 52) {
   label = 0;
   if (!($0)) {
    $cnt$0 = $cnt$1;$fmt41 = $$lcssa323;$l$0 = $34;$l10n$0 = $l10n$3;
    continue;
   }
  }
  $167 = HEAP8[$fmt44$lcssa321>>0]|0;
  $168 = $167 << 24 >> 24;
  $169 = ($st$0$lcssa322|0)!=(0);
  $170 = $168 & 15;
  $171 = ($170|0)==(3);
  $or$cond15 = $169 & $171;
  $172 = $168 & -33;
  $t$0 = $or$cond15 ? $172 : $168;
  $173 = $fl$1 & 8192;
  $174 = ($173|0)==(0);
  $175 = $fl$1 & -65537;
  $fl$1$ = $174 ? $fl$1 : $175;
  L75: do {
   switch ($t$0|0) {
   case 110:  {
    switch ($st$0$lcssa322|0) {
    case 0:  {
     $182 = HEAP32[$arg>>2]|0;
     HEAP32[$182>>2] = $cnt$1;
     $cnt$0 = $cnt$1;$fmt41 = $$lcssa323;$l$0 = $34;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 1:  {
     $183 = HEAP32[$arg>>2]|0;
     HEAP32[$183>>2] = $cnt$1;
     $cnt$0 = $cnt$1;$fmt41 = $$lcssa323;$l$0 = $34;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 2:  {
     $184 = ($cnt$1|0)<(0);
     $185 = $184 << 31 >> 31;
     $186 = HEAP32[$arg>>2]|0;
     $187 = $186;
     $188 = $187;
     HEAP32[$188>>2] = $cnt$1;
     $189 = (($187) + 4)|0;
     $190 = $189;
     HEAP32[$190>>2] = $185;
     $cnt$0 = $cnt$1;$fmt41 = $$lcssa323;$l$0 = $34;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 3:  {
     $191 = $cnt$1&65535;
     $192 = HEAP32[$arg>>2]|0;
     HEAP16[$192>>1] = $191;
     $cnt$0 = $cnt$1;$fmt41 = $$lcssa323;$l$0 = $34;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 4:  {
     $193 = $cnt$1&255;
     $194 = HEAP32[$arg>>2]|0;
     HEAP8[$194>>0] = $193;
     $cnt$0 = $cnt$1;$fmt41 = $$lcssa323;$l$0 = $34;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 6:  {
     $195 = HEAP32[$arg>>2]|0;
     HEAP32[$195>>2] = $cnt$1;
     $cnt$0 = $cnt$1;$fmt41 = $$lcssa323;$l$0 = $34;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    case 7:  {
     $196 = ($cnt$1|0)<(0);
     $197 = $196 << 31 >> 31;
     $198 = HEAP32[$arg>>2]|0;
     $199 = $198;
     $200 = $199;
     HEAP32[$200>>2] = $cnt$1;
     $201 = (($199) + 4)|0;
     $202 = $201;
     HEAP32[$202>>2] = $197;
     $cnt$0 = $cnt$1;$fmt41 = $$lcssa323;$l$0 = $34;$l10n$0 = $l10n$3;
     continue L1;
     break;
    }
    default: {
     $cnt$0 = $cnt$1;$fmt41 = $$lcssa323;$l$0 = $34;$l10n$0 = $l10n$3;
     continue L1;
    }
    }
    break;
   }
   case 112:  {
    $203 = ($p$0>>>0)>(8);
    $204 = $203 ? $p$0 : 8;
    $205 = $fl$1$ | 8;
    $fl$3 = $205;$p$1 = $204;$t$1 = 120;
    label = 64;
    break;
   }
   case 88: case 120:  {
    $fl$3 = $fl$1$;$p$1 = $p$0;$t$1 = $t$0;
    label = 64;
    break;
   }
   case 111:  {
    $243 = $arg;
    $244 = $243;
    $245 = HEAP32[$244>>2]|0;
    $246 = (($243) + 4)|0;
    $247 = $246;
    $248 = HEAP32[$247>>2]|0;
    $249 = ($245|0)==(0);
    $250 = ($248|0)==(0);
    $251 = $249 & $250;
    if ($251) {
     $$0$lcssa$i = $1;
    } else {
     $$03$i33 = $1;$253 = $245;$257 = $248;
     while(1) {
      $252 = $253 & 7;
      $254 = $252 | 48;
      $255 = $254&255;
      $256 = ((($$03$i33)) + -1|0);
      HEAP8[$256>>0] = $255;
      $258 = (_bitshift64Lshr(($253|0),($257|0),3)|0);
      $259 = tempRet0;
      $260 = ($258|0)==(0);
      $261 = ($259|0)==(0);
      $262 = $260 & $261;
      if ($262) {
       $$0$lcssa$i = $256;
       break;
      } else {
       $$03$i33 = $256;$253 = $258;$257 = $259;
      }
     }
    }
    $263 = $fl$1$ & 8;
    $264 = ($263|0)==(0);
    if ($264) {
     $a$0 = $$0$lcssa$i;$fl$4 = $fl$1$;$p$2 = $p$0;$pl$1 = 0;$prefix$1 = 20569;
     label = 77;
    } else {
     $265 = $$0$lcssa$i;
     $266 = (($2) - ($265))|0;
     $267 = (($266) + 1)|0;
     $268 = ($p$0|0)<($267|0);
     $$p$0 = $268 ? $267 : $p$0;
     $a$0 = $$0$lcssa$i;$fl$4 = $fl$1$;$p$2 = $$p$0;$pl$1 = 0;$prefix$1 = 20569;
     label = 77;
    }
    break;
   }
   case 105: case 100:  {
    $269 = $arg;
    $270 = $269;
    $271 = HEAP32[$270>>2]|0;
    $272 = (($269) + 4)|0;
    $273 = $272;
    $274 = HEAP32[$273>>2]|0;
    $275 = ($274|0)<(0);
    if ($275) {
     $276 = (_i64Subtract(0,0,($271|0),($274|0))|0);
     $277 = tempRet0;
     $278 = $arg;
     $279 = $278;
     HEAP32[$279>>2] = $276;
     $280 = (($278) + 4)|0;
     $281 = $280;
     HEAP32[$281>>2] = $277;
     $286 = $276;$287 = $277;$pl$0 = 1;$prefix$0 = 20569;
     label = 76;
     break L75;
    }
    $282 = $fl$1$ & 2048;
    $283 = ($282|0)==(0);
    if ($283) {
     $284 = $fl$1$ & 1;
     $285 = ($284|0)==(0);
     $$ = $285 ? 20569 : (20571);
     $286 = $271;$287 = $274;$pl$0 = $284;$prefix$0 = $$;
     label = 76;
    } else {
     $286 = $271;$287 = $274;$pl$0 = 1;$prefix$0 = (20570);
     label = 76;
    }
    break;
   }
   case 117:  {
    $176 = $arg;
    $177 = $176;
    $178 = HEAP32[$177>>2]|0;
    $179 = (($176) + 4)|0;
    $180 = $179;
    $181 = HEAP32[$180>>2]|0;
    $286 = $178;$287 = $181;$pl$0 = 0;$prefix$0 = 20569;
    label = 76;
    break;
   }
   case 99:  {
    $307 = $arg;
    $308 = $307;
    $309 = HEAP32[$308>>2]|0;
    $310 = (($307) + 4)|0;
    $311 = $310;
    $312 = HEAP32[$311>>2]|0;
    $313 = $309&255;
    HEAP8[$3>>0] = $313;
    $a$2 = $3;$fl$6 = $175;$p$5 = 1;$pl$2 = 0;$prefix$2 = 20569;$z$2 = $1;
    break;
   }
   case 109:  {
    $314 = (___errno_location()|0);
    $315 = HEAP32[$314>>2]|0;
    $316 = (_strerror($315)|0);
    $a$1 = $316;
    label = 82;
    break;
   }
   case 115:  {
    $317 = HEAP32[$arg>>2]|0;
    $318 = ($317|0)!=(0|0);
    $319 = $318 ? $317 : 20579;
    $a$1 = $319;
    label = 82;
    break;
   }
   case 67:  {
    $326 = $arg;
    $327 = $326;
    $328 = HEAP32[$327>>2]|0;
    $329 = (($326) + 4)|0;
    $330 = $329;
    $331 = HEAP32[$330>>2]|0;
    HEAP32[$wc>>2] = $328;
    HEAP32[$4>>2] = 0;
    HEAP32[$arg>>2] = $wc;
    $p$4198 = -1;
    label = 86;
    break;
   }
   case 83:  {
    $332 = ($p$0|0)==(0);
    if ($332) {
     _pad($f,32,$w$1,0,$fl$1$);
     $i$0$lcssa200 = 0;
     label = 98;
    } else {
     $p$4198 = $p$0;
     label = 86;
    }
    break;
   }
   case 65: case 71: case 70: case 69: case 97: case 103: case 102: case 101:  {
    $359 = +HEAPF64[$arg>>3];
    HEAP32[$e2$i>>2] = 0;
    HEAPF64[tempDoublePtr>>3] = $359;$360 = HEAP32[tempDoublePtr>>2]|0;
    $361 = HEAP32[tempDoublePtr+4>>2]|0;
    $362 = ($361|0)<(0);
    if ($362) {
     $363 = -$359;
     $$07$i = $363;$pl$0$i = 1;$prefix$0$i = 20586;
    } else {
     $364 = $fl$1$ & 2048;
     $365 = ($364|0)==(0);
     if ($365) {
      $366 = $fl$1$ & 1;
      $367 = ($366|0)==(0);
      $$$i = $367 ? (20587) : (20592);
      $$07$i = $359;$pl$0$i = $366;$prefix$0$i = $$$i;
     } else {
      $$07$i = $359;$pl$0$i = 1;$prefix$0$i = (20589);
     }
    }
    HEAPF64[tempDoublePtr>>3] = $$07$i;$368 = HEAP32[tempDoublePtr>>2]|0;
    $369 = HEAP32[tempDoublePtr+4>>2]|0;
    $370 = $369 & 2146435072;
    $371 = ($370>>>0)<(2146435072);
    $372 = (0)<(0);
    $373 = ($370|0)==(2146435072);
    $374 = $373 & $372;
    $375 = $371 | $374;
    do {
     if ($375) {
      $391 = (+_frexpl($$07$i,$e2$i));
      $392 = $391 * 2.0;
      $393 = $392 != 0.0;
      if ($393) {
       $394 = HEAP32[$e2$i>>2]|0;
       $395 = (($394) + -1)|0;
       HEAP32[$e2$i>>2] = $395;
      }
      $396 = $t$0 | 32;
      $397 = ($396|0)==(97);
      if ($397) {
       $398 = $t$0 & 32;
       $399 = ($398|0)==(0);
       $400 = ((($prefix$0$i)) + 9|0);
       $prefix$0$$i = $399 ? $prefix$0$i : $400;
       $401 = $pl$0$i | 2;
       $402 = ($p$0>>>0)>(11);
       $403 = (12 - ($p$0))|0;
       $404 = ($403|0)==(0);
       $405 = $402 | $404;
       do {
        if ($405) {
         $$1$i = $392;
        } else {
         $re$169$i = $403;$round$068$i = 8.0;
         while(1) {
          $406 = (($re$169$i) + -1)|0;
          $407 = $round$068$i * 16.0;
          $408 = ($406|0)==(0);
          if ($408) {
           $$lcssa342 = $407;
           break;
          } else {
           $re$169$i = $406;$round$068$i = $407;
          }
         }
         $409 = HEAP8[$prefix$0$$i>>0]|0;
         $410 = ($409<<24>>24)==(45);
         if ($410) {
          $411 = -$392;
          $412 = $411 - $$lcssa342;
          $413 = $$lcssa342 + $412;
          $414 = -$413;
          $$1$i = $414;
          break;
         } else {
          $415 = $392 + $$lcssa342;
          $416 = $415 - $$lcssa342;
          $$1$i = $416;
          break;
         }
        }
       } while(0);
       $417 = HEAP32[$e2$i>>2]|0;
       $418 = ($417|0)<(0);
       $419 = (0 - ($417))|0;
       $420 = $418 ? $419 : $417;
       $421 = ($420|0)<(0);
       $422 = $421 << 31 >> 31;
       $423 = (_fmt_u($420,$422,$5)|0);
       $424 = ($423|0)==($5|0);
       if ($424) {
        HEAP8[$6>>0] = 48;
        $estr$0$i = $6;
       } else {
        $estr$0$i = $423;
       }
       $425 = $417 >> 31;
       $426 = $425 & 2;
       $427 = (($426) + 43)|0;
       $428 = $427&255;
       $429 = ((($estr$0$i)) + -1|0);
       HEAP8[$429>>0] = $428;
       $430 = (($t$0) + 15)|0;
       $431 = $430&255;
       $432 = ((($estr$0$i)) + -2|0);
       HEAP8[$432>>0] = $431;
       $notrhs$i = ($p$0|0)<(1);
       $433 = $fl$1$ & 8;
       $434 = ($433|0)==(0);
       $$2$i = $$1$i;$s$0$i = $buf$i;
       while(1) {
        $435 = (~~(($$2$i)));
        $436 = (20553 + ($435)|0);
        $437 = HEAP8[$436>>0]|0;
        $438 = $437&255;
        $439 = $438 | $398;
        $440 = $439&255;
        $441 = ((($s$0$i)) + 1|0);
        HEAP8[$s$0$i>>0] = $440;
        $442 = (+($435|0));
        $443 = $$2$i - $442;
        $444 = $443 * 16.0;
        $445 = $441;
        $446 = (($445) - ($7))|0;
        $447 = ($446|0)==(1);
        do {
         if ($447) {
          $notlhs$i = $444 == 0.0;
          $or$cond3$not$i = $notrhs$i & $notlhs$i;
          $or$cond$i = $434 & $or$cond3$not$i;
          if ($or$cond$i) {
           $s$1$i = $441;
           break;
          }
          $448 = ((($s$0$i)) + 2|0);
          HEAP8[$441>>0] = 46;
          $s$1$i = $448;
         } else {
          $s$1$i = $441;
         }
        } while(0);
        $449 = $444 != 0.0;
        if ($449) {
         $$2$i = $444;$s$0$i = $s$1$i;
        } else {
         $s$1$i$lcssa = $s$1$i;
         break;
        }
       }
       $450 = ($p$0|0)!=(0);
       $$pre182$i = $s$1$i$lcssa;
       $451 = (($10) + ($$pre182$i))|0;
       $452 = ($451|0)<($p$0|0);
       $or$cond240 = $450 & $452;
       $453 = $432;
       $454 = (($11) + ($p$0))|0;
       $455 = (($454) - ($453))|0;
       $456 = $432;
       $457 = (($9) - ($456))|0;
       $458 = (($457) + ($$pre182$i))|0;
       $l$0$i = $or$cond240 ? $455 : $458;
       $459 = (($l$0$i) + ($401))|0;
       _pad($f,32,$w$1,$459,$fl$1$);
       $460 = HEAP32[$f>>2]|0;
       $461 = $460 & 32;
       $462 = ($461|0)==(0);
       if ($462) {
        (___fwritex($prefix$0$$i,$401,$f)|0);
       }
       $463 = $fl$1$ ^ 65536;
       _pad($f,48,$w$1,$459,$463);
       $464 = (($$pre182$i) - ($7))|0;
       $465 = HEAP32[$f>>2]|0;
       $466 = $465 & 32;
       $467 = ($466|0)==(0);
       if ($467) {
        (___fwritex($buf$i,$464,$f)|0);
       }
       $468 = $432;
       $469 = (($8) - ($468))|0;
       $sum = (($464) + ($469))|0;
       $470 = (($l$0$i) - ($sum))|0;
       _pad($f,48,$470,0,0);
       $471 = HEAP32[$f>>2]|0;
       $472 = $471 & 32;
       $473 = ($472|0)==(0);
       if ($473) {
        (___fwritex($432,$469,$f)|0);
       }
       $474 = $fl$1$ ^ 8192;
       _pad($f,32,$w$1,$459,$474);
       $475 = ($459|0)<($w$1|0);
       $w$$i = $475 ? $w$1 : $459;
       $$0$i = $w$$i;
       break;
      }
      $476 = ($p$0|0)<(0);
      $$p$i = $476 ? 6 : $p$0;
      if ($393) {
       $477 = $392 * 268435456.0;
       $478 = HEAP32[$e2$i>>2]|0;
       $479 = (($478) + -28)|0;
       HEAP32[$e2$i>>2] = $479;
       $$3$i = $477;$480 = $479;
      } else {
       $$pre179$i = HEAP32[$e2$i>>2]|0;
       $$3$i = $392;$480 = $$pre179$i;
      }
      $481 = ($480|0)<(0);
      $$31$i = $481 ? $big$i : $12;
      $482 = $$31$i;
      $$4$i = $$3$i;$z$0$i = $$31$i;
      while(1) {
       $483 = (~~(($$4$i))>>>0);
       HEAP32[$z$0$i>>2] = $483;
       $484 = ((($z$0$i)) + 4|0);
       $485 = (+($483>>>0));
       $486 = $$4$i - $485;
       $487 = $486 * 1.0E+9;
       $488 = $487 != 0.0;
       if ($488) {
        $$4$i = $487;$z$0$i = $484;
       } else {
        $$lcssa326 = $484;
        break;
       }
      }
      $$pr$i = HEAP32[$e2$i>>2]|0;
      $489 = ($$pr$i|0)>(0);
      if ($489) {
       $490 = $$pr$i;$a$1147$i = $$31$i;$z$1146$i = $$lcssa326;
       while(1) {
        $491 = ($490|0)>(29);
        $492 = $491 ? 29 : $490;
        $d$0139$i = ((($z$1146$i)) + -4|0);
        $493 = ($d$0139$i>>>0)<($a$1147$i>>>0);
        do {
         if ($493) {
          $a$2$ph$i = $a$1147$i;
         } else {
          $carry$0140$i = 0;$d$0141$i = $d$0139$i;
          while(1) {
           $494 = HEAP32[$d$0141$i>>2]|0;
           $495 = (_bitshift64Shl(($494|0),0,($492|0))|0);
           $496 = tempRet0;
           $497 = (_i64Add(($495|0),($496|0),($carry$0140$i|0),0)|0);
           $498 = tempRet0;
           $499 = (___uremdi3(($497|0),($498|0),1000000000,0)|0);
           $500 = tempRet0;
           HEAP32[$d$0141$i>>2] = $499;
           $501 = (___udivdi3(($497|0),($498|0),1000000000,0)|0);
           $502 = tempRet0;
           $d$0$i = ((($d$0141$i)) + -4|0);
           $503 = ($d$0$i>>>0)<($a$1147$i>>>0);
           if ($503) {
            $$lcssa327 = $501;
            break;
           } else {
            $carry$0140$i = $501;$d$0141$i = $d$0$i;
           }
          }
          $504 = ($$lcssa327|0)==(0);
          if ($504) {
           $a$2$ph$i = $a$1147$i;
           break;
          }
          $505 = ((($a$1147$i)) + -4|0);
          HEAP32[$505>>2] = $$lcssa327;
          $a$2$ph$i = $505;
         }
        } while(0);
        $z$2$i = $z$1146$i;
        while(1) {
         $506 = ($z$2$i>>>0)>($a$2$ph$i>>>0);
         if (!($506)) {
          $z$2$i$lcssa = $z$2$i;
          break;
         }
         $507 = ((($z$2$i)) + -4|0);
         $508 = HEAP32[$507>>2]|0;
         $509 = ($508|0)==(0);
         if ($509) {
          $z$2$i = $507;
         } else {
          $z$2$i$lcssa = $z$2$i;
          break;
         }
        }
        $510 = HEAP32[$e2$i>>2]|0;
        $511 = (($510) - ($492))|0;
        HEAP32[$e2$i>>2] = $511;
        $512 = ($511|0)>(0);
        if ($512) {
         $490 = $511;$a$1147$i = $a$2$ph$i;$z$1146$i = $z$2$i$lcssa;
        } else {
         $$pr47$i = $511;$a$1$lcssa$i = $a$2$ph$i;$z$1$lcssa$i = $z$2$i$lcssa;
         break;
        }
       }
      } else {
       $$pr47$i = $$pr$i;$a$1$lcssa$i = $$31$i;$z$1$lcssa$i = $$lcssa326;
      }
      $513 = ($$pr47$i|0)<(0);
      if ($513) {
       $514 = (($$p$i) + 25)|0;
       $515 = (($514|0) / 9)&-1;
       $516 = (($515) + 1)|0;
       $517 = ($396|0)==(102);
       $519 = $$pr47$i;$a$3134$i = $a$1$lcssa$i;$z$3133$i = $z$1$lcssa$i;
       while(1) {
        $518 = (0 - ($519))|0;
        $520 = ($518|0)>(9);
        $521 = $520 ? 9 : $518;
        $522 = ($a$3134$i>>>0)<($z$3133$i>>>0);
        do {
         if ($522) {
          $526 = 1 << $521;
          $527 = (($526) + -1)|0;
          $528 = 1000000000 >>> $521;
          $carry3$0128$i = 0;$d$1127$i = $a$3134$i;
          while(1) {
           $529 = HEAP32[$d$1127$i>>2]|0;
           $530 = $529 & $527;
           $531 = $529 >>> $521;
           $532 = (($531) + ($carry3$0128$i))|0;
           HEAP32[$d$1127$i>>2] = $532;
           $533 = Math_imul($530, $528)|0;
           $534 = ((($d$1127$i)) + 4|0);
           $535 = ($534>>>0)<($z$3133$i>>>0);
           if ($535) {
            $carry3$0128$i = $533;$d$1127$i = $534;
           } else {
            $$lcssa329 = $533;
            break;
           }
          }
          $536 = HEAP32[$a$3134$i>>2]|0;
          $537 = ($536|0)==(0);
          $538 = ((($a$3134$i)) + 4|0);
          $$a$3$i = $537 ? $538 : $a$3134$i;
          $539 = ($$lcssa329|0)==(0);
          if ($539) {
           $$a$3186$i = $$a$3$i;$z$4$i = $z$3133$i;
           break;
          }
          $540 = ((($z$3133$i)) + 4|0);
          HEAP32[$z$3133$i>>2] = $$lcssa329;
          $$a$3186$i = $$a$3$i;$z$4$i = $540;
         } else {
          $523 = HEAP32[$a$3134$i>>2]|0;
          $524 = ($523|0)==(0);
          $525 = ((($a$3134$i)) + 4|0);
          $$a$3185$i = $524 ? $525 : $a$3134$i;
          $$a$3186$i = $$a$3185$i;$z$4$i = $z$3133$i;
         }
        } while(0);
        $541 = $517 ? $$31$i : $$a$3186$i;
        $542 = $z$4$i;
        $543 = $541;
        $544 = (($542) - ($543))|0;
        $545 = $544 >> 2;
        $546 = ($545|0)>($516|0);
        $547 = (($541) + ($516<<2)|0);
        $$z$4$i = $546 ? $547 : $z$4$i;
        $548 = HEAP32[$e2$i>>2]|0;
        $549 = (($548) + ($521))|0;
        HEAP32[$e2$i>>2] = $549;
        $550 = ($549|0)<(0);
        if ($550) {
         $519 = $549;$a$3134$i = $$a$3186$i;$z$3133$i = $$z$4$i;
        } else {
         $a$3$lcssa$i = $$a$3186$i;$z$3$lcssa$i = $$z$4$i;
         break;
        }
       }
      } else {
       $a$3$lcssa$i = $a$1$lcssa$i;$z$3$lcssa$i = $z$1$lcssa$i;
      }
      $551 = ($a$3$lcssa$i>>>0)<($z$3$lcssa$i>>>0);
      do {
       if ($551) {
        $552 = $a$3$lcssa$i;
        $553 = (($482) - ($552))|0;
        $554 = $553 >> 2;
        $555 = ($554*9)|0;
        $556 = HEAP32[$a$3$lcssa$i>>2]|0;
        $557 = ($556>>>0)<(10);
        if ($557) {
         $e$1$i = $555;
         break;
        } else {
         $e$0123$i = $555;$i$0122$i = 10;
        }
        while(1) {
         $558 = ($i$0122$i*10)|0;
         $559 = (($e$0123$i) + 1)|0;
         $560 = ($556>>>0)<($558>>>0);
         if ($560) {
          $e$1$i = $559;
          break;
         } else {
          $e$0123$i = $559;$i$0122$i = $558;
         }
        }
       } else {
        $e$1$i = 0;
       }
      } while(0);
      $561 = ($396|0)!=(102);
      $562 = $561 ? $e$1$i : 0;
      $563 = (($$p$i) - ($562))|0;
      $564 = ($396|0)==(103);
      $565 = ($$p$i|0)!=(0);
      $566 = $565 & $564;
      $$neg52$i = $566 << 31 >> 31;
      $567 = (($563) + ($$neg52$i))|0;
      $568 = $z$3$lcssa$i;
      $569 = (($568) - ($482))|0;
      $570 = $569 >> 2;
      $571 = ($570*9)|0;
      $572 = (($571) + -9)|0;
      $573 = ($567|0)<($572|0);
      if ($573) {
       $574 = (($567) + 9216)|0;
       $575 = (($574|0) / 9)&-1;
       $$sum$i = (($575) + -1023)|0;
       $576 = (($$31$i) + ($$sum$i<<2)|0);
       $577 = (($574|0) % 9)&-1;
       $j$0115$i = (($577) + 1)|0;
       $578 = ($j$0115$i|0)<(9);
       if ($578) {
        $i$1116$i = 10;$j$0117$i = $j$0115$i;
        while(1) {
         $579 = ($i$1116$i*10)|0;
         $j$0$i = (($j$0117$i) + 1)|0;
         $exitcond$i = ($j$0$i|0)==(9);
         if ($exitcond$i) {
          $i$1$lcssa$i = $579;
          break;
         } else {
          $i$1116$i = $579;$j$0117$i = $j$0$i;
         }
        }
       } else {
        $i$1$lcssa$i = 10;
       }
       $580 = HEAP32[$576>>2]|0;
       $581 = (($580>>>0) % ($i$1$lcssa$i>>>0))&-1;
       $582 = ($581|0)==(0);
       if ($582) {
        $$sum15$i = (($575) + -1022)|0;
        $583 = (($$31$i) + ($$sum15$i<<2)|0);
        $584 = ($583|0)==($z$3$lcssa$i|0);
        if ($584) {
         $a$7$i = $a$3$lcssa$i;$d$3$i = $576;$e$3$i = $e$1$i;
        } else {
         label = 163;
        }
       } else {
        label = 163;
       }
       do {
        if ((label|0) == 163) {
         label = 0;
         $585 = (($580>>>0) / ($i$1$lcssa$i>>>0))&-1;
         $586 = $585 & 1;
         $587 = ($586|0)==(0);
         $$20$i = $587 ? 9007199254740992.0 : 9007199254740994.0;
         $588 = (($i$1$lcssa$i|0) / 2)&-1;
         $589 = ($581>>>0)<($588>>>0);
         do {
          if ($589) {
           $small$0$i = 0.5;
          } else {
           $590 = ($581|0)==($588|0);
           if ($590) {
            $$sum16$i = (($575) + -1022)|0;
            $591 = (($$31$i) + ($$sum16$i<<2)|0);
            $592 = ($591|0)==($z$3$lcssa$i|0);
            if ($592) {
             $small$0$i = 1.0;
             break;
            }
           }
           $small$0$i = 1.5;
          }
         } while(0);
         $593 = ($pl$0$i|0)==(0);
         do {
          if ($593) {
           $round6$1$i = $$20$i;$small$1$i = $small$0$i;
          } else {
           $594 = HEAP8[$prefix$0$i>>0]|0;
           $595 = ($594<<24>>24)==(45);
           if (!($595)) {
            $round6$1$i = $$20$i;$small$1$i = $small$0$i;
            break;
           }
           $596 = -$$20$i;
           $597 = -$small$0$i;
           $round6$1$i = $596;$small$1$i = $597;
          }
         } while(0);
         $598 = (($580) - ($581))|0;
         HEAP32[$576>>2] = $598;
         $599 = $round6$1$i + $small$1$i;
         $600 = $599 != $round6$1$i;
         if (!($600)) {
          $a$7$i = $a$3$lcssa$i;$d$3$i = $576;$e$3$i = $e$1$i;
          break;
         }
         $601 = (($598) + ($i$1$lcssa$i))|0;
         HEAP32[$576>>2] = $601;
         $602 = ($601>>>0)>(999999999);
         if ($602) {
          $a$5109$i = $a$3$lcssa$i;$d$2108$i = $576;
          while(1) {
           $603 = ((($d$2108$i)) + -4|0);
           HEAP32[$d$2108$i>>2] = 0;
           $604 = ($603>>>0)<($a$5109$i>>>0);
           if ($604) {
            $605 = ((($a$5109$i)) + -4|0);
            HEAP32[$605>>2] = 0;
            $a$6$i = $605;
           } else {
            $a$6$i = $a$5109$i;
           }
           $606 = HEAP32[$603>>2]|0;
           $607 = (($606) + 1)|0;
           HEAP32[$603>>2] = $607;
           $608 = ($607>>>0)>(999999999);
           if ($608) {
            $a$5109$i = $a$6$i;$d$2108$i = $603;
           } else {
            $a$5$lcssa$i = $a$6$i;$d$2$lcssa$i = $603;
            break;
           }
          }
         } else {
          $a$5$lcssa$i = $a$3$lcssa$i;$d$2$lcssa$i = $576;
         }
         $609 = $a$5$lcssa$i;
         $610 = (($482) - ($609))|0;
         $611 = $610 >> 2;
         $612 = ($611*9)|0;
         $613 = HEAP32[$a$5$lcssa$i>>2]|0;
         $614 = ($613>>>0)<(10);
         if ($614) {
          $a$7$i = $a$5$lcssa$i;$d$3$i = $d$2$lcssa$i;$e$3$i = $612;
          break;
         } else {
          $e$2104$i = $612;$i$2103$i = 10;
         }
         while(1) {
          $615 = ($i$2103$i*10)|0;
          $616 = (($e$2104$i) + 1)|0;
          $617 = ($613>>>0)<($615>>>0);
          if ($617) {
           $a$7$i = $a$5$lcssa$i;$d$3$i = $d$2$lcssa$i;$e$3$i = $616;
           break;
          } else {
           $e$2104$i = $616;$i$2103$i = $615;
          }
         }
        }
       } while(0);
       $618 = ((($d$3$i)) + 4|0);
       $619 = ($z$3$lcssa$i>>>0)>($618>>>0);
       $$z$3$i = $619 ? $618 : $z$3$lcssa$i;
       $a$8$ph$i = $a$7$i;$e$4$ph$i = $e$3$i;$z$6$ph$i = $$z$3$i;
      } else {
       $a$8$ph$i = $a$3$lcssa$i;$e$4$ph$i = $e$1$i;$z$6$ph$i = $z$3$lcssa$i;
      }
      $620 = (0 - ($e$4$ph$i))|0;
      $z$6$i = $z$6$ph$i;
      while(1) {
       $621 = ($z$6$i>>>0)>($a$8$ph$i>>>0);
       if (!($621)) {
        $$lcssa159$i = 0;$z$6$i$lcssa = $z$6$i;
        break;
       }
       $622 = ((($z$6$i)) + -4|0);
       $623 = HEAP32[$622>>2]|0;
       $624 = ($623|0)==(0);
       if ($624) {
        $z$6$i = $622;
       } else {
        $$lcssa159$i = 1;$z$6$i$lcssa = $z$6$i;
        break;
       }
      }
      do {
       if ($564) {
        $625 = $565&1;
        $626 = $625 ^ 1;
        $$p$$i = (($626) + ($$p$i))|0;
        $627 = ($$p$$i|0)>($e$4$ph$i|0);
        $628 = ($e$4$ph$i|0)>(-5);
        $or$cond6$i = $627 & $628;
        if ($or$cond6$i) {
         $629 = (($t$0) + -1)|0;
         $$neg53$i = (($$p$$i) + -1)|0;
         $630 = (($$neg53$i) - ($e$4$ph$i))|0;
         $$013$i = $629;$$210$i = $630;
        } else {
         $631 = (($t$0) + -2)|0;
         $632 = (($$p$$i) + -1)|0;
         $$013$i = $631;$$210$i = $632;
        }
        $633 = $fl$1$ & 8;
        $634 = ($633|0)==(0);
        if (!($634)) {
         $$114$i = $$013$i;$$311$i = $$210$i;$$pre$phi184$iZ2D = $633;
         break;
        }
        do {
         if ($$lcssa159$i) {
          $635 = ((($z$6$i$lcssa)) + -4|0);
          $636 = HEAP32[$635>>2]|0;
          $637 = ($636|0)==(0);
          if ($637) {
           $j$2$i = 9;
           break;
          }
          $638 = (($636>>>0) % 10)&-1;
          $639 = ($638|0)==(0);
          if ($639) {
           $i$399$i = 10;$j$1100$i = 0;
          } else {
           $j$2$i = 0;
           break;
          }
          while(1) {
           $640 = ($i$399$i*10)|0;
           $641 = (($j$1100$i) + 1)|0;
           $642 = (($636>>>0) % ($640>>>0))&-1;
           $643 = ($642|0)==(0);
           if ($643) {
            $i$399$i = $640;$j$1100$i = $641;
           } else {
            $j$2$i = $641;
            break;
           }
          }
         } else {
          $j$2$i = 9;
         }
        } while(0);
        $644 = $$013$i | 32;
        $645 = ($644|0)==(102);
        $646 = $z$6$i$lcssa;
        $647 = (($646) - ($482))|0;
        $648 = $647 >> 2;
        $649 = ($648*9)|0;
        $650 = (($649) + -9)|0;
        if ($645) {
         $651 = (($650) - ($j$2$i))|0;
         $652 = ($651|0)<(0);
         $$21$i = $652 ? 0 : $651;
         $653 = ($$210$i|0)<($$21$i|0);
         $$210$$22$i = $653 ? $$210$i : $$21$i;
         $$114$i = $$013$i;$$311$i = $$210$$22$i;$$pre$phi184$iZ2D = 0;
         break;
        } else {
         $654 = (($650) + ($e$4$ph$i))|0;
         $655 = (($654) - ($j$2$i))|0;
         $656 = ($655|0)<(0);
         $$23$i = $656 ? 0 : $655;
         $657 = ($$210$i|0)<($$23$i|0);
         $$210$$24$i = $657 ? $$210$i : $$23$i;
         $$114$i = $$013$i;$$311$i = $$210$$24$i;$$pre$phi184$iZ2D = 0;
         break;
        }
       } else {
        $$pre183$i = $fl$1$ & 8;
        $$114$i = $t$0;$$311$i = $$p$i;$$pre$phi184$iZ2D = $$pre183$i;
       }
      } while(0);
      $658 = $$311$i | $$pre$phi184$iZ2D;
      $659 = ($658|0)!=(0);
      $660 = $659&1;
      $661 = $$114$i | 32;
      $662 = ($661|0)==(102);
      if ($662) {
       $663 = ($e$4$ph$i|0)>(0);
       $664 = $663 ? $e$4$ph$i : 0;
       $$pn$i = $664;$estr$2$i = 0;
      } else {
       $665 = ($e$4$ph$i|0)<(0);
       $666 = $665 ? $620 : $e$4$ph$i;
       $667 = ($666|0)<(0);
       $668 = $667 << 31 >> 31;
       $669 = (_fmt_u($666,$668,$5)|0);
       $670 = $669;
       $671 = (($8) - ($670))|0;
       $672 = ($671|0)<(2);
       if ($672) {
        $estr$193$i = $669;
        while(1) {
         $673 = ((($estr$193$i)) + -1|0);
         HEAP8[$673>>0] = 48;
         $674 = $673;
         $675 = (($8) - ($674))|0;
         $676 = ($675|0)<(2);
         if ($676) {
          $estr$193$i = $673;
         } else {
          $estr$1$lcssa$i = $673;
          break;
         }
        }
       } else {
        $estr$1$lcssa$i = $669;
       }
       $677 = $e$4$ph$i >> 31;
       $678 = $677 & 2;
       $679 = (($678) + 43)|0;
       $680 = $679&255;
       $681 = ((($estr$1$lcssa$i)) + -1|0);
       HEAP8[$681>>0] = $680;
       $682 = $$114$i&255;
       $683 = ((($estr$1$lcssa$i)) + -2|0);
       HEAP8[$683>>0] = $682;
       $684 = $683;
       $685 = (($8) - ($684))|0;
       $$pn$i = $685;$estr$2$i = $683;
      }
      $686 = (($pl$0$i) + 1)|0;
      $687 = (($686) + ($$311$i))|0;
      $l$1$i = (($687) + ($660))|0;
      $688 = (($l$1$i) + ($$pn$i))|0;
      _pad($f,32,$w$1,$688,$fl$1$);
      $689 = HEAP32[$f>>2]|0;
      $690 = $689 & 32;
      $691 = ($690|0)==(0);
      if ($691) {
       (___fwritex($prefix$0$i,$pl$0$i,$f)|0);
      }
      $692 = $fl$1$ ^ 65536;
      _pad($f,48,$w$1,$688,$692);
      do {
       if ($662) {
        $693 = ($a$8$ph$i>>>0)>($$31$i>>>0);
        $r$0$a$8$i = $693 ? $$31$i : $a$8$ph$i;
        $d$482$i = $r$0$a$8$i;
        while(1) {
         $694 = HEAP32[$d$482$i>>2]|0;
         $695 = (_fmt_u($694,0,$13)|0);
         $696 = ($d$482$i|0)==($r$0$a$8$i|0);
         do {
          if ($696) {
           $700 = ($695|0)==($13|0);
           if (!($700)) {
            $s7$1$i = $695;
            break;
           }
           HEAP8[$15>>0] = 48;
           $s7$1$i = $15;
          } else {
           $697 = ($695>>>0)>($buf$i>>>0);
           if ($697) {
            $s7$079$i = $695;
           } else {
            $s7$1$i = $695;
            break;
           }
           while(1) {
            $698 = ((($s7$079$i)) + -1|0);
            HEAP8[$698>>0] = 48;
            $699 = ($698>>>0)>($buf$i>>>0);
            if ($699) {
             $s7$079$i = $698;
            } else {
             $s7$1$i = $698;
             break;
            }
           }
          }
         } while(0);
         $701 = HEAP32[$f>>2]|0;
         $702 = $701 & 32;
         $703 = ($702|0)==(0);
         if ($703) {
          $704 = $s7$1$i;
          $705 = (($14) - ($704))|0;
          (___fwritex($s7$1$i,$705,$f)|0);
         }
         $706 = ((($d$482$i)) + 4|0);
         $707 = ($706>>>0)>($$31$i>>>0);
         if ($707) {
          $$lcssa339 = $706;
          break;
         } else {
          $d$482$i = $706;
         }
        }
        $708 = ($658|0)==(0);
        do {
         if (!($708)) {
          $709 = HEAP32[$f>>2]|0;
          $710 = $709 & 32;
          $711 = ($710|0)==(0);
          if (!($711)) {
           break;
          }
          (___fwritex(20621,1,$f)|0);
         }
        } while(0);
        $712 = ($$lcssa339>>>0)<($z$6$i$lcssa>>>0);
        $713 = ($$311$i|0)>(0);
        $714 = $713 & $712;
        if ($714) {
         $$41276$i = $$311$i;$d$575$i = $$lcssa339;
         while(1) {
          $715 = HEAP32[$d$575$i>>2]|0;
          $716 = (_fmt_u($715,0,$13)|0);
          $717 = ($716>>>0)>($buf$i>>>0);
          if ($717) {
           $s8$070$i = $716;
           while(1) {
            $718 = ((($s8$070$i)) + -1|0);
            HEAP8[$718>>0] = 48;
            $719 = ($718>>>0)>($buf$i>>>0);
            if ($719) {
             $s8$070$i = $718;
            } else {
             $s8$0$lcssa$i = $718;
             break;
            }
           }
          } else {
           $s8$0$lcssa$i = $716;
          }
          $720 = HEAP32[$f>>2]|0;
          $721 = $720 & 32;
          $722 = ($721|0)==(0);
          if ($722) {
           $723 = ($$41276$i|0)>(9);
           $724 = $723 ? 9 : $$41276$i;
           (___fwritex($s8$0$lcssa$i,$724,$f)|0);
          }
          $725 = ((($d$575$i)) + 4|0);
          $726 = (($$41276$i) + -9)|0;
          $727 = ($725>>>0)<($z$6$i$lcssa>>>0);
          $728 = ($$41276$i|0)>(9);
          $729 = $728 & $727;
          if ($729) {
           $$41276$i = $726;$d$575$i = $725;
          } else {
           $$412$lcssa$i = $726;
           break;
          }
         }
        } else {
         $$412$lcssa$i = $$311$i;
        }
        $730 = (($$412$lcssa$i) + 9)|0;
        _pad($f,48,$730,9,0);
       } else {
        $731 = ((($a$8$ph$i)) + 4|0);
        $z$6$$i = $$lcssa159$i ? $z$6$i$lcssa : $731;
        $732 = ($$311$i|0)>(-1);
        if ($732) {
         $733 = ($$pre$phi184$iZ2D|0)==(0);
         $$587$i = $$311$i;$d$686$i = $a$8$ph$i;
         while(1) {
          $734 = HEAP32[$d$686$i>>2]|0;
          $735 = (_fmt_u($734,0,$13)|0);
          $736 = ($735|0)==($13|0);
          if ($736) {
           HEAP8[$15>>0] = 48;
           $s9$0$i = $15;
          } else {
           $s9$0$i = $735;
          }
          $737 = ($d$686$i|0)==($a$8$ph$i|0);
          do {
           if ($737) {
            $741 = ((($s9$0$i)) + 1|0);
            $742 = HEAP32[$f>>2]|0;
            $743 = $742 & 32;
            $744 = ($743|0)==(0);
            if ($744) {
             (___fwritex($s9$0$i,1,$f)|0);
            }
            $745 = ($$587$i|0)<(1);
            $or$cond29$i = $733 & $745;
            if ($or$cond29$i) {
             $s9$2$i = $741;
             break;
            }
            $746 = HEAP32[$f>>2]|0;
            $747 = $746 & 32;
            $748 = ($747|0)==(0);
            if (!($748)) {
             $s9$2$i = $741;
             break;
            }
            (___fwritex(20621,1,$f)|0);
            $s9$2$i = $741;
           } else {
            $738 = ($s9$0$i>>>0)>($buf$i>>>0);
            if ($738) {
             $s9$183$i = $s9$0$i;
            } else {
             $s9$2$i = $s9$0$i;
             break;
            }
            while(1) {
             $739 = ((($s9$183$i)) + -1|0);
             HEAP8[$739>>0] = 48;
             $740 = ($739>>>0)>($buf$i>>>0);
             if ($740) {
              $s9$183$i = $739;
             } else {
              $s9$2$i = $739;
              break;
             }
            }
           }
          } while(0);
          $749 = $s9$2$i;
          $750 = (($14) - ($749))|0;
          $751 = HEAP32[$f>>2]|0;
          $752 = $751 & 32;
          $753 = ($752|0)==(0);
          if ($753) {
           $754 = ($$587$i|0)>($750|0);
           $755 = $754 ? $750 : $$587$i;
           (___fwritex($s9$2$i,$755,$f)|0);
          }
          $756 = (($$587$i) - ($750))|0;
          $757 = ((($d$686$i)) + 4|0);
          $758 = ($757>>>0)<($z$6$$i>>>0);
          $759 = ($756|0)>(-1);
          $760 = $758 & $759;
          if ($760) {
           $$587$i = $756;$d$686$i = $757;
          } else {
           $$5$lcssa$i = $756;
           break;
          }
         }
        } else {
         $$5$lcssa$i = $$311$i;
        }
        $761 = (($$5$lcssa$i) + 18)|0;
        _pad($f,48,$761,18,0);
        $762 = HEAP32[$f>>2]|0;
        $763 = $762 & 32;
        $764 = ($763|0)==(0);
        if (!($764)) {
         break;
        }
        $765 = $estr$2$i;
        $766 = (($8) - ($765))|0;
        (___fwritex($estr$2$i,$766,$f)|0);
       }
      } while(0);
      $767 = $fl$1$ ^ 8192;
      _pad($f,32,$w$1,$688,$767);
      $768 = ($688|0)<($w$1|0);
      $w$30$i = $768 ? $w$1 : $688;
      $$0$i = $w$30$i;
     } else {
      $376 = $t$0 & 32;
      $377 = ($376|0)!=(0);
      $378 = $377 ? 20605 : 20609;
      $379 = ($$07$i != $$07$i) | (0.0 != 0.0);
      $380 = $377 ? 20613 : 20617;
      $pl$1$i = $379 ? 0 : $pl$0$i;
      $s1$0$i = $379 ? $380 : $378;
      $381 = (($pl$1$i) + 3)|0;
      _pad($f,32,$w$1,$381,$175);
      $382 = HEAP32[$f>>2]|0;
      $383 = $382 & 32;
      $384 = ($383|0)==(0);
      if ($384) {
       (___fwritex($prefix$0$i,$pl$1$i,$f)|0);
       $$pre$i = HEAP32[$f>>2]|0;
       $386 = $$pre$i;
      } else {
       $386 = $382;
      }
      $385 = $386 & 32;
      $387 = ($385|0)==(0);
      if ($387) {
       (___fwritex($s1$0$i,3,$f)|0);
      }
      $388 = $fl$1$ ^ 8192;
      _pad($f,32,$w$1,$381,$388);
      $389 = ($381|0)<($w$1|0);
      $390 = $389 ? $w$1 : $381;
      $$0$i = $390;
     }
    } while(0);
    $cnt$0 = $cnt$1;$fmt41 = $$lcssa323;$l$0 = $$0$i;$l10n$0 = $l10n$3;
    continue L1;
    break;
   }
   default: {
    $a$2 = $fmt41;$fl$6 = $fl$1$;$p$5 = $p$0;$pl$2 = 0;$prefix$2 = 20569;$z$2 = $1;
   }
   }
  } while(0);
  L313: do {
   if ((label|0) == 64) {
    label = 0;
    $206 = $arg;
    $207 = $206;
    $208 = HEAP32[$207>>2]|0;
    $209 = (($206) + 4)|0;
    $210 = $209;
    $211 = HEAP32[$210>>2]|0;
    $212 = $t$1 & 32;
    $213 = ($208|0)==(0);
    $214 = ($211|0)==(0);
    $215 = $213 & $214;
    if ($215) {
     $a$0 = $1;$fl$4 = $fl$3;$p$2 = $p$1;$pl$1 = 0;$prefix$1 = 20569;
     label = 77;
    } else {
     $$012$i = $1;$217 = $208;$224 = $211;
     while(1) {
      $216 = $217 & 15;
      $218 = (20553 + ($216)|0);
      $219 = HEAP8[$218>>0]|0;
      $220 = $219&255;
      $221 = $220 | $212;
      $222 = $221&255;
      $223 = ((($$012$i)) + -1|0);
      HEAP8[$223>>0] = $222;
      $225 = (_bitshift64Lshr(($217|0),($224|0),4)|0);
      $226 = tempRet0;
      $227 = ($225|0)==(0);
      $228 = ($226|0)==(0);
      $229 = $227 & $228;
      if ($229) {
       $$lcssa344 = $223;
       break;
      } else {
       $$012$i = $223;$217 = $225;$224 = $226;
      }
     }
     $230 = $arg;
     $231 = $230;
     $232 = HEAP32[$231>>2]|0;
     $233 = (($230) + 4)|0;
     $234 = $233;
     $235 = HEAP32[$234>>2]|0;
     $236 = ($232|0)==(0);
     $237 = ($235|0)==(0);
     $238 = $236 & $237;
     $239 = $fl$3 & 8;
     $240 = ($239|0)==(0);
     $or$cond17 = $240 | $238;
     if ($or$cond17) {
      $a$0 = $$lcssa344;$fl$4 = $fl$3;$p$2 = $p$1;$pl$1 = 0;$prefix$1 = 20569;
      label = 77;
     } else {
      $241 = $t$1 >> 4;
      $242 = (20569 + ($241)|0);
      $a$0 = $$lcssa344;$fl$4 = $fl$3;$p$2 = $p$1;$pl$1 = 2;$prefix$1 = $242;
      label = 77;
     }
    }
   }
   else if ((label|0) == 76) {
    label = 0;
    $288 = (_fmt_u($286,$287,$1)|0);
    $a$0 = $288;$fl$4 = $fl$1$;$p$2 = $p$0;$pl$1 = $pl$0;$prefix$1 = $prefix$0;
    label = 77;
   }
   else if ((label|0) == 82) {
    label = 0;
    $320 = (_memchr($a$1,0,$p$0)|0);
    $321 = ($320|0)==(0|0);
    $322 = $320;
    $323 = $a$1;
    $324 = (($322) - ($323))|0;
    $325 = (($a$1) + ($p$0)|0);
    $z$1 = $321 ? $325 : $320;
    $p$3 = $321 ? $p$0 : $324;
    $a$2 = $a$1;$fl$6 = $175;$p$5 = $p$3;$pl$2 = 0;$prefix$2 = 20569;$z$2 = $z$1;
   }
   else if ((label|0) == 86) {
    label = 0;
    $333 = HEAP32[$arg>>2]|0;
    $i$0114 = 0;$l$1113 = 0;$ws$0115 = $333;
    while(1) {
     $334 = HEAP32[$ws$0115>>2]|0;
     $335 = ($334|0)==(0);
     if ($335) {
      $i$0$lcssa = $i$0114;$l$2 = $l$1113;
      break;
     }
     $336 = (_wctomb($mb,$334)|0);
     $337 = ($336|0)<(0);
     $338 = (($p$4198) - ($i$0114))|0;
     $339 = ($336>>>0)>($338>>>0);
     $or$cond20 = $337 | $339;
     if ($or$cond20) {
      $i$0$lcssa = $i$0114;$l$2 = $336;
      break;
     }
     $340 = ((($ws$0115)) + 4|0);
     $341 = (($336) + ($i$0114))|0;
     $342 = ($p$4198>>>0)>($341>>>0);
     if ($342) {
      $i$0114 = $341;$l$1113 = $336;$ws$0115 = $340;
     } else {
      $i$0$lcssa = $341;$l$2 = $336;
      break;
     }
    }
    $343 = ($l$2|0)<(0);
    if ($343) {
     $$0 = -1;
     break L1;
    }
    _pad($f,32,$w$1,$i$0$lcssa,$fl$1$);
    $344 = ($i$0$lcssa|0)==(0);
    if ($344) {
     $i$0$lcssa200 = 0;
     label = 98;
    } else {
     $345 = HEAP32[$arg>>2]|0;
     $i$1125 = 0;$ws$1126 = $345;
     while(1) {
      $346 = HEAP32[$ws$1126>>2]|0;
      $347 = ($346|0)==(0);
      if ($347) {
       $i$0$lcssa200 = $i$0$lcssa;
       label = 98;
       break L313;
      }
      $348 = ((($ws$1126)) + 4|0);
      $349 = (_wctomb($mb,$346)|0);
      $350 = (($349) + ($i$1125))|0;
      $351 = ($350|0)>($i$0$lcssa|0);
      if ($351) {
       $i$0$lcssa200 = $i$0$lcssa;
       label = 98;
       break L313;
      }
      $352 = HEAP32[$f>>2]|0;
      $353 = $352 & 32;
      $354 = ($353|0)==(0);
      if ($354) {
       (___fwritex($mb,$349,$f)|0);
      }
      $355 = ($350>>>0)<($i$0$lcssa>>>0);
      if ($355) {
       $i$1125 = $350;$ws$1126 = $348;
      } else {
       $i$0$lcssa200 = $i$0$lcssa;
       label = 98;
       break;
      }
     }
    }
   }
  } while(0);
  if ((label|0) == 98) {
   label = 0;
   $356 = $fl$1$ ^ 8192;
   _pad($f,32,$w$1,$i$0$lcssa200,$356);
   $357 = ($w$1|0)>($i$0$lcssa200|0);
   $358 = $357 ? $w$1 : $i$0$lcssa200;
   $cnt$0 = $cnt$1;$fmt41 = $$lcssa323;$l$0 = $358;$l10n$0 = $l10n$3;
   continue;
  }
  if ((label|0) == 77) {
   label = 0;
   $289 = ($p$2|0)>(-1);
   $290 = $fl$4 & -65537;
   $$fl$4 = $289 ? $290 : $fl$4;
   $291 = $arg;
   $292 = $291;
   $293 = HEAP32[$292>>2]|0;
   $294 = (($291) + 4)|0;
   $295 = $294;
   $296 = HEAP32[$295>>2]|0;
   $297 = ($293|0)!=(0);
   $298 = ($296|0)!=(0);
   $299 = $297 | $298;
   $300 = ($p$2|0)!=(0);
   $or$cond = $300 | $299;
   if ($or$cond) {
    $301 = $a$0;
    $302 = (($2) - ($301))|0;
    $303 = $299&1;
    $304 = $303 ^ 1;
    $305 = (($304) + ($302))|0;
    $306 = ($p$2|0)>($305|0);
    $p$2$ = $306 ? $p$2 : $305;
    $a$2 = $a$0;$fl$6 = $$fl$4;$p$5 = $p$2$;$pl$2 = $pl$1;$prefix$2 = $prefix$1;$z$2 = $1;
   } else {
    $a$2 = $1;$fl$6 = $$fl$4;$p$5 = 0;$pl$2 = $pl$1;$prefix$2 = $prefix$1;$z$2 = $1;
   }
  }
  $769 = $z$2;
  $770 = $a$2;
  $771 = (($769) - ($770))|0;
  $772 = ($p$5|0)<($771|0);
  $$p$5 = $772 ? $771 : $p$5;
  $773 = (($pl$2) + ($$p$5))|0;
  $774 = ($w$1|0)<($773|0);
  $w$2 = $774 ? $773 : $w$1;
  _pad($f,32,$w$2,$773,$fl$6);
  $775 = HEAP32[$f>>2]|0;
  $776 = $775 & 32;
  $777 = ($776|0)==(0);
  if ($777) {
   (___fwritex($prefix$2,$pl$2,$f)|0);
  }
  $778 = $fl$6 ^ 65536;
  _pad($f,48,$w$2,$773,$778);
  _pad($f,48,$$p$5,$771,0);
  $779 = HEAP32[$f>>2]|0;
  $780 = $779 & 32;
  $781 = ($780|0)==(0);
  if ($781) {
   (___fwritex($a$2,$771,$f)|0);
  }
  $782 = $fl$6 ^ 8192;
  _pad($f,32,$w$2,$773,$782);
  $cnt$0 = $cnt$1;$fmt41 = $$lcssa323;$l$0 = $w$2;$l10n$0 = $l10n$3;
 }
 L348: do {
  if ((label|0) == 245) {
   $783 = ($f|0)==(0|0);
   if ($783) {
    $784 = ($l10n$0$lcssa|0)==(0);
    if ($784) {
     $$0 = 0;
    } else {
     $i$2100 = 1;
     while(1) {
      $785 = (($nl_type) + ($i$2100<<2)|0);
      $786 = HEAP32[$785>>2]|0;
      $787 = ($786|0)==(0);
      if ($787) {
       $i$2100$lcssa = $i$2100;
       break;
      }
      $789 = (($nl_arg) + ($i$2100<<3)|0);
      _pop_arg($789,$786,$ap);
      $790 = (($i$2100) + 1)|0;
      $791 = ($790|0)<(10);
      if ($791) {
       $i$2100 = $790;
      } else {
       $$0 = 1;
       break L348;
      }
     }
     $788 = ($i$2100$lcssa|0)<(10);
     if ($788) {
      $i$398 = $i$2100$lcssa;
      while(1) {
       $794 = (($nl_type) + ($i$398<<2)|0);
       $795 = HEAP32[$794>>2]|0;
       $796 = ($795|0)==(0);
       $792 = (($i$398) + 1)|0;
       if (!($796)) {
        $$0 = -1;
        break L348;
       }
       $793 = ($792|0)<(10);
       if ($793) {
        $i$398 = $792;
       } else {
        $$0 = 1;
        break;
       }
      }
     } else {
      $$0 = 1;
     }
    }
   } else {
    $$0 = $cnt$1$lcssa;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function _cleanup521($p) {
 $p = $p|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($p)) + 68|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0);
 if ($2) {
  ___unlockfile($p);
 }
 return;
}
function _cleanup526($p) {
 $p = $p|0;
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($p)) + 68|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0);
 if ($2) {
  ___unlockfile($p);
 }
 return;
}
function _sift($head,$width,$cmp,$pshift,$lp) {
 $head = $head|0;
 $width = $width|0;
 $cmp = $cmp|0;
 $pshift = $pshift|0;
 $lp = $lp|0;
 var $$0$be = 0, $$01$be = 0, $$012 = 0, $$03 = 0, $$pre = 0, $$sum = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $ar = 0, $i$0$lcssa = 0, $i$04 = 0, $sum = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ar = sp;
 HEAP32[$ar>>2] = $head;
 $0 = ($pshift|0)>(1);
 L1: do {
  if ($0) {
   $1 = (0 - ($width))|0;
   $$012 = $pshift;$$03 = $head;$7 = $head;$i$04 = 1;
   while(1) {
    $2 = (($$03) + ($1)|0);
    $3 = (($$012) + -2)|0;
    $4 = (($lp) + ($3<<2)|0);
    $5 = HEAP32[$4>>2]|0;
    $sum = (($5) + ($width))|0;
    $$sum = (0 - ($sum))|0;
    $6 = (($$03) + ($$sum)|0);
    $8 = (FUNCTION_TABLE_iii[$cmp & 255]($7,$6)|0);
    $9 = ($8|0)>(-1);
    if ($9) {
     $10 = (FUNCTION_TABLE_iii[$cmp & 255]($7,$2)|0);
     $11 = ($10|0)>(-1);
     if ($11) {
      $i$0$lcssa = $i$04;
      break L1;
     }
    }
    $12 = (FUNCTION_TABLE_iii[$cmp & 255]($6,$2)|0);
    $13 = ($12|0)>(-1);
    $14 = (($i$04) + 1)|0;
    $15 = (($ar) + ($i$04<<2)|0);
    if ($13) {
     HEAP32[$15>>2] = $6;
     $16 = (($$012) + -1)|0;
     $$0$be = $6;$$01$be = $16;
    } else {
     HEAP32[$15>>2] = $2;
     $$0$be = $2;$$01$be = $3;
    }
    $17 = ($$01$be|0)>(1);
    if (!($17)) {
     $i$0$lcssa = $14;
     break L1;
    }
    $$pre = HEAP32[$ar>>2]|0;
    $$012 = $$01$be;$$03 = $$0$be;$7 = $$pre;$i$04 = $14;
   }
  } else {
   $i$0$lcssa = 1;
  }
 } while(0);
 _cycle($width,$ar,$i$0$lcssa);
 STACKTOP = sp;return;
}
function _trinkle($head,$width,$cmp,$pp,$pshift,$trusty,$lp) {
 $head = $head|0;
 $width = $width|0;
 $cmp = $cmp|0;
 $pp = $pp|0;
 $pshift = $pshift|0;
 $trusty = $trusty|0;
 $lp = $lp|0;
 var $$0$i = 0, $$0$lcssa = 0, $$0$lcssa49 = 0, $$01162 = 0, $$01162$phi = 0, $$02$i$i = 0, $$02$i3$i = 0, $$02$lcssa = 0, $$02$lcssa51 = 0, $$02964 = 0, $$03$lcssa = 0, $$03865 = 0, $$lcssa = 0, $$lcssa75 = 0, $$pre = 0, $$sum = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0;
 var $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $7 = 0, $8 = 0, $9 = 0, $ar = 0, $i$0$lcssa = 0, $i$0$lcssa50 = 0, $i$01063 = 0, $nTrailingZeros$03$i$i = 0, $nTrailingZeros$03$i2$i = 0, $nTrailingZeros$03$i2$i$lcssa = 0, $or$cond = 0, $phitmp = 0, $sum = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $ar = sp;
 $0 = HEAP32[$pp>>2]|0;
 $1 = ((($pp)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 HEAP32[$ar>>2] = $head;
 $3 = (0 - ($width))|0;
 $4 = ($0|0)!=(1);
 $5 = ($2|0)!=(0);
 $6 = $5 | $4;
 L1: do {
  if ($6) {
   $7 = (($lp) + ($pshift<<2)|0);
   $8 = HEAP32[$7>>2]|0;
   $9 = (0 - ($8))|0;
   $10 = (($head) + ($9)|0);
   $11 = (FUNCTION_TABLE_iii[$cmp & 255]($10,$head)|0);
   $12 = ($11|0)<(1);
   if ($12) {
    $$0$lcssa = $head;$$02$lcssa = $pshift;$$03$lcssa = $trusty;$i$0$lcssa = 1;
    label = 19;
   } else {
    $phitmp = ($trusty|0)==(0);
    $$01162 = $head;$$02964 = $pshift;$$03865 = $phitmp;$18 = $10;$27 = $0;$36 = $2;$i$01063 = 1;
    while(1) {
     $13 = ($$02964|0)>(1);
     $or$cond = $$03865 & $13;
     if ($or$cond) {
      $14 = (($$01162) + ($3)|0);
      $15 = (($$02964) + -2)|0;
      $16 = (($lp) + ($15<<2)|0);
      $17 = HEAP32[$16>>2]|0;
      $19 = (FUNCTION_TABLE_iii[$cmp & 255]($14,$18)|0);
      $20 = ($19|0)>(-1);
      if ($20) {
       $$0$lcssa49 = $$01162;$$02$lcssa51 = $$02964;$i$0$lcssa50 = $i$01063;
       label = 20;
       break L1;
      }
      $sum = (($17) + ($width))|0;
      $$sum = (0 - ($sum))|0;
      $21 = (($$01162) + ($$sum)|0);
      $22 = (FUNCTION_TABLE_iii[$cmp & 255]($21,$18)|0);
      $23 = ($22|0)>(-1);
      if ($23) {
       $$0$lcssa49 = $$01162;$$02$lcssa51 = $$02964;$i$0$lcssa50 = $i$01063;
       label = 20;
       break L1;
      }
     }
     $24 = (($i$01063) + 1)|0;
     $25 = (($ar) + ($i$01063<<2)|0);
     HEAP32[$25>>2] = $18;
     $26 = (($27) + -1)|0;
     $28 = ($26|0)==(0);
     do {
      if ($28) {
       $49 = 32;
       label = 16;
      } else {
       $29 = $26 & 1;
       $30 = ($29|0)==(0);
       if ($30) {
        $$02$i$i = $26;$nTrailingZeros$03$i$i = 0;
        while(1) {
         $31 = (($nTrailingZeros$03$i$i) + 1)|0;
         $32 = $$02$i$i >>> 1;
         $33 = $32 & 1;
         $34 = ($33|0)==(0);
         if ($34) {
          $$02$i$i = $32;$nTrailingZeros$03$i$i = $31;
         } else {
          $$lcssa = $31;
          break;
         }
        }
        $35 = ($$lcssa|0)==(0);
        if ($35) {
         label = 11;
        } else {
         $46 = $$lcssa;
        }
       } else {
        label = 11;
       }
       if ((label|0) == 11) {
        label = 0;
        $37 = ($36|0)==(0);
        if ($37) {
         $49 = 64;
         label = 16;
         break;
        }
        $38 = $36 & 1;
        $39 = ($38|0)==(0);
        if ($39) {
         $$02$i3$i = $36;$nTrailingZeros$03$i2$i = 0;
        } else {
         $$0$i = 0;$51 = $27;$54 = $36;$58 = 0;
         break;
        }
        while(1) {
         $40 = (($nTrailingZeros$03$i2$i) + 1)|0;
         $41 = $$02$i3$i >>> 1;
         $42 = $41 & 1;
         $43 = ($42|0)==(0);
         if ($43) {
          $$02$i3$i = $41;$nTrailingZeros$03$i2$i = $40;
         } else {
          $$lcssa75 = $40;$nTrailingZeros$03$i2$i$lcssa = $nTrailingZeros$03$i2$i;
          break;
         }
        }
        $44 = (($nTrailingZeros$03$i2$i$lcssa) + 33)|0;
        $45 = ($$lcssa75|0)==(0);
        if ($45) {
         $$0$i = 0;$51 = $27;$54 = $36;$58 = 0;
         break;
        } else {
         $46 = $44;
        }
       }
       $47 = ($46>>>0)>(31);
       if ($47) {
        $49 = $46;
        label = 16;
       } else {
        $$0$i = $46;$51 = $27;$54 = $36;$58 = $46;
       }
      }
     } while(0);
     if ((label|0) == 16) {
      label = 0;
      $48 = (($49) + -32)|0;
      $$0$i = $48;$51 = $36;$54 = 0;$58 = $49;
     }
     $50 = $51 >>> $$0$i;
     $52 = (32 - ($$0$i))|0;
     $53 = $54 << $52;
     $55 = $53 | $50;
     $56 = $54 >>> $$0$i;
     $57 = (($58) + ($$02964))|0;
     $59 = ($55|0)!=(1);
     $60 = ($56|0)!=(0);
     $61 = $60 | $59;
     if (!($61)) {
      $$0$lcssa49 = $18;$$02$lcssa51 = $57;$i$0$lcssa50 = $24;
      label = 20;
      break L1;
     }
     $$pre = HEAP32[$ar>>2]|0;
     $62 = (($lp) + ($57<<2)|0);
     $63 = HEAP32[$62>>2]|0;
     $64 = (0 - ($63))|0;
     $65 = (($18) + ($64)|0);
     $66 = (FUNCTION_TABLE_iii[$cmp & 255]($65,$$pre)|0);
     $67 = ($66|0)<(1);
     if ($67) {
      $$0$lcssa = $18;$$02$lcssa = $57;$$03$lcssa = 0;$i$0$lcssa = $24;
      label = 19;
      break;
     } else {
      $$01162$phi = $18;$$02964 = $57;$$03865 = 1;$18 = $65;$27 = $55;$36 = $56;$i$01063 = $24;$$01162 = $$01162$phi;
     }
    }
   }
  } else {
   $$0$lcssa = $head;$$02$lcssa = $pshift;$$03$lcssa = $trusty;$i$0$lcssa = 1;
   label = 19;
  }
 } while(0);
 if ((label|0) == 19) {
  $68 = ($$03$lcssa|0)==(0);
  if ($68) {
   $$0$lcssa49 = $$0$lcssa;$$02$lcssa51 = $$02$lcssa;$i$0$lcssa50 = $i$0$lcssa;
   label = 20;
  }
 }
 if ((label|0) == 20) {
  _cycle($width,$ar,$i$0$lcssa50);
  _sift($$0$lcssa49,$width,$cmp,$$02$lcssa51,$lp);
 }
 STACKTOP = sp;return;
}
function _strtox($s,$p,$prec) {
 $s = $s|0;
 $p = $p|0;
 $prec = $prec|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0.0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $f = 0, dest = 0, label = 0;
 var sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $f = sp;
 dest=$f; stop=dest+112|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $0 = ((($f)) + 4|0);
 HEAP32[$0>>2] = $s;
 $1 = ((($f)) + 8|0);
 HEAP32[$1>>2] = (-1);
 $2 = ((($f)) + 44|0);
 HEAP32[$2>>2] = $s;
 $3 = ((($f)) + 76|0);
 HEAP32[$3>>2] = -1;
 ___shlim($f,0);
 $4 = (+___floatscan($f,$prec,1));
 $5 = ((($f)) + 108|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = HEAP32[$0>>2]|0;
 $8 = HEAP32[$1>>2]|0;
 $9 = $7;
 $10 = $8;
 $11 = (($9) - ($10))|0;
 $12 = (($11) + ($6))|0;
 $13 = ($p|0)==(0|0);
 if (!($13)) {
  $14 = ($12|0)!=(0);
  $15 = (($s) + ($12)|0);
  $16 = $14 ? $15 : $s;
  HEAP32[$p>>2] = $16;
 }
 STACKTOP = sp;return (+$4);
}
function _strtox555($s,$p,$base,$0,$1) {
 $s = $s|0;
 $p = $p|0;
 $base = $base|0;
 $0 = $0|0;
 $1 = $1|0;
 var $$sink = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $f = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $f = sp;
 HEAP32[$f>>2] = 0;
 $2 = ((($f)) + 4|0);
 HEAP32[$2>>2] = $s;
 $3 = ((($f)) + 44|0);
 HEAP32[$3>>2] = $s;
 $4 = ($s|0)<(0|0);
 $5 = ((($s)) + 2147483647|0);
 $$sink = $4 ? (-1) : $5;
 $6 = ((($f)) + 8|0);
 HEAP32[$6>>2] = $$sink;
 $7 = ((($f)) + 76|0);
 HEAP32[$7>>2] = -1;
 ___shlim($f,0);
 $8 = (___intscan($f,$base,1,$0,$1)|0);
 $9 = tempRet0;
 $10 = ($p|0)==(0|0);
 if (!($10)) {
  $11 = ((($f)) + 108|0);
  $12 = HEAP32[$11>>2]|0;
  $13 = HEAP32[$2>>2]|0;
  $14 = HEAP32[$6>>2]|0;
  $15 = $13;
  $16 = $14;
  $17 = (($15) + ($12))|0;
  $18 = (($17) - ($16))|0;
  $19 = (($s) + ($18)|0);
  HEAP32[$p>>2] = $19;
 }
 tempRet0 = ($9);
 STACKTOP = sp;return ($8|0);
}
function _cycle($width,$ar,$n) {
 $width = $width|0;
 $ar = $ar|0;
 $n = $n|0;
 var $$02 = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, $i$01 = 0;
 var $tmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $tmp = sp;
 $0 = ($n|0)<(2);
 L1: do {
  if (!($0)) {
   $1 = (($ar) + ($n<<2)|0);
   HEAP32[$1>>2] = $tmp;
   $2 = ($width|0)==(0);
   if (!($2)) {
    $$02 = $width;$6 = $tmp;
    while(1) {
     $3 = ($$02>>>0)>(256);
     $4 = $3 ? 256 : $$02;
     $5 = HEAP32[$ar>>2]|0;
     _memcpy(($6|0),($5|0),($4|0))|0;
     $i$01 = 0;
     while(1) {
      $7 = (($ar) + ($i$01<<2)|0);
      $8 = HEAP32[$7>>2]|0;
      $9 = (($i$01) + 1)|0;
      $10 = (($ar) + ($9<<2)|0);
      $11 = HEAP32[$10>>2]|0;
      _memcpy(($8|0),($11|0),($4|0))|0;
      $12 = HEAP32[$7>>2]|0;
      $13 = (($12) + ($4)|0);
      HEAP32[$7>>2] = $13;
      $exitcond = ($9|0)==($n|0);
      if ($exitcond) {
       break;
      } else {
       $i$01 = $9;
      }
     }
     $14 = ($$02|0)==($4|0);
     if ($14) {
      break L1;
     }
     $15 = (($$02) - ($4))|0;
     $$pre = HEAP32[$1>>2]|0;
     $$02 = $15;$6 = $$pre;
    }
   }
  }
 } while(0);
 STACKTOP = sp;return;
}
function _sn_write($f,$s,$l) {
 $f = $f|0;
 $s = $s|0;
 $l = $l|0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $l$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($f)) + 16|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($f)) + 20|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $1;
 $5 = $3;
 $6 = (($4) - ($5))|0;
 $7 = ($6>>>0)>($l>>>0);
 $l$ = $7 ? $l : $6;
 _memcpy(($3|0),($s|0),($l$|0))|0;
 $8 = HEAP32[$2>>2]|0;
 $9 = (($8) + ($l$)|0);
 HEAP32[$2>>2] = $9;
 return ($l|0);
}
function _pop_arg($arg,$type,$ap) {
 $arg = $arg|0;
 $type = $type|0;
 $ap = $ap|0;
 var $$mask = 0, $$mask1 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0.0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0.0;
 var $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $arglist_current = 0, $arglist_current11 = 0, $arglist_current14 = 0, $arglist_current17 = 0;
 var $arglist_current2 = 0, $arglist_current20 = 0, $arglist_current23 = 0, $arglist_current26 = 0, $arglist_current5 = 0, $arglist_current8 = 0, $arglist_next = 0, $arglist_next12 = 0, $arglist_next15 = 0, $arglist_next18 = 0, $arglist_next21 = 0, $arglist_next24 = 0, $arglist_next27 = 0, $arglist_next3 = 0, $arglist_next6 = 0, $arglist_next9 = 0, $expanded = 0, $expanded28 = 0, $expanded30 = 0, $expanded31 = 0;
 var $expanded32 = 0, $expanded34 = 0, $expanded35 = 0, $expanded37 = 0, $expanded38 = 0, $expanded39 = 0, $expanded41 = 0, $expanded42 = 0, $expanded44 = 0, $expanded45 = 0, $expanded46 = 0, $expanded48 = 0, $expanded49 = 0, $expanded51 = 0, $expanded52 = 0, $expanded53 = 0, $expanded55 = 0, $expanded56 = 0, $expanded58 = 0, $expanded59 = 0;
 var $expanded60 = 0, $expanded62 = 0, $expanded63 = 0, $expanded65 = 0, $expanded66 = 0, $expanded67 = 0, $expanded69 = 0, $expanded70 = 0, $expanded72 = 0, $expanded73 = 0, $expanded74 = 0, $expanded76 = 0, $expanded77 = 0, $expanded79 = 0, $expanded80 = 0, $expanded81 = 0, $expanded83 = 0, $expanded84 = 0, $expanded86 = 0, $expanded87 = 0;
 var $expanded88 = 0, $expanded90 = 0, $expanded91 = 0, $expanded93 = 0, $expanded94 = 0, $expanded95 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($type>>>0)>(20);
 L1: do {
  if (!($0)) {
   do {
    switch ($type|0) {
    case 9:  {
     $arglist_current = HEAP32[$ap>>2]|0;
     $1 = $arglist_current;
     $2 = ((0) + 4|0);
     $expanded28 = $2;
     $expanded = (($expanded28) - 1)|0;
     $3 = (($1) + ($expanded))|0;
     $4 = ((0) + 4|0);
     $expanded32 = $4;
     $expanded31 = (($expanded32) - 1)|0;
     $expanded30 = $expanded31 ^ -1;
     $5 = $3 & $expanded30;
     $6 = $5;
     $7 = HEAP32[$6>>2]|0;
     $arglist_next = ((($6)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next;
     HEAP32[$arg>>2] = $7;
     break L1;
     break;
    }
    case 10:  {
     $arglist_current2 = HEAP32[$ap>>2]|0;
     $8 = $arglist_current2;
     $9 = ((0) + 4|0);
     $expanded35 = $9;
     $expanded34 = (($expanded35) - 1)|0;
     $10 = (($8) + ($expanded34))|0;
     $11 = ((0) + 4|0);
     $expanded39 = $11;
     $expanded38 = (($expanded39) - 1)|0;
     $expanded37 = $expanded38 ^ -1;
     $12 = $10 & $expanded37;
     $13 = $12;
     $14 = HEAP32[$13>>2]|0;
     $arglist_next3 = ((($13)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next3;
     $15 = ($14|0)<(0);
     $16 = $15 << 31 >> 31;
     $17 = $arg;
     $18 = $17;
     HEAP32[$18>>2] = $14;
     $19 = (($17) + 4)|0;
     $20 = $19;
     HEAP32[$20>>2] = $16;
     break L1;
     break;
    }
    case 11:  {
     $arglist_current5 = HEAP32[$ap>>2]|0;
     $21 = $arglist_current5;
     $22 = ((0) + 4|0);
     $expanded42 = $22;
     $expanded41 = (($expanded42) - 1)|0;
     $23 = (($21) + ($expanded41))|0;
     $24 = ((0) + 4|0);
     $expanded46 = $24;
     $expanded45 = (($expanded46) - 1)|0;
     $expanded44 = $expanded45 ^ -1;
     $25 = $23 & $expanded44;
     $26 = $25;
     $27 = HEAP32[$26>>2]|0;
     $arglist_next6 = ((($26)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next6;
     $28 = $arg;
     $29 = $28;
     HEAP32[$29>>2] = $27;
     $30 = (($28) + 4)|0;
     $31 = $30;
     HEAP32[$31>>2] = 0;
     break L1;
     break;
    }
    case 12:  {
     $arglist_current8 = HEAP32[$ap>>2]|0;
     $32 = $arglist_current8;
     $33 = ((0) + 8|0);
     $expanded49 = $33;
     $expanded48 = (($expanded49) - 1)|0;
     $34 = (($32) + ($expanded48))|0;
     $35 = ((0) + 8|0);
     $expanded53 = $35;
     $expanded52 = (($expanded53) - 1)|0;
     $expanded51 = $expanded52 ^ -1;
     $36 = $34 & $expanded51;
     $37 = $36;
     $38 = $37;
     $39 = $38;
     $40 = HEAP32[$39>>2]|0;
     $41 = (($38) + 4)|0;
     $42 = $41;
     $43 = HEAP32[$42>>2]|0;
     $arglist_next9 = ((($37)) + 8|0);
     HEAP32[$ap>>2] = $arglist_next9;
     $44 = $arg;
     $45 = $44;
     HEAP32[$45>>2] = $40;
     $46 = (($44) + 4)|0;
     $47 = $46;
     HEAP32[$47>>2] = $43;
     break L1;
     break;
    }
    case 13:  {
     $arglist_current11 = HEAP32[$ap>>2]|0;
     $48 = $arglist_current11;
     $49 = ((0) + 4|0);
     $expanded56 = $49;
     $expanded55 = (($expanded56) - 1)|0;
     $50 = (($48) + ($expanded55))|0;
     $51 = ((0) + 4|0);
     $expanded60 = $51;
     $expanded59 = (($expanded60) - 1)|0;
     $expanded58 = $expanded59 ^ -1;
     $52 = $50 & $expanded58;
     $53 = $52;
     $54 = HEAP32[$53>>2]|0;
     $arglist_next12 = ((($53)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next12;
     $55 = $54&65535;
     $56 = $55 << 16 >> 16;
     $57 = ($56|0)<(0);
     $58 = $57 << 31 >> 31;
     $59 = $arg;
     $60 = $59;
     HEAP32[$60>>2] = $56;
     $61 = (($59) + 4)|0;
     $62 = $61;
     HEAP32[$62>>2] = $58;
     break L1;
     break;
    }
    case 14:  {
     $arglist_current14 = HEAP32[$ap>>2]|0;
     $63 = $arglist_current14;
     $64 = ((0) + 4|0);
     $expanded63 = $64;
     $expanded62 = (($expanded63) - 1)|0;
     $65 = (($63) + ($expanded62))|0;
     $66 = ((0) + 4|0);
     $expanded67 = $66;
     $expanded66 = (($expanded67) - 1)|0;
     $expanded65 = $expanded66 ^ -1;
     $67 = $65 & $expanded65;
     $68 = $67;
     $69 = HEAP32[$68>>2]|0;
     $arglist_next15 = ((($68)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next15;
     $$mask1 = $69 & 65535;
     $70 = $arg;
     $71 = $70;
     HEAP32[$71>>2] = $$mask1;
     $72 = (($70) + 4)|0;
     $73 = $72;
     HEAP32[$73>>2] = 0;
     break L1;
     break;
    }
    case 15:  {
     $arglist_current17 = HEAP32[$ap>>2]|0;
     $74 = $arglist_current17;
     $75 = ((0) + 4|0);
     $expanded70 = $75;
     $expanded69 = (($expanded70) - 1)|0;
     $76 = (($74) + ($expanded69))|0;
     $77 = ((0) + 4|0);
     $expanded74 = $77;
     $expanded73 = (($expanded74) - 1)|0;
     $expanded72 = $expanded73 ^ -1;
     $78 = $76 & $expanded72;
     $79 = $78;
     $80 = HEAP32[$79>>2]|0;
     $arglist_next18 = ((($79)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next18;
     $81 = $80&255;
     $82 = $81 << 24 >> 24;
     $83 = ($82|0)<(0);
     $84 = $83 << 31 >> 31;
     $85 = $arg;
     $86 = $85;
     HEAP32[$86>>2] = $82;
     $87 = (($85) + 4)|0;
     $88 = $87;
     HEAP32[$88>>2] = $84;
     break L1;
     break;
    }
    case 16:  {
     $arglist_current20 = HEAP32[$ap>>2]|0;
     $89 = $arglist_current20;
     $90 = ((0) + 4|0);
     $expanded77 = $90;
     $expanded76 = (($expanded77) - 1)|0;
     $91 = (($89) + ($expanded76))|0;
     $92 = ((0) + 4|0);
     $expanded81 = $92;
     $expanded80 = (($expanded81) - 1)|0;
     $expanded79 = $expanded80 ^ -1;
     $93 = $91 & $expanded79;
     $94 = $93;
     $95 = HEAP32[$94>>2]|0;
     $arglist_next21 = ((($94)) + 4|0);
     HEAP32[$ap>>2] = $arglist_next21;
     $$mask = $95 & 255;
     $96 = $arg;
     $97 = $96;
     HEAP32[$97>>2] = $$mask;
     $98 = (($96) + 4)|0;
     $99 = $98;
     HEAP32[$99>>2] = 0;
     break L1;
     break;
    }
    case 17:  {
     $arglist_current23 = HEAP32[$ap>>2]|0;
     $100 = $arglist_current23;
     $101 = ((0) + 8|0);
     $expanded84 = $101;
     $expanded83 = (($expanded84) - 1)|0;
     $102 = (($100) + ($expanded83))|0;
     $103 = ((0) + 8|0);
     $expanded88 = $103;
     $expanded87 = (($expanded88) - 1)|0;
     $expanded86 = $expanded87 ^ -1;
     $104 = $102 & $expanded86;
     $105 = $104;
     $106 = +HEAPF64[$105>>3];
     $arglist_next24 = ((($105)) + 8|0);
     HEAP32[$ap>>2] = $arglist_next24;
     HEAPF64[$arg>>3] = $106;
     break L1;
     break;
    }
    case 18:  {
     $arglist_current26 = HEAP32[$ap>>2]|0;
     $107 = $arglist_current26;
     $108 = ((0) + 8|0);
     $expanded91 = $108;
     $expanded90 = (($expanded91) - 1)|0;
     $109 = (($107) + ($expanded90))|0;
     $110 = ((0) + 8|0);
     $expanded95 = $110;
     $expanded94 = (($expanded95) - 1)|0;
     $expanded93 = $expanded94 ^ -1;
     $111 = $109 & $expanded93;
     $112 = $111;
     $113 = +HEAPF64[$112>>3];
     $arglist_next27 = ((($112)) + 8|0);
     HEAP32[$ap>>2] = $arglist_next27;
     HEAPF64[$arg>>3] = $113;
     break L1;
     break;
    }
    default: {
     break L1;
    }
    }
   } while(0);
  }
 } while(0);
 return;
}
function _fmt_u($0,$1,$s) {
 $0 = $0|0;
 $1 = $1|0;
 $s = $s|0;
 var $$0$lcssa = 0, $$01$lcssa$off0 = 0, $$05 = 0, $$1$lcssa = 0, $$12 = 0, $$lcssa20 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $y$03 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1>>>0)>(0);
 $3 = ($0>>>0)>(4294967295);
 $4 = ($1|0)==(0);
 $5 = $4 & $3;
 $6 = $2 | $5;
 if ($6) {
  $$05 = $s;$7 = $0;$8 = $1;
  while(1) {
   $9 = (___uremdi3(($7|0),($8|0),10,0)|0);
   $10 = tempRet0;
   $11 = $9 | 48;
   $12 = $11&255;
   $13 = ((($$05)) + -1|0);
   HEAP8[$13>>0] = $12;
   $14 = (___udivdi3(($7|0),($8|0),10,0)|0);
   $15 = tempRet0;
   $16 = ($8>>>0)>(9);
   $17 = ($7>>>0)>(4294967295);
   $18 = ($8|0)==(9);
   $19 = $18 & $17;
   $20 = $16 | $19;
   if ($20) {
    $$05 = $13;$7 = $14;$8 = $15;
   } else {
    $$lcssa20 = $13;$28 = $14;$29 = $15;
    break;
   }
  }
  $$0$lcssa = $$lcssa20;$$01$lcssa$off0 = $28;
 } else {
  $$0$lcssa = $s;$$01$lcssa$off0 = $0;
 }
 $21 = ($$01$lcssa$off0|0)==(0);
 if ($21) {
  $$1$lcssa = $$0$lcssa;
 } else {
  $$12 = $$0$lcssa;$y$03 = $$01$lcssa$off0;
  while(1) {
   $22 = (($y$03>>>0) % 10)&-1;
   $23 = $22 | 48;
   $24 = $23&255;
   $25 = ((($$12)) + -1|0);
   HEAP8[$25>>0] = $24;
   $26 = (($y$03>>>0) / 10)&-1;
   $27 = ($y$03>>>0)<(10);
   if ($27) {
    $$1$lcssa = $25;
    break;
   } else {
    $$12 = $25;$y$03 = $26;
   }
  }
 }
 return ($$1$lcssa|0);
}
function _pad($f,$c,$w,$l,$fl) {
 $f = $f|0;
 $c = $c|0;
 $w = $w|0;
 $l = $l|0;
 $fl = $fl|0;
 var $$0$lcssa6 = 0, $$02 = 0, $$pre = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $or$cond = 0, $pad = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abort();
 $pad = sp;
 $0 = $fl & 73728;
 $1 = ($0|0)==(0);
 $2 = ($w|0)>($l|0);
 $or$cond = $2 & $1;
 do {
  if ($or$cond) {
   $3 = (($w) - ($l))|0;
   $4 = ($3>>>0)>(256);
   $5 = $4 ? 256 : $3;
   _memset(($pad|0),($c|0),($5|0))|0;
   $6 = ($3>>>0)>(255);
   $7 = HEAP32[$f>>2]|0;
   $8 = $7 & 32;
   $9 = ($8|0)==(0);
   if ($6) {
    $10 = (($w) - ($l))|0;
    $$02 = $3;$17 = $7;$18 = $9;
    while(1) {
     if ($18) {
      (___fwritex($pad,256,$f)|0);
      $$pre = HEAP32[$f>>2]|0;
      $14 = $$pre;
     } else {
      $14 = $17;
     }
     $11 = (($$02) + -256)|0;
     $12 = ($11>>>0)>(255);
     $13 = $14 & 32;
     $15 = ($13|0)==(0);
     if ($12) {
      $$02 = $11;$17 = $14;$18 = $15;
     } else {
      break;
     }
    }
    $16 = $10 & 255;
    if ($15) {
     $$0$lcssa6 = $16;
    } else {
     break;
    }
   } else {
    if ($9) {
     $$0$lcssa6 = $3;
    } else {
     break;
    }
   }
   (___fwritex($pad,$$0$lcssa6,$f)|0);
  }
 } while(0);
 STACKTOP = sp;return;
}
function _malloc($bytes) {
 $bytes = $bytes|0;
 var $$3$i = 0, $$lcssa = 0, $$lcssa211 = 0, $$lcssa215 = 0, $$lcssa216 = 0, $$lcssa217 = 0, $$lcssa219 = 0, $$lcssa222 = 0, $$lcssa224 = 0, $$lcssa226 = 0, $$lcssa228 = 0, $$lcssa230 = 0, $$lcssa232 = 0, $$pre = 0, $$pre$i = 0, $$pre$i$i = 0, $$pre$i22$i = 0, $$pre$i25 = 0, $$pre$phi$i$iZ2D = 0, $$pre$phi$i23$iZ2D = 0;
 var $$pre$phi$i26Z2D = 0, $$pre$phi$iZ2D = 0, $$pre$phi58$i$iZ2D = 0, $$pre$phiZ2D = 0, $$pre105 = 0, $$pre106 = 0, $$pre14$i$i = 0, $$pre43$i = 0, $$pre56$i$i = 0, $$pre57$i$i = 0, $$pre8$i = 0, $$rsize$0$i = 0, $$rsize$3$i = 0, $$sum = 0, $$sum$i$i = 0, $$sum$i$i$i = 0, $$sum$i13$i = 0, $$sum$i14$i = 0, $$sum$i17$i = 0, $$sum$i19$i = 0;
 var $$sum$i2334 = 0, $$sum$i32 = 0, $$sum$i35 = 0, $$sum1 = 0, $$sum1$i = 0, $$sum1$i$i = 0, $$sum1$i15$i = 0, $$sum1$i20$i = 0, $$sum1$i24 = 0, $$sum10 = 0, $$sum10$i = 0, $$sum10$i$i = 0, $$sum11$i = 0, $$sum11$i$i = 0, $$sum1112 = 0, $$sum112$i = 0, $$sum113$i = 0, $$sum114$i = 0, $$sum115$i = 0, $$sum116$i = 0;
 var $$sum117$i = 0, $$sum118$i = 0, $$sum119$i = 0, $$sum12$i = 0, $$sum12$i$i = 0, $$sum120$i = 0, $$sum121$i = 0, $$sum122$i = 0, $$sum123$i = 0, $$sum124$i = 0, $$sum125$i = 0, $$sum13$i = 0, $$sum13$i$i = 0, $$sum14$i$i = 0, $$sum15$i = 0, $$sum15$i$i = 0, $$sum16$i = 0, $$sum16$i$i = 0, $$sum17$i = 0, $$sum17$i$i = 0;
 var $$sum18$i = 0, $$sum1819$i$i = 0, $$sum2 = 0, $$sum2$i = 0, $$sum2$i$i = 0, $$sum2$i$i$i = 0, $$sum2$i16$i = 0, $$sum2$i18$i = 0, $$sum2$i21$i = 0, $$sum20$i$i = 0, $$sum21$i$i = 0, $$sum22$i$i = 0, $$sum23$i$i = 0, $$sum24$i$i = 0, $$sum25$i$i = 0, $$sum27$i$i = 0, $$sum28$i$i = 0, $$sum29$i$i = 0, $$sum3$i = 0, $$sum3$i27 = 0;
 var $$sum30$i$i = 0, $$sum3132$i$i = 0, $$sum34$i$i = 0, $$sum3536$i$i = 0, $$sum3738$i$i = 0, $$sum39$i$i = 0, $$sum4 = 0, $$sum4$i = 0, $$sum4$i$i = 0, $$sum4$i28 = 0, $$sum40$i$i = 0, $$sum41$i$i = 0, $$sum42$i$i = 0, $$sum5$i = 0, $$sum5$i$i = 0, $$sum56 = 0, $$sum6$i = 0, $$sum67$i$i = 0, $$sum7$i = 0, $$sum8$i = 0;
 var $$sum9 = 0, $$sum9$i = 0, $$sum9$i$i = 0, $$tsize$1$i = 0, $$v$0$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $1000 = 0, $1001 = 0, $1002 = 0, $1003 = 0, $1004 = 0, $1005 = 0, $1006 = 0, $1007 = 0, $1008 = 0, $1009 = 0, $101 = 0;
 var $1010 = 0, $1011 = 0, $1012 = 0, $1013 = 0, $1014 = 0, $1015 = 0, $1016 = 0, $1017 = 0, $1018 = 0, $1019 = 0, $102 = 0, $1020 = 0, $1021 = 0, $1022 = 0, $1023 = 0, $1024 = 0, $1025 = 0, $1026 = 0, $1027 = 0, $1028 = 0;
 var $1029 = 0, $103 = 0, $1030 = 0, $1031 = 0, $1032 = 0, $1033 = 0, $1034 = 0, $1035 = 0, $1036 = 0, $1037 = 0, $1038 = 0, $1039 = 0, $104 = 0, $1040 = 0, $1041 = 0, $1042 = 0, $1043 = 0, $1044 = 0, $1045 = 0, $1046 = 0;
 var $1047 = 0, $1048 = 0, $1049 = 0, $105 = 0, $1050 = 0, $1051 = 0, $1052 = 0, $1053 = 0, $1054 = 0, $1055 = 0, $1056 = 0, $1057 = 0, $1058 = 0, $1059 = 0, $106 = 0, $1060 = 0, $1061 = 0, $1062 = 0, $1063 = 0, $1064 = 0;
 var $1065 = 0, $1066 = 0, $1067 = 0, $1068 = 0, $1069 = 0, $107 = 0, $1070 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0;
 var $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0;
 var $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0;
 var $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0;
 var $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0;
 var $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0;
 var $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0;
 var $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0;
 var $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0;
 var $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0;
 var $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0;
 var $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0;
 var $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0;
 var $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0;
 var $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0;
 var $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0;
 var $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0;
 var $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0;
 var $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0;
 var $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0;
 var $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0;
 var $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0;
 var $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0;
 var $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0;
 var $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0;
 var $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0;
 var $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0;
 var $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0;
 var $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0;
 var $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0;
 var $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0;
 var $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0;
 var $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0;
 var $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0;
 var $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0;
 var $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0;
 var $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0;
 var $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0;
 var $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0;
 var $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0;
 var $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0;
 var $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0;
 var $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0;
 var $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0, $887 = 0, $888 = 0, $889 = 0, $89 = 0, $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0;
 var $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0, $904 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0;
 var $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0, $918 = 0, $919 = 0, $92 = 0, $920 = 0, $921 = 0, $922 = 0, $923 = 0, $924 = 0, $925 = 0, $926 = 0, $927 = 0, $928 = 0, $929 = 0, $93 = 0;
 var $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = 0, $940 = 0, $941 = 0, $942 = 0, $943 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0;
 var $949 = 0, $95 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0, $959 = 0, $96 = 0, $960 = 0, $961 = 0, $962 = 0, $963 = 0, $964 = 0, $965 = 0, $966 = 0;
 var $967 = 0, $968 = 0, $969 = 0, $97 = 0, $970 = 0, $971 = 0, $972 = 0, $973 = 0, $974 = 0, $975 = 0, $976 = 0, $977 = 0, $978 = 0, $979 = 0, $98 = 0, $980 = 0, $981 = 0, $982 = 0, $983 = 0, $984 = 0;
 var $985 = 0, $986 = 0, $987 = 0, $988 = 0, $989 = 0, $99 = 0, $990 = 0, $991 = 0, $992 = 0, $993 = 0, $994 = 0, $995 = 0, $996 = 0, $997 = 0, $998 = 0, $999 = 0, $F$0$i$i = 0, $F1$0$i = 0, $F4$0 = 0, $F4$0$i$i = 0;
 var $F5$0$i = 0, $I1$0$i$i = 0, $I7$0$i = 0, $I7$0$i$i = 0, $K12$029$i = 0, $K2$07$i$i = 0, $K8$051$i$i = 0, $R$0$i = 0, $R$0$i$i = 0, $R$0$i$i$lcssa = 0, $R$0$i$lcssa = 0, $R$0$i18 = 0, $R$0$i18$lcssa = 0, $R$1$i = 0, $R$1$i$i = 0, $R$1$i20 = 0, $RP$0$i = 0, $RP$0$i$i = 0, $RP$0$i$i$lcssa = 0, $RP$0$i$lcssa = 0;
 var $RP$0$i17 = 0, $RP$0$i17$lcssa = 0, $T$0$lcssa$i = 0, $T$0$lcssa$i$i = 0, $T$0$lcssa$i25$i = 0, $T$028$i = 0, $T$028$i$lcssa = 0, $T$050$i$i = 0, $T$050$i$i$lcssa = 0, $T$06$i$i = 0, $T$06$i$i$lcssa = 0, $br$0$ph$i = 0, $cond$i = 0, $cond$i$i = 0, $cond$i21 = 0, $exitcond$i$i = 0, $i$02$i$i = 0, $idx$0$i = 0, $mem$0 = 0, $nb$0 = 0;
 var $not$$i = 0, $not$$i$i = 0, $not$$i26$i = 0, $oldfirst$0$i$i = 0, $or$cond$i = 0, $or$cond$i30 = 0, $or$cond1$i = 0, $or$cond19$i = 0, $or$cond2$i = 0, $or$cond3$i = 0, $or$cond5$i = 0, $or$cond57$i = 0, $or$cond6$i = 0, $or$cond8$i = 0, $or$cond9$i = 0, $qsize$0$i$i = 0, $rsize$0$i = 0, $rsize$0$i$lcssa = 0, $rsize$0$i15 = 0, $rsize$1$i = 0;
 var $rsize$2$i = 0, $rsize$3$lcssa$i = 0, $rsize$331$i = 0, $rst$0$i = 0, $rst$1$i = 0, $sizebits$0$i = 0, $sp$0$i$i = 0, $sp$0$i$i$i = 0, $sp$084$i = 0, $sp$084$i$lcssa = 0, $sp$183$i = 0, $sp$183$i$lcssa = 0, $ssize$0$$i = 0, $ssize$0$i = 0, $ssize$1$ph$i = 0, $ssize$2$i = 0, $t$0$i = 0, $t$0$i14 = 0, $t$1$i = 0, $t$2$ph$i = 0;
 var $t$2$v$3$i = 0, $t$230$i = 0, $tbase$255$i = 0, $tsize$0$ph$i = 0, $tsize$0323944$i = 0, $tsize$1$i = 0, $tsize$254$i = 0, $v$0$i = 0, $v$0$i$lcssa = 0, $v$0$i16 = 0, $v$1$i = 0, $v$2$i = 0, $v$3$lcssa$i = 0, $v$3$ph$i = 0, $v$332$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($bytes>>>0)<(245);
 do {
  if ($0) {
   $1 = ($bytes>>>0)<(11);
   $2 = (($bytes) + 11)|0;
   $3 = $2 & -8;
   $4 = $1 ? 16 : $3;
   $5 = $4 >>> 3;
   $6 = HEAP32[1304>>2]|0;
   $7 = $6 >>> $5;
   $8 = $7 & 3;
   $9 = ($8|0)==(0);
   if (!($9)) {
    $10 = $7 & 1;
    $11 = $10 ^ 1;
    $12 = (($11) + ($5))|0;
    $13 = $12 << 1;
    $14 = (1344 + ($13<<2)|0);
    $$sum10 = (($13) + 2)|0;
    $15 = (1344 + ($$sum10<<2)|0);
    $16 = HEAP32[$15>>2]|0;
    $17 = ((($16)) + 8|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = ($14|0)==($18|0);
    do {
     if ($19) {
      $20 = 1 << $12;
      $21 = $20 ^ -1;
      $22 = $6 & $21;
      HEAP32[1304>>2] = $22;
     } else {
      $23 = HEAP32[(1320)>>2]|0;
      $24 = ($18>>>0)<($23>>>0);
      if ($24) {
       _abort();
       // unreachable;
      }
      $25 = ((($18)) + 12|0);
      $26 = HEAP32[$25>>2]|0;
      $27 = ($26|0)==($16|0);
      if ($27) {
       HEAP32[$25>>2] = $14;
       HEAP32[$15>>2] = $18;
       break;
      } else {
       _abort();
       // unreachable;
      }
     }
    } while(0);
    $28 = $12 << 3;
    $29 = $28 | 3;
    $30 = ((($16)) + 4|0);
    HEAP32[$30>>2] = $29;
    $$sum1112 = $28 | 4;
    $31 = (($16) + ($$sum1112)|0);
    $32 = HEAP32[$31>>2]|0;
    $33 = $32 | 1;
    HEAP32[$31>>2] = $33;
    $mem$0 = $17;
    return ($mem$0|0);
   }
   $34 = HEAP32[(1312)>>2]|0;
   $35 = ($4>>>0)>($34>>>0);
   if ($35) {
    $36 = ($7|0)==(0);
    if (!($36)) {
     $37 = $7 << $5;
     $38 = 2 << $5;
     $39 = (0 - ($38))|0;
     $40 = $38 | $39;
     $41 = $37 & $40;
     $42 = (0 - ($41))|0;
     $43 = $41 & $42;
     $44 = (($43) + -1)|0;
     $45 = $44 >>> 12;
     $46 = $45 & 16;
     $47 = $44 >>> $46;
     $48 = $47 >>> 5;
     $49 = $48 & 8;
     $50 = $49 | $46;
     $51 = $47 >>> $49;
     $52 = $51 >>> 2;
     $53 = $52 & 4;
     $54 = $50 | $53;
     $55 = $51 >>> $53;
     $56 = $55 >>> 1;
     $57 = $56 & 2;
     $58 = $54 | $57;
     $59 = $55 >>> $57;
     $60 = $59 >>> 1;
     $61 = $60 & 1;
     $62 = $58 | $61;
     $63 = $59 >>> $61;
     $64 = (($62) + ($63))|0;
     $65 = $64 << 1;
     $66 = (1344 + ($65<<2)|0);
     $$sum4 = (($65) + 2)|0;
     $67 = (1344 + ($$sum4<<2)|0);
     $68 = HEAP32[$67>>2]|0;
     $69 = ((($68)) + 8|0);
     $70 = HEAP32[$69>>2]|0;
     $71 = ($66|0)==($70|0);
     do {
      if ($71) {
       $72 = 1 << $64;
       $73 = $72 ^ -1;
       $74 = $6 & $73;
       HEAP32[1304>>2] = $74;
       $88 = $34;
      } else {
       $75 = HEAP32[(1320)>>2]|0;
       $76 = ($70>>>0)<($75>>>0);
       if ($76) {
        _abort();
        // unreachable;
       }
       $77 = ((($70)) + 12|0);
       $78 = HEAP32[$77>>2]|0;
       $79 = ($78|0)==($68|0);
       if ($79) {
        HEAP32[$77>>2] = $66;
        HEAP32[$67>>2] = $70;
        $$pre = HEAP32[(1312)>>2]|0;
        $88 = $$pre;
        break;
       } else {
        _abort();
        // unreachable;
       }
      }
     } while(0);
     $80 = $64 << 3;
     $81 = (($80) - ($4))|0;
     $82 = $4 | 3;
     $83 = ((($68)) + 4|0);
     HEAP32[$83>>2] = $82;
     $84 = (($68) + ($4)|0);
     $85 = $81 | 1;
     $$sum56 = $4 | 4;
     $86 = (($68) + ($$sum56)|0);
     HEAP32[$86>>2] = $85;
     $87 = (($68) + ($80)|0);
     HEAP32[$87>>2] = $81;
     $89 = ($88|0)==(0);
     if (!($89)) {
      $90 = HEAP32[(1324)>>2]|0;
      $91 = $88 >>> 3;
      $92 = $91 << 1;
      $93 = (1344 + ($92<<2)|0);
      $94 = HEAP32[1304>>2]|0;
      $95 = 1 << $91;
      $96 = $94 & $95;
      $97 = ($96|0)==(0);
      if ($97) {
       $98 = $94 | $95;
       HEAP32[1304>>2] = $98;
       $$pre105 = (($92) + 2)|0;
       $$pre106 = (1344 + ($$pre105<<2)|0);
       $$pre$phiZ2D = $$pre106;$F4$0 = $93;
      } else {
       $$sum9 = (($92) + 2)|0;
       $99 = (1344 + ($$sum9<<2)|0);
       $100 = HEAP32[$99>>2]|0;
       $101 = HEAP32[(1320)>>2]|0;
       $102 = ($100>>>0)<($101>>>0);
       if ($102) {
        _abort();
        // unreachable;
       } else {
        $$pre$phiZ2D = $99;$F4$0 = $100;
       }
      }
      HEAP32[$$pre$phiZ2D>>2] = $90;
      $103 = ((($F4$0)) + 12|0);
      HEAP32[$103>>2] = $90;
      $104 = ((($90)) + 8|0);
      HEAP32[$104>>2] = $F4$0;
      $105 = ((($90)) + 12|0);
      HEAP32[$105>>2] = $93;
     }
     HEAP32[(1312)>>2] = $81;
     HEAP32[(1324)>>2] = $84;
     $mem$0 = $69;
     return ($mem$0|0);
    }
    $106 = HEAP32[(1308)>>2]|0;
    $107 = ($106|0)==(0);
    if ($107) {
     $nb$0 = $4;
    } else {
     $108 = (0 - ($106))|0;
     $109 = $106 & $108;
     $110 = (($109) + -1)|0;
     $111 = $110 >>> 12;
     $112 = $111 & 16;
     $113 = $110 >>> $112;
     $114 = $113 >>> 5;
     $115 = $114 & 8;
     $116 = $115 | $112;
     $117 = $113 >>> $115;
     $118 = $117 >>> 2;
     $119 = $118 & 4;
     $120 = $116 | $119;
     $121 = $117 >>> $119;
     $122 = $121 >>> 1;
     $123 = $122 & 2;
     $124 = $120 | $123;
     $125 = $121 >>> $123;
     $126 = $125 >>> 1;
     $127 = $126 & 1;
     $128 = $124 | $127;
     $129 = $125 >>> $127;
     $130 = (($128) + ($129))|0;
     $131 = (1608 + ($130<<2)|0);
     $132 = HEAP32[$131>>2]|0;
     $133 = ((($132)) + 4|0);
     $134 = HEAP32[$133>>2]|0;
     $135 = $134 & -8;
     $136 = (($135) - ($4))|0;
     $rsize$0$i = $136;$t$0$i = $132;$v$0$i = $132;
     while(1) {
      $137 = ((($t$0$i)) + 16|0);
      $138 = HEAP32[$137>>2]|0;
      $139 = ($138|0)==(0|0);
      if ($139) {
       $140 = ((($t$0$i)) + 20|0);
       $141 = HEAP32[$140>>2]|0;
       $142 = ($141|0)==(0|0);
       if ($142) {
        $rsize$0$i$lcssa = $rsize$0$i;$v$0$i$lcssa = $v$0$i;
        break;
       } else {
        $144 = $141;
       }
      } else {
       $144 = $138;
      }
      $143 = ((($144)) + 4|0);
      $145 = HEAP32[$143>>2]|0;
      $146 = $145 & -8;
      $147 = (($146) - ($4))|0;
      $148 = ($147>>>0)<($rsize$0$i>>>0);
      $$rsize$0$i = $148 ? $147 : $rsize$0$i;
      $$v$0$i = $148 ? $144 : $v$0$i;
      $rsize$0$i = $$rsize$0$i;$t$0$i = $144;$v$0$i = $$v$0$i;
     }
     $149 = HEAP32[(1320)>>2]|0;
     $150 = ($v$0$i$lcssa>>>0)<($149>>>0);
     if ($150) {
      _abort();
      // unreachable;
     }
     $151 = (($v$0$i$lcssa) + ($4)|0);
     $152 = ($v$0$i$lcssa>>>0)<($151>>>0);
     if (!($152)) {
      _abort();
      // unreachable;
     }
     $153 = ((($v$0$i$lcssa)) + 24|0);
     $154 = HEAP32[$153>>2]|0;
     $155 = ((($v$0$i$lcssa)) + 12|0);
     $156 = HEAP32[$155>>2]|0;
     $157 = ($156|0)==($v$0$i$lcssa|0);
     do {
      if ($157) {
       $167 = ((($v$0$i$lcssa)) + 20|0);
       $168 = HEAP32[$167>>2]|0;
       $169 = ($168|0)==(0|0);
       if ($169) {
        $170 = ((($v$0$i$lcssa)) + 16|0);
        $171 = HEAP32[$170>>2]|0;
        $172 = ($171|0)==(0|0);
        if ($172) {
         $R$1$i = 0;
         break;
        } else {
         $R$0$i = $171;$RP$0$i = $170;
        }
       } else {
        $R$0$i = $168;$RP$0$i = $167;
       }
       while(1) {
        $173 = ((($R$0$i)) + 20|0);
        $174 = HEAP32[$173>>2]|0;
        $175 = ($174|0)==(0|0);
        if (!($175)) {
         $R$0$i = $174;$RP$0$i = $173;
         continue;
        }
        $176 = ((($R$0$i)) + 16|0);
        $177 = HEAP32[$176>>2]|0;
        $178 = ($177|0)==(0|0);
        if ($178) {
         $R$0$i$lcssa = $R$0$i;$RP$0$i$lcssa = $RP$0$i;
         break;
        } else {
         $R$0$i = $177;$RP$0$i = $176;
        }
       }
       $179 = ($RP$0$i$lcssa>>>0)<($149>>>0);
       if ($179) {
        _abort();
        // unreachable;
       } else {
        HEAP32[$RP$0$i$lcssa>>2] = 0;
        $R$1$i = $R$0$i$lcssa;
        break;
       }
      } else {
       $158 = ((($v$0$i$lcssa)) + 8|0);
       $159 = HEAP32[$158>>2]|0;
       $160 = ($159>>>0)<($149>>>0);
       if ($160) {
        _abort();
        // unreachable;
       }
       $161 = ((($159)) + 12|0);
       $162 = HEAP32[$161>>2]|0;
       $163 = ($162|0)==($v$0$i$lcssa|0);
       if (!($163)) {
        _abort();
        // unreachable;
       }
       $164 = ((($156)) + 8|0);
       $165 = HEAP32[$164>>2]|0;
       $166 = ($165|0)==($v$0$i$lcssa|0);
       if ($166) {
        HEAP32[$161>>2] = $156;
        HEAP32[$164>>2] = $159;
        $R$1$i = $156;
        break;
       } else {
        _abort();
        // unreachable;
       }
      }
     } while(0);
     $180 = ($154|0)==(0|0);
     do {
      if (!($180)) {
       $181 = ((($v$0$i$lcssa)) + 28|0);
       $182 = HEAP32[$181>>2]|0;
       $183 = (1608 + ($182<<2)|0);
       $184 = HEAP32[$183>>2]|0;
       $185 = ($v$0$i$lcssa|0)==($184|0);
       if ($185) {
        HEAP32[$183>>2] = $R$1$i;
        $cond$i = ($R$1$i|0)==(0|0);
        if ($cond$i) {
         $186 = 1 << $182;
         $187 = $186 ^ -1;
         $188 = HEAP32[(1308)>>2]|0;
         $189 = $188 & $187;
         HEAP32[(1308)>>2] = $189;
         break;
        }
       } else {
        $190 = HEAP32[(1320)>>2]|0;
        $191 = ($154>>>0)<($190>>>0);
        if ($191) {
         _abort();
         // unreachable;
        }
        $192 = ((($154)) + 16|0);
        $193 = HEAP32[$192>>2]|0;
        $194 = ($193|0)==($v$0$i$lcssa|0);
        if ($194) {
         HEAP32[$192>>2] = $R$1$i;
        } else {
         $195 = ((($154)) + 20|0);
         HEAP32[$195>>2] = $R$1$i;
        }
        $196 = ($R$1$i|0)==(0|0);
        if ($196) {
         break;
        }
       }
       $197 = HEAP32[(1320)>>2]|0;
       $198 = ($R$1$i>>>0)<($197>>>0);
       if ($198) {
        _abort();
        // unreachable;
       }
       $199 = ((($R$1$i)) + 24|0);
       HEAP32[$199>>2] = $154;
       $200 = ((($v$0$i$lcssa)) + 16|0);
       $201 = HEAP32[$200>>2]|0;
       $202 = ($201|0)==(0|0);
       do {
        if (!($202)) {
         $203 = ($201>>>0)<($197>>>0);
         if ($203) {
          _abort();
          // unreachable;
         } else {
          $204 = ((($R$1$i)) + 16|0);
          HEAP32[$204>>2] = $201;
          $205 = ((($201)) + 24|0);
          HEAP32[$205>>2] = $R$1$i;
          break;
         }
        }
       } while(0);
       $206 = ((($v$0$i$lcssa)) + 20|0);
       $207 = HEAP32[$206>>2]|0;
       $208 = ($207|0)==(0|0);
       if (!($208)) {
        $209 = HEAP32[(1320)>>2]|0;
        $210 = ($207>>>0)<($209>>>0);
        if ($210) {
         _abort();
         // unreachable;
        } else {
         $211 = ((($R$1$i)) + 20|0);
         HEAP32[$211>>2] = $207;
         $212 = ((($207)) + 24|0);
         HEAP32[$212>>2] = $R$1$i;
         break;
        }
       }
      }
     } while(0);
     $213 = ($rsize$0$i$lcssa>>>0)<(16);
     if ($213) {
      $214 = (($rsize$0$i$lcssa) + ($4))|0;
      $215 = $214 | 3;
      $216 = ((($v$0$i$lcssa)) + 4|0);
      HEAP32[$216>>2] = $215;
      $$sum4$i = (($214) + 4)|0;
      $217 = (($v$0$i$lcssa) + ($$sum4$i)|0);
      $218 = HEAP32[$217>>2]|0;
      $219 = $218 | 1;
      HEAP32[$217>>2] = $219;
     } else {
      $220 = $4 | 3;
      $221 = ((($v$0$i$lcssa)) + 4|0);
      HEAP32[$221>>2] = $220;
      $222 = $rsize$0$i$lcssa | 1;
      $$sum$i35 = $4 | 4;
      $223 = (($v$0$i$lcssa) + ($$sum$i35)|0);
      HEAP32[$223>>2] = $222;
      $$sum1$i = (($rsize$0$i$lcssa) + ($4))|0;
      $224 = (($v$0$i$lcssa) + ($$sum1$i)|0);
      HEAP32[$224>>2] = $rsize$0$i$lcssa;
      $225 = HEAP32[(1312)>>2]|0;
      $226 = ($225|0)==(0);
      if (!($226)) {
       $227 = HEAP32[(1324)>>2]|0;
       $228 = $225 >>> 3;
       $229 = $228 << 1;
       $230 = (1344 + ($229<<2)|0);
       $231 = HEAP32[1304>>2]|0;
       $232 = 1 << $228;
       $233 = $231 & $232;
       $234 = ($233|0)==(0);
       if ($234) {
        $235 = $231 | $232;
        HEAP32[1304>>2] = $235;
        $$pre$i = (($229) + 2)|0;
        $$pre8$i = (1344 + ($$pre$i<<2)|0);
        $$pre$phi$iZ2D = $$pre8$i;$F1$0$i = $230;
       } else {
        $$sum3$i = (($229) + 2)|0;
        $236 = (1344 + ($$sum3$i<<2)|0);
        $237 = HEAP32[$236>>2]|0;
        $238 = HEAP32[(1320)>>2]|0;
        $239 = ($237>>>0)<($238>>>0);
        if ($239) {
         _abort();
         // unreachable;
        } else {
         $$pre$phi$iZ2D = $236;$F1$0$i = $237;
        }
       }
       HEAP32[$$pre$phi$iZ2D>>2] = $227;
       $240 = ((($F1$0$i)) + 12|0);
       HEAP32[$240>>2] = $227;
       $241 = ((($227)) + 8|0);
       HEAP32[$241>>2] = $F1$0$i;
       $242 = ((($227)) + 12|0);
       HEAP32[$242>>2] = $230;
      }
      HEAP32[(1312)>>2] = $rsize$0$i$lcssa;
      HEAP32[(1324)>>2] = $151;
     }
     $243 = ((($v$0$i$lcssa)) + 8|0);
     $mem$0 = $243;
     return ($mem$0|0);
    }
   } else {
    $nb$0 = $4;
   }
  } else {
   $244 = ($bytes>>>0)>(4294967231);
   if ($244) {
    $nb$0 = -1;
   } else {
    $245 = (($bytes) + 11)|0;
    $246 = $245 & -8;
    $247 = HEAP32[(1308)>>2]|0;
    $248 = ($247|0)==(0);
    if ($248) {
     $nb$0 = $246;
    } else {
     $249 = (0 - ($246))|0;
     $250 = $245 >>> 8;
     $251 = ($250|0)==(0);
     if ($251) {
      $idx$0$i = 0;
     } else {
      $252 = ($246>>>0)>(16777215);
      if ($252) {
       $idx$0$i = 31;
      } else {
       $253 = (($250) + 1048320)|0;
       $254 = $253 >>> 16;
       $255 = $254 & 8;
       $256 = $250 << $255;
       $257 = (($256) + 520192)|0;
       $258 = $257 >>> 16;
       $259 = $258 & 4;
       $260 = $259 | $255;
       $261 = $256 << $259;
       $262 = (($261) + 245760)|0;
       $263 = $262 >>> 16;
       $264 = $263 & 2;
       $265 = $260 | $264;
       $266 = (14 - ($265))|0;
       $267 = $261 << $264;
       $268 = $267 >>> 15;
       $269 = (($266) + ($268))|0;
       $270 = $269 << 1;
       $271 = (($269) + 7)|0;
       $272 = $246 >>> $271;
       $273 = $272 & 1;
       $274 = $273 | $270;
       $idx$0$i = $274;
      }
     }
     $275 = (1608 + ($idx$0$i<<2)|0);
     $276 = HEAP32[$275>>2]|0;
     $277 = ($276|0)==(0|0);
     L123: do {
      if ($277) {
       $rsize$2$i = $249;$t$1$i = 0;$v$2$i = 0;
       label = 86;
      } else {
       $278 = ($idx$0$i|0)==(31);
       $279 = $idx$0$i >>> 1;
       $280 = (25 - ($279))|0;
       $281 = $278 ? 0 : $280;
       $282 = $246 << $281;
       $rsize$0$i15 = $249;$rst$0$i = 0;$sizebits$0$i = $282;$t$0$i14 = $276;$v$0$i16 = 0;
       while(1) {
        $283 = ((($t$0$i14)) + 4|0);
        $284 = HEAP32[$283>>2]|0;
        $285 = $284 & -8;
        $286 = (($285) - ($246))|0;
        $287 = ($286>>>0)<($rsize$0$i15>>>0);
        if ($287) {
         $288 = ($285|0)==($246|0);
         if ($288) {
          $rsize$331$i = $286;$t$230$i = $t$0$i14;$v$332$i = $t$0$i14;
          label = 90;
          break L123;
         } else {
          $rsize$1$i = $286;$v$1$i = $t$0$i14;
         }
        } else {
         $rsize$1$i = $rsize$0$i15;$v$1$i = $v$0$i16;
        }
        $289 = ((($t$0$i14)) + 20|0);
        $290 = HEAP32[$289>>2]|0;
        $291 = $sizebits$0$i >>> 31;
        $292 = (((($t$0$i14)) + 16|0) + ($291<<2)|0);
        $293 = HEAP32[$292>>2]|0;
        $294 = ($290|0)==(0|0);
        $295 = ($290|0)==($293|0);
        $or$cond19$i = $294 | $295;
        $rst$1$i = $or$cond19$i ? $rst$0$i : $290;
        $296 = ($293|0)==(0|0);
        $297 = $sizebits$0$i << 1;
        if ($296) {
         $rsize$2$i = $rsize$1$i;$t$1$i = $rst$1$i;$v$2$i = $v$1$i;
         label = 86;
         break;
        } else {
         $rsize$0$i15 = $rsize$1$i;$rst$0$i = $rst$1$i;$sizebits$0$i = $297;$t$0$i14 = $293;$v$0$i16 = $v$1$i;
        }
       }
      }
     } while(0);
     if ((label|0) == 86) {
      $298 = ($t$1$i|0)==(0|0);
      $299 = ($v$2$i|0)==(0|0);
      $or$cond$i = $298 & $299;
      if ($or$cond$i) {
       $300 = 2 << $idx$0$i;
       $301 = (0 - ($300))|0;
       $302 = $300 | $301;
       $303 = $247 & $302;
       $304 = ($303|0)==(0);
       if ($304) {
        $nb$0 = $246;
        break;
       }
       $305 = (0 - ($303))|0;
       $306 = $303 & $305;
       $307 = (($306) + -1)|0;
       $308 = $307 >>> 12;
       $309 = $308 & 16;
       $310 = $307 >>> $309;
       $311 = $310 >>> 5;
       $312 = $311 & 8;
       $313 = $312 | $309;
       $314 = $310 >>> $312;
       $315 = $314 >>> 2;
       $316 = $315 & 4;
       $317 = $313 | $316;
       $318 = $314 >>> $316;
       $319 = $318 >>> 1;
       $320 = $319 & 2;
       $321 = $317 | $320;
       $322 = $318 >>> $320;
       $323 = $322 >>> 1;
       $324 = $323 & 1;
       $325 = $321 | $324;
       $326 = $322 >>> $324;
       $327 = (($325) + ($326))|0;
       $328 = (1608 + ($327<<2)|0);
       $329 = HEAP32[$328>>2]|0;
       $t$2$ph$i = $329;$v$3$ph$i = 0;
      } else {
       $t$2$ph$i = $t$1$i;$v$3$ph$i = $v$2$i;
      }
      $330 = ($t$2$ph$i|0)==(0|0);
      if ($330) {
       $rsize$3$lcssa$i = $rsize$2$i;$v$3$lcssa$i = $v$3$ph$i;
      } else {
       $rsize$331$i = $rsize$2$i;$t$230$i = $t$2$ph$i;$v$332$i = $v$3$ph$i;
       label = 90;
      }
     }
     if ((label|0) == 90) {
      while(1) {
       label = 0;
       $331 = ((($t$230$i)) + 4|0);
       $332 = HEAP32[$331>>2]|0;
       $333 = $332 & -8;
       $334 = (($333) - ($246))|0;
       $335 = ($334>>>0)<($rsize$331$i>>>0);
       $$rsize$3$i = $335 ? $334 : $rsize$331$i;
       $t$2$v$3$i = $335 ? $t$230$i : $v$332$i;
       $336 = ((($t$230$i)) + 16|0);
       $337 = HEAP32[$336>>2]|0;
       $338 = ($337|0)==(0|0);
       if (!($338)) {
        $rsize$331$i = $$rsize$3$i;$t$230$i = $337;$v$332$i = $t$2$v$3$i;
        label = 90;
        continue;
       }
       $339 = ((($t$230$i)) + 20|0);
       $340 = HEAP32[$339>>2]|0;
       $341 = ($340|0)==(0|0);
       if ($341) {
        $rsize$3$lcssa$i = $$rsize$3$i;$v$3$lcssa$i = $t$2$v$3$i;
        break;
       } else {
        $rsize$331$i = $$rsize$3$i;$t$230$i = $340;$v$332$i = $t$2$v$3$i;
        label = 90;
       }
      }
     }
     $342 = ($v$3$lcssa$i|0)==(0|0);
     if ($342) {
      $nb$0 = $246;
     } else {
      $343 = HEAP32[(1312)>>2]|0;
      $344 = (($343) - ($246))|0;
      $345 = ($rsize$3$lcssa$i>>>0)<($344>>>0);
      if ($345) {
       $346 = HEAP32[(1320)>>2]|0;
       $347 = ($v$3$lcssa$i>>>0)<($346>>>0);
       if ($347) {
        _abort();
        // unreachable;
       }
       $348 = (($v$3$lcssa$i) + ($246)|0);
       $349 = ($v$3$lcssa$i>>>0)<($348>>>0);
       if (!($349)) {
        _abort();
        // unreachable;
       }
       $350 = ((($v$3$lcssa$i)) + 24|0);
       $351 = HEAP32[$350>>2]|0;
       $352 = ((($v$3$lcssa$i)) + 12|0);
       $353 = HEAP32[$352>>2]|0;
       $354 = ($353|0)==($v$3$lcssa$i|0);
       do {
        if ($354) {
         $364 = ((($v$3$lcssa$i)) + 20|0);
         $365 = HEAP32[$364>>2]|0;
         $366 = ($365|0)==(0|0);
         if ($366) {
          $367 = ((($v$3$lcssa$i)) + 16|0);
          $368 = HEAP32[$367>>2]|0;
          $369 = ($368|0)==(0|0);
          if ($369) {
           $R$1$i20 = 0;
           break;
          } else {
           $R$0$i18 = $368;$RP$0$i17 = $367;
          }
         } else {
          $R$0$i18 = $365;$RP$0$i17 = $364;
         }
         while(1) {
          $370 = ((($R$0$i18)) + 20|0);
          $371 = HEAP32[$370>>2]|0;
          $372 = ($371|0)==(0|0);
          if (!($372)) {
           $R$0$i18 = $371;$RP$0$i17 = $370;
           continue;
          }
          $373 = ((($R$0$i18)) + 16|0);
          $374 = HEAP32[$373>>2]|0;
          $375 = ($374|0)==(0|0);
          if ($375) {
           $R$0$i18$lcssa = $R$0$i18;$RP$0$i17$lcssa = $RP$0$i17;
           break;
          } else {
           $R$0$i18 = $374;$RP$0$i17 = $373;
          }
         }
         $376 = ($RP$0$i17$lcssa>>>0)<($346>>>0);
         if ($376) {
          _abort();
          // unreachable;
         } else {
          HEAP32[$RP$0$i17$lcssa>>2] = 0;
          $R$1$i20 = $R$0$i18$lcssa;
          break;
         }
        } else {
         $355 = ((($v$3$lcssa$i)) + 8|0);
         $356 = HEAP32[$355>>2]|0;
         $357 = ($356>>>0)<($346>>>0);
         if ($357) {
          _abort();
          // unreachable;
         }
         $358 = ((($356)) + 12|0);
         $359 = HEAP32[$358>>2]|0;
         $360 = ($359|0)==($v$3$lcssa$i|0);
         if (!($360)) {
          _abort();
          // unreachable;
         }
         $361 = ((($353)) + 8|0);
         $362 = HEAP32[$361>>2]|0;
         $363 = ($362|0)==($v$3$lcssa$i|0);
         if ($363) {
          HEAP32[$358>>2] = $353;
          HEAP32[$361>>2] = $356;
          $R$1$i20 = $353;
          break;
         } else {
          _abort();
          // unreachable;
         }
        }
       } while(0);
       $377 = ($351|0)==(0|0);
       do {
        if (!($377)) {
         $378 = ((($v$3$lcssa$i)) + 28|0);
         $379 = HEAP32[$378>>2]|0;
         $380 = (1608 + ($379<<2)|0);
         $381 = HEAP32[$380>>2]|0;
         $382 = ($v$3$lcssa$i|0)==($381|0);
         if ($382) {
          HEAP32[$380>>2] = $R$1$i20;
          $cond$i21 = ($R$1$i20|0)==(0|0);
          if ($cond$i21) {
           $383 = 1 << $379;
           $384 = $383 ^ -1;
           $385 = HEAP32[(1308)>>2]|0;
           $386 = $385 & $384;
           HEAP32[(1308)>>2] = $386;
           break;
          }
         } else {
          $387 = HEAP32[(1320)>>2]|0;
          $388 = ($351>>>0)<($387>>>0);
          if ($388) {
           _abort();
           // unreachable;
          }
          $389 = ((($351)) + 16|0);
          $390 = HEAP32[$389>>2]|0;
          $391 = ($390|0)==($v$3$lcssa$i|0);
          if ($391) {
           HEAP32[$389>>2] = $R$1$i20;
          } else {
           $392 = ((($351)) + 20|0);
           HEAP32[$392>>2] = $R$1$i20;
          }
          $393 = ($R$1$i20|0)==(0|0);
          if ($393) {
           break;
          }
         }
         $394 = HEAP32[(1320)>>2]|0;
         $395 = ($R$1$i20>>>0)<($394>>>0);
         if ($395) {
          _abort();
          // unreachable;
         }
         $396 = ((($R$1$i20)) + 24|0);
         HEAP32[$396>>2] = $351;
         $397 = ((($v$3$lcssa$i)) + 16|0);
         $398 = HEAP32[$397>>2]|0;
         $399 = ($398|0)==(0|0);
         do {
          if (!($399)) {
           $400 = ($398>>>0)<($394>>>0);
           if ($400) {
            _abort();
            // unreachable;
           } else {
            $401 = ((($R$1$i20)) + 16|0);
            HEAP32[$401>>2] = $398;
            $402 = ((($398)) + 24|0);
            HEAP32[$402>>2] = $R$1$i20;
            break;
           }
          }
         } while(0);
         $403 = ((($v$3$lcssa$i)) + 20|0);
         $404 = HEAP32[$403>>2]|0;
         $405 = ($404|0)==(0|0);
         if (!($405)) {
          $406 = HEAP32[(1320)>>2]|0;
          $407 = ($404>>>0)<($406>>>0);
          if ($407) {
           _abort();
           // unreachable;
          } else {
           $408 = ((($R$1$i20)) + 20|0);
           HEAP32[$408>>2] = $404;
           $409 = ((($404)) + 24|0);
           HEAP32[$409>>2] = $R$1$i20;
           break;
          }
         }
        }
       } while(0);
       $410 = ($rsize$3$lcssa$i>>>0)<(16);
       L199: do {
        if ($410) {
         $411 = (($rsize$3$lcssa$i) + ($246))|0;
         $412 = $411 | 3;
         $413 = ((($v$3$lcssa$i)) + 4|0);
         HEAP32[$413>>2] = $412;
         $$sum18$i = (($411) + 4)|0;
         $414 = (($v$3$lcssa$i) + ($$sum18$i)|0);
         $415 = HEAP32[$414>>2]|0;
         $416 = $415 | 1;
         HEAP32[$414>>2] = $416;
        } else {
         $417 = $246 | 3;
         $418 = ((($v$3$lcssa$i)) + 4|0);
         HEAP32[$418>>2] = $417;
         $419 = $rsize$3$lcssa$i | 1;
         $$sum$i2334 = $246 | 4;
         $420 = (($v$3$lcssa$i) + ($$sum$i2334)|0);
         HEAP32[$420>>2] = $419;
         $$sum1$i24 = (($rsize$3$lcssa$i) + ($246))|0;
         $421 = (($v$3$lcssa$i) + ($$sum1$i24)|0);
         HEAP32[$421>>2] = $rsize$3$lcssa$i;
         $422 = $rsize$3$lcssa$i >>> 3;
         $423 = ($rsize$3$lcssa$i>>>0)<(256);
         if ($423) {
          $424 = $422 << 1;
          $425 = (1344 + ($424<<2)|0);
          $426 = HEAP32[1304>>2]|0;
          $427 = 1 << $422;
          $428 = $426 & $427;
          $429 = ($428|0)==(0);
          if ($429) {
           $430 = $426 | $427;
           HEAP32[1304>>2] = $430;
           $$pre$i25 = (($424) + 2)|0;
           $$pre43$i = (1344 + ($$pre$i25<<2)|0);
           $$pre$phi$i26Z2D = $$pre43$i;$F5$0$i = $425;
          } else {
           $$sum17$i = (($424) + 2)|0;
           $431 = (1344 + ($$sum17$i<<2)|0);
           $432 = HEAP32[$431>>2]|0;
           $433 = HEAP32[(1320)>>2]|0;
           $434 = ($432>>>0)<($433>>>0);
           if ($434) {
            _abort();
            // unreachable;
           } else {
            $$pre$phi$i26Z2D = $431;$F5$0$i = $432;
           }
          }
          HEAP32[$$pre$phi$i26Z2D>>2] = $348;
          $435 = ((($F5$0$i)) + 12|0);
          HEAP32[$435>>2] = $348;
          $$sum15$i = (($246) + 8)|0;
          $436 = (($v$3$lcssa$i) + ($$sum15$i)|0);
          HEAP32[$436>>2] = $F5$0$i;
          $$sum16$i = (($246) + 12)|0;
          $437 = (($v$3$lcssa$i) + ($$sum16$i)|0);
          HEAP32[$437>>2] = $425;
          break;
         }
         $438 = $rsize$3$lcssa$i >>> 8;
         $439 = ($438|0)==(0);
         if ($439) {
          $I7$0$i = 0;
         } else {
          $440 = ($rsize$3$lcssa$i>>>0)>(16777215);
          if ($440) {
           $I7$0$i = 31;
          } else {
           $441 = (($438) + 1048320)|0;
           $442 = $441 >>> 16;
           $443 = $442 & 8;
           $444 = $438 << $443;
           $445 = (($444) + 520192)|0;
           $446 = $445 >>> 16;
           $447 = $446 & 4;
           $448 = $447 | $443;
           $449 = $444 << $447;
           $450 = (($449) + 245760)|0;
           $451 = $450 >>> 16;
           $452 = $451 & 2;
           $453 = $448 | $452;
           $454 = (14 - ($453))|0;
           $455 = $449 << $452;
           $456 = $455 >>> 15;
           $457 = (($454) + ($456))|0;
           $458 = $457 << 1;
           $459 = (($457) + 7)|0;
           $460 = $rsize$3$lcssa$i >>> $459;
           $461 = $460 & 1;
           $462 = $461 | $458;
           $I7$0$i = $462;
          }
         }
         $463 = (1608 + ($I7$0$i<<2)|0);
         $$sum2$i = (($246) + 28)|0;
         $464 = (($v$3$lcssa$i) + ($$sum2$i)|0);
         HEAP32[$464>>2] = $I7$0$i;
         $$sum3$i27 = (($246) + 16)|0;
         $465 = (($v$3$lcssa$i) + ($$sum3$i27)|0);
         $$sum4$i28 = (($246) + 20)|0;
         $466 = (($v$3$lcssa$i) + ($$sum4$i28)|0);
         HEAP32[$466>>2] = 0;
         HEAP32[$465>>2] = 0;
         $467 = HEAP32[(1308)>>2]|0;
         $468 = 1 << $I7$0$i;
         $469 = $467 & $468;
         $470 = ($469|0)==(0);
         if ($470) {
          $471 = $467 | $468;
          HEAP32[(1308)>>2] = $471;
          HEAP32[$463>>2] = $348;
          $$sum5$i = (($246) + 24)|0;
          $472 = (($v$3$lcssa$i) + ($$sum5$i)|0);
          HEAP32[$472>>2] = $463;
          $$sum6$i = (($246) + 12)|0;
          $473 = (($v$3$lcssa$i) + ($$sum6$i)|0);
          HEAP32[$473>>2] = $348;
          $$sum7$i = (($246) + 8)|0;
          $474 = (($v$3$lcssa$i) + ($$sum7$i)|0);
          HEAP32[$474>>2] = $348;
          break;
         }
         $475 = HEAP32[$463>>2]|0;
         $476 = ((($475)) + 4|0);
         $477 = HEAP32[$476>>2]|0;
         $478 = $477 & -8;
         $479 = ($478|0)==($rsize$3$lcssa$i|0);
         L217: do {
          if ($479) {
           $T$0$lcssa$i = $475;
          } else {
           $480 = ($I7$0$i|0)==(31);
           $481 = $I7$0$i >>> 1;
           $482 = (25 - ($481))|0;
           $483 = $480 ? 0 : $482;
           $484 = $rsize$3$lcssa$i << $483;
           $K12$029$i = $484;$T$028$i = $475;
           while(1) {
            $491 = $K12$029$i >>> 31;
            $492 = (((($T$028$i)) + 16|0) + ($491<<2)|0);
            $487 = HEAP32[$492>>2]|0;
            $493 = ($487|0)==(0|0);
            if ($493) {
             $$lcssa232 = $492;$T$028$i$lcssa = $T$028$i;
             break;
            }
            $485 = $K12$029$i << 1;
            $486 = ((($487)) + 4|0);
            $488 = HEAP32[$486>>2]|0;
            $489 = $488 & -8;
            $490 = ($489|0)==($rsize$3$lcssa$i|0);
            if ($490) {
             $T$0$lcssa$i = $487;
             break L217;
            } else {
             $K12$029$i = $485;$T$028$i = $487;
            }
           }
           $494 = HEAP32[(1320)>>2]|0;
           $495 = ($$lcssa232>>>0)<($494>>>0);
           if ($495) {
            _abort();
            // unreachable;
           } else {
            HEAP32[$$lcssa232>>2] = $348;
            $$sum11$i = (($246) + 24)|0;
            $496 = (($v$3$lcssa$i) + ($$sum11$i)|0);
            HEAP32[$496>>2] = $T$028$i$lcssa;
            $$sum12$i = (($246) + 12)|0;
            $497 = (($v$3$lcssa$i) + ($$sum12$i)|0);
            HEAP32[$497>>2] = $348;
            $$sum13$i = (($246) + 8)|0;
            $498 = (($v$3$lcssa$i) + ($$sum13$i)|0);
            HEAP32[$498>>2] = $348;
            break L199;
           }
          }
         } while(0);
         $499 = ((($T$0$lcssa$i)) + 8|0);
         $500 = HEAP32[$499>>2]|0;
         $501 = HEAP32[(1320)>>2]|0;
         $502 = ($500>>>0)>=($501>>>0);
         $not$$i = ($T$0$lcssa$i>>>0)>=($501>>>0);
         $503 = $502 & $not$$i;
         if ($503) {
          $504 = ((($500)) + 12|0);
          HEAP32[$504>>2] = $348;
          HEAP32[$499>>2] = $348;
          $$sum8$i = (($246) + 8)|0;
          $505 = (($v$3$lcssa$i) + ($$sum8$i)|0);
          HEAP32[$505>>2] = $500;
          $$sum9$i = (($246) + 12)|0;
          $506 = (($v$3$lcssa$i) + ($$sum9$i)|0);
          HEAP32[$506>>2] = $T$0$lcssa$i;
          $$sum10$i = (($246) + 24)|0;
          $507 = (($v$3$lcssa$i) + ($$sum10$i)|0);
          HEAP32[$507>>2] = 0;
          break;
         } else {
          _abort();
          // unreachable;
         }
        }
       } while(0);
       $508 = ((($v$3$lcssa$i)) + 8|0);
       $mem$0 = $508;
       return ($mem$0|0);
      } else {
       $nb$0 = $246;
      }
     }
    }
   }
  }
 } while(0);
 $509 = HEAP32[(1312)>>2]|0;
 $510 = ($509>>>0)<($nb$0>>>0);
 if (!($510)) {
  $511 = (($509) - ($nb$0))|0;
  $512 = HEAP32[(1324)>>2]|0;
  $513 = ($511>>>0)>(15);
  if ($513) {
   $514 = (($512) + ($nb$0)|0);
   HEAP32[(1324)>>2] = $514;
   HEAP32[(1312)>>2] = $511;
   $515 = $511 | 1;
   $$sum2 = (($nb$0) + 4)|0;
   $516 = (($512) + ($$sum2)|0);
   HEAP32[$516>>2] = $515;
   $517 = (($512) + ($509)|0);
   HEAP32[$517>>2] = $511;
   $518 = $nb$0 | 3;
   $519 = ((($512)) + 4|0);
   HEAP32[$519>>2] = $518;
  } else {
   HEAP32[(1312)>>2] = 0;
   HEAP32[(1324)>>2] = 0;
   $520 = $509 | 3;
   $521 = ((($512)) + 4|0);
   HEAP32[$521>>2] = $520;
   $$sum1 = (($509) + 4)|0;
   $522 = (($512) + ($$sum1)|0);
   $523 = HEAP32[$522>>2]|0;
   $524 = $523 | 1;
   HEAP32[$522>>2] = $524;
  }
  $525 = ((($512)) + 8|0);
  $mem$0 = $525;
  return ($mem$0|0);
 }
 $526 = HEAP32[(1316)>>2]|0;
 $527 = ($526>>>0)>($nb$0>>>0);
 if ($527) {
  $528 = (($526) - ($nb$0))|0;
  HEAP32[(1316)>>2] = $528;
  $529 = HEAP32[(1328)>>2]|0;
  $530 = (($529) + ($nb$0)|0);
  HEAP32[(1328)>>2] = $530;
  $531 = $528 | 1;
  $$sum = (($nb$0) + 4)|0;
  $532 = (($529) + ($$sum)|0);
  HEAP32[$532>>2] = $531;
  $533 = $nb$0 | 3;
  $534 = ((($529)) + 4|0);
  HEAP32[$534>>2] = $533;
  $535 = ((($529)) + 8|0);
  $mem$0 = $535;
  return ($mem$0|0);
 }
 $536 = HEAP32[1776>>2]|0;
 $537 = ($536|0)==(0);
 do {
  if ($537) {
   $538 = (_sysconf(30)|0);
   $539 = (($538) + -1)|0;
   $540 = $539 & $538;
   $541 = ($540|0)==(0);
   if ($541) {
    HEAP32[(1784)>>2] = $538;
    HEAP32[(1780)>>2] = $538;
    HEAP32[(1788)>>2] = -1;
    HEAP32[(1792)>>2] = -1;
    HEAP32[(1796)>>2] = 0;
    HEAP32[(1748)>>2] = 0;
    $542 = (_time((0|0))|0);
    $543 = $542 & -16;
    $544 = $543 ^ 1431655768;
    HEAP32[1776>>2] = $544;
    break;
   } else {
    _abort();
    // unreachable;
   }
  }
 } while(0);
 $545 = (($nb$0) + 48)|0;
 $546 = HEAP32[(1784)>>2]|0;
 $547 = (($nb$0) + 47)|0;
 $548 = (($546) + ($547))|0;
 $549 = (0 - ($546))|0;
 $550 = $548 & $549;
 $551 = ($550>>>0)>($nb$0>>>0);
 if (!($551)) {
  $mem$0 = 0;
  return ($mem$0|0);
 }
 $552 = HEAP32[(1744)>>2]|0;
 $553 = ($552|0)==(0);
 if (!($553)) {
  $554 = HEAP32[(1736)>>2]|0;
  $555 = (($554) + ($550))|0;
  $556 = ($555>>>0)<=($554>>>0);
  $557 = ($555>>>0)>($552>>>0);
  $or$cond1$i = $556 | $557;
  if ($or$cond1$i) {
   $mem$0 = 0;
   return ($mem$0|0);
  }
 }
 $558 = HEAP32[(1748)>>2]|0;
 $559 = $558 & 4;
 $560 = ($559|0)==(0);
 L258: do {
  if ($560) {
   $561 = HEAP32[(1328)>>2]|0;
   $562 = ($561|0)==(0|0);
   L260: do {
    if ($562) {
     label = 174;
    } else {
     $sp$0$i$i = (1752);
     while(1) {
      $563 = HEAP32[$sp$0$i$i>>2]|0;
      $564 = ($563>>>0)>($561>>>0);
      if (!($564)) {
       $565 = ((($sp$0$i$i)) + 4|0);
       $566 = HEAP32[$565>>2]|0;
       $567 = (($563) + ($566)|0);
       $568 = ($567>>>0)>($561>>>0);
       if ($568) {
        $$lcssa228 = $sp$0$i$i;$$lcssa230 = $565;
        break;
       }
      }
      $569 = ((($sp$0$i$i)) + 8|0);
      $570 = HEAP32[$569>>2]|0;
      $571 = ($570|0)==(0|0);
      if ($571) {
       label = 174;
       break L260;
      } else {
       $sp$0$i$i = $570;
      }
     }
     $594 = HEAP32[(1316)>>2]|0;
     $595 = (($548) - ($594))|0;
     $596 = $595 & $549;
     $597 = ($596>>>0)<(2147483647);
     if ($597) {
      $598 = (_sbrk(($596|0))|0);
      $599 = HEAP32[$$lcssa228>>2]|0;
      $600 = HEAP32[$$lcssa230>>2]|0;
      $601 = (($599) + ($600)|0);
      $602 = ($598|0)==($601|0);
      $$3$i = $602 ? $596 : 0;
      if ($602) {
       $603 = ($598|0)==((-1)|0);
       if ($603) {
        $tsize$0323944$i = $$3$i;
       } else {
        $tbase$255$i = $598;$tsize$254$i = $$3$i;
        label = 194;
        break L258;
       }
      } else {
       $br$0$ph$i = $598;$ssize$1$ph$i = $596;$tsize$0$ph$i = $$3$i;
       label = 184;
      }
     } else {
      $tsize$0323944$i = 0;
     }
    }
   } while(0);
   do {
    if ((label|0) == 174) {
     $572 = (_sbrk(0)|0);
     $573 = ($572|0)==((-1)|0);
     if ($573) {
      $tsize$0323944$i = 0;
     } else {
      $574 = $572;
      $575 = HEAP32[(1780)>>2]|0;
      $576 = (($575) + -1)|0;
      $577 = $576 & $574;
      $578 = ($577|0)==(0);
      if ($578) {
       $ssize$0$i = $550;
      } else {
       $579 = (($576) + ($574))|0;
       $580 = (0 - ($575))|0;
       $581 = $579 & $580;
       $582 = (($550) - ($574))|0;
       $583 = (($582) + ($581))|0;
       $ssize$0$i = $583;
      }
      $584 = HEAP32[(1736)>>2]|0;
      $585 = (($584) + ($ssize$0$i))|0;
      $586 = ($ssize$0$i>>>0)>($nb$0>>>0);
      $587 = ($ssize$0$i>>>0)<(2147483647);
      $or$cond$i30 = $586 & $587;
      if ($or$cond$i30) {
       $588 = HEAP32[(1744)>>2]|0;
       $589 = ($588|0)==(0);
       if (!($589)) {
        $590 = ($585>>>0)<=($584>>>0);
        $591 = ($585>>>0)>($588>>>0);
        $or$cond2$i = $590 | $591;
        if ($or$cond2$i) {
         $tsize$0323944$i = 0;
         break;
        }
       }
       $592 = (_sbrk(($ssize$0$i|0))|0);
       $593 = ($592|0)==($572|0);
       $ssize$0$$i = $593 ? $ssize$0$i : 0;
       if ($593) {
        $tbase$255$i = $572;$tsize$254$i = $ssize$0$$i;
        label = 194;
        break L258;
       } else {
        $br$0$ph$i = $592;$ssize$1$ph$i = $ssize$0$i;$tsize$0$ph$i = $ssize$0$$i;
        label = 184;
       }
      } else {
       $tsize$0323944$i = 0;
      }
     }
    }
   } while(0);
   L280: do {
    if ((label|0) == 184) {
     $604 = (0 - ($ssize$1$ph$i))|0;
     $605 = ($br$0$ph$i|0)!=((-1)|0);
     $606 = ($ssize$1$ph$i>>>0)<(2147483647);
     $or$cond5$i = $606 & $605;
     $607 = ($545>>>0)>($ssize$1$ph$i>>>0);
     $or$cond6$i = $607 & $or$cond5$i;
     do {
      if ($or$cond6$i) {
       $608 = HEAP32[(1784)>>2]|0;
       $609 = (($547) - ($ssize$1$ph$i))|0;
       $610 = (($609) + ($608))|0;
       $611 = (0 - ($608))|0;
       $612 = $610 & $611;
       $613 = ($612>>>0)<(2147483647);
       if ($613) {
        $614 = (_sbrk(($612|0))|0);
        $615 = ($614|0)==((-1)|0);
        if ($615) {
         (_sbrk(($604|0))|0);
         $tsize$0323944$i = $tsize$0$ph$i;
         break L280;
        } else {
         $616 = (($612) + ($ssize$1$ph$i))|0;
         $ssize$2$i = $616;
         break;
        }
       } else {
        $ssize$2$i = $ssize$1$ph$i;
       }
      } else {
       $ssize$2$i = $ssize$1$ph$i;
      }
     } while(0);
     $617 = ($br$0$ph$i|0)==((-1)|0);
     if ($617) {
      $tsize$0323944$i = $tsize$0$ph$i;
     } else {
      $tbase$255$i = $br$0$ph$i;$tsize$254$i = $ssize$2$i;
      label = 194;
      break L258;
     }
    }
   } while(0);
   $618 = HEAP32[(1748)>>2]|0;
   $619 = $618 | 4;
   HEAP32[(1748)>>2] = $619;
   $tsize$1$i = $tsize$0323944$i;
   label = 191;
  } else {
   $tsize$1$i = 0;
   label = 191;
  }
 } while(0);
 if ((label|0) == 191) {
  $620 = ($550>>>0)<(2147483647);
  if ($620) {
   $621 = (_sbrk(($550|0))|0);
   $622 = (_sbrk(0)|0);
   $623 = ($621|0)!=((-1)|0);
   $624 = ($622|0)!=((-1)|0);
   $or$cond3$i = $623 & $624;
   $625 = ($621>>>0)<($622>>>0);
   $or$cond8$i = $625 & $or$cond3$i;
   if ($or$cond8$i) {
    $626 = $622;
    $627 = $621;
    $628 = (($626) - ($627))|0;
    $629 = (($nb$0) + 40)|0;
    $630 = ($628>>>0)>($629>>>0);
    $$tsize$1$i = $630 ? $628 : $tsize$1$i;
    if ($630) {
     $tbase$255$i = $621;$tsize$254$i = $$tsize$1$i;
     label = 194;
    }
   }
  }
 }
 if ((label|0) == 194) {
  $631 = HEAP32[(1736)>>2]|0;
  $632 = (($631) + ($tsize$254$i))|0;
  HEAP32[(1736)>>2] = $632;
  $633 = HEAP32[(1740)>>2]|0;
  $634 = ($632>>>0)>($633>>>0);
  if ($634) {
   HEAP32[(1740)>>2] = $632;
  }
  $635 = HEAP32[(1328)>>2]|0;
  $636 = ($635|0)==(0|0);
  L299: do {
   if ($636) {
    $637 = HEAP32[(1320)>>2]|0;
    $638 = ($637|0)==(0|0);
    $639 = ($tbase$255$i>>>0)<($637>>>0);
    $or$cond9$i = $638 | $639;
    if ($or$cond9$i) {
     HEAP32[(1320)>>2] = $tbase$255$i;
    }
    HEAP32[(1752)>>2] = $tbase$255$i;
    HEAP32[(1756)>>2] = $tsize$254$i;
    HEAP32[(1764)>>2] = 0;
    $640 = HEAP32[1776>>2]|0;
    HEAP32[(1340)>>2] = $640;
    HEAP32[(1336)>>2] = -1;
    $i$02$i$i = 0;
    while(1) {
     $641 = $i$02$i$i << 1;
     $642 = (1344 + ($641<<2)|0);
     $$sum$i$i = (($641) + 3)|0;
     $643 = (1344 + ($$sum$i$i<<2)|0);
     HEAP32[$643>>2] = $642;
     $$sum1$i$i = (($641) + 2)|0;
     $644 = (1344 + ($$sum1$i$i<<2)|0);
     HEAP32[$644>>2] = $642;
     $645 = (($i$02$i$i) + 1)|0;
     $exitcond$i$i = ($645|0)==(32);
     if ($exitcond$i$i) {
      break;
     } else {
      $i$02$i$i = $645;
     }
    }
    $646 = (($tsize$254$i) + -40)|0;
    $647 = ((($tbase$255$i)) + 8|0);
    $648 = $647;
    $649 = $648 & 7;
    $650 = ($649|0)==(0);
    $651 = (0 - ($648))|0;
    $652 = $651 & 7;
    $653 = $650 ? 0 : $652;
    $654 = (($tbase$255$i) + ($653)|0);
    $655 = (($646) - ($653))|0;
    HEAP32[(1328)>>2] = $654;
    HEAP32[(1316)>>2] = $655;
    $656 = $655 | 1;
    $$sum$i13$i = (($653) + 4)|0;
    $657 = (($tbase$255$i) + ($$sum$i13$i)|0);
    HEAP32[$657>>2] = $656;
    $$sum2$i$i = (($tsize$254$i) + -36)|0;
    $658 = (($tbase$255$i) + ($$sum2$i$i)|0);
    HEAP32[$658>>2] = 40;
    $659 = HEAP32[(1792)>>2]|0;
    HEAP32[(1332)>>2] = $659;
   } else {
    $sp$084$i = (1752);
    while(1) {
     $660 = HEAP32[$sp$084$i>>2]|0;
     $661 = ((($sp$084$i)) + 4|0);
     $662 = HEAP32[$661>>2]|0;
     $663 = (($660) + ($662)|0);
     $664 = ($tbase$255$i|0)==($663|0);
     if ($664) {
      $$lcssa222 = $660;$$lcssa224 = $661;$$lcssa226 = $662;$sp$084$i$lcssa = $sp$084$i;
      label = 204;
      break;
     }
     $665 = ((($sp$084$i)) + 8|0);
     $666 = HEAP32[$665>>2]|0;
     $667 = ($666|0)==(0|0);
     if ($667) {
      break;
     } else {
      $sp$084$i = $666;
     }
    }
    if ((label|0) == 204) {
     $668 = ((($sp$084$i$lcssa)) + 12|0);
     $669 = HEAP32[$668>>2]|0;
     $670 = $669 & 8;
     $671 = ($670|0)==(0);
     if ($671) {
      $672 = ($635>>>0)>=($$lcssa222>>>0);
      $673 = ($635>>>0)<($tbase$255$i>>>0);
      $or$cond57$i = $673 & $672;
      if ($or$cond57$i) {
       $674 = (($$lcssa226) + ($tsize$254$i))|0;
       HEAP32[$$lcssa224>>2] = $674;
       $675 = HEAP32[(1316)>>2]|0;
       $676 = (($675) + ($tsize$254$i))|0;
       $677 = ((($635)) + 8|0);
       $678 = $677;
       $679 = $678 & 7;
       $680 = ($679|0)==(0);
       $681 = (0 - ($678))|0;
       $682 = $681 & 7;
       $683 = $680 ? 0 : $682;
       $684 = (($635) + ($683)|0);
       $685 = (($676) - ($683))|0;
       HEAP32[(1328)>>2] = $684;
       HEAP32[(1316)>>2] = $685;
       $686 = $685 | 1;
       $$sum$i17$i = (($683) + 4)|0;
       $687 = (($635) + ($$sum$i17$i)|0);
       HEAP32[$687>>2] = $686;
       $$sum2$i18$i = (($676) + 4)|0;
       $688 = (($635) + ($$sum2$i18$i)|0);
       HEAP32[$688>>2] = 40;
       $689 = HEAP32[(1792)>>2]|0;
       HEAP32[(1332)>>2] = $689;
       break;
      }
     }
    }
    $690 = HEAP32[(1320)>>2]|0;
    $691 = ($tbase$255$i>>>0)<($690>>>0);
    if ($691) {
     HEAP32[(1320)>>2] = $tbase$255$i;
     $755 = $tbase$255$i;
    } else {
     $755 = $690;
    }
    $692 = (($tbase$255$i) + ($tsize$254$i)|0);
    $sp$183$i = (1752);
    while(1) {
     $693 = HEAP32[$sp$183$i>>2]|0;
     $694 = ($693|0)==($692|0);
     if ($694) {
      $$lcssa219 = $sp$183$i;$sp$183$i$lcssa = $sp$183$i;
      label = 212;
      break;
     }
     $695 = ((($sp$183$i)) + 8|0);
     $696 = HEAP32[$695>>2]|0;
     $697 = ($696|0)==(0|0);
     if ($697) {
      $sp$0$i$i$i = (1752);
      break;
     } else {
      $sp$183$i = $696;
     }
    }
    if ((label|0) == 212) {
     $698 = ((($sp$183$i$lcssa)) + 12|0);
     $699 = HEAP32[$698>>2]|0;
     $700 = $699 & 8;
     $701 = ($700|0)==(0);
     if ($701) {
      HEAP32[$$lcssa219>>2] = $tbase$255$i;
      $702 = ((($sp$183$i$lcssa)) + 4|0);
      $703 = HEAP32[$702>>2]|0;
      $704 = (($703) + ($tsize$254$i))|0;
      HEAP32[$702>>2] = $704;
      $705 = ((($tbase$255$i)) + 8|0);
      $706 = $705;
      $707 = $706 & 7;
      $708 = ($707|0)==(0);
      $709 = (0 - ($706))|0;
      $710 = $709 & 7;
      $711 = $708 ? 0 : $710;
      $712 = (($tbase$255$i) + ($711)|0);
      $$sum112$i = (($tsize$254$i) + 8)|0;
      $713 = (($tbase$255$i) + ($$sum112$i)|0);
      $714 = $713;
      $715 = $714 & 7;
      $716 = ($715|0)==(0);
      $717 = (0 - ($714))|0;
      $718 = $717 & 7;
      $719 = $716 ? 0 : $718;
      $$sum113$i = (($719) + ($tsize$254$i))|0;
      $720 = (($tbase$255$i) + ($$sum113$i)|0);
      $721 = $720;
      $722 = $712;
      $723 = (($721) - ($722))|0;
      $$sum$i19$i = (($711) + ($nb$0))|0;
      $724 = (($tbase$255$i) + ($$sum$i19$i)|0);
      $725 = (($723) - ($nb$0))|0;
      $726 = $nb$0 | 3;
      $$sum1$i20$i = (($711) + 4)|0;
      $727 = (($tbase$255$i) + ($$sum1$i20$i)|0);
      HEAP32[$727>>2] = $726;
      $728 = ($720|0)==($635|0);
      L324: do {
       if ($728) {
        $729 = HEAP32[(1316)>>2]|0;
        $730 = (($729) + ($725))|0;
        HEAP32[(1316)>>2] = $730;
        HEAP32[(1328)>>2] = $724;
        $731 = $730 | 1;
        $$sum42$i$i = (($$sum$i19$i) + 4)|0;
        $732 = (($tbase$255$i) + ($$sum42$i$i)|0);
        HEAP32[$732>>2] = $731;
       } else {
        $733 = HEAP32[(1324)>>2]|0;
        $734 = ($720|0)==($733|0);
        if ($734) {
         $735 = HEAP32[(1312)>>2]|0;
         $736 = (($735) + ($725))|0;
         HEAP32[(1312)>>2] = $736;
         HEAP32[(1324)>>2] = $724;
         $737 = $736 | 1;
         $$sum40$i$i = (($$sum$i19$i) + 4)|0;
         $738 = (($tbase$255$i) + ($$sum40$i$i)|0);
         HEAP32[$738>>2] = $737;
         $$sum41$i$i = (($736) + ($$sum$i19$i))|0;
         $739 = (($tbase$255$i) + ($$sum41$i$i)|0);
         HEAP32[$739>>2] = $736;
         break;
        }
        $$sum2$i21$i = (($tsize$254$i) + 4)|0;
        $$sum114$i = (($$sum2$i21$i) + ($719))|0;
        $740 = (($tbase$255$i) + ($$sum114$i)|0);
        $741 = HEAP32[$740>>2]|0;
        $742 = $741 & 3;
        $743 = ($742|0)==(1);
        if ($743) {
         $744 = $741 & -8;
         $745 = $741 >>> 3;
         $746 = ($741>>>0)<(256);
         L332: do {
          if ($746) {
           $$sum3738$i$i = $719 | 8;
           $$sum124$i = (($$sum3738$i$i) + ($tsize$254$i))|0;
           $747 = (($tbase$255$i) + ($$sum124$i)|0);
           $748 = HEAP32[$747>>2]|0;
           $$sum39$i$i = (($tsize$254$i) + 12)|0;
           $$sum125$i = (($$sum39$i$i) + ($719))|0;
           $749 = (($tbase$255$i) + ($$sum125$i)|0);
           $750 = HEAP32[$749>>2]|0;
           $751 = $745 << 1;
           $752 = (1344 + ($751<<2)|0);
           $753 = ($748|0)==($752|0);
           do {
            if (!($753)) {
             $754 = ($748>>>0)<($755>>>0);
             if ($754) {
              _abort();
              // unreachable;
             }
             $756 = ((($748)) + 12|0);
             $757 = HEAP32[$756>>2]|0;
             $758 = ($757|0)==($720|0);
             if ($758) {
              break;
             }
             _abort();
             // unreachable;
            }
           } while(0);
           $759 = ($750|0)==($748|0);
           if ($759) {
            $760 = 1 << $745;
            $761 = $760 ^ -1;
            $762 = HEAP32[1304>>2]|0;
            $763 = $762 & $761;
            HEAP32[1304>>2] = $763;
            break;
           }
           $764 = ($750|0)==($752|0);
           do {
            if ($764) {
             $$pre57$i$i = ((($750)) + 8|0);
             $$pre$phi58$i$iZ2D = $$pre57$i$i;
            } else {
             $765 = ($750>>>0)<($755>>>0);
             if ($765) {
              _abort();
              // unreachable;
             }
             $766 = ((($750)) + 8|0);
             $767 = HEAP32[$766>>2]|0;
             $768 = ($767|0)==($720|0);
             if ($768) {
              $$pre$phi58$i$iZ2D = $766;
              break;
             }
             _abort();
             // unreachable;
            }
           } while(0);
           $769 = ((($748)) + 12|0);
           HEAP32[$769>>2] = $750;
           HEAP32[$$pre$phi58$i$iZ2D>>2] = $748;
          } else {
           $$sum34$i$i = $719 | 24;
           $$sum115$i = (($$sum34$i$i) + ($tsize$254$i))|0;
           $770 = (($tbase$255$i) + ($$sum115$i)|0);
           $771 = HEAP32[$770>>2]|0;
           $$sum5$i$i = (($tsize$254$i) + 12)|0;
           $$sum116$i = (($$sum5$i$i) + ($719))|0;
           $772 = (($tbase$255$i) + ($$sum116$i)|0);
           $773 = HEAP32[$772>>2]|0;
           $774 = ($773|0)==($720|0);
           do {
            if ($774) {
             $$sum67$i$i = $719 | 16;
             $$sum122$i = (($$sum2$i21$i) + ($$sum67$i$i))|0;
             $784 = (($tbase$255$i) + ($$sum122$i)|0);
             $785 = HEAP32[$784>>2]|0;
             $786 = ($785|0)==(0|0);
             if ($786) {
              $$sum123$i = (($$sum67$i$i) + ($tsize$254$i))|0;
              $787 = (($tbase$255$i) + ($$sum123$i)|0);
              $788 = HEAP32[$787>>2]|0;
              $789 = ($788|0)==(0|0);
              if ($789) {
               $R$1$i$i = 0;
               break;
              } else {
               $R$0$i$i = $788;$RP$0$i$i = $787;
              }
             } else {
              $R$0$i$i = $785;$RP$0$i$i = $784;
             }
             while(1) {
              $790 = ((($R$0$i$i)) + 20|0);
              $791 = HEAP32[$790>>2]|0;
              $792 = ($791|0)==(0|0);
              if (!($792)) {
               $R$0$i$i = $791;$RP$0$i$i = $790;
               continue;
              }
              $793 = ((($R$0$i$i)) + 16|0);
              $794 = HEAP32[$793>>2]|0;
              $795 = ($794|0)==(0|0);
              if ($795) {
               $R$0$i$i$lcssa = $R$0$i$i;$RP$0$i$i$lcssa = $RP$0$i$i;
               break;
              } else {
               $R$0$i$i = $794;$RP$0$i$i = $793;
              }
             }
             $796 = ($RP$0$i$i$lcssa>>>0)<($755>>>0);
             if ($796) {
              _abort();
              // unreachable;
             } else {
              HEAP32[$RP$0$i$i$lcssa>>2] = 0;
              $R$1$i$i = $R$0$i$i$lcssa;
              break;
             }
            } else {
             $$sum3536$i$i = $719 | 8;
             $$sum117$i = (($$sum3536$i$i) + ($tsize$254$i))|0;
             $775 = (($tbase$255$i) + ($$sum117$i)|0);
             $776 = HEAP32[$775>>2]|0;
             $777 = ($776>>>0)<($755>>>0);
             if ($777) {
              _abort();
              // unreachable;
             }
             $778 = ((($776)) + 12|0);
             $779 = HEAP32[$778>>2]|0;
             $780 = ($779|0)==($720|0);
             if (!($780)) {
              _abort();
              // unreachable;
             }
             $781 = ((($773)) + 8|0);
             $782 = HEAP32[$781>>2]|0;
             $783 = ($782|0)==($720|0);
             if ($783) {
              HEAP32[$778>>2] = $773;
              HEAP32[$781>>2] = $776;
              $R$1$i$i = $773;
              break;
             } else {
              _abort();
              // unreachable;
             }
            }
           } while(0);
           $797 = ($771|0)==(0|0);
           if ($797) {
            break;
           }
           $$sum30$i$i = (($tsize$254$i) + 28)|0;
           $$sum118$i = (($$sum30$i$i) + ($719))|0;
           $798 = (($tbase$255$i) + ($$sum118$i)|0);
           $799 = HEAP32[$798>>2]|0;
           $800 = (1608 + ($799<<2)|0);
           $801 = HEAP32[$800>>2]|0;
           $802 = ($720|0)==($801|0);
           do {
            if ($802) {
             HEAP32[$800>>2] = $R$1$i$i;
             $cond$i$i = ($R$1$i$i|0)==(0|0);
             if (!($cond$i$i)) {
              break;
             }
             $803 = 1 << $799;
             $804 = $803 ^ -1;
             $805 = HEAP32[(1308)>>2]|0;
             $806 = $805 & $804;
             HEAP32[(1308)>>2] = $806;
             break L332;
            } else {
             $807 = HEAP32[(1320)>>2]|0;
             $808 = ($771>>>0)<($807>>>0);
             if ($808) {
              _abort();
              // unreachable;
             }
             $809 = ((($771)) + 16|0);
             $810 = HEAP32[$809>>2]|0;
             $811 = ($810|0)==($720|0);
             if ($811) {
              HEAP32[$809>>2] = $R$1$i$i;
             } else {
              $812 = ((($771)) + 20|0);
              HEAP32[$812>>2] = $R$1$i$i;
             }
             $813 = ($R$1$i$i|0)==(0|0);
             if ($813) {
              break L332;
             }
            }
           } while(0);
           $814 = HEAP32[(1320)>>2]|0;
           $815 = ($R$1$i$i>>>0)<($814>>>0);
           if ($815) {
            _abort();
            // unreachable;
           }
           $816 = ((($R$1$i$i)) + 24|0);
           HEAP32[$816>>2] = $771;
           $$sum3132$i$i = $719 | 16;
           $$sum119$i = (($$sum3132$i$i) + ($tsize$254$i))|0;
           $817 = (($tbase$255$i) + ($$sum119$i)|0);
           $818 = HEAP32[$817>>2]|0;
           $819 = ($818|0)==(0|0);
           do {
            if (!($819)) {
             $820 = ($818>>>0)<($814>>>0);
             if ($820) {
              _abort();
              // unreachable;
             } else {
              $821 = ((($R$1$i$i)) + 16|0);
              HEAP32[$821>>2] = $818;
              $822 = ((($818)) + 24|0);
              HEAP32[$822>>2] = $R$1$i$i;
              break;
             }
            }
           } while(0);
           $$sum120$i = (($$sum2$i21$i) + ($$sum3132$i$i))|0;
           $823 = (($tbase$255$i) + ($$sum120$i)|0);
           $824 = HEAP32[$823>>2]|0;
           $825 = ($824|0)==(0|0);
           if ($825) {
            break;
           }
           $826 = HEAP32[(1320)>>2]|0;
           $827 = ($824>>>0)<($826>>>0);
           if ($827) {
            _abort();
            // unreachable;
           } else {
            $828 = ((($R$1$i$i)) + 20|0);
            HEAP32[$828>>2] = $824;
            $829 = ((($824)) + 24|0);
            HEAP32[$829>>2] = $R$1$i$i;
            break;
           }
          }
         } while(0);
         $$sum9$i$i = $744 | $719;
         $$sum121$i = (($$sum9$i$i) + ($tsize$254$i))|0;
         $830 = (($tbase$255$i) + ($$sum121$i)|0);
         $831 = (($744) + ($725))|0;
         $oldfirst$0$i$i = $830;$qsize$0$i$i = $831;
        } else {
         $oldfirst$0$i$i = $720;$qsize$0$i$i = $725;
        }
        $832 = ((($oldfirst$0$i$i)) + 4|0);
        $833 = HEAP32[$832>>2]|0;
        $834 = $833 & -2;
        HEAP32[$832>>2] = $834;
        $835 = $qsize$0$i$i | 1;
        $$sum10$i$i = (($$sum$i19$i) + 4)|0;
        $836 = (($tbase$255$i) + ($$sum10$i$i)|0);
        HEAP32[$836>>2] = $835;
        $$sum11$i$i = (($qsize$0$i$i) + ($$sum$i19$i))|0;
        $837 = (($tbase$255$i) + ($$sum11$i$i)|0);
        HEAP32[$837>>2] = $qsize$0$i$i;
        $838 = $qsize$0$i$i >>> 3;
        $839 = ($qsize$0$i$i>>>0)<(256);
        if ($839) {
         $840 = $838 << 1;
         $841 = (1344 + ($840<<2)|0);
         $842 = HEAP32[1304>>2]|0;
         $843 = 1 << $838;
         $844 = $842 & $843;
         $845 = ($844|0)==(0);
         do {
          if ($845) {
           $846 = $842 | $843;
           HEAP32[1304>>2] = $846;
           $$pre$i22$i = (($840) + 2)|0;
           $$pre56$i$i = (1344 + ($$pre$i22$i<<2)|0);
           $$pre$phi$i23$iZ2D = $$pre56$i$i;$F4$0$i$i = $841;
          } else {
           $$sum29$i$i = (($840) + 2)|0;
           $847 = (1344 + ($$sum29$i$i<<2)|0);
           $848 = HEAP32[$847>>2]|0;
           $849 = HEAP32[(1320)>>2]|0;
           $850 = ($848>>>0)<($849>>>0);
           if (!($850)) {
            $$pre$phi$i23$iZ2D = $847;$F4$0$i$i = $848;
            break;
           }
           _abort();
           // unreachable;
          }
         } while(0);
         HEAP32[$$pre$phi$i23$iZ2D>>2] = $724;
         $851 = ((($F4$0$i$i)) + 12|0);
         HEAP32[$851>>2] = $724;
         $$sum27$i$i = (($$sum$i19$i) + 8)|0;
         $852 = (($tbase$255$i) + ($$sum27$i$i)|0);
         HEAP32[$852>>2] = $F4$0$i$i;
         $$sum28$i$i = (($$sum$i19$i) + 12)|0;
         $853 = (($tbase$255$i) + ($$sum28$i$i)|0);
         HEAP32[$853>>2] = $841;
         break;
        }
        $854 = $qsize$0$i$i >>> 8;
        $855 = ($854|0)==(0);
        do {
         if ($855) {
          $I7$0$i$i = 0;
         } else {
          $856 = ($qsize$0$i$i>>>0)>(16777215);
          if ($856) {
           $I7$0$i$i = 31;
           break;
          }
          $857 = (($854) + 1048320)|0;
          $858 = $857 >>> 16;
          $859 = $858 & 8;
          $860 = $854 << $859;
          $861 = (($860) + 520192)|0;
          $862 = $861 >>> 16;
          $863 = $862 & 4;
          $864 = $863 | $859;
          $865 = $860 << $863;
          $866 = (($865) + 245760)|0;
          $867 = $866 >>> 16;
          $868 = $867 & 2;
          $869 = $864 | $868;
          $870 = (14 - ($869))|0;
          $871 = $865 << $868;
          $872 = $871 >>> 15;
          $873 = (($870) + ($872))|0;
          $874 = $873 << 1;
          $875 = (($873) + 7)|0;
          $876 = $qsize$0$i$i >>> $875;
          $877 = $876 & 1;
          $878 = $877 | $874;
          $I7$0$i$i = $878;
         }
        } while(0);
        $879 = (1608 + ($I7$0$i$i<<2)|0);
        $$sum12$i$i = (($$sum$i19$i) + 28)|0;
        $880 = (($tbase$255$i) + ($$sum12$i$i)|0);
        HEAP32[$880>>2] = $I7$0$i$i;
        $$sum13$i$i = (($$sum$i19$i) + 16)|0;
        $881 = (($tbase$255$i) + ($$sum13$i$i)|0);
        $$sum14$i$i = (($$sum$i19$i) + 20)|0;
        $882 = (($tbase$255$i) + ($$sum14$i$i)|0);
        HEAP32[$882>>2] = 0;
        HEAP32[$881>>2] = 0;
        $883 = HEAP32[(1308)>>2]|0;
        $884 = 1 << $I7$0$i$i;
        $885 = $883 & $884;
        $886 = ($885|0)==(0);
        if ($886) {
         $887 = $883 | $884;
         HEAP32[(1308)>>2] = $887;
         HEAP32[$879>>2] = $724;
         $$sum15$i$i = (($$sum$i19$i) + 24)|0;
         $888 = (($tbase$255$i) + ($$sum15$i$i)|0);
         HEAP32[$888>>2] = $879;
         $$sum16$i$i = (($$sum$i19$i) + 12)|0;
         $889 = (($tbase$255$i) + ($$sum16$i$i)|0);
         HEAP32[$889>>2] = $724;
         $$sum17$i$i = (($$sum$i19$i) + 8)|0;
         $890 = (($tbase$255$i) + ($$sum17$i$i)|0);
         HEAP32[$890>>2] = $724;
         break;
        }
        $891 = HEAP32[$879>>2]|0;
        $892 = ((($891)) + 4|0);
        $893 = HEAP32[$892>>2]|0;
        $894 = $893 & -8;
        $895 = ($894|0)==($qsize$0$i$i|0);
        L418: do {
         if ($895) {
          $T$0$lcssa$i25$i = $891;
         } else {
          $896 = ($I7$0$i$i|0)==(31);
          $897 = $I7$0$i$i >>> 1;
          $898 = (25 - ($897))|0;
          $899 = $896 ? 0 : $898;
          $900 = $qsize$0$i$i << $899;
          $K8$051$i$i = $900;$T$050$i$i = $891;
          while(1) {
           $907 = $K8$051$i$i >>> 31;
           $908 = (((($T$050$i$i)) + 16|0) + ($907<<2)|0);
           $903 = HEAP32[$908>>2]|0;
           $909 = ($903|0)==(0|0);
           if ($909) {
            $$lcssa = $908;$T$050$i$i$lcssa = $T$050$i$i;
            break;
           }
           $901 = $K8$051$i$i << 1;
           $902 = ((($903)) + 4|0);
           $904 = HEAP32[$902>>2]|0;
           $905 = $904 & -8;
           $906 = ($905|0)==($qsize$0$i$i|0);
           if ($906) {
            $T$0$lcssa$i25$i = $903;
            break L418;
           } else {
            $K8$051$i$i = $901;$T$050$i$i = $903;
           }
          }
          $910 = HEAP32[(1320)>>2]|0;
          $911 = ($$lcssa>>>0)<($910>>>0);
          if ($911) {
           _abort();
           // unreachable;
          } else {
           HEAP32[$$lcssa>>2] = $724;
           $$sum23$i$i = (($$sum$i19$i) + 24)|0;
           $912 = (($tbase$255$i) + ($$sum23$i$i)|0);
           HEAP32[$912>>2] = $T$050$i$i$lcssa;
           $$sum24$i$i = (($$sum$i19$i) + 12)|0;
           $913 = (($tbase$255$i) + ($$sum24$i$i)|0);
           HEAP32[$913>>2] = $724;
           $$sum25$i$i = (($$sum$i19$i) + 8)|0;
           $914 = (($tbase$255$i) + ($$sum25$i$i)|0);
           HEAP32[$914>>2] = $724;
           break L324;
          }
         }
        } while(0);
        $915 = ((($T$0$lcssa$i25$i)) + 8|0);
        $916 = HEAP32[$915>>2]|0;
        $917 = HEAP32[(1320)>>2]|0;
        $918 = ($916>>>0)>=($917>>>0);
        $not$$i26$i = ($T$0$lcssa$i25$i>>>0)>=($917>>>0);
        $919 = $918 & $not$$i26$i;
        if ($919) {
         $920 = ((($916)) + 12|0);
         HEAP32[$920>>2] = $724;
         HEAP32[$915>>2] = $724;
         $$sum20$i$i = (($$sum$i19$i) + 8)|0;
         $921 = (($tbase$255$i) + ($$sum20$i$i)|0);
         HEAP32[$921>>2] = $916;
         $$sum21$i$i = (($$sum$i19$i) + 12)|0;
         $922 = (($tbase$255$i) + ($$sum21$i$i)|0);
         HEAP32[$922>>2] = $T$0$lcssa$i25$i;
         $$sum22$i$i = (($$sum$i19$i) + 24)|0;
         $923 = (($tbase$255$i) + ($$sum22$i$i)|0);
         HEAP32[$923>>2] = 0;
         break;
        } else {
         _abort();
         // unreachable;
        }
       }
      } while(0);
      $$sum1819$i$i = $711 | 8;
      $924 = (($tbase$255$i) + ($$sum1819$i$i)|0);
      $mem$0 = $924;
      return ($mem$0|0);
     } else {
      $sp$0$i$i$i = (1752);
     }
    }
    while(1) {
     $925 = HEAP32[$sp$0$i$i$i>>2]|0;
     $926 = ($925>>>0)>($635>>>0);
     if (!($926)) {
      $927 = ((($sp$0$i$i$i)) + 4|0);
      $928 = HEAP32[$927>>2]|0;
      $929 = (($925) + ($928)|0);
      $930 = ($929>>>0)>($635>>>0);
      if ($930) {
       $$lcssa215 = $925;$$lcssa216 = $928;$$lcssa217 = $929;
       break;
      }
     }
     $931 = ((($sp$0$i$i$i)) + 8|0);
     $932 = HEAP32[$931>>2]|0;
     $sp$0$i$i$i = $932;
    }
    $$sum$i14$i = (($$lcssa216) + -47)|0;
    $$sum1$i15$i = (($$lcssa216) + -39)|0;
    $933 = (($$lcssa215) + ($$sum1$i15$i)|0);
    $934 = $933;
    $935 = $934 & 7;
    $936 = ($935|0)==(0);
    $937 = (0 - ($934))|0;
    $938 = $937 & 7;
    $939 = $936 ? 0 : $938;
    $$sum2$i16$i = (($$sum$i14$i) + ($939))|0;
    $940 = (($$lcssa215) + ($$sum2$i16$i)|0);
    $941 = ((($635)) + 16|0);
    $942 = ($940>>>0)<($941>>>0);
    $943 = $942 ? $635 : $940;
    $944 = ((($943)) + 8|0);
    $945 = (($tsize$254$i) + -40)|0;
    $946 = ((($tbase$255$i)) + 8|0);
    $947 = $946;
    $948 = $947 & 7;
    $949 = ($948|0)==(0);
    $950 = (0 - ($947))|0;
    $951 = $950 & 7;
    $952 = $949 ? 0 : $951;
    $953 = (($tbase$255$i) + ($952)|0);
    $954 = (($945) - ($952))|0;
    HEAP32[(1328)>>2] = $953;
    HEAP32[(1316)>>2] = $954;
    $955 = $954 | 1;
    $$sum$i$i$i = (($952) + 4)|0;
    $956 = (($tbase$255$i) + ($$sum$i$i$i)|0);
    HEAP32[$956>>2] = $955;
    $$sum2$i$i$i = (($tsize$254$i) + -36)|0;
    $957 = (($tbase$255$i) + ($$sum2$i$i$i)|0);
    HEAP32[$957>>2] = 40;
    $958 = HEAP32[(1792)>>2]|0;
    HEAP32[(1332)>>2] = $958;
    $959 = ((($943)) + 4|0);
    HEAP32[$959>>2] = 27;
    ;HEAP32[$944>>2]=HEAP32[(1752)>>2]|0;HEAP32[$944+4>>2]=HEAP32[(1752)+4>>2]|0;HEAP32[$944+8>>2]=HEAP32[(1752)+8>>2]|0;HEAP32[$944+12>>2]=HEAP32[(1752)+12>>2]|0;
    HEAP32[(1752)>>2] = $tbase$255$i;
    HEAP32[(1756)>>2] = $tsize$254$i;
    HEAP32[(1764)>>2] = 0;
    HEAP32[(1760)>>2] = $944;
    $960 = ((($943)) + 28|0);
    HEAP32[$960>>2] = 7;
    $961 = ((($943)) + 32|0);
    $962 = ($961>>>0)<($$lcssa217>>>0);
    if ($962) {
     $964 = $960;
     while(1) {
      $963 = ((($964)) + 4|0);
      HEAP32[$963>>2] = 7;
      $965 = ((($964)) + 8|0);
      $966 = ($965>>>0)<($$lcssa217>>>0);
      if ($966) {
       $964 = $963;
      } else {
       break;
      }
     }
    }
    $967 = ($943|0)==($635|0);
    if (!($967)) {
     $968 = $943;
     $969 = $635;
     $970 = (($968) - ($969))|0;
     $971 = HEAP32[$959>>2]|0;
     $972 = $971 & -2;
     HEAP32[$959>>2] = $972;
     $973 = $970 | 1;
     $974 = ((($635)) + 4|0);
     HEAP32[$974>>2] = $973;
     HEAP32[$943>>2] = $970;
     $975 = $970 >>> 3;
     $976 = ($970>>>0)<(256);
     if ($976) {
      $977 = $975 << 1;
      $978 = (1344 + ($977<<2)|0);
      $979 = HEAP32[1304>>2]|0;
      $980 = 1 << $975;
      $981 = $979 & $980;
      $982 = ($981|0)==(0);
      if ($982) {
       $983 = $979 | $980;
       HEAP32[1304>>2] = $983;
       $$pre$i$i = (($977) + 2)|0;
       $$pre14$i$i = (1344 + ($$pre$i$i<<2)|0);
       $$pre$phi$i$iZ2D = $$pre14$i$i;$F$0$i$i = $978;
      } else {
       $$sum4$i$i = (($977) + 2)|0;
       $984 = (1344 + ($$sum4$i$i<<2)|0);
       $985 = HEAP32[$984>>2]|0;
       $986 = HEAP32[(1320)>>2]|0;
       $987 = ($985>>>0)<($986>>>0);
       if ($987) {
        _abort();
        // unreachable;
       } else {
        $$pre$phi$i$iZ2D = $984;$F$0$i$i = $985;
       }
      }
      HEAP32[$$pre$phi$i$iZ2D>>2] = $635;
      $988 = ((($F$0$i$i)) + 12|0);
      HEAP32[$988>>2] = $635;
      $989 = ((($635)) + 8|0);
      HEAP32[$989>>2] = $F$0$i$i;
      $990 = ((($635)) + 12|0);
      HEAP32[$990>>2] = $978;
      break;
     }
     $991 = $970 >>> 8;
     $992 = ($991|0)==(0);
     if ($992) {
      $I1$0$i$i = 0;
     } else {
      $993 = ($970>>>0)>(16777215);
      if ($993) {
       $I1$0$i$i = 31;
      } else {
       $994 = (($991) + 1048320)|0;
       $995 = $994 >>> 16;
       $996 = $995 & 8;
       $997 = $991 << $996;
       $998 = (($997) + 520192)|0;
       $999 = $998 >>> 16;
       $1000 = $999 & 4;
       $1001 = $1000 | $996;
       $1002 = $997 << $1000;
       $1003 = (($1002) + 245760)|0;
       $1004 = $1003 >>> 16;
       $1005 = $1004 & 2;
       $1006 = $1001 | $1005;
       $1007 = (14 - ($1006))|0;
       $1008 = $1002 << $1005;
       $1009 = $1008 >>> 15;
       $1010 = (($1007) + ($1009))|0;
       $1011 = $1010 << 1;
       $1012 = (($1010) + 7)|0;
       $1013 = $970 >>> $1012;
       $1014 = $1013 & 1;
       $1015 = $1014 | $1011;
       $I1$0$i$i = $1015;
      }
     }
     $1016 = (1608 + ($I1$0$i$i<<2)|0);
     $1017 = ((($635)) + 28|0);
     HEAP32[$1017>>2] = $I1$0$i$i;
     $1018 = ((($635)) + 20|0);
     HEAP32[$1018>>2] = 0;
     HEAP32[$941>>2] = 0;
     $1019 = HEAP32[(1308)>>2]|0;
     $1020 = 1 << $I1$0$i$i;
     $1021 = $1019 & $1020;
     $1022 = ($1021|0)==(0);
     if ($1022) {
      $1023 = $1019 | $1020;
      HEAP32[(1308)>>2] = $1023;
      HEAP32[$1016>>2] = $635;
      $1024 = ((($635)) + 24|0);
      HEAP32[$1024>>2] = $1016;
      $1025 = ((($635)) + 12|0);
      HEAP32[$1025>>2] = $635;
      $1026 = ((($635)) + 8|0);
      HEAP32[$1026>>2] = $635;
      break;
     }
     $1027 = HEAP32[$1016>>2]|0;
     $1028 = ((($1027)) + 4|0);
     $1029 = HEAP32[$1028>>2]|0;
     $1030 = $1029 & -8;
     $1031 = ($1030|0)==($970|0);
     L459: do {
      if ($1031) {
       $T$0$lcssa$i$i = $1027;
      } else {
       $1032 = ($I1$0$i$i|0)==(31);
       $1033 = $I1$0$i$i >>> 1;
       $1034 = (25 - ($1033))|0;
       $1035 = $1032 ? 0 : $1034;
       $1036 = $970 << $1035;
       $K2$07$i$i = $1036;$T$06$i$i = $1027;
       while(1) {
        $1043 = $K2$07$i$i >>> 31;
        $1044 = (((($T$06$i$i)) + 16|0) + ($1043<<2)|0);
        $1039 = HEAP32[$1044>>2]|0;
        $1045 = ($1039|0)==(0|0);
        if ($1045) {
         $$lcssa211 = $1044;$T$06$i$i$lcssa = $T$06$i$i;
         break;
        }
        $1037 = $K2$07$i$i << 1;
        $1038 = ((($1039)) + 4|0);
        $1040 = HEAP32[$1038>>2]|0;
        $1041 = $1040 & -8;
        $1042 = ($1041|0)==($970|0);
        if ($1042) {
         $T$0$lcssa$i$i = $1039;
         break L459;
        } else {
         $K2$07$i$i = $1037;$T$06$i$i = $1039;
        }
       }
       $1046 = HEAP32[(1320)>>2]|0;
       $1047 = ($$lcssa211>>>0)<($1046>>>0);
       if ($1047) {
        _abort();
        // unreachable;
       } else {
        HEAP32[$$lcssa211>>2] = $635;
        $1048 = ((($635)) + 24|0);
        HEAP32[$1048>>2] = $T$06$i$i$lcssa;
        $1049 = ((($635)) + 12|0);
        HEAP32[$1049>>2] = $635;
        $1050 = ((($635)) + 8|0);
        HEAP32[$1050>>2] = $635;
        break L299;
       }
      }
     } while(0);
     $1051 = ((($T$0$lcssa$i$i)) + 8|0);
     $1052 = HEAP32[$1051>>2]|0;
     $1053 = HEAP32[(1320)>>2]|0;
     $1054 = ($1052>>>0)>=($1053>>>0);
     $not$$i$i = ($T$0$lcssa$i$i>>>0)>=($1053>>>0);
     $1055 = $1054 & $not$$i$i;
     if ($1055) {
      $1056 = ((($1052)) + 12|0);
      HEAP32[$1056>>2] = $635;
      HEAP32[$1051>>2] = $635;
      $1057 = ((($635)) + 8|0);
      HEAP32[$1057>>2] = $1052;
      $1058 = ((($635)) + 12|0);
      HEAP32[$1058>>2] = $T$0$lcssa$i$i;
      $1059 = ((($635)) + 24|0);
      HEAP32[$1059>>2] = 0;
      break;
     } else {
      _abort();
      // unreachable;
     }
    }
   }
  } while(0);
  $1060 = HEAP32[(1316)>>2]|0;
  $1061 = ($1060>>>0)>($nb$0>>>0);
  if ($1061) {
   $1062 = (($1060) - ($nb$0))|0;
   HEAP32[(1316)>>2] = $1062;
   $1063 = HEAP32[(1328)>>2]|0;
   $1064 = (($1063) + ($nb$0)|0);
   HEAP32[(1328)>>2] = $1064;
   $1065 = $1062 | 1;
   $$sum$i32 = (($nb$0) + 4)|0;
   $1066 = (($1063) + ($$sum$i32)|0);
   HEAP32[$1066>>2] = $1065;
   $1067 = $nb$0 | 3;
   $1068 = ((($1063)) + 4|0);
   HEAP32[$1068>>2] = $1067;
   $1069 = ((($1063)) + 8|0);
   $mem$0 = $1069;
   return ($mem$0|0);
  }
 }
 $1070 = (___errno_location()|0);
 HEAP32[$1070>>2] = 12;
 $mem$0 = 0;
 return ($mem$0|0);
}
function _free($mem) {
 $mem = $mem|0;
 var $$lcssa = 0, $$pre = 0, $$pre$phi59Z2D = 0, $$pre$phi61Z2D = 0, $$pre$phiZ2D = 0, $$pre57 = 0, $$pre58 = 0, $$pre60 = 0, $$sum = 0, $$sum11 = 0, $$sum12 = 0, $$sum13 = 0, $$sum14 = 0, $$sum1718 = 0, $$sum19 = 0, $$sum2 = 0, $$sum20 = 0, $$sum22 = 0, $$sum23 = 0, $$sum24 = 0;
 var $$sum25 = 0, $$sum26 = 0, $$sum27 = 0, $$sum28 = 0, $$sum29 = 0, $$sum3 = 0, $$sum30 = 0, $$sum31 = 0, $$sum5 = 0, $$sum67 = 0, $$sum8 = 0, $$sum9 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;
 var $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0;
 var $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0;
 var $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0;
 var $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0;
 var $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0;
 var $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0;
 var $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0;
 var $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0;
 var $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0;
 var $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0;
 var $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0;
 var $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0;
 var $321 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $F16$0 = 0, $I18$0 = 0, $K19$052 = 0, $R$0 = 0, $R$0$lcssa = 0, $R$1 = 0;
 var $R7$0 = 0, $R7$0$lcssa = 0, $R7$1 = 0, $RP$0 = 0, $RP$0$lcssa = 0, $RP9$0 = 0, $RP9$0$lcssa = 0, $T$0$lcssa = 0, $T$051 = 0, $T$051$lcssa = 0, $cond = 0, $cond47 = 0, $not$ = 0, $p$0 = 0, $psize$0 = 0, $psize$1 = 0, $sp$0$i = 0, $sp$0$in$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($mem|0)==(0|0);
 if ($0) {
  return;
 }
 $1 = ((($mem)) + -8|0);
 $2 = HEAP32[(1320)>>2]|0;
 $3 = ($1>>>0)<($2>>>0);
 if ($3) {
  _abort();
  // unreachable;
 }
 $4 = ((($mem)) + -4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = $5 & 3;
 $7 = ($6|0)==(1);
 if ($7) {
  _abort();
  // unreachable;
 }
 $8 = $5 & -8;
 $$sum = (($8) + -8)|0;
 $9 = (($mem) + ($$sum)|0);
 $10 = $5 & 1;
 $11 = ($10|0)==(0);
 do {
  if ($11) {
   $12 = HEAP32[$1>>2]|0;
   $13 = ($6|0)==(0);
   if ($13) {
    return;
   }
   $$sum2 = (-8 - ($12))|0;
   $14 = (($mem) + ($$sum2)|0);
   $15 = (($12) + ($8))|0;
   $16 = ($14>>>0)<($2>>>0);
   if ($16) {
    _abort();
    // unreachable;
   }
   $17 = HEAP32[(1324)>>2]|0;
   $18 = ($14|0)==($17|0);
   if ($18) {
    $$sum3 = (($8) + -4)|0;
    $103 = (($mem) + ($$sum3)|0);
    $104 = HEAP32[$103>>2]|0;
    $105 = $104 & 3;
    $106 = ($105|0)==(3);
    if (!($106)) {
     $p$0 = $14;$psize$0 = $15;
     break;
    }
    HEAP32[(1312)>>2] = $15;
    $107 = $104 & -2;
    HEAP32[$103>>2] = $107;
    $108 = $15 | 1;
    $$sum20 = (($$sum2) + 4)|0;
    $109 = (($mem) + ($$sum20)|0);
    HEAP32[$109>>2] = $108;
    HEAP32[$9>>2] = $15;
    return;
   }
   $19 = $12 >>> 3;
   $20 = ($12>>>0)<(256);
   if ($20) {
    $$sum30 = (($$sum2) + 8)|0;
    $21 = (($mem) + ($$sum30)|0);
    $22 = HEAP32[$21>>2]|0;
    $$sum31 = (($$sum2) + 12)|0;
    $23 = (($mem) + ($$sum31)|0);
    $24 = HEAP32[$23>>2]|0;
    $25 = $19 << 1;
    $26 = (1344 + ($25<<2)|0);
    $27 = ($22|0)==($26|0);
    if (!($27)) {
     $28 = ($22>>>0)<($2>>>0);
     if ($28) {
      _abort();
      // unreachable;
     }
     $29 = ((($22)) + 12|0);
     $30 = HEAP32[$29>>2]|0;
     $31 = ($30|0)==($14|0);
     if (!($31)) {
      _abort();
      // unreachable;
     }
    }
    $32 = ($24|0)==($22|0);
    if ($32) {
     $33 = 1 << $19;
     $34 = $33 ^ -1;
     $35 = HEAP32[1304>>2]|0;
     $36 = $35 & $34;
     HEAP32[1304>>2] = $36;
     $p$0 = $14;$psize$0 = $15;
     break;
    }
    $37 = ($24|0)==($26|0);
    if ($37) {
     $$pre60 = ((($24)) + 8|0);
     $$pre$phi61Z2D = $$pre60;
    } else {
     $38 = ($24>>>0)<($2>>>0);
     if ($38) {
      _abort();
      // unreachable;
     }
     $39 = ((($24)) + 8|0);
     $40 = HEAP32[$39>>2]|0;
     $41 = ($40|0)==($14|0);
     if ($41) {
      $$pre$phi61Z2D = $39;
     } else {
      _abort();
      // unreachable;
     }
    }
    $42 = ((($22)) + 12|0);
    HEAP32[$42>>2] = $24;
    HEAP32[$$pre$phi61Z2D>>2] = $22;
    $p$0 = $14;$psize$0 = $15;
    break;
   }
   $$sum22 = (($$sum2) + 24)|0;
   $43 = (($mem) + ($$sum22)|0);
   $44 = HEAP32[$43>>2]|0;
   $$sum23 = (($$sum2) + 12)|0;
   $45 = (($mem) + ($$sum23)|0);
   $46 = HEAP32[$45>>2]|0;
   $47 = ($46|0)==($14|0);
   do {
    if ($47) {
     $$sum25 = (($$sum2) + 20)|0;
     $57 = (($mem) + ($$sum25)|0);
     $58 = HEAP32[$57>>2]|0;
     $59 = ($58|0)==(0|0);
     if ($59) {
      $$sum24 = (($$sum2) + 16)|0;
      $60 = (($mem) + ($$sum24)|0);
      $61 = HEAP32[$60>>2]|0;
      $62 = ($61|0)==(0|0);
      if ($62) {
       $R$1 = 0;
       break;
      } else {
       $R$0 = $61;$RP$0 = $60;
      }
     } else {
      $R$0 = $58;$RP$0 = $57;
     }
     while(1) {
      $63 = ((($R$0)) + 20|0);
      $64 = HEAP32[$63>>2]|0;
      $65 = ($64|0)==(0|0);
      if (!($65)) {
       $R$0 = $64;$RP$0 = $63;
       continue;
      }
      $66 = ((($R$0)) + 16|0);
      $67 = HEAP32[$66>>2]|0;
      $68 = ($67|0)==(0|0);
      if ($68) {
       $R$0$lcssa = $R$0;$RP$0$lcssa = $RP$0;
       break;
      } else {
       $R$0 = $67;$RP$0 = $66;
      }
     }
     $69 = ($RP$0$lcssa>>>0)<($2>>>0);
     if ($69) {
      _abort();
      // unreachable;
     } else {
      HEAP32[$RP$0$lcssa>>2] = 0;
      $R$1 = $R$0$lcssa;
      break;
     }
    } else {
     $$sum29 = (($$sum2) + 8)|0;
     $48 = (($mem) + ($$sum29)|0);
     $49 = HEAP32[$48>>2]|0;
     $50 = ($49>>>0)<($2>>>0);
     if ($50) {
      _abort();
      // unreachable;
     }
     $51 = ((($49)) + 12|0);
     $52 = HEAP32[$51>>2]|0;
     $53 = ($52|0)==($14|0);
     if (!($53)) {
      _abort();
      // unreachable;
     }
     $54 = ((($46)) + 8|0);
     $55 = HEAP32[$54>>2]|0;
     $56 = ($55|0)==($14|0);
     if ($56) {
      HEAP32[$51>>2] = $46;
      HEAP32[$54>>2] = $49;
      $R$1 = $46;
      break;
     } else {
      _abort();
      // unreachable;
     }
    }
   } while(0);
   $70 = ($44|0)==(0|0);
   if ($70) {
    $p$0 = $14;$psize$0 = $15;
   } else {
    $$sum26 = (($$sum2) + 28)|0;
    $71 = (($mem) + ($$sum26)|0);
    $72 = HEAP32[$71>>2]|0;
    $73 = (1608 + ($72<<2)|0);
    $74 = HEAP32[$73>>2]|0;
    $75 = ($14|0)==($74|0);
    if ($75) {
     HEAP32[$73>>2] = $R$1;
     $cond = ($R$1|0)==(0|0);
     if ($cond) {
      $76 = 1 << $72;
      $77 = $76 ^ -1;
      $78 = HEAP32[(1308)>>2]|0;
      $79 = $78 & $77;
      HEAP32[(1308)>>2] = $79;
      $p$0 = $14;$psize$0 = $15;
      break;
     }
    } else {
     $80 = HEAP32[(1320)>>2]|0;
     $81 = ($44>>>0)<($80>>>0);
     if ($81) {
      _abort();
      // unreachable;
     }
     $82 = ((($44)) + 16|0);
     $83 = HEAP32[$82>>2]|0;
     $84 = ($83|0)==($14|0);
     if ($84) {
      HEAP32[$82>>2] = $R$1;
     } else {
      $85 = ((($44)) + 20|0);
      HEAP32[$85>>2] = $R$1;
     }
     $86 = ($R$1|0)==(0|0);
     if ($86) {
      $p$0 = $14;$psize$0 = $15;
      break;
     }
    }
    $87 = HEAP32[(1320)>>2]|0;
    $88 = ($R$1>>>0)<($87>>>0);
    if ($88) {
     _abort();
     // unreachable;
    }
    $89 = ((($R$1)) + 24|0);
    HEAP32[$89>>2] = $44;
    $$sum27 = (($$sum2) + 16)|0;
    $90 = (($mem) + ($$sum27)|0);
    $91 = HEAP32[$90>>2]|0;
    $92 = ($91|0)==(0|0);
    do {
     if (!($92)) {
      $93 = ($91>>>0)<($87>>>0);
      if ($93) {
       _abort();
       // unreachable;
      } else {
       $94 = ((($R$1)) + 16|0);
       HEAP32[$94>>2] = $91;
       $95 = ((($91)) + 24|0);
       HEAP32[$95>>2] = $R$1;
       break;
      }
     }
    } while(0);
    $$sum28 = (($$sum2) + 20)|0;
    $96 = (($mem) + ($$sum28)|0);
    $97 = HEAP32[$96>>2]|0;
    $98 = ($97|0)==(0|0);
    if ($98) {
     $p$0 = $14;$psize$0 = $15;
    } else {
     $99 = HEAP32[(1320)>>2]|0;
     $100 = ($97>>>0)<($99>>>0);
     if ($100) {
      _abort();
      // unreachable;
     } else {
      $101 = ((($R$1)) + 20|0);
      HEAP32[$101>>2] = $97;
      $102 = ((($97)) + 24|0);
      HEAP32[$102>>2] = $R$1;
      $p$0 = $14;$psize$0 = $15;
      break;
     }
    }
   }
  } else {
   $p$0 = $1;$psize$0 = $8;
  }
 } while(0);
 $110 = ($p$0>>>0)<($9>>>0);
 if (!($110)) {
  _abort();
  // unreachable;
 }
 $$sum19 = (($8) + -4)|0;
 $111 = (($mem) + ($$sum19)|0);
 $112 = HEAP32[$111>>2]|0;
 $113 = $112 & 1;
 $114 = ($113|0)==(0);
 if ($114) {
  _abort();
  // unreachable;
 }
 $115 = $112 & 2;
 $116 = ($115|0)==(0);
 if ($116) {
  $117 = HEAP32[(1328)>>2]|0;
  $118 = ($9|0)==($117|0);
  if ($118) {
   $119 = HEAP32[(1316)>>2]|0;
   $120 = (($119) + ($psize$0))|0;
   HEAP32[(1316)>>2] = $120;
   HEAP32[(1328)>>2] = $p$0;
   $121 = $120 | 1;
   $122 = ((($p$0)) + 4|0);
   HEAP32[$122>>2] = $121;
   $123 = HEAP32[(1324)>>2]|0;
   $124 = ($p$0|0)==($123|0);
   if (!($124)) {
    return;
   }
   HEAP32[(1324)>>2] = 0;
   HEAP32[(1312)>>2] = 0;
   return;
  }
  $125 = HEAP32[(1324)>>2]|0;
  $126 = ($9|0)==($125|0);
  if ($126) {
   $127 = HEAP32[(1312)>>2]|0;
   $128 = (($127) + ($psize$0))|0;
   HEAP32[(1312)>>2] = $128;
   HEAP32[(1324)>>2] = $p$0;
   $129 = $128 | 1;
   $130 = ((($p$0)) + 4|0);
   HEAP32[$130>>2] = $129;
   $131 = (($p$0) + ($128)|0);
   HEAP32[$131>>2] = $128;
   return;
  }
  $132 = $112 & -8;
  $133 = (($132) + ($psize$0))|0;
  $134 = $112 >>> 3;
  $135 = ($112>>>0)<(256);
  do {
   if ($135) {
    $136 = (($mem) + ($8)|0);
    $137 = HEAP32[$136>>2]|0;
    $$sum1718 = $8 | 4;
    $138 = (($mem) + ($$sum1718)|0);
    $139 = HEAP32[$138>>2]|0;
    $140 = $134 << 1;
    $141 = (1344 + ($140<<2)|0);
    $142 = ($137|0)==($141|0);
    if (!($142)) {
     $143 = HEAP32[(1320)>>2]|0;
     $144 = ($137>>>0)<($143>>>0);
     if ($144) {
      _abort();
      // unreachable;
     }
     $145 = ((($137)) + 12|0);
     $146 = HEAP32[$145>>2]|0;
     $147 = ($146|0)==($9|0);
     if (!($147)) {
      _abort();
      // unreachable;
     }
    }
    $148 = ($139|0)==($137|0);
    if ($148) {
     $149 = 1 << $134;
     $150 = $149 ^ -1;
     $151 = HEAP32[1304>>2]|0;
     $152 = $151 & $150;
     HEAP32[1304>>2] = $152;
     break;
    }
    $153 = ($139|0)==($141|0);
    if ($153) {
     $$pre58 = ((($139)) + 8|0);
     $$pre$phi59Z2D = $$pre58;
    } else {
     $154 = HEAP32[(1320)>>2]|0;
     $155 = ($139>>>0)<($154>>>0);
     if ($155) {
      _abort();
      // unreachable;
     }
     $156 = ((($139)) + 8|0);
     $157 = HEAP32[$156>>2]|0;
     $158 = ($157|0)==($9|0);
     if ($158) {
      $$pre$phi59Z2D = $156;
     } else {
      _abort();
      // unreachable;
     }
    }
    $159 = ((($137)) + 12|0);
    HEAP32[$159>>2] = $139;
    HEAP32[$$pre$phi59Z2D>>2] = $137;
   } else {
    $$sum5 = (($8) + 16)|0;
    $160 = (($mem) + ($$sum5)|0);
    $161 = HEAP32[$160>>2]|0;
    $$sum67 = $8 | 4;
    $162 = (($mem) + ($$sum67)|0);
    $163 = HEAP32[$162>>2]|0;
    $164 = ($163|0)==($9|0);
    do {
     if ($164) {
      $$sum9 = (($8) + 12)|0;
      $175 = (($mem) + ($$sum9)|0);
      $176 = HEAP32[$175>>2]|0;
      $177 = ($176|0)==(0|0);
      if ($177) {
       $$sum8 = (($8) + 8)|0;
       $178 = (($mem) + ($$sum8)|0);
       $179 = HEAP32[$178>>2]|0;
       $180 = ($179|0)==(0|0);
       if ($180) {
        $R7$1 = 0;
        break;
       } else {
        $R7$0 = $179;$RP9$0 = $178;
       }
      } else {
       $R7$0 = $176;$RP9$0 = $175;
      }
      while(1) {
       $181 = ((($R7$0)) + 20|0);
       $182 = HEAP32[$181>>2]|0;
       $183 = ($182|0)==(0|0);
       if (!($183)) {
        $R7$0 = $182;$RP9$0 = $181;
        continue;
       }
       $184 = ((($R7$0)) + 16|0);
       $185 = HEAP32[$184>>2]|0;
       $186 = ($185|0)==(0|0);
       if ($186) {
        $R7$0$lcssa = $R7$0;$RP9$0$lcssa = $RP9$0;
        break;
       } else {
        $R7$0 = $185;$RP9$0 = $184;
       }
      }
      $187 = HEAP32[(1320)>>2]|0;
      $188 = ($RP9$0$lcssa>>>0)<($187>>>0);
      if ($188) {
       _abort();
       // unreachable;
      } else {
       HEAP32[$RP9$0$lcssa>>2] = 0;
       $R7$1 = $R7$0$lcssa;
       break;
      }
     } else {
      $165 = (($mem) + ($8)|0);
      $166 = HEAP32[$165>>2]|0;
      $167 = HEAP32[(1320)>>2]|0;
      $168 = ($166>>>0)<($167>>>0);
      if ($168) {
       _abort();
       // unreachable;
      }
      $169 = ((($166)) + 12|0);
      $170 = HEAP32[$169>>2]|0;
      $171 = ($170|0)==($9|0);
      if (!($171)) {
       _abort();
       // unreachable;
      }
      $172 = ((($163)) + 8|0);
      $173 = HEAP32[$172>>2]|0;
      $174 = ($173|0)==($9|0);
      if ($174) {
       HEAP32[$169>>2] = $163;
       HEAP32[$172>>2] = $166;
       $R7$1 = $163;
       break;
      } else {
       _abort();
       // unreachable;
      }
     }
    } while(0);
    $189 = ($161|0)==(0|0);
    if (!($189)) {
     $$sum12 = (($8) + 20)|0;
     $190 = (($mem) + ($$sum12)|0);
     $191 = HEAP32[$190>>2]|0;
     $192 = (1608 + ($191<<2)|0);
     $193 = HEAP32[$192>>2]|0;
     $194 = ($9|0)==($193|0);
     if ($194) {
      HEAP32[$192>>2] = $R7$1;
      $cond47 = ($R7$1|0)==(0|0);
      if ($cond47) {
       $195 = 1 << $191;
       $196 = $195 ^ -1;
       $197 = HEAP32[(1308)>>2]|0;
       $198 = $197 & $196;
       HEAP32[(1308)>>2] = $198;
       break;
      }
     } else {
      $199 = HEAP32[(1320)>>2]|0;
      $200 = ($161>>>0)<($199>>>0);
      if ($200) {
       _abort();
       // unreachable;
      }
      $201 = ((($161)) + 16|0);
      $202 = HEAP32[$201>>2]|0;
      $203 = ($202|0)==($9|0);
      if ($203) {
       HEAP32[$201>>2] = $R7$1;
      } else {
       $204 = ((($161)) + 20|0);
       HEAP32[$204>>2] = $R7$1;
      }
      $205 = ($R7$1|0)==(0|0);
      if ($205) {
       break;
      }
     }
     $206 = HEAP32[(1320)>>2]|0;
     $207 = ($R7$1>>>0)<($206>>>0);
     if ($207) {
      _abort();
      // unreachable;
     }
     $208 = ((($R7$1)) + 24|0);
     HEAP32[$208>>2] = $161;
     $$sum13 = (($8) + 8)|0;
     $209 = (($mem) + ($$sum13)|0);
     $210 = HEAP32[$209>>2]|0;
     $211 = ($210|0)==(0|0);
     do {
      if (!($211)) {
       $212 = ($210>>>0)<($206>>>0);
       if ($212) {
        _abort();
        // unreachable;
       } else {
        $213 = ((($R7$1)) + 16|0);
        HEAP32[$213>>2] = $210;
        $214 = ((($210)) + 24|0);
        HEAP32[$214>>2] = $R7$1;
        break;
       }
      }
     } while(0);
     $$sum14 = (($8) + 12)|0;
     $215 = (($mem) + ($$sum14)|0);
     $216 = HEAP32[$215>>2]|0;
     $217 = ($216|0)==(0|0);
     if (!($217)) {
      $218 = HEAP32[(1320)>>2]|0;
      $219 = ($216>>>0)<($218>>>0);
      if ($219) {
       _abort();
       // unreachable;
      } else {
       $220 = ((($R7$1)) + 20|0);
       HEAP32[$220>>2] = $216;
       $221 = ((($216)) + 24|0);
       HEAP32[$221>>2] = $R7$1;
       break;
      }
     }
    }
   }
  } while(0);
  $222 = $133 | 1;
  $223 = ((($p$0)) + 4|0);
  HEAP32[$223>>2] = $222;
  $224 = (($p$0) + ($133)|0);
  HEAP32[$224>>2] = $133;
  $225 = HEAP32[(1324)>>2]|0;
  $226 = ($p$0|0)==($225|0);
  if ($226) {
   HEAP32[(1312)>>2] = $133;
   return;
  } else {
   $psize$1 = $133;
  }
 } else {
  $227 = $112 & -2;
  HEAP32[$111>>2] = $227;
  $228 = $psize$0 | 1;
  $229 = ((($p$0)) + 4|0);
  HEAP32[$229>>2] = $228;
  $230 = (($p$0) + ($psize$0)|0);
  HEAP32[$230>>2] = $psize$0;
  $psize$1 = $psize$0;
 }
 $231 = $psize$1 >>> 3;
 $232 = ($psize$1>>>0)<(256);
 if ($232) {
  $233 = $231 << 1;
  $234 = (1344 + ($233<<2)|0);
  $235 = HEAP32[1304>>2]|0;
  $236 = 1 << $231;
  $237 = $235 & $236;
  $238 = ($237|0)==(0);
  if ($238) {
   $239 = $235 | $236;
   HEAP32[1304>>2] = $239;
   $$pre = (($233) + 2)|0;
   $$pre57 = (1344 + ($$pre<<2)|0);
   $$pre$phiZ2D = $$pre57;$F16$0 = $234;
  } else {
   $$sum11 = (($233) + 2)|0;
   $240 = (1344 + ($$sum11<<2)|0);
   $241 = HEAP32[$240>>2]|0;
   $242 = HEAP32[(1320)>>2]|0;
   $243 = ($241>>>0)<($242>>>0);
   if ($243) {
    _abort();
    // unreachable;
   } else {
    $$pre$phiZ2D = $240;$F16$0 = $241;
   }
  }
  HEAP32[$$pre$phiZ2D>>2] = $p$0;
  $244 = ((($F16$0)) + 12|0);
  HEAP32[$244>>2] = $p$0;
  $245 = ((($p$0)) + 8|0);
  HEAP32[$245>>2] = $F16$0;
  $246 = ((($p$0)) + 12|0);
  HEAP32[$246>>2] = $234;
  return;
 }
 $247 = $psize$1 >>> 8;
 $248 = ($247|0)==(0);
 if ($248) {
  $I18$0 = 0;
 } else {
  $249 = ($psize$1>>>0)>(16777215);
  if ($249) {
   $I18$0 = 31;
  } else {
   $250 = (($247) + 1048320)|0;
   $251 = $250 >>> 16;
   $252 = $251 & 8;
   $253 = $247 << $252;
   $254 = (($253) + 520192)|0;
   $255 = $254 >>> 16;
   $256 = $255 & 4;
   $257 = $256 | $252;
   $258 = $253 << $256;
   $259 = (($258) + 245760)|0;
   $260 = $259 >>> 16;
   $261 = $260 & 2;
   $262 = $257 | $261;
   $263 = (14 - ($262))|0;
   $264 = $258 << $261;
   $265 = $264 >>> 15;
   $266 = (($263) + ($265))|0;
   $267 = $266 << 1;
   $268 = (($266) + 7)|0;
   $269 = $psize$1 >>> $268;
   $270 = $269 & 1;
   $271 = $270 | $267;
   $I18$0 = $271;
  }
 }
 $272 = (1608 + ($I18$0<<2)|0);
 $273 = ((($p$0)) + 28|0);
 HEAP32[$273>>2] = $I18$0;
 $274 = ((($p$0)) + 16|0);
 $275 = ((($p$0)) + 20|0);
 HEAP32[$275>>2] = 0;
 HEAP32[$274>>2] = 0;
 $276 = HEAP32[(1308)>>2]|0;
 $277 = 1 << $I18$0;
 $278 = $276 & $277;
 $279 = ($278|0)==(0);
 L199: do {
  if ($279) {
   $280 = $276 | $277;
   HEAP32[(1308)>>2] = $280;
   HEAP32[$272>>2] = $p$0;
   $281 = ((($p$0)) + 24|0);
   HEAP32[$281>>2] = $272;
   $282 = ((($p$0)) + 12|0);
   HEAP32[$282>>2] = $p$0;
   $283 = ((($p$0)) + 8|0);
   HEAP32[$283>>2] = $p$0;
  } else {
   $284 = HEAP32[$272>>2]|0;
   $285 = ((($284)) + 4|0);
   $286 = HEAP32[$285>>2]|0;
   $287 = $286 & -8;
   $288 = ($287|0)==($psize$1|0);
   L202: do {
    if ($288) {
     $T$0$lcssa = $284;
    } else {
     $289 = ($I18$0|0)==(31);
     $290 = $I18$0 >>> 1;
     $291 = (25 - ($290))|0;
     $292 = $289 ? 0 : $291;
     $293 = $psize$1 << $292;
     $K19$052 = $293;$T$051 = $284;
     while(1) {
      $300 = $K19$052 >>> 31;
      $301 = (((($T$051)) + 16|0) + ($300<<2)|0);
      $296 = HEAP32[$301>>2]|0;
      $302 = ($296|0)==(0|0);
      if ($302) {
       $$lcssa = $301;$T$051$lcssa = $T$051;
       break;
      }
      $294 = $K19$052 << 1;
      $295 = ((($296)) + 4|0);
      $297 = HEAP32[$295>>2]|0;
      $298 = $297 & -8;
      $299 = ($298|0)==($psize$1|0);
      if ($299) {
       $T$0$lcssa = $296;
       break L202;
      } else {
       $K19$052 = $294;$T$051 = $296;
      }
     }
     $303 = HEAP32[(1320)>>2]|0;
     $304 = ($$lcssa>>>0)<($303>>>0);
     if ($304) {
      _abort();
      // unreachable;
     } else {
      HEAP32[$$lcssa>>2] = $p$0;
      $305 = ((($p$0)) + 24|0);
      HEAP32[$305>>2] = $T$051$lcssa;
      $306 = ((($p$0)) + 12|0);
      HEAP32[$306>>2] = $p$0;
      $307 = ((($p$0)) + 8|0);
      HEAP32[$307>>2] = $p$0;
      break L199;
     }
    }
   } while(0);
   $308 = ((($T$0$lcssa)) + 8|0);
   $309 = HEAP32[$308>>2]|0;
   $310 = HEAP32[(1320)>>2]|0;
   $311 = ($309>>>0)>=($310>>>0);
   $not$ = ($T$0$lcssa>>>0)>=($310>>>0);
   $312 = $311 & $not$;
   if ($312) {
    $313 = ((($309)) + 12|0);
    HEAP32[$313>>2] = $p$0;
    HEAP32[$308>>2] = $p$0;
    $314 = ((($p$0)) + 8|0);
    HEAP32[$314>>2] = $309;
    $315 = ((($p$0)) + 12|0);
    HEAP32[$315>>2] = $T$0$lcssa;
    $316 = ((($p$0)) + 24|0);
    HEAP32[$316>>2] = 0;
    break;
   } else {
    _abort();
    // unreachable;
   }
  }
 } while(0);
 $317 = HEAP32[(1336)>>2]|0;
 $318 = (($317) + -1)|0;
 HEAP32[(1336)>>2] = $318;
 $319 = ($318|0)==(0);
 if ($319) {
  $sp$0$in$i = (1760);
 } else {
  return;
 }
 while(1) {
  $sp$0$i = HEAP32[$sp$0$in$i>>2]|0;
  $320 = ($sp$0$i|0)==(0|0);
  $321 = ((($sp$0$i)) + 8|0);
  if ($320) {
   break;
  } else {
   $sp$0$in$i = $321;
  }
 }
 HEAP32[(1336)>>2] = -1;
 return;
}
function _realloc($oldmem,$bytes) {
 $oldmem = $oldmem|0;
 $bytes = $bytes|0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $mem$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ($oldmem|0)==(0|0);
 if ($0) {
  $1 = (_malloc($bytes)|0);
  $mem$0 = $1;
  return ($mem$0|0);
 }
 $2 = ($bytes>>>0)>(4294967231);
 if ($2) {
  $3 = (___errno_location()|0);
  HEAP32[$3>>2] = 12;
  $mem$0 = 0;
  return ($mem$0|0);
 }
 $4 = ($bytes>>>0)<(11);
 $5 = (($bytes) + 11)|0;
 $6 = $5 & -8;
 $7 = $4 ? 16 : $6;
 $8 = ((($oldmem)) + -8|0);
 $9 = (_try_realloc_chunk($8,$7)|0);
 $10 = ($9|0)==(0|0);
 if (!($10)) {
  $11 = ((($9)) + 8|0);
  $mem$0 = $11;
  return ($mem$0|0);
 }
 $12 = (_malloc($bytes)|0);
 $13 = ($12|0)==(0|0);
 if ($13) {
  $mem$0 = 0;
  return ($mem$0|0);
 }
 $14 = ((($oldmem)) + -4|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = $15 & -8;
 $17 = $15 & 3;
 $18 = ($17|0)==(0);
 $19 = $18 ? 8 : 4;
 $20 = (($16) - ($19))|0;
 $21 = ($20>>>0)<($bytes>>>0);
 $22 = $21 ? $20 : $bytes;
 _memcpy(($12|0),($oldmem|0),($22|0))|0;
 _free($oldmem);
 $mem$0 = $12;
 return ($mem$0|0);
}
function _try_realloc_chunk($p,$nb) {
 $p = $p|0;
 $nb = $nb|0;
 var $$pre = 0, $$pre$phiZ2D = 0, $$sum = 0, $$sum11 = 0, $$sum12 = 0, $$sum13 = 0, $$sum14 = 0, $$sum15 = 0, $$sum16 = 0, $$sum17 = 0, $$sum19 = 0, $$sum2 = 0, $$sum20 = 0, $$sum22 = 0, $$sum23 = 0, $$sum2728 = 0, $$sum3 = 0, $$sum4 = 0, $$sum5 = 0, $$sum78 = 0;
 var $$sum910 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0;
 var $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0;
 var $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0;
 var $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0;
 var $17 = 0, $170 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $R$0 = 0, $R$0$lcssa = 0, $R$1 = 0, $RP$0 = 0, $RP$0$lcssa = 0, $cond = 0, $newp$0 = 0, $notlhs = 0;
 var $notrhs = 0, $or$cond$not = 0, $or$cond30 = 0, $storemerge = 0, $storemerge21 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = ((($p)) + 4|0);
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 & -8;
 $3 = (($p) + ($2)|0);
 $4 = HEAP32[(1320)>>2]|0;
 $5 = $1 & 3;
 $notlhs = ($p>>>0)>=($4>>>0);
 $notrhs = ($5|0)!=(1);
 $or$cond$not = $notrhs & $notlhs;
 $6 = ($p>>>0)<($3>>>0);
 $or$cond30 = $or$cond$not & $6;
 if (!($or$cond30)) {
  _abort();
  // unreachable;
 }
 $$sum2728 = $2 | 4;
 $7 = (($p) + ($$sum2728)|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = $8 & 1;
 $10 = ($9|0)==(0);
 if ($10) {
  _abort();
  // unreachable;
 }
 $11 = ($5|0)==(0);
 if ($11) {
  $12 = ($nb>>>0)<(256);
  if ($12) {
   $newp$0 = 0;
   return ($newp$0|0);
  }
  $13 = (($nb) + 4)|0;
  $14 = ($2>>>0)<($13>>>0);
  if (!($14)) {
   $15 = (($2) - ($nb))|0;
   $16 = HEAP32[(1784)>>2]|0;
   $17 = $16 << 1;
   $18 = ($15>>>0)>($17>>>0);
   if (!($18)) {
    $newp$0 = $p;
    return ($newp$0|0);
   }
  }
  $newp$0 = 0;
  return ($newp$0|0);
 }
 $19 = ($2>>>0)<($nb>>>0);
 if (!($19)) {
  $20 = (($2) - ($nb))|0;
  $21 = ($20>>>0)>(15);
  if (!($21)) {
   $newp$0 = $p;
   return ($newp$0|0);
  }
  $22 = (($p) + ($nb)|0);
  $23 = $1 & 1;
  $24 = $23 | $nb;
  $25 = $24 | 2;
  HEAP32[$0>>2] = $25;
  $$sum23 = (($nb) + 4)|0;
  $26 = (($p) + ($$sum23)|0);
  $27 = $20 | 3;
  HEAP32[$26>>2] = $27;
  $28 = HEAP32[$7>>2]|0;
  $29 = $28 | 1;
  HEAP32[$7>>2] = $29;
  _dispose_chunk($22,$20);
  $newp$0 = $p;
  return ($newp$0|0);
 }
 $30 = HEAP32[(1328)>>2]|0;
 $31 = ($3|0)==($30|0);
 if ($31) {
  $32 = HEAP32[(1316)>>2]|0;
  $33 = (($32) + ($2))|0;
  $34 = ($33>>>0)>($nb>>>0);
  if (!($34)) {
   $newp$0 = 0;
   return ($newp$0|0);
  }
  $35 = (($33) - ($nb))|0;
  $36 = (($p) + ($nb)|0);
  $37 = $1 & 1;
  $38 = $37 | $nb;
  $39 = $38 | 2;
  HEAP32[$0>>2] = $39;
  $$sum22 = (($nb) + 4)|0;
  $40 = (($p) + ($$sum22)|0);
  $41 = $35 | 1;
  HEAP32[$40>>2] = $41;
  HEAP32[(1328)>>2] = $36;
  HEAP32[(1316)>>2] = $35;
  $newp$0 = $p;
  return ($newp$0|0);
 }
 $42 = HEAP32[(1324)>>2]|0;
 $43 = ($3|0)==($42|0);
 if ($43) {
  $44 = HEAP32[(1312)>>2]|0;
  $45 = (($44) + ($2))|0;
  $46 = ($45>>>0)<($nb>>>0);
  if ($46) {
   $newp$0 = 0;
   return ($newp$0|0);
  }
  $47 = (($45) - ($nb))|0;
  $48 = ($47>>>0)>(15);
  if ($48) {
   $49 = (($p) + ($nb)|0);
   $50 = (($p) + ($45)|0);
   $51 = $1 & 1;
   $52 = $51 | $nb;
   $53 = $52 | 2;
   HEAP32[$0>>2] = $53;
   $$sum19 = (($nb) + 4)|0;
   $54 = (($p) + ($$sum19)|0);
   $55 = $47 | 1;
   HEAP32[$54>>2] = $55;
   HEAP32[$50>>2] = $47;
   $$sum20 = (($45) + 4)|0;
   $56 = (($p) + ($$sum20)|0);
   $57 = HEAP32[$56>>2]|0;
   $58 = $57 & -2;
   HEAP32[$56>>2] = $58;
   $storemerge = $49;$storemerge21 = $47;
  } else {
   $59 = $1 & 1;
   $60 = $59 | $45;
   $61 = $60 | 2;
   HEAP32[$0>>2] = $61;
   $$sum17 = (($45) + 4)|0;
   $62 = (($p) + ($$sum17)|0);
   $63 = HEAP32[$62>>2]|0;
   $64 = $63 | 1;
   HEAP32[$62>>2] = $64;
   $storemerge = 0;$storemerge21 = 0;
  }
  HEAP32[(1312)>>2] = $storemerge21;
  HEAP32[(1324)>>2] = $storemerge;
  $newp$0 = $p;
  return ($newp$0|0);
 }
 $65 = $8 & 2;
 $66 = ($65|0)==(0);
 if (!($66)) {
  $newp$0 = 0;
  return ($newp$0|0);
 }
 $67 = $8 & -8;
 $68 = (($67) + ($2))|0;
 $69 = ($68>>>0)<($nb>>>0);
 if ($69) {
  $newp$0 = 0;
  return ($newp$0|0);
 }
 $70 = (($68) - ($nb))|0;
 $71 = $8 >>> 3;
 $72 = ($8>>>0)<(256);
 do {
  if ($72) {
   $$sum15 = (($2) + 8)|0;
   $73 = (($p) + ($$sum15)|0);
   $74 = HEAP32[$73>>2]|0;
   $$sum16 = (($2) + 12)|0;
   $75 = (($p) + ($$sum16)|0);
   $76 = HEAP32[$75>>2]|0;
   $77 = $71 << 1;
   $78 = (1344 + ($77<<2)|0);
   $79 = ($74|0)==($78|0);
   if (!($79)) {
    $80 = ($74>>>0)<($4>>>0);
    if ($80) {
     _abort();
     // unreachable;
    }
    $81 = ((($74)) + 12|0);
    $82 = HEAP32[$81>>2]|0;
    $83 = ($82|0)==($3|0);
    if (!($83)) {
     _abort();
     // unreachable;
    }
   }
   $84 = ($76|0)==($74|0);
   if ($84) {
    $85 = 1 << $71;
    $86 = $85 ^ -1;
    $87 = HEAP32[1304>>2]|0;
    $88 = $87 & $86;
    HEAP32[1304>>2] = $88;
    break;
   }
   $89 = ($76|0)==($78|0);
   if ($89) {
    $$pre = ((($76)) + 8|0);
    $$pre$phiZ2D = $$pre;
   } else {
    $90 = ($76>>>0)<($4>>>0);
    if ($90) {
     _abort();
     // unreachable;
    }
    $91 = ((($76)) + 8|0);
    $92 = HEAP32[$91>>2]|0;
    $93 = ($92|0)==($3|0);
    if ($93) {
     $$pre$phiZ2D = $91;
    } else {
     _abort();
     // unreachable;
    }
   }
   $94 = ((($74)) + 12|0);
   HEAP32[$94>>2] = $76;
   HEAP32[$$pre$phiZ2D>>2] = $74;
  } else {
   $$sum = (($2) + 24)|0;
   $95 = (($p) + ($$sum)|0);
   $96 = HEAP32[$95>>2]|0;
   $$sum2 = (($2) + 12)|0;
   $97 = (($p) + ($$sum2)|0);
   $98 = HEAP32[$97>>2]|0;
   $99 = ($98|0)==($3|0);
   do {
    if ($99) {
     $$sum4 = (($2) + 20)|0;
     $109 = (($p) + ($$sum4)|0);
     $110 = HEAP32[$109>>2]|0;
     $111 = ($110|0)==(0|0);
     if ($111) {
      $$sum3 = (($2) + 16)|0;
      $112 = (($p) + ($$sum3)|0);
      $113 = HEAP32[$112>>2]|0;
      $114 = ($113|0)==(0|0);
      if ($114) {
       $R$1 = 0;
       break;
      } else {
       $R$0 = $113;$RP$0 = $112;
      }
     } else {
      $R$0 = $110;$RP$0 = $109;
     }
     while(1) {
      $115 = ((($R$0)) + 20|0);
      $116 = HEAP32[$115>>2]|0;
      $117 = ($116|0)==(0|0);
      if (!($117)) {
       $R$0 = $116;$RP$0 = $115;
       continue;
      }
      $118 = ((($R$0)) + 16|0);
      $119 = HEAP32[$118>>2]|0;
      $120 = ($119|0)==(0|0);
      if ($120) {
       $R$0$lcssa = $R$0;$RP$0$lcssa = $RP$0;
       break;
      } else {
       $R$0 = $119;$RP$0 = $118;
      }
     }
     $121 = ($RP$0$lcssa>>>0)<($4>>>0);
     if ($121) {
      _abort();
      // unreachable;
     } else {
      HEAP32[$RP$0$lcssa>>2] = 0;
      $R$1 = $R$0$lcssa;
      break;
     }
    } else {
     $$sum14 = (($2) + 8)|0;
     $100 = (($p) + ($$sum14)|0);
     $101 = HEAP32[$100>>2]|0;
     $102 = ($101>>>0)<($4>>>0);
     if ($102) {
      _abort();
      // unreachable;
     }
     $103 = ((($101)) + 12|0);
     $104 = HEAP32[$103>>2]|0;
     $105 = ($104|0)==($3|0);
     if (!($105)) {
      _abort();
      // unreachable;
     }
     $106 = ((($98)) + 8|0);
     $107 = HEAP32[$106>>2]|0;
     $108 = ($107|0)==($3|0);
     if ($108) {
      HEAP32[$103>>2] = $98;
      HEAP32[$106>>2] = $101;
      $R$1 = $98;
      break;
     } else {
      _abort();
      // unreachable;
     }
    }
   } while(0);
   $122 = ($96|0)==(0|0);
   if (!($122)) {
    $$sum11 = (($2) + 28)|0;
    $123 = (($p) + ($$sum11)|0);
    $124 = HEAP32[$123>>2]|0;
    $125 = (1608 + ($124<<2)|0);
    $126 = HEAP32[$125>>2]|0;
    $127 = ($3|0)==($126|0);
    if ($127) {
     HEAP32[$125>>2] = $R$1;
     $cond = ($R$1|0)==(0|0);
     if ($cond) {
      $128 = 1 << $124;
      $129 = $128 ^ -1;
      $130 = HEAP32[(1308)>>2]|0;
      $131 = $130 & $129;
      HEAP32[(1308)>>2] = $131;
      break;
     }
    } else {
     $132 = HEAP32[(1320)>>2]|0;
     $133 = ($96>>>0)<($132>>>0);
     if ($133) {
      _abort();
      // unreachable;
     }
     $134 = ((($96)) + 16|0);
     $135 = HEAP32[$134>>2]|0;
     $136 = ($135|0)==($3|0);
     if ($136) {
      HEAP32[$134>>2] = $R$1;
     } else {
      $137 = ((($96)) + 20|0);
      HEAP32[$137>>2] = $R$1;
     }
     $138 = ($R$1|0)==(0|0);
     if ($138) {
      break;
     }
    }
    $139 = HEAP32[(1320)>>2]|0;
    $140 = ($R$1>>>0)<($139>>>0);
    if ($140) {
     _abort();
     // unreachable;
    }
    $141 = ((($R$1)) + 24|0);
    HEAP32[$141>>2] = $96;
    $$sum12 = (($2) + 16)|0;
    $142 = (($p) + ($$sum12)|0);
    $143 = HEAP32[$142>>2]|0;
    $144 = ($143|0)==(0|0);
    do {
     if (!($144)) {
      $145 = ($143>>>0)<($139>>>0);
      if ($145) {
       _abort();
       // unreachable;
      } else {
       $146 = ((($R$1)) + 16|0);
       HEAP32[$146>>2] = $143;
       $147 = ((($143)) + 24|0);
       HEAP32[$147>>2] = $R$1;
       break;
      }
     }
    } while(0);
    $$sum13 = (($2) + 20)|0;
    $148 = (($p) + ($$sum13)|0);
    $149 = HEAP32[$148>>2]|0;
    $150 = ($149|0)==(0|0);
    if (!($150)) {
     $151 = HEAP32[(1320)>>2]|0;
     $152 = ($149>>>0)<($151>>>0);
     if ($152) {
      _abort();
      // unreachable;
     } else {
      $153 = ((($R$1)) + 20|0);
      HEAP32[$153>>2] = $149;
      $154 = ((($149)) + 24|0);
      HEAP32[$154>>2] = $R$1;
      break;
     }
    }
   }
  }
 } while(0);
 $155 = ($70>>>0)<(16);
 if ($155) {
  $156 = $1 & 1;
  $157 = $68 | $156;
  $158 = $157 | 2;
  HEAP32[$0>>2] = $158;
  $$sum910 = $68 | 4;
  $159 = (($p) + ($$sum910)|0);
  $160 = HEAP32[$159>>2]|0;
  $161 = $160 | 1;
  HEAP32[$159>>2] = $161;
  $newp$0 = $p;
  return ($newp$0|0);
 } else {
  $162 = (($p) + ($nb)|0);
  $163 = $1 & 1;
  $164 = $163 | $nb;
  $165 = $164 | 2;
  HEAP32[$0>>2] = $165;
  $$sum5 = (($nb) + 4)|0;
  $166 = (($p) + ($$sum5)|0);
  $167 = $70 | 3;
  HEAP32[$166>>2] = $167;
  $$sum78 = $68 | 4;
  $168 = (($p) + ($$sum78)|0);
  $169 = HEAP32[$168>>2]|0;
  $170 = $169 | 1;
  HEAP32[$168>>2] = $170;
  _dispose_chunk($162,$70);
  $newp$0 = $p;
  return ($newp$0|0);
 }
 return (0)|0;
}
function _dispose_chunk($p,$psize) {
 $p = $p|0;
 $psize = $psize|0;
 var $$0 = 0, $$02 = 0, $$1 = 0, $$lcssa = 0, $$pre = 0, $$pre$phi50Z2D = 0, $$pre$phi52Z2D = 0, $$pre$phiZ2D = 0, $$pre48 = 0, $$pre49 = 0, $$pre51 = 0, $$sum = 0, $$sum1 = 0, $$sum10 = 0, $$sum11 = 0, $$sum12 = 0, $$sum13 = 0, $$sum14 = 0, $$sum16 = 0, $$sum17 = 0;
 var $$sum18 = 0, $$sum19 = 0, $$sum2 = 0, $$sum20 = 0, $$sum21 = 0, $$sum22 = 0, $$sum23 = 0, $$sum24 = 0, $$sum25 = 0, $$sum3 = 0, $$sum4 = 0, $$sum5 = 0, $$sum7 = 0, $$sum8 = 0, $$sum9 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0;
 var $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0;
 var $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0;
 var $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0;
 var $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0;
 var $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0;
 var $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0;
 var $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0;
 var $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0;
 var $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0;
 var $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0;
 var $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0;
 var $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $F16$0 = 0, $I19$0 = 0, $K20$043 = 0, $R$0 = 0, $R$0$lcssa = 0, $R$1 = 0, $R7$0 = 0, $R7$0$lcssa = 0, $R7$1 = 0, $RP$0 = 0, $RP$0$lcssa = 0, $RP9$0 = 0, $RP9$0$lcssa = 0, $T$0$lcssa = 0, $T$042 = 0, $T$042$lcssa = 0, $cond = 0;
 var $cond39 = 0, $not$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (($p) + ($psize)|0);
 $1 = ((($p)) + 4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = $2 & 1;
 $4 = ($3|0)==(0);
 do {
  if ($4) {
   $5 = HEAP32[$p>>2]|0;
   $6 = $2 & 3;
   $7 = ($6|0)==(0);
   if ($7) {
    return;
   }
   $8 = (0 - ($5))|0;
   $9 = (($p) + ($8)|0);
   $10 = (($5) + ($psize))|0;
   $11 = HEAP32[(1320)>>2]|0;
   $12 = ($9>>>0)<($11>>>0);
   if ($12) {
    _abort();
    // unreachable;
   }
   $13 = HEAP32[(1324)>>2]|0;
   $14 = ($9|0)==($13|0);
   if ($14) {
    $$sum = (($psize) + 4)|0;
    $99 = (($p) + ($$sum)|0);
    $100 = HEAP32[$99>>2]|0;
    $101 = $100 & 3;
    $102 = ($101|0)==(3);
    if (!($102)) {
     $$0 = $9;$$02 = $10;
     break;
    }
    HEAP32[(1312)>>2] = $10;
    $103 = $100 & -2;
    HEAP32[$99>>2] = $103;
    $104 = $10 | 1;
    $$sum14 = (4 - ($5))|0;
    $105 = (($p) + ($$sum14)|0);
    HEAP32[$105>>2] = $104;
    HEAP32[$0>>2] = $10;
    return;
   }
   $15 = $5 >>> 3;
   $16 = ($5>>>0)<(256);
   if ($16) {
    $$sum24 = (8 - ($5))|0;
    $17 = (($p) + ($$sum24)|0);
    $18 = HEAP32[$17>>2]|0;
    $$sum25 = (12 - ($5))|0;
    $19 = (($p) + ($$sum25)|0);
    $20 = HEAP32[$19>>2]|0;
    $21 = $15 << 1;
    $22 = (1344 + ($21<<2)|0);
    $23 = ($18|0)==($22|0);
    if (!($23)) {
     $24 = ($18>>>0)<($11>>>0);
     if ($24) {
      _abort();
      // unreachable;
     }
     $25 = ((($18)) + 12|0);
     $26 = HEAP32[$25>>2]|0;
     $27 = ($26|0)==($9|0);
     if (!($27)) {
      _abort();
      // unreachable;
     }
    }
    $28 = ($20|0)==($18|0);
    if ($28) {
     $29 = 1 << $15;
     $30 = $29 ^ -1;
     $31 = HEAP32[1304>>2]|0;
     $32 = $31 & $30;
     HEAP32[1304>>2] = $32;
     $$0 = $9;$$02 = $10;
     break;
    }
    $33 = ($20|0)==($22|0);
    if ($33) {
     $$pre51 = ((($20)) + 8|0);
     $$pre$phi52Z2D = $$pre51;
    } else {
     $34 = ($20>>>0)<($11>>>0);
     if ($34) {
      _abort();
      // unreachable;
     }
     $35 = ((($20)) + 8|0);
     $36 = HEAP32[$35>>2]|0;
     $37 = ($36|0)==($9|0);
     if ($37) {
      $$pre$phi52Z2D = $35;
     } else {
      _abort();
      // unreachable;
     }
    }
    $38 = ((($18)) + 12|0);
    HEAP32[$38>>2] = $20;
    HEAP32[$$pre$phi52Z2D>>2] = $18;
    $$0 = $9;$$02 = $10;
    break;
   }
   $$sum16 = (24 - ($5))|0;
   $39 = (($p) + ($$sum16)|0);
   $40 = HEAP32[$39>>2]|0;
   $$sum17 = (12 - ($5))|0;
   $41 = (($p) + ($$sum17)|0);
   $42 = HEAP32[$41>>2]|0;
   $43 = ($42|0)==($9|0);
   do {
    if ($43) {
     $$sum18 = (16 - ($5))|0;
     $$sum19 = (($$sum18) + 4)|0;
     $53 = (($p) + ($$sum19)|0);
     $54 = HEAP32[$53>>2]|0;
     $55 = ($54|0)==(0|0);
     if ($55) {
      $56 = (($p) + ($$sum18)|0);
      $57 = HEAP32[$56>>2]|0;
      $58 = ($57|0)==(0|0);
      if ($58) {
       $R$1 = 0;
       break;
      } else {
       $R$0 = $57;$RP$0 = $56;
      }
     } else {
      $R$0 = $54;$RP$0 = $53;
     }
     while(1) {
      $59 = ((($R$0)) + 20|0);
      $60 = HEAP32[$59>>2]|0;
      $61 = ($60|0)==(0|0);
      if (!($61)) {
       $R$0 = $60;$RP$0 = $59;
       continue;
      }
      $62 = ((($R$0)) + 16|0);
      $63 = HEAP32[$62>>2]|0;
      $64 = ($63|0)==(0|0);
      if ($64) {
       $R$0$lcssa = $R$0;$RP$0$lcssa = $RP$0;
       break;
      } else {
       $R$0 = $63;$RP$0 = $62;
      }
     }
     $65 = ($RP$0$lcssa>>>0)<($11>>>0);
     if ($65) {
      _abort();
      // unreachable;
     } else {
      HEAP32[$RP$0$lcssa>>2] = 0;
      $R$1 = $R$0$lcssa;
      break;
     }
    } else {
     $$sum23 = (8 - ($5))|0;
     $44 = (($p) + ($$sum23)|0);
     $45 = HEAP32[$44>>2]|0;
     $46 = ($45>>>0)<($11>>>0);
     if ($46) {
      _abort();
      // unreachable;
     }
     $47 = ((($45)) + 12|0);
     $48 = HEAP32[$47>>2]|0;
     $49 = ($48|0)==($9|0);
     if (!($49)) {
      _abort();
      // unreachable;
     }
     $50 = ((($42)) + 8|0);
     $51 = HEAP32[$50>>2]|0;
     $52 = ($51|0)==($9|0);
     if ($52) {
      HEAP32[$47>>2] = $42;
      HEAP32[$50>>2] = $45;
      $R$1 = $42;
      break;
     } else {
      _abort();
      // unreachable;
     }
    }
   } while(0);
   $66 = ($40|0)==(0|0);
   if ($66) {
    $$0 = $9;$$02 = $10;
   } else {
    $$sum20 = (28 - ($5))|0;
    $67 = (($p) + ($$sum20)|0);
    $68 = HEAP32[$67>>2]|0;
    $69 = (1608 + ($68<<2)|0);
    $70 = HEAP32[$69>>2]|0;
    $71 = ($9|0)==($70|0);
    if ($71) {
     HEAP32[$69>>2] = $R$1;
     $cond = ($R$1|0)==(0|0);
     if ($cond) {
      $72 = 1 << $68;
      $73 = $72 ^ -1;
      $74 = HEAP32[(1308)>>2]|0;
      $75 = $74 & $73;
      HEAP32[(1308)>>2] = $75;
      $$0 = $9;$$02 = $10;
      break;
     }
    } else {
     $76 = HEAP32[(1320)>>2]|0;
     $77 = ($40>>>0)<($76>>>0);
     if ($77) {
      _abort();
      // unreachable;
     }
     $78 = ((($40)) + 16|0);
     $79 = HEAP32[$78>>2]|0;
     $80 = ($79|0)==($9|0);
     if ($80) {
      HEAP32[$78>>2] = $R$1;
     } else {
      $81 = ((($40)) + 20|0);
      HEAP32[$81>>2] = $R$1;
     }
     $82 = ($R$1|0)==(0|0);
     if ($82) {
      $$0 = $9;$$02 = $10;
      break;
     }
    }
    $83 = HEAP32[(1320)>>2]|0;
    $84 = ($R$1>>>0)<($83>>>0);
    if ($84) {
     _abort();
     // unreachable;
    }
    $85 = ((($R$1)) + 24|0);
    HEAP32[$85>>2] = $40;
    $$sum21 = (16 - ($5))|0;
    $86 = (($p) + ($$sum21)|0);
    $87 = HEAP32[$86>>2]|0;
    $88 = ($87|0)==(0|0);
    do {
     if (!($88)) {
      $89 = ($87>>>0)<($83>>>0);
      if ($89) {
       _abort();
       // unreachable;
      } else {
       $90 = ((($R$1)) + 16|0);
       HEAP32[$90>>2] = $87;
       $91 = ((($87)) + 24|0);
       HEAP32[$91>>2] = $R$1;
       break;
      }
     }
    } while(0);
    $$sum22 = (($$sum21) + 4)|0;
    $92 = (($p) + ($$sum22)|0);
    $93 = HEAP32[$92>>2]|0;
    $94 = ($93|0)==(0|0);
    if ($94) {
     $$0 = $9;$$02 = $10;
    } else {
     $95 = HEAP32[(1320)>>2]|0;
     $96 = ($93>>>0)<($95>>>0);
     if ($96) {
      _abort();
      // unreachable;
     } else {
      $97 = ((($R$1)) + 20|0);
      HEAP32[$97>>2] = $93;
      $98 = ((($93)) + 24|0);
      HEAP32[$98>>2] = $R$1;
      $$0 = $9;$$02 = $10;
      break;
     }
    }
   }
  } else {
   $$0 = $p;$$02 = $psize;
  }
 } while(0);
 $106 = HEAP32[(1320)>>2]|0;
 $107 = ($0>>>0)<($106>>>0);
 if ($107) {
  _abort();
  // unreachable;
 }
 $$sum1 = (($psize) + 4)|0;
 $108 = (($p) + ($$sum1)|0);
 $109 = HEAP32[$108>>2]|0;
 $110 = $109 & 2;
 $111 = ($110|0)==(0);
 if ($111) {
  $112 = HEAP32[(1328)>>2]|0;
  $113 = ($0|0)==($112|0);
  if ($113) {
   $114 = HEAP32[(1316)>>2]|0;
   $115 = (($114) + ($$02))|0;
   HEAP32[(1316)>>2] = $115;
   HEAP32[(1328)>>2] = $$0;
   $116 = $115 | 1;
   $117 = ((($$0)) + 4|0);
   HEAP32[$117>>2] = $116;
   $118 = HEAP32[(1324)>>2]|0;
   $119 = ($$0|0)==($118|0);
   if (!($119)) {
    return;
   }
   HEAP32[(1324)>>2] = 0;
   HEAP32[(1312)>>2] = 0;
   return;
  }
  $120 = HEAP32[(1324)>>2]|0;
  $121 = ($0|0)==($120|0);
  if ($121) {
   $122 = HEAP32[(1312)>>2]|0;
   $123 = (($122) + ($$02))|0;
   HEAP32[(1312)>>2] = $123;
   HEAP32[(1324)>>2] = $$0;
   $124 = $123 | 1;
   $125 = ((($$0)) + 4|0);
   HEAP32[$125>>2] = $124;
   $126 = (($$0) + ($123)|0);
   HEAP32[$126>>2] = $123;
   return;
  }
  $127 = $109 & -8;
  $128 = (($127) + ($$02))|0;
  $129 = $109 >>> 3;
  $130 = ($109>>>0)<(256);
  do {
   if ($130) {
    $$sum12 = (($psize) + 8)|0;
    $131 = (($p) + ($$sum12)|0);
    $132 = HEAP32[$131>>2]|0;
    $$sum13 = (($psize) + 12)|0;
    $133 = (($p) + ($$sum13)|0);
    $134 = HEAP32[$133>>2]|0;
    $135 = $129 << 1;
    $136 = (1344 + ($135<<2)|0);
    $137 = ($132|0)==($136|0);
    if (!($137)) {
     $138 = ($132>>>0)<($106>>>0);
     if ($138) {
      _abort();
      // unreachable;
     }
     $139 = ((($132)) + 12|0);
     $140 = HEAP32[$139>>2]|0;
     $141 = ($140|0)==($0|0);
     if (!($141)) {
      _abort();
      // unreachable;
     }
    }
    $142 = ($134|0)==($132|0);
    if ($142) {
     $143 = 1 << $129;
     $144 = $143 ^ -1;
     $145 = HEAP32[1304>>2]|0;
     $146 = $145 & $144;
     HEAP32[1304>>2] = $146;
     break;
    }
    $147 = ($134|0)==($136|0);
    if ($147) {
     $$pre49 = ((($134)) + 8|0);
     $$pre$phi50Z2D = $$pre49;
    } else {
     $148 = ($134>>>0)<($106>>>0);
     if ($148) {
      _abort();
      // unreachable;
     }
     $149 = ((($134)) + 8|0);
     $150 = HEAP32[$149>>2]|0;
     $151 = ($150|0)==($0|0);
     if ($151) {
      $$pre$phi50Z2D = $149;
     } else {
      _abort();
      // unreachable;
     }
    }
    $152 = ((($132)) + 12|0);
    HEAP32[$152>>2] = $134;
    HEAP32[$$pre$phi50Z2D>>2] = $132;
   } else {
    $$sum2 = (($psize) + 24)|0;
    $153 = (($p) + ($$sum2)|0);
    $154 = HEAP32[$153>>2]|0;
    $$sum3 = (($psize) + 12)|0;
    $155 = (($p) + ($$sum3)|0);
    $156 = HEAP32[$155>>2]|0;
    $157 = ($156|0)==($0|0);
    do {
     if ($157) {
      $$sum5 = (($psize) + 20)|0;
      $167 = (($p) + ($$sum5)|0);
      $168 = HEAP32[$167>>2]|0;
      $169 = ($168|0)==(0|0);
      if ($169) {
       $$sum4 = (($psize) + 16)|0;
       $170 = (($p) + ($$sum4)|0);
       $171 = HEAP32[$170>>2]|0;
       $172 = ($171|0)==(0|0);
       if ($172) {
        $R7$1 = 0;
        break;
       } else {
        $R7$0 = $171;$RP9$0 = $170;
       }
      } else {
       $R7$0 = $168;$RP9$0 = $167;
      }
      while(1) {
       $173 = ((($R7$0)) + 20|0);
       $174 = HEAP32[$173>>2]|0;
       $175 = ($174|0)==(0|0);
       if (!($175)) {
        $R7$0 = $174;$RP9$0 = $173;
        continue;
       }
       $176 = ((($R7$0)) + 16|0);
       $177 = HEAP32[$176>>2]|0;
       $178 = ($177|0)==(0|0);
       if ($178) {
        $R7$0$lcssa = $R7$0;$RP9$0$lcssa = $RP9$0;
        break;
       } else {
        $R7$0 = $177;$RP9$0 = $176;
       }
      }
      $179 = ($RP9$0$lcssa>>>0)<($106>>>0);
      if ($179) {
       _abort();
       // unreachable;
      } else {
       HEAP32[$RP9$0$lcssa>>2] = 0;
       $R7$1 = $R7$0$lcssa;
       break;
      }
     } else {
      $$sum11 = (($psize) + 8)|0;
      $158 = (($p) + ($$sum11)|0);
      $159 = HEAP32[$158>>2]|0;
      $160 = ($159>>>0)<($106>>>0);
      if ($160) {
       _abort();
       // unreachable;
      }
      $161 = ((($159)) + 12|0);
      $162 = HEAP32[$161>>2]|0;
      $163 = ($162|0)==($0|0);
      if (!($163)) {
       _abort();
       // unreachable;
      }
      $164 = ((($156)) + 8|0);
      $165 = HEAP32[$164>>2]|0;
      $166 = ($165|0)==($0|0);
      if ($166) {
       HEAP32[$161>>2] = $156;
       HEAP32[$164>>2] = $159;
       $R7$1 = $156;
       break;
      } else {
       _abort();
       // unreachable;
      }
     }
    } while(0);
    $180 = ($154|0)==(0|0);
    if (!($180)) {
     $$sum8 = (($psize) + 28)|0;
     $181 = (($p) + ($$sum8)|0);
     $182 = HEAP32[$181>>2]|0;
     $183 = (1608 + ($182<<2)|0);
     $184 = HEAP32[$183>>2]|0;
     $185 = ($0|0)==($184|0);
     if ($185) {
      HEAP32[$183>>2] = $R7$1;
      $cond39 = ($R7$1|0)==(0|0);
      if ($cond39) {
       $186 = 1 << $182;
       $187 = $186 ^ -1;
       $188 = HEAP32[(1308)>>2]|0;
       $189 = $188 & $187;
       HEAP32[(1308)>>2] = $189;
       break;
      }
     } else {
      $190 = HEAP32[(1320)>>2]|0;
      $191 = ($154>>>0)<($190>>>0);
      if ($191) {
       _abort();
       // unreachable;
      }
      $192 = ((($154)) + 16|0);
      $193 = HEAP32[$192>>2]|0;
      $194 = ($193|0)==($0|0);
      if ($194) {
       HEAP32[$192>>2] = $R7$1;
      } else {
       $195 = ((($154)) + 20|0);
       HEAP32[$195>>2] = $R7$1;
      }
      $196 = ($R7$1|0)==(0|0);
      if ($196) {
       break;
      }
     }
     $197 = HEAP32[(1320)>>2]|0;
     $198 = ($R7$1>>>0)<($197>>>0);
     if ($198) {
      _abort();
      // unreachable;
     }
     $199 = ((($R7$1)) + 24|0);
     HEAP32[$199>>2] = $154;
     $$sum9 = (($psize) + 16)|0;
     $200 = (($p) + ($$sum9)|0);
     $201 = HEAP32[$200>>2]|0;
     $202 = ($201|0)==(0|0);
     do {
      if (!($202)) {
       $203 = ($201>>>0)<($197>>>0);
       if ($203) {
        _abort();
        // unreachable;
       } else {
        $204 = ((($R7$1)) + 16|0);
        HEAP32[$204>>2] = $201;
        $205 = ((($201)) + 24|0);
        HEAP32[$205>>2] = $R7$1;
        break;
       }
      }
     } while(0);
     $$sum10 = (($psize) + 20)|0;
     $206 = (($p) + ($$sum10)|0);
     $207 = HEAP32[$206>>2]|0;
     $208 = ($207|0)==(0|0);
     if (!($208)) {
      $209 = HEAP32[(1320)>>2]|0;
      $210 = ($207>>>0)<($209>>>0);
      if ($210) {
       _abort();
       // unreachable;
      } else {
       $211 = ((($R7$1)) + 20|0);
       HEAP32[$211>>2] = $207;
       $212 = ((($207)) + 24|0);
       HEAP32[$212>>2] = $R7$1;
       break;
      }
     }
    }
   }
  } while(0);
  $213 = $128 | 1;
  $214 = ((($$0)) + 4|0);
  HEAP32[$214>>2] = $213;
  $215 = (($$0) + ($128)|0);
  HEAP32[$215>>2] = $128;
  $216 = HEAP32[(1324)>>2]|0;
  $217 = ($$0|0)==($216|0);
  if ($217) {
   HEAP32[(1312)>>2] = $128;
   return;
  } else {
   $$1 = $128;
  }
 } else {
  $218 = $109 & -2;
  HEAP32[$108>>2] = $218;
  $219 = $$02 | 1;
  $220 = ((($$0)) + 4|0);
  HEAP32[$220>>2] = $219;
  $221 = (($$0) + ($$02)|0);
  HEAP32[$221>>2] = $$02;
  $$1 = $$02;
 }
 $222 = $$1 >>> 3;
 $223 = ($$1>>>0)<(256);
 if ($223) {
  $224 = $222 << 1;
  $225 = (1344 + ($224<<2)|0);
  $226 = HEAP32[1304>>2]|0;
  $227 = 1 << $222;
  $228 = $226 & $227;
  $229 = ($228|0)==(0);
  if ($229) {
   $230 = $226 | $227;
   HEAP32[1304>>2] = $230;
   $$pre = (($224) + 2)|0;
   $$pre48 = (1344 + ($$pre<<2)|0);
   $$pre$phiZ2D = $$pre48;$F16$0 = $225;
  } else {
   $$sum7 = (($224) + 2)|0;
   $231 = (1344 + ($$sum7<<2)|0);
   $232 = HEAP32[$231>>2]|0;
   $233 = HEAP32[(1320)>>2]|0;
   $234 = ($232>>>0)<($233>>>0);
   if ($234) {
    _abort();
    // unreachable;
   } else {
    $$pre$phiZ2D = $231;$F16$0 = $232;
   }
  }
  HEAP32[$$pre$phiZ2D>>2] = $$0;
  $235 = ((($F16$0)) + 12|0);
  HEAP32[$235>>2] = $$0;
  $236 = ((($$0)) + 8|0);
  HEAP32[$236>>2] = $F16$0;
  $237 = ((($$0)) + 12|0);
  HEAP32[$237>>2] = $225;
  return;
 }
 $238 = $$1 >>> 8;
 $239 = ($238|0)==(0);
 if ($239) {
  $I19$0 = 0;
 } else {
  $240 = ($$1>>>0)>(16777215);
  if ($240) {
   $I19$0 = 31;
  } else {
   $241 = (($238) + 1048320)|0;
   $242 = $241 >>> 16;
   $243 = $242 & 8;
   $244 = $238 << $243;
   $245 = (($244) + 520192)|0;
   $246 = $245 >>> 16;
   $247 = $246 & 4;
   $248 = $247 | $243;
   $249 = $244 << $247;
   $250 = (($249) + 245760)|0;
   $251 = $250 >>> 16;
   $252 = $251 & 2;
   $253 = $248 | $252;
   $254 = (14 - ($253))|0;
   $255 = $249 << $252;
   $256 = $255 >>> 15;
   $257 = (($254) + ($256))|0;
   $258 = $257 << 1;
   $259 = (($257) + 7)|0;
   $260 = $$1 >>> $259;
   $261 = $260 & 1;
   $262 = $261 | $258;
   $I19$0 = $262;
  }
 }
 $263 = (1608 + ($I19$0<<2)|0);
 $264 = ((($$0)) + 28|0);
 HEAP32[$264>>2] = $I19$0;
 $265 = ((($$0)) + 16|0);
 $266 = ((($$0)) + 20|0);
 HEAP32[$266>>2] = 0;
 HEAP32[$265>>2] = 0;
 $267 = HEAP32[(1308)>>2]|0;
 $268 = 1 << $I19$0;
 $269 = $267 & $268;
 $270 = ($269|0)==(0);
 if ($270) {
  $271 = $267 | $268;
  HEAP32[(1308)>>2] = $271;
  HEAP32[$263>>2] = $$0;
  $272 = ((($$0)) + 24|0);
  HEAP32[$272>>2] = $263;
  $273 = ((($$0)) + 12|0);
  HEAP32[$273>>2] = $$0;
  $274 = ((($$0)) + 8|0);
  HEAP32[$274>>2] = $$0;
  return;
 }
 $275 = HEAP32[$263>>2]|0;
 $276 = ((($275)) + 4|0);
 $277 = HEAP32[$276>>2]|0;
 $278 = $277 & -8;
 $279 = ($278|0)==($$1|0);
 L191: do {
  if ($279) {
   $T$0$lcssa = $275;
  } else {
   $280 = ($I19$0|0)==(31);
   $281 = $I19$0 >>> 1;
   $282 = (25 - ($281))|0;
   $283 = $280 ? 0 : $282;
   $284 = $$1 << $283;
   $K20$043 = $284;$T$042 = $275;
   while(1) {
    $291 = $K20$043 >>> 31;
    $292 = (((($T$042)) + 16|0) + ($291<<2)|0);
    $287 = HEAP32[$292>>2]|0;
    $293 = ($287|0)==(0|0);
    if ($293) {
     $$lcssa = $292;$T$042$lcssa = $T$042;
     break;
    }
    $285 = $K20$043 << 1;
    $286 = ((($287)) + 4|0);
    $288 = HEAP32[$286>>2]|0;
    $289 = $288 & -8;
    $290 = ($289|0)==($$1|0);
    if ($290) {
     $T$0$lcssa = $287;
     break L191;
    } else {
     $K20$043 = $285;$T$042 = $287;
    }
   }
   $294 = HEAP32[(1320)>>2]|0;
   $295 = ($$lcssa>>>0)<($294>>>0);
   if ($295) {
    _abort();
    // unreachable;
   }
   HEAP32[$$lcssa>>2] = $$0;
   $296 = ((($$0)) + 24|0);
   HEAP32[$296>>2] = $T$042$lcssa;
   $297 = ((($$0)) + 12|0);
   HEAP32[$297>>2] = $$0;
   $298 = ((($$0)) + 8|0);
   HEAP32[$298>>2] = $$0;
   return;
  }
 } while(0);
 $299 = ((($T$0$lcssa)) + 8|0);
 $300 = HEAP32[$299>>2]|0;
 $301 = HEAP32[(1320)>>2]|0;
 $302 = ($300>>>0)>=($301>>>0);
 $not$ = ($T$0$lcssa>>>0)>=($301>>>0);
 $303 = $302 & $not$;
 if (!($303)) {
  _abort();
  // unreachable;
 }
 $304 = ((($300)) + 12|0);
 HEAP32[$304>>2] = $$0;
 HEAP32[$299>>2] = $$0;
 $305 = ((($$0)) + 8|0);
 HEAP32[$305>>2] = $300;
 $306 = ((($$0)) + 12|0);
 HEAP32[$306>>2] = $T$0$lcssa;
 $307 = ((($$0)) + 24|0);
 HEAP32[$307>>2] = 0;
 return;
}
function runPostSets() {
}
function _i64Subtract(a, b, c, d) {
    a = a|0; b = b|0; c = c|0; d = d|0;
    var l = 0, h = 0;
    l = (a - c)>>>0;
    h = (b - d)>>>0;
    h = (b - d - (((c>>>0) > (a>>>0))|0))>>>0; // Borrow one from high word to low word on underflow.
    return ((tempRet0 = h,l|0)|0);
}
function _memset(ptr, value, num) {
    ptr = ptr|0; value = value|0; num = num|0;
    var stop = 0, value4 = 0, stop4 = 0, unaligned = 0;
    stop = (ptr + num)|0;
    if ((num|0) >= 20) {
      // This is unaligned, but quite large, so work hard to get to aligned settings
      value = value & 0xff;
      unaligned = ptr & 3;
      value4 = value | (value << 8) | (value << 16) | (value << 24);
      stop4 = stop & ~3;
      if (unaligned) {
        unaligned = (ptr + 4 - unaligned)|0;
        while ((ptr|0) < (unaligned|0)) { // no need to check for stop, since we have large num
          HEAP8[((ptr)>>0)]=value;
          ptr = (ptr+1)|0;
        }
      }
      while ((ptr|0) < (stop4|0)) {
        HEAP32[((ptr)>>2)]=value4;
        ptr = (ptr+4)|0;
      }
    }
    while ((ptr|0) < (stop|0)) {
      HEAP8[((ptr)>>0)]=value;
      ptr = (ptr+1)|0;
    }
    return (ptr-num)|0;
}
function _i64Add(a, b, c, d) {
    /*
      x = a + b*2^32
      y = c + d*2^32
      result = l + h*2^32
    */
    a = a|0; b = b|0; c = c|0; d = d|0;
    var l = 0, h = 0;
    l = (a + c)>>>0;
    h = (b + d + (((l>>>0) < (a>>>0))|0))>>>0; // Add carry from low word to high word on overflow.
    return ((tempRet0 = h,l|0)|0);
}
function _saveSetjmp(env, label, table, size) {
    // Not particularly fast: slow table lookup of setjmpId to label. But setjmp
    // prevents relooping anyhow, so slowness is to be expected. And typical case
    // is 1 setjmp per invocation, or less.
    env = env|0;
    label = label|0;
    table = table|0;
    size = size|0;
    var i = 0;
    setjmpId = (setjmpId+1)|0;
    HEAP32[((env)>>2)]=setjmpId;
    while ((i|0) < (size|0)) {
      if (((HEAP32[(((table)+((i<<3)))>>2)])|0) == 0) {
        HEAP32[(((table)+((i<<3)))>>2)]=setjmpId;
        HEAP32[(((table)+((i<<3)+4))>>2)]=label;
        // prepare next slot
        HEAP32[(((table)+((i<<3)+8))>>2)]=0;
        tempRet0 = size;
        return table | 0;
      }
      i = i+1|0;
    }
    // grow the table
    size = (size*2)|0;
    table = _realloc(table|0, 8*(size+1|0)|0) | 0;
    table = _saveSetjmp(env|0, label|0, table|0, size|0) | 0;
    tempRet0 = size;
    return table | 0;
}
function _bitshift64Lshr(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = high >>> bits;
      return (low >>> bits) | ((high&ander) << (32 - bits));
    }
    tempRet0 = 0;
    return (high >>> (bits - 32))|0;
}
function _testSetjmp(id, table, size) {
    id = id|0;
    table = table|0;
    size = size|0;
    var i = 0, curr = 0;
    while ((i|0) < (size|0)) {
      curr = ((HEAP32[(((table)+((i<<3)))>>2)])|0);
      if ((curr|0) == 0) break;
      if ((curr|0) == (id|0)) {
        return ((HEAP32[(((table)+((i<<3)+4))>>2)])|0);
      }
      i = i+1|0;
    }
    return 0;
}
function _memcpy(dest, src, num) {
    dest = dest|0; src = src|0; num = num|0;
    var ret = 0;
    if ((num|0) >= 4096) return _emscripten_memcpy_big(dest|0, src|0, num|0)|0;
    ret = dest|0;
    if ((dest&3) == (src&3)) {
      while (dest & 3) {
        if ((num|0) == 0) return ret|0;
        HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
        dest = (dest+1)|0;
        src = (src+1)|0;
        num = (num-1)|0;
      }
      while ((num|0) >= 4) {
        HEAP32[((dest)>>2)]=((HEAP32[((src)>>2)])|0);
        dest = (dest+4)|0;
        src = (src+4)|0;
        num = (num-4)|0;
      }
    }
    while ((num|0) > 0) {
      HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
      dest = (dest+1)|0;
      src = (src+1)|0;
      num = (num-1)|0;
    }
    return ret|0;
}
function _bitshift64Shl(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = (high << bits) | ((low&(ander << (32 - bits))) >>> (32 - bits));
      return low << bits;
    }
    tempRet0 = low << (bits - 32);
    return 0;
}
function _memmove(dest, src, num) {
    dest = dest|0; src = src|0; num = num|0;
    var ret = 0;
    if (((src|0) < (dest|0)) & ((dest|0) < ((src + num)|0))) {
      // Unlikely case: Copy backwards in a safe manner
      ret = dest;
      src = (src + num)|0;
      dest = (dest + num)|0;
      while ((num|0) > 0) {
        dest = (dest - 1)|0;
        src = (src - 1)|0;
        num = (num - 1)|0;
        HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
      }
      dest = ret;
    } else {
      _memcpy(dest, src, num) | 0;
    }
    return dest | 0;
}
function _bitshift64Ashr(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = high >> bits;
      return (low >>> bits) | ((high&ander) << (32 - bits));
    }
    tempRet0 = (high|0) < 0 ? -1 : 0;
    return (high >> (bits - 32))|0;
  }
function _llvm_cttz_i32(x) {
    x = x|0;
    var ret = 0;
    ret = ((HEAP8[(((cttz_i8)+(x & 0xff))>>0)])|0);
    if ((ret|0) < 8) return ret|0;
    ret = ((HEAP8[(((cttz_i8)+((x >> 8)&0xff))>>0)])|0);
    if ((ret|0) < 8) return (ret + 8)|0;
    ret = ((HEAP8[(((cttz_i8)+((x >> 16)&0xff))>>0)])|0);
    if ((ret|0) < 8) return (ret + 16)|0;
    return (((HEAP8[(((cttz_i8)+(x >>> 24))>>0)])|0) + 24)|0;
  }

// ======== compiled code from system/lib/compiler-rt , see readme therein
function ___muldsi3($a, $b) {
  $a = $a | 0;
  $b = $b | 0;
  var $1 = 0, $2 = 0, $3 = 0, $6 = 0, $8 = 0, $11 = 0, $12 = 0;
  $1 = $a & 65535;
  $2 = $b & 65535;
  $3 = Math_imul($2, $1) | 0;
  $6 = $a >>> 16;
  $8 = ($3 >>> 16) + (Math_imul($2, $6) | 0) | 0;
  $11 = $b >>> 16;
  $12 = Math_imul($11, $1) | 0;
  return (tempRet0 = (($8 >>> 16) + (Math_imul($11, $6) | 0) | 0) + ((($8 & 65535) + $12 | 0) >>> 16) | 0, 0 | ($8 + $12 << 16 | $3 & 65535)) | 0;
}
function ___divdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $1$0 = 0, $1$1 = 0, $2$0 = 0, $2$1 = 0, $4$0 = 0, $4$1 = 0, $6$0 = 0, $7$0 = 0, $7$1 = 0, $8$0 = 0, $10$0 = 0;
  $1$0 = $a$1 >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $1$1 = (($a$1 | 0) < 0 ? -1 : 0) >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $2$0 = $b$1 >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $2$1 = (($b$1 | 0) < 0 ? -1 : 0) >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $4$0 = _i64Subtract($1$0 ^ $a$0, $1$1 ^ $a$1, $1$0, $1$1) | 0;
  $4$1 = tempRet0;
  $6$0 = _i64Subtract($2$0 ^ $b$0, $2$1 ^ $b$1, $2$0, $2$1) | 0;
  $7$0 = $2$0 ^ $1$0;
  $7$1 = $2$1 ^ $1$1;
  $8$0 = ___udivmoddi4($4$0, $4$1, $6$0, tempRet0, 0) | 0;
  $10$0 = _i64Subtract($8$0 ^ $7$0, tempRet0 ^ $7$1, $7$0, $7$1) | 0;
  return $10$0 | 0;
}
function ___remdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $rem = 0, $1$0 = 0, $1$1 = 0, $2$0 = 0, $2$1 = 0, $4$0 = 0, $4$1 = 0, $6$0 = 0, $10$0 = 0, $10$1 = 0, __stackBase__ = 0;
  __stackBase__ = STACKTOP;
  STACKTOP = STACKTOP + 16 | 0;
  $rem = __stackBase__ | 0;
  $1$0 = $a$1 >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $1$1 = (($a$1 | 0) < 0 ? -1 : 0) >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
  $2$0 = $b$1 >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $2$1 = (($b$1 | 0) < 0 ? -1 : 0) >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
  $4$0 = _i64Subtract($1$0 ^ $a$0, $1$1 ^ $a$1, $1$0, $1$1) | 0;
  $4$1 = tempRet0;
  $6$0 = _i64Subtract($2$0 ^ $b$0, $2$1 ^ $b$1, $2$0, $2$1) | 0;
  ___udivmoddi4($4$0, $4$1, $6$0, tempRet0, $rem) | 0;
  $10$0 = _i64Subtract(HEAP32[$rem >> 2] ^ $1$0, HEAP32[$rem + 4 >> 2] ^ $1$1, $1$0, $1$1) | 0;
  $10$1 = tempRet0;
  STACKTOP = __stackBase__;
  return (tempRet0 = $10$1, $10$0) | 0;
}
function ___muldi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $x_sroa_0_0_extract_trunc = 0, $y_sroa_0_0_extract_trunc = 0, $1$0 = 0, $1$1 = 0, $2 = 0;
  $x_sroa_0_0_extract_trunc = $a$0;
  $y_sroa_0_0_extract_trunc = $b$0;
  $1$0 = ___muldsi3($x_sroa_0_0_extract_trunc, $y_sroa_0_0_extract_trunc) | 0;
  $1$1 = tempRet0;
  $2 = Math_imul($a$1, $y_sroa_0_0_extract_trunc) | 0;
  return (tempRet0 = ((Math_imul($b$1, $x_sroa_0_0_extract_trunc) | 0) + $2 | 0) + $1$1 | $1$1 & 0, 0 | $1$0 & -1) | 0;
}
function ___udivdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $1$0 = 0;
  $1$0 = ___udivmoddi4($a$0, $a$1, $b$0, $b$1, 0) | 0;
  return $1$0 | 0;
}
function ___uremdi3($a$0, $a$1, $b$0, $b$1) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  var $rem = 0, __stackBase__ = 0;
  __stackBase__ = STACKTOP;
  STACKTOP = STACKTOP + 16 | 0;
  $rem = __stackBase__ | 0;
  ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) | 0;
  STACKTOP = __stackBase__;
  return (tempRet0 = HEAP32[$rem + 4 >> 2] | 0, HEAP32[$rem >> 2] | 0) | 0;
}
function ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) {
  $a$0 = $a$0 | 0;
  $a$1 = $a$1 | 0;
  $b$0 = $b$0 | 0;
  $b$1 = $b$1 | 0;
  $rem = $rem | 0;
  var $n_sroa_0_0_extract_trunc = 0, $n_sroa_1_4_extract_shift$0 = 0, $n_sroa_1_4_extract_trunc = 0, $d_sroa_0_0_extract_trunc = 0, $d_sroa_1_4_extract_shift$0 = 0, $d_sroa_1_4_extract_trunc = 0, $4 = 0, $17 = 0, $37 = 0, $49 = 0, $51 = 0, $57 = 0, $58 = 0, $66 = 0, $78 = 0, $86 = 0, $88 = 0, $89 = 0, $91 = 0, $92 = 0, $95 = 0, $105 = 0, $117 = 0, $119 = 0, $125 = 0, $126 = 0, $130 = 0, $q_sroa_1_1_ph = 0, $q_sroa_0_1_ph = 0, $r_sroa_1_1_ph = 0, $r_sroa_0_1_ph = 0, $sr_1_ph = 0, $d_sroa_0_0_insert_insert99$0 = 0, $d_sroa_0_0_insert_insert99$1 = 0, $137$0 = 0, $137$1 = 0, $carry_0203 = 0, $sr_1202 = 0, $r_sroa_0_1201 = 0, $r_sroa_1_1200 = 0, $q_sroa_0_1199 = 0, $q_sroa_1_1198 = 0, $147 = 0, $149 = 0, $r_sroa_0_0_insert_insert42$0 = 0, $r_sroa_0_0_insert_insert42$1 = 0, $150$1 = 0, $151$0 = 0, $152 = 0, $154$0 = 0, $r_sroa_0_0_extract_trunc = 0, $r_sroa_1_4_extract_trunc = 0, $155 = 0, $carry_0_lcssa$0 = 0, $carry_0_lcssa$1 = 0, $r_sroa_0_1_lcssa = 0, $r_sroa_1_1_lcssa = 0, $q_sroa_0_1_lcssa = 0, $q_sroa_1_1_lcssa = 0, $q_sroa_0_0_insert_ext75$0 = 0, $q_sroa_0_0_insert_ext75$1 = 0, $q_sroa_0_0_insert_insert77$1 = 0, $_0$0 = 0, $_0$1 = 0;
  $n_sroa_0_0_extract_trunc = $a$0;
  $n_sroa_1_4_extract_shift$0 = $a$1;
  $n_sroa_1_4_extract_trunc = $n_sroa_1_4_extract_shift$0;
  $d_sroa_0_0_extract_trunc = $b$0;
  $d_sroa_1_4_extract_shift$0 = $b$1;
  $d_sroa_1_4_extract_trunc = $d_sroa_1_4_extract_shift$0;
  if (($n_sroa_1_4_extract_trunc | 0) == 0) {
    $4 = ($rem | 0) != 0;
    if (($d_sroa_1_4_extract_trunc | 0) == 0) {
      if ($4) {
        HEAP32[$rem >> 2] = ($n_sroa_0_0_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
        HEAP32[$rem + 4 >> 2] = 0;
      }
      $_0$1 = 0;
      $_0$0 = ($n_sroa_0_0_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
      return (tempRet0 = $_0$1, $_0$0) | 0;
    } else {
      if (!$4) {
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      HEAP32[$rem >> 2] = $a$0 & -1;
      HEAP32[$rem + 4 >> 2] = $a$1 & 0;
      $_0$1 = 0;
      $_0$0 = 0;
      return (tempRet0 = $_0$1, $_0$0) | 0;
    }
  }
  $17 = ($d_sroa_1_4_extract_trunc | 0) == 0;
  do {
    if (($d_sroa_0_0_extract_trunc | 0) == 0) {
      if ($17) {
        if (($rem | 0) != 0) {
          HEAP32[$rem >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
          HEAP32[$rem + 4 >> 2] = 0;
        }
        $_0$1 = 0;
        $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      if (($n_sroa_0_0_extract_trunc | 0) == 0) {
        if (($rem | 0) != 0) {
          HEAP32[$rem >> 2] = 0;
          HEAP32[$rem + 4 >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_1_4_extract_trunc >>> 0);
        }
        $_0$1 = 0;
        $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_1_4_extract_trunc >>> 0) >>> 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      $37 = $d_sroa_1_4_extract_trunc - 1 | 0;
      if (($37 & $d_sroa_1_4_extract_trunc | 0) == 0) {
        if (($rem | 0) != 0) {
          HEAP32[$rem >> 2] = 0 | $a$0 & -1;
          HEAP32[$rem + 4 >> 2] = $37 & $n_sroa_1_4_extract_trunc | $a$1 & 0;
        }
        $_0$1 = 0;
        $_0$0 = $n_sroa_1_4_extract_trunc >>> ((_llvm_cttz_i32($d_sroa_1_4_extract_trunc | 0) | 0) >>> 0);
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      $49 = Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0;
      $51 = $49 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
      if ($51 >>> 0 <= 30) {
        $57 = $51 + 1 | 0;
        $58 = 31 - $51 | 0;
        $sr_1_ph = $57;
        $r_sroa_0_1_ph = $n_sroa_1_4_extract_trunc << $58 | $n_sroa_0_0_extract_trunc >>> ($57 >>> 0);
        $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($57 >>> 0);
        $q_sroa_0_1_ph = 0;
        $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $58;
        break;
      }
      if (($rem | 0) == 0) {
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      HEAP32[$rem >> 2] = 0 | $a$0 & -1;
      HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
      $_0$1 = 0;
      $_0$0 = 0;
      return (tempRet0 = $_0$1, $_0$0) | 0;
    } else {
      if (!$17) {
        $117 = Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0;
        $119 = $117 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
        if ($119 >>> 0 <= 31) {
          $125 = $119 + 1 | 0;
          $126 = 31 - $119 | 0;
          $130 = $119 - 31 >> 31;
          $sr_1_ph = $125;
          $r_sroa_0_1_ph = $n_sroa_0_0_extract_trunc >>> ($125 >>> 0) & $130 | $n_sroa_1_4_extract_trunc << $126;
          $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($125 >>> 0) & $130;
          $q_sroa_0_1_ph = 0;
          $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $126;
          break;
        }
        if (($rem | 0) == 0) {
          $_0$1 = 0;
          $_0$0 = 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        HEAP32[$rem >> 2] = 0 | $a$0 & -1;
        HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
      $66 = $d_sroa_0_0_extract_trunc - 1 | 0;
      if (($66 & $d_sroa_0_0_extract_trunc | 0) != 0) {
        $86 = (Math_clz32($d_sroa_0_0_extract_trunc | 0) | 0) + 33 | 0;
        $88 = $86 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
        $89 = 64 - $88 | 0;
        $91 = 32 - $88 | 0;
        $92 = $91 >> 31;
        $95 = $88 - 32 | 0;
        $105 = $95 >> 31;
        $sr_1_ph = $88;
        $r_sroa_0_1_ph = $91 - 1 >> 31 & $n_sroa_1_4_extract_trunc >>> ($95 >>> 0) | ($n_sroa_1_4_extract_trunc << $91 | $n_sroa_0_0_extract_trunc >>> ($88 >>> 0)) & $105;
        $r_sroa_1_1_ph = $105 & $n_sroa_1_4_extract_trunc >>> ($88 >>> 0);
        $q_sroa_0_1_ph = $n_sroa_0_0_extract_trunc << $89 & $92;
        $q_sroa_1_1_ph = ($n_sroa_1_4_extract_trunc << $89 | $n_sroa_0_0_extract_trunc >>> ($95 >>> 0)) & $92 | $n_sroa_0_0_extract_trunc << $91 & $88 - 33 >> 31;
        break;
      }
      if (($rem | 0) != 0) {
        HEAP32[$rem >> 2] = $66 & $n_sroa_0_0_extract_trunc;
        HEAP32[$rem + 4 >> 2] = 0;
      }
      if (($d_sroa_0_0_extract_trunc | 0) == 1) {
        $_0$1 = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
        $_0$0 = 0 | $a$0 & -1;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      } else {
        $78 = _llvm_cttz_i32($d_sroa_0_0_extract_trunc | 0) | 0;
        $_0$1 = 0 | $n_sroa_1_4_extract_trunc >>> ($78 >>> 0);
        $_0$0 = $n_sroa_1_4_extract_trunc << 32 - $78 | $n_sroa_0_0_extract_trunc >>> ($78 >>> 0) | 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
    }
  } while (0);
  if (($sr_1_ph | 0) == 0) {
    $q_sroa_1_1_lcssa = $q_sroa_1_1_ph;
    $q_sroa_0_1_lcssa = $q_sroa_0_1_ph;
    $r_sroa_1_1_lcssa = $r_sroa_1_1_ph;
    $r_sroa_0_1_lcssa = $r_sroa_0_1_ph;
    $carry_0_lcssa$1 = 0;
    $carry_0_lcssa$0 = 0;
  } else {
    $d_sroa_0_0_insert_insert99$0 = 0 | $b$0 & -1;
    $d_sroa_0_0_insert_insert99$1 = $d_sroa_1_4_extract_shift$0 | $b$1 & 0;
    $137$0 = _i64Add($d_sroa_0_0_insert_insert99$0 | 0, $d_sroa_0_0_insert_insert99$1 | 0, -1, -1) | 0;
    $137$1 = tempRet0;
    $q_sroa_1_1198 = $q_sroa_1_1_ph;
    $q_sroa_0_1199 = $q_sroa_0_1_ph;
    $r_sroa_1_1200 = $r_sroa_1_1_ph;
    $r_sroa_0_1201 = $r_sroa_0_1_ph;
    $sr_1202 = $sr_1_ph;
    $carry_0203 = 0;
    while (1) {
      $147 = $q_sroa_0_1199 >>> 31 | $q_sroa_1_1198 << 1;
      $149 = $carry_0203 | $q_sroa_0_1199 << 1;
      $r_sroa_0_0_insert_insert42$0 = 0 | ($r_sroa_0_1201 << 1 | $q_sroa_1_1198 >>> 31);
      $r_sroa_0_0_insert_insert42$1 = $r_sroa_0_1201 >>> 31 | $r_sroa_1_1200 << 1 | 0;
      _i64Subtract($137$0, $137$1, $r_sroa_0_0_insert_insert42$0, $r_sroa_0_0_insert_insert42$1) | 0;
      $150$1 = tempRet0;
      $151$0 = $150$1 >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1;
      $152 = $151$0 & 1;
      $154$0 = _i64Subtract($r_sroa_0_0_insert_insert42$0, $r_sroa_0_0_insert_insert42$1, $151$0 & $d_sroa_0_0_insert_insert99$0, ((($150$1 | 0) < 0 ? -1 : 0) >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1) & $d_sroa_0_0_insert_insert99$1) | 0;
      $r_sroa_0_0_extract_trunc = $154$0;
      $r_sroa_1_4_extract_trunc = tempRet0;
      $155 = $sr_1202 - 1 | 0;
      if (($155 | 0) == 0) {
        break;
      } else {
        $q_sroa_1_1198 = $147;
        $q_sroa_0_1199 = $149;
        $r_sroa_1_1200 = $r_sroa_1_4_extract_trunc;
        $r_sroa_0_1201 = $r_sroa_0_0_extract_trunc;
        $sr_1202 = $155;
        $carry_0203 = $152;
      }
    }
    $q_sroa_1_1_lcssa = $147;
    $q_sroa_0_1_lcssa = $149;
    $r_sroa_1_1_lcssa = $r_sroa_1_4_extract_trunc;
    $r_sroa_0_1_lcssa = $r_sroa_0_0_extract_trunc;
    $carry_0_lcssa$1 = 0;
    $carry_0_lcssa$0 = $152;
  }
  $q_sroa_0_0_insert_ext75$0 = $q_sroa_0_1_lcssa;
  $q_sroa_0_0_insert_ext75$1 = 0;
  $q_sroa_0_0_insert_insert77$1 = $q_sroa_1_1_lcssa | $q_sroa_0_0_insert_ext75$1;
  if (($rem | 0) != 0) {
    HEAP32[$rem >> 2] = 0 | $r_sroa_0_1_lcssa;
    HEAP32[$rem + 4 >> 2] = $r_sroa_1_1_lcssa | 0;
  }
  $_0$1 = (0 | $q_sroa_0_0_insert_ext75$0) >>> 31 | $q_sroa_0_0_insert_insert77$1 << 1 | ($q_sroa_0_0_insert_ext75$1 << 1 | $q_sroa_0_0_insert_ext75$0 >>> 31) & 0 | $carry_0_lcssa$1;
  $_0$0 = ($q_sroa_0_0_insert_ext75$0 << 1 | 0 >>> 31) & -2 | $carry_0_lcssa$0;
  return (tempRet0 = $_0$1, $_0$0) | 0;
}
// =======================================================================



  
function dynCall_iiiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0;
  return FUNCTION_TABLE_iiiiiiii[index&255](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0)|0;
}


function dynCall_iiii(index,a1,a2,a3) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0;
  return FUNCTION_TABLE_iiii[index&255](a1|0,a2|0,a3|0)|0;
}


function dynCall_i(index) {
  index = index|0;
  
  return FUNCTION_TABLE_i[index&127]()|0;
}


function dynCall_vi(index,a1) {
  index = index|0;
  a1=a1|0;
  FUNCTION_TABLE_vi[index&255](a1|0);
}


function dynCall_vii(index,a1,a2) {
  index = index|0;
  a1=a1|0; a2=a2|0;
  FUNCTION_TABLE_vii[index&255](a1|0,a2|0);
}


function dynCall_iiiiiii(index,a1,a2,a3,a4,a5,a6) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0;
  return FUNCTION_TABLE_iiiiiii[index&255](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0)|0;
}


function dynCall_ii(index,a1) {
  index = index|0;
  a1=a1|0;
  return FUNCTION_TABLE_ii[index&127](a1|0)|0;
}


function dynCall_viii(index,a1,a2,a3) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0;
  FUNCTION_TABLE_viii[index&255](a1|0,a2|0,a3|0);
}


function dynCall_viiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0; a8=a8|0;
  FUNCTION_TABLE_viiiiiiii[index&127](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0,a8|0);
}


function dynCall_v(index) {
  index = index|0;
  
  FUNCTION_TABLE_v[index&127]();
}


function dynCall_iiiii(index,a1,a2,a3,a4) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
  return FUNCTION_TABLE_iiiii[index&255](a1|0,a2|0,a3|0,a4|0)|0;
}


function dynCall_iii(index,a1,a2) {
  index = index|0;
  a1=a1|0; a2=a2|0;
  return FUNCTION_TABLE_iii[index&255](a1|0,a2|0)|0;
}


function dynCall_iiiiii(index,a1,a2,a3,a4,a5) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
  return FUNCTION_TABLE_iiiiii[index&0](a1|0,a2|0,a3|0,a4|0,a5|0)|0;
}


function dynCall_viiii(index,a1,a2,a3,a4) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
  FUNCTION_TABLE_viiii[index&0](a1|0,a2|0,a3|0,a4|0);
}

function b0(p0,p1,p2,p3,p4,p5,p6) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0; nullFunc_iiiiiiii(0);return 0;
}
function b1(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; nullFunc_iiii(1);return 0;
}
function b2() {
 ; nullFunc_i(2);return 0;
}
function b3(p0) {
 p0 = p0|0; nullFunc_vi(3);
}
function _exit__wrapper(p0) {
 p0 = p0|0; _exit(p0|0);
}
function b4(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_vii(4);
}
function b5(p0,p1,p2,p3,p4,p5) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0; nullFunc_iiiiiii(5);return 0;
}
function b6(p0) {
 p0 = p0|0; nullFunc_ii(6);return 0;
}
function _atexit__wrapper(p0) {
 p0 = p0|0; return _atexit(p0|0)|0;
}
function b7(p0,p1,p2) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0; nullFunc_viii(7);
}
function b8(p0,p1,p2,p3,p4,p5,p6,p7) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0;p7 = p7|0; nullFunc_viiiiiiii(8);
}
function b9() {
 ; nullFunc_v(9);
}
function b10(p0,p1,p2,p3) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; nullFunc_iiiii(10);return 0;
}
function b11(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_iii(11);return 0;
}
function b12(p0,p1,p2,p3,p4) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0; nullFunc_iiiiii(12);return 0;
}
function b13(p0,p1,p2,p3) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; nullFunc_viiii(13);
}

// EMSCRIPTEN_END_FUNCS
var FUNCTION_TABLE_iiiiiiii = [b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,__pop_routine_lex_arg,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,__pop_routine_fun_arg,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0];
var FUNCTION_TABLE_iiii = [b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,_sn_write,b1,___stdio_write,___stdio_seek,___stdio_read,___stdout_write,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,__is_a_class,b1,b1,__clone_clsss_field,__clone_class_meta_link,b1,b1,__gc_add_reachable,__add_class_meta_reachable,__reflect_class_field,b1,__standard_printer,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1];
var FUNCTION_TABLE_i = [b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,__do_line,b2,b2,b2,b2,b2,b2
,b2,b2,b2,b2,b2,b2,b2,b2,b2];
var FUNCTION_TABLE_vi = [b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,_exit__wrapper,b3,b3,b3,b3,b3,__push_mem,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,_cleanup521,_cleanup526,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3];
var FUNCTION_TABLE_vii = [b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,__unref_class,__unref_array
,__unref_list,b4,b4,b4,__unref_dict,b4,__unref_usertype_ref,__unref_routine,b4,b4,__unref_outer_scope,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4];
var FUNCTION_TABLE_iiiiiii = [b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,__on_prev_stepped,__on_post_stepped,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,__has_routine_lex_arg,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,__has_routine_fun_arg,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5];
var FUNCTION_TABLE_ii = [b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,___stdio_close,b6,b6,b6,b6,_atexit__wrapper,b6,b6,b6,b6,b6,b6,b6,__pop_mem,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6];
var FUNCTION_TABLE_viii = [b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,__gc_alive_marker,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7];
var FUNCTION_TABLE_viiiiiiii = [b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,__on_error,b8
,b8,b8,b8,b8,b8,b8,b8,b8,b8];
var FUNCTION_TABLE_v = [b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,__on_exit,b9,b9,__on_startup,b9,__show_tip,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9,b9,b9,b9,b9];
var FUNCTION_TABLE_iiiii = [b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,_mb_gets,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10];
var FUNCTION_TABLE_iii = [b11,__core_add,__core_min,__core_mul,__core_div,__core_mod,__core_pow,__core_open_bracket,__core_close_bracket,__core_dummy_assign,__core_greater,__core_less,__core_greater_equal,__core_less_equal,__core_equal,__core_not_equal,__core_and,__core_or,__core_not,__core_neg,__core_is,__core_let,__core_dim,__core_if,__core_then,__core_elseif,__core_else,__core_endif,__core_for
,__core_in,__core_to,__core_step,__core_next,__core_while,__core_wend,__core_do,__core_until,__core_exit,__core_goto,__core_gosub,__core_return,__core_call,__core_def,__core_enddef,__core_args,__core_class,__core_endclass,__core_new,__core_var,__core_reflect,__core_lambda,__core_mem,__core_type,__core_import,__core_end,__std_abs,__std_sgn,__std_sqr,__std_floor
,__std_ceil,__std_fix,__std_round,__std_srnd,__std_rnd,__std_sin,__std_cos,__std_tan,__std_asin,__std_acos,__std_atan,__std_exp,__std_log,__std_asc,__std_chr,__std_left,__std_mid,__std_right,__std_str,__std_val,__std_len,__std_get,__std_set,__std_print,__std_input,__coll_list,__coll_dict,__coll_push,__coll_pop,__coll_back
,__coll_insert,__coll_sort,__coll_exists,__coll_index_of,__coll_remove,__coll_clear,__coll_clone,__coll_to_array,__coll_iterator,__coll_move_next,b11,b11,b11,b11,b11,b11,b11,b11,_printf,b11,b11,__process_parameters,b11,b11,b11,b11,b11,b11,b11,__on_import
,_now,_os,_sys,_trace,_raise,_gc,_beep,__cmp_size_t,__ht_cmp_string,__ht_hash_string,__ls_free_extra,__ht_destroy_module_func_list,__ht_cmp_ref,__ht_hash_ref,__do_nothing_on_object,__destroy_object,__destroy_memory,__ls_cmp_data,__ht_cmp_intptr,__ht_hash_intptr,__ls_destroy_module_func,b11,__ls_cmp_module_func,__ls_cmp_extra_string,b11,b11,__remove_source_object,__destroy_object_not_compile_time,b11,b11
,b11,__ht_cmp_object,__ht_hash_object,__destroy_object_with_extra,b11,__ls_cmp_extra_object,b11,b11,b11,__ls_cmp_extra,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11];
var FUNCTION_TABLE_iiiiii = [b12];
var FUNCTION_TABLE_viiii = [b13];

  return { _testSetjmp: _testSetjmp, _saveSetjmp: _saveSetjmp, _free: _free, _main: _main, _realloc: _realloc, _i64Add: _i64Add, _memmove: _memmove, _i64Subtract: _i64Subtract, _memset: _memset, _malloc: _malloc, _memcpy: _memcpy, _bitshift64Lshr: _bitshift64Lshr, _fflush: _fflush, ___errno_location: ___errno_location, _bitshift64Shl: _bitshift64Shl, runPostSets: runPostSets, stackAlloc: stackAlloc, stackSave: stackSave, stackRestore: stackRestore, establishStackSpace: establishStackSpace, setThrew: setThrew, setTempRet0: setTempRet0, getTempRet0: getTempRet0, dynCall_iiiiiiii: dynCall_iiiiiiii, dynCall_iiii: dynCall_iiii, dynCall_i: dynCall_i, dynCall_vi: dynCall_vi, dynCall_vii: dynCall_vii, dynCall_iiiiiii: dynCall_iiiiiii, dynCall_ii: dynCall_ii, dynCall_viii: dynCall_viii, dynCall_viiiiiiii: dynCall_viiiiiiii, dynCall_v: dynCall_v, dynCall_iiiii: dynCall_iiiii, dynCall_iii: dynCall_iii, dynCall_iiiiii: dynCall_iiiiii, dynCall_viiii: dynCall_viiii };
})
// EMSCRIPTEN_END_ASM
(Module.asmGlobalArg, Module.asmLibraryArg, buffer);
var real__testSetjmp = asm["_testSetjmp"]; asm["_testSetjmp"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__testSetjmp.apply(null, arguments);
};

var real__saveSetjmp = asm["_saveSetjmp"]; asm["_saveSetjmp"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__saveSetjmp.apply(null, arguments);
};

var real__free = asm["_free"]; asm["_free"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__free.apply(null, arguments);
};

var real__main = asm["_main"]; asm["_main"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__main.apply(null, arguments);
};

var real__realloc = asm["_realloc"]; asm["_realloc"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__realloc.apply(null, arguments);
};

var real__i64Add = asm["_i64Add"]; asm["_i64Add"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__i64Add.apply(null, arguments);
};

var real__memmove = asm["_memmove"]; asm["_memmove"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__memmove.apply(null, arguments);
};

var real__i64Subtract = asm["_i64Subtract"]; asm["_i64Subtract"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__i64Subtract.apply(null, arguments);
};

var real__malloc = asm["_malloc"]; asm["_malloc"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__malloc.apply(null, arguments);
};

var real__bitshift64Lshr = asm["_bitshift64Lshr"]; asm["_bitshift64Lshr"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__bitshift64Lshr.apply(null, arguments);
};

var real__fflush = asm["_fflush"]; asm["_fflush"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__fflush.apply(null, arguments);
};

var real____errno_location = asm["___errno_location"]; asm["___errno_location"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real____errno_location.apply(null, arguments);
};

var real__bitshift64Shl = asm["_bitshift64Shl"]; asm["_bitshift64Shl"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__bitshift64Shl.apply(null, arguments);
};
var _testSetjmp = Module["_testSetjmp"] = asm["_testSetjmp"];
var _saveSetjmp = Module["_saveSetjmp"] = asm["_saveSetjmp"];
var _free = Module["_free"] = asm["_free"];
var _main = Module["_main"] = asm["_main"];
var _realloc = Module["_realloc"] = asm["_realloc"];
var _i64Add = Module["_i64Add"] = asm["_i64Add"];
var _memmove = Module["_memmove"] = asm["_memmove"];
var _i64Subtract = Module["_i64Subtract"] = asm["_i64Subtract"];
var _memset = Module["_memset"] = asm["_memset"];
var _malloc = Module["_malloc"] = asm["_malloc"];
var _memcpy = Module["_memcpy"] = asm["_memcpy"];
var _bitshift64Lshr = Module["_bitshift64Lshr"] = asm["_bitshift64Lshr"];
var _fflush = Module["_fflush"] = asm["_fflush"];
var runPostSets = Module["runPostSets"] = asm["runPostSets"];
var ___errno_location = Module["___errno_location"] = asm["___errno_location"];
var _bitshift64Shl = Module["_bitshift64Shl"] = asm["_bitshift64Shl"];
var dynCall_iiiiiiii = Module["dynCall_iiiiiiii"] = asm["dynCall_iiiiiiii"];
var dynCall_iiii = Module["dynCall_iiii"] = asm["dynCall_iiii"];
var dynCall_i = Module["dynCall_i"] = asm["dynCall_i"];
var dynCall_vi = Module["dynCall_vi"] = asm["dynCall_vi"];
var dynCall_vii = Module["dynCall_vii"] = asm["dynCall_vii"];
var dynCall_iiiiiii = Module["dynCall_iiiiiii"] = asm["dynCall_iiiiiii"];
var dynCall_ii = Module["dynCall_ii"] = asm["dynCall_ii"];
var dynCall_viii = Module["dynCall_viii"] = asm["dynCall_viii"];
var dynCall_viiiiiiii = Module["dynCall_viiiiiiii"] = asm["dynCall_viiiiiiii"];
var dynCall_v = Module["dynCall_v"] = asm["dynCall_v"];
var dynCall_iiiii = Module["dynCall_iiiii"] = asm["dynCall_iiiii"];
var dynCall_iii = Module["dynCall_iii"] = asm["dynCall_iii"];
var dynCall_iiiiii = Module["dynCall_iiiiii"] = asm["dynCall_iiiiii"];
var dynCall_viiii = Module["dynCall_viiii"] = asm["dynCall_viiii"];
;

Runtime.stackAlloc = asm['stackAlloc'];
Runtime.stackSave = asm['stackSave'];
Runtime.stackRestore = asm['stackRestore'];
Runtime.establishStackSpace = asm['establishStackSpace'];

Runtime.setTempRet0 = asm['setTempRet0'];
Runtime.getTempRet0 = asm['getTempRet0'];



// === Auto-generated postamble setup entry stuff ===


function ExitStatus(status) {
  this.name = "ExitStatus";
  this.message = "Program terminated with exit(" + status + ")";
  this.status = status;
};
ExitStatus.prototype = new Error();
ExitStatus.prototype.constructor = ExitStatus;

var initialStackTop;
var preloadStartTime = null;
var calledMain = false;

dependenciesFulfilled = function runCaller() {
  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)
  if (!Module['calledRun']) run();
  if (!Module['calledRun']) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled
}

Module['callMain'] = Module.callMain = function callMain(args) {
  assert(runDependencies == 0, 'cannot call main when async dependencies remain! (listen on __ATMAIN__)');
  assert(__ATPRERUN__.length == 0, 'cannot call main when preRun functions remain to be called');

  args = args || [];

  ensureInitRuntime();

  var argc = args.length+1;
  function pad() {
    for (var i = 0; i < 4-1; i++) {
      argv.push(0);
    }
  }
  var argv = [allocate(intArrayFromString(Module['thisProgram']), 'i8', ALLOC_NORMAL) ];
  pad();
  for (var i = 0; i < argc-1; i = i + 1) {
    argv.push(allocate(intArrayFromString(args[i]), 'i8', ALLOC_NORMAL));
    pad();
  }
  argv.push(0);
  argv = allocate(argv, 'i32', ALLOC_NORMAL);


  try {

    var ret = Module['_main'](argc, argv, 0);


    // if we're not running an evented main loop, it's time to exit
    exit(ret, /* implicit = */ true);
  }
  catch(e) {
    if (e instanceof ExitStatus) {
      // exit() throws this once it's done to make sure execution
      // has been stopped completely
      return;
    } else if (e == 'SimulateInfiniteLoop') {
      // running an evented main loop, don't immediately exit
      Module['noExitRuntime'] = true;
      return;
    } else {
      if (e && typeof e === 'object' && e.stack) Module.printErr('exception thrown: ' + [e, e.stack]);
      throw e;
    }
  } finally {
    calledMain = true;
  }
}




function run(args) {
  args = args || Module['arguments'];

  if (preloadStartTime === null) preloadStartTime = Date.now();

  if (runDependencies > 0) {
    Module.printErr('run() called, but dependencies remain, so not running');
    return;
  }

  preRun();

  if (runDependencies > 0) return; // a preRun added a dependency, run will be called later
  if (Module['calledRun']) return; // run may have just been called through dependencies being fulfilled just in this very frame

  function doRun() {
    if (Module['calledRun']) return; // run may have just been called while the async setStatus time below was happening
    Module['calledRun'] = true;

    if (ABORT) return; 

    ensureInitRuntime();

    preMain();

    if (ENVIRONMENT_IS_WEB && preloadStartTime !== null) {
      Module.printErr('pre-main prep time: ' + (Date.now() - preloadStartTime) + ' ms');
    }

    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();

    if (Module['_main'] && shouldRunNow) Module['callMain'](args);

    postRun();
  }

  if (Module['setStatus']) {
    Module['setStatus']('Running...');
    setTimeout(function() {
      setTimeout(function() {
        Module['setStatus']('');
      }, 1);
      doRun();
    }, 1);
  } else {
    doRun();
  }
}
Module['run'] = Module.run = run;

function exit(status, implicit) {
  if (implicit && Module['noExitRuntime']) {
    Module.printErr('exit(' + status + ') implicitly called by end of main(), but noExitRuntime, so not exiting the runtime (you can use emscripten_force_exit, if you want to force a true shutdown)');
    return;
  }

  if (Module['noExitRuntime']) {
    Module.printErr('exit(' + status + ') called, but noExitRuntime, so halting execution but not exiting the runtime or preventing further async execution (you can use emscripten_force_exit, if you want to force a true shutdown)');
  } else {

    ABORT = true;
    EXITSTATUS = status;
    STACKTOP = initialStackTop;

    exitRuntime();

    if (Module['onExit']) Module['onExit'](status);
  }

  if (ENVIRONMENT_IS_NODE) {
    // Work around a node.js bug where stdout buffer is not flushed at process exit:
    // Instead of process.exit() directly, wait for stdout flush event.
    // See https://github.com/joyent/node/issues/1669 and https://github.com/kripken/emscripten/issues/2582
    // Workaround is based on https://github.com/RReverser/acorn/commit/50ab143cecc9ed71a2d66f78b4aec3bb2e9844f6
    process['stdout']['once']('drain', function () {
      process['exit'](status);
    });
    console.log(' '); // Make sure to print something to force the drain event to occur, in case the stdout buffer was empty.
    // Work around another node bug where sometimes 'drain' is never fired - make another effort
    // to emit the exit status, after a significant delay (if node hasn't fired drain by then, give up)
    setTimeout(function() {
      process['exit'](status);
    }, 500);
  } else
  if (ENVIRONMENT_IS_SHELL && typeof quit === 'function') {
    quit(status);
  }
  // if we reach here, we must throw an exception to halt the current execution
  throw new ExitStatus(status);
}
Module['exit'] = Module.exit = exit;

var abortDecorators = [];

function abort(what) {
  if (what !== undefined) {
    Module.print(what);
    Module.printErr(what);
    what = JSON.stringify(what)
  } else {
    what = '';
  }

  ABORT = true;
  EXITSTATUS = 1;

  var extra = '';

  var output = 'abort(' + what + ') at ' + stackTrace() + extra;
  if (abortDecorators) {
    abortDecorators.forEach(function(decorator) {
      output = decorator(output, what);
    });
  }
  throw output;
}
Module['abort'] = Module.abort = abort;

// {{PRE_RUN_ADDITIONS}}

if (Module['preInit']) {
  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];
  while (Module['preInit'].length > 0) {
    Module['preInit'].pop()();
  }
}

// shouldRunNow refers to calling main(), not run().
var shouldRunNow = true;
if (Module['noInitialRun']) {
  shouldRunNow = false;
}


run();

// {{POST_RUN_ADDITIONS}}






// {{MODULE_ADDITIONS}}



